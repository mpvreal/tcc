; ModuleID = 'LocalReduce/Norm4Functions.c'
source_filename = "LocalReduce/Norm4Functions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [29 x i8] c"LocalReduce/Norm4Functions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5522 [
    i32 101, label %22
    i32 102, label %631
    i32 103, label %1243
    i32 104, label %1852
    i32 105, label %2466
    i32 106, label %3078
    i32 107, label %3691
    i32 108, label %4300
    i32 109, label %4913
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !12
  %30 = mul i8 %29, %29
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !12
  br label %5522

32:                                               ; preds = %22
  switch i32 %1, label %629 [
    i32 1, label %33
    i32 0, label %335
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !6
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5522

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5522

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !6
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !13

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !6
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !17

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !6
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !18

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !19
  %134 = getelementptr inbounds i8, ptr %24, i64 %131
  %135 = load i8, ptr %134, align 1, !tbaa !12
  %136 = load i8, ptr %26, align 1, !tbaa !12
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %133, %138
  %140 = fmul fast double %139, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !12
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !6
  %148 = load i32, ptr %12, align 4, !tbaa !6
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %154, ptr %6, align 4, !tbaa !6
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !6
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !6
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !6
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !21

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !6
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !6
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5522, label %56, !llvm.loop !23

195:                                              ; preds = %39, %333
  %196 = phi i32 [ 0, %39 ], [ %282, %333 ]
  %197 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !6
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !6
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !24

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !6
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !25

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !6
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !26

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds i8, ptr %24, i64 %273
  %275 = load i8, ptr %274, align 1, !tbaa !12
  %276 = load i8, ptr %26, align 1, !tbaa !12
  %277 = zext i8 %275 to i64
  %278 = mul nuw nsw i64 %277, %277
  %279 = mul nuw nsw i64 %278, %278
  %280 = trunc i64 %279 to i8
  %281 = add i8 %276, %280
  store i8 %281, ptr %26, align 1, !tbaa !12
  %282 = add nuw nsw i32 %196, 1
  br i1 %41, label %283, label %333

283:                                              ; preds = %272
  %284 = load i32, ptr %4, align 4, !tbaa !6
  %285 = load i32, ptr %12, align 4, !tbaa !6
  %286 = add nsw i32 %285, -1
  %287 = icmp slt i32 %284, %286
  br i1 %287, label %310, label %288

288:                                              ; preds = %283
  %289 = icmp eq i32 %284, %286
  br i1 %289, label %290, label %326

290:                                              ; preds = %288
  store i32 0, ptr %4, align 4, !tbaa !6
  %291 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %291, ptr %6, align 4, !tbaa !6
  br i1 %46, label %333, label %292

292:                                              ; preds = %290, %320
  %293 = phi i64 [ %324, %320 ], [ 1, %290 ]
  %294 = getelementptr inbounds i32, ptr %4, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !6
  %296 = getelementptr inbounds i32, ptr %12, i64 %293
  %297 = load i32, ptr %296, align 4, !tbaa !6
  %298 = add nsw i32 %297, -1
  %299 = icmp slt i32 %295, %298
  br i1 %299, label %300, label %318

300:                                              ; preds = %292
  br i1 %287, label %310, label %301

301:                                              ; preds = %300
  %302 = shl i64 %293, 32
  %303 = add i64 %302, -4294967296
  %304 = ashr exact i64 %303, 32
  %305 = getelementptr inbounds i32, ptr %7, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !6
  %307 = getelementptr inbounds i32, ptr %6, i64 %293
  %308 = load i32, ptr %307, align 4, !tbaa !6
  %309 = add nsw i32 %308, %306
  store i32 %309, ptr %307, align 4, !tbaa !6
  br label %328

310:                                              ; preds = %283, %300
  %311 = phi i32 [ %295, %300 ], [ %284, %283 ]
  %312 = phi ptr [ %294, %300 ], [ %4, %283 ]
  %313 = phi i64 [ %293, %300 ], [ 0, %283 ]
  %314 = add nsw i32 %311, 1
  store i32 %314, ptr %312, align 4, !tbaa !6
  %315 = getelementptr inbounds i32, ptr %7, i64 %313
  %316 = load i32, ptr %315, align 4, !tbaa !6
  %317 = getelementptr inbounds i32, ptr %6, i64 %313
  br label %328

318:                                              ; preds = %292
  %319 = icmp eq i32 %295, %298
  br i1 %319, label %320, label %326

320:                                              ; preds = %318
  store i32 0, ptr %294, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %8, i64 %293
  %322 = load i32, ptr %321, align 4, !tbaa !6
  %323 = getelementptr inbounds i32, ptr %6, i64 %293
  store i32 %322, ptr %323, align 4, !tbaa !6
  %324 = add nuw nsw i64 %293, 1
  %325 = icmp eq i64 %324, %44
  br i1 %325, label %333, label %292, !llvm.loop !27

326:                                              ; preds = %288, %318
  %327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

328:                                              ; preds = %301, %310
  %329 = phi ptr [ %317, %310 ], [ %294, %301 ]
  %330 = phi i32 [ %316, %310 ], [ 1, %301 ]
  %331 = load i32, ptr %329, align 4, !tbaa !6
  %332 = add nsw i32 %331, %330
  store i32 %332, ptr %329, align 4, !tbaa !6
  br label %333

333:                                              ; preds = %320, %328, %290, %272
  %334 = icmp eq i32 %282, %5
  br i1 %334, label %5522, label %195, !llvm.loop !28

335:                                              ; preds = %32
  %336 = getelementptr inbounds i32, ptr %3, i64 %19
  %337 = load i32, ptr %336, align 4, !tbaa !6
  %338 = icmp eq i32 %337, 0
  %339 = icmp sgt i32 %5, 0
  br i1 %338, label %349, label %340

340:                                              ; preds = %335
  br i1 %339, label %341, label %5522

341:                                              ; preds = %340
  %342 = icmp sgt i32 %13, 1
  %343 = icmp sgt i32 %13, 0
  %344 = add i32 %13, -2
  %345 = zext i32 %344 to i64
  %346 = zext i32 %13 to i64
  %347 = add nuw i32 %5, 1
  %348 = icmp eq i32 %13, 1
  br label %491

349:                                              ; preds = %335
  br i1 %339, label %350, label %5522

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %358

358:                                              ; preds = %350, %489
  %359 = phi i32 [ 0, %350 ], [ %441, %489 ]
  %360 = phi double [ 0.000000e+00, %350 ], [ %440, %489 ]
  %361 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %351, label %362, label %431

362:                                              ; preds = %358, %421
  %363 = phi i32 [ %430, %421 ], [ 0, %358 ]
  %364 = phi i64 [ %372, %421 ], [ %355, %358 ]
  %365 = phi i64 [ %429, %421 ], [ %354, %358 ]
  %366 = phi i32 [ %427, %421 ], [ %361, %358 ]
  %367 = sub i32 %353, %363
  %368 = tail call i32 @llvm.smin.i32(i32 %367, i32 0)
  %369 = sub i32 %367, %368
  %370 = zext i32 %369 to i64
  %371 = add nuw nsw i64 %370, 1
  %372 = add nsw i64 %364, -1
  %373 = icmp ult i32 %369, 31
  br i1 %373, label %409, label %374

374:                                              ; preds = %362
  %375 = and i64 %371, 8589934560
  %376 = sub i64 %365, %375
  br label %377

377:                                              ; preds = %377, %374
  %378 = phi i64 [ 0, %374 ], [ %401, %377 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %397, %377 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %398, %377 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %399, %377 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %400, %377 ]
  %383 = sub i64 %365, %378
  %384 = getelementptr inbounds i32, ptr %9, i64 %383
  %385 = getelementptr inbounds i32, ptr %384, i64 -7
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !6
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %384, i64 -15
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %384, i64 -23
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %384, i64 -31
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = mul <8 x i32> %387, %379
  %398 = mul <8 x i32> %390, %380
  %399 = mul <8 x i32> %393, %381
  %400 = mul <8 x i32> %396, %382
  %401 = add nuw i64 %378, 32
  %402 = icmp eq i64 %401, %375
  br i1 %402, label %403, label %377, !llvm.loop !29

403:                                              ; preds = %377
  %404 = mul <8 x i32> %398, %397
  %405 = mul <8 x i32> %399, %404
  %406 = mul <8 x i32> %400, %405
  %407 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %406)
  %408 = icmp eq i64 %371, %375
  br i1 %408, label %421, label %409

409:                                              ; preds = %362, %403
  %410 = phi i64 [ %365, %362 ], [ %376, %403 ]
  %411 = phi i32 [ 1, %362 ], [ %407, %403 ]
  br label %412

412:                                              ; preds = %409, %412
  %413 = phi i64 [ %418, %412 ], [ %410, %409 ]
  %414 = phi i32 [ %417, %412 ], [ %411, %409 ]
  %415 = getelementptr inbounds i32, ptr %9, i64 %413
  %416 = load i32, ptr %415, align 4, !tbaa !6
  %417 = mul nsw i32 %416, %414
  %418 = add nsw i64 %413, -1
  %419 = trunc i64 %413 to i32
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %412, label %421, !llvm.loop !30

421:                                              ; preds = %412, %403
  %422 = phi i32 [ %407, %403 ], [ %417, %412 ]
  %423 = and i64 %372, 4294967295
  %424 = getelementptr inbounds i32, ptr %6, i64 %423
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = mul nsw i32 %425, %422
  %427 = add nsw i32 %426, %366
  %428 = icmp sgt i64 %364, 2
  %429 = add nsw i64 %365, -1
  %430 = add i32 %363, 1
  br i1 %428, label %362, label %431, !llvm.loop !31

431:                                              ; preds = %421, %358
  %432 = phi i32 [ %361, %358 ], [ %427, %421 ]
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, ptr %24, i64 %433
  %435 = load i8, ptr %434, align 1, !tbaa !12
  %436 = load i8, ptr %26, align 1, !tbaa !12
  %437 = mul i8 %435, %435
  %438 = mul i8 %437, %437
  %439 = add i8 %438, %436
  store i8 %439, ptr %26, align 1, !tbaa !12
  %440 = fadd fast double %360, 1.000000e+00
  %441 = add nuw nsw i32 %359, 1
  br i1 %352, label %442, label %489

442:                                              ; preds = %431
  %443 = load i32, ptr %4, align 4, !tbaa !6
  %444 = load i32, ptr %12, align 4, !tbaa !6
  %445 = add nsw i32 %444, -1
  %446 = icmp slt i32 %443, %445
  br i1 %446, label %466, label %447

447:                                              ; preds = %442
  %448 = icmp eq i32 %443, %445
  br i1 %448, label %449, label %482

449:                                              ; preds = %447
  store i32 0, ptr %4, align 4, !tbaa !6
  %450 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %450, ptr %6, align 4, !tbaa !6
  br i1 %357, label %489, label %451

451:                                              ; preds = %449, %476
  %452 = phi i64 [ %480, %476 ], [ 1, %449 ]
  %453 = getelementptr inbounds i32, ptr %4, i64 %452
  %454 = load i32, ptr %453, align 4, !tbaa !6
  %455 = getelementptr inbounds i32, ptr %12, i64 %452
  %456 = load i32, ptr %455, align 4, !tbaa !6
  %457 = add nsw i32 %456, -1
  %458 = icmp slt i32 %454, %457
  br i1 %458, label %459, label %474

459:                                              ; preds = %451
  br i1 %446, label %466, label %460

460:                                              ; preds = %459
  %461 = getelementptr inbounds i32, ptr %7, i64 %452
  %462 = load i32, ptr %461, align 4, !tbaa !6
  %463 = getelementptr inbounds i32, ptr %6, i64 %452
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = add nsw i32 %464, %462
  store i32 %465, ptr %463, align 4, !tbaa !6
  br label %484

466:                                              ; preds = %442, %459
  %467 = phi i32 [ %454, %459 ], [ %443, %442 ]
  %468 = phi ptr [ %453, %459 ], [ %4, %442 ]
  %469 = phi i64 [ %452, %459 ], [ 0, %442 ]
  %470 = add nsw i32 %467, 1
  store i32 %470, ptr %468, align 4, !tbaa !6
  %471 = getelementptr inbounds i32, ptr %7, i64 %469
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %469
  br label %484

474:                                              ; preds = %451
  %475 = icmp eq i32 %454, %457
  br i1 %475, label %476, label %482

476:                                              ; preds = %474
  store i32 0, ptr %453, align 4, !tbaa !6
  %477 = getelementptr inbounds i32, ptr %8, i64 %452
  %478 = load i32, ptr %477, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %6, i64 %452
  store i32 %478, ptr %479, align 4, !tbaa !6
  %480 = add nuw nsw i64 %452, 1
  %481 = icmp eq i64 %480, %355
  br i1 %481, label %489, label %451, !llvm.loop !32

482:                                              ; preds = %447, %474
  %483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

484:                                              ; preds = %460, %466
  %485 = phi ptr [ %473, %466 ], [ %453, %460 ]
  %486 = phi i32 [ %472, %466 ], [ 1, %460 ]
  %487 = load i32, ptr %485, align 4, !tbaa !6
  %488 = add nsw i32 %487, %486
  store i32 %488, ptr %485, align 4, !tbaa !6
  br label %489

489:                                              ; preds = %476, %484, %449, %431
  %490 = icmp eq i32 %441, %5
  br i1 %490, label %5522, label %358, !llvm.loop !33

491:                                              ; preds = %341, %627
  %492 = phi i32 [ 0, %341 ], [ %576, %627 ]
  %493 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %342, label %494, label %563

494:                                              ; preds = %491, %553
  %495 = phi i32 [ %562, %553 ], [ 0, %491 ]
  %496 = phi i64 [ %504, %553 ], [ %346, %491 ]
  %497 = phi i64 [ %561, %553 ], [ %345, %491 ]
  %498 = phi i32 [ %559, %553 ], [ %493, %491 ]
  %499 = sub i32 %344, %495
  %500 = tail call i32 @llvm.smin.i32(i32 %499, i32 0)
  %501 = sub i32 %499, %500
  %502 = zext i32 %501 to i64
  %503 = add nuw nsw i64 %502, 1
  %504 = add nsw i64 %496, -1
  %505 = icmp ult i32 %501, 31
  br i1 %505, label %541, label %506

506:                                              ; preds = %494
  %507 = and i64 %503, 8589934560
  %508 = sub i64 %497, %507
  br label %509

509:                                              ; preds = %509, %506
  %510 = phi i64 [ 0, %506 ], [ %533, %509 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %529, %509 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %530, %509 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %531, %509 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %532, %509 ]
  %515 = sub i64 %497, %510
  %516 = getelementptr inbounds i32, ptr %11, i64 %515
  %517 = getelementptr inbounds i32, ptr %516, i64 -7
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !6
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %516, i64 -15
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !6
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %516, i64 -23
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !6
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %516, i64 -31
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !6
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = mul <8 x i32> %519, %511
  %530 = mul <8 x i32> %522, %512
  %531 = mul <8 x i32> %525, %513
  %532 = mul <8 x i32> %528, %514
  %533 = add nuw i64 %510, 32
  %534 = icmp eq i64 %533, %507
  br i1 %534, label %535, label %509, !llvm.loop !34

535:                                              ; preds = %509
  %536 = mul <8 x i32> %530, %529
  %537 = mul <8 x i32> %531, %536
  %538 = mul <8 x i32> %532, %537
  %539 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %538)
  %540 = icmp eq i64 %503, %507
  br i1 %540, label %553, label %541

541:                                              ; preds = %494, %535
  %542 = phi i64 [ %497, %494 ], [ %508, %535 ]
  %543 = phi i32 [ 1, %494 ], [ %539, %535 ]
  br label %544

544:                                              ; preds = %541, %544
  %545 = phi i64 [ %550, %544 ], [ %542, %541 ]
  %546 = phi i32 [ %549, %544 ], [ %543, %541 ]
  %547 = getelementptr inbounds i32, ptr %11, i64 %545
  %548 = load i32, ptr %547, align 4, !tbaa !6
  %549 = mul nsw i32 %548, %546
  %550 = add nsw i64 %545, -1
  %551 = trunc i64 %545 to i32
  %552 = icmp sgt i32 %551, 0
  br i1 %552, label %544, label %553, !llvm.loop !35

553:                                              ; preds = %544, %535
  %554 = phi i32 [ %539, %535 ], [ %549, %544 ]
  %555 = and i64 %504, 4294967295
  %556 = getelementptr inbounds i32, ptr %6, i64 %555
  %557 = load i32, ptr %556, align 4, !tbaa !6
  %558 = mul nsw i32 %557, %554
  %559 = add nsw i32 %558, %498
  %560 = icmp sgt i64 %496, 2
  %561 = add nsw i64 %497, -1
  %562 = add i32 %495, 1
  br i1 %560, label %494, label %563, !llvm.loop !36

563:                                              ; preds = %553, %491
  %564 = phi i32 [ %493, %491 ], [ %559, %553 ]
  %565 = icmp slt i32 %564, %5
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

568:                                              ; preds = %563
  %569 = sext i32 %564 to i64
  %570 = getelementptr inbounds i8, ptr %24, i64 %569
  %571 = load i8, ptr %570, align 1, !tbaa !12
  %572 = load i8, ptr %26, align 1, !tbaa !12
  %573 = mul i8 %571, %571
  %574 = mul i8 %573, %573
  %575 = add i8 %574, %572
  store i8 %575, ptr %26, align 1, !tbaa !12
  %576 = add nuw nsw i32 %492, 1
  br i1 %343, label %577, label %627

577:                                              ; preds = %568
  %578 = load i32, ptr %4, align 4, !tbaa !6
  %579 = load i32, ptr %12, align 4, !tbaa !6
  %580 = add nsw i32 %579, -1
  %581 = icmp slt i32 %578, %580
  br i1 %581, label %604, label %582

582:                                              ; preds = %577
  %583 = icmp eq i32 %578, %580
  br i1 %583, label %584, label %620

584:                                              ; preds = %582
  store i32 0, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %585, ptr %6, align 4, !tbaa !6
  br i1 %348, label %627, label %586

586:                                              ; preds = %584, %614
  %587 = phi i64 [ %618, %614 ], [ 1, %584 ]
  %588 = getelementptr inbounds i32, ptr %4, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !6
  %590 = getelementptr inbounds i32, ptr %12, i64 %587
  %591 = load i32, ptr %590, align 4, !tbaa !6
  %592 = add nsw i32 %591, -1
  %593 = icmp slt i32 %589, %592
  br i1 %593, label %594, label %612

594:                                              ; preds = %586
  br i1 %581, label %604, label %595

595:                                              ; preds = %594
  %596 = shl i64 %587, 32
  %597 = add i64 %596, -4294967296
  %598 = ashr exact i64 %597, 32
  %599 = getelementptr inbounds i32, ptr %7, i64 %598
  %600 = load i32, ptr %599, align 4, !tbaa !6
  %601 = getelementptr inbounds i32, ptr %6, i64 %587
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = add nsw i32 %602, %600
  store i32 %603, ptr %601, align 4, !tbaa !6
  br label %622

604:                                              ; preds = %577, %594
  %605 = phi i32 [ %589, %594 ], [ %578, %577 ]
  %606 = phi ptr [ %588, %594 ], [ %4, %577 ]
  %607 = phi i64 [ %587, %594 ], [ 0, %577 ]
  %608 = add nsw i32 %605, 1
  store i32 %608, ptr %606, align 4, !tbaa !6
  %609 = getelementptr inbounds i32, ptr %7, i64 %607
  %610 = load i32, ptr %609, align 4, !tbaa !6
  %611 = getelementptr inbounds i32, ptr %6, i64 %607
  br label %622

612:                                              ; preds = %586
  %613 = icmp eq i32 %589, %592
  br i1 %613, label %614, label %620

614:                                              ; preds = %612
  store i32 0, ptr %588, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %8, i64 %587
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %587
  store i32 %616, ptr %617, align 4, !tbaa !6
  %618 = add nuw nsw i64 %587, 1
  %619 = icmp eq i64 %618, %346
  br i1 %619, label %627, label %586, !llvm.loop !37

620:                                              ; preds = %582, %612
  %621 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

622:                                              ; preds = %595, %604
  %623 = phi ptr [ %611, %604 ], [ %588, %595 ]
  %624 = phi i32 [ %610, %604 ], [ 1, %595 ]
  %625 = load i32, ptr %623, align 4, !tbaa !6
  %626 = add nsw i32 %625, %624
  store i32 %626, ptr %623, align 4, !tbaa !6
  br label %627

627:                                              ; preds = %614, %622, %584, %568
  %628 = icmp eq i32 %576, %5
  br i1 %628, label %5522, label %491, !llvm.loop !38

629:                                              ; preds = %32
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

631:                                              ; preds = %18
  %632 = getelementptr inbounds ptr, ptr %14, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !10
  %634 = getelementptr inbounds ptr, ptr %16, i64 %19
  %635 = load ptr, ptr %634, align 8, !tbaa !10
  store i32 0, ptr %635, align 4, !tbaa !6
  %636 = icmp eq i32 %13, 0
  br i1 %636, label %637, label %642

637:                                              ; preds = %631
  %638 = load i8, ptr %633, align 1, !tbaa !12
  %639 = zext i8 %638 to i32
  %640 = mul nuw nsw i32 %639, %639
  %641 = mul nuw i32 %640, %640
  store i32 %641, ptr %635, align 4, !tbaa !6
  br label %5522

642:                                              ; preds = %631
  switch i32 %1, label %1241 [
    i32 1, label %643
    i32 0, label %945
  ]

643:                                              ; preds = %642
  %644 = getelementptr inbounds i32, ptr %3, i64 %19
  %645 = load i32, ptr %644, align 4, !tbaa !6
  %646 = icmp eq i32 %645, 0
  %647 = icmp sgt i32 %5, 0
  br i1 %646, label %657, label %648

648:                                              ; preds = %643
  br i1 %647, label %649, label %5522

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %805

657:                                              ; preds = %643
  br i1 %647, label %658, label %5522

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %666

666:                                              ; preds = %658, %803
  %667 = phi i32 [ 0, %658 ], [ %755, %803 ]
  %668 = phi double [ 0.000000e+00, %658 ], [ %754, %803 ]
  %669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %670, label %739

670:                                              ; preds = %666, %729
  %671 = phi i32 [ %738, %729 ], [ 0, %666 ]
  %672 = phi i64 [ %680, %729 ], [ %663, %666 ]
  %673 = phi i64 [ %737, %729 ], [ %662, %666 ]
  %674 = phi i32 [ %735, %729 ], [ %669, %666 ]
  %675 = sub i32 %661, %671
  %676 = tail call i32 @llvm.smin.i32(i32 %675, i32 0)
  %677 = sub i32 %675, %676
  %678 = zext i32 %677 to i64
  %679 = add nuw nsw i64 %678, 1
  %680 = add nsw i64 %672, -1
  %681 = icmp ult i32 %677, 31
  br i1 %681, label %717, label %682

682:                                              ; preds = %670
  %683 = and i64 %679, 8589934560
  %684 = sub i64 %673, %683
  br label %685

685:                                              ; preds = %685, %682
  %686 = phi i64 [ 0, %682 ], [ %709, %685 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %705, %685 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %706, %685 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %707, %685 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %708, %685 ]
  %691 = sub i64 %673, %686
  %692 = getelementptr inbounds i32, ptr %9, i64 %691
  %693 = getelementptr inbounds i32, ptr %692, i64 -7
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !6
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %692, i64 -15
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !6
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %692, i64 -23
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %692, i64 -31
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = mul <8 x i32> %695, %687
  %706 = mul <8 x i32> %698, %688
  %707 = mul <8 x i32> %701, %689
  %708 = mul <8 x i32> %704, %690
  %709 = add nuw i64 %686, 32
  %710 = icmp eq i64 %709, %683
  br i1 %710, label %711, label %685, !llvm.loop !39

711:                                              ; preds = %685
  %712 = mul <8 x i32> %706, %705
  %713 = mul <8 x i32> %707, %712
  %714 = mul <8 x i32> %708, %713
  %715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %714)
  %716 = icmp eq i64 %679, %683
  br i1 %716, label %729, label %717

717:                                              ; preds = %670, %711
  %718 = phi i64 [ %673, %670 ], [ %684, %711 ]
  %719 = phi i32 [ 1, %670 ], [ %715, %711 ]
  br label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %726, %720 ], [ %718, %717 ]
  %722 = phi i32 [ %725, %720 ], [ %719, %717 ]
  %723 = getelementptr inbounds i32, ptr %9, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !6
  %725 = mul nsw i32 %724, %722
  %726 = add nsw i64 %721, -1
  %727 = trunc i64 %721 to i32
  %728 = icmp sgt i32 %727, 0
  br i1 %728, label %720, label %729, !llvm.loop !40

729:                                              ; preds = %720, %711
  %730 = phi i32 [ %715, %711 ], [ %725, %720 ]
  %731 = and i64 %680, 4294967295
  %732 = getelementptr inbounds i32, ptr %6, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %730
  %735 = add nsw i32 %734, %674
  %736 = icmp sgt i64 %672, 2
  %737 = add nsw i64 %673, -1
  %738 = add i32 %671, 1
  br i1 %736, label %670, label %739, !llvm.loop !41

739:                                              ; preds = %729, %666
  %740 = phi i32 [ %669, %666 ], [ %735, %729 ]
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds double, ptr %2, i64 %741
  %743 = load double, ptr %742, align 8, !tbaa !19
  %744 = getelementptr inbounds i8, ptr %633, i64 %741
  %745 = load i8, ptr %744, align 1, !tbaa !12
  %746 = load i32, ptr %635, align 4, !tbaa !6
  %747 = sitofp i32 %746 to double
  %748 = uitofp i8 %745 to double
  %749 = fmul fast double %743, %748
  %750 = fmul fast double %749, %749
  %751 = fmul fast double %750, %750
  %752 = fadd fast double %751, %747
  %753 = fptosi double %752 to i32
  store i32 %753, ptr %635, align 4, !tbaa !6
  %754 = fadd fast double %743, %668
  %755 = add nuw nsw i32 %667, 1
  br i1 %660, label %756, label %803

756:                                              ; preds = %739
  %757 = load i32, ptr %4, align 4, !tbaa !6
  %758 = load i32, ptr %12, align 4, !tbaa !6
  %759 = add nsw i32 %758, -1
  %760 = icmp slt i32 %757, %759
  br i1 %760, label %780, label %761

761:                                              ; preds = %756
  %762 = icmp eq i32 %757, %759
  br i1 %762, label %763, label %796

763:                                              ; preds = %761
  store i32 0, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %764, ptr %6, align 4, !tbaa !6
  br i1 %665, label %803, label %765

765:                                              ; preds = %763, %790
  %766 = phi i64 [ %794, %790 ], [ 1, %763 ]
  %767 = getelementptr inbounds i32, ptr %4, i64 %766
  %768 = load i32, ptr %767, align 4, !tbaa !6
  %769 = getelementptr inbounds i32, ptr %12, i64 %766
  %770 = load i32, ptr %769, align 4, !tbaa !6
  %771 = add nsw i32 %770, -1
  %772 = icmp slt i32 %768, %771
  br i1 %772, label %773, label %788

773:                                              ; preds = %765
  br i1 %760, label %780, label %774

774:                                              ; preds = %773
  %775 = getelementptr inbounds i32, ptr %7, i64 %766
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = getelementptr inbounds i32, ptr %6, i64 %766
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = add nsw i32 %778, %776
  store i32 %779, ptr %777, align 4, !tbaa !6
  br label %798

780:                                              ; preds = %756, %773
  %781 = phi i32 [ %768, %773 ], [ %757, %756 ]
  %782 = phi ptr [ %767, %773 ], [ %4, %756 ]
  %783 = phi i64 [ %766, %773 ], [ 0, %756 ]
  %784 = add nsw i32 %781, 1
  store i32 %784, ptr %782, align 4, !tbaa !6
  %785 = getelementptr inbounds i32, ptr %7, i64 %783
  %786 = load i32, ptr %785, align 4, !tbaa !6
  %787 = getelementptr inbounds i32, ptr %6, i64 %783
  br label %798

788:                                              ; preds = %765
  %789 = icmp eq i32 %768, %771
  br i1 %789, label %790, label %796

790:                                              ; preds = %788
  store i32 0, ptr %767, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %8, i64 %766
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %766
  store i32 %792, ptr %793, align 4, !tbaa !6
  %794 = add nuw nsw i64 %766, 1
  %795 = icmp eq i64 %794, %663
  br i1 %795, label %803, label %765, !llvm.loop !42

796:                                              ; preds = %761, %788
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

798:                                              ; preds = %774, %780
  %799 = phi ptr [ %787, %780 ], [ %767, %774 ]
  %800 = phi i32 [ %786, %780 ], [ 1, %774 ]
  %801 = load i32, ptr %799, align 4, !tbaa !6
  %802 = add nsw i32 %801, %800
  store i32 %802, ptr %799, align 4, !tbaa !6
  br label %803

803:                                              ; preds = %790, %798, %763, %739
  %804 = icmp eq i32 %755, %5
  br i1 %804, label %5522, label %666, !llvm.loop !43

805:                                              ; preds = %649, %943
  %806 = phi i32 [ 0, %649 ], [ %892, %943 ]
  %807 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %650, label %808, label %877

808:                                              ; preds = %805, %867
  %809 = phi i32 [ %876, %867 ], [ 0, %805 ]
  %810 = phi i64 [ %818, %867 ], [ %654, %805 ]
  %811 = phi i64 [ %875, %867 ], [ %653, %805 ]
  %812 = phi i32 [ %873, %867 ], [ %807, %805 ]
  %813 = sub i32 %652, %809
  %814 = tail call i32 @llvm.smin.i32(i32 %813, i32 0)
  %815 = sub i32 %813, %814
  %816 = zext i32 %815 to i64
  %817 = add nuw nsw i64 %816, 1
  %818 = add nsw i64 %810, -1
  %819 = icmp ult i32 %815, 31
  br i1 %819, label %855, label %820

820:                                              ; preds = %808
  %821 = and i64 %817, 8589934560
  %822 = sub i64 %811, %821
  br label %823

823:                                              ; preds = %823, %820
  %824 = phi i64 [ 0, %820 ], [ %847, %823 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %843, %823 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %844, %823 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %845, %823 ]
  %828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %846, %823 ]
  %829 = sub i64 %811, %824
  %830 = getelementptr inbounds i32, ptr %11, i64 %829
  %831 = getelementptr inbounds i32, ptr %830, i64 -7
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !6
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %830, i64 -15
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !6
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %830, i64 -23
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %830, i64 -31
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = mul <8 x i32> %833, %825
  %844 = mul <8 x i32> %836, %826
  %845 = mul <8 x i32> %839, %827
  %846 = mul <8 x i32> %842, %828
  %847 = add nuw i64 %824, 32
  %848 = icmp eq i64 %847, %821
  br i1 %848, label %849, label %823, !llvm.loop !44

849:                                              ; preds = %823
  %850 = mul <8 x i32> %844, %843
  %851 = mul <8 x i32> %845, %850
  %852 = mul <8 x i32> %846, %851
  %853 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %852)
  %854 = icmp eq i64 %817, %821
  br i1 %854, label %867, label %855

855:                                              ; preds = %808, %849
  %856 = phi i64 [ %811, %808 ], [ %822, %849 ]
  %857 = phi i32 [ 1, %808 ], [ %853, %849 ]
  br label %858

858:                                              ; preds = %855, %858
  %859 = phi i64 [ %864, %858 ], [ %856, %855 ]
  %860 = phi i32 [ %863, %858 ], [ %857, %855 ]
  %861 = getelementptr inbounds i32, ptr %11, i64 %859
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = mul nsw i32 %862, %860
  %864 = add nsw i64 %859, -1
  %865 = trunc i64 %859 to i32
  %866 = icmp sgt i32 %865, 0
  br i1 %866, label %858, label %867, !llvm.loop !45

867:                                              ; preds = %858, %849
  %868 = phi i32 [ %853, %849 ], [ %863, %858 ]
  %869 = and i64 %818, 4294967295
  %870 = getelementptr inbounds i32, ptr %6, i64 %869
  %871 = load i32, ptr %870, align 4, !tbaa !6
  %872 = mul nsw i32 %871, %868
  %873 = add nsw i32 %872, %812
  %874 = icmp sgt i64 %810, 2
  %875 = add nsw i64 %811, -1
  %876 = add i32 %809, 1
  br i1 %874, label %808, label %877, !llvm.loop !46

877:                                              ; preds = %867, %805
  %878 = phi i32 [ %807, %805 ], [ %873, %867 ]
  %879 = icmp slt i32 %878, %5
  br i1 %879, label %882, label %880

880:                                              ; preds = %877
  %881 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

882:                                              ; preds = %877
  %883 = sext i32 %878 to i64
  %884 = getelementptr inbounds i8, ptr %633, i64 %883
  %885 = load i8, ptr %884, align 1, !tbaa !12
  %886 = load i32, ptr %635, align 4, !tbaa !6
  %887 = zext i8 %885 to i64
  %888 = mul nuw nsw i64 %887, %887
  %889 = mul nuw nsw i64 %888, %888
  %890 = trunc i64 %889 to i32
  %891 = add i32 %886, %890
  store i32 %891, ptr %635, align 4, !tbaa !6
  %892 = add nuw nsw i32 %806, 1
  br i1 %651, label %893, label %943

893:                                              ; preds = %882
  %894 = load i32, ptr %4, align 4, !tbaa !6
  %895 = load i32, ptr %12, align 4, !tbaa !6
  %896 = add nsw i32 %895, -1
  %897 = icmp slt i32 %894, %896
  br i1 %897, label %920, label %898

898:                                              ; preds = %893
  %899 = icmp eq i32 %894, %896
  br i1 %899, label %900, label %936

900:                                              ; preds = %898
  store i32 0, ptr %4, align 4, !tbaa !6
  %901 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %901, ptr %6, align 4, !tbaa !6
  br i1 %656, label %943, label %902

902:                                              ; preds = %900, %930
  %903 = phi i64 [ %934, %930 ], [ 1, %900 ]
  %904 = getelementptr inbounds i32, ptr %4, i64 %903
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = getelementptr inbounds i32, ptr %12, i64 %903
  %907 = load i32, ptr %906, align 4, !tbaa !6
  %908 = add nsw i32 %907, -1
  %909 = icmp slt i32 %905, %908
  br i1 %909, label %910, label %928

910:                                              ; preds = %902
  br i1 %897, label %920, label %911

911:                                              ; preds = %910
  %912 = shl i64 %903, 32
  %913 = add i64 %912, -4294967296
  %914 = ashr exact i64 %913, 32
  %915 = getelementptr inbounds i32, ptr %7, i64 %914
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = getelementptr inbounds i32, ptr %6, i64 %903
  %918 = load i32, ptr %917, align 4, !tbaa !6
  %919 = add nsw i32 %918, %916
  store i32 %919, ptr %917, align 4, !tbaa !6
  br label %938

920:                                              ; preds = %893, %910
  %921 = phi i32 [ %905, %910 ], [ %894, %893 ]
  %922 = phi ptr [ %904, %910 ], [ %4, %893 ]
  %923 = phi i64 [ %903, %910 ], [ 0, %893 ]
  %924 = add nsw i32 %921, 1
  store i32 %924, ptr %922, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %7, i64 %923
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = getelementptr inbounds i32, ptr %6, i64 %923
  br label %938

928:                                              ; preds = %902
  %929 = icmp eq i32 %905, %908
  br i1 %929, label %930, label %936

930:                                              ; preds = %928
  store i32 0, ptr %904, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %8, i64 %903
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %6, i64 %903
  store i32 %932, ptr %933, align 4, !tbaa !6
  %934 = add nuw nsw i64 %903, 1
  %935 = icmp eq i64 %934, %654
  br i1 %935, label %943, label %902, !llvm.loop !47

936:                                              ; preds = %898, %928
  %937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

938:                                              ; preds = %911, %920
  %939 = phi ptr [ %927, %920 ], [ %904, %911 ]
  %940 = phi i32 [ %926, %920 ], [ 1, %911 ]
  %941 = load i32, ptr %939, align 4, !tbaa !6
  %942 = add nsw i32 %941, %940
  store i32 %942, ptr %939, align 4, !tbaa !6
  br label %943

943:                                              ; preds = %930, %938, %900, %882
  %944 = icmp eq i32 %892, %5
  br i1 %944, label %5522, label %805, !llvm.loop !48

945:                                              ; preds = %642
  %946 = getelementptr inbounds i32, ptr %3, i64 %19
  %947 = load i32, ptr %946, align 4, !tbaa !6
  %948 = icmp eq i32 %947, 0
  %949 = icmp sgt i32 %5, 0
  br i1 %948, label %959, label %950

950:                                              ; preds = %945
  br i1 %949, label %951, label %5522

951:                                              ; preds = %950
  %952 = icmp sgt i32 %13, 1
  %953 = icmp sgt i32 %13, 0
  %954 = add i32 %13, -2
  %955 = zext i32 %954 to i64
  %956 = zext i32 %13 to i64
  %957 = add nuw i32 %5, 1
  %958 = icmp eq i32 %13, 1
  br label %1102

959:                                              ; preds = %945
  br i1 %949, label %960, label %5522

960:                                              ; preds = %959
  %961 = icmp sgt i32 %13, 1
  %962 = icmp sgt i32 %13, 0
  %963 = add i32 %13, -2
  %964 = zext i32 %963 to i64
  %965 = zext i32 %13 to i64
  %966 = add nuw i32 %5, 1
  %967 = icmp eq i32 %13, 1
  br label %968

968:                                              ; preds = %960, %1100
  %969 = phi i32 [ 0, %960 ], [ %1052, %1100 ]
  %970 = phi double [ 0.000000e+00, %960 ], [ %1051, %1100 ]
  %971 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %961, label %972, label %1041

972:                                              ; preds = %968, %1031
  %973 = phi i32 [ %1040, %1031 ], [ 0, %968 ]
  %974 = phi i64 [ %982, %1031 ], [ %965, %968 ]
  %975 = phi i64 [ %1039, %1031 ], [ %964, %968 ]
  %976 = phi i32 [ %1037, %1031 ], [ %971, %968 ]
  %977 = sub i32 %963, %973
  %978 = tail call i32 @llvm.smin.i32(i32 %977, i32 0)
  %979 = sub i32 %977, %978
  %980 = zext i32 %979 to i64
  %981 = add nuw nsw i64 %980, 1
  %982 = add nsw i64 %974, -1
  %983 = icmp ult i32 %979, 31
  br i1 %983, label %1019, label %984

984:                                              ; preds = %972
  %985 = and i64 %981, 8589934560
  %986 = sub i64 %975, %985
  br label %987

987:                                              ; preds = %987, %984
  %988 = phi i64 [ 0, %984 ], [ %1011, %987 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1007, %987 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1008, %987 ]
  %991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1009, %987 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1010, %987 ]
  %993 = sub i64 %975, %988
  %994 = getelementptr inbounds i32, ptr %9, i64 %993
  %995 = getelementptr inbounds i32, ptr %994, i64 -7
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !6
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %994, i64 -15
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !6
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %994, i64 -23
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = getelementptr inbounds i32, ptr %994, i64 -31
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = mul <8 x i32> %997, %989
  %1008 = mul <8 x i32> %1000, %990
  %1009 = mul <8 x i32> %1003, %991
  %1010 = mul <8 x i32> %1006, %992
  %1011 = add nuw i64 %988, 32
  %1012 = icmp eq i64 %1011, %985
  br i1 %1012, label %1013, label %987, !llvm.loop !49

1013:                                             ; preds = %987
  %1014 = mul <8 x i32> %1008, %1007
  %1015 = mul <8 x i32> %1009, %1014
  %1016 = mul <8 x i32> %1010, %1015
  %1017 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1016)
  %1018 = icmp eq i64 %981, %985
  br i1 %1018, label %1031, label %1019

1019:                                             ; preds = %972, %1013
  %1020 = phi i64 [ %975, %972 ], [ %986, %1013 ]
  %1021 = phi i32 [ 1, %972 ], [ %1017, %1013 ]
  br label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i64 [ %1028, %1022 ], [ %1020, %1019 ]
  %1024 = phi i32 [ %1027, %1022 ], [ %1021, %1019 ]
  %1025 = getelementptr inbounds i32, ptr %9, i64 %1023
  %1026 = load i32, ptr %1025, align 4, !tbaa !6
  %1027 = mul nsw i32 %1026, %1024
  %1028 = add nsw i64 %1023, -1
  %1029 = trunc i64 %1023 to i32
  %1030 = icmp sgt i32 %1029, 0
  br i1 %1030, label %1022, label %1031, !llvm.loop !50

1031:                                             ; preds = %1022, %1013
  %1032 = phi i32 [ %1017, %1013 ], [ %1027, %1022 ]
  %1033 = and i64 %982, 4294967295
  %1034 = getelementptr inbounds i32, ptr %6, i64 %1033
  %1035 = load i32, ptr %1034, align 4, !tbaa !6
  %1036 = mul nsw i32 %1035, %1032
  %1037 = add nsw i32 %1036, %976
  %1038 = icmp sgt i64 %974, 2
  %1039 = add nsw i64 %975, -1
  %1040 = add i32 %973, 1
  br i1 %1038, label %972, label %1041, !llvm.loop !51

1041:                                             ; preds = %1031, %968
  %1042 = phi i32 [ %971, %968 ], [ %1037, %1031 ]
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds i8, ptr %633, i64 %1043
  %1045 = load i8, ptr %1044, align 1, !tbaa !12
  %1046 = zext i8 %1045 to i32
  %1047 = load i32, ptr %635, align 4, !tbaa !6
  %1048 = mul nuw nsw i32 %1046, %1046
  %1049 = mul nuw i32 %1048, %1048
  %1050 = add nsw i32 %1049, %1047
  store i32 %1050, ptr %635, align 4, !tbaa !6
  %1051 = fadd fast double %970, 1.000000e+00
  %1052 = add nuw nsw i32 %969, 1
  br i1 %962, label %1053, label %1100

1053:                                             ; preds = %1041
  %1054 = load i32, ptr %4, align 4, !tbaa !6
  %1055 = load i32, ptr %12, align 4, !tbaa !6
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1054, %1056
  br i1 %1057, label %1077, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp eq i32 %1054, %1056
  br i1 %1059, label %1060, label %1093

1060:                                             ; preds = %1058
  store i32 0, ptr %4, align 4, !tbaa !6
  %1061 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1061, ptr %6, align 4, !tbaa !6
  br i1 %967, label %1100, label %1062

1062:                                             ; preds = %1060, %1087
  %1063 = phi i64 [ %1091, %1087 ], [ 1, %1060 ]
  %1064 = getelementptr inbounds i32, ptr %4, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !6
  %1066 = getelementptr inbounds i32, ptr %12, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1065, %1068
  br i1 %1069, label %1070, label %1085

1070:                                             ; preds = %1062
  br i1 %1057, label %1077, label %1071

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1063
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1063
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, %1073
  store i32 %1076, ptr %1074, align 4, !tbaa !6
  br label %1095

1077:                                             ; preds = %1053, %1070
  %1078 = phi i32 [ %1065, %1070 ], [ %1054, %1053 ]
  %1079 = phi ptr [ %1064, %1070 ], [ %4, %1053 ]
  %1080 = phi i64 [ %1063, %1070 ], [ 0, %1053 ]
  %1081 = add nsw i32 %1078, 1
  store i32 %1081, ptr %1079, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %7, i64 %1080
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1080
  br label %1095

1085:                                             ; preds = %1062
  %1086 = icmp eq i32 %1065, %1068
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1085
  store i32 0, ptr %1064, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %8, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1063
  store i32 %1089, ptr %1090, align 4, !tbaa !6
  %1091 = add nuw nsw i64 %1063, 1
  %1092 = icmp eq i64 %1091, %965
  br i1 %1092, label %1100, label %1062, !llvm.loop !52

1093:                                             ; preds = %1058, %1085
  %1094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1095:                                             ; preds = %1071, %1077
  %1096 = phi ptr [ %1084, %1077 ], [ %1064, %1071 ]
  %1097 = phi i32 [ %1083, %1077 ], [ 1, %1071 ]
  %1098 = load i32, ptr %1096, align 4, !tbaa !6
  %1099 = add nsw i32 %1098, %1097
  store i32 %1099, ptr %1096, align 4, !tbaa !6
  br label %1100

1100:                                             ; preds = %1087, %1095, %1060, %1041
  %1101 = icmp eq i32 %1052, %5
  br i1 %1101, label %5522, label %968, !llvm.loop !53

1102:                                             ; preds = %951, %1239
  %1103 = phi i32 [ 0, %951 ], [ %1188, %1239 ]
  %1104 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %952, label %1105, label %1174

1105:                                             ; preds = %1102, %1164
  %1106 = phi i32 [ %1173, %1164 ], [ 0, %1102 ]
  %1107 = phi i64 [ %1115, %1164 ], [ %956, %1102 ]
  %1108 = phi i64 [ %1172, %1164 ], [ %955, %1102 ]
  %1109 = phi i32 [ %1170, %1164 ], [ %1104, %1102 ]
  %1110 = sub i32 %954, %1106
  %1111 = tail call i32 @llvm.smin.i32(i32 %1110, i32 0)
  %1112 = sub i32 %1110, %1111
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1113, 1
  %1115 = add nsw i64 %1107, -1
  %1116 = icmp ult i32 %1112, 31
  br i1 %1116, label %1152, label %1117

1117:                                             ; preds = %1105
  %1118 = and i64 %1114, 8589934560
  %1119 = sub i64 %1108, %1118
  br label %1120

1120:                                             ; preds = %1120, %1117
  %1121 = phi i64 [ 0, %1117 ], [ %1144, %1120 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1140, %1120 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1141, %1120 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1142, %1120 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1143, %1120 ]
  %1126 = sub i64 %1108, %1121
  %1127 = getelementptr inbounds i32, ptr %11, i64 %1126
  %1128 = getelementptr inbounds i32, ptr %1127, i64 -7
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !6
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1127, i64 -15
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !6
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1127, i64 -23
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !6
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1127, i64 -31
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !6
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = mul <8 x i32> %1130, %1122
  %1141 = mul <8 x i32> %1133, %1123
  %1142 = mul <8 x i32> %1136, %1124
  %1143 = mul <8 x i32> %1139, %1125
  %1144 = add nuw i64 %1121, 32
  %1145 = icmp eq i64 %1144, %1118
  br i1 %1145, label %1146, label %1120, !llvm.loop !54

1146:                                             ; preds = %1120
  %1147 = mul <8 x i32> %1141, %1140
  %1148 = mul <8 x i32> %1142, %1147
  %1149 = mul <8 x i32> %1143, %1148
  %1150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1149)
  %1151 = icmp eq i64 %1114, %1118
  br i1 %1151, label %1164, label %1152

1152:                                             ; preds = %1105, %1146
  %1153 = phi i64 [ %1108, %1105 ], [ %1119, %1146 ]
  %1154 = phi i32 [ 1, %1105 ], [ %1150, %1146 ]
  br label %1155

1155:                                             ; preds = %1152, %1155
  %1156 = phi i64 [ %1161, %1155 ], [ %1153, %1152 ]
  %1157 = phi i32 [ %1160, %1155 ], [ %1154, %1152 ]
  %1158 = getelementptr inbounds i32, ptr %11, i64 %1156
  %1159 = load i32, ptr %1158, align 4, !tbaa !6
  %1160 = mul nsw i32 %1159, %1157
  %1161 = add nsw i64 %1156, -1
  %1162 = trunc i64 %1156 to i32
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1155, label %1164, !llvm.loop !55

1164:                                             ; preds = %1155, %1146
  %1165 = phi i32 [ %1150, %1146 ], [ %1160, %1155 ]
  %1166 = and i64 %1115, 4294967295
  %1167 = getelementptr inbounds i32, ptr %6, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !6
  %1169 = mul nsw i32 %1168, %1165
  %1170 = add nsw i32 %1169, %1109
  %1171 = icmp sgt i64 %1107, 2
  %1172 = add nsw i64 %1108, -1
  %1173 = add i32 %1106, 1
  br i1 %1171, label %1105, label %1174, !llvm.loop !56

1174:                                             ; preds = %1164, %1102
  %1175 = phi i32 [ %1104, %1102 ], [ %1170, %1164 ]
  %1176 = icmp slt i32 %1175, %5
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1174
  %1178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1179:                                             ; preds = %1174
  %1180 = sext i32 %1175 to i64
  %1181 = getelementptr inbounds i8, ptr %633, i64 %1180
  %1182 = load i8, ptr %1181, align 1, !tbaa !12
  %1183 = zext i8 %1182 to i32
  %1184 = load i32, ptr %635, align 4, !tbaa !6
  %1185 = mul nuw nsw i32 %1183, %1183
  %1186 = mul nuw i32 %1185, %1185
  %1187 = add nsw i32 %1186, %1184
  store i32 %1187, ptr %635, align 4, !tbaa !6
  %1188 = add nuw nsw i32 %1103, 1
  br i1 %953, label %1189, label %1239

1189:                                             ; preds = %1179
  %1190 = load i32, ptr %4, align 4, !tbaa !6
  %1191 = load i32, ptr %12, align 4, !tbaa !6
  %1192 = add nsw i32 %1191, -1
  %1193 = icmp slt i32 %1190, %1192
  br i1 %1193, label %1216, label %1194

1194:                                             ; preds = %1189
  %1195 = icmp eq i32 %1190, %1192
  br i1 %1195, label %1196, label %1232

1196:                                             ; preds = %1194
  store i32 0, ptr %4, align 4, !tbaa !6
  %1197 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1197, ptr %6, align 4, !tbaa !6
  br i1 %958, label %1239, label %1198

1198:                                             ; preds = %1196, %1226
  %1199 = phi i64 [ %1230, %1226 ], [ 1, %1196 ]
  %1200 = getelementptr inbounds i32, ptr %4, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !6
  %1202 = getelementptr inbounds i32, ptr %12, i64 %1199
  %1203 = load i32, ptr %1202, align 4, !tbaa !6
  %1204 = add nsw i32 %1203, -1
  %1205 = icmp slt i32 %1201, %1204
  br i1 %1205, label %1206, label %1224

1206:                                             ; preds = %1198
  br i1 %1193, label %1216, label %1207

1207:                                             ; preds = %1206
  %1208 = shl i64 %1199, 32
  %1209 = add i64 %1208, -4294967296
  %1210 = ashr exact i64 %1209, 32
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1210
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1199
  %1214 = load i32, ptr %1213, align 4, !tbaa !6
  %1215 = add nsw i32 %1214, %1212
  store i32 %1215, ptr %1213, align 4, !tbaa !6
  br label %1234

1216:                                             ; preds = %1189, %1206
  %1217 = phi i32 [ %1201, %1206 ], [ %1190, %1189 ]
  %1218 = phi ptr [ %1200, %1206 ], [ %4, %1189 ]
  %1219 = phi i64 [ %1199, %1206 ], [ 0, %1189 ]
  %1220 = add nsw i32 %1217, 1
  store i32 %1220, ptr %1218, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %7, i64 %1219
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1219
  br label %1234

1224:                                             ; preds = %1198
  %1225 = icmp eq i32 %1201, %1204
  br i1 %1225, label %1226, label %1232

1226:                                             ; preds = %1224
  store i32 0, ptr %1200, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %8, i64 %1199
  %1228 = load i32, ptr %1227, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %6, i64 %1199
  store i32 %1228, ptr %1229, align 4, !tbaa !6
  %1230 = add nuw nsw i64 %1199, 1
  %1231 = icmp eq i64 %1230, %956
  br i1 %1231, label %1239, label %1198, !llvm.loop !57

1232:                                             ; preds = %1194, %1224
  %1233 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1234:                                             ; preds = %1207, %1216
  %1235 = phi ptr [ %1223, %1216 ], [ %1200, %1207 ]
  %1236 = phi i32 [ %1222, %1216 ], [ 1, %1207 ]
  %1237 = load i32, ptr %1235, align 4, !tbaa !6
  %1238 = add nsw i32 %1237, %1236
  store i32 %1238, ptr %1235, align 4, !tbaa !6
  br label %1239

1239:                                             ; preds = %1226, %1234, %1196, %1179
  %1240 = icmp eq i32 %1188, %5
  br i1 %1240, label %5522, label %1102, !llvm.loop !58

1241:                                             ; preds = %642
  %1242 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

1243:                                             ; preds = %18
  %1244 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !10
  %1246 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1247 = load ptr, ptr %1246, align 8, !tbaa !10
  store i8 0, ptr %1247, align 1, !tbaa !12
  %1248 = icmp eq i32 %13, 0
  br i1 %1248, label %1249, label %1253

1249:                                             ; preds = %1243
  %1250 = load i8, ptr %1245, align 1, !tbaa !12
  %1251 = mul i8 %1250, %1250
  %1252 = mul i8 %1251, %1251
  store i8 %1252, ptr %1247, align 1, !tbaa !12
  br label %5522

1253:                                             ; preds = %1243
  switch i32 %1, label %1850 [
    i32 1, label %1254
    i32 0, label %1556
  ]

1254:                                             ; preds = %1253
  %1255 = getelementptr inbounds i32, ptr %3, i64 %19
  %1256 = load i32, ptr %1255, align 4, !tbaa !6
  %1257 = icmp eq i32 %1256, 0
  %1258 = icmp sgt i32 %5, 0
  br i1 %1257, label %1268, label %1259

1259:                                             ; preds = %1254
  br i1 %1258, label %1260, label %5522

1260:                                             ; preds = %1259
  %1261 = icmp sgt i32 %13, 1
  %1262 = icmp sgt i32 %13, 0
  %1263 = add i32 %13, -2
  %1264 = zext i32 %1263 to i64
  %1265 = zext i32 %13 to i64
  %1266 = add nuw i32 %5, 1
  %1267 = icmp eq i32 %13, 1
  br label %1416

1268:                                             ; preds = %1254
  br i1 %1258, label %1269, label %5522

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1277

1277:                                             ; preds = %1269, %1414
  %1278 = phi i32 [ 0, %1269 ], [ %1366, %1414 ]
  %1279 = phi double [ 0.000000e+00, %1269 ], [ %1365, %1414 ]
  %1280 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1270, label %1281, label %1350

1281:                                             ; preds = %1277, %1340
  %1282 = phi i32 [ %1349, %1340 ], [ 0, %1277 ]
  %1283 = phi i64 [ %1291, %1340 ], [ %1274, %1277 ]
  %1284 = phi i64 [ %1348, %1340 ], [ %1273, %1277 ]
  %1285 = phi i32 [ %1346, %1340 ], [ %1280, %1277 ]
  %1286 = sub i32 %1272, %1282
  %1287 = tail call i32 @llvm.smin.i32(i32 %1286, i32 0)
  %1288 = sub i32 %1286, %1287
  %1289 = zext i32 %1288 to i64
  %1290 = add nuw nsw i64 %1289, 1
  %1291 = add nsw i64 %1283, -1
  %1292 = icmp ult i32 %1288, 31
  br i1 %1292, label %1328, label %1293

1293:                                             ; preds = %1281
  %1294 = and i64 %1290, 8589934560
  %1295 = sub i64 %1284, %1294
  br label %1296

1296:                                             ; preds = %1296, %1293
  %1297 = phi i64 [ 0, %1293 ], [ %1320, %1296 ]
  %1298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1293 ], [ %1316, %1296 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1293 ], [ %1317, %1296 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1293 ], [ %1318, %1296 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1293 ], [ %1319, %1296 ]
  %1302 = sub i64 %1284, %1297
  %1303 = getelementptr inbounds i32, ptr %9, i64 %1302
  %1304 = getelementptr inbounds i32, ptr %1303, i64 -7
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !6
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1303, i64 -15
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !6
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = getelementptr inbounds i32, ptr %1303, i64 -23
  %1311 = load <8 x i32>, ptr %1310, align 4, !tbaa !6
  %1312 = shufflevector <8 x i32> %1311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1313 = getelementptr inbounds i32, ptr %1303, i64 -31
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !6
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = mul <8 x i32> %1306, %1298
  %1317 = mul <8 x i32> %1309, %1299
  %1318 = mul <8 x i32> %1312, %1300
  %1319 = mul <8 x i32> %1315, %1301
  %1320 = add nuw i64 %1297, 32
  %1321 = icmp eq i64 %1320, %1294
  br i1 %1321, label %1322, label %1296, !llvm.loop !59

1322:                                             ; preds = %1296
  %1323 = mul <8 x i32> %1317, %1316
  %1324 = mul <8 x i32> %1318, %1323
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1325)
  %1327 = icmp eq i64 %1290, %1294
  br i1 %1327, label %1340, label %1328

1328:                                             ; preds = %1281, %1322
  %1329 = phi i64 [ %1284, %1281 ], [ %1295, %1322 ]
  %1330 = phi i32 [ 1, %1281 ], [ %1326, %1322 ]
  br label %1331

1331:                                             ; preds = %1328, %1331
  %1332 = phi i64 [ %1337, %1331 ], [ %1329, %1328 ]
  %1333 = phi i32 [ %1336, %1331 ], [ %1330, %1328 ]
  %1334 = getelementptr inbounds i32, ptr %9, i64 %1332
  %1335 = load i32, ptr %1334, align 4, !tbaa !6
  %1336 = mul nsw i32 %1335, %1333
  %1337 = add nsw i64 %1332, -1
  %1338 = trunc i64 %1332 to i32
  %1339 = icmp sgt i32 %1338, 0
  br i1 %1339, label %1331, label %1340, !llvm.loop !60

1340:                                             ; preds = %1331, %1322
  %1341 = phi i32 [ %1326, %1322 ], [ %1336, %1331 ]
  %1342 = and i64 %1291, 4294967295
  %1343 = getelementptr inbounds i32, ptr %6, i64 %1342
  %1344 = load i32, ptr %1343, align 4, !tbaa !6
  %1345 = mul nsw i32 %1344, %1341
  %1346 = add nsw i32 %1345, %1285
  %1347 = icmp sgt i64 %1283, 2
  %1348 = add nsw i64 %1284, -1
  %1349 = add i32 %1282, 1
  br i1 %1347, label %1281, label %1350, !llvm.loop !61

1350:                                             ; preds = %1340, %1277
  %1351 = phi i32 [ %1280, %1277 ], [ %1346, %1340 ]
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds double, ptr %2, i64 %1352
  %1354 = load double, ptr %1353, align 8, !tbaa !19
  %1355 = getelementptr inbounds i8, ptr %1245, i64 %1352
  %1356 = load i8, ptr %1355, align 1, !tbaa !12
  %1357 = load i8, ptr %1247, align 1, !tbaa !12
  %1358 = sitofp i8 %1357 to double
  %1359 = sitofp i8 %1356 to double
  %1360 = fmul fast double %1354, %1359
  %1361 = fmul fast double %1360, %1360
  %1362 = fmul fast double %1361, %1361
  %1363 = fadd fast double %1362, %1358
  %1364 = fptosi double %1363 to i8
  store i8 %1364, ptr %1247, align 1, !tbaa !12
  %1365 = fadd fast double %1354, %1279
  %1366 = add nuw nsw i32 %1278, 1
  br i1 %1271, label %1367, label %1414

1367:                                             ; preds = %1350
  %1368 = load i32, ptr %4, align 4, !tbaa !6
  %1369 = load i32, ptr %12, align 4, !tbaa !6
  %1370 = add nsw i32 %1369, -1
  %1371 = icmp slt i32 %1368, %1370
  br i1 %1371, label %1391, label %1372

1372:                                             ; preds = %1367
  %1373 = icmp eq i32 %1368, %1370
  br i1 %1373, label %1374, label %1407

1374:                                             ; preds = %1372
  store i32 0, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1375, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1414, label %1376

1376:                                             ; preds = %1374, %1401
  %1377 = phi i64 [ %1405, %1401 ], [ 1, %1374 ]
  %1378 = getelementptr inbounds i32, ptr %4, i64 %1377
  %1379 = load i32, ptr %1378, align 4, !tbaa !6
  %1380 = getelementptr inbounds i32, ptr %12, i64 %1377
  %1381 = load i32, ptr %1380, align 4, !tbaa !6
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1379, %1382
  br i1 %1383, label %1384, label %1399

1384:                                             ; preds = %1376
  br i1 %1371, label %1391, label %1385

1385:                                             ; preds = %1384
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1377
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1377
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = add nsw i32 %1389, %1387
  store i32 %1390, ptr %1388, align 4, !tbaa !6
  br label %1409

1391:                                             ; preds = %1367, %1384
  %1392 = phi i32 [ %1379, %1384 ], [ %1368, %1367 ]
  %1393 = phi ptr [ %1378, %1384 ], [ %4, %1367 ]
  %1394 = phi i64 [ %1377, %1384 ], [ 0, %1367 ]
  %1395 = add nsw i32 %1392, 1
  store i32 %1395, ptr %1393, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1394
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1394
  br label %1409

1399:                                             ; preds = %1376
  %1400 = icmp eq i32 %1379, %1382
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1399
  store i32 0, ptr %1378, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %8, i64 %1377
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1377
  store i32 %1403, ptr %1404, align 4, !tbaa !6
  %1405 = add nuw nsw i64 %1377, 1
  %1406 = icmp eq i64 %1405, %1274
  br i1 %1406, label %1414, label %1376, !llvm.loop !62

1407:                                             ; preds = %1372, %1399
  %1408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1409:                                             ; preds = %1385, %1391
  %1410 = phi ptr [ %1398, %1391 ], [ %1378, %1385 ]
  %1411 = phi i32 [ %1397, %1391 ], [ 1, %1385 ]
  %1412 = load i32, ptr %1410, align 4, !tbaa !6
  %1413 = add nsw i32 %1412, %1411
  store i32 %1413, ptr %1410, align 4, !tbaa !6
  br label %1414

1414:                                             ; preds = %1401, %1409, %1374, %1350
  %1415 = icmp eq i32 %1366, %5
  br i1 %1415, label %5522, label %1277, !llvm.loop !63

1416:                                             ; preds = %1260, %1554
  %1417 = phi i32 [ 0, %1260 ], [ %1503, %1554 ]
  %1418 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1261, label %1419, label %1488

1419:                                             ; preds = %1416, %1478
  %1420 = phi i32 [ %1487, %1478 ], [ 0, %1416 ]
  %1421 = phi i64 [ %1429, %1478 ], [ %1265, %1416 ]
  %1422 = phi i64 [ %1486, %1478 ], [ %1264, %1416 ]
  %1423 = phi i32 [ %1484, %1478 ], [ %1418, %1416 ]
  %1424 = sub i32 %1263, %1420
  %1425 = tail call i32 @llvm.smin.i32(i32 %1424, i32 0)
  %1426 = sub i32 %1424, %1425
  %1427 = zext i32 %1426 to i64
  %1428 = add nuw nsw i64 %1427, 1
  %1429 = add nsw i64 %1421, -1
  %1430 = icmp ult i32 %1426, 31
  br i1 %1430, label %1466, label %1431

1431:                                             ; preds = %1419
  %1432 = and i64 %1428, 8589934560
  %1433 = sub i64 %1422, %1432
  br label %1434

1434:                                             ; preds = %1434, %1431
  %1435 = phi i64 [ 0, %1431 ], [ %1458, %1434 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1454, %1434 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1455, %1434 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1456, %1434 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1457, %1434 ]
  %1440 = sub i64 %1422, %1435
  %1441 = getelementptr inbounds i32, ptr %11, i64 %1440
  %1442 = getelementptr inbounds i32, ptr %1441, i64 -7
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !6
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1441, i64 -15
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !6
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1441, i64 -23
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !6
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1441, i64 -31
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !6
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = mul <8 x i32> %1444, %1436
  %1455 = mul <8 x i32> %1447, %1437
  %1456 = mul <8 x i32> %1450, %1438
  %1457 = mul <8 x i32> %1453, %1439
  %1458 = add nuw i64 %1435, 32
  %1459 = icmp eq i64 %1458, %1432
  br i1 %1459, label %1460, label %1434, !llvm.loop !64

1460:                                             ; preds = %1434
  %1461 = mul <8 x i32> %1455, %1454
  %1462 = mul <8 x i32> %1456, %1461
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1463)
  %1465 = icmp eq i64 %1428, %1432
  br i1 %1465, label %1478, label %1466

1466:                                             ; preds = %1419, %1460
  %1467 = phi i64 [ %1422, %1419 ], [ %1433, %1460 ]
  %1468 = phi i32 [ 1, %1419 ], [ %1464, %1460 ]
  br label %1469

1469:                                             ; preds = %1466, %1469
  %1470 = phi i64 [ %1475, %1469 ], [ %1467, %1466 ]
  %1471 = phi i32 [ %1474, %1469 ], [ %1468, %1466 ]
  %1472 = getelementptr inbounds i32, ptr %11, i64 %1470
  %1473 = load i32, ptr %1472, align 4, !tbaa !6
  %1474 = mul nsw i32 %1473, %1471
  %1475 = add nsw i64 %1470, -1
  %1476 = trunc i64 %1470 to i32
  %1477 = icmp sgt i32 %1476, 0
  br i1 %1477, label %1469, label %1478, !llvm.loop !65

1478:                                             ; preds = %1469, %1460
  %1479 = phi i32 [ %1464, %1460 ], [ %1474, %1469 ]
  %1480 = and i64 %1429, 4294967295
  %1481 = getelementptr inbounds i32, ptr %6, i64 %1480
  %1482 = load i32, ptr %1481, align 4, !tbaa !6
  %1483 = mul nsw i32 %1482, %1479
  %1484 = add nsw i32 %1483, %1423
  %1485 = icmp sgt i64 %1421, 2
  %1486 = add nsw i64 %1422, -1
  %1487 = add i32 %1420, 1
  br i1 %1485, label %1419, label %1488, !llvm.loop !66

1488:                                             ; preds = %1478, %1416
  %1489 = phi i32 [ %1418, %1416 ], [ %1484, %1478 ]
  %1490 = icmp slt i32 %1489, %5
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1488
  %1492 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1493:                                             ; preds = %1488
  %1494 = sext i32 %1489 to i64
  %1495 = getelementptr inbounds i8, ptr %1245, i64 %1494
  %1496 = load i8, ptr %1495, align 1, !tbaa !12
  %1497 = load i8, ptr %1247, align 1, !tbaa !12
  %1498 = sext i8 %1496 to i32
  %1499 = mul nsw i32 %1498, %1498
  %1500 = mul nsw i32 %1499, %1499
  %1501 = trunc i32 %1500 to i8
  %1502 = add i8 %1497, %1501
  store i8 %1502, ptr %1247, align 1, !tbaa !12
  %1503 = add nuw nsw i32 %1417, 1
  br i1 %1262, label %1504, label %1554

1504:                                             ; preds = %1493
  %1505 = load i32, ptr %4, align 4, !tbaa !6
  %1506 = load i32, ptr %12, align 4, !tbaa !6
  %1507 = add nsw i32 %1506, -1
  %1508 = icmp slt i32 %1505, %1507
  br i1 %1508, label %1531, label %1509

1509:                                             ; preds = %1504
  %1510 = icmp eq i32 %1505, %1507
  br i1 %1510, label %1511, label %1547

1511:                                             ; preds = %1509
  store i32 0, ptr %4, align 4, !tbaa !6
  %1512 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1512, ptr %6, align 4, !tbaa !6
  br i1 %1267, label %1554, label %1513

1513:                                             ; preds = %1511, %1541
  %1514 = phi i64 [ %1545, %1541 ], [ 1, %1511 ]
  %1515 = getelementptr inbounds i32, ptr %4, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !6
  %1517 = getelementptr inbounds i32, ptr %12, i64 %1514
  %1518 = load i32, ptr %1517, align 4, !tbaa !6
  %1519 = add nsw i32 %1518, -1
  %1520 = icmp slt i32 %1516, %1519
  br i1 %1520, label %1521, label %1539

1521:                                             ; preds = %1513
  br i1 %1508, label %1531, label %1522

1522:                                             ; preds = %1521
  %1523 = shl i64 %1514, 32
  %1524 = add i64 %1523, -4294967296
  %1525 = ashr exact i64 %1524, 32
  %1526 = getelementptr inbounds i32, ptr %7, i64 %1525
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = getelementptr inbounds i32, ptr %6, i64 %1514
  %1529 = load i32, ptr %1528, align 4, !tbaa !6
  %1530 = add nsw i32 %1529, %1527
  store i32 %1530, ptr %1528, align 4, !tbaa !6
  br label %1549

1531:                                             ; preds = %1504, %1521
  %1532 = phi i32 [ %1516, %1521 ], [ %1505, %1504 ]
  %1533 = phi ptr [ %1515, %1521 ], [ %4, %1504 ]
  %1534 = phi i64 [ %1514, %1521 ], [ 0, %1504 ]
  %1535 = add nsw i32 %1532, 1
  store i32 %1535, ptr %1533, align 4, !tbaa !6
  %1536 = getelementptr inbounds i32, ptr %7, i64 %1534
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1534
  br label %1549

1539:                                             ; preds = %1513
  %1540 = icmp eq i32 %1516, %1519
  br i1 %1540, label %1541, label %1547

1541:                                             ; preds = %1539
  store i32 0, ptr %1515, align 4, !tbaa !6
  %1542 = getelementptr inbounds i32, ptr %8, i64 %1514
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1514
  store i32 %1543, ptr %1544, align 4, !tbaa !6
  %1545 = add nuw nsw i64 %1514, 1
  %1546 = icmp eq i64 %1545, %1265
  br i1 %1546, label %1554, label %1513, !llvm.loop !67

1547:                                             ; preds = %1509, %1539
  %1548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1549:                                             ; preds = %1522, %1531
  %1550 = phi ptr [ %1538, %1531 ], [ %1515, %1522 ]
  %1551 = phi i32 [ %1537, %1531 ], [ 1, %1522 ]
  %1552 = load i32, ptr %1550, align 4, !tbaa !6
  %1553 = add nsw i32 %1552, %1551
  store i32 %1553, ptr %1550, align 4, !tbaa !6
  br label %1554

1554:                                             ; preds = %1541, %1549, %1511, %1493
  %1555 = icmp eq i32 %1503, %5
  br i1 %1555, label %5522, label %1416, !llvm.loop !68

1556:                                             ; preds = %1253
  %1557 = getelementptr inbounds i32, ptr %3, i64 %19
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = icmp eq i32 %1558, 0
  %1560 = icmp sgt i32 %5, 0
  br i1 %1559, label %1570, label %1561

1561:                                             ; preds = %1556
  br i1 %1560, label %1562, label %5522

1562:                                             ; preds = %1561
  %1563 = icmp sgt i32 %13, 1
  %1564 = icmp sgt i32 %13, 0
  %1565 = add i32 %13, -2
  %1566 = zext i32 %1565 to i64
  %1567 = zext i32 %13 to i64
  %1568 = add nuw i32 %5, 1
  %1569 = icmp eq i32 %13, 1
  br label %1712

1570:                                             ; preds = %1556
  br i1 %1560, label %1571, label %5522

1571:                                             ; preds = %1570
  %1572 = icmp sgt i32 %13, 1
  %1573 = icmp sgt i32 %13, 0
  %1574 = add i32 %13, -2
  %1575 = zext i32 %1574 to i64
  %1576 = zext i32 %13 to i64
  %1577 = add nuw i32 %5, 1
  %1578 = icmp eq i32 %13, 1
  br label %1579

1579:                                             ; preds = %1571, %1710
  %1580 = phi i32 [ 0, %1571 ], [ %1662, %1710 ]
  %1581 = phi double [ 0.000000e+00, %1571 ], [ %1661, %1710 ]
  %1582 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1572, label %1583, label %1652

1583:                                             ; preds = %1579, %1642
  %1584 = phi i32 [ %1651, %1642 ], [ 0, %1579 ]
  %1585 = phi i64 [ %1593, %1642 ], [ %1576, %1579 ]
  %1586 = phi i64 [ %1650, %1642 ], [ %1575, %1579 ]
  %1587 = phi i32 [ %1648, %1642 ], [ %1582, %1579 ]
  %1588 = sub i32 %1574, %1584
  %1589 = tail call i32 @llvm.smin.i32(i32 %1588, i32 0)
  %1590 = sub i32 %1588, %1589
  %1591 = zext i32 %1590 to i64
  %1592 = add nuw nsw i64 %1591, 1
  %1593 = add nsw i64 %1585, -1
  %1594 = icmp ult i32 %1590, 31
  br i1 %1594, label %1630, label %1595

1595:                                             ; preds = %1583
  %1596 = and i64 %1592, 8589934560
  %1597 = sub i64 %1586, %1596
  br label %1598

1598:                                             ; preds = %1598, %1595
  %1599 = phi i64 [ 0, %1595 ], [ %1622, %1598 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1595 ], [ %1618, %1598 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1595 ], [ %1619, %1598 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1595 ], [ %1620, %1598 ]
  %1603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1595 ], [ %1621, %1598 ]
  %1604 = sub i64 %1586, %1599
  %1605 = getelementptr inbounds i32, ptr %9, i64 %1604
  %1606 = getelementptr inbounds i32, ptr %1605, i64 -7
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !6
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1605, i64 -15
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !6
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1605, i64 -23
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !6
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = getelementptr inbounds i32, ptr %1605, i64 -31
  %1616 = load <8 x i32>, ptr %1615, align 4, !tbaa !6
  %1617 = shufflevector <8 x i32> %1616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1618 = mul <8 x i32> %1608, %1600
  %1619 = mul <8 x i32> %1611, %1601
  %1620 = mul <8 x i32> %1614, %1602
  %1621 = mul <8 x i32> %1617, %1603
  %1622 = add nuw i64 %1599, 32
  %1623 = icmp eq i64 %1622, %1596
  br i1 %1623, label %1624, label %1598, !llvm.loop !69

1624:                                             ; preds = %1598
  %1625 = mul <8 x i32> %1619, %1618
  %1626 = mul <8 x i32> %1620, %1625
  %1627 = mul <8 x i32> %1621, %1626
  %1628 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1627)
  %1629 = icmp eq i64 %1592, %1596
  br i1 %1629, label %1642, label %1630

1630:                                             ; preds = %1583, %1624
  %1631 = phi i64 [ %1586, %1583 ], [ %1597, %1624 ]
  %1632 = phi i32 [ 1, %1583 ], [ %1628, %1624 ]
  br label %1633

1633:                                             ; preds = %1630, %1633
  %1634 = phi i64 [ %1639, %1633 ], [ %1631, %1630 ]
  %1635 = phi i32 [ %1638, %1633 ], [ %1632, %1630 ]
  %1636 = getelementptr inbounds i32, ptr %9, i64 %1634
  %1637 = load i32, ptr %1636, align 4, !tbaa !6
  %1638 = mul nsw i32 %1637, %1635
  %1639 = add nsw i64 %1634, -1
  %1640 = trunc i64 %1634 to i32
  %1641 = icmp sgt i32 %1640, 0
  br i1 %1641, label %1633, label %1642, !llvm.loop !70

1642:                                             ; preds = %1633, %1624
  %1643 = phi i32 [ %1628, %1624 ], [ %1638, %1633 ]
  %1644 = and i64 %1593, 4294967295
  %1645 = getelementptr inbounds i32, ptr %6, i64 %1644
  %1646 = load i32, ptr %1645, align 4, !tbaa !6
  %1647 = mul nsw i32 %1646, %1643
  %1648 = add nsw i32 %1647, %1587
  %1649 = icmp sgt i64 %1585, 2
  %1650 = add nsw i64 %1586, -1
  %1651 = add i32 %1584, 1
  br i1 %1649, label %1583, label %1652, !llvm.loop !71

1652:                                             ; preds = %1642, %1579
  %1653 = phi i32 [ %1582, %1579 ], [ %1648, %1642 ]
  %1654 = sext i32 %1653 to i64
  %1655 = getelementptr inbounds i8, ptr %1245, i64 %1654
  %1656 = load i8, ptr %1655, align 1, !tbaa !12
  %1657 = load i8, ptr %1247, align 1, !tbaa !12
  %1658 = mul i8 %1656, %1656
  %1659 = mul i8 %1658, %1658
  %1660 = add i8 %1659, %1657
  store i8 %1660, ptr %1247, align 1, !tbaa !12
  %1661 = fadd fast double %1581, 1.000000e+00
  %1662 = add nuw nsw i32 %1580, 1
  br i1 %1573, label %1663, label %1710

1663:                                             ; preds = %1652
  %1664 = load i32, ptr %4, align 4, !tbaa !6
  %1665 = load i32, ptr %12, align 4, !tbaa !6
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !6
  %1671 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1671, ptr %6, align 4, !tbaa !6
  br i1 %1578, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !6
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !6
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !6
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1576
  br i1 %1702, label %1710, label %1672, !llvm.loop !72

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !6
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !6
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1652
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5522, label %1579, !llvm.loop !73

1712:                                             ; preds = %1562, %1848
  %1713 = phi i32 [ 0, %1562 ], [ %1797, %1848 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1563, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1567, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1566, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1565, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !74

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !6
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !75

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !76

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds i8, ptr %1245, i64 %1790
  %1792 = load i8, ptr %1791, align 1, !tbaa !12
  %1793 = load i8, ptr %1247, align 1, !tbaa !12
  %1794 = mul i8 %1792, %1792
  %1795 = mul i8 %1794, %1794
  %1796 = add i8 %1795, %1793
  store i8 %1796, ptr %1247, align 1, !tbaa !12
  %1797 = add nuw nsw i32 %1713, 1
  br i1 %1564, label %1798, label %1848

1798:                                             ; preds = %1789
  %1799 = load i32, ptr %4, align 4, !tbaa !6
  %1800 = load i32, ptr %12, align 4, !tbaa !6
  %1801 = add nsw i32 %1800, -1
  %1802 = icmp slt i32 %1799, %1801
  br i1 %1802, label %1825, label %1803

1803:                                             ; preds = %1798
  %1804 = icmp eq i32 %1799, %1801
  br i1 %1804, label %1805, label %1841

1805:                                             ; preds = %1803
  store i32 0, ptr %4, align 4, !tbaa !6
  %1806 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1806, ptr %6, align 4, !tbaa !6
  br i1 %1569, label %1848, label %1807

1807:                                             ; preds = %1805, %1835
  %1808 = phi i64 [ %1839, %1835 ], [ 1, %1805 ]
  %1809 = getelementptr inbounds i32, ptr %4, i64 %1808
  %1810 = load i32, ptr %1809, align 4, !tbaa !6
  %1811 = getelementptr inbounds i32, ptr %12, i64 %1808
  %1812 = load i32, ptr %1811, align 4, !tbaa !6
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1810, %1813
  br i1 %1814, label %1815, label %1833

1815:                                             ; preds = %1807
  br i1 %1802, label %1825, label %1816

1816:                                             ; preds = %1815
  %1817 = shl i64 %1808, 32
  %1818 = add i64 %1817, -4294967296
  %1819 = ashr exact i64 %1818, 32
  %1820 = getelementptr inbounds i32, ptr %7, i64 %1819
  %1821 = load i32, ptr %1820, align 4, !tbaa !6
  %1822 = getelementptr inbounds i32, ptr %6, i64 %1808
  %1823 = load i32, ptr %1822, align 4, !tbaa !6
  %1824 = add nsw i32 %1823, %1821
  store i32 %1824, ptr %1822, align 4, !tbaa !6
  br label %1843

1825:                                             ; preds = %1798, %1815
  %1826 = phi i32 [ %1810, %1815 ], [ %1799, %1798 ]
  %1827 = phi ptr [ %1809, %1815 ], [ %4, %1798 ]
  %1828 = phi i64 [ %1808, %1815 ], [ 0, %1798 ]
  %1829 = add nsw i32 %1826, 1
  store i32 %1829, ptr %1827, align 4, !tbaa !6
  %1830 = getelementptr inbounds i32, ptr %7, i64 %1828
  %1831 = load i32, ptr %1830, align 4, !tbaa !6
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1828
  br label %1843

1833:                                             ; preds = %1807
  %1834 = icmp eq i32 %1810, %1813
  br i1 %1834, label %1835, label %1841

1835:                                             ; preds = %1833
  store i32 0, ptr %1809, align 4, !tbaa !6
  %1836 = getelementptr inbounds i32, ptr %8, i64 %1808
  %1837 = load i32, ptr %1836, align 4, !tbaa !6
  %1838 = getelementptr inbounds i32, ptr %6, i64 %1808
  store i32 %1837, ptr %1838, align 4, !tbaa !6
  %1839 = add nuw nsw i64 %1808, 1
  %1840 = icmp eq i64 %1839, %1567
  br i1 %1840, label %1848, label %1807, !llvm.loop !77

1841:                                             ; preds = %1803, %1833
  %1842 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1843:                                             ; preds = %1816, %1825
  %1844 = phi ptr [ %1832, %1825 ], [ %1809, %1816 ]
  %1845 = phi i32 [ %1831, %1825 ], [ 1, %1816 ]
  %1846 = load i32, ptr %1844, align 4, !tbaa !6
  %1847 = add nsw i32 %1846, %1845
  store i32 %1847, ptr %1844, align 4, !tbaa !6
  br label %1848

1848:                                             ; preds = %1835, %1843, %1805, %1789
  %1849 = icmp eq i32 %1797, %5
  br i1 %1849, label %5522, label %1712, !llvm.loop !78

1850:                                             ; preds = %1253
  %1851 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

1852:                                             ; preds = %18
  %1853 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1854 = load ptr, ptr %1853, align 8, !tbaa !10
  %1855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1856 = load ptr, ptr %1855, align 8, !tbaa !10
  store i16 0, ptr %1856, align 2, !tbaa !79
  %1857 = icmp eq i32 %13, 0
  br i1 %1857, label %1858, label %1863

1858:                                             ; preds = %1852
  %1859 = load i8, ptr %1854, align 1, !tbaa !12
  %1860 = zext i8 %1859 to i16
  %1861 = mul nuw i16 %1860, %1860
  %1862 = mul i16 %1861, %1861
  store i16 %1862, ptr %1856, align 2, !tbaa !79
  br label %5522

1863:                                             ; preds = %1852
  switch i32 %1, label %2464 [
    i32 1, label %1864
    i32 0, label %2168
  ]

1864:                                             ; preds = %1863
  %1865 = getelementptr inbounds i32, ptr %3, i64 %19
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = icmp eq i32 %1866, 0
  %1868 = icmp sgt i32 %5, 0
  br i1 %1867, label %1878, label %1869

1869:                                             ; preds = %1864
  br i1 %1868, label %1870, label %5522

1870:                                             ; preds = %1869
  %1871 = icmp sgt i32 %13, 1
  %1872 = icmp sgt i32 %13, 0
  %1873 = add i32 %13, -2
  %1874 = zext i32 %1873 to i64
  %1875 = zext i32 %13 to i64
  %1876 = add nuw i32 %5, 1
  %1877 = icmp eq i32 %13, 1
  br label %2026

1878:                                             ; preds = %1864
  br i1 %1868, label %1879, label %5522

1879:                                             ; preds = %1878
  %1880 = icmp sgt i32 %13, 1
  %1881 = icmp sgt i32 %13, 0
  %1882 = add i32 %13, -2
  %1883 = zext i32 %1882 to i64
  %1884 = zext i32 %13 to i64
  %1885 = add nuw i32 %5, 1
  %1886 = icmp eq i32 %13, 1
  br label %1887

1887:                                             ; preds = %1879, %2024
  %1888 = phi i16 [ 0, %1879 ], [ %1974, %2024 ]
  %1889 = phi i32 [ 0, %1879 ], [ %1976, %2024 ]
  %1890 = phi double [ 0.000000e+00, %1879 ], [ %1975, %2024 ]
  %1891 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1880, label %1892, label %1961

1892:                                             ; preds = %1887, %1951
  %1893 = phi i32 [ %1960, %1951 ], [ 0, %1887 ]
  %1894 = phi i64 [ %1902, %1951 ], [ %1884, %1887 ]
  %1895 = phi i64 [ %1959, %1951 ], [ %1883, %1887 ]
  %1896 = phi i32 [ %1957, %1951 ], [ %1891, %1887 ]
  %1897 = sub i32 %1882, %1893
  %1898 = tail call i32 @llvm.smin.i32(i32 %1897, i32 0)
  %1899 = sub i32 %1897, %1898
  %1900 = zext i32 %1899 to i64
  %1901 = add nuw nsw i64 %1900, 1
  %1902 = add nsw i64 %1894, -1
  %1903 = icmp ult i32 %1899, 31
  br i1 %1903, label %1939, label %1904

1904:                                             ; preds = %1892
  %1905 = and i64 %1901, 8589934560
  %1906 = sub i64 %1895, %1905
  br label %1907

1907:                                             ; preds = %1907, %1904
  %1908 = phi i64 [ 0, %1904 ], [ %1931, %1907 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1927, %1907 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1928, %1907 ]
  %1911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1929, %1907 ]
  %1912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1930, %1907 ]
  %1913 = sub i64 %1895, %1908
  %1914 = getelementptr inbounds i32, ptr %9, i64 %1913
  %1915 = getelementptr inbounds i32, ptr %1914, i64 -7
  %1916 = load <8 x i32>, ptr %1915, align 4, !tbaa !6
  %1917 = shufflevector <8 x i32> %1916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1918 = getelementptr inbounds i32, ptr %1914, i64 -15
  %1919 = load <8 x i32>, ptr %1918, align 4, !tbaa !6
  %1920 = shufflevector <8 x i32> %1919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1921 = getelementptr inbounds i32, ptr %1914, i64 -23
  %1922 = load <8 x i32>, ptr %1921, align 4, !tbaa !6
  %1923 = shufflevector <8 x i32> %1922, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1924 = getelementptr inbounds i32, ptr %1914, i64 -31
  %1925 = load <8 x i32>, ptr %1924, align 4, !tbaa !6
  %1926 = shufflevector <8 x i32> %1925, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1927 = mul <8 x i32> %1917, %1909
  %1928 = mul <8 x i32> %1920, %1910
  %1929 = mul <8 x i32> %1923, %1911
  %1930 = mul <8 x i32> %1926, %1912
  %1931 = add nuw i64 %1908, 32
  %1932 = icmp eq i64 %1931, %1905
  br i1 %1932, label %1933, label %1907, !llvm.loop !81

1933:                                             ; preds = %1907
  %1934 = mul <8 x i32> %1928, %1927
  %1935 = mul <8 x i32> %1929, %1934
  %1936 = mul <8 x i32> %1930, %1935
  %1937 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1936)
  %1938 = icmp eq i64 %1901, %1905
  br i1 %1938, label %1951, label %1939

1939:                                             ; preds = %1892, %1933
  %1940 = phi i64 [ %1895, %1892 ], [ %1906, %1933 ]
  %1941 = phi i32 [ 1, %1892 ], [ %1937, %1933 ]
  br label %1942

1942:                                             ; preds = %1939, %1942
  %1943 = phi i64 [ %1948, %1942 ], [ %1940, %1939 ]
  %1944 = phi i32 [ %1947, %1942 ], [ %1941, %1939 ]
  %1945 = getelementptr inbounds i32, ptr %9, i64 %1943
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = mul nsw i32 %1946, %1944
  %1948 = add nsw i64 %1943, -1
  %1949 = trunc i64 %1943 to i32
  %1950 = icmp sgt i32 %1949, 0
  br i1 %1950, label %1942, label %1951, !llvm.loop !82

1951:                                             ; preds = %1942, %1933
  %1952 = phi i32 [ %1937, %1933 ], [ %1947, %1942 ]
  %1953 = and i64 %1902, 4294967295
  %1954 = getelementptr inbounds i32, ptr %6, i64 %1953
  %1955 = load i32, ptr %1954, align 4, !tbaa !6
  %1956 = mul nsw i32 %1955, %1952
  %1957 = add nsw i32 %1956, %1896
  %1958 = icmp sgt i64 %1894, 2
  %1959 = add nsw i64 %1895, -1
  %1960 = add i32 %1893, 1
  br i1 %1958, label %1892, label %1961, !llvm.loop !83

1961:                                             ; preds = %1951, %1887
  %1962 = phi i32 [ %1891, %1887 ], [ %1957, %1951 ]
  %1963 = sext i32 %1962 to i64
  %1964 = getelementptr inbounds double, ptr %2, i64 %1963
  %1965 = load double, ptr %1964, align 8, !tbaa !19
  %1966 = getelementptr inbounds i8, ptr %1854, i64 %1963
  %1967 = load i8, ptr %1966, align 1, !tbaa !12
  %1968 = sitofp i16 %1888 to double
  %1969 = uitofp i8 %1967 to double
  %1970 = fmul fast double %1965, %1969
  %1971 = fmul fast double %1970, %1970
  %1972 = fmul fast double %1971, %1971
  %1973 = fadd fast double %1972, %1968
  %1974 = fptosi double %1973 to i16
  store i16 %1974, ptr %1856, align 2, !tbaa !79
  %1975 = fadd fast double %1965, %1890
  %1976 = add nuw nsw i32 %1889, 1
  br i1 %1881, label %1977, label %2024

1977:                                             ; preds = %1961
  %1978 = load i32, ptr %4, align 4, !tbaa !6
  %1979 = load i32, ptr %12, align 4, !tbaa !6
  %1980 = add nsw i32 %1979, -1
  %1981 = icmp slt i32 %1978, %1980
  br i1 %1981, label %2001, label %1982

1982:                                             ; preds = %1977
  %1983 = icmp eq i32 %1978, %1980
  br i1 %1983, label %1984, label %2017

1984:                                             ; preds = %1982
  store i32 0, ptr %4, align 4, !tbaa !6
  %1985 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1985, ptr %6, align 4, !tbaa !6
  br i1 %1886, label %2024, label %1986

1986:                                             ; preds = %1984, %2011
  %1987 = phi i64 [ %2015, %2011 ], [ 1, %1984 ]
  %1988 = getelementptr inbounds i32, ptr %4, i64 %1987
  %1989 = load i32, ptr %1988, align 4, !tbaa !6
  %1990 = getelementptr inbounds i32, ptr %12, i64 %1987
  %1991 = load i32, ptr %1990, align 4, !tbaa !6
  %1992 = add nsw i32 %1991, -1
  %1993 = icmp slt i32 %1989, %1992
  br i1 %1993, label %1994, label %2009

1994:                                             ; preds = %1986
  br i1 %1981, label %2001, label %1995

1995:                                             ; preds = %1994
  %1996 = getelementptr inbounds i32, ptr %7, i64 %1987
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1987
  %1999 = load i32, ptr %1998, align 4, !tbaa !6
  %2000 = add nsw i32 %1999, %1997
  store i32 %2000, ptr %1998, align 4, !tbaa !6
  br label %2019

2001:                                             ; preds = %1977, %1994
  %2002 = phi i32 [ %1989, %1994 ], [ %1978, %1977 ]
  %2003 = phi ptr [ %1988, %1994 ], [ %4, %1977 ]
  %2004 = phi i64 [ %1987, %1994 ], [ 0, %1977 ]
  %2005 = add nsw i32 %2002, 1
  store i32 %2005, ptr %2003, align 4, !tbaa !6
  %2006 = getelementptr inbounds i32, ptr %7, i64 %2004
  %2007 = load i32, ptr %2006, align 4, !tbaa !6
  %2008 = getelementptr inbounds i32, ptr %6, i64 %2004
  br label %2019

2009:                                             ; preds = %1986
  %2010 = icmp eq i32 %1989, %1992
  br i1 %2010, label %2011, label %2017

2011:                                             ; preds = %2009
  store i32 0, ptr %1988, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %8, i64 %1987
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %6, i64 %1987
  store i32 %2013, ptr %2014, align 4, !tbaa !6
  %2015 = add nuw nsw i64 %1987, 1
  %2016 = icmp eq i64 %2015, %1884
  br i1 %2016, label %2024, label %1986, !llvm.loop !84

2017:                                             ; preds = %1982, %2009
  %2018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2019:                                             ; preds = %1995, %2001
  %2020 = phi ptr [ %2008, %2001 ], [ %1988, %1995 ]
  %2021 = phi i32 [ %2007, %2001 ], [ 1, %1995 ]
  %2022 = load i32, ptr %2020, align 4, !tbaa !6
  %2023 = add nsw i32 %2022, %2021
  store i32 %2023, ptr %2020, align 4, !tbaa !6
  br label %2024

2024:                                             ; preds = %2011, %2019, %1984, %1961
  %2025 = icmp eq i32 %1976, %5
  br i1 %2025, label %5522, label %1887, !llvm.loop !85

2026:                                             ; preds = %1870, %2166
  %2027 = phi i64 [ 0, %1870 ], [ %2113, %2166 ]
  %2028 = phi i32 [ 0, %1870 ], [ %2115, %2166 ]
  %2029 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1871, label %2030, label %2099

2030:                                             ; preds = %2026, %2089
  %2031 = phi i32 [ %2098, %2089 ], [ 0, %2026 ]
  %2032 = phi i64 [ %2040, %2089 ], [ %1875, %2026 ]
  %2033 = phi i64 [ %2097, %2089 ], [ %1874, %2026 ]
  %2034 = phi i32 [ %2095, %2089 ], [ %2029, %2026 ]
  %2035 = sub i32 %1873, %2031
  %2036 = tail call i32 @llvm.smin.i32(i32 %2035, i32 0)
  %2037 = sub i32 %2035, %2036
  %2038 = zext i32 %2037 to i64
  %2039 = add nuw nsw i64 %2038, 1
  %2040 = add nsw i64 %2032, -1
  %2041 = icmp ult i32 %2037, 31
  br i1 %2041, label %2077, label %2042

2042:                                             ; preds = %2030
  %2043 = and i64 %2039, 8589934560
  %2044 = sub i64 %2033, %2043
  br label %2045

2045:                                             ; preds = %2045, %2042
  %2046 = phi i64 [ 0, %2042 ], [ %2069, %2045 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2065, %2045 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2066, %2045 ]
  %2049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2067, %2045 ]
  %2050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2068, %2045 ]
  %2051 = sub i64 %2033, %2046
  %2052 = getelementptr inbounds i32, ptr %11, i64 %2051
  %2053 = getelementptr inbounds i32, ptr %2052, i64 -7
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !6
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2052, i64 -15
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !6
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2052, i64 -23
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !6
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2052, i64 -31
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !6
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = mul <8 x i32> %2055, %2047
  %2066 = mul <8 x i32> %2058, %2048
  %2067 = mul <8 x i32> %2061, %2049
  %2068 = mul <8 x i32> %2064, %2050
  %2069 = add nuw i64 %2046, 32
  %2070 = icmp eq i64 %2069, %2043
  br i1 %2070, label %2071, label %2045, !llvm.loop !86

2071:                                             ; preds = %2045
  %2072 = mul <8 x i32> %2066, %2065
  %2073 = mul <8 x i32> %2067, %2072
  %2074 = mul <8 x i32> %2068, %2073
  %2075 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2074)
  %2076 = icmp eq i64 %2039, %2043
  br i1 %2076, label %2089, label %2077

2077:                                             ; preds = %2030, %2071
  %2078 = phi i64 [ %2033, %2030 ], [ %2044, %2071 ]
  %2079 = phi i32 [ 1, %2030 ], [ %2075, %2071 ]
  br label %2080

2080:                                             ; preds = %2077, %2080
  %2081 = phi i64 [ %2086, %2080 ], [ %2078, %2077 ]
  %2082 = phi i32 [ %2085, %2080 ], [ %2079, %2077 ]
  %2083 = getelementptr inbounds i32, ptr %11, i64 %2081
  %2084 = load i32, ptr %2083, align 4, !tbaa !6
  %2085 = mul nsw i32 %2084, %2082
  %2086 = add nsw i64 %2081, -1
  %2087 = trunc i64 %2081 to i32
  %2088 = icmp sgt i32 %2087, 0
  br i1 %2088, label %2080, label %2089, !llvm.loop !87

2089:                                             ; preds = %2080, %2071
  %2090 = phi i32 [ %2075, %2071 ], [ %2085, %2080 ]
  %2091 = and i64 %2040, 4294967295
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2091
  %2093 = load i32, ptr %2092, align 4, !tbaa !6
  %2094 = mul nsw i32 %2093, %2090
  %2095 = add nsw i32 %2094, %2034
  %2096 = icmp sgt i64 %2032, 2
  %2097 = add nsw i64 %2033, -1
  %2098 = add i32 %2031, 1
  br i1 %2096, label %2030, label %2099, !llvm.loop !88

2099:                                             ; preds = %2089, %2026
  %2100 = phi i32 [ %2029, %2026 ], [ %2095, %2089 ]
  %2101 = icmp slt i32 %2100, %5
  br i1 %2101, label %2104, label %2102

2102:                                             ; preds = %2099
  %2103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2104:                                             ; preds = %2099
  %2105 = sext i32 %2100 to i64
  %2106 = getelementptr inbounds i8, ptr %1854, i64 %2105
  %2107 = load i8, ptr %2106, align 1, !tbaa !12
  %2108 = shl i64 %2027, 48
  %2109 = ashr exact i64 %2108, 48
  %2110 = zext i8 %2107 to i64
  %2111 = mul nuw nsw i64 %2110, %2110
  %2112 = mul nuw nsw i64 %2111, %2111
  %2113 = add nsw i64 %2112, %2109
  %2114 = trunc i64 %2113 to i16
  store i16 %2114, ptr %1856, align 2, !tbaa !79
  %2115 = add nuw nsw i32 %2028, 1
  br i1 %1872, label %2116, label %2166

2116:                                             ; preds = %2104
  %2117 = load i32, ptr %4, align 4, !tbaa !6
  %2118 = load i32, ptr %12, align 4, !tbaa !6
  %2119 = add nsw i32 %2118, -1
  %2120 = icmp slt i32 %2117, %2119
  br i1 %2120, label %2143, label %2121

2121:                                             ; preds = %2116
  %2122 = icmp eq i32 %2117, %2119
  br i1 %2122, label %2123, label %2159

2123:                                             ; preds = %2121
  store i32 0, ptr %4, align 4, !tbaa !6
  %2124 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2124, ptr %6, align 4, !tbaa !6
  br i1 %1877, label %2166, label %2125

2125:                                             ; preds = %2123, %2153
  %2126 = phi i64 [ %2157, %2153 ], [ 1, %2123 ]
  %2127 = getelementptr inbounds i32, ptr %4, i64 %2126
  %2128 = load i32, ptr %2127, align 4, !tbaa !6
  %2129 = getelementptr inbounds i32, ptr %12, i64 %2126
  %2130 = load i32, ptr %2129, align 4, !tbaa !6
  %2131 = add nsw i32 %2130, -1
  %2132 = icmp slt i32 %2128, %2131
  br i1 %2132, label %2133, label %2151

2133:                                             ; preds = %2125
  br i1 %2120, label %2143, label %2134

2134:                                             ; preds = %2133
  %2135 = shl i64 %2126, 32
  %2136 = add i64 %2135, -4294967296
  %2137 = ashr exact i64 %2136, 32
  %2138 = getelementptr inbounds i32, ptr %7, i64 %2137
  %2139 = load i32, ptr %2138, align 4, !tbaa !6
  %2140 = getelementptr inbounds i32, ptr %6, i64 %2126
  %2141 = load i32, ptr %2140, align 4, !tbaa !6
  %2142 = add nsw i32 %2141, %2139
  store i32 %2142, ptr %2140, align 4, !tbaa !6
  br label %2161

2143:                                             ; preds = %2116, %2133
  %2144 = phi i32 [ %2128, %2133 ], [ %2117, %2116 ]
  %2145 = phi ptr [ %2127, %2133 ], [ %4, %2116 ]
  %2146 = phi i64 [ %2126, %2133 ], [ 0, %2116 ]
  %2147 = add nsw i32 %2144, 1
  store i32 %2147, ptr %2145, align 4, !tbaa !6
  %2148 = getelementptr inbounds i32, ptr %7, i64 %2146
  %2149 = load i32, ptr %2148, align 4, !tbaa !6
  %2150 = getelementptr inbounds i32, ptr %6, i64 %2146
  br label %2161

2151:                                             ; preds = %2125
  %2152 = icmp eq i32 %2128, %2131
  br i1 %2152, label %2153, label %2159

2153:                                             ; preds = %2151
  store i32 0, ptr %2127, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %8, i64 %2126
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = getelementptr inbounds i32, ptr %6, i64 %2126
  store i32 %2155, ptr %2156, align 4, !tbaa !6
  %2157 = add nuw nsw i64 %2126, 1
  %2158 = icmp eq i64 %2157, %1875
  br i1 %2158, label %2166, label %2125, !llvm.loop !89

2159:                                             ; preds = %2121, %2151
  %2160 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2161:                                             ; preds = %2134, %2143
  %2162 = phi ptr [ %2150, %2143 ], [ %2127, %2134 ]
  %2163 = phi i32 [ %2149, %2143 ], [ 1, %2134 ]
  %2164 = load i32, ptr %2162, align 4, !tbaa !6
  %2165 = add nsw i32 %2164, %2163
  store i32 %2165, ptr %2162, align 4, !tbaa !6
  br label %2166

2166:                                             ; preds = %2153, %2161, %2123, %2104
  %2167 = icmp eq i32 %2115, %5
  br i1 %2167, label %5522, label %2026, !llvm.loop !90

2168:                                             ; preds = %1863
  %2169 = getelementptr inbounds i32, ptr %3, i64 %19
  %2170 = load i32, ptr %2169, align 4, !tbaa !6
  %2171 = icmp eq i32 %2170, 0
  %2172 = icmp sgt i32 %5, 0
  br i1 %2171, label %2182, label %2173

2173:                                             ; preds = %2168
  br i1 %2172, label %2174, label %5522

2174:                                             ; preds = %2173
  %2175 = icmp sgt i32 %13, 1
  %2176 = icmp sgt i32 %13, 0
  %2177 = add i32 %13, -2
  %2178 = zext i32 %2177 to i64
  %2179 = zext i32 %13 to i64
  %2180 = add nuw i32 %5, 1
  %2181 = icmp eq i32 %13, 1
  br label %2325

2182:                                             ; preds = %2168
  br i1 %2172, label %2183, label %5522

2183:                                             ; preds = %2182
  %2184 = icmp sgt i32 %13, 1
  %2185 = icmp sgt i32 %13, 0
  %2186 = add i32 %13, -2
  %2187 = zext i32 %2186 to i64
  %2188 = zext i32 %13 to i64
  %2189 = add nuw i32 %5, 1
  %2190 = icmp eq i32 %13, 1
  br label %2191

2191:                                             ; preds = %2183, %2323
  %2192 = phi i16 [ 0, %2183 ], [ %2273, %2323 ]
  %2193 = phi i32 [ 0, %2183 ], [ %2275, %2323 ]
  %2194 = phi double [ 0.000000e+00, %2183 ], [ %2274, %2323 ]
  %2195 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2184, label %2196, label %2265

2196:                                             ; preds = %2191, %2255
  %2197 = phi i32 [ %2264, %2255 ], [ 0, %2191 ]
  %2198 = phi i64 [ %2206, %2255 ], [ %2188, %2191 ]
  %2199 = phi i64 [ %2263, %2255 ], [ %2187, %2191 ]
  %2200 = phi i32 [ %2261, %2255 ], [ %2195, %2191 ]
  %2201 = sub i32 %2186, %2197
  %2202 = tail call i32 @llvm.smin.i32(i32 %2201, i32 0)
  %2203 = sub i32 %2201, %2202
  %2204 = zext i32 %2203 to i64
  %2205 = add nuw nsw i64 %2204, 1
  %2206 = add nsw i64 %2198, -1
  %2207 = icmp ult i32 %2203, 31
  br i1 %2207, label %2243, label %2208

2208:                                             ; preds = %2196
  %2209 = and i64 %2205, 8589934560
  %2210 = sub i64 %2199, %2209
  br label %2211

2211:                                             ; preds = %2211, %2208
  %2212 = phi i64 [ 0, %2208 ], [ %2235, %2211 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2208 ], [ %2231, %2211 ]
  %2214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2208 ], [ %2232, %2211 ]
  %2215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2208 ], [ %2233, %2211 ]
  %2216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2208 ], [ %2234, %2211 ]
  %2217 = sub i64 %2199, %2212
  %2218 = getelementptr inbounds i32, ptr %9, i64 %2217
  %2219 = getelementptr inbounds i32, ptr %2218, i64 -7
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2218, i64 -15
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2218, i64 -23
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = getelementptr inbounds i32, ptr %2218, i64 -31
  %2229 = load <8 x i32>, ptr %2228, align 4, !tbaa !6
  %2230 = shufflevector <8 x i32> %2229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2231 = mul <8 x i32> %2221, %2213
  %2232 = mul <8 x i32> %2224, %2214
  %2233 = mul <8 x i32> %2227, %2215
  %2234 = mul <8 x i32> %2230, %2216
  %2235 = add nuw i64 %2212, 32
  %2236 = icmp eq i64 %2235, %2209
  br i1 %2236, label %2237, label %2211, !llvm.loop !91

2237:                                             ; preds = %2211
  %2238 = mul <8 x i32> %2232, %2231
  %2239 = mul <8 x i32> %2233, %2238
  %2240 = mul <8 x i32> %2234, %2239
  %2241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2240)
  %2242 = icmp eq i64 %2205, %2209
  br i1 %2242, label %2255, label %2243

2243:                                             ; preds = %2196, %2237
  %2244 = phi i64 [ %2199, %2196 ], [ %2210, %2237 ]
  %2245 = phi i32 [ 1, %2196 ], [ %2241, %2237 ]
  br label %2246

2246:                                             ; preds = %2243, %2246
  %2247 = phi i64 [ %2252, %2246 ], [ %2244, %2243 ]
  %2248 = phi i32 [ %2251, %2246 ], [ %2245, %2243 ]
  %2249 = getelementptr inbounds i32, ptr %9, i64 %2247
  %2250 = load i32, ptr %2249, align 4, !tbaa !6
  %2251 = mul nsw i32 %2250, %2248
  %2252 = add nsw i64 %2247, -1
  %2253 = trunc i64 %2247 to i32
  %2254 = icmp sgt i32 %2253, 0
  br i1 %2254, label %2246, label %2255, !llvm.loop !92

2255:                                             ; preds = %2246, %2237
  %2256 = phi i32 [ %2241, %2237 ], [ %2251, %2246 ]
  %2257 = and i64 %2206, 4294967295
  %2258 = getelementptr inbounds i32, ptr %6, i64 %2257
  %2259 = load i32, ptr %2258, align 4, !tbaa !6
  %2260 = mul nsw i32 %2259, %2256
  %2261 = add nsw i32 %2260, %2200
  %2262 = icmp sgt i64 %2198, 2
  %2263 = add nsw i64 %2199, -1
  %2264 = add i32 %2197, 1
  br i1 %2262, label %2196, label %2265, !llvm.loop !93

2265:                                             ; preds = %2255, %2191
  %2266 = phi i32 [ %2195, %2191 ], [ %2261, %2255 ]
  %2267 = sext i32 %2266 to i64
  %2268 = getelementptr inbounds i8, ptr %1854, i64 %2267
  %2269 = load i8, ptr %2268, align 1, !tbaa !12
  %2270 = zext i8 %2269 to i16
  %2271 = mul nuw i16 %2270, %2270
  %2272 = mul i16 %2271, %2271
  %2273 = add i16 %2272, %2192
  store i16 %2273, ptr %1856, align 2, !tbaa !79
  %2274 = fadd fast double %2194, 1.000000e+00
  %2275 = add nuw nsw i32 %2193, 1
  br i1 %2185, label %2276, label %2323

2276:                                             ; preds = %2265
  %2277 = load i32, ptr %4, align 4, !tbaa !6
  %2278 = load i32, ptr %12, align 4, !tbaa !6
  %2279 = add nsw i32 %2278, -1
  %2280 = icmp slt i32 %2277, %2279
  br i1 %2280, label %2300, label %2281

2281:                                             ; preds = %2276
  %2282 = icmp eq i32 %2277, %2279
  br i1 %2282, label %2283, label %2316

2283:                                             ; preds = %2281
  store i32 0, ptr %4, align 4, !tbaa !6
  %2284 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2284, ptr %6, align 4, !tbaa !6
  br i1 %2190, label %2323, label %2285

2285:                                             ; preds = %2283, %2310
  %2286 = phi i64 [ %2314, %2310 ], [ 1, %2283 ]
  %2287 = getelementptr inbounds i32, ptr %4, i64 %2286
  %2288 = load i32, ptr %2287, align 4, !tbaa !6
  %2289 = getelementptr inbounds i32, ptr %12, i64 %2286
  %2290 = load i32, ptr %2289, align 4, !tbaa !6
  %2291 = add nsw i32 %2290, -1
  %2292 = icmp slt i32 %2288, %2291
  br i1 %2292, label %2293, label %2308

2293:                                             ; preds = %2285
  br i1 %2280, label %2300, label %2294

2294:                                             ; preds = %2293
  %2295 = getelementptr inbounds i32, ptr %7, i64 %2286
  %2296 = load i32, ptr %2295, align 4, !tbaa !6
  %2297 = getelementptr inbounds i32, ptr %6, i64 %2286
  %2298 = load i32, ptr %2297, align 4, !tbaa !6
  %2299 = add nsw i32 %2298, %2296
  store i32 %2299, ptr %2297, align 4, !tbaa !6
  br label %2318

2300:                                             ; preds = %2276, %2293
  %2301 = phi i32 [ %2288, %2293 ], [ %2277, %2276 ]
  %2302 = phi ptr [ %2287, %2293 ], [ %4, %2276 ]
  %2303 = phi i64 [ %2286, %2293 ], [ 0, %2276 ]
  %2304 = add nsw i32 %2301, 1
  store i32 %2304, ptr %2302, align 4, !tbaa !6
  %2305 = getelementptr inbounds i32, ptr %7, i64 %2303
  %2306 = load i32, ptr %2305, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %6, i64 %2303
  br label %2318

2308:                                             ; preds = %2285
  %2309 = icmp eq i32 %2288, %2291
  br i1 %2309, label %2310, label %2316

2310:                                             ; preds = %2308
  store i32 0, ptr %2287, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %8, i64 %2286
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2286
  store i32 %2312, ptr %2313, align 4, !tbaa !6
  %2314 = add nuw nsw i64 %2286, 1
  %2315 = icmp eq i64 %2314, %2188
  br i1 %2315, label %2323, label %2285, !llvm.loop !94

2316:                                             ; preds = %2281, %2308
  %2317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2318:                                             ; preds = %2294, %2300
  %2319 = phi ptr [ %2307, %2300 ], [ %2287, %2294 ]
  %2320 = phi i32 [ %2306, %2300 ], [ 1, %2294 ]
  %2321 = load i32, ptr %2319, align 4, !tbaa !6
  %2322 = add nsw i32 %2321, %2320
  store i32 %2322, ptr %2319, align 4, !tbaa !6
  br label %2323

2323:                                             ; preds = %2310, %2318, %2283, %2265
  %2324 = icmp eq i32 %2275, %5
  br i1 %2324, label %5522, label %2191, !llvm.loop !95

2325:                                             ; preds = %2174, %2462
  %2326 = phi i16 [ 0, %2174 ], [ %2410, %2462 ]
  %2327 = phi i32 [ 0, %2174 ], [ %2411, %2462 ]
  %2328 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2175, label %2329, label %2398

2329:                                             ; preds = %2325, %2388
  %2330 = phi i32 [ %2397, %2388 ], [ 0, %2325 ]
  %2331 = phi i64 [ %2339, %2388 ], [ %2179, %2325 ]
  %2332 = phi i64 [ %2396, %2388 ], [ %2178, %2325 ]
  %2333 = phi i32 [ %2394, %2388 ], [ %2328, %2325 ]
  %2334 = sub i32 %2177, %2330
  %2335 = tail call i32 @llvm.smin.i32(i32 %2334, i32 0)
  %2336 = sub i32 %2334, %2335
  %2337 = zext i32 %2336 to i64
  %2338 = add nuw nsw i64 %2337, 1
  %2339 = add nsw i64 %2331, -1
  %2340 = icmp ult i32 %2336, 31
  br i1 %2340, label %2376, label %2341

2341:                                             ; preds = %2329
  %2342 = and i64 %2338, 8589934560
  %2343 = sub i64 %2332, %2342
  br label %2344

2344:                                             ; preds = %2344, %2341
  %2345 = phi i64 [ 0, %2341 ], [ %2368, %2344 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2341 ], [ %2364, %2344 ]
  %2347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2341 ], [ %2365, %2344 ]
  %2348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2341 ], [ %2366, %2344 ]
  %2349 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2341 ], [ %2367, %2344 ]
  %2350 = sub i64 %2332, %2345
  %2351 = getelementptr inbounds i32, ptr %11, i64 %2350
  %2352 = getelementptr inbounds i32, ptr %2351, i64 -7
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !6
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = getelementptr inbounds i32, ptr %2351, i64 -15
  %2356 = load <8 x i32>, ptr %2355, align 4, !tbaa !6
  %2357 = shufflevector <8 x i32> %2356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2358 = getelementptr inbounds i32, ptr %2351, i64 -23
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = getelementptr inbounds i32, ptr %2351, i64 -31
  %2362 = load <8 x i32>, ptr %2361, align 4, !tbaa !6
  %2363 = shufflevector <8 x i32> %2362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2364 = mul <8 x i32> %2354, %2346
  %2365 = mul <8 x i32> %2357, %2347
  %2366 = mul <8 x i32> %2360, %2348
  %2367 = mul <8 x i32> %2363, %2349
  %2368 = add nuw i64 %2345, 32
  %2369 = icmp eq i64 %2368, %2342
  br i1 %2369, label %2370, label %2344, !llvm.loop !96

2370:                                             ; preds = %2344
  %2371 = mul <8 x i32> %2365, %2364
  %2372 = mul <8 x i32> %2366, %2371
  %2373 = mul <8 x i32> %2367, %2372
  %2374 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2373)
  %2375 = icmp eq i64 %2338, %2342
  br i1 %2375, label %2388, label %2376

2376:                                             ; preds = %2329, %2370
  %2377 = phi i64 [ %2332, %2329 ], [ %2343, %2370 ]
  %2378 = phi i32 [ 1, %2329 ], [ %2374, %2370 ]
  br label %2379

2379:                                             ; preds = %2376, %2379
  %2380 = phi i64 [ %2385, %2379 ], [ %2377, %2376 ]
  %2381 = phi i32 [ %2384, %2379 ], [ %2378, %2376 ]
  %2382 = getelementptr inbounds i32, ptr %11, i64 %2380
  %2383 = load i32, ptr %2382, align 4, !tbaa !6
  %2384 = mul nsw i32 %2383, %2381
  %2385 = add nsw i64 %2380, -1
  %2386 = trunc i64 %2380 to i32
  %2387 = icmp sgt i32 %2386, 0
  br i1 %2387, label %2379, label %2388, !llvm.loop !97

2388:                                             ; preds = %2379, %2370
  %2389 = phi i32 [ %2374, %2370 ], [ %2384, %2379 ]
  %2390 = and i64 %2339, 4294967295
  %2391 = getelementptr inbounds i32, ptr %6, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !6
  %2393 = mul nsw i32 %2392, %2389
  %2394 = add nsw i32 %2393, %2333
  %2395 = icmp sgt i64 %2331, 2
  %2396 = add nsw i64 %2332, -1
  %2397 = add i32 %2330, 1
  br i1 %2395, label %2329, label %2398, !llvm.loop !98

2398:                                             ; preds = %2388, %2325
  %2399 = phi i32 [ %2328, %2325 ], [ %2394, %2388 ]
  %2400 = icmp slt i32 %2399, %5
  br i1 %2400, label %2403, label %2401

2401:                                             ; preds = %2398
  %2402 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2403:                                             ; preds = %2398
  %2404 = sext i32 %2399 to i64
  %2405 = getelementptr inbounds i8, ptr %1854, i64 %2404
  %2406 = load i8, ptr %2405, align 1, !tbaa !12
  %2407 = zext i8 %2406 to i16
  %2408 = mul nuw i16 %2407, %2407
  %2409 = mul i16 %2408, %2408
  %2410 = add i16 %2409, %2326
  store i16 %2410, ptr %1856, align 2, !tbaa !79
  %2411 = add nuw nsw i32 %2327, 1
  br i1 %2176, label %2412, label %2462

2412:                                             ; preds = %2403
  %2413 = load i32, ptr %4, align 4, !tbaa !6
  %2414 = load i32, ptr %12, align 4, !tbaa !6
  %2415 = add nsw i32 %2414, -1
  %2416 = icmp slt i32 %2413, %2415
  br i1 %2416, label %2439, label %2417

2417:                                             ; preds = %2412
  %2418 = icmp eq i32 %2413, %2415
  br i1 %2418, label %2419, label %2455

2419:                                             ; preds = %2417
  store i32 0, ptr %4, align 4, !tbaa !6
  %2420 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2420, ptr %6, align 4, !tbaa !6
  br i1 %2181, label %2462, label %2421

2421:                                             ; preds = %2419, %2449
  %2422 = phi i64 [ %2453, %2449 ], [ 1, %2419 ]
  %2423 = getelementptr inbounds i32, ptr %4, i64 %2422
  %2424 = load i32, ptr %2423, align 4, !tbaa !6
  %2425 = getelementptr inbounds i32, ptr %12, i64 %2422
  %2426 = load i32, ptr %2425, align 4, !tbaa !6
  %2427 = add nsw i32 %2426, -1
  %2428 = icmp slt i32 %2424, %2427
  br i1 %2428, label %2429, label %2447

2429:                                             ; preds = %2421
  br i1 %2416, label %2439, label %2430

2430:                                             ; preds = %2429
  %2431 = shl i64 %2422, 32
  %2432 = add i64 %2431, -4294967296
  %2433 = ashr exact i64 %2432, 32
  %2434 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = getelementptr inbounds i32, ptr %6, i64 %2422
  %2437 = load i32, ptr %2436, align 4, !tbaa !6
  %2438 = add nsw i32 %2437, %2435
  store i32 %2438, ptr %2436, align 4, !tbaa !6
  br label %2457

2439:                                             ; preds = %2412, %2429
  %2440 = phi i32 [ %2424, %2429 ], [ %2413, %2412 ]
  %2441 = phi ptr [ %2423, %2429 ], [ %4, %2412 ]
  %2442 = phi i64 [ %2422, %2429 ], [ 0, %2412 ]
  %2443 = add nsw i32 %2440, 1
  store i32 %2443, ptr %2441, align 4, !tbaa !6
  %2444 = getelementptr inbounds i32, ptr %7, i64 %2442
  %2445 = load i32, ptr %2444, align 4, !tbaa !6
  %2446 = getelementptr inbounds i32, ptr %6, i64 %2442
  br label %2457

2447:                                             ; preds = %2421
  %2448 = icmp eq i32 %2424, %2427
  br i1 %2448, label %2449, label %2455

2449:                                             ; preds = %2447
  store i32 0, ptr %2423, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %8, i64 %2422
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2422
  store i32 %2451, ptr %2452, align 4, !tbaa !6
  %2453 = add nuw nsw i64 %2422, 1
  %2454 = icmp eq i64 %2453, %2179
  br i1 %2454, label %2462, label %2421, !llvm.loop !99

2455:                                             ; preds = %2417, %2447
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2457:                                             ; preds = %2430, %2439
  %2458 = phi ptr [ %2446, %2439 ], [ %2423, %2430 ]
  %2459 = phi i32 [ %2445, %2439 ], [ 1, %2430 ]
  %2460 = load i32, ptr %2458, align 4, !tbaa !6
  %2461 = add nsw i32 %2460, %2459
  store i32 %2461, ptr %2458, align 4, !tbaa !6
  br label %2462

2462:                                             ; preds = %2449, %2457, %2419, %2403
  %2463 = icmp eq i32 %2411, %5
  br i1 %2463, label %5522, label %2325, !llvm.loop !100

2464:                                             ; preds = %1863
  %2465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

2466:                                             ; preds = %18
  %2467 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !10
  %2469 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2470 = load ptr, ptr %2469, align 8, !tbaa !10
  store i32 0, ptr %2470, align 4, !tbaa !6
  %2471 = icmp eq i32 %13, 0
  br i1 %2471, label %2472, label %2477

2472:                                             ; preds = %2466
  %2473 = load i8, ptr %2468, align 1, !tbaa !12
  %2474 = zext i8 %2473 to i32
  %2475 = mul nuw nsw i32 %2474, %2474
  %2476 = mul nuw i32 %2475, %2475
  store i32 %2476, ptr %2470, align 4, !tbaa !6
  br label %5522

2477:                                             ; preds = %2466
  switch i32 %1, label %3076 [
    i32 1, label %2478
    i32 0, label %2780
  ]

2478:                                             ; preds = %2477
  %2479 = getelementptr inbounds i32, ptr %3, i64 %19
  %2480 = load i32, ptr %2479, align 4, !tbaa !6
  %2481 = icmp eq i32 %2480, 0
  %2482 = icmp sgt i32 %5, 0
  br i1 %2481, label %2492, label %2483

2483:                                             ; preds = %2478
  br i1 %2482, label %2484, label %5522

2484:                                             ; preds = %2483
  %2485 = icmp sgt i32 %13, 1
  %2486 = icmp sgt i32 %13, 0
  %2487 = add i32 %13, -2
  %2488 = zext i32 %2487 to i64
  %2489 = zext i32 %13 to i64
  %2490 = add nuw i32 %5, 1
  %2491 = icmp eq i32 %13, 1
  br label %2640

2492:                                             ; preds = %2478
  br i1 %2482, label %2493, label %5522

2493:                                             ; preds = %2492
  %2494 = icmp sgt i32 %13, 1
  %2495 = icmp sgt i32 %13, 0
  %2496 = add i32 %13, -2
  %2497 = zext i32 %2496 to i64
  %2498 = zext i32 %13 to i64
  %2499 = add nuw i32 %5, 1
  %2500 = icmp eq i32 %13, 1
  br label %2501

2501:                                             ; preds = %2493, %2638
  %2502 = phi i32 [ 0, %2493 ], [ %2590, %2638 ]
  %2503 = phi double [ 0.000000e+00, %2493 ], [ %2589, %2638 ]
  %2504 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2494, label %2505, label %2574

2505:                                             ; preds = %2501, %2564
  %2506 = phi i32 [ %2573, %2564 ], [ 0, %2501 ]
  %2507 = phi i64 [ %2515, %2564 ], [ %2498, %2501 ]
  %2508 = phi i64 [ %2572, %2564 ], [ %2497, %2501 ]
  %2509 = phi i32 [ %2570, %2564 ], [ %2504, %2501 ]
  %2510 = sub i32 %2496, %2506
  %2511 = tail call i32 @llvm.smin.i32(i32 %2510, i32 0)
  %2512 = sub i32 %2510, %2511
  %2513 = zext i32 %2512 to i64
  %2514 = add nuw nsw i64 %2513, 1
  %2515 = add nsw i64 %2507, -1
  %2516 = icmp ult i32 %2512, 31
  br i1 %2516, label %2552, label %2517

2517:                                             ; preds = %2505
  %2518 = and i64 %2514, 8589934560
  %2519 = sub i64 %2508, %2518
  br label %2520

2520:                                             ; preds = %2520, %2517
  %2521 = phi i64 [ 0, %2517 ], [ %2544, %2520 ]
  %2522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2540, %2520 ]
  %2523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2541, %2520 ]
  %2524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2542, %2520 ]
  %2525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2543, %2520 ]
  %2526 = sub i64 %2508, %2521
  %2527 = getelementptr inbounds i32, ptr %9, i64 %2526
  %2528 = getelementptr inbounds i32, ptr %2527, i64 -7
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !6
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2527, i64 -15
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !6
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = getelementptr inbounds i32, ptr %2527, i64 -23
  %2535 = load <8 x i32>, ptr %2534, align 4, !tbaa !6
  %2536 = shufflevector <8 x i32> %2535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2537 = getelementptr inbounds i32, ptr %2527, i64 -31
  %2538 = load <8 x i32>, ptr %2537, align 4, !tbaa !6
  %2539 = shufflevector <8 x i32> %2538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2540 = mul <8 x i32> %2530, %2522
  %2541 = mul <8 x i32> %2533, %2523
  %2542 = mul <8 x i32> %2536, %2524
  %2543 = mul <8 x i32> %2539, %2525
  %2544 = add nuw i64 %2521, 32
  %2545 = icmp eq i64 %2544, %2518
  br i1 %2545, label %2546, label %2520, !llvm.loop !101

2546:                                             ; preds = %2520
  %2547 = mul <8 x i32> %2541, %2540
  %2548 = mul <8 x i32> %2542, %2547
  %2549 = mul <8 x i32> %2543, %2548
  %2550 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2549)
  %2551 = icmp eq i64 %2514, %2518
  br i1 %2551, label %2564, label %2552

2552:                                             ; preds = %2505, %2546
  %2553 = phi i64 [ %2508, %2505 ], [ %2519, %2546 ]
  %2554 = phi i32 [ 1, %2505 ], [ %2550, %2546 ]
  br label %2555

2555:                                             ; preds = %2552, %2555
  %2556 = phi i64 [ %2561, %2555 ], [ %2553, %2552 ]
  %2557 = phi i32 [ %2560, %2555 ], [ %2554, %2552 ]
  %2558 = getelementptr inbounds i32, ptr %9, i64 %2556
  %2559 = load i32, ptr %2558, align 4, !tbaa !6
  %2560 = mul nsw i32 %2559, %2557
  %2561 = add nsw i64 %2556, -1
  %2562 = trunc i64 %2556 to i32
  %2563 = icmp sgt i32 %2562, 0
  br i1 %2563, label %2555, label %2564, !llvm.loop !102

2564:                                             ; preds = %2555, %2546
  %2565 = phi i32 [ %2550, %2546 ], [ %2560, %2555 ]
  %2566 = and i64 %2515, 4294967295
  %2567 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !6
  %2569 = mul nsw i32 %2568, %2565
  %2570 = add nsw i32 %2569, %2509
  %2571 = icmp sgt i64 %2507, 2
  %2572 = add nsw i64 %2508, -1
  %2573 = add i32 %2506, 1
  br i1 %2571, label %2505, label %2574, !llvm.loop !103

2574:                                             ; preds = %2564, %2501
  %2575 = phi i32 [ %2504, %2501 ], [ %2570, %2564 ]
  %2576 = sext i32 %2575 to i64
  %2577 = getelementptr inbounds double, ptr %2, i64 %2576
  %2578 = load double, ptr %2577, align 8, !tbaa !19
  %2579 = getelementptr inbounds i8, ptr %2468, i64 %2576
  %2580 = load i8, ptr %2579, align 1, !tbaa !12
  %2581 = load i32, ptr %2470, align 4, !tbaa !6
  %2582 = sitofp i32 %2581 to double
  %2583 = uitofp i8 %2580 to double
  %2584 = fmul fast double %2578, %2583
  %2585 = fmul fast double %2584, %2584
  %2586 = fmul fast double %2585, %2585
  %2587 = fadd fast double %2586, %2582
  %2588 = fptosi double %2587 to i32
  store i32 %2588, ptr %2470, align 4, !tbaa !6
  %2589 = fadd fast double %2578, %2503
  %2590 = add nuw nsw i32 %2502, 1
  br i1 %2495, label %2591, label %2638

2591:                                             ; preds = %2574
  %2592 = load i32, ptr %4, align 4, !tbaa !6
  %2593 = load i32, ptr %12, align 4, !tbaa !6
  %2594 = add nsw i32 %2593, -1
  %2595 = icmp slt i32 %2592, %2594
  br i1 %2595, label %2615, label %2596

2596:                                             ; preds = %2591
  %2597 = icmp eq i32 %2592, %2594
  br i1 %2597, label %2598, label %2631

2598:                                             ; preds = %2596
  store i32 0, ptr %4, align 4, !tbaa !6
  %2599 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2599, ptr %6, align 4, !tbaa !6
  br i1 %2500, label %2638, label %2600

2600:                                             ; preds = %2598, %2625
  %2601 = phi i64 [ %2629, %2625 ], [ 1, %2598 ]
  %2602 = getelementptr inbounds i32, ptr %4, i64 %2601
  %2603 = load i32, ptr %2602, align 4, !tbaa !6
  %2604 = getelementptr inbounds i32, ptr %12, i64 %2601
  %2605 = load i32, ptr %2604, align 4, !tbaa !6
  %2606 = add nsw i32 %2605, -1
  %2607 = icmp slt i32 %2603, %2606
  br i1 %2607, label %2608, label %2623

2608:                                             ; preds = %2600
  br i1 %2595, label %2615, label %2609

2609:                                             ; preds = %2608
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2601
  %2611 = load i32, ptr %2610, align 4, !tbaa !6
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2601
  %2613 = load i32, ptr %2612, align 4, !tbaa !6
  %2614 = add nsw i32 %2613, %2611
  store i32 %2614, ptr %2612, align 4, !tbaa !6
  br label %2633

2615:                                             ; preds = %2591, %2608
  %2616 = phi i32 [ %2603, %2608 ], [ %2592, %2591 ]
  %2617 = phi ptr [ %2602, %2608 ], [ %4, %2591 ]
  %2618 = phi i64 [ %2601, %2608 ], [ 0, %2591 ]
  %2619 = add nsw i32 %2616, 1
  store i32 %2619, ptr %2617, align 4, !tbaa !6
  %2620 = getelementptr inbounds i32, ptr %7, i64 %2618
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2618
  br label %2633

2623:                                             ; preds = %2600
  %2624 = icmp eq i32 %2603, %2606
  br i1 %2624, label %2625, label %2631

2625:                                             ; preds = %2623
  store i32 0, ptr %2602, align 4, !tbaa !6
  %2626 = getelementptr inbounds i32, ptr %8, i64 %2601
  %2627 = load i32, ptr %2626, align 4, !tbaa !6
  %2628 = getelementptr inbounds i32, ptr %6, i64 %2601
  store i32 %2627, ptr %2628, align 4, !tbaa !6
  %2629 = add nuw nsw i64 %2601, 1
  %2630 = icmp eq i64 %2629, %2498
  br i1 %2630, label %2638, label %2600, !llvm.loop !104

2631:                                             ; preds = %2596, %2623
  %2632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2633:                                             ; preds = %2609, %2615
  %2634 = phi ptr [ %2622, %2615 ], [ %2602, %2609 ]
  %2635 = phi i32 [ %2621, %2615 ], [ 1, %2609 ]
  %2636 = load i32, ptr %2634, align 4, !tbaa !6
  %2637 = add nsw i32 %2636, %2635
  store i32 %2637, ptr %2634, align 4, !tbaa !6
  br label %2638

2638:                                             ; preds = %2625, %2633, %2598, %2574
  %2639 = icmp eq i32 %2590, %5
  br i1 %2639, label %5522, label %2501, !llvm.loop !105

2640:                                             ; preds = %2484, %2778
  %2641 = phi i32 [ 0, %2484 ], [ %2727, %2778 ]
  %2642 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2485, label %2643, label %2712

2643:                                             ; preds = %2640, %2702
  %2644 = phi i32 [ %2711, %2702 ], [ 0, %2640 ]
  %2645 = phi i64 [ %2653, %2702 ], [ %2489, %2640 ]
  %2646 = phi i64 [ %2710, %2702 ], [ %2488, %2640 ]
  %2647 = phi i32 [ %2708, %2702 ], [ %2642, %2640 ]
  %2648 = sub i32 %2487, %2644
  %2649 = tail call i32 @llvm.smin.i32(i32 %2648, i32 0)
  %2650 = sub i32 %2648, %2649
  %2651 = zext i32 %2650 to i64
  %2652 = add nuw nsw i64 %2651, 1
  %2653 = add nsw i64 %2645, -1
  %2654 = icmp ult i32 %2650, 31
  br i1 %2654, label %2690, label %2655

2655:                                             ; preds = %2643
  %2656 = and i64 %2652, 8589934560
  %2657 = sub i64 %2646, %2656
  br label %2658

2658:                                             ; preds = %2658, %2655
  %2659 = phi i64 [ 0, %2655 ], [ %2682, %2658 ]
  %2660 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2678, %2658 ]
  %2661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2679, %2658 ]
  %2662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2680, %2658 ]
  %2663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2681, %2658 ]
  %2664 = sub i64 %2646, %2659
  %2665 = getelementptr inbounds i32, ptr %11, i64 %2664
  %2666 = getelementptr inbounds i32, ptr %2665, i64 -7
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !6
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2665, i64 -15
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !6
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = getelementptr inbounds i32, ptr %2665, i64 -23
  %2673 = load <8 x i32>, ptr %2672, align 4, !tbaa !6
  %2674 = shufflevector <8 x i32> %2673, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2675 = getelementptr inbounds i32, ptr %2665, i64 -31
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !6
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = mul <8 x i32> %2668, %2660
  %2679 = mul <8 x i32> %2671, %2661
  %2680 = mul <8 x i32> %2674, %2662
  %2681 = mul <8 x i32> %2677, %2663
  %2682 = add nuw i64 %2659, 32
  %2683 = icmp eq i64 %2682, %2656
  br i1 %2683, label %2684, label %2658, !llvm.loop !106

2684:                                             ; preds = %2658
  %2685 = mul <8 x i32> %2679, %2678
  %2686 = mul <8 x i32> %2680, %2685
  %2687 = mul <8 x i32> %2681, %2686
  %2688 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2687)
  %2689 = icmp eq i64 %2652, %2656
  br i1 %2689, label %2702, label %2690

2690:                                             ; preds = %2643, %2684
  %2691 = phi i64 [ %2646, %2643 ], [ %2657, %2684 ]
  %2692 = phi i32 [ 1, %2643 ], [ %2688, %2684 ]
  br label %2693

2693:                                             ; preds = %2690, %2693
  %2694 = phi i64 [ %2699, %2693 ], [ %2691, %2690 ]
  %2695 = phi i32 [ %2698, %2693 ], [ %2692, %2690 ]
  %2696 = getelementptr inbounds i32, ptr %11, i64 %2694
  %2697 = load i32, ptr %2696, align 4, !tbaa !6
  %2698 = mul nsw i32 %2697, %2695
  %2699 = add nsw i64 %2694, -1
  %2700 = trunc i64 %2694 to i32
  %2701 = icmp sgt i32 %2700, 0
  br i1 %2701, label %2693, label %2702, !llvm.loop !107

2702:                                             ; preds = %2693, %2684
  %2703 = phi i32 [ %2688, %2684 ], [ %2698, %2693 ]
  %2704 = and i64 %2653, 4294967295
  %2705 = getelementptr inbounds i32, ptr %6, i64 %2704
  %2706 = load i32, ptr %2705, align 4, !tbaa !6
  %2707 = mul nsw i32 %2706, %2703
  %2708 = add nsw i32 %2707, %2647
  %2709 = icmp sgt i64 %2645, 2
  %2710 = add nsw i64 %2646, -1
  %2711 = add i32 %2644, 1
  br i1 %2709, label %2643, label %2712, !llvm.loop !108

2712:                                             ; preds = %2702, %2640
  %2713 = phi i32 [ %2642, %2640 ], [ %2708, %2702 ]
  %2714 = icmp slt i32 %2713, %5
  br i1 %2714, label %2717, label %2715

2715:                                             ; preds = %2712
  %2716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2717:                                             ; preds = %2712
  %2718 = sext i32 %2713 to i64
  %2719 = getelementptr inbounds i8, ptr %2468, i64 %2718
  %2720 = load i8, ptr %2719, align 1, !tbaa !12
  %2721 = load i32, ptr %2470, align 4, !tbaa !6
  %2722 = zext i8 %2720 to i64
  %2723 = mul nuw nsw i64 %2722, %2722
  %2724 = mul nuw nsw i64 %2723, %2723
  %2725 = trunc i64 %2724 to i32
  %2726 = add i32 %2721, %2725
  store i32 %2726, ptr %2470, align 4, !tbaa !6
  %2727 = add nuw nsw i32 %2641, 1
  br i1 %2486, label %2728, label %2778

2728:                                             ; preds = %2717
  %2729 = load i32, ptr %4, align 4, !tbaa !6
  %2730 = load i32, ptr %12, align 4, !tbaa !6
  %2731 = add nsw i32 %2730, -1
  %2732 = icmp slt i32 %2729, %2731
  br i1 %2732, label %2755, label %2733

2733:                                             ; preds = %2728
  %2734 = icmp eq i32 %2729, %2731
  br i1 %2734, label %2735, label %2771

2735:                                             ; preds = %2733
  store i32 0, ptr %4, align 4, !tbaa !6
  %2736 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2736, ptr %6, align 4, !tbaa !6
  br i1 %2491, label %2778, label %2737

2737:                                             ; preds = %2735, %2765
  %2738 = phi i64 [ %2769, %2765 ], [ 1, %2735 ]
  %2739 = getelementptr inbounds i32, ptr %4, i64 %2738
  %2740 = load i32, ptr %2739, align 4, !tbaa !6
  %2741 = getelementptr inbounds i32, ptr %12, i64 %2738
  %2742 = load i32, ptr %2741, align 4, !tbaa !6
  %2743 = add nsw i32 %2742, -1
  %2744 = icmp slt i32 %2740, %2743
  br i1 %2744, label %2745, label %2763

2745:                                             ; preds = %2737
  br i1 %2732, label %2755, label %2746

2746:                                             ; preds = %2745
  %2747 = shl i64 %2738, 32
  %2748 = add i64 %2747, -4294967296
  %2749 = ashr exact i64 %2748, 32
  %2750 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !6
  %2752 = getelementptr inbounds i32, ptr %6, i64 %2738
  %2753 = load i32, ptr %2752, align 4, !tbaa !6
  %2754 = add nsw i32 %2753, %2751
  store i32 %2754, ptr %2752, align 4, !tbaa !6
  br label %2773

2755:                                             ; preds = %2728, %2745
  %2756 = phi i32 [ %2740, %2745 ], [ %2729, %2728 ]
  %2757 = phi ptr [ %2739, %2745 ], [ %4, %2728 ]
  %2758 = phi i64 [ %2738, %2745 ], [ 0, %2728 ]
  %2759 = add nsw i32 %2756, 1
  store i32 %2759, ptr %2757, align 4, !tbaa !6
  %2760 = getelementptr inbounds i32, ptr %7, i64 %2758
  %2761 = load i32, ptr %2760, align 4, !tbaa !6
  %2762 = getelementptr inbounds i32, ptr %6, i64 %2758
  br label %2773

2763:                                             ; preds = %2737
  %2764 = icmp eq i32 %2740, %2743
  br i1 %2764, label %2765, label %2771

2765:                                             ; preds = %2763
  store i32 0, ptr %2739, align 4, !tbaa !6
  %2766 = getelementptr inbounds i32, ptr %8, i64 %2738
  %2767 = load i32, ptr %2766, align 4, !tbaa !6
  %2768 = getelementptr inbounds i32, ptr %6, i64 %2738
  store i32 %2767, ptr %2768, align 4, !tbaa !6
  %2769 = add nuw nsw i64 %2738, 1
  %2770 = icmp eq i64 %2769, %2489
  br i1 %2770, label %2778, label %2737, !llvm.loop !109

2771:                                             ; preds = %2733, %2763
  %2772 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2773:                                             ; preds = %2746, %2755
  %2774 = phi ptr [ %2762, %2755 ], [ %2739, %2746 ]
  %2775 = phi i32 [ %2761, %2755 ], [ 1, %2746 ]
  %2776 = load i32, ptr %2774, align 4, !tbaa !6
  %2777 = add nsw i32 %2776, %2775
  store i32 %2777, ptr %2774, align 4, !tbaa !6
  br label %2778

2778:                                             ; preds = %2765, %2773, %2735, %2717
  %2779 = icmp eq i32 %2727, %5
  br i1 %2779, label %5522, label %2640, !llvm.loop !110

2780:                                             ; preds = %2477
  %2781 = getelementptr inbounds i32, ptr %3, i64 %19
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = icmp eq i32 %2782, 0
  %2784 = icmp sgt i32 %5, 0
  br i1 %2783, label %2794, label %2785

2785:                                             ; preds = %2780
  br i1 %2784, label %2786, label %5522

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2937

2794:                                             ; preds = %2780
  br i1 %2784, label %2795, label %5522

2795:                                             ; preds = %2794
  %2796 = icmp sgt i32 %13, 1
  %2797 = icmp sgt i32 %13, 0
  %2798 = add i32 %13, -2
  %2799 = zext i32 %2798 to i64
  %2800 = zext i32 %13 to i64
  %2801 = add nuw i32 %5, 1
  %2802 = icmp eq i32 %13, 1
  br label %2803

2803:                                             ; preds = %2795, %2935
  %2804 = phi i32 [ 0, %2795 ], [ %2887, %2935 ]
  %2805 = phi double [ 0.000000e+00, %2795 ], [ %2886, %2935 ]
  %2806 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2796, label %2807, label %2876

2807:                                             ; preds = %2803, %2866
  %2808 = phi i32 [ %2875, %2866 ], [ 0, %2803 ]
  %2809 = phi i64 [ %2817, %2866 ], [ %2800, %2803 ]
  %2810 = phi i64 [ %2874, %2866 ], [ %2799, %2803 ]
  %2811 = phi i32 [ %2872, %2866 ], [ %2806, %2803 ]
  %2812 = sub i32 %2798, %2808
  %2813 = tail call i32 @llvm.smin.i32(i32 %2812, i32 0)
  %2814 = sub i32 %2812, %2813
  %2815 = zext i32 %2814 to i64
  %2816 = add nuw nsw i64 %2815, 1
  %2817 = add nsw i64 %2809, -1
  %2818 = icmp ult i32 %2814, 31
  br i1 %2818, label %2854, label %2819

2819:                                             ; preds = %2807
  %2820 = and i64 %2816, 8589934560
  %2821 = sub i64 %2810, %2820
  br label %2822

2822:                                             ; preds = %2822, %2819
  %2823 = phi i64 [ 0, %2819 ], [ %2846, %2822 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2842, %2822 ]
  %2825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2843, %2822 ]
  %2826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2844, %2822 ]
  %2827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2845, %2822 ]
  %2828 = sub i64 %2810, %2823
  %2829 = getelementptr inbounds i32, ptr %9, i64 %2828
  %2830 = getelementptr inbounds i32, ptr %2829, i64 -7
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !6
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2829, i64 -15
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !6
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2829, i64 -23
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !6
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = getelementptr inbounds i32, ptr %2829, i64 -31
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !6
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = mul <8 x i32> %2832, %2824
  %2843 = mul <8 x i32> %2835, %2825
  %2844 = mul <8 x i32> %2838, %2826
  %2845 = mul <8 x i32> %2841, %2827
  %2846 = add nuw i64 %2823, 32
  %2847 = icmp eq i64 %2846, %2820
  br i1 %2847, label %2848, label %2822, !llvm.loop !111

2848:                                             ; preds = %2822
  %2849 = mul <8 x i32> %2843, %2842
  %2850 = mul <8 x i32> %2844, %2849
  %2851 = mul <8 x i32> %2845, %2850
  %2852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2851)
  %2853 = icmp eq i64 %2816, %2820
  br i1 %2853, label %2866, label %2854

2854:                                             ; preds = %2807, %2848
  %2855 = phi i64 [ %2810, %2807 ], [ %2821, %2848 ]
  %2856 = phi i32 [ 1, %2807 ], [ %2852, %2848 ]
  br label %2857

2857:                                             ; preds = %2854, %2857
  %2858 = phi i64 [ %2863, %2857 ], [ %2855, %2854 ]
  %2859 = phi i32 [ %2862, %2857 ], [ %2856, %2854 ]
  %2860 = getelementptr inbounds i32, ptr %9, i64 %2858
  %2861 = load i32, ptr %2860, align 4, !tbaa !6
  %2862 = mul nsw i32 %2861, %2859
  %2863 = add nsw i64 %2858, -1
  %2864 = trunc i64 %2858 to i32
  %2865 = icmp sgt i32 %2864, 0
  br i1 %2865, label %2857, label %2866, !llvm.loop !112

2866:                                             ; preds = %2857, %2848
  %2867 = phi i32 [ %2852, %2848 ], [ %2862, %2857 ]
  %2868 = and i64 %2817, 4294967295
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2868
  %2870 = load i32, ptr %2869, align 4, !tbaa !6
  %2871 = mul nsw i32 %2870, %2867
  %2872 = add nsw i32 %2871, %2811
  %2873 = icmp sgt i64 %2809, 2
  %2874 = add nsw i64 %2810, -1
  %2875 = add i32 %2808, 1
  br i1 %2873, label %2807, label %2876, !llvm.loop !113

2876:                                             ; preds = %2866, %2803
  %2877 = phi i32 [ %2806, %2803 ], [ %2872, %2866 ]
  %2878 = sext i32 %2877 to i64
  %2879 = getelementptr inbounds i8, ptr %2468, i64 %2878
  %2880 = load i8, ptr %2879, align 1, !tbaa !12
  %2881 = zext i8 %2880 to i32
  %2882 = load i32, ptr %2470, align 4, !tbaa !6
  %2883 = mul nuw nsw i32 %2881, %2881
  %2884 = mul nuw i32 %2883, %2883
  %2885 = add nsw i32 %2884, %2882
  store i32 %2885, ptr %2470, align 4, !tbaa !6
  %2886 = fadd fast double %2805, 1.000000e+00
  %2887 = add nuw nsw i32 %2804, 1
  br i1 %2797, label %2888, label %2935

2888:                                             ; preds = %2876
  %2889 = load i32, ptr %4, align 4, !tbaa !6
  %2890 = load i32, ptr %12, align 4, !tbaa !6
  %2891 = add nsw i32 %2890, -1
  %2892 = icmp slt i32 %2889, %2891
  br i1 %2892, label %2912, label %2893

2893:                                             ; preds = %2888
  %2894 = icmp eq i32 %2889, %2891
  br i1 %2894, label %2895, label %2928

2895:                                             ; preds = %2893
  store i32 0, ptr %4, align 4, !tbaa !6
  %2896 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2896, ptr %6, align 4, !tbaa !6
  br i1 %2802, label %2935, label %2897

2897:                                             ; preds = %2895, %2922
  %2898 = phi i64 [ %2926, %2922 ], [ 1, %2895 ]
  %2899 = getelementptr inbounds i32, ptr %4, i64 %2898
  %2900 = load i32, ptr %2899, align 4, !tbaa !6
  %2901 = getelementptr inbounds i32, ptr %12, i64 %2898
  %2902 = load i32, ptr %2901, align 4, !tbaa !6
  %2903 = add nsw i32 %2902, -1
  %2904 = icmp slt i32 %2900, %2903
  br i1 %2904, label %2905, label %2920

2905:                                             ; preds = %2897
  br i1 %2892, label %2912, label %2906

2906:                                             ; preds = %2905
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2898
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2898
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, %2908
  store i32 %2911, ptr %2909, align 4, !tbaa !6
  br label %2930

2912:                                             ; preds = %2888, %2905
  %2913 = phi i32 [ %2900, %2905 ], [ %2889, %2888 ]
  %2914 = phi ptr [ %2899, %2905 ], [ %4, %2888 ]
  %2915 = phi i64 [ %2898, %2905 ], [ 0, %2888 ]
  %2916 = add nsw i32 %2913, 1
  store i32 %2916, ptr %2914, align 4, !tbaa !6
  %2917 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2918 = load i32, ptr %2917, align 4, !tbaa !6
  %2919 = getelementptr inbounds i32, ptr %6, i64 %2915
  br label %2930

2920:                                             ; preds = %2897
  %2921 = icmp eq i32 %2900, %2903
  br i1 %2921, label %2922, label %2928

2922:                                             ; preds = %2920
  store i32 0, ptr %2899, align 4, !tbaa !6
  %2923 = getelementptr inbounds i32, ptr %8, i64 %2898
  %2924 = load i32, ptr %2923, align 4, !tbaa !6
  %2925 = getelementptr inbounds i32, ptr %6, i64 %2898
  store i32 %2924, ptr %2925, align 4, !tbaa !6
  %2926 = add nuw nsw i64 %2898, 1
  %2927 = icmp eq i64 %2926, %2800
  br i1 %2927, label %2935, label %2897, !llvm.loop !114

2928:                                             ; preds = %2893, %2920
  %2929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2930:                                             ; preds = %2906, %2912
  %2931 = phi ptr [ %2919, %2912 ], [ %2899, %2906 ]
  %2932 = phi i32 [ %2918, %2912 ], [ 1, %2906 ]
  %2933 = load i32, ptr %2931, align 4, !tbaa !6
  %2934 = add nsw i32 %2933, %2932
  store i32 %2934, ptr %2931, align 4, !tbaa !6
  br label %2935

2935:                                             ; preds = %2922, %2930, %2895, %2876
  %2936 = icmp eq i32 %2887, %5
  br i1 %2936, label %5522, label %2803, !llvm.loop !115

2937:                                             ; preds = %2786, %3074
  %2938 = phi i32 [ 0, %2786 ], [ %3023, %3074 ]
  %2939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2787, label %2940, label %3009

2940:                                             ; preds = %2937, %2999
  %2941 = phi i32 [ %3008, %2999 ], [ 0, %2937 ]
  %2942 = phi i64 [ %2950, %2999 ], [ %2791, %2937 ]
  %2943 = phi i64 [ %3007, %2999 ], [ %2790, %2937 ]
  %2944 = phi i32 [ %3005, %2999 ], [ %2939, %2937 ]
  %2945 = sub i32 %2789, %2941
  %2946 = tail call i32 @llvm.smin.i32(i32 %2945, i32 0)
  %2947 = sub i32 %2945, %2946
  %2948 = zext i32 %2947 to i64
  %2949 = add nuw nsw i64 %2948, 1
  %2950 = add nsw i64 %2942, -1
  %2951 = icmp ult i32 %2947, 31
  br i1 %2951, label %2987, label %2952

2952:                                             ; preds = %2940
  %2953 = and i64 %2949, 8589934560
  %2954 = sub i64 %2943, %2953
  br label %2955

2955:                                             ; preds = %2955, %2952
  %2956 = phi i64 [ 0, %2952 ], [ %2979, %2955 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2975, %2955 ]
  %2958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2976, %2955 ]
  %2959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2977, %2955 ]
  %2960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2978, %2955 ]
  %2961 = sub i64 %2943, %2956
  %2962 = getelementptr inbounds i32, ptr %11, i64 %2961
  %2963 = getelementptr inbounds i32, ptr %2962, i64 -7
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !6
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2962, i64 -15
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !6
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2962, i64 -23
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !6
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = getelementptr inbounds i32, ptr %2962, i64 -31
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !6
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = mul <8 x i32> %2965, %2957
  %2976 = mul <8 x i32> %2968, %2958
  %2977 = mul <8 x i32> %2971, %2959
  %2978 = mul <8 x i32> %2974, %2960
  %2979 = add nuw i64 %2956, 32
  %2980 = icmp eq i64 %2979, %2953
  br i1 %2980, label %2981, label %2955, !llvm.loop !116

2981:                                             ; preds = %2955
  %2982 = mul <8 x i32> %2976, %2975
  %2983 = mul <8 x i32> %2977, %2982
  %2984 = mul <8 x i32> %2978, %2983
  %2985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2984)
  %2986 = icmp eq i64 %2949, %2953
  br i1 %2986, label %2999, label %2987

2987:                                             ; preds = %2940, %2981
  %2988 = phi i64 [ %2943, %2940 ], [ %2954, %2981 ]
  %2989 = phi i32 [ 1, %2940 ], [ %2985, %2981 ]
  br label %2990

2990:                                             ; preds = %2987, %2990
  %2991 = phi i64 [ %2996, %2990 ], [ %2988, %2987 ]
  %2992 = phi i32 [ %2995, %2990 ], [ %2989, %2987 ]
  %2993 = getelementptr inbounds i32, ptr %11, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = mul nsw i32 %2994, %2992
  %2996 = add nsw i64 %2991, -1
  %2997 = trunc i64 %2991 to i32
  %2998 = icmp sgt i32 %2997, 0
  br i1 %2998, label %2990, label %2999, !llvm.loop !117

2999:                                             ; preds = %2990, %2981
  %3000 = phi i32 [ %2985, %2981 ], [ %2995, %2990 ]
  %3001 = and i64 %2950, 4294967295
  %3002 = getelementptr inbounds i32, ptr %6, i64 %3001
  %3003 = load i32, ptr %3002, align 4, !tbaa !6
  %3004 = mul nsw i32 %3003, %3000
  %3005 = add nsw i32 %3004, %2944
  %3006 = icmp sgt i64 %2942, 2
  %3007 = add nsw i64 %2943, -1
  %3008 = add i32 %2941, 1
  br i1 %3006, label %2940, label %3009, !llvm.loop !118

3009:                                             ; preds = %2999, %2937
  %3010 = phi i32 [ %2939, %2937 ], [ %3005, %2999 ]
  %3011 = icmp slt i32 %3010, %5
  br i1 %3011, label %3014, label %3012

3012:                                             ; preds = %3009
  %3013 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3014:                                             ; preds = %3009
  %3015 = sext i32 %3010 to i64
  %3016 = getelementptr inbounds i8, ptr %2468, i64 %3015
  %3017 = load i8, ptr %3016, align 1, !tbaa !12
  %3018 = zext i8 %3017 to i32
  %3019 = load i32, ptr %2470, align 4, !tbaa !6
  %3020 = mul nuw nsw i32 %3018, %3018
  %3021 = mul nuw i32 %3020, %3020
  %3022 = add nsw i32 %3021, %3019
  store i32 %3022, ptr %2470, align 4, !tbaa !6
  %3023 = add nuw nsw i32 %2938, 1
  br i1 %2788, label %3024, label %3074

3024:                                             ; preds = %3014
  %3025 = load i32, ptr %4, align 4, !tbaa !6
  %3026 = load i32, ptr %12, align 4, !tbaa !6
  %3027 = add nsw i32 %3026, -1
  %3028 = icmp slt i32 %3025, %3027
  br i1 %3028, label %3051, label %3029

3029:                                             ; preds = %3024
  %3030 = icmp eq i32 %3025, %3027
  br i1 %3030, label %3031, label %3067

3031:                                             ; preds = %3029
  store i32 0, ptr %4, align 4, !tbaa !6
  %3032 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3032, ptr %6, align 4, !tbaa !6
  br i1 %2793, label %3074, label %3033

3033:                                             ; preds = %3031, %3061
  %3034 = phi i64 [ %3065, %3061 ], [ 1, %3031 ]
  %3035 = getelementptr inbounds i32, ptr %4, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !6
  %3037 = getelementptr inbounds i32, ptr %12, i64 %3034
  %3038 = load i32, ptr %3037, align 4, !tbaa !6
  %3039 = add nsw i32 %3038, -1
  %3040 = icmp slt i32 %3036, %3039
  br i1 %3040, label %3041, label %3059

3041:                                             ; preds = %3033
  br i1 %3028, label %3051, label %3042

3042:                                             ; preds = %3041
  %3043 = shl i64 %3034, 32
  %3044 = add i64 %3043, -4294967296
  %3045 = ashr exact i64 %3044, 32
  %3046 = getelementptr inbounds i32, ptr %7, i64 %3045
  %3047 = load i32, ptr %3046, align 4, !tbaa !6
  %3048 = getelementptr inbounds i32, ptr %6, i64 %3034
  %3049 = load i32, ptr %3048, align 4, !tbaa !6
  %3050 = add nsw i32 %3049, %3047
  store i32 %3050, ptr %3048, align 4, !tbaa !6
  br label %3069

3051:                                             ; preds = %3024, %3041
  %3052 = phi i32 [ %3036, %3041 ], [ %3025, %3024 ]
  %3053 = phi ptr [ %3035, %3041 ], [ %4, %3024 ]
  %3054 = phi i64 [ %3034, %3041 ], [ 0, %3024 ]
  %3055 = add nsw i32 %3052, 1
  store i32 %3055, ptr %3053, align 4, !tbaa !6
  %3056 = getelementptr inbounds i32, ptr %7, i64 %3054
  %3057 = load i32, ptr %3056, align 4, !tbaa !6
  %3058 = getelementptr inbounds i32, ptr %6, i64 %3054
  br label %3069

3059:                                             ; preds = %3033
  %3060 = icmp eq i32 %3036, %3039
  br i1 %3060, label %3061, label %3067

3061:                                             ; preds = %3059
  store i32 0, ptr %3035, align 4, !tbaa !6
  %3062 = getelementptr inbounds i32, ptr %8, i64 %3034
  %3063 = load i32, ptr %3062, align 4, !tbaa !6
  %3064 = getelementptr inbounds i32, ptr %6, i64 %3034
  store i32 %3063, ptr %3064, align 4, !tbaa !6
  %3065 = add nuw nsw i64 %3034, 1
  %3066 = icmp eq i64 %3065, %2791
  br i1 %3066, label %3074, label %3033, !llvm.loop !119

3067:                                             ; preds = %3029, %3059
  %3068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3069:                                             ; preds = %3042, %3051
  %3070 = phi ptr [ %3058, %3051 ], [ %3035, %3042 ]
  %3071 = phi i32 [ %3057, %3051 ], [ 1, %3042 ]
  %3072 = load i32, ptr %3070, align 4, !tbaa !6
  %3073 = add nsw i32 %3072, %3071
  store i32 %3073, ptr %3070, align 4, !tbaa !6
  br label %3074

3074:                                             ; preds = %3061, %3069, %3031, %3014
  %3075 = icmp eq i32 %3023, %5
  br i1 %3075, label %5522, label %2937, !llvm.loop !120

3076:                                             ; preds = %2477
  %3077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

3078:                                             ; preds = %18
  %3079 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3080 = load ptr, ptr %3079, align 8, !tbaa !10
  %3081 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3082 = load ptr, ptr %3081, align 8, !tbaa !10
  store i64 0, ptr %3082, align 8, !tbaa !121
  %3083 = icmp eq i32 %13, 0
  br i1 %3083, label %3084, label %3089

3084:                                             ; preds = %3078
  %3085 = load i8, ptr %3080, align 1, !tbaa !12
  %3086 = zext i8 %3085 to i64
  %3087 = mul nuw nsw i64 %3086, %3086
  %3088 = mul nuw nsw i64 %3087, %3087
  store i64 %3088, ptr %3082, align 8, !tbaa !121
  br label %5522

3089:                                             ; preds = %3078
  switch i32 %1, label %3689 [
    i32 1, label %3090
    i32 0, label %3393
  ]

3090:                                             ; preds = %3089
  %3091 = getelementptr inbounds i32, ptr %3, i64 %19
  %3092 = load i32, ptr %3091, align 4, !tbaa !6
  %3093 = icmp eq i32 %3092, 0
  %3094 = icmp sgt i32 %5, 0
  br i1 %3093, label %3104, label %3095

3095:                                             ; preds = %3090
  br i1 %3094, label %3096, label %5522

3096:                                             ; preds = %3095
  %3097 = icmp sgt i32 %13, 1
  %3098 = icmp sgt i32 %13, 0
  %3099 = add i32 %13, -2
  %3100 = zext i32 %3099 to i64
  %3101 = zext i32 %13 to i64
  %3102 = add nuw i32 %5, 1
  %3103 = icmp eq i32 %13, 1
  br label %3252

3104:                                             ; preds = %3090
  br i1 %3094, label %3105, label %5522

3105:                                             ; preds = %3104
  %3106 = icmp sgt i32 %13, 1
  %3107 = icmp sgt i32 %13, 0
  %3108 = add i32 %13, -2
  %3109 = zext i32 %3108 to i64
  %3110 = zext i32 %13 to i64
  %3111 = add nuw i32 %5, 1
  %3112 = icmp eq i32 %13, 1
  br label %3113

3113:                                             ; preds = %3105, %3250
  %3114 = phi i64 [ 0, %3105 ], [ %3200, %3250 ]
  %3115 = phi i32 [ 0, %3105 ], [ %3202, %3250 ]
  %3116 = phi double [ 0.000000e+00, %3105 ], [ %3201, %3250 ]
  %3117 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3106, label %3118, label %3187

3118:                                             ; preds = %3113, %3177
  %3119 = phi i32 [ %3186, %3177 ], [ 0, %3113 ]
  %3120 = phi i64 [ %3128, %3177 ], [ %3110, %3113 ]
  %3121 = phi i64 [ %3185, %3177 ], [ %3109, %3113 ]
  %3122 = phi i32 [ %3183, %3177 ], [ %3117, %3113 ]
  %3123 = sub i32 %3108, %3119
  %3124 = tail call i32 @llvm.smin.i32(i32 %3123, i32 0)
  %3125 = sub i32 %3123, %3124
  %3126 = zext i32 %3125 to i64
  %3127 = add nuw nsw i64 %3126, 1
  %3128 = add nsw i64 %3120, -1
  %3129 = icmp ult i32 %3125, 31
  br i1 %3129, label %3165, label %3130

3130:                                             ; preds = %3118
  %3131 = and i64 %3127, 8589934560
  %3132 = sub i64 %3121, %3131
  br label %3133

3133:                                             ; preds = %3133, %3130
  %3134 = phi i64 [ 0, %3130 ], [ %3157, %3133 ]
  %3135 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3130 ], [ %3153, %3133 ]
  %3136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3130 ], [ %3154, %3133 ]
  %3137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3130 ], [ %3155, %3133 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3130 ], [ %3156, %3133 ]
  %3139 = sub i64 %3121, %3134
  %3140 = getelementptr inbounds i32, ptr %9, i64 %3139
  %3141 = getelementptr inbounds i32, ptr %3140, i64 -7
  %3142 = load <8 x i32>, ptr %3141, align 4, !tbaa !6
  %3143 = shufflevector <8 x i32> %3142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3144 = getelementptr inbounds i32, ptr %3140, i64 -15
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !6
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = getelementptr inbounds i32, ptr %3140, i64 -23
  %3148 = load <8 x i32>, ptr %3147, align 4, !tbaa !6
  %3149 = shufflevector <8 x i32> %3148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3150 = getelementptr inbounds i32, ptr %3140, i64 -31
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !6
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = mul <8 x i32> %3143, %3135
  %3154 = mul <8 x i32> %3146, %3136
  %3155 = mul <8 x i32> %3149, %3137
  %3156 = mul <8 x i32> %3152, %3138
  %3157 = add nuw i64 %3134, 32
  %3158 = icmp eq i64 %3157, %3131
  br i1 %3158, label %3159, label %3133, !llvm.loop !123

3159:                                             ; preds = %3133
  %3160 = mul <8 x i32> %3154, %3153
  %3161 = mul <8 x i32> %3155, %3160
  %3162 = mul <8 x i32> %3156, %3161
  %3163 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3162)
  %3164 = icmp eq i64 %3127, %3131
  br i1 %3164, label %3177, label %3165

3165:                                             ; preds = %3118, %3159
  %3166 = phi i64 [ %3121, %3118 ], [ %3132, %3159 ]
  %3167 = phi i32 [ 1, %3118 ], [ %3163, %3159 ]
  br label %3168

3168:                                             ; preds = %3165, %3168
  %3169 = phi i64 [ %3174, %3168 ], [ %3166, %3165 ]
  %3170 = phi i32 [ %3173, %3168 ], [ %3167, %3165 ]
  %3171 = getelementptr inbounds i32, ptr %9, i64 %3169
  %3172 = load i32, ptr %3171, align 4, !tbaa !6
  %3173 = mul nsw i32 %3172, %3170
  %3174 = add nsw i64 %3169, -1
  %3175 = trunc i64 %3169 to i32
  %3176 = icmp sgt i32 %3175, 0
  br i1 %3176, label %3168, label %3177, !llvm.loop !124

3177:                                             ; preds = %3168, %3159
  %3178 = phi i32 [ %3163, %3159 ], [ %3173, %3168 ]
  %3179 = and i64 %3128, 4294967295
  %3180 = getelementptr inbounds i32, ptr %6, i64 %3179
  %3181 = load i32, ptr %3180, align 4, !tbaa !6
  %3182 = mul nsw i32 %3181, %3178
  %3183 = add nsw i32 %3182, %3122
  %3184 = icmp sgt i64 %3120, 2
  %3185 = add nsw i64 %3121, -1
  %3186 = add i32 %3119, 1
  br i1 %3184, label %3118, label %3187, !llvm.loop !125

3187:                                             ; preds = %3177, %3113
  %3188 = phi i32 [ %3117, %3113 ], [ %3183, %3177 ]
  %3189 = sext i32 %3188 to i64
  %3190 = getelementptr inbounds double, ptr %2, i64 %3189
  %3191 = load double, ptr %3190, align 8, !tbaa !19
  %3192 = getelementptr inbounds i8, ptr %3080, i64 %3189
  %3193 = load i8, ptr %3192, align 1, !tbaa !12
  %3194 = sitofp i64 %3114 to double
  %3195 = uitofp i8 %3193 to double
  %3196 = fmul fast double %3191, %3195
  %3197 = fmul fast double %3196, %3196
  %3198 = fmul fast double %3197, %3197
  %3199 = fadd fast double %3198, %3194
  %3200 = fptosi double %3199 to i64
  store i64 %3200, ptr %3082, align 8, !tbaa !121
  %3201 = fadd fast double %3191, %3116
  %3202 = add nuw nsw i32 %3115, 1
  br i1 %3107, label %3203, label %3250

3203:                                             ; preds = %3187
  %3204 = load i32, ptr %4, align 4, !tbaa !6
  %3205 = load i32, ptr %12, align 4, !tbaa !6
  %3206 = add nsw i32 %3205, -1
  %3207 = icmp slt i32 %3204, %3206
  br i1 %3207, label %3227, label %3208

3208:                                             ; preds = %3203
  %3209 = icmp eq i32 %3204, %3206
  br i1 %3209, label %3210, label %3243

3210:                                             ; preds = %3208
  store i32 0, ptr %4, align 4, !tbaa !6
  %3211 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3211, ptr %6, align 4, !tbaa !6
  br i1 %3112, label %3250, label %3212

3212:                                             ; preds = %3210, %3237
  %3213 = phi i64 [ %3241, %3237 ], [ 1, %3210 ]
  %3214 = getelementptr inbounds i32, ptr %4, i64 %3213
  %3215 = load i32, ptr %3214, align 4, !tbaa !6
  %3216 = getelementptr inbounds i32, ptr %12, i64 %3213
  %3217 = load i32, ptr %3216, align 4, !tbaa !6
  %3218 = add nsw i32 %3217, -1
  %3219 = icmp slt i32 %3215, %3218
  br i1 %3219, label %3220, label %3235

3220:                                             ; preds = %3212
  br i1 %3207, label %3227, label %3221

3221:                                             ; preds = %3220
  %3222 = getelementptr inbounds i32, ptr %7, i64 %3213
  %3223 = load i32, ptr %3222, align 4, !tbaa !6
  %3224 = getelementptr inbounds i32, ptr %6, i64 %3213
  %3225 = load i32, ptr %3224, align 4, !tbaa !6
  %3226 = add nsw i32 %3225, %3223
  store i32 %3226, ptr %3224, align 4, !tbaa !6
  br label %3245

3227:                                             ; preds = %3203, %3220
  %3228 = phi i32 [ %3215, %3220 ], [ %3204, %3203 ]
  %3229 = phi ptr [ %3214, %3220 ], [ %4, %3203 ]
  %3230 = phi i64 [ %3213, %3220 ], [ 0, %3203 ]
  %3231 = add nsw i32 %3228, 1
  store i32 %3231, ptr %3229, align 4, !tbaa !6
  %3232 = getelementptr inbounds i32, ptr %7, i64 %3230
  %3233 = load i32, ptr %3232, align 4, !tbaa !6
  %3234 = getelementptr inbounds i32, ptr %6, i64 %3230
  br label %3245

3235:                                             ; preds = %3212
  %3236 = icmp eq i32 %3215, %3218
  br i1 %3236, label %3237, label %3243

3237:                                             ; preds = %3235
  store i32 0, ptr %3214, align 4, !tbaa !6
  %3238 = getelementptr inbounds i32, ptr %8, i64 %3213
  %3239 = load i32, ptr %3238, align 4, !tbaa !6
  %3240 = getelementptr inbounds i32, ptr %6, i64 %3213
  store i32 %3239, ptr %3240, align 4, !tbaa !6
  %3241 = add nuw nsw i64 %3213, 1
  %3242 = icmp eq i64 %3241, %3110
  br i1 %3242, label %3250, label %3212, !llvm.loop !126

3243:                                             ; preds = %3208, %3235
  %3244 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3245:                                             ; preds = %3221, %3227
  %3246 = phi ptr [ %3234, %3227 ], [ %3214, %3221 ]
  %3247 = phi i32 [ %3233, %3227 ], [ 1, %3221 ]
  %3248 = load i32, ptr %3246, align 4, !tbaa !6
  %3249 = add nsw i32 %3248, %3247
  store i32 %3249, ptr %3246, align 4, !tbaa !6
  br label %3250

3250:                                             ; preds = %3237, %3245, %3210, %3187
  %3251 = icmp eq i32 %3202, %5
  br i1 %3251, label %5522, label %3113, !llvm.loop !127

3252:                                             ; preds = %3096, %3391
  %3253 = phi i64 [ 0, %3096 ], [ %3339, %3391 ]
  %3254 = phi i32 [ 0, %3096 ], [ %3340, %3391 ]
  %3255 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3097, label %3256, label %3325

3256:                                             ; preds = %3252, %3315
  %3257 = phi i32 [ %3324, %3315 ], [ 0, %3252 ]
  %3258 = phi i64 [ %3266, %3315 ], [ %3101, %3252 ]
  %3259 = phi i64 [ %3323, %3315 ], [ %3100, %3252 ]
  %3260 = phi i32 [ %3321, %3315 ], [ %3255, %3252 ]
  %3261 = sub i32 %3099, %3257
  %3262 = tail call i32 @llvm.smin.i32(i32 %3261, i32 0)
  %3263 = sub i32 %3261, %3262
  %3264 = zext i32 %3263 to i64
  %3265 = add nuw nsw i64 %3264, 1
  %3266 = add nsw i64 %3258, -1
  %3267 = icmp ult i32 %3263, 31
  br i1 %3267, label %3303, label %3268

3268:                                             ; preds = %3256
  %3269 = and i64 %3265, 8589934560
  %3270 = sub i64 %3259, %3269
  br label %3271

3271:                                             ; preds = %3271, %3268
  %3272 = phi i64 [ 0, %3268 ], [ %3295, %3271 ]
  %3273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3268 ], [ %3291, %3271 ]
  %3274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3268 ], [ %3292, %3271 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3268 ], [ %3293, %3271 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3268 ], [ %3294, %3271 ]
  %3277 = sub i64 %3259, %3272
  %3278 = getelementptr inbounds i32, ptr %11, i64 %3277
  %3279 = getelementptr inbounds i32, ptr %3278, i64 -7
  %3280 = load <8 x i32>, ptr %3279, align 4, !tbaa !6
  %3281 = shufflevector <8 x i32> %3280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3282 = getelementptr inbounds i32, ptr %3278, i64 -15
  %3283 = load <8 x i32>, ptr %3282, align 4, !tbaa !6
  %3284 = shufflevector <8 x i32> %3283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3285 = getelementptr inbounds i32, ptr %3278, i64 -23
  %3286 = load <8 x i32>, ptr %3285, align 4, !tbaa !6
  %3287 = shufflevector <8 x i32> %3286, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3288 = getelementptr inbounds i32, ptr %3278, i64 -31
  %3289 = load <8 x i32>, ptr %3288, align 4, !tbaa !6
  %3290 = shufflevector <8 x i32> %3289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3291 = mul <8 x i32> %3281, %3273
  %3292 = mul <8 x i32> %3284, %3274
  %3293 = mul <8 x i32> %3287, %3275
  %3294 = mul <8 x i32> %3290, %3276
  %3295 = add nuw i64 %3272, 32
  %3296 = icmp eq i64 %3295, %3269
  br i1 %3296, label %3297, label %3271, !llvm.loop !128

3297:                                             ; preds = %3271
  %3298 = mul <8 x i32> %3292, %3291
  %3299 = mul <8 x i32> %3293, %3298
  %3300 = mul <8 x i32> %3294, %3299
  %3301 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3300)
  %3302 = icmp eq i64 %3265, %3269
  br i1 %3302, label %3315, label %3303

3303:                                             ; preds = %3256, %3297
  %3304 = phi i64 [ %3259, %3256 ], [ %3270, %3297 ]
  %3305 = phi i32 [ 1, %3256 ], [ %3301, %3297 ]
  br label %3306

3306:                                             ; preds = %3303, %3306
  %3307 = phi i64 [ %3312, %3306 ], [ %3304, %3303 ]
  %3308 = phi i32 [ %3311, %3306 ], [ %3305, %3303 ]
  %3309 = getelementptr inbounds i32, ptr %11, i64 %3307
  %3310 = load i32, ptr %3309, align 4, !tbaa !6
  %3311 = mul nsw i32 %3310, %3308
  %3312 = add nsw i64 %3307, -1
  %3313 = trunc i64 %3307 to i32
  %3314 = icmp sgt i32 %3313, 0
  br i1 %3314, label %3306, label %3315, !llvm.loop !129

3315:                                             ; preds = %3306, %3297
  %3316 = phi i32 [ %3301, %3297 ], [ %3311, %3306 ]
  %3317 = and i64 %3266, 4294967295
  %3318 = getelementptr inbounds i32, ptr %6, i64 %3317
  %3319 = load i32, ptr %3318, align 4, !tbaa !6
  %3320 = mul nsw i32 %3319, %3316
  %3321 = add nsw i32 %3320, %3260
  %3322 = icmp sgt i64 %3258, 2
  %3323 = add nsw i64 %3259, -1
  %3324 = add i32 %3257, 1
  br i1 %3322, label %3256, label %3325, !llvm.loop !130

3325:                                             ; preds = %3315, %3252
  %3326 = phi i32 [ %3255, %3252 ], [ %3321, %3315 ]
  %3327 = icmp slt i32 %3326, %5
  br i1 %3327, label %3330, label %3328

3328:                                             ; preds = %3325
  %3329 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3330:                                             ; preds = %3325
  %3331 = sext i32 %3326 to i64
  %3332 = getelementptr inbounds i8, ptr %3080, i64 %3331
  %3333 = load i8, ptr %3332, align 1, !tbaa !12
  %3334 = sitofp i64 %3253 to double
  %3335 = uitofp i8 %3333 to double
  %3336 = fmul fast double %3335, %3335
  %3337 = fmul fast double %3336, %3336
  %3338 = fadd fast double %3337, %3334
  %3339 = fptosi double %3338 to i64
  store i64 %3339, ptr %3082, align 8, !tbaa !121
  %3340 = add nuw nsw i32 %3254, 1
  br i1 %3098, label %3341, label %3391

3341:                                             ; preds = %3330
  %3342 = load i32, ptr %4, align 4, !tbaa !6
  %3343 = load i32, ptr %12, align 4, !tbaa !6
  %3344 = add nsw i32 %3343, -1
  %3345 = icmp slt i32 %3342, %3344
  br i1 %3345, label %3368, label %3346

3346:                                             ; preds = %3341
  %3347 = icmp eq i32 %3342, %3344
  br i1 %3347, label %3348, label %3384

3348:                                             ; preds = %3346
  store i32 0, ptr %4, align 4, !tbaa !6
  %3349 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3349, ptr %6, align 4, !tbaa !6
  br i1 %3103, label %3391, label %3350

3350:                                             ; preds = %3348, %3378
  %3351 = phi i64 [ %3382, %3378 ], [ 1, %3348 ]
  %3352 = getelementptr inbounds i32, ptr %4, i64 %3351
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %12, i64 %3351
  %3355 = load i32, ptr %3354, align 4, !tbaa !6
  %3356 = add nsw i32 %3355, -1
  %3357 = icmp slt i32 %3353, %3356
  br i1 %3357, label %3358, label %3376

3358:                                             ; preds = %3350
  br i1 %3345, label %3368, label %3359

3359:                                             ; preds = %3358
  %3360 = shl i64 %3351, 32
  %3361 = add i64 %3360, -4294967296
  %3362 = ashr exact i64 %3361, 32
  %3363 = getelementptr inbounds i32, ptr %7, i64 %3362
  %3364 = load i32, ptr %3363, align 4, !tbaa !6
  %3365 = getelementptr inbounds i32, ptr %6, i64 %3351
  %3366 = load i32, ptr %3365, align 4, !tbaa !6
  %3367 = add nsw i32 %3366, %3364
  store i32 %3367, ptr %3365, align 4, !tbaa !6
  br label %3386

3368:                                             ; preds = %3341, %3358
  %3369 = phi i32 [ %3353, %3358 ], [ %3342, %3341 ]
  %3370 = phi ptr [ %3352, %3358 ], [ %4, %3341 ]
  %3371 = phi i64 [ %3351, %3358 ], [ 0, %3341 ]
  %3372 = add nsw i32 %3369, 1
  store i32 %3372, ptr %3370, align 4, !tbaa !6
  %3373 = getelementptr inbounds i32, ptr %7, i64 %3371
  %3374 = load i32, ptr %3373, align 4, !tbaa !6
  %3375 = getelementptr inbounds i32, ptr %6, i64 %3371
  br label %3386

3376:                                             ; preds = %3350
  %3377 = icmp eq i32 %3353, %3356
  br i1 %3377, label %3378, label %3384

3378:                                             ; preds = %3376
  store i32 0, ptr %3352, align 4, !tbaa !6
  %3379 = getelementptr inbounds i32, ptr %8, i64 %3351
  %3380 = load i32, ptr %3379, align 4, !tbaa !6
  %3381 = getelementptr inbounds i32, ptr %6, i64 %3351
  store i32 %3380, ptr %3381, align 4, !tbaa !6
  %3382 = add nuw nsw i64 %3351, 1
  %3383 = icmp eq i64 %3382, %3101
  br i1 %3383, label %3391, label %3350, !llvm.loop !131

3384:                                             ; preds = %3346, %3376
  %3385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3386:                                             ; preds = %3359, %3368
  %3387 = phi ptr [ %3375, %3368 ], [ %3352, %3359 ]
  %3388 = phi i32 [ %3374, %3368 ], [ 1, %3359 ]
  %3389 = load i32, ptr %3387, align 4, !tbaa !6
  %3390 = add nsw i32 %3389, %3388
  store i32 %3390, ptr %3387, align 4, !tbaa !6
  br label %3391

3391:                                             ; preds = %3378, %3386, %3348, %3330
  %3392 = icmp eq i32 %3340, %5
  br i1 %3392, label %5522, label %3252, !llvm.loop !132

3393:                                             ; preds = %3089
  %3394 = getelementptr inbounds i32, ptr %3, i64 %19
  %3395 = load i32, ptr %3394, align 4, !tbaa !6
  %3396 = icmp eq i32 %3395, 0
  %3397 = icmp sgt i32 %5, 0
  br i1 %3396, label %3407, label %3398

3398:                                             ; preds = %3393
  br i1 %3397, label %3399, label %5522

3399:                                             ; preds = %3398
  %3400 = icmp sgt i32 %13, 1
  %3401 = icmp sgt i32 %13, 0
  %3402 = add i32 %13, -2
  %3403 = zext i32 %3402 to i64
  %3404 = zext i32 %13 to i64
  %3405 = add nuw i32 %5, 1
  %3406 = icmp eq i32 %13, 1
  br label %3550

3407:                                             ; preds = %3393
  br i1 %3397, label %3408, label %5522

3408:                                             ; preds = %3407
  %3409 = icmp sgt i32 %13, 1
  %3410 = icmp sgt i32 %13, 0
  %3411 = add i32 %13, -2
  %3412 = zext i32 %3411 to i64
  %3413 = zext i32 %13 to i64
  %3414 = add nuw i32 %5, 1
  %3415 = icmp eq i32 %13, 1
  br label %3416

3416:                                             ; preds = %3408, %3548
  %3417 = phi i64 [ 0, %3408 ], [ %3498, %3548 ]
  %3418 = phi i32 [ 0, %3408 ], [ %3500, %3548 ]
  %3419 = phi double [ 0.000000e+00, %3408 ], [ %3499, %3548 ]
  %3420 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3409, label %3421, label %3490

3421:                                             ; preds = %3416, %3480
  %3422 = phi i32 [ %3489, %3480 ], [ 0, %3416 ]
  %3423 = phi i64 [ %3431, %3480 ], [ %3413, %3416 ]
  %3424 = phi i64 [ %3488, %3480 ], [ %3412, %3416 ]
  %3425 = phi i32 [ %3486, %3480 ], [ %3420, %3416 ]
  %3426 = sub i32 %3411, %3422
  %3427 = tail call i32 @llvm.smin.i32(i32 %3426, i32 0)
  %3428 = sub i32 %3426, %3427
  %3429 = zext i32 %3428 to i64
  %3430 = add nuw nsw i64 %3429, 1
  %3431 = add nsw i64 %3423, -1
  %3432 = icmp ult i32 %3428, 31
  br i1 %3432, label %3468, label %3433

3433:                                             ; preds = %3421
  %3434 = and i64 %3430, 8589934560
  %3435 = sub i64 %3424, %3434
  br label %3436

3436:                                             ; preds = %3436, %3433
  %3437 = phi i64 [ 0, %3433 ], [ %3460, %3436 ]
  %3438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3456, %3436 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3457, %3436 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3458, %3436 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3459, %3436 ]
  %3442 = sub i64 %3424, %3437
  %3443 = getelementptr inbounds i32, ptr %9, i64 %3442
  %3444 = getelementptr inbounds i32, ptr %3443, i64 -7
  %3445 = load <8 x i32>, ptr %3444, align 4, !tbaa !6
  %3446 = shufflevector <8 x i32> %3445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3447 = getelementptr inbounds i32, ptr %3443, i64 -15
  %3448 = load <8 x i32>, ptr %3447, align 4, !tbaa !6
  %3449 = shufflevector <8 x i32> %3448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3450 = getelementptr inbounds i32, ptr %3443, i64 -23
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !6
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3443, i64 -31
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !6
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = mul <8 x i32> %3446, %3438
  %3457 = mul <8 x i32> %3449, %3439
  %3458 = mul <8 x i32> %3452, %3440
  %3459 = mul <8 x i32> %3455, %3441
  %3460 = add nuw i64 %3437, 32
  %3461 = icmp eq i64 %3460, %3434
  br i1 %3461, label %3462, label %3436, !llvm.loop !133

3462:                                             ; preds = %3436
  %3463 = mul <8 x i32> %3457, %3456
  %3464 = mul <8 x i32> %3458, %3463
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3465)
  %3467 = icmp eq i64 %3430, %3434
  br i1 %3467, label %3480, label %3468

3468:                                             ; preds = %3421, %3462
  %3469 = phi i64 [ %3424, %3421 ], [ %3435, %3462 ]
  %3470 = phi i32 [ 1, %3421 ], [ %3466, %3462 ]
  br label %3471

3471:                                             ; preds = %3468, %3471
  %3472 = phi i64 [ %3477, %3471 ], [ %3469, %3468 ]
  %3473 = phi i32 [ %3476, %3471 ], [ %3470, %3468 ]
  %3474 = getelementptr inbounds i32, ptr %9, i64 %3472
  %3475 = load i32, ptr %3474, align 4, !tbaa !6
  %3476 = mul nsw i32 %3475, %3473
  %3477 = add nsw i64 %3472, -1
  %3478 = trunc i64 %3472 to i32
  %3479 = icmp sgt i32 %3478, 0
  br i1 %3479, label %3471, label %3480, !llvm.loop !134

3480:                                             ; preds = %3471, %3462
  %3481 = phi i32 [ %3466, %3462 ], [ %3476, %3471 ]
  %3482 = and i64 %3431, 4294967295
  %3483 = getelementptr inbounds i32, ptr %6, i64 %3482
  %3484 = load i32, ptr %3483, align 4, !tbaa !6
  %3485 = mul nsw i32 %3484, %3481
  %3486 = add nsw i32 %3485, %3425
  %3487 = icmp sgt i64 %3423, 2
  %3488 = add nsw i64 %3424, -1
  %3489 = add i32 %3422, 1
  br i1 %3487, label %3421, label %3490, !llvm.loop !135

3490:                                             ; preds = %3480, %3416
  %3491 = phi i32 [ %3420, %3416 ], [ %3486, %3480 ]
  %3492 = sext i32 %3491 to i64
  %3493 = getelementptr inbounds i8, ptr %3080, i64 %3492
  %3494 = load i8, ptr %3493, align 1, !tbaa !12
  %3495 = zext i8 %3494 to i64
  %3496 = mul nuw nsw i64 %3495, %3495
  %3497 = mul nuw nsw i64 %3496, %3496
  %3498 = add nuw nsw i64 %3497, %3417
  store i64 %3498, ptr %3082, align 8, !tbaa !121
  %3499 = fadd fast double %3419, 1.000000e+00
  %3500 = add nuw nsw i32 %3418, 1
  br i1 %3410, label %3501, label %3548

3501:                                             ; preds = %3490
  %3502 = load i32, ptr %4, align 4, !tbaa !6
  %3503 = load i32, ptr %12, align 4, !tbaa !6
  %3504 = add nsw i32 %3503, -1
  %3505 = icmp slt i32 %3502, %3504
  br i1 %3505, label %3525, label %3506

3506:                                             ; preds = %3501
  %3507 = icmp eq i32 %3502, %3504
  br i1 %3507, label %3508, label %3541

3508:                                             ; preds = %3506
  store i32 0, ptr %4, align 4, !tbaa !6
  %3509 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3509, ptr %6, align 4, !tbaa !6
  br i1 %3415, label %3548, label %3510

3510:                                             ; preds = %3508, %3535
  %3511 = phi i64 [ %3539, %3535 ], [ 1, %3508 ]
  %3512 = getelementptr inbounds i32, ptr %4, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = getelementptr inbounds i32, ptr %12, i64 %3511
  %3515 = load i32, ptr %3514, align 4, !tbaa !6
  %3516 = add nsw i32 %3515, -1
  %3517 = icmp slt i32 %3513, %3516
  br i1 %3517, label %3518, label %3533

3518:                                             ; preds = %3510
  br i1 %3505, label %3525, label %3519

3519:                                             ; preds = %3518
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3511
  %3521 = load i32, ptr %3520, align 4, !tbaa !6
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3523 = load i32, ptr %3522, align 4, !tbaa !6
  %3524 = add nsw i32 %3523, %3521
  store i32 %3524, ptr %3522, align 4, !tbaa !6
  br label %3543

3525:                                             ; preds = %3501, %3518
  %3526 = phi i32 [ %3513, %3518 ], [ %3502, %3501 ]
  %3527 = phi ptr [ %3512, %3518 ], [ %4, %3501 ]
  %3528 = phi i64 [ %3511, %3518 ], [ 0, %3501 ]
  %3529 = add nsw i32 %3526, 1
  store i32 %3529, ptr %3527, align 4, !tbaa !6
  %3530 = getelementptr inbounds i32, ptr %7, i64 %3528
  %3531 = load i32, ptr %3530, align 4, !tbaa !6
  %3532 = getelementptr inbounds i32, ptr %6, i64 %3528
  br label %3543

3533:                                             ; preds = %3510
  %3534 = icmp eq i32 %3513, %3516
  br i1 %3534, label %3535, label %3541

3535:                                             ; preds = %3533
  store i32 0, ptr %3512, align 4, !tbaa !6
  %3536 = getelementptr inbounds i32, ptr %8, i64 %3511
  %3537 = load i32, ptr %3536, align 4, !tbaa !6
  %3538 = getelementptr inbounds i32, ptr %6, i64 %3511
  store i32 %3537, ptr %3538, align 4, !tbaa !6
  %3539 = add nuw nsw i64 %3511, 1
  %3540 = icmp eq i64 %3539, %3413
  br i1 %3540, label %3548, label %3510, !llvm.loop !136

3541:                                             ; preds = %3506, %3533
  %3542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3543:                                             ; preds = %3519, %3525
  %3544 = phi ptr [ %3532, %3525 ], [ %3512, %3519 ]
  %3545 = phi i32 [ %3531, %3525 ], [ 1, %3519 ]
  %3546 = load i32, ptr %3544, align 4, !tbaa !6
  %3547 = add nsw i32 %3546, %3545
  store i32 %3547, ptr %3544, align 4, !tbaa !6
  br label %3548

3548:                                             ; preds = %3535, %3543, %3508, %3490
  %3549 = icmp eq i32 %3500, %5
  br i1 %3549, label %5522, label %3416, !llvm.loop !137

3550:                                             ; preds = %3399, %3687
  %3551 = phi i64 [ 0, %3399 ], [ %3635, %3687 ]
  %3552 = phi i32 [ 0, %3399 ], [ %3636, %3687 ]
  %3553 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3400, label %3554, label %3623

3554:                                             ; preds = %3550, %3613
  %3555 = phi i32 [ %3622, %3613 ], [ 0, %3550 ]
  %3556 = phi i64 [ %3564, %3613 ], [ %3404, %3550 ]
  %3557 = phi i64 [ %3621, %3613 ], [ %3403, %3550 ]
  %3558 = phi i32 [ %3619, %3613 ], [ %3553, %3550 ]
  %3559 = sub i32 %3402, %3555
  %3560 = tail call i32 @llvm.smin.i32(i32 %3559, i32 0)
  %3561 = sub i32 %3559, %3560
  %3562 = zext i32 %3561 to i64
  %3563 = add nuw nsw i64 %3562, 1
  %3564 = add nsw i64 %3556, -1
  %3565 = icmp ult i32 %3561, 31
  br i1 %3565, label %3601, label %3566

3566:                                             ; preds = %3554
  %3567 = and i64 %3563, 8589934560
  %3568 = sub i64 %3557, %3567
  br label %3569

3569:                                             ; preds = %3569, %3566
  %3570 = phi i64 [ 0, %3566 ], [ %3593, %3569 ]
  %3571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3589, %3569 ]
  %3572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3590, %3569 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3591, %3569 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3592, %3569 ]
  %3575 = sub i64 %3557, %3570
  %3576 = getelementptr inbounds i32, ptr %11, i64 %3575
  %3577 = getelementptr inbounds i32, ptr %3576, i64 -7
  %3578 = load <8 x i32>, ptr %3577, align 4, !tbaa !6
  %3579 = shufflevector <8 x i32> %3578, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3580 = getelementptr inbounds i32, ptr %3576, i64 -15
  %3581 = load <8 x i32>, ptr %3580, align 4, !tbaa !6
  %3582 = shufflevector <8 x i32> %3581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3583 = getelementptr inbounds i32, ptr %3576, i64 -23
  %3584 = load <8 x i32>, ptr %3583, align 4, !tbaa !6
  %3585 = shufflevector <8 x i32> %3584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3586 = getelementptr inbounds i32, ptr %3576, i64 -31
  %3587 = load <8 x i32>, ptr %3586, align 4, !tbaa !6
  %3588 = shufflevector <8 x i32> %3587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3589 = mul <8 x i32> %3579, %3571
  %3590 = mul <8 x i32> %3582, %3572
  %3591 = mul <8 x i32> %3585, %3573
  %3592 = mul <8 x i32> %3588, %3574
  %3593 = add nuw i64 %3570, 32
  %3594 = icmp eq i64 %3593, %3567
  br i1 %3594, label %3595, label %3569, !llvm.loop !138

3595:                                             ; preds = %3569
  %3596 = mul <8 x i32> %3590, %3589
  %3597 = mul <8 x i32> %3591, %3596
  %3598 = mul <8 x i32> %3592, %3597
  %3599 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3598)
  %3600 = icmp eq i64 %3563, %3567
  br i1 %3600, label %3613, label %3601

3601:                                             ; preds = %3554, %3595
  %3602 = phi i64 [ %3557, %3554 ], [ %3568, %3595 ]
  %3603 = phi i32 [ 1, %3554 ], [ %3599, %3595 ]
  br label %3604

3604:                                             ; preds = %3601, %3604
  %3605 = phi i64 [ %3610, %3604 ], [ %3602, %3601 ]
  %3606 = phi i32 [ %3609, %3604 ], [ %3603, %3601 ]
  %3607 = getelementptr inbounds i32, ptr %11, i64 %3605
  %3608 = load i32, ptr %3607, align 4, !tbaa !6
  %3609 = mul nsw i32 %3608, %3606
  %3610 = add nsw i64 %3605, -1
  %3611 = trunc i64 %3605 to i32
  %3612 = icmp sgt i32 %3611, 0
  br i1 %3612, label %3604, label %3613, !llvm.loop !139

3613:                                             ; preds = %3604, %3595
  %3614 = phi i32 [ %3599, %3595 ], [ %3609, %3604 ]
  %3615 = and i64 %3564, 4294967295
  %3616 = getelementptr inbounds i32, ptr %6, i64 %3615
  %3617 = load i32, ptr %3616, align 4, !tbaa !6
  %3618 = mul nsw i32 %3617, %3614
  %3619 = add nsw i32 %3618, %3558
  %3620 = icmp sgt i64 %3556, 2
  %3621 = add nsw i64 %3557, -1
  %3622 = add i32 %3555, 1
  br i1 %3620, label %3554, label %3623, !llvm.loop !140

3623:                                             ; preds = %3613, %3550
  %3624 = phi i32 [ %3553, %3550 ], [ %3619, %3613 ]
  %3625 = icmp slt i32 %3624, %5
  br i1 %3625, label %3628, label %3626

3626:                                             ; preds = %3623
  %3627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3628:                                             ; preds = %3623
  %3629 = sext i32 %3624 to i64
  %3630 = getelementptr inbounds i8, ptr %3080, i64 %3629
  %3631 = load i8, ptr %3630, align 1, !tbaa !12
  %3632 = zext i8 %3631 to i64
  %3633 = mul nuw nsw i64 %3632, %3632
  %3634 = mul nuw nsw i64 %3633, %3633
  %3635 = add nuw nsw i64 %3634, %3551
  store i64 %3635, ptr %3082, align 8, !tbaa !121
  %3636 = add nuw nsw i32 %3552, 1
  br i1 %3401, label %3637, label %3687

3637:                                             ; preds = %3628
  %3638 = load i32, ptr %4, align 4, !tbaa !6
  %3639 = load i32, ptr %12, align 4, !tbaa !6
  %3640 = add nsw i32 %3639, -1
  %3641 = icmp slt i32 %3638, %3640
  br i1 %3641, label %3664, label %3642

3642:                                             ; preds = %3637
  %3643 = icmp eq i32 %3638, %3640
  br i1 %3643, label %3644, label %3680

3644:                                             ; preds = %3642
  store i32 0, ptr %4, align 4, !tbaa !6
  %3645 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3645, ptr %6, align 4, !tbaa !6
  br i1 %3406, label %3687, label %3646

3646:                                             ; preds = %3644, %3674
  %3647 = phi i64 [ %3678, %3674 ], [ 1, %3644 ]
  %3648 = getelementptr inbounds i32, ptr %4, i64 %3647
  %3649 = load i32, ptr %3648, align 4, !tbaa !6
  %3650 = getelementptr inbounds i32, ptr %12, i64 %3647
  %3651 = load i32, ptr %3650, align 4, !tbaa !6
  %3652 = add nsw i32 %3651, -1
  %3653 = icmp slt i32 %3649, %3652
  br i1 %3653, label %3654, label %3672

3654:                                             ; preds = %3646
  br i1 %3641, label %3664, label %3655

3655:                                             ; preds = %3654
  %3656 = shl i64 %3647, 32
  %3657 = add i64 %3656, -4294967296
  %3658 = ashr exact i64 %3657, 32
  %3659 = getelementptr inbounds i32, ptr %7, i64 %3658
  %3660 = load i32, ptr %3659, align 4, !tbaa !6
  %3661 = getelementptr inbounds i32, ptr %6, i64 %3647
  %3662 = load i32, ptr %3661, align 4, !tbaa !6
  %3663 = add nsw i32 %3662, %3660
  store i32 %3663, ptr %3661, align 4, !tbaa !6
  br label %3682

3664:                                             ; preds = %3637, %3654
  %3665 = phi i32 [ %3649, %3654 ], [ %3638, %3637 ]
  %3666 = phi ptr [ %3648, %3654 ], [ %4, %3637 ]
  %3667 = phi i64 [ %3647, %3654 ], [ 0, %3637 ]
  %3668 = add nsw i32 %3665, 1
  store i32 %3668, ptr %3666, align 4, !tbaa !6
  %3669 = getelementptr inbounds i32, ptr %7, i64 %3667
  %3670 = load i32, ptr %3669, align 4, !tbaa !6
  %3671 = getelementptr inbounds i32, ptr %6, i64 %3667
  br label %3682

3672:                                             ; preds = %3646
  %3673 = icmp eq i32 %3649, %3652
  br i1 %3673, label %3674, label %3680

3674:                                             ; preds = %3672
  store i32 0, ptr %3648, align 4, !tbaa !6
  %3675 = getelementptr inbounds i32, ptr %8, i64 %3647
  %3676 = load i32, ptr %3675, align 4, !tbaa !6
  %3677 = getelementptr inbounds i32, ptr %6, i64 %3647
  store i32 %3676, ptr %3677, align 4, !tbaa !6
  %3678 = add nuw nsw i64 %3647, 1
  %3679 = icmp eq i64 %3678, %3404
  br i1 %3679, label %3687, label %3646, !llvm.loop !141

3680:                                             ; preds = %3642, %3672
  %3681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3682:                                             ; preds = %3655, %3664
  %3683 = phi ptr [ %3671, %3664 ], [ %3648, %3655 ]
  %3684 = phi i32 [ %3670, %3664 ], [ 1, %3655 ]
  %3685 = load i32, ptr %3683, align 4, !tbaa !6
  %3686 = add nsw i32 %3685, %3684
  store i32 %3686, ptr %3683, align 4, !tbaa !6
  br label %3687

3687:                                             ; preds = %3674, %3682, %3644, %3628
  %3688 = icmp eq i32 %3636, %5
  br i1 %3688, label %5522, label %3550, !llvm.loop !142

3689:                                             ; preds = %3089
  %3690 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

3691:                                             ; preds = %18
  %3692 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3693 = load ptr, ptr %3692, align 8, !tbaa !10
  %3694 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3695 = load ptr, ptr %3694, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3695, align 8, !tbaa !19
  %3696 = icmp eq i32 %13, 0
  br i1 %3696, label %3697, label %3702

3697:                                             ; preds = %3691
  %3698 = load i8, ptr %3693, align 1, !tbaa !12
  %3699 = uitofp i8 %3698 to double
  %3700 = fmul fast double %3699, %3699
  %3701 = fmul fast double %3700, %3700
  store double %3701, ptr %3695, align 8, !tbaa !19
  br label %5522

3702:                                             ; preds = %3691
  switch i32 %1, label %4298 [
    i32 1, label %3703
    i32 0, label %4002
  ]

3703:                                             ; preds = %3702
  %3704 = getelementptr inbounds i32, ptr %3, i64 %19
  %3705 = load i32, ptr %3704, align 4, !tbaa !6
  %3706 = icmp eq i32 %3705, 0
  %3707 = icmp sgt i32 %5, 0
  br i1 %3706, label %3717, label %3708

3708:                                             ; preds = %3703
  br i1 %3707, label %3709, label %5522

3709:                                             ; preds = %3708
  %3710 = icmp sgt i32 %13, 1
  %3711 = icmp sgt i32 %13, 0
  %3712 = add i32 %13, -2
  %3713 = zext i32 %3712 to i64
  %3714 = zext i32 %13 to i64
  %3715 = add nuw i32 %5, 1
  %3716 = icmp eq i32 %13, 1
  br label %3863

3717:                                             ; preds = %3703
  br i1 %3707, label %3718, label %5522

3718:                                             ; preds = %3717
  %3719 = icmp sgt i32 %13, 1
  %3720 = icmp sgt i32 %13, 0
  %3721 = add i32 %13, -2
  %3722 = zext i32 %3721 to i64
  %3723 = zext i32 %13 to i64
  %3724 = add nuw i32 %5, 1
  %3725 = icmp eq i32 %13, 1
  br label %3726

3726:                                             ; preds = %3718, %3861
  %3727 = phi double [ 0.000000e+00, %3718 ], [ %3811, %3861 ]
  %3728 = phi i32 [ 0, %3718 ], [ %3813, %3861 ]
  %3729 = phi double [ 0.000000e+00, %3718 ], [ %3812, %3861 ]
  %3730 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3719, label %3731, label %3800

3731:                                             ; preds = %3726, %3790
  %3732 = phi i32 [ %3799, %3790 ], [ 0, %3726 ]
  %3733 = phi i64 [ %3741, %3790 ], [ %3723, %3726 ]
  %3734 = phi i64 [ %3798, %3790 ], [ %3722, %3726 ]
  %3735 = phi i32 [ %3796, %3790 ], [ %3730, %3726 ]
  %3736 = sub i32 %3721, %3732
  %3737 = tail call i32 @llvm.smin.i32(i32 %3736, i32 0)
  %3738 = sub i32 %3736, %3737
  %3739 = zext i32 %3738 to i64
  %3740 = add nuw nsw i64 %3739, 1
  %3741 = add nsw i64 %3733, -1
  %3742 = icmp ult i32 %3738, 31
  br i1 %3742, label %3778, label %3743

3743:                                             ; preds = %3731
  %3744 = and i64 %3740, 8589934560
  %3745 = sub i64 %3734, %3744
  br label %3746

3746:                                             ; preds = %3746, %3743
  %3747 = phi i64 [ 0, %3743 ], [ %3770, %3746 ]
  %3748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3743 ], [ %3766, %3746 ]
  %3749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3743 ], [ %3767, %3746 ]
  %3750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3743 ], [ %3768, %3746 ]
  %3751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3743 ], [ %3769, %3746 ]
  %3752 = sub i64 %3734, %3747
  %3753 = getelementptr inbounds i32, ptr %9, i64 %3752
  %3754 = getelementptr inbounds i32, ptr %3753, i64 -7
  %3755 = load <8 x i32>, ptr %3754, align 4, !tbaa !6
  %3756 = shufflevector <8 x i32> %3755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3757 = getelementptr inbounds i32, ptr %3753, i64 -15
  %3758 = load <8 x i32>, ptr %3757, align 4, !tbaa !6
  %3759 = shufflevector <8 x i32> %3758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3760 = getelementptr inbounds i32, ptr %3753, i64 -23
  %3761 = load <8 x i32>, ptr %3760, align 4, !tbaa !6
  %3762 = shufflevector <8 x i32> %3761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3763 = getelementptr inbounds i32, ptr %3753, i64 -31
  %3764 = load <8 x i32>, ptr %3763, align 4, !tbaa !6
  %3765 = shufflevector <8 x i32> %3764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3766 = mul <8 x i32> %3756, %3748
  %3767 = mul <8 x i32> %3759, %3749
  %3768 = mul <8 x i32> %3762, %3750
  %3769 = mul <8 x i32> %3765, %3751
  %3770 = add nuw i64 %3747, 32
  %3771 = icmp eq i64 %3770, %3744
  br i1 %3771, label %3772, label %3746, !llvm.loop !143

3772:                                             ; preds = %3746
  %3773 = mul <8 x i32> %3767, %3766
  %3774 = mul <8 x i32> %3768, %3773
  %3775 = mul <8 x i32> %3769, %3774
  %3776 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3775)
  %3777 = icmp eq i64 %3740, %3744
  br i1 %3777, label %3790, label %3778

3778:                                             ; preds = %3731, %3772
  %3779 = phi i64 [ %3734, %3731 ], [ %3745, %3772 ]
  %3780 = phi i32 [ 1, %3731 ], [ %3776, %3772 ]
  br label %3781

3781:                                             ; preds = %3778, %3781
  %3782 = phi i64 [ %3787, %3781 ], [ %3779, %3778 ]
  %3783 = phi i32 [ %3786, %3781 ], [ %3780, %3778 ]
  %3784 = getelementptr inbounds i32, ptr %9, i64 %3782
  %3785 = load i32, ptr %3784, align 4, !tbaa !6
  %3786 = mul nsw i32 %3785, %3783
  %3787 = add nsw i64 %3782, -1
  %3788 = trunc i64 %3782 to i32
  %3789 = icmp sgt i32 %3788, 0
  br i1 %3789, label %3781, label %3790, !llvm.loop !144

3790:                                             ; preds = %3781, %3772
  %3791 = phi i32 [ %3776, %3772 ], [ %3786, %3781 ]
  %3792 = and i64 %3741, 4294967295
  %3793 = getelementptr inbounds i32, ptr %6, i64 %3792
  %3794 = load i32, ptr %3793, align 4, !tbaa !6
  %3795 = mul nsw i32 %3794, %3791
  %3796 = add nsw i32 %3795, %3735
  %3797 = icmp sgt i64 %3733, 2
  %3798 = add nsw i64 %3734, -1
  %3799 = add i32 %3732, 1
  br i1 %3797, label %3731, label %3800, !llvm.loop !145

3800:                                             ; preds = %3790, %3726
  %3801 = phi i32 [ %3730, %3726 ], [ %3796, %3790 ]
  %3802 = sext i32 %3801 to i64
  %3803 = getelementptr inbounds double, ptr %2, i64 %3802
  %3804 = load double, ptr %3803, align 8, !tbaa !19
  %3805 = getelementptr inbounds i8, ptr %3693, i64 %3802
  %3806 = load i8, ptr %3805, align 1, !tbaa !12
  %3807 = uitofp i8 %3806 to double
  %3808 = fmul fast double %3804, %3807
  %3809 = fmul fast double %3808, %3808
  %3810 = fmul fast double %3809, %3809
  %3811 = fadd fast double %3810, %3727
  store double %3811, ptr %3695, align 8, !tbaa !19
  %3812 = fadd fast double %3804, %3729
  %3813 = add nuw nsw i32 %3728, 1
  br i1 %3720, label %3814, label %3861

3814:                                             ; preds = %3800
  %3815 = load i32, ptr %4, align 4, !tbaa !6
  %3816 = load i32, ptr %12, align 4, !tbaa !6
  %3817 = add nsw i32 %3816, -1
  %3818 = icmp slt i32 %3815, %3817
  br i1 %3818, label %3838, label %3819

3819:                                             ; preds = %3814
  %3820 = icmp eq i32 %3815, %3817
  br i1 %3820, label %3821, label %3854

3821:                                             ; preds = %3819
  store i32 0, ptr %4, align 4, !tbaa !6
  %3822 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3822, ptr %6, align 4, !tbaa !6
  br i1 %3725, label %3861, label %3823

3823:                                             ; preds = %3821, %3848
  %3824 = phi i64 [ %3852, %3848 ], [ 1, %3821 ]
  %3825 = getelementptr inbounds i32, ptr %4, i64 %3824
  %3826 = load i32, ptr %3825, align 4, !tbaa !6
  %3827 = getelementptr inbounds i32, ptr %12, i64 %3824
  %3828 = load i32, ptr %3827, align 4, !tbaa !6
  %3829 = add nsw i32 %3828, -1
  %3830 = icmp slt i32 %3826, %3829
  br i1 %3830, label %3831, label %3846

3831:                                             ; preds = %3823
  br i1 %3818, label %3838, label %3832

3832:                                             ; preds = %3831
  %3833 = getelementptr inbounds i32, ptr %7, i64 %3824
  %3834 = load i32, ptr %3833, align 4, !tbaa !6
  %3835 = getelementptr inbounds i32, ptr %6, i64 %3824
  %3836 = load i32, ptr %3835, align 4, !tbaa !6
  %3837 = add nsw i32 %3836, %3834
  store i32 %3837, ptr %3835, align 4, !tbaa !6
  br label %3856

3838:                                             ; preds = %3814, %3831
  %3839 = phi i32 [ %3826, %3831 ], [ %3815, %3814 ]
  %3840 = phi ptr [ %3825, %3831 ], [ %4, %3814 ]
  %3841 = phi i64 [ %3824, %3831 ], [ 0, %3814 ]
  %3842 = add nsw i32 %3839, 1
  store i32 %3842, ptr %3840, align 4, !tbaa !6
  %3843 = getelementptr inbounds i32, ptr %7, i64 %3841
  %3844 = load i32, ptr %3843, align 4, !tbaa !6
  %3845 = getelementptr inbounds i32, ptr %6, i64 %3841
  br label %3856

3846:                                             ; preds = %3823
  %3847 = icmp eq i32 %3826, %3829
  br i1 %3847, label %3848, label %3854

3848:                                             ; preds = %3846
  store i32 0, ptr %3825, align 4, !tbaa !6
  %3849 = getelementptr inbounds i32, ptr %8, i64 %3824
  %3850 = load i32, ptr %3849, align 4, !tbaa !6
  %3851 = getelementptr inbounds i32, ptr %6, i64 %3824
  store i32 %3850, ptr %3851, align 4, !tbaa !6
  %3852 = add nuw nsw i64 %3824, 1
  %3853 = icmp eq i64 %3852, %3723
  br i1 %3853, label %3861, label %3823, !llvm.loop !146

3854:                                             ; preds = %3819, %3846
  %3855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3856:                                             ; preds = %3832, %3838
  %3857 = phi ptr [ %3845, %3838 ], [ %3825, %3832 ]
  %3858 = phi i32 [ %3844, %3838 ], [ 1, %3832 ]
  %3859 = load i32, ptr %3857, align 4, !tbaa !6
  %3860 = add nsw i32 %3859, %3858
  store i32 %3860, ptr %3857, align 4, !tbaa !6
  br label %3861

3861:                                             ; preds = %3848, %3856, %3821, %3800
  %3862 = icmp eq i32 %3813, %5
  br i1 %3862, label %5522, label %3726, !llvm.loop !147

3863:                                             ; preds = %3709, %4000
  %3864 = phi double [ 0.000000e+00, %3709 ], [ %3948, %4000 ]
  %3865 = phi i32 [ 0, %3709 ], [ %3949, %4000 ]
  %3866 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3710, label %3867, label %3936

3867:                                             ; preds = %3863, %3926
  %3868 = phi i32 [ %3935, %3926 ], [ 0, %3863 ]
  %3869 = phi i64 [ %3877, %3926 ], [ %3714, %3863 ]
  %3870 = phi i64 [ %3934, %3926 ], [ %3713, %3863 ]
  %3871 = phi i32 [ %3932, %3926 ], [ %3866, %3863 ]
  %3872 = sub i32 %3712, %3868
  %3873 = tail call i32 @llvm.smin.i32(i32 %3872, i32 0)
  %3874 = sub i32 %3872, %3873
  %3875 = zext i32 %3874 to i64
  %3876 = add nuw nsw i64 %3875, 1
  %3877 = add nsw i64 %3869, -1
  %3878 = icmp ult i32 %3874, 31
  br i1 %3878, label %3914, label %3879

3879:                                             ; preds = %3867
  %3880 = and i64 %3876, 8589934560
  %3881 = sub i64 %3870, %3880
  br label %3882

3882:                                             ; preds = %3882, %3879
  %3883 = phi i64 [ 0, %3879 ], [ %3906, %3882 ]
  %3884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3879 ], [ %3902, %3882 ]
  %3885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3879 ], [ %3903, %3882 ]
  %3886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3879 ], [ %3904, %3882 ]
  %3887 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3879 ], [ %3905, %3882 ]
  %3888 = sub i64 %3870, %3883
  %3889 = getelementptr inbounds i32, ptr %11, i64 %3888
  %3890 = getelementptr inbounds i32, ptr %3889, i64 -7
  %3891 = load <8 x i32>, ptr %3890, align 4, !tbaa !6
  %3892 = shufflevector <8 x i32> %3891, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3893 = getelementptr inbounds i32, ptr %3889, i64 -15
  %3894 = load <8 x i32>, ptr %3893, align 4, !tbaa !6
  %3895 = shufflevector <8 x i32> %3894, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3896 = getelementptr inbounds i32, ptr %3889, i64 -23
  %3897 = load <8 x i32>, ptr %3896, align 4, !tbaa !6
  %3898 = shufflevector <8 x i32> %3897, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3899 = getelementptr inbounds i32, ptr %3889, i64 -31
  %3900 = load <8 x i32>, ptr %3899, align 4, !tbaa !6
  %3901 = shufflevector <8 x i32> %3900, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3902 = mul <8 x i32> %3892, %3884
  %3903 = mul <8 x i32> %3895, %3885
  %3904 = mul <8 x i32> %3898, %3886
  %3905 = mul <8 x i32> %3901, %3887
  %3906 = add nuw i64 %3883, 32
  %3907 = icmp eq i64 %3906, %3880
  br i1 %3907, label %3908, label %3882, !llvm.loop !148

3908:                                             ; preds = %3882
  %3909 = mul <8 x i32> %3903, %3902
  %3910 = mul <8 x i32> %3904, %3909
  %3911 = mul <8 x i32> %3905, %3910
  %3912 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3911)
  %3913 = icmp eq i64 %3876, %3880
  br i1 %3913, label %3926, label %3914

3914:                                             ; preds = %3867, %3908
  %3915 = phi i64 [ %3870, %3867 ], [ %3881, %3908 ]
  %3916 = phi i32 [ 1, %3867 ], [ %3912, %3908 ]
  br label %3917

3917:                                             ; preds = %3914, %3917
  %3918 = phi i64 [ %3923, %3917 ], [ %3915, %3914 ]
  %3919 = phi i32 [ %3922, %3917 ], [ %3916, %3914 ]
  %3920 = getelementptr inbounds i32, ptr %11, i64 %3918
  %3921 = load i32, ptr %3920, align 4, !tbaa !6
  %3922 = mul nsw i32 %3921, %3919
  %3923 = add nsw i64 %3918, -1
  %3924 = trunc i64 %3918 to i32
  %3925 = icmp sgt i32 %3924, 0
  br i1 %3925, label %3917, label %3926, !llvm.loop !149

3926:                                             ; preds = %3917, %3908
  %3927 = phi i32 [ %3912, %3908 ], [ %3922, %3917 ]
  %3928 = and i64 %3877, 4294967295
  %3929 = getelementptr inbounds i32, ptr %6, i64 %3928
  %3930 = load i32, ptr %3929, align 4, !tbaa !6
  %3931 = mul nsw i32 %3930, %3927
  %3932 = add nsw i32 %3931, %3871
  %3933 = icmp sgt i64 %3869, 2
  %3934 = add nsw i64 %3870, -1
  %3935 = add i32 %3868, 1
  br i1 %3933, label %3867, label %3936, !llvm.loop !150

3936:                                             ; preds = %3926, %3863
  %3937 = phi i32 [ %3866, %3863 ], [ %3932, %3926 ]
  %3938 = icmp slt i32 %3937, %5
  br i1 %3938, label %3941, label %3939

3939:                                             ; preds = %3936
  %3940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3941:                                             ; preds = %3936
  %3942 = sext i32 %3937 to i64
  %3943 = getelementptr inbounds i8, ptr %3693, i64 %3942
  %3944 = load i8, ptr %3943, align 1, !tbaa !12
  %3945 = uitofp i8 %3944 to double
  %3946 = fmul fast double %3945, %3945
  %3947 = fmul fast double %3946, %3946
  %3948 = fadd fast double %3947, %3864
  store double %3948, ptr %3695, align 8, !tbaa !19
  %3949 = add nuw nsw i32 %3865, 1
  br i1 %3711, label %3950, label %4000

3950:                                             ; preds = %3941
  %3951 = load i32, ptr %4, align 4, !tbaa !6
  %3952 = load i32, ptr %12, align 4, !tbaa !6
  %3953 = add nsw i32 %3952, -1
  %3954 = icmp slt i32 %3951, %3953
  br i1 %3954, label %3977, label %3955

3955:                                             ; preds = %3950
  %3956 = icmp eq i32 %3951, %3953
  br i1 %3956, label %3957, label %3993

3957:                                             ; preds = %3955
  store i32 0, ptr %4, align 4, !tbaa !6
  %3958 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3958, ptr %6, align 4, !tbaa !6
  br i1 %3716, label %4000, label %3959

3959:                                             ; preds = %3957, %3987
  %3960 = phi i64 [ %3991, %3987 ], [ 1, %3957 ]
  %3961 = getelementptr inbounds i32, ptr %4, i64 %3960
  %3962 = load i32, ptr %3961, align 4, !tbaa !6
  %3963 = getelementptr inbounds i32, ptr %12, i64 %3960
  %3964 = load i32, ptr %3963, align 4, !tbaa !6
  %3965 = add nsw i32 %3964, -1
  %3966 = icmp slt i32 %3962, %3965
  br i1 %3966, label %3967, label %3985

3967:                                             ; preds = %3959
  br i1 %3954, label %3977, label %3968

3968:                                             ; preds = %3967
  %3969 = shl i64 %3960, 32
  %3970 = add i64 %3969, -4294967296
  %3971 = ashr exact i64 %3970, 32
  %3972 = getelementptr inbounds i32, ptr %7, i64 %3971
  %3973 = load i32, ptr %3972, align 4, !tbaa !6
  %3974 = getelementptr inbounds i32, ptr %6, i64 %3960
  %3975 = load i32, ptr %3974, align 4, !tbaa !6
  %3976 = add nsw i32 %3975, %3973
  store i32 %3976, ptr %3974, align 4, !tbaa !6
  br label %3995

3977:                                             ; preds = %3950, %3967
  %3978 = phi i32 [ %3962, %3967 ], [ %3951, %3950 ]
  %3979 = phi ptr [ %3961, %3967 ], [ %4, %3950 ]
  %3980 = phi i64 [ %3960, %3967 ], [ 0, %3950 ]
  %3981 = add nsw i32 %3978, 1
  store i32 %3981, ptr %3979, align 4, !tbaa !6
  %3982 = getelementptr inbounds i32, ptr %7, i64 %3980
  %3983 = load i32, ptr %3982, align 4, !tbaa !6
  %3984 = getelementptr inbounds i32, ptr %6, i64 %3980
  br label %3995

3985:                                             ; preds = %3959
  %3986 = icmp eq i32 %3962, %3965
  br i1 %3986, label %3987, label %3993

3987:                                             ; preds = %3985
  store i32 0, ptr %3961, align 4, !tbaa !6
  %3988 = getelementptr inbounds i32, ptr %8, i64 %3960
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = getelementptr inbounds i32, ptr %6, i64 %3960
  store i32 %3989, ptr %3990, align 4, !tbaa !6
  %3991 = add nuw nsw i64 %3960, 1
  %3992 = icmp eq i64 %3991, %3714
  br i1 %3992, label %4000, label %3959, !llvm.loop !151

3993:                                             ; preds = %3955, %3985
  %3994 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3995:                                             ; preds = %3968, %3977
  %3996 = phi ptr [ %3984, %3977 ], [ %3961, %3968 ]
  %3997 = phi i32 [ %3983, %3977 ], [ 1, %3968 ]
  %3998 = load i32, ptr %3996, align 4, !tbaa !6
  %3999 = add nsw i32 %3998, %3997
  store i32 %3999, ptr %3996, align 4, !tbaa !6
  br label %4000

4000:                                             ; preds = %3987, %3995, %3957, %3941
  %4001 = icmp eq i32 %3949, %5
  br i1 %4001, label %5522, label %3863, !llvm.loop !152

4002:                                             ; preds = %3702
  %4003 = getelementptr inbounds i32, ptr %3, i64 %19
  %4004 = load i32, ptr %4003, align 4, !tbaa !6
  %4005 = icmp eq i32 %4004, 0
  %4006 = icmp sgt i32 %5, 0
  br i1 %4005, label %4016, label %4007

4007:                                             ; preds = %4002
  br i1 %4006, label %4008, label %5522

4008:                                             ; preds = %4007
  %4009 = icmp sgt i32 %13, 1
  %4010 = icmp sgt i32 %13, 0
  %4011 = add i32 %13, -2
  %4012 = zext i32 %4011 to i64
  %4013 = zext i32 %13 to i64
  %4014 = add nuw i32 %5, 1
  %4015 = icmp eq i32 %13, 1
  br label %4159

4016:                                             ; preds = %4002
  br i1 %4006, label %4017, label %5522

4017:                                             ; preds = %4016
  %4018 = icmp sgt i32 %13, 1
  %4019 = icmp sgt i32 %13, 0
  %4020 = add i32 %13, -2
  %4021 = zext i32 %4020 to i64
  %4022 = zext i32 %13 to i64
  %4023 = add nuw i32 %5, 1
  %4024 = icmp eq i32 %13, 1
  br label %4025

4025:                                             ; preds = %4017, %4157
  %4026 = phi double [ 0.000000e+00, %4017 ], [ %4107, %4157 ]
  %4027 = phi i32 [ 0, %4017 ], [ %4109, %4157 ]
  %4028 = phi double [ 0.000000e+00, %4017 ], [ %4108, %4157 ]
  %4029 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4018, label %4030, label %4099

4030:                                             ; preds = %4025, %4089
  %4031 = phi i32 [ %4098, %4089 ], [ 0, %4025 ]
  %4032 = phi i64 [ %4040, %4089 ], [ %4022, %4025 ]
  %4033 = phi i64 [ %4097, %4089 ], [ %4021, %4025 ]
  %4034 = phi i32 [ %4095, %4089 ], [ %4029, %4025 ]
  %4035 = sub i32 %4020, %4031
  %4036 = tail call i32 @llvm.smin.i32(i32 %4035, i32 0)
  %4037 = sub i32 %4035, %4036
  %4038 = zext i32 %4037 to i64
  %4039 = add nuw nsw i64 %4038, 1
  %4040 = add nsw i64 %4032, -1
  %4041 = icmp ult i32 %4037, 31
  br i1 %4041, label %4077, label %4042

4042:                                             ; preds = %4030
  %4043 = and i64 %4039, 8589934560
  %4044 = sub i64 %4033, %4043
  br label %4045

4045:                                             ; preds = %4045, %4042
  %4046 = phi i64 [ 0, %4042 ], [ %4069, %4045 ]
  %4047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4042 ], [ %4065, %4045 ]
  %4048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4042 ], [ %4066, %4045 ]
  %4049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4042 ], [ %4067, %4045 ]
  %4050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4042 ], [ %4068, %4045 ]
  %4051 = sub i64 %4033, %4046
  %4052 = getelementptr inbounds i32, ptr %9, i64 %4051
  %4053 = getelementptr inbounds i32, ptr %4052, i64 -7
  %4054 = load <8 x i32>, ptr %4053, align 4, !tbaa !6
  %4055 = shufflevector <8 x i32> %4054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4056 = getelementptr inbounds i32, ptr %4052, i64 -15
  %4057 = load <8 x i32>, ptr %4056, align 4, !tbaa !6
  %4058 = shufflevector <8 x i32> %4057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4059 = getelementptr inbounds i32, ptr %4052, i64 -23
  %4060 = load <8 x i32>, ptr %4059, align 4, !tbaa !6
  %4061 = shufflevector <8 x i32> %4060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4062 = getelementptr inbounds i32, ptr %4052, i64 -31
  %4063 = load <8 x i32>, ptr %4062, align 4, !tbaa !6
  %4064 = shufflevector <8 x i32> %4063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4065 = mul <8 x i32> %4055, %4047
  %4066 = mul <8 x i32> %4058, %4048
  %4067 = mul <8 x i32> %4061, %4049
  %4068 = mul <8 x i32> %4064, %4050
  %4069 = add nuw i64 %4046, 32
  %4070 = icmp eq i64 %4069, %4043
  br i1 %4070, label %4071, label %4045, !llvm.loop !153

4071:                                             ; preds = %4045
  %4072 = mul <8 x i32> %4066, %4065
  %4073 = mul <8 x i32> %4067, %4072
  %4074 = mul <8 x i32> %4068, %4073
  %4075 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4074)
  %4076 = icmp eq i64 %4039, %4043
  br i1 %4076, label %4089, label %4077

4077:                                             ; preds = %4030, %4071
  %4078 = phi i64 [ %4033, %4030 ], [ %4044, %4071 ]
  %4079 = phi i32 [ 1, %4030 ], [ %4075, %4071 ]
  br label %4080

4080:                                             ; preds = %4077, %4080
  %4081 = phi i64 [ %4086, %4080 ], [ %4078, %4077 ]
  %4082 = phi i32 [ %4085, %4080 ], [ %4079, %4077 ]
  %4083 = getelementptr inbounds i32, ptr %9, i64 %4081
  %4084 = load i32, ptr %4083, align 4, !tbaa !6
  %4085 = mul nsw i32 %4084, %4082
  %4086 = add nsw i64 %4081, -1
  %4087 = trunc i64 %4081 to i32
  %4088 = icmp sgt i32 %4087, 0
  br i1 %4088, label %4080, label %4089, !llvm.loop !154

4089:                                             ; preds = %4080, %4071
  %4090 = phi i32 [ %4075, %4071 ], [ %4085, %4080 ]
  %4091 = and i64 %4040, 4294967295
  %4092 = getelementptr inbounds i32, ptr %6, i64 %4091
  %4093 = load i32, ptr %4092, align 4, !tbaa !6
  %4094 = mul nsw i32 %4093, %4090
  %4095 = add nsw i32 %4094, %4034
  %4096 = icmp sgt i64 %4032, 2
  %4097 = add nsw i64 %4033, -1
  %4098 = add i32 %4031, 1
  br i1 %4096, label %4030, label %4099, !llvm.loop !155

4099:                                             ; preds = %4089, %4025
  %4100 = phi i32 [ %4029, %4025 ], [ %4095, %4089 ]
  %4101 = sext i32 %4100 to i64
  %4102 = getelementptr inbounds i8, ptr %3693, i64 %4101
  %4103 = load i8, ptr %4102, align 1, !tbaa !12
  %4104 = uitofp i8 %4103 to double
  %4105 = fmul fast double %4104, %4104
  %4106 = fmul fast double %4105, %4105
  %4107 = fadd fast double %4106, %4026
  store double %4107, ptr %3695, align 8, !tbaa !19
  %4108 = fadd fast double %4028, 1.000000e+00
  %4109 = add nuw nsw i32 %4027, 1
  br i1 %4019, label %4110, label %4157

4110:                                             ; preds = %4099
  %4111 = load i32, ptr %4, align 4, !tbaa !6
  %4112 = load i32, ptr %12, align 4, !tbaa !6
  %4113 = add nsw i32 %4112, -1
  %4114 = icmp slt i32 %4111, %4113
  br i1 %4114, label %4134, label %4115

4115:                                             ; preds = %4110
  %4116 = icmp eq i32 %4111, %4113
  br i1 %4116, label %4117, label %4150

4117:                                             ; preds = %4115
  store i32 0, ptr %4, align 4, !tbaa !6
  %4118 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4118, ptr %6, align 4, !tbaa !6
  br i1 %4024, label %4157, label %4119

4119:                                             ; preds = %4117, %4144
  %4120 = phi i64 [ %4148, %4144 ], [ 1, %4117 ]
  %4121 = getelementptr inbounds i32, ptr %4, i64 %4120
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = getelementptr inbounds i32, ptr %12, i64 %4120
  %4124 = load i32, ptr %4123, align 4, !tbaa !6
  %4125 = add nsw i32 %4124, -1
  %4126 = icmp slt i32 %4122, %4125
  br i1 %4126, label %4127, label %4142

4127:                                             ; preds = %4119
  br i1 %4114, label %4134, label %4128

4128:                                             ; preds = %4127
  %4129 = getelementptr inbounds i32, ptr %7, i64 %4120
  %4130 = load i32, ptr %4129, align 4, !tbaa !6
  %4131 = getelementptr inbounds i32, ptr %6, i64 %4120
  %4132 = load i32, ptr %4131, align 4, !tbaa !6
  %4133 = add nsw i32 %4132, %4130
  store i32 %4133, ptr %4131, align 4, !tbaa !6
  br label %4152

4134:                                             ; preds = %4110, %4127
  %4135 = phi i32 [ %4122, %4127 ], [ %4111, %4110 ]
  %4136 = phi ptr [ %4121, %4127 ], [ %4, %4110 ]
  %4137 = phi i64 [ %4120, %4127 ], [ 0, %4110 ]
  %4138 = add nsw i32 %4135, 1
  store i32 %4138, ptr %4136, align 4, !tbaa !6
  %4139 = getelementptr inbounds i32, ptr %7, i64 %4137
  %4140 = load i32, ptr %4139, align 4, !tbaa !6
  %4141 = getelementptr inbounds i32, ptr %6, i64 %4137
  br label %4152

4142:                                             ; preds = %4119
  %4143 = icmp eq i32 %4122, %4125
  br i1 %4143, label %4144, label %4150

4144:                                             ; preds = %4142
  store i32 0, ptr %4121, align 4, !tbaa !6
  %4145 = getelementptr inbounds i32, ptr %8, i64 %4120
  %4146 = load i32, ptr %4145, align 4, !tbaa !6
  %4147 = getelementptr inbounds i32, ptr %6, i64 %4120
  store i32 %4146, ptr %4147, align 4, !tbaa !6
  %4148 = add nuw nsw i64 %4120, 1
  %4149 = icmp eq i64 %4148, %4022
  br i1 %4149, label %4157, label %4119, !llvm.loop !156

4150:                                             ; preds = %4115, %4142
  %4151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4152:                                             ; preds = %4128, %4134
  %4153 = phi ptr [ %4141, %4134 ], [ %4121, %4128 ]
  %4154 = phi i32 [ %4140, %4134 ], [ 1, %4128 ]
  %4155 = load i32, ptr %4153, align 4, !tbaa !6
  %4156 = add nsw i32 %4155, %4154
  store i32 %4156, ptr %4153, align 4, !tbaa !6
  br label %4157

4157:                                             ; preds = %4144, %4152, %4117, %4099
  %4158 = icmp eq i32 %4109, %5
  br i1 %4158, label %5522, label %4025, !llvm.loop !157

4159:                                             ; preds = %4008, %4296
  %4160 = phi double [ 0.000000e+00, %4008 ], [ %4244, %4296 ]
  %4161 = phi i32 [ 0, %4008 ], [ %4245, %4296 ]
  %4162 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4009, label %4163, label %4232

4163:                                             ; preds = %4159, %4222
  %4164 = phi i32 [ %4231, %4222 ], [ 0, %4159 ]
  %4165 = phi i64 [ %4173, %4222 ], [ %4013, %4159 ]
  %4166 = phi i64 [ %4230, %4222 ], [ %4012, %4159 ]
  %4167 = phi i32 [ %4228, %4222 ], [ %4162, %4159 ]
  %4168 = sub i32 %4011, %4164
  %4169 = tail call i32 @llvm.smin.i32(i32 %4168, i32 0)
  %4170 = sub i32 %4168, %4169
  %4171 = zext i32 %4170 to i64
  %4172 = add nuw nsw i64 %4171, 1
  %4173 = add nsw i64 %4165, -1
  %4174 = icmp ult i32 %4170, 31
  br i1 %4174, label %4210, label %4175

4175:                                             ; preds = %4163
  %4176 = and i64 %4172, 8589934560
  %4177 = sub i64 %4166, %4176
  br label %4178

4178:                                             ; preds = %4178, %4175
  %4179 = phi i64 [ 0, %4175 ], [ %4202, %4178 ]
  %4180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4198, %4178 ]
  %4181 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4199, %4178 ]
  %4182 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4200, %4178 ]
  %4183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4201, %4178 ]
  %4184 = sub i64 %4166, %4179
  %4185 = getelementptr inbounds i32, ptr %11, i64 %4184
  %4186 = getelementptr inbounds i32, ptr %4185, i64 -7
  %4187 = load <8 x i32>, ptr %4186, align 4, !tbaa !6
  %4188 = shufflevector <8 x i32> %4187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4189 = getelementptr inbounds i32, ptr %4185, i64 -15
  %4190 = load <8 x i32>, ptr %4189, align 4, !tbaa !6
  %4191 = shufflevector <8 x i32> %4190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4192 = getelementptr inbounds i32, ptr %4185, i64 -23
  %4193 = load <8 x i32>, ptr %4192, align 4, !tbaa !6
  %4194 = shufflevector <8 x i32> %4193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4195 = getelementptr inbounds i32, ptr %4185, i64 -31
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !6
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = mul <8 x i32> %4188, %4180
  %4199 = mul <8 x i32> %4191, %4181
  %4200 = mul <8 x i32> %4194, %4182
  %4201 = mul <8 x i32> %4197, %4183
  %4202 = add nuw i64 %4179, 32
  %4203 = icmp eq i64 %4202, %4176
  br i1 %4203, label %4204, label %4178, !llvm.loop !158

4204:                                             ; preds = %4178
  %4205 = mul <8 x i32> %4199, %4198
  %4206 = mul <8 x i32> %4200, %4205
  %4207 = mul <8 x i32> %4201, %4206
  %4208 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4207)
  %4209 = icmp eq i64 %4172, %4176
  br i1 %4209, label %4222, label %4210

4210:                                             ; preds = %4163, %4204
  %4211 = phi i64 [ %4166, %4163 ], [ %4177, %4204 ]
  %4212 = phi i32 [ 1, %4163 ], [ %4208, %4204 ]
  br label %4213

4213:                                             ; preds = %4210, %4213
  %4214 = phi i64 [ %4219, %4213 ], [ %4211, %4210 ]
  %4215 = phi i32 [ %4218, %4213 ], [ %4212, %4210 ]
  %4216 = getelementptr inbounds i32, ptr %11, i64 %4214
  %4217 = load i32, ptr %4216, align 4, !tbaa !6
  %4218 = mul nsw i32 %4217, %4215
  %4219 = add nsw i64 %4214, -1
  %4220 = trunc i64 %4214 to i32
  %4221 = icmp sgt i32 %4220, 0
  br i1 %4221, label %4213, label %4222, !llvm.loop !159

4222:                                             ; preds = %4213, %4204
  %4223 = phi i32 [ %4208, %4204 ], [ %4218, %4213 ]
  %4224 = and i64 %4173, 4294967295
  %4225 = getelementptr inbounds i32, ptr %6, i64 %4224
  %4226 = load i32, ptr %4225, align 4, !tbaa !6
  %4227 = mul nsw i32 %4226, %4223
  %4228 = add nsw i32 %4227, %4167
  %4229 = icmp sgt i64 %4165, 2
  %4230 = add nsw i64 %4166, -1
  %4231 = add i32 %4164, 1
  br i1 %4229, label %4163, label %4232, !llvm.loop !160

4232:                                             ; preds = %4222, %4159
  %4233 = phi i32 [ %4162, %4159 ], [ %4228, %4222 ]
  %4234 = icmp slt i32 %4233, %5
  br i1 %4234, label %4237, label %4235

4235:                                             ; preds = %4232
  %4236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4237:                                             ; preds = %4232
  %4238 = sext i32 %4233 to i64
  %4239 = getelementptr inbounds i8, ptr %3693, i64 %4238
  %4240 = load i8, ptr %4239, align 1, !tbaa !12
  %4241 = uitofp i8 %4240 to double
  %4242 = fmul fast double %4241, %4241
  %4243 = fmul fast double %4242, %4242
  %4244 = fadd fast double %4243, %4160
  store double %4244, ptr %3695, align 8, !tbaa !19
  %4245 = add nuw nsw i32 %4161, 1
  br i1 %4010, label %4246, label %4296

4246:                                             ; preds = %4237
  %4247 = load i32, ptr %4, align 4, !tbaa !6
  %4248 = load i32, ptr %12, align 4, !tbaa !6
  %4249 = add nsw i32 %4248, -1
  %4250 = icmp slt i32 %4247, %4249
  br i1 %4250, label %4273, label %4251

4251:                                             ; preds = %4246
  %4252 = icmp eq i32 %4247, %4249
  br i1 %4252, label %4253, label %4289

4253:                                             ; preds = %4251
  store i32 0, ptr %4, align 4, !tbaa !6
  %4254 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4254, ptr %6, align 4, !tbaa !6
  br i1 %4015, label %4296, label %4255

4255:                                             ; preds = %4253, %4283
  %4256 = phi i64 [ %4287, %4283 ], [ 1, %4253 ]
  %4257 = getelementptr inbounds i32, ptr %4, i64 %4256
  %4258 = load i32, ptr %4257, align 4, !tbaa !6
  %4259 = getelementptr inbounds i32, ptr %12, i64 %4256
  %4260 = load i32, ptr %4259, align 4, !tbaa !6
  %4261 = add nsw i32 %4260, -1
  %4262 = icmp slt i32 %4258, %4261
  br i1 %4262, label %4263, label %4281

4263:                                             ; preds = %4255
  br i1 %4250, label %4273, label %4264

4264:                                             ; preds = %4263
  %4265 = shl i64 %4256, 32
  %4266 = add i64 %4265, -4294967296
  %4267 = ashr exact i64 %4266, 32
  %4268 = getelementptr inbounds i32, ptr %7, i64 %4267
  %4269 = load i32, ptr %4268, align 4, !tbaa !6
  %4270 = getelementptr inbounds i32, ptr %6, i64 %4256
  %4271 = load i32, ptr %4270, align 4, !tbaa !6
  %4272 = add nsw i32 %4271, %4269
  store i32 %4272, ptr %4270, align 4, !tbaa !6
  br label %4291

4273:                                             ; preds = %4246, %4263
  %4274 = phi i32 [ %4258, %4263 ], [ %4247, %4246 ]
  %4275 = phi ptr [ %4257, %4263 ], [ %4, %4246 ]
  %4276 = phi i64 [ %4256, %4263 ], [ 0, %4246 ]
  %4277 = add nsw i32 %4274, 1
  store i32 %4277, ptr %4275, align 4, !tbaa !6
  %4278 = getelementptr inbounds i32, ptr %7, i64 %4276
  %4279 = load i32, ptr %4278, align 4, !tbaa !6
  %4280 = getelementptr inbounds i32, ptr %6, i64 %4276
  br label %4291

4281:                                             ; preds = %4255
  %4282 = icmp eq i32 %4258, %4261
  br i1 %4282, label %4283, label %4289

4283:                                             ; preds = %4281
  store i32 0, ptr %4257, align 4, !tbaa !6
  %4284 = getelementptr inbounds i32, ptr %8, i64 %4256
  %4285 = load i32, ptr %4284, align 4, !tbaa !6
  %4286 = getelementptr inbounds i32, ptr %6, i64 %4256
  store i32 %4285, ptr %4286, align 4, !tbaa !6
  %4287 = add nuw nsw i64 %4256, 1
  %4288 = icmp eq i64 %4287, %4013
  br i1 %4288, label %4296, label %4255, !llvm.loop !161

4289:                                             ; preds = %4251, %4281
  %4290 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4291:                                             ; preds = %4264, %4273
  %4292 = phi ptr [ %4280, %4273 ], [ %4257, %4264 ]
  %4293 = phi i32 [ %4279, %4273 ], [ 1, %4264 ]
  %4294 = load i32, ptr %4292, align 4, !tbaa !6
  %4295 = add nsw i32 %4294, %4293
  store i32 %4295, ptr %4292, align 4, !tbaa !6
  br label %4296

4296:                                             ; preds = %4283, %4291, %4253, %4237
  %4297 = icmp eq i32 %4245, %5
  br i1 %4297, label %5522, label %4159, !llvm.loop !162

4298:                                             ; preds = %3702
  %4299 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

4300:                                             ; preds = %18
  %4301 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4302 = load ptr, ptr %4301, align 8, !tbaa !10
  %4303 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4304 = load ptr, ptr %4303, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4304, align 4, !tbaa !163
  %4305 = icmp eq i32 %13, 0
  br i1 %4305, label %4306, label %4311

4306:                                             ; preds = %4300
  %4307 = load i8, ptr %4302, align 1, !tbaa !12
  %4308 = uitofp i8 %4307 to float
  %4309 = fmul fast float %4308, %4308
  %4310 = fmul fast float %4309, %4309
  store float %4310, ptr %4304, align 4, !tbaa !163
  br label %5522

4311:                                             ; preds = %4300
  switch i32 %1, label %4911 [
    i32 1, label %4312
    i32 0, label %4615
  ]

4312:                                             ; preds = %4311
  %4313 = getelementptr inbounds i32, ptr %3, i64 %19
  %4314 = load i32, ptr %4313, align 4, !tbaa !6
  %4315 = icmp eq i32 %4314, 0
  %4316 = icmp sgt i32 %5, 0
  br i1 %4315, label %4326, label %4317

4317:                                             ; preds = %4312
  br i1 %4316, label %4318, label %5522

4318:                                             ; preds = %4317
  %4319 = icmp sgt i32 %13, 1
  %4320 = icmp sgt i32 %13, 0
  %4321 = add i32 %13, -2
  %4322 = zext i32 %4321 to i64
  %4323 = zext i32 %13 to i64
  %4324 = add nuw i32 %5, 1
  %4325 = icmp eq i32 %13, 1
  br label %4474

4326:                                             ; preds = %4312
  br i1 %4316, label %4327, label %5522

4327:                                             ; preds = %4326
  %4328 = icmp sgt i32 %13, 1
  %4329 = icmp sgt i32 %13, 0
  %4330 = add i32 %13, -2
  %4331 = zext i32 %4330 to i64
  %4332 = zext i32 %13 to i64
  %4333 = add nuw i32 %5, 1
  %4334 = icmp eq i32 %13, 1
  br label %4335

4335:                                             ; preds = %4327, %4472
  %4336 = phi float [ 0.000000e+00, %4327 ], [ %4422, %4472 ]
  %4337 = phi i32 [ 0, %4327 ], [ %4424, %4472 ]
  %4338 = phi double [ 0.000000e+00, %4327 ], [ %4423, %4472 ]
  %4339 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4328, label %4340, label %4409

4340:                                             ; preds = %4335, %4399
  %4341 = phi i32 [ %4408, %4399 ], [ 0, %4335 ]
  %4342 = phi i64 [ %4350, %4399 ], [ %4332, %4335 ]
  %4343 = phi i64 [ %4407, %4399 ], [ %4331, %4335 ]
  %4344 = phi i32 [ %4405, %4399 ], [ %4339, %4335 ]
  %4345 = sub i32 %4330, %4341
  %4346 = tail call i32 @llvm.smin.i32(i32 %4345, i32 0)
  %4347 = sub i32 %4345, %4346
  %4348 = zext i32 %4347 to i64
  %4349 = add nuw nsw i64 %4348, 1
  %4350 = add nsw i64 %4342, -1
  %4351 = icmp ult i32 %4347, 31
  br i1 %4351, label %4387, label %4352

4352:                                             ; preds = %4340
  %4353 = and i64 %4349, 8589934560
  %4354 = sub i64 %4343, %4353
  br label %4355

4355:                                             ; preds = %4355, %4352
  %4356 = phi i64 [ 0, %4352 ], [ %4379, %4355 ]
  %4357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4352 ], [ %4375, %4355 ]
  %4358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4352 ], [ %4376, %4355 ]
  %4359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4352 ], [ %4377, %4355 ]
  %4360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4352 ], [ %4378, %4355 ]
  %4361 = sub i64 %4343, %4356
  %4362 = getelementptr inbounds i32, ptr %9, i64 %4361
  %4363 = getelementptr inbounds i32, ptr %4362, i64 -7
  %4364 = load <8 x i32>, ptr %4363, align 4, !tbaa !6
  %4365 = shufflevector <8 x i32> %4364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4366 = getelementptr inbounds i32, ptr %4362, i64 -15
  %4367 = load <8 x i32>, ptr %4366, align 4, !tbaa !6
  %4368 = shufflevector <8 x i32> %4367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4369 = getelementptr inbounds i32, ptr %4362, i64 -23
  %4370 = load <8 x i32>, ptr %4369, align 4, !tbaa !6
  %4371 = shufflevector <8 x i32> %4370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4372 = getelementptr inbounds i32, ptr %4362, i64 -31
  %4373 = load <8 x i32>, ptr %4372, align 4, !tbaa !6
  %4374 = shufflevector <8 x i32> %4373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4375 = mul <8 x i32> %4365, %4357
  %4376 = mul <8 x i32> %4368, %4358
  %4377 = mul <8 x i32> %4371, %4359
  %4378 = mul <8 x i32> %4374, %4360
  %4379 = add nuw i64 %4356, 32
  %4380 = icmp eq i64 %4379, %4353
  br i1 %4380, label %4381, label %4355, !llvm.loop !165

4381:                                             ; preds = %4355
  %4382 = mul <8 x i32> %4376, %4375
  %4383 = mul <8 x i32> %4377, %4382
  %4384 = mul <8 x i32> %4378, %4383
  %4385 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4384)
  %4386 = icmp eq i64 %4349, %4353
  br i1 %4386, label %4399, label %4387

4387:                                             ; preds = %4340, %4381
  %4388 = phi i64 [ %4343, %4340 ], [ %4354, %4381 ]
  %4389 = phi i32 [ 1, %4340 ], [ %4385, %4381 ]
  br label %4390

4390:                                             ; preds = %4387, %4390
  %4391 = phi i64 [ %4396, %4390 ], [ %4388, %4387 ]
  %4392 = phi i32 [ %4395, %4390 ], [ %4389, %4387 ]
  %4393 = getelementptr inbounds i32, ptr %9, i64 %4391
  %4394 = load i32, ptr %4393, align 4, !tbaa !6
  %4395 = mul nsw i32 %4394, %4392
  %4396 = add nsw i64 %4391, -1
  %4397 = trunc i64 %4391 to i32
  %4398 = icmp sgt i32 %4397, 0
  br i1 %4398, label %4390, label %4399, !llvm.loop !166

4399:                                             ; preds = %4390, %4381
  %4400 = phi i32 [ %4385, %4381 ], [ %4395, %4390 ]
  %4401 = and i64 %4350, 4294967295
  %4402 = getelementptr inbounds i32, ptr %6, i64 %4401
  %4403 = load i32, ptr %4402, align 4, !tbaa !6
  %4404 = mul nsw i32 %4403, %4400
  %4405 = add nsw i32 %4404, %4344
  %4406 = icmp sgt i64 %4342, 2
  %4407 = add nsw i64 %4343, -1
  %4408 = add i32 %4341, 1
  br i1 %4406, label %4340, label %4409, !llvm.loop !167

4409:                                             ; preds = %4399, %4335
  %4410 = phi i32 [ %4339, %4335 ], [ %4405, %4399 ]
  %4411 = sext i32 %4410 to i64
  %4412 = getelementptr inbounds double, ptr %2, i64 %4411
  %4413 = load double, ptr %4412, align 8, !tbaa !19
  %4414 = getelementptr inbounds i8, ptr %4302, i64 %4411
  %4415 = load i8, ptr %4414, align 1, !tbaa !12
  %4416 = fpext float %4336 to double
  %4417 = uitofp i8 %4415 to double
  %4418 = fmul fast double %4413, %4417
  %4419 = fmul fast double %4418, %4418
  %4420 = fmul fast double %4419, %4419
  %4421 = fadd fast double %4420, %4416
  %4422 = fptrunc double %4421 to float
  store float %4422, ptr %4304, align 4, !tbaa !163
  %4423 = fadd fast double %4413, %4338
  %4424 = add nuw nsw i32 %4337, 1
  br i1 %4329, label %4425, label %4472

4425:                                             ; preds = %4409
  %4426 = load i32, ptr %4, align 4, !tbaa !6
  %4427 = load i32, ptr %12, align 4, !tbaa !6
  %4428 = add nsw i32 %4427, -1
  %4429 = icmp slt i32 %4426, %4428
  br i1 %4429, label %4449, label %4430

4430:                                             ; preds = %4425
  %4431 = icmp eq i32 %4426, %4428
  br i1 %4431, label %4432, label %4465

4432:                                             ; preds = %4430
  store i32 0, ptr %4, align 4, !tbaa !6
  %4433 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4433, ptr %6, align 4, !tbaa !6
  br i1 %4334, label %4472, label %4434

4434:                                             ; preds = %4432, %4459
  %4435 = phi i64 [ %4463, %4459 ], [ 1, %4432 ]
  %4436 = getelementptr inbounds i32, ptr %4, i64 %4435
  %4437 = load i32, ptr %4436, align 4, !tbaa !6
  %4438 = getelementptr inbounds i32, ptr %12, i64 %4435
  %4439 = load i32, ptr %4438, align 4, !tbaa !6
  %4440 = add nsw i32 %4439, -1
  %4441 = icmp slt i32 %4437, %4440
  br i1 %4441, label %4442, label %4457

4442:                                             ; preds = %4434
  br i1 %4429, label %4449, label %4443

4443:                                             ; preds = %4442
  %4444 = getelementptr inbounds i32, ptr %7, i64 %4435
  %4445 = load i32, ptr %4444, align 4, !tbaa !6
  %4446 = getelementptr inbounds i32, ptr %6, i64 %4435
  %4447 = load i32, ptr %4446, align 4, !tbaa !6
  %4448 = add nsw i32 %4447, %4445
  store i32 %4448, ptr %4446, align 4, !tbaa !6
  br label %4467

4449:                                             ; preds = %4425, %4442
  %4450 = phi i32 [ %4437, %4442 ], [ %4426, %4425 ]
  %4451 = phi ptr [ %4436, %4442 ], [ %4, %4425 ]
  %4452 = phi i64 [ %4435, %4442 ], [ 0, %4425 ]
  %4453 = add nsw i32 %4450, 1
  store i32 %4453, ptr %4451, align 4, !tbaa !6
  %4454 = getelementptr inbounds i32, ptr %7, i64 %4452
  %4455 = load i32, ptr %4454, align 4, !tbaa !6
  %4456 = getelementptr inbounds i32, ptr %6, i64 %4452
  br label %4467

4457:                                             ; preds = %4434
  %4458 = icmp eq i32 %4437, %4440
  br i1 %4458, label %4459, label %4465

4459:                                             ; preds = %4457
  store i32 0, ptr %4436, align 4, !tbaa !6
  %4460 = getelementptr inbounds i32, ptr %8, i64 %4435
  %4461 = load i32, ptr %4460, align 4, !tbaa !6
  %4462 = getelementptr inbounds i32, ptr %6, i64 %4435
  store i32 %4461, ptr %4462, align 4, !tbaa !6
  %4463 = add nuw nsw i64 %4435, 1
  %4464 = icmp eq i64 %4463, %4332
  br i1 %4464, label %4472, label %4434, !llvm.loop !168

4465:                                             ; preds = %4430, %4457
  %4466 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4467:                                             ; preds = %4443, %4449
  %4468 = phi ptr [ %4456, %4449 ], [ %4436, %4443 ]
  %4469 = phi i32 [ %4455, %4449 ], [ 1, %4443 ]
  %4470 = load i32, ptr %4468, align 4, !tbaa !6
  %4471 = add nsw i32 %4470, %4469
  store i32 %4471, ptr %4468, align 4, !tbaa !6
  br label %4472

4472:                                             ; preds = %4459, %4467, %4432, %4409
  %4473 = icmp eq i32 %4424, %5
  br i1 %4473, label %5522, label %4335, !llvm.loop !169

4474:                                             ; preds = %4318, %4613
  %4475 = phi float [ 0.000000e+00, %4318 ], [ %4561, %4613 ]
  %4476 = phi i32 [ 0, %4318 ], [ %4562, %4613 ]
  %4477 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4319, label %4478, label %4547

4478:                                             ; preds = %4474, %4537
  %4479 = phi i32 [ %4546, %4537 ], [ 0, %4474 ]
  %4480 = phi i64 [ %4488, %4537 ], [ %4323, %4474 ]
  %4481 = phi i64 [ %4545, %4537 ], [ %4322, %4474 ]
  %4482 = phi i32 [ %4543, %4537 ], [ %4477, %4474 ]
  %4483 = sub i32 %4321, %4479
  %4484 = tail call i32 @llvm.smin.i32(i32 %4483, i32 0)
  %4485 = sub i32 %4483, %4484
  %4486 = zext i32 %4485 to i64
  %4487 = add nuw nsw i64 %4486, 1
  %4488 = add nsw i64 %4480, -1
  %4489 = icmp ult i32 %4485, 31
  br i1 %4489, label %4525, label %4490

4490:                                             ; preds = %4478
  %4491 = and i64 %4487, 8589934560
  %4492 = sub i64 %4481, %4491
  br label %4493

4493:                                             ; preds = %4493, %4490
  %4494 = phi i64 [ 0, %4490 ], [ %4517, %4493 ]
  %4495 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4490 ], [ %4513, %4493 ]
  %4496 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4490 ], [ %4514, %4493 ]
  %4497 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4490 ], [ %4515, %4493 ]
  %4498 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4490 ], [ %4516, %4493 ]
  %4499 = sub i64 %4481, %4494
  %4500 = getelementptr inbounds i32, ptr %11, i64 %4499
  %4501 = getelementptr inbounds i32, ptr %4500, i64 -7
  %4502 = load <8 x i32>, ptr %4501, align 4, !tbaa !6
  %4503 = shufflevector <8 x i32> %4502, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4504 = getelementptr inbounds i32, ptr %4500, i64 -15
  %4505 = load <8 x i32>, ptr %4504, align 4, !tbaa !6
  %4506 = shufflevector <8 x i32> %4505, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4507 = getelementptr inbounds i32, ptr %4500, i64 -23
  %4508 = load <8 x i32>, ptr %4507, align 4, !tbaa !6
  %4509 = shufflevector <8 x i32> %4508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4510 = getelementptr inbounds i32, ptr %4500, i64 -31
  %4511 = load <8 x i32>, ptr %4510, align 4, !tbaa !6
  %4512 = shufflevector <8 x i32> %4511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4513 = mul <8 x i32> %4503, %4495
  %4514 = mul <8 x i32> %4506, %4496
  %4515 = mul <8 x i32> %4509, %4497
  %4516 = mul <8 x i32> %4512, %4498
  %4517 = add nuw i64 %4494, 32
  %4518 = icmp eq i64 %4517, %4491
  br i1 %4518, label %4519, label %4493, !llvm.loop !170

4519:                                             ; preds = %4493
  %4520 = mul <8 x i32> %4514, %4513
  %4521 = mul <8 x i32> %4515, %4520
  %4522 = mul <8 x i32> %4516, %4521
  %4523 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4522)
  %4524 = icmp eq i64 %4487, %4491
  br i1 %4524, label %4537, label %4525

4525:                                             ; preds = %4478, %4519
  %4526 = phi i64 [ %4481, %4478 ], [ %4492, %4519 ]
  %4527 = phi i32 [ 1, %4478 ], [ %4523, %4519 ]
  br label %4528

4528:                                             ; preds = %4525, %4528
  %4529 = phi i64 [ %4534, %4528 ], [ %4526, %4525 ]
  %4530 = phi i32 [ %4533, %4528 ], [ %4527, %4525 ]
  %4531 = getelementptr inbounds i32, ptr %11, i64 %4529
  %4532 = load i32, ptr %4531, align 4, !tbaa !6
  %4533 = mul nsw i32 %4532, %4530
  %4534 = add nsw i64 %4529, -1
  %4535 = trunc i64 %4529 to i32
  %4536 = icmp sgt i32 %4535, 0
  br i1 %4536, label %4528, label %4537, !llvm.loop !171

4537:                                             ; preds = %4528, %4519
  %4538 = phi i32 [ %4523, %4519 ], [ %4533, %4528 ]
  %4539 = and i64 %4488, 4294967295
  %4540 = getelementptr inbounds i32, ptr %6, i64 %4539
  %4541 = load i32, ptr %4540, align 4, !tbaa !6
  %4542 = mul nsw i32 %4541, %4538
  %4543 = add nsw i32 %4542, %4482
  %4544 = icmp sgt i64 %4480, 2
  %4545 = add nsw i64 %4481, -1
  %4546 = add i32 %4479, 1
  br i1 %4544, label %4478, label %4547, !llvm.loop !172

4547:                                             ; preds = %4537, %4474
  %4548 = phi i32 [ %4477, %4474 ], [ %4543, %4537 ]
  %4549 = icmp slt i32 %4548, %5
  br i1 %4549, label %4552, label %4550

4550:                                             ; preds = %4547
  %4551 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4552:                                             ; preds = %4547
  %4553 = sext i32 %4548 to i64
  %4554 = getelementptr inbounds i8, ptr %4302, i64 %4553
  %4555 = load i8, ptr %4554, align 1, !tbaa !12
  %4556 = fpext float %4475 to double
  %4557 = uitofp i8 %4555 to double
  %4558 = fmul fast double %4557, %4557
  %4559 = fmul fast double %4558, %4558
  %4560 = fadd fast double %4559, %4556
  %4561 = fptrunc double %4560 to float
  store float %4561, ptr %4304, align 4, !tbaa !163
  %4562 = add nuw nsw i32 %4476, 1
  br i1 %4320, label %4563, label %4613

4563:                                             ; preds = %4552
  %4564 = load i32, ptr %4, align 4, !tbaa !6
  %4565 = load i32, ptr %12, align 4, !tbaa !6
  %4566 = add nsw i32 %4565, -1
  %4567 = icmp slt i32 %4564, %4566
  br i1 %4567, label %4590, label %4568

4568:                                             ; preds = %4563
  %4569 = icmp eq i32 %4564, %4566
  br i1 %4569, label %4570, label %4606

4570:                                             ; preds = %4568
  store i32 0, ptr %4, align 4, !tbaa !6
  %4571 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4571, ptr %6, align 4, !tbaa !6
  br i1 %4325, label %4613, label %4572

4572:                                             ; preds = %4570, %4600
  %4573 = phi i64 [ %4604, %4600 ], [ 1, %4570 ]
  %4574 = getelementptr inbounds i32, ptr %4, i64 %4573
  %4575 = load i32, ptr %4574, align 4, !tbaa !6
  %4576 = getelementptr inbounds i32, ptr %12, i64 %4573
  %4577 = load i32, ptr %4576, align 4, !tbaa !6
  %4578 = add nsw i32 %4577, -1
  %4579 = icmp slt i32 %4575, %4578
  br i1 %4579, label %4580, label %4598

4580:                                             ; preds = %4572
  br i1 %4567, label %4590, label %4581

4581:                                             ; preds = %4580
  %4582 = shl i64 %4573, 32
  %4583 = add i64 %4582, -4294967296
  %4584 = ashr exact i64 %4583, 32
  %4585 = getelementptr inbounds i32, ptr %7, i64 %4584
  %4586 = load i32, ptr %4585, align 4, !tbaa !6
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4573
  %4588 = load i32, ptr %4587, align 4, !tbaa !6
  %4589 = add nsw i32 %4588, %4586
  store i32 %4589, ptr %4587, align 4, !tbaa !6
  br label %4608

4590:                                             ; preds = %4563, %4580
  %4591 = phi i32 [ %4575, %4580 ], [ %4564, %4563 ]
  %4592 = phi ptr [ %4574, %4580 ], [ %4, %4563 ]
  %4593 = phi i64 [ %4573, %4580 ], [ 0, %4563 ]
  %4594 = add nsw i32 %4591, 1
  store i32 %4594, ptr %4592, align 4, !tbaa !6
  %4595 = getelementptr inbounds i32, ptr %7, i64 %4593
  %4596 = load i32, ptr %4595, align 4, !tbaa !6
  %4597 = getelementptr inbounds i32, ptr %6, i64 %4593
  br label %4608

4598:                                             ; preds = %4572
  %4599 = icmp eq i32 %4575, %4578
  br i1 %4599, label %4600, label %4606

4600:                                             ; preds = %4598
  store i32 0, ptr %4574, align 4, !tbaa !6
  %4601 = getelementptr inbounds i32, ptr %8, i64 %4573
  %4602 = load i32, ptr %4601, align 4, !tbaa !6
  %4603 = getelementptr inbounds i32, ptr %6, i64 %4573
  store i32 %4602, ptr %4603, align 4, !tbaa !6
  %4604 = add nuw nsw i64 %4573, 1
  %4605 = icmp eq i64 %4604, %4323
  br i1 %4605, label %4613, label %4572, !llvm.loop !173

4606:                                             ; preds = %4568, %4598
  %4607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4608:                                             ; preds = %4581, %4590
  %4609 = phi ptr [ %4597, %4590 ], [ %4574, %4581 ]
  %4610 = phi i32 [ %4596, %4590 ], [ 1, %4581 ]
  %4611 = load i32, ptr %4609, align 4, !tbaa !6
  %4612 = add nsw i32 %4611, %4610
  store i32 %4612, ptr %4609, align 4, !tbaa !6
  br label %4613

4613:                                             ; preds = %4600, %4608, %4570, %4552
  %4614 = icmp eq i32 %4562, %5
  br i1 %4614, label %5522, label %4474, !llvm.loop !174

4615:                                             ; preds = %4311
  %4616 = getelementptr inbounds i32, ptr %3, i64 %19
  %4617 = load i32, ptr %4616, align 4, !tbaa !6
  %4618 = icmp eq i32 %4617, 0
  %4619 = icmp sgt i32 %5, 0
  br i1 %4618, label %4629, label %4620

4620:                                             ; preds = %4615
  br i1 %4619, label %4621, label %5522

4621:                                             ; preds = %4620
  %4622 = icmp sgt i32 %13, 1
  %4623 = icmp sgt i32 %13, 0
  %4624 = add i32 %13, -2
  %4625 = zext i32 %4624 to i64
  %4626 = zext i32 %13 to i64
  %4627 = add nuw i32 %5, 1
  %4628 = icmp eq i32 %13, 1
  br label %4772

4629:                                             ; preds = %4615
  br i1 %4619, label %4630, label %5522

4630:                                             ; preds = %4629
  %4631 = icmp sgt i32 %13, 1
  %4632 = icmp sgt i32 %13, 0
  %4633 = add i32 %13, -2
  %4634 = zext i32 %4633 to i64
  %4635 = zext i32 %13 to i64
  %4636 = add nuw i32 %5, 1
  %4637 = icmp eq i32 %13, 1
  br label %4638

4638:                                             ; preds = %4630, %4770
  %4639 = phi float [ 0.000000e+00, %4630 ], [ %4720, %4770 ]
  %4640 = phi i32 [ 0, %4630 ], [ %4722, %4770 ]
  %4641 = phi double [ 0.000000e+00, %4630 ], [ %4721, %4770 ]
  %4642 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4631, label %4643, label %4712

4643:                                             ; preds = %4638, %4702
  %4644 = phi i32 [ %4711, %4702 ], [ 0, %4638 ]
  %4645 = phi i64 [ %4653, %4702 ], [ %4635, %4638 ]
  %4646 = phi i64 [ %4710, %4702 ], [ %4634, %4638 ]
  %4647 = phi i32 [ %4708, %4702 ], [ %4642, %4638 ]
  %4648 = sub i32 %4633, %4644
  %4649 = tail call i32 @llvm.smin.i32(i32 %4648, i32 0)
  %4650 = sub i32 %4648, %4649
  %4651 = zext i32 %4650 to i64
  %4652 = add nuw nsw i64 %4651, 1
  %4653 = add nsw i64 %4645, -1
  %4654 = icmp ult i32 %4650, 31
  br i1 %4654, label %4690, label %4655

4655:                                             ; preds = %4643
  %4656 = and i64 %4652, 8589934560
  %4657 = sub i64 %4646, %4656
  br label %4658

4658:                                             ; preds = %4658, %4655
  %4659 = phi i64 [ 0, %4655 ], [ %4682, %4658 ]
  %4660 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4655 ], [ %4678, %4658 ]
  %4661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4655 ], [ %4679, %4658 ]
  %4662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4655 ], [ %4680, %4658 ]
  %4663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4655 ], [ %4681, %4658 ]
  %4664 = sub i64 %4646, %4659
  %4665 = getelementptr inbounds i32, ptr %9, i64 %4664
  %4666 = getelementptr inbounds i32, ptr %4665, i64 -7
  %4667 = load <8 x i32>, ptr %4666, align 4, !tbaa !6
  %4668 = shufflevector <8 x i32> %4667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4669 = getelementptr inbounds i32, ptr %4665, i64 -15
  %4670 = load <8 x i32>, ptr %4669, align 4, !tbaa !6
  %4671 = shufflevector <8 x i32> %4670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4672 = getelementptr inbounds i32, ptr %4665, i64 -23
  %4673 = load <8 x i32>, ptr %4672, align 4, !tbaa !6
  %4674 = shufflevector <8 x i32> %4673, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4675 = getelementptr inbounds i32, ptr %4665, i64 -31
  %4676 = load <8 x i32>, ptr %4675, align 4, !tbaa !6
  %4677 = shufflevector <8 x i32> %4676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4678 = mul <8 x i32> %4668, %4660
  %4679 = mul <8 x i32> %4671, %4661
  %4680 = mul <8 x i32> %4674, %4662
  %4681 = mul <8 x i32> %4677, %4663
  %4682 = add nuw i64 %4659, 32
  %4683 = icmp eq i64 %4682, %4656
  br i1 %4683, label %4684, label %4658, !llvm.loop !175

4684:                                             ; preds = %4658
  %4685 = mul <8 x i32> %4679, %4678
  %4686 = mul <8 x i32> %4680, %4685
  %4687 = mul <8 x i32> %4681, %4686
  %4688 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4687)
  %4689 = icmp eq i64 %4652, %4656
  br i1 %4689, label %4702, label %4690

4690:                                             ; preds = %4643, %4684
  %4691 = phi i64 [ %4646, %4643 ], [ %4657, %4684 ]
  %4692 = phi i32 [ 1, %4643 ], [ %4688, %4684 ]
  br label %4693

4693:                                             ; preds = %4690, %4693
  %4694 = phi i64 [ %4699, %4693 ], [ %4691, %4690 ]
  %4695 = phi i32 [ %4698, %4693 ], [ %4692, %4690 ]
  %4696 = getelementptr inbounds i32, ptr %9, i64 %4694
  %4697 = load i32, ptr %4696, align 4, !tbaa !6
  %4698 = mul nsw i32 %4697, %4695
  %4699 = add nsw i64 %4694, -1
  %4700 = trunc i64 %4694 to i32
  %4701 = icmp sgt i32 %4700, 0
  br i1 %4701, label %4693, label %4702, !llvm.loop !176

4702:                                             ; preds = %4693, %4684
  %4703 = phi i32 [ %4688, %4684 ], [ %4698, %4693 ]
  %4704 = and i64 %4653, 4294967295
  %4705 = getelementptr inbounds i32, ptr %6, i64 %4704
  %4706 = load i32, ptr %4705, align 4, !tbaa !6
  %4707 = mul nsw i32 %4706, %4703
  %4708 = add nsw i32 %4707, %4647
  %4709 = icmp sgt i64 %4645, 2
  %4710 = add nsw i64 %4646, -1
  %4711 = add i32 %4644, 1
  br i1 %4709, label %4643, label %4712, !llvm.loop !177

4712:                                             ; preds = %4702, %4638
  %4713 = phi i32 [ %4642, %4638 ], [ %4708, %4702 ]
  %4714 = sext i32 %4713 to i64
  %4715 = getelementptr inbounds i8, ptr %4302, i64 %4714
  %4716 = load i8, ptr %4715, align 1, !tbaa !12
  %4717 = uitofp i8 %4716 to float
  %4718 = fmul fast float %4717, %4717
  %4719 = fmul fast float %4718, %4718
  %4720 = fadd fast float %4719, %4639
  store float %4720, ptr %4304, align 4, !tbaa !163
  %4721 = fadd fast double %4641, 1.000000e+00
  %4722 = add nuw nsw i32 %4640, 1
  br i1 %4632, label %4723, label %4770

4723:                                             ; preds = %4712
  %4724 = load i32, ptr %4, align 4, !tbaa !6
  %4725 = load i32, ptr %12, align 4, !tbaa !6
  %4726 = add nsw i32 %4725, -1
  %4727 = icmp slt i32 %4724, %4726
  br i1 %4727, label %4747, label %4728

4728:                                             ; preds = %4723
  %4729 = icmp eq i32 %4724, %4726
  br i1 %4729, label %4730, label %4763

4730:                                             ; preds = %4728
  store i32 0, ptr %4, align 4, !tbaa !6
  %4731 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4731, ptr %6, align 4, !tbaa !6
  br i1 %4637, label %4770, label %4732

4732:                                             ; preds = %4730, %4757
  %4733 = phi i64 [ %4761, %4757 ], [ 1, %4730 ]
  %4734 = getelementptr inbounds i32, ptr %4, i64 %4733
  %4735 = load i32, ptr %4734, align 4, !tbaa !6
  %4736 = getelementptr inbounds i32, ptr %12, i64 %4733
  %4737 = load i32, ptr %4736, align 4, !tbaa !6
  %4738 = add nsw i32 %4737, -1
  %4739 = icmp slt i32 %4735, %4738
  br i1 %4739, label %4740, label %4755

4740:                                             ; preds = %4732
  br i1 %4727, label %4747, label %4741

4741:                                             ; preds = %4740
  %4742 = getelementptr inbounds i32, ptr %7, i64 %4733
  %4743 = load i32, ptr %4742, align 4, !tbaa !6
  %4744 = getelementptr inbounds i32, ptr %6, i64 %4733
  %4745 = load i32, ptr %4744, align 4, !tbaa !6
  %4746 = add nsw i32 %4745, %4743
  store i32 %4746, ptr %4744, align 4, !tbaa !6
  br label %4765

4747:                                             ; preds = %4723, %4740
  %4748 = phi i32 [ %4735, %4740 ], [ %4724, %4723 ]
  %4749 = phi ptr [ %4734, %4740 ], [ %4, %4723 ]
  %4750 = phi i64 [ %4733, %4740 ], [ 0, %4723 ]
  %4751 = add nsw i32 %4748, 1
  store i32 %4751, ptr %4749, align 4, !tbaa !6
  %4752 = getelementptr inbounds i32, ptr %7, i64 %4750
  %4753 = load i32, ptr %4752, align 4, !tbaa !6
  %4754 = getelementptr inbounds i32, ptr %6, i64 %4750
  br label %4765

4755:                                             ; preds = %4732
  %4756 = icmp eq i32 %4735, %4738
  br i1 %4756, label %4757, label %4763

4757:                                             ; preds = %4755
  store i32 0, ptr %4734, align 4, !tbaa !6
  %4758 = getelementptr inbounds i32, ptr %8, i64 %4733
  %4759 = load i32, ptr %4758, align 4, !tbaa !6
  %4760 = getelementptr inbounds i32, ptr %6, i64 %4733
  store i32 %4759, ptr %4760, align 4, !tbaa !6
  %4761 = add nuw nsw i64 %4733, 1
  %4762 = icmp eq i64 %4761, %4635
  br i1 %4762, label %4770, label %4732, !llvm.loop !178

4763:                                             ; preds = %4728, %4755
  %4764 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4765:                                             ; preds = %4741, %4747
  %4766 = phi ptr [ %4754, %4747 ], [ %4734, %4741 ]
  %4767 = phi i32 [ %4753, %4747 ], [ 1, %4741 ]
  %4768 = load i32, ptr %4766, align 4, !tbaa !6
  %4769 = add nsw i32 %4768, %4767
  store i32 %4769, ptr %4766, align 4, !tbaa !6
  br label %4770

4770:                                             ; preds = %4757, %4765, %4730, %4712
  %4771 = icmp eq i32 %4722, %5
  br i1 %4771, label %5522, label %4638, !llvm.loop !179

4772:                                             ; preds = %4621, %4909
  %4773 = phi float [ 0.000000e+00, %4621 ], [ %4857, %4909 ]
  %4774 = phi i32 [ 0, %4621 ], [ %4858, %4909 ]
  %4775 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4622, label %4776, label %4845

4776:                                             ; preds = %4772, %4835
  %4777 = phi i32 [ %4844, %4835 ], [ 0, %4772 ]
  %4778 = phi i64 [ %4786, %4835 ], [ %4626, %4772 ]
  %4779 = phi i64 [ %4843, %4835 ], [ %4625, %4772 ]
  %4780 = phi i32 [ %4841, %4835 ], [ %4775, %4772 ]
  %4781 = sub i32 %4624, %4777
  %4782 = tail call i32 @llvm.smin.i32(i32 %4781, i32 0)
  %4783 = sub i32 %4781, %4782
  %4784 = zext i32 %4783 to i64
  %4785 = add nuw nsw i64 %4784, 1
  %4786 = add nsw i64 %4778, -1
  %4787 = icmp ult i32 %4783, 31
  br i1 %4787, label %4823, label %4788

4788:                                             ; preds = %4776
  %4789 = and i64 %4785, 8589934560
  %4790 = sub i64 %4779, %4789
  br label %4791

4791:                                             ; preds = %4791, %4788
  %4792 = phi i64 [ 0, %4788 ], [ %4815, %4791 ]
  %4793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4788 ], [ %4811, %4791 ]
  %4794 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4788 ], [ %4812, %4791 ]
  %4795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4788 ], [ %4813, %4791 ]
  %4796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4788 ], [ %4814, %4791 ]
  %4797 = sub i64 %4779, %4792
  %4798 = getelementptr inbounds i32, ptr %11, i64 %4797
  %4799 = getelementptr inbounds i32, ptr %4798, i64 -7
  %4800 = load <8 x i32>, ptr %4799, align 4, !tbaa !6
  %4801 = shufflevector <8 x i32> %4800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4802 = getelementptr inbounds i32, ptr %4798, i64 -15
  %4803 = load <8 x i32>, ptr %4802, align 4, !tbaa !6
  %4804 = shufflevector <8 x i32> %4803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4805 = getelementptr inbounds i32, ptr %4798, i64 -23
  %4806 = load <8 x i32>, ptr %4805, align 4, !tbaa !6
  %4807 = shufflevector <8 x i32> %4806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4808 = getelementptr inbounds i32, ptr %4798, i64 -31
  %4809 = load <8 x i32>, ptr %4808, align 4, !tbaa !6
  %4810 = shufflevector <8 x i32> %4809, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4811 = mul <8 x i32> %4801, %4793
  %4812 = mul <8 x i32> %4804, %4794
  %4813 = mul <8 x i32> %4807, %4795
  %4814 = mul <8 x i32> %4810, %4796
  %4815 = add nuw i64 %4792, 32
  %4816 = icmp eq i64 %4815, %4789
  br i1 %4816, label %4817, label %4791, !llvm.loop !180

4817:                                             ; preds = %4791
  %4818 = mul <8 x i32> %4812, %4811
  %4819 = mul <8 x i32> %4813, %4818
  %4820 = mul <8 x i32> %4814, %4819
  %4821 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4820)
  %4822 = icmp eq i64 %4785, %4789
  br i1 %4822, label %4835, label %4823

4823:                                             ; preds = %4776, %4817
  %4824 = phi i64 [ %4779, %4776 ], [ %4790, %4817 ]
  %4825 = phi i32 [ 1, %4776 ], [ %4821, %4817 ]
  br label %4826

4826:                                             ; preds = %4823, %4826
  %4827 = phi i64 [ %4832, %4826 ], [ %4824, %4823 ]
  %4828 = phi i32 [ %4831, %4826 ], [ %4825, %4823 ]
  %4829 = getelementptr inbounds i32, ptr %11, i64 %4827
  %4830 = load i32, ptr %4829, align 4, !tbaa !6
  %4831 = mul nsw i32 %4830, %4828
  %4832 = add nsw i64 %4827, -1
  %4833 = trunc i64 %4827 to i32
  %4834 = icmp sgt i32 %4833, 0
  br i1 %4834, label %4826, label %4835, !llvm.loop !181

4835:                                             ; preds = %4826, %4817
  %4836 = phi i32 [ %4821, %4817 ], [ %4831, %4826 ]
  %4837 = and i64 %4786, 4294967295
  %4838 = getelementptr inbounds i32, ptr %6, i64 %4837
  %4839 = load i32, ptr %4838, align 4, !tbaa !6
  %4840 = mul nsw i32 %4839, %4836
  %4841 = add nsw i32 %4840, %4780
  %4842 = icmp sgt i64 %4778, 2
  %4843 = add nsw i64 %4779, -1
  %4844 = add i32 %4777, 1
  br i1 %4842, label %4776, label %4845, !llvm.loop !182

4845:                                             ; preds = %4835, %4772
  %4846 = phi i32 [ %4775, %4772 ], [ %4841, %4835 ]
  %4847 = icmp slt i32 %4846, %5
  br i1 %4847, label %4850, label %4848

4848:                                             ; preds = %4845
  %4849 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4850:                                             ; preds = %4845
  %4851 = sext i32 %4846 to i64
  %4852 = getelementptr inbounds i8, ptr %4302, i64 %4851
  %4853 = load i8, ptr %4852, align 1, !tbaa !12
  %4854 = uitofp i8 %4853 to float
  %4855 = fmul fast float %4854, %4854
  %4856 = fmul fast float %4855, %4855
  %4857 = fadd fast float %4856, %4773
  store float %4857, ptr %4304, align 4, !tbaa !163
  %4858 = add nuw nsw i32 %4774, 1
  br i1 %4623, label %4859, label %4909

4859:                                             ; preds = %4850
  %4860 = load i32, ptr %4, align 4, !tbaa !6
  %4861 = load i32, ptr %12, align 4, !tbaa !6
  %4862 = add nsw i32 %4861, -1
  %4863 = icmp slt i32 %4860, %4862
  br i1 %4863, label %4886, label %4864

4864:                                             ; preds = %4859
  %4865 = icmp eq i32 %4860, %4862
  br i1 %4865, label %4866, label %4902

4866:                                             ; preds = %4864
  store i32 0, ptr %4, align 4, !tbaa !6
  %4867 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4867, ptr %6, align 4, !tbaa !6
  br i1 %4628, label %4909, label %4868

4868:                                             ; preds = %4866, %4896
  %4869 = phi i64 [ %4900, %4896 ], [ 1, %4866 ]
  %4870 = getelementptr inbounds i32, ptr %4, i64 %4869
  %4871 = load i32, ptr %4870, align 4, !tbaa !6
  %4872 = getelementptr inbounds i32, ptr %12, i64 %4869
  %4873 = load i32, ptr %4872, align 4, !tbaa !6
  %4874 = add nsw i32 %4873, -1
  %4875 = icmp slt i32 %4871, %4874
  br i1 %4875, label %4876, label %4894

4876:                                             ; preds = %4868
  br i1 %4863, label %4886, label %4877

4877:                                             ; preds = %4876
  %4878 = shl i64 %4869, 32
  %4879 = add i64 %4878, -4294967296
  %4880 = ashr exact i64 %4879, 32
  %4881 = getelementptr inbounds i32, ptr %7, i64 %4880
  %4882 = load i32, ptr %4881, align 4, !tbaa !6
  %4883 = getelementptr inbounds i32, ptr %6, i64 %4869
  %4884 = load i32, ptr %4883, align 4, !tbaa !6
  %4885 = add nsw i32 %4884, %4882
  store i32 %4885, ptr %4883, align 4, !tbaa !6
  br label %4904

4886:                                             ; preds = %4859, %4876
  %4887 = phi i32 [ %4871, %4876 ], [ %4860, %4859 ]
  %4888 = phi ptr [ %4870, %4876 ], [ %4, %4859 ]
  %4889 = phi i64 [ %4869, %4876 ], [ 0, %4859 ]
  %4890 = add nsw i32 %4887, 1
  store i32 %4890, ptr %4888, align 4, !tbaa !6
  %4891 = getelementptr inbounds i32, ptr %7, i64 %4889
  %4892 = load i32, ptr %4891, align 4, !tbaa !6
  %4893 = getelementptr inbounds i32, ptr %6, i64 %4889
  br label %4904

4894:                                             ; preds = %4868
  %4895 = icmp eq i32 %4871, %4874
  br i1 %4895, label %4896, label %4902

4896:                                             ; preds = %4894
  store i32 0, ptr %4870, align 4, !tbaa !6
  %4897 = getelementptr inbounds i32, ptr %8, i64 %4869
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4869
  store i32 %4898, ptr %4899, align 4, !tbaa !6
  %4900 = add nuw nsw i64 %4869, 1
  %4901 = icmp eq i64 %4900, %4626
  br i1 %4901, label %4909, label %4868, !llvm.loop !183

4902:                                             ; preds = %4864, %4894
  %4903 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4904:                                             ; preds = %4877, %4886
  %4905 = phi ptr [ %4893, %4886 ], [ %4870, %4877 ]
  %4906 = phi i32 [ %4892, %4886 ], [ 1, %4877 ]
  %4907 = load i32, ptr %4905, align 4, !tbaa !6
  %4908 = add nsw i32 %4907, %4906
  store i32 %4908, ptr %4905, align 4, !tbaa !6
  br label %4909

4909:                                             ; preds = %4896, %4904, %4866, %4850
  %4910 = icmp eq i32 %4858, %5
  br i1 %4910, label %5522, label %4772, !llvm.loop !184

4911:                                             ; preds = %4311
  %4912 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

4913:                                             ; preds = %18
  %4914 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4915 = load ptr, ptr %4914, align 8, !tbaa !10
  %4916 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4917 = load ptr, ptr %4916, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4917, align 8, !tbaa !19
  %4918 = icmp eq i32 %13, 0
  br i1 %4918, label %4919, label %4924

4919:                                             ; preds = %4913
  %4920 = load i8, ptr %4915, align 1, !tbaa !12
  %4921 = uitofp i8 %4920 to double
  %4922 = fmul fast double %4921, %4921
  %4923 = fmul fast double %4922, %4922
  store double %4923, ptr %4917, align 8, !tbaa !19
  br label %5522

4924:                                             ; preds = %4913
  switch i32 %1, label %5520 [
    i32 1, label %4925
    i32 0, label %5224
  ]

4925:                                             ; preds = %4924
  %4926 = getelementptr inbounds i32, ptr %3, i64 %19
  %4927 = load i32, ptr %4926, align 4, !tbaa !6
  %4928 = icmp eq i32 %4927, 0
  %4929 = icmp sgt i32 %5, 0
  br i1 %4928, label %4939, label %4930

4930:                                             ; preds = %4925
  br i1 %4929, label %4931, label %5522

4931:                                             ; preds = %4930
  %4932 = icmp sgt i32 %13, 1
  %4933 = icmp sgt i32 %13, 0
  %4934 = add i32 %13, -2
  %4935 = zext i32 %4934 to i64
  %4936 = zext i32 %13 to i64
  %4937 = add nuw i32 %5, 1
  %4938 = icmp eq i32 %13, 1
  br label %5085

4939:                                             ; preds = %4925
  br i1 %4929, label %4940, label %5522

4940:                                             ; preds = %4939
  %4941 = icmp sgt i32 %13, 1
  %4942 = icmp sgt i32 %13, 0
  %4943 = add i32 %13, -2
  %4944 = zext i32 %4943 to i64
  %4945 = zext i32 %13 to i64
  %4946 = add nuw i32 %5, 1
  %4947 = icmp eq i32 %13, 1
  br label %4948

4948:                                             ; preds = %4940, %5083
  %4949 = phi double [ 0.000000e+00, %4940 ], [ %5033, %5083 ]
  %4950 = phi i32 [ 0, %4940 ], [ %5035, %5083 ]
  %4951 = phi double [ 0.000000e+00, %4940 ], [ %5034, %5083 ]
  %4952 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4941, label %4953, label %5022

4953:                                             ; preds = %4948, %5012
  %4954 = phi i32 [ %5021, %5012 ], [ 0, %4948 ]
  %4955 = phi i64 [ %4963, %5012 ], [ %4945, %4948 ]
  %4956 = phi i64 [ %5020, %5012 ], [ %4944, %4948 ]
  %4957 = phi i32 [ %5018, %5012 ], [ %4952, %4948 ]
  %4958 = sub i32 %4943, %4954
  %4959 = tail call i32 @llvm.smin.i32(i32 %4958, i32 0)
  %4960 = sub i32 %4958, %4959
  %4961 = zext i32 %4960 to i64
  %4962 = add nuw nsw i64 %4961, 1
  %4963 = add nsw i64 %4955, -1
  %4964 = icmp ult i32 %4960, 31
  br i1 %4964, label %5000, label %4965

4965:                                             ; preds = %4953
  %4966 = and i64 %4962, 8589934560
  %4967 = sub i64 %4956, %4966
  br label %4968

4968:                                             ; preds = %4968, %4965
  %4969 = phi i64 [ 0, %4965 ], [ %4992, %4968 ]
  %4970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4965 ], [ %4988, %4968 ]
  %4971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4965 ], [ %4989, %4968 ]
  %4972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4965 ], [ %4990, %4968 ]
  %4973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4965 ], [ %4991, %4968 ]
  %4974 = sub i64 %4956, %4969
  %4975 = getelementptr inbounds i32, ptr %9, i64 %4974
  %4976 = getelementptr inbounds i32, ptr %4975, i64 -7
  %4977 = load <8 x i32>, ptr %4976, align 4, !tbaa !6
  %4978 = shufflevector <8 x i32> %4977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4979 = getelementptr inbounds i32, ptr %4975, i64 -15
  %4980 = load <8 x i32>, ptr %4979, align 4, !tbaa !6
  %4981 = shufflevector <8 x i32> %4980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4982 = getelementptr inbounds i32, ptr %4975, i64 -23
  %4983 = load <8 x i32>, ptr %4982, align 4, !tbaa !6
  %4984 = shufflevector <8 x i32> %4983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4985 = getelementptr inbounds i32, ptr %4975, i64 -31
  %4986 = load <8 x i32>, ptr %4985, align 4, !tbaa !6
  %4987 = shufflevector <8 x i32> %4986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4988 = mul <8 x i32> %4978, %4970
  %4989 = mul <8 x i32> %4981, %4971
  %4990 = mul <8 x i32> %4984, %4972
  %4991 = mul <8 x i32> %4987, %4973
  %4992 = add nuw i64 %4969, 32
  %4993 = icmp eq i64 %4992, %4966
  br i1 %4993, label %4994, label %4968, !llvm.loop !185

4994:                                             ; preds = %4968
  %4995 = mul <8 x i32> %4989, %4988
  %4996 = mul <8 x i32> %4990, %4995
  %4997 = mul <8 x i32> %4991, %4996
  %4998 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4997)
  %4999 = icmp eq i64 %4962, %4966
  br i1 %4999, label %5012, label %5000

5000:                                             ; preds = %4953, %4994
  %5001 = phi i64 [ %4956, %4953 ], [ %4967, %4994 ]
  %5002 = phi i32 [ 1, %4953 ], [ %4998, %4994 ]
  br label %5003

5003:                                             ; preds = %5000, %5003
  %5004 = phi i64 [ %5009, %5003 ], [ %5001, %5000 ]
  %5005 = phi i32 [ %5008, %5003 ], [ %5002, %5000 ]
  %5006 = getelementptr inbounds i32, ptr %9, i64 %5004
  %5007 = load i32, ptr %5006, align 4, !tbaa !6
  %5008 = mul nsw i32 %5007, %5005
  %5009 = add nsw i64 %5004, -1
  %5010 = trunc i64 %5004 to i32
  %5011 = icmp sgt i32 %5010, 0
  br i1 %5011, label %5003, label %5012, !llvm.loop !186

5012:                                             ; preds = %5003, %4994
  %5013 = phi i32 [ %4998, %4994 ], [ %5008, %5003 ]
  %5014 = and i64 %4963, 4294967295
  %5015 = getelementptr inbounds i32, ptr %6, i64 %5014
  %5016 = load i32, ptr %5015, align 4, !tbaa !6
  %5017 = mul nsw i32 %5016, %5013
  %5018 = add nsw i32 %5017, %4957
  %5019 = icmp sgt i64 %4955, 2
  %5020 = add nsw i64 %4956, -1
  %5021 = add i32 %4954, 1
  br i1 %5019, label %4953, label %5022, !llvm.loop !187

5022:                                             ; preds = %5012, %4948
  %5023 = phi i32 [ %4952, %4948 ], [ %5018, %5012 ]
  %5024 = sext i32 %5023 to i64
  %5025 = getelementptr inbounds double, ptr %2, i64 %5024
  %5026 = load double, ptr %5025, align 8, !tbaa !19
  %5027 = getelementptr inbounds i8, ptr %4915, i64 %5024
  %5028 = load i8, ptr %5027, align 1, !tbaa !12
  %5029 = uitofp i8 %5028 to double
  %5030 = fmul fast double %5026, %5029
  %5031 = fmul fast double %5030, %5030
  %5032 = fmul fast double %5031, %5031
  %5033 = fadd fast double %5032, %4949
  store double %5033, ptr %4917, align 8, !tbaa !19
  %5034 = fadd fast double %5026, %4951
  %5035 = add nuw nsw i32 %4950, 1
  br i1 %4942, label %5036, label %5083

5036:                                             ; preds = %5022
  %5037 = load i32, ptr %4, align 4, !tbaa !6
  %5038 = load i32, ptr %12, align 4, !tbaa !6
  %5039 = add nsw i32 %5038, -1
  %5040 = icmp slt i32 %5037, %5039
  br i1 %5040, label %5060, label %5041

5041:                                             ; preds = %5036
  %5042 = icmp eq i32 %5037, %5039
  br i1 %5042, label %5043, label %5076

5043:                                             ; preds = %5041
  store i32 0, ptr %4, align 4, !tbaa !6
  %5044 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5044, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5083, label %5045

5045:                                             ; preds = %5043, %5070
  %5046 = phi i64 [ %5074, %5070 ], [ 1, %5043 ]
  %5047 = getelementptr inbounds i32, ptr %4, i64 %5046
  %5048 = load i32, ptr %5047, align 4, !tbaa !6
  %5049 = getelementptr inbounds i32, ptr %12, i64 %5046
  %5050 = load i32, ptr %5049, align 4, !tbaa !6
  %5051 = add nsw i32 %5050, -1
  %5052 = icmp slt i32 %5048, %5051
  br i1 %5052, label %5053, label %5068

5053:                                             ; preds = %5045
  br i1 %5040, label %5060, label %5054

5054:                                             ; preds = %5053
  %5055 = getelementptr inbounds i32, ptr %7, i64 %5046
  %5056 = load i32, ptr %5055, align 4, !tbaa !6
  %5057 = getelementptr inbounds i32, ptr %6, i64 %5046
  %5058 = load i32, ptr %5057, align 4, !tbaa !6
  %5059 = add nsw i32 %5058, %5056
  store i32 %5059, ptr %5057, align 4, !tbaa !6
  br label %5078

5060:                                             ; preds = %5036, %5053
  %5061 = phi i32 [ %5048, %5053 ], [ %5037, %5036 ]
  %5062 = phi ptr [ %5047, %5053 ], [ %4, %5036 ]
  %5063 = phi i64 [ %5046, %5053 ], [ 0, %5036 ]
  %5064 = add nsw i32 %5061, 1
  store i32 %5064, ptr %5062, align 4, !tbaa !6
  %5065 = getelementptr inbounds i32, ptr %7, i64 %5063
  %5066 = load i32, ptr %5065, align 4, !tbaa !6
  %5067 = getelementptr inbounds i32, ptr %6, i64 %5063
  br label %5078

5068:                                             ; preds = %5045
  %5069 = icmp eq i32 %5048, %5051
  br i1 %5069, label %5070, label %5076

5070:                                             ; preds = %5068
  store i32 0, ptr %5047, align 4, !tbaa !6
  %5071 = getelementptr inbounds i32, ptr %8, i64 %5046
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = getelementptr inbounds i32, ptr %6, i64 %5046
  store i32 %5072, ptr %5073, align 4, !tbaa !6
  %5074 = add nuw nsw i64 %5046, 1
  %5075 = icmp eq i64 %5074, %4945
  br i1 %5075, label %5083, label %5045, !llvm.loop !188

5076:                                             ; preds = %5041, %5068
  %5077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5078:                                             ; preds = %5054, %5060
  %5079 = phi ptr [ %5067, %5060 ], [ %5047, %5054 ]
  %5080 = phi i32 [ %5066, %5060 ], [ 1, %5054 ]
  %5081 = load i32, ptr %5079, align 4, !tbaa !6
  %5082 = add nsw i32 %5081, %5080
  store i32 %5082, ptr %5079, align 4, !tbaa !6
  br label %5083

5083:                                             ; preds = %5070, %5078, %5043, %5022
  %5084 = icmp eq i32 %5035, %5
  br i1 %5084, label %5522, label %4948, !llvm.loop !189

5085:                                             ; preds = %4931, %5222
  %5086 = phi double [ 0.000000e+00, %4931 ], [ %5170, %5222 ]
  %5087 = phi i32 [ 0, %4931 ], [ %5171, %5222 ]
  %5088 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4932, label %5089, label %5158

5089:                                             ; preds = %5085, %5148
  %5090 = phi i32 [ %5157, %5148 ], [ 0, %5085 ]
  %5091 = phi i64 [ %5099, %5148 ], [ %4936, %5085 ]
  %5092 = phi i64 [ %5156, %5148 ], [ %4935, %5085 ]
  %5093 = phi i32 [ %5154, %5148 ], [ %5088, %5085 ]
  %5094 = sub i32 %4934, %5090
  %5095 = tail call i32 @llvm.smin.i32(i32 %5094, i32 0)
  %5096 = sub i32 %5094, %5095
  %5097 = zext i32 %5096 to i64
  %5098 = add nuw nsw i64 %5097, 1
  %5099 = add nsw i64 %5091, -1
  %5100 = icmp ult i32 %5096, 31
  br i1 %5100, label %5136, label %5101

5101:                                             ; preds = %5089
  %5102 = and i64 %5098, 8589934560
  %5103 = sub i64 %5092, %5102
  br label %5104

5104:                                             ; preds = %5104, %5101
  %5105 = phi i64 [ 0, %5101 ], [ %5128, %5104 ]
  %5106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5101 ], [ %5124, %5104 ]
  %5107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5101 ], [ %5125, %5104 ]
  %5108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5101 ], [ %5126, %5104 ]
  %5109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5101 ], [ %5127, %5104 ]
  %5110 = sub i64 %5092, %5105
  %5111 = getelementptr inbounds i32, ptr %11, i64 %5110
  %5112 = getelementptr inbounds i32, ptr %5111, i64 -7
  %5113 = load <8 x i32>, ptr %5112, align 4, !tbaa !6
  %5114 = shufflevector <8 x i32> %5113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5115 = getelementptr inbounds i32, ptr %5111, i64 -15
  %5116 = load <8 x i32>, ptr %5115, align 4, !tbaa !6
  %5117 = shufflevector <8 x i32> %5116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5118 = getelementptr inbounds i32, ptr %5111, i64 -23
  %5119 = load <8 x i32>, ptr %5118, align 4, !tbaa !6
  %5120 = shufflevector <8 x i32> %5119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5121 = getelementptr inbounds i32, ptr %5111, i64 -31
  %5122 = load <8 x i32>, ptr %5121, align 4, !tbaa !6
  %5123 = shufflevector <8 x i32> %5122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5124 = mul <8 x i32> %5114, %5106
  %5125 = mul <8 x i32> %5117, %5107
  %5126 = mul <8 x i32> %5120, %5108
  %5127 = mul <8 x i32> %5123, %5109
  %5128 = add nuw i64 %5105, 32
  %5129 = icmp eq i64 %5128, %5102
  br i1 %5129, label %5130, label %5104, !llvm.loop !190

5130:                                             ; preds = %5104
  %5131 = mul <8 x i32> %5125, %5124
  %5132 = mul <8 x i32> %5126, %5131
  %5133 = mul <8 x i32> %5127, %5132
  %5134 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5133)
  %5135 = icmp eq i64 %5098, %5102
  br i1 %5135, label %5148, label %5136

5136:                                             ; preds = %5089, %5130
  %5137 = phi i64 [ %5092, %5089 ], [ %5103, %5130 ]
  %5138 = phi i32 [ 1, %5089 ], [ %5134, %5130 ]
  br label %5139

5139:                                             ; preds = %5136, %5139
  %5140 = phi i64 [ %5145, %5139 ], [ %5137, %5136 ]
  %5141 = phi i32 [ %5144, %5139 ], [ %5138, %5136 ]
  %5142 = getelementptr inbounds i32, ptr %11, i64 %5140
  %5143 = load i32, ptr %5142, align 4, !tbaa !6
  %5144 = mul nsw i32 %5143, %5141
  %5145 = add nsw i64 %5140, -1
  %5146 = trunc i64 %5140 to i32
  %5147 = icmp sgt i32 %5146, 0
  br i1 %5147, label %5139, label %5148, !llvm.loop !191

5148:                                             ; preds = %5139, %5130
  %5149 = phi i32 [ %5134, %5130 ], [ %5144, %5139 ]
  %5150 = and i64 %5099, 4294967295
  %5151 = getelementptr inbounds i32, ptr %6, i64 %5150
  %5152 = load i32, ptr %5151, align 4, !tbaa !6
  %5153 = mul nsw i32 %5152, %5149
  %5154 = add nsw i32 %5153, %5093
  %5155 = icmp sgt i64 %5091, 2
  %5156 = add nsw i64 %5092, -1
  %5157 = add i32 %5090, 1
  br i1 %5155, label %5089, label %5158, !llvm.loop !192

5158:                                             ; preds = %5148, %5085
  %5159 = phi i32 [ %5088, %5085 ], [ %5154, %5148 ]
  %5160 = icmp slt i32 %5159, %5
  br i1 %5160, label %5163, label %5161

5161:                                             ; preds = %5158
  %5162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

5163:                                             ; preds = %5158
  %5164 = sext i32 %5159 to i64
  %5165 = getelementptr inbounds i8, ptr %4915, i64 %5164
  %5166 = load i8, ptr %5165, align 1, !tbaa !12
  %5167 = uitofp i8 %5166 to double
  %5168 = fmul fast double %5167, %5167
  %5169 = fmul fast double %5168, %5168
  %5170 = fadd fast double %5169, %5086
  store double %5170, ptr %4917, align 8, !tbaa !19
  %5171 = add nuw nsw i32 %5087, 1
  br i1 %4933, label %5172, label %5222

5172:                                             ; preds = %5163
  %5173 = load i32, ptr %4, align 4, !tbaa !6
  %5174 = load i32, ptr %12, align 4, !tbaa !6
  %5175 = add nsw i32 %5174, -1
  %5176 = icmp slt i32 %5173, %5175
  br i1 %5176, label %5199, label %5177

5177:                                             ; preds = %5172
  %5178 = icmp eq i32 %5173, %5175
  br i1 %5178, label %5179, label %5215

5179:                                             ; preds = %5177
  store i32 0, ptr %4, align 4, !tbaa !6
  %5180 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5180, ptr %6, align 4, !tbaa !6
  br i1 %4938, label %5222, label %5181

5181:                                             ; preds = %5179, %5209
  %5182 = phi i64 [ %5213, %5209 ], [ 1, %5179 ]
  %5183 = getelementptr inbounds i32, ptr %4, i64 %5182
  %5184 = load i32, ptr %5183, align 4, !tbaa !6
  %5185 = getelementptr inbounds i32, ptr %12, i64 %5182
  %5186 = load i32, ptr %5185, align 4, !tbaa !6
  %5187 = add nsw i32 %5186, -1
  %5188 = icmp slt i32 %5184, %5187
  br i1 %5188, label %5189, label %5207

5189:                                             ; preds = %5181
  br i1 %5176, label %5199, label %5190

5190:                                             ; preds = %5189
  %5191 = shl i64 %5182, 32
  %5192 = add i64 %5191, -4294967296
  %5193 = ashr exact i64 %5192, 32
  %5194 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5195 = load i32, ptr %5194, align 4, !tbaa !6
  %5196 = getelementptr inbounds i32, ptr %6, i64 %5182
  %5197 = load i32, ptr %5196, align 4, !tbaa !6
  %5198 = add nsw i32 %5197, %5195
  store i32 %5198, ptr %5196, align 4, !tbaa !6
  br label %5217

5199:                                             ; preds = %5172, %5189
  %5200 = phi i32 [ %5184, %5189 ], [ %5173, %5172 ]
  %5201 = phi ptr [ %5183, %5189 ], [ %4, %5172 ]
  %5202 = phi i64 [ %5182, %5189 ], [ 0, %5172 ]
  %5203 = add nsw i32 %5200, 1
  store i32 %5203, ptr %5201, align 4, !tbaa !6
  %5204 = getelementptr inbounds i32, ptr %7, i64 %5202
  %5205 = load i32, ptr %5204, align 4, !tbaa !6
  %5206 = getelementptr inbounds i32, ptr %6, i64 %5202
  br label %5217

5207:                                             ; preds = %5181
  %5208 = icmp eq i32 %5184, %5187
  br i1 %5208, label %5209, label %5215

5209:                                             ; preds = %5207
  store i32 0, ptr %5183, align 4, !tbaa !6
  %5210 = getelementptr inbounds i32, ptr %8, i64 %5182
  %5211 = load i32, ptr %5210, align 4, !tbaa !6
  %5212 = getelementptr inbounds i32, ptr %6, i64 %5182
  store i32 %5211, ptr %5212, align 4, !tbaa !6
  %5213 = add nuw nsw i64 %5182, 1
  %5214 = icmp eq i64 %5213, %4936
  br i1 %5214, label %5222, label %5181, !llvm.loop !193

5215:                                             ; preds = %5177, %5207
  %5216 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5217:                                             ; preds = %5190, %5199
  %5218 = phi ptr [ %5206, %5199 ], [ %5183, %5190 ]
  %5219 = phi i32 [ %5205, %5199 ], [ 1, %5190 ]
  %5220 = load i32, ptr %5218, align 4, !tbaa !6
  %5221 = add nsw i32 %5220, %5219
  store i32 %5221, ptr %5218, align 4, !tbaa !6
  br label %5222

5222:                                             ; preds = %5209, %5217, %5179, %5163
  %5223 = icmp eq i32 %5171, %5
  br i1 %5223, label %5522, label %5085, !llvm.loop !194

5224:                                             ; preds = %4924
  %5225 = getelementptr inbounds i32, ptr %3, i64 %19
  %5226 = load i32, ptr %5225, align 4, !tbaa !6
  %5227 = icmp eq i32 %5226, 0
  %5228 = icmp sgt i32 %5, 0
  br i1 %5227, label %5238, label %5229

5229:                                             ; preds = %5224
  br i1 %5228, label %5230, label %5522

5230:                                             ; preds = %5229
  %5231 = icmp sgt i32 %13, 1
  %5232 = icmp sgt i32 %13, 0
  %5233 = add i32 %13, -2
  %5234 = zext i32 %5233 to i64
  %5235 = zext i32 %13 to i64
  %5236 = add nuw i32 %5, 1
  %5237 = icmp eq i32 %13, 1
  br label %5381

5238:                                             ; preds = %5224
  br i1 %5228, label %5239, label %5522

5239:                                             ; preds = %5238
  %5240 = icmp sgt i32 %13, 1
  %5241 = icmp sgt i32 %13, 0
  %5242 = add i32 %13, -2
  %5243 = zext i32 %5242 to i64
  %5244 = zext i32 %13 to i64
  %5245 = add nuw i32 %5, 1
  %5246 = icmp eq i32 %13, 1
  br label %5247

5247:                                             ; preds = %5239, %5379
  %5248 = phi double [ 0.000000e+00, %5239 ], [ %5329, %5379 ]
  %5249 = phi i32 [ 0, %5239 ], [ %5331, %5379 ]
  %5250 = phi double [ 0.000000e+00, %5239 ], [ %5330, %5379 ]
  %5251 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5240, label %5252, label %5321

5252:                                             ; preds = %5247, %5311
  %5253 = phi i32 [ %5320, %5311 ], [ 0, %5247 ]
  %5254 = phi i64 [ %5262, %5311 ], [ %5244, %5247 ]
  %5255 = phi i64 [ %5319, %5311 ], [ %5243, %5247 ]
  %5256 = phi i32 [ %5317, %5311 ], [ %5251, %5247 ]
  %5257 = sub i32 %5242, %5253
  %5258 = tail call i32 @llvm.smin.i32(i32 %5257, i32 0)
  %5259 = sub i32 %5257, %5258
  %5260 = zext i32 %5259 to i64
  %5261 = add nuw nsw i64 %5260, 1
  %5262 = add nsw i64 %5254, -1
  %5263 = icmp ult i32 %5259, 31
  br i1 %5263, label %5299, label %5264

5264:                                             ; preds = %5252
  %5265 = and i64 %5261, 8589934560
  %5266 = sub i64 %5255, %5265
  br label %5267

5267:                                             ; preds = %5267, %5264
  %5268 = phi i64 [ 0, %5264 ], [ %5291, %5267 ]
  %5269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5264 ], [ %5287, %5267 ]
  %5270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5264 ], [ %5288, %5267 ]
  %5271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5264 ], [ %5289, %5267 ]
  %5272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5264 ], [ %5290, %5267 ]
  %5273 = sub i64 %5255, %5268
  %5274 = getelementptr inbounds i32, ptr %9, i64 %5273
  %5275 = getelementptr inbounds i32, ptr %5274, i64 -7
  %5276 = load <8 x i32>, ptr %5275, align 4, !tbaa !6
  %5277 = shufflevector <8 x i32> %5276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5278 = getelementptr inbounds i32, ptr %5274, i64 -15
  %5279 = load <8 x i32>, ptr %5278, align 4, !tbaa !6
  %5280 = shufflevector <8 x i32> %5279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5281 = getelementptr inbounds i32, ptr %5274, i64 -23
  %5282 = load <8 x i32>, ptr %5281, align 4, !tbaa !6
  %5283 = shufflevector <8 x i32> %5282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5284 = getelementptr inbounds i32, ptr %5274, i64 -31
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !6
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = mul <8 x i32> %5277, %5269
  %5288 = mul <8 x i32> %5280, %5270
  %5289 = mul <8 x i32> %5283, %5271
  %5290 = mul <8 x i32> %5286, %5272
  %5291 = add nuw i64 %5268, 32
  %5292 = icmp eq i64 %5291, %5265
  br i1 %5292, label %5293, label %5267, !llvm.loop !195

5293:                                             ; preds = %5267
  %5294 = mul <8 x i32> %5288, %5287
  %5295 = mul <8 x i32> %5289, %5294
  %5296 = mul <8 x i32> %5290, %5295
  %5297 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5296)
  %5298 = icmp eq i64 %5261, %5265
  br i1 %5298, label %5311, label %5299

5299:                                             ; preds = %5252, %5293
  %5300 = phi i64 [ %5255, %5252 ], [ %5266, %5293 ]
  %5301 = phi i32 [ 1, %5252 ], [ %5297, %5293 ]
  br label %5302

5302:                                             ; preds = %5299, %5302
  %5303 = phi i64 [ %5308, %5302 ], [ %5300, %5299 ]
  %5304 = phi i32 [ %5307, %5302 ], [ %5301, %5299 ]
  %5305 = getelementptr inbounds i32, ptr %9, i64 %5303
  %5306 = load i32, ptr %5305, align 4, !tbaa !6
  %5307 = mul nsw i32 %5306, %5304
  %5308 = add nsw i64 %5303, -1
  %5309 = trunc i64 %5303 to i32
  %5310 = icmp sgt i32 %5309, 0
  br i1 %5310, label %5302, label %5311, !llvm.loop !196

5311:                                             ; preds = %5302, %5293
  %5312 = phi i32 [ %5297, %5293 ], [ %5307, %5302 ]
  %5313 = and i64 %5262, 4294967295
  %5314 = getelementptr inbounds i32, ptr %6, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !6
  %5316 = mul nsw i32 %5315, %5312
  %5317 = add nsw i32 %5316, %5256
  %5318 = icmp sgt i64 %5254, 2
  %5319 = add nsw i64 %5255, -1
  %5320 = add i32 %5253, 1
  br i1 %5318, label %5252, label %5321, !llvm.loop !197

5321:                                             ; preds = %5311, %5247
  %5322 = phi i32 [ %5251, %5247 ], [ %5317, %5311 ]
  %5323 = sext i32 %5322 to i64
  %5324 = getelementptr inbounds i8, ptr %4915, i64 %5323
  %5325 = load i8, ptr %5324, align 1, !tbaa !12
  %5326 = uitofp i8 %5325 to double
  %5327 = fmul fast double %5326, %5326
  %5328 = fmul fast double %5327, %5327
  %5329 = fadd fast double %5328, %5248
  store double %5329, ptr %4917, align 8, !tbaa !19
  %5330 = fadd fast double %5250, 1.000000e+00
  %5331 = add nuw nsw i32 %5249, 1
  br i1 %5241, label %5332, label %5379

5332:                                             ; preds = %5321
  %5333 = load i32, ptr %4, align 4, !tbaa !6
  %5334 = load i32, ptr %12, align 4, !tbaa !6
  %5335 = add nsw i32 %5334, -1
  %5336 = icmp slt i32 %5333, %5335
  br i1 %5336, label %5356, label %5337

5337:                                             ; preds = %5332
  %5338 = icmp eq i32 %5333, %5335
  br i1 %5338, label %5339, label %5372

5339:                                             ; preds = %5337
  store i32 0, ptr %4, align 4, !tbaa !6
  %5340 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5340, ptr %6, align 4, !tbaa !6
  br i1 %5246, label %5379, label %5341

5341:                                             ; preds = %5339, %5366
  %5342 = phi i64 [ %5370, %5366 ], [ 1, %5339 ]
  %5343 = getelementptr inbounds i32, ptr %4, i64 %5342
  %5344 = load i32, ptr %5343, align 4, !tbaa !6
  %5345 = getelementptr inbounds i32, ptr %12, i64 %5342
  %5346 = load i32, ptr %5345, align 4, !tbaa !6
  %5347 = add nsw i32 %5346, -1
  %5348 = icmp slt i32 %5344, %5347
  br i1 %5348, label %5349, label %5364

5349:                                             ; preds = %5341
  br i1 %5336, label %5356, label %5350

5350:                                             ; preds = %5349
  %5351 = getelementptr inbounds i32, ptr %7, i64 %5342
  %5352 = load i32, ptr %5351, align 4, !tbaa !6
  %5353 = getelementptr inbounds i32, ptr %6, i64 %5342
  %5354 = load i32, ptr %5353, align 4, !tbaa !6
  %5355 = add nsw i32 %5354, %5352
  store i32 %5355, ptr %5353, align 4, !tbaa !6
  br label %5374

5356:                                             ; preds = %5332, %5349
  %5357 = phi i32 [ %5344, %5349 ], [ %5333, %5332 ]
  %5358 = phi ptr [ %5343, %5349 ], [ %4, %5332 ]
  %5359 = phi i64 [ %5342, %5349 ], [ 0, %5332 ]
  %5360 = add nsw i32 %5357, 1
  store i32 %5360, ptr %5358, align 4, !tbaa !6
  %5361 = getelementptr inbounds i32, ptr %7, i64 %5359
  %5362 = load i32, ptr %5361, align 4, !tbaa !6
  %5363 = getelementptr inbounds i32, ptr %6, i64 %5359
  br label %5374

5364:                                             ; preds = %5341
  %5365 = icmp eq i32 %5344, %5347
  br i1 %5365, label %5366, label %5372

5366:                                             ; preds = %5364
  store i32 0, ptr %5343, align 4, !tbaa !6
  %5367 = getelementptr inbounds i32, ptr %8, i64 %5342
  %5368 = load i32, ptr %5367, align 4, !tbaa !6
  %5369 = getelementptr inbounds i32, ptr %6, i64 %5342
  store i32 %5368, ptr %5369, align 4, !tbaa !6
  %5370 = add nuw nsw i64 %5342, 1
  %5371 = icmp eq i64 %5370, %5244
  br i1 %5371, label %5379, label %5341, !llvm.loop !198

5372:                                             ; preds = %5337, %5364
  %5373 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5374:                                             ; preds = %5350, %5356
  %5375 = phi ptr [ %5363, %5356 ], [ %5343, %5350 ]
  %5376 = phi i32 [ %5362, %5356 ], [ 1, %5350 ]
  %5377 = load i32, ptr %5375, align 4, !tbaa !6
  %5378 = add nsw i32 %5377, %5376
  store i32 %5378, ptr %5375, align 4, !tbaa !6
  br label %5379

5379:                                             ; preds = %5366, %5374, %5339, %5321
  %5380 = icmp eq i32 %5331, %5
  br i1 %5380, label %5522, label %5247, !llvm.loop !199

5381:                                             ; preds = %5230, %5518
  %5382 = phi double [ 0.000000e+00, %5230 ], [ %5466, %5518 ]
  %5383 = phi i32 [ 0, %5230 ], [ %5467, %5518 ]
  %5384 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5231, label %5385, label %5454

5385:                                             ; preds = %5381, %5444
  %5386 = phi i32 [ %5453, %5444 ], [ 0, %5381 ]
  %5387 = phi i64 [ %5395, %5444 ], [ %5235, %5381 ]
  %5388 = phi i64 [ %5452, %5444 ], [ %5234, %5381 ]
  %5389 = phi i32 [ %5450, %5444 ], [ %5384, %5381 ]
  %5390 = sub i32 %5233, %5386
  %5391 = tail call i32 @llvm.smin.i32(i32 %5390, i32 0)
  %5392 = sub i32 %5390, %5391
  %5393 = zext i32 %5392 to i64
  %5394 = add nuw nsw i64 %5393, 1
  %5395 = add nsw i64 %5387, -1
  %5396 = icmp ult i32 %5392, 31
  br i1 %5396, label %5432, label %5397

5397:                                             ; preds = %5385
  %5398 = and i64 %5394, 8589934560
  %5399 = sub i64 %5388, %5398
  br label %5400

5400:                                             ; preds = %5400, %5397
  %5401 = phi i64 [ 0, %5397 ], [ %5424, %5400 ]
  %5402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5397 ], [ %5420, %5400 ]
  %5403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5397 ], [ %5421, %5400 ]
  %5404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5397 ], [ %5422, %5400 ]
  %5405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5397 ], [ %5423, %5400 ]
  %5406 = sub i64 %5388, %5401
  %5407 = getelementptr inbounds i32, ptr %11, i64 %5406
  %5408 = getelementptr inbounds i32, ptr %5407, i64 -7
  %5409 = load <8 x i32>, ptr %5408, align 4, !tbaa !6
  %5410 = shufflevector <8 x i32> %5409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5411 = getelementptr inbounds i32, ptr %5407, i64 -15
  %5412 = load <8 x i32>, ptr %5411, align 4, !tbaa !6
  %5413 = shufflevector <8 x i32> %5412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5414 = getelementptr inbounds i32, ptr %5407, i64 -23
  %5415 = load <8 x i32>, ptr %5414, align 4, !tbaa !6
  %5416 = shufflevector <8 x i32> %5415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5417 = getelementptr inbounds i32, ptr %5407, i64 -31
  %5418 = load <8 x i32>, ptr %5417, align 4, !tbaa !6
  %5419 = shufflevector <8 x i32> %5418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5420 = mul <8 x i32> %5410, %5402
  %5421 = mul <8 x i32> %5413, %5403
  %5422 = mul <8 x i32> %5416, %5404
  %5423 = mul <8 x i32> %5419, %5405
  %5424 = add nuw i64 %5401, 32
  %5425 = icmp eq i64 %5424, %5398
  br i1 %5425, label %5426, label %5400, !llvm.loop !200

5426:                                             ; preds = %5400
  %5427 = mul <8 x i32> %5421, %5420
  %5428 = mul <8 x i32> %5422, %5427
  %5429 = mul <8 x i32> %5423, %5428
  %5430 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5429)
  %5431 = icmp eq i64 %5394, %5398
  br i1 %5431, label %5444, label %5432

5432:                                             ; preds = %5385, %5426
  %5433 = phi i64 [ %5388, %5385 ], [ %5399, %5426 ]
  %5434 = phi i32 [ 1, %5385 ], [ %5430, %5426 ]
  br label %5435

5435:                                             ; preds = %5432, %5435
  %5436 = phi i64 [ %5441, %5435 ], [ %5433, %5432 ]
  %5437 = phi i32 [ %5440, %5435 ], [ %5434, %5432 ]
  %5438 = getelementptr inbounds i32, ptr %11, i64 %5436
  %5439 = load i32, ptr %5438, align 4, !tbaa !6
  %5440 = mul nsw i32 %5439, %5437
  %5441 = add nsw i64 %5436, -1
  %5442 = trunc i64 %5436 to i32
  %5443 = icmp sgt i32 %5442, 0
  br i1 %5443, label %5435, label %5444, !llvm.loop !201

5444:                                             ; preds = %5435, %5426
  %5445 = phi i32 [ %5430, %5426 ], [ %5440, %5435 ]
  %5446 = and i64 %5395, 4294967295
  %5447 = getelementptr inbounds i32, ptr %6, i64 %5446
  %5448 = load i32, ptr %5447, align 4, !tbaa !6
  %5449 = mul nsw i32 %5448, %5445
  %5450 = add nsw i32 %5449, %5389
  %5451 = icmp sgt i64 %5387, 2
  %5452 = add nsw i64 %5388, -1
  %5453 = add i32 %5386, 1
  br i1 %5451, label %5385, label %5454, !llvm.loop !202

5454:                                             ; preds = %5444, %5381
  %5455 = phi i32 [ %5384, %5381 ], [ %5450, %5444 ]
  %5456 = icmp slt i32 %5455, %5
  br i1 %5456, label %5459, label %5457

5457:                                             ; preds = %5454
  %5458 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

5459:                                             ; preds = %5454
  %5460 = sext i32 %5455 to i64
  %5461 = getelementptr inbounds i8, ptr %4915, i64 %5460
  %5462 = load i8, ptr %5461, align 1, !tbaa !12
  %5463 = uitofp i8 %5462 to double
  %5464 = fmul fast double %5463, %5463
  %5465 = fmul fast double %5464, %5464
  %5466 = fadd fast double %5465, %5382
  store double %5466, ptr %4917, align 8, !tbaa !19
  %5467 = add nuw nsw i32 %5383, 1
  br i1 %5232, label %5468, label %5518

5468:                                             ; preds = %5459
  %5469 = load i32, ptr %4, align 4, !tbaa !6
  %5470 = load i32, ptr %12, align 4, !tbaa !6
  %5471 = add nsw i32 %5470, -1
  %5472 = icmp slt i32 %5469, %5471
  br i1 %5472, label %5495, label %5473

5473:                                             ; preds = %5468
  %5474 = icmp eq i32 %5469, %5471
  br i1 %5474, label %5475, label %5511

5475:                                             ; preds = %5473
  store i32 0, ptr %4, align 4, !tbaa !6
  %5476 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5476, ptr %6, align 4, !tbaa !6
  br i1 %5237, label %5518, label %5477

5477:                                             ; preds = %5475, %5505
  %5478 = phi i64 [ %5509, %5505 ], [ 1, %5475 ]
  %5479 = getelementptr inbounds i32, ptr %4, i64 %5478
  %5480 = load i32, ptr %5479, align 4, !tbaa !6
  %5481 = getelementptr inbounds i32, ptr %12, i64 %5478
  %5482 = load i32, ptr %5481, align 4, !tbaa !6
  %5483 = add nsw i32 %5482, -1
  %5484 = icmp slt i32 %5480, %5483
  br i1 %5484, label %5485, label %5503

5485:                                             ; preds = %5477
  br i1 %5472, label %5495, label %5486

5486:                                             ; preds = %5485
  %5487 = shl i64 %5478, 32
  %5488 = add i64 %5487, -4294967296
  %5489 = ashr exact i64 %5488, 32
  %5490 = getelementptr inbounds i32, ptr %7, i64 %5489
  %5491 = load i32, ptr %5490, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %6, i64 %5478
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = add nsw i32 %5493, %5491
  store i32 %5494, ptr %5492, align 4, !tbaa !6
  br label %5513

5495:                                             ; preds = %5468, %5485
  %5496 = phi i32 [ %5480, %5485 ], [ %5469, %5468 ]
  %5497 = phi ptr [ %5479, %5485 ], [ %4, %5468 ]
  %5498 = phi i64 [ %5478, %5485 ], [ 0, %5468 ]
  %5499 = add nsw i32 %5496, 1
  store i32 %5499, ptr %5497, align 4, !tbaa !6
  %5500 = getelementptr inbounds i32, ptr %7, i64 %5498
  %5501 = load i32, ptr %5500, align 4, !tbaa !6
  %5502 = getelementptr inbounds i32, ptr %6, i64 %5498
  br label %5513

5503:                                             ; preds = %5477
  %5504 = icmp eq i32 %5480, %5483
  br i1 %5504, label %5505, label %5511

5505:                                             ; preds = %5503
  store i32 0, ptr %5479, align 4, !tbaa !6
  %5506 = getelementptr inbounds i32, ptr %8, i64 %5478
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = getelementptr inbounds i32, ptr %6, i64 %5478
  store i32 %5507, ptr %5508, align 4, !tbaa !6
  %5509 = add nuw nsw i64 %5478, 1
  %5510 = icmp eq i64 %5509, %5235
  br i1 %5510, label %5518, label %5477, !llvm.loop !203

5511:                                             ; preds = %5473, %5503
  %5512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5513:                                             ; preds = %5486, %5495
  %5514 = phi ptr [ %5502, %5495 ], [ %5479, %5486 ]
  %5515 = phi i32 [ %5501, %5495 ], [ 1, %5486 ]
  %5516 = load i32, ptr %5514, align 4, !tbaa !6
  %5517 = add nsw i32 %5516, %5515
  store i32 %5517, ptr %5514, align 4, !tbaa !6
  br label %5518

5518:                                             ; preds = %5505, %5513, %5475, %5459
  %5519 = icmp eq i32 %5467, %5
  br i1 %5519, label %5522, label %5381, !llvm.loop !204

5520:                                             ; preds = %4924
  %5521 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

5522:                                             ; preds = %5518, %5379, %5222, %5083, %4909, %4770, %4613, %4472, %4296, %4157, %4000, %3861, %3687, %3548, %3391, %3250, %3074, %2935, %2778, %2638, %2462, %2323, %2166, %2024, %1848, %1710, %1554, %1414, %1239, %1100, %943, %803, %627, %489, %333, %193, %5229, %5238, %4930, %4939, %4620, %4629, %4317, %4326, %4007, %4016, %3708, %3717, %3398, %3407, %3095, %3104, %2785, %2794, %2483, %2492, %2173, %2182, %1869, %1878, %1561, %1570, %1259, %1268, %950, %959, %648, %657, %340, %349, %38, %47, %4919, %5520, %4306, %4911, %3697, %4298, %3084, %3689, %2472, %3076, %1858, %2464, %1249, %1850, %637, %1241, %28, %629, %18
  %5523 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %629 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %637 ], [ 0.000000e+00, %1850 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %1858 ], [ 0.000000e+00, %3076 ], [ 0.000000e+00, %2472 ], [ 0.000000e+00, %3689 ], [ 0.000000e+00, %3084 ], [ 0.000000e+00, %4298 ], [ 0.000000e+00, %3697 ], [ 0.000000e+00, %4911 ], [ 0.000000e+00, %4306 ], [ 0.000000e+00, %5520 ], [ 0.000000e+00, %4919 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %349 ], [ 0.000000e+00, %340 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %959 ], [ 0.000000e+00, %950 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %1259 ], [ 0.000000e+00, %1570 ], [ 0.000000e+00, %1561 ], [ 0.000000e+00, %1878 ], [ 0.000000e+00, %1869 ], [ 0.000000e+00, %2182 ], [ 0.000000e+00, %2173 ], [ 0.000000e+00, %2492 ], [ 0.000000e+00, %2483 ], [ 0.000000e+00, %2794 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %3104 ], [ 0.000000e+00, %3095 ], [ 0.000000e+00, %3407 ], [ 0.000000e+00, %3398 ], [ 0.000000e+00, %3717 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %4016 ], [ 0.000000e+00, %4007 ], [ 0.000000e+00, %4326 ], [ 0.000000e+00, %4317 ], [ 0.000000e+00, %4629 ], [ 0.000000e+00, %4620 ], [ 0.000000e+00, %4939 ], [ 0.000000e+00, %4930 ], [ 0.000000e+00, %5238 ], [ 0.000000e+00, %5229 ], [ %144, %193 ], [ 0.000000e+00, %333 ], [ %440, %489 ], [ 0.000000e+00, %627 ], [ %754, %803 ], [ 0.000000e+00, %943 ], [ %1051, %1100 ], [ 0.000000e+00, %1239 ], [ %1365, %1414 ], [ 0.000000e+00, %1554 ], [ %1661, %1710 ], [ 0.000000e+00, %1848 ], [ %1975, %2024 ], [ 0.000000e+00, %2166 ], [ %2274, %2323 ], [ 0.000000e+00, %2462 ], [ %2589, %2638 ], [ 0.000000e+00, %2778 ], [ %2886, %2935 ], [ 0.000000e+00, %3074 ], [ %3201, %3250 ], [ 0.000000e+00, %3391 ], [ %3499, %3548 ], [ 0.000000e+00, %3687 ], [ %3812, %3861 ], [ 0.000000e+00, %4000 ], [ %4108, %4157 ], [ 0.000000e+00, %4296 ], [ %4423, %4472 ], [ 0.000000e+00, %4613 ], [ %4721, %4770 ], [ 0.000000e+00, %4909 ], [ %5034, %5083 ], [ 0.000000e+00, %5222 ], [ %5330, %5379 ], [ 0.000000e+00, %5518 ]
  %5524 = phi i32 [ %10, %18 ], [ 1, %629 ], [ 1, %28 ], [ 1, %1241 ], [ 1, %637 ], [ 1, %1850 ], [ 1, %1249 ], [ 1, %2464 ], [ 1, %1858 ], [ 1, %3076 ], [ 1, %2472 ], [ 1, %3689 ], [ 1, %3084 ], [ 1, %4298 ], [ 1, %3697 ], [ 1, %4911 ], [ 1, %4306 ], [ 1, %5520 ], [ 1, %4919 ], [ 1, %47 ], [ 1, %38 ], [ 1, %349 ], [ 1, %340 ], [ 1, %657 ], [ 1, %648 ], [ 1, %959 ], [ 1, %950 ], [ 1, %1268 ], [ 1, %1259 ], [ 1, %1570 ], [ 1, %1561 ], [ 1, %1878 ], [ 1, %1869 ], [ 1, %2182 ], [ 1, %2173 ], [ 1, %2492 ], [ 1, %2483 ], [ 1, %2794 ], [ 1, %2785 ], [ 1, %3104 ], [ 1, %3095 ], [ 1, %3407 ], [ 1, %3398 ], [ 1, %3717 ], [ 1, %3708 ], [ 1, %4016 ], [ 1, %4007 ], [ 1, %4326 ], [ 1, %4317 ], [ 1, %4629 ], [ 1, %4620 ], [ 1, %4939 ], [ 1, %4930 ], [ 1, %5238 ], [ 1, %5229 ], [ %54, %193 ], [ %45, %333 ], [ %356, %489 ], [ %347, %627 ], [ %664, %803 ], [ %655, %943 ], [ %966, %1100 ], [ %957, %1239 ], [ %1275, %1414 ], [ %1266, %1554 ], [ %1577, %1710 ], [ %1568, %1848 ], [ %1885, %2024 ], [ %1876, %2166 ], [ %2189, %2323 ], [ %2180, %2462 ], [ %2499, %2638 ], [ %2490, %2778 ], [ %2801, %2935 ], [ %2792, %3074 ], [ %3111, %3250 ], [ %3102, %3391 ], [ %3414, %3548 ], [ %3405, %3687 ], [ %3724, %3861 ], [ %3715, %4000 ], [ %4023, %4157 ], [ %4014, %4296 ], [ %4333, %4472 ], [ %4324, %4613 ], [ %4636, %4770 ], [ %4627, %4909 ], [ %4946, %5083 ], [ %4937, %5222 ], [ %5245, %5379 ], [ %5236, %5518 ]
  %5525 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5524, ptr noundef nonnull @.str.5) #3
  %5526 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5523, ptr noundef nonnull @.str.6) #3
  br label %5527

5527:                                             ; preds = %5076, %5161, %5215, %5372, %5457, %5511, %4465, %4550, %4606, %4763, %4848, %4902, %3854, %3939, %3993, %4150, %4235, %4289, %3243, %3328, %3384, %3541, %3626, %3680, %2631, %2715, %2771, %2928, %3012, %3067, %2017, %2102, %2159, %2316, %2401, %2455, %1407, %1491, %1547, %1703, %1787, %1841, %796, %880, %936, %1093, %1177, %1232, %186, %270, %326, %482, %566, %620, %5522
  %5528 = phi i32 [ 0, %5522 ], [ -1, %620 ], [ -1, %566 ], [ -1, %482 ], [ -1, %326 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1232 ], [ -1, %1177 ], [ -1, %1093 ], [ -1, %936 ], [ -1, %880 ], [ -1, %796 ], [ -1, %1841 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1547 ], [ -1, %1491 ], [ -1, %1407 ], [ -1, %2455 ], [ -1, %2401 ], [ -1, %2316 ], [ -1, %2159 ], [ -1, %2102 ], [ -1, %2017 ], [ -1, %3067 ], [ -1, %3012 ], [ -1, %2928 ], [ -1, %2771 ], [ -1, %2715 ], [ -1, %2631 ], [ -1, %3680 ], [ -1, %3626 ], [ -1, %3541 ], [ -1, %3384 ], [ -1, %3328 ], [ -1, %3243 ], [ -1, %4289 ], [ -1, %4235 ], [ -1, %4150 ], [ -1, %3993 ], [ -1, %3939 ], [ -1, %3854 ], [ -1, %4902 ], [ -1, %4848 ], [ -1, %4763 ], [ -1, %4606 ], [ -1, %4550 ], [ -1, %4465 ], [ -1, %5511 ], [ -1, %5457 ], [ -1, %5372 ], [ -1, %5215 ], [ -1, %5161 ], [ -1, %5076 ]
  ret i32 %5528
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5545 [
    i32 101, label %22
    i32 102, label %637
    i32 103, label %1247
    i32 104, label %1864
    i32 105, label %2481
    i32 106, label %3091
    i32 107, label %3704
    i32 108, label %4313
    i32 109, label %4928
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !6
  %30 = mul i32 %29, %29
  %31 = mul i32 %30, %30
  %32 = trunc i32 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5545

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5545

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %5545

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !205

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !206

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !207

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i32, ptr %24, i64 %132
  %136 = load i32, ptr %135, align 4, !tbaa !6
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i32 %136, 255
  %140 = sitofp i32 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %138
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !208

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5545, label %57, !llvm.loop !209

197:                                              ; preds = %40, %337
  %198 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !210

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !211

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !212

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds i32, ptr %24, i64 %275
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = uitofp i8 %278 to double
  %280 = and i32 %277, 255
  %281 = sitofp i32 %280 to double
  %282 = fmul fast double %281, %281
  %283 = fmul fast double %282, %282
  %284 = fadd fast double %283, %279
  %285 = fptoui double %284 to i8
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %198, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %274
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !213

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %274
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %5545, label %197, !llvm.loop !214

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %5545

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %5545

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !215

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !216

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !217

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i32, ptr %24, i64 %437
  %439 = load i32, ptr %438, align 4, !tbaa !6
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i32 %439, %439
  %442 = mul i32 %441, %441
  %443 = trunc i32 %442 to i8
  %444 = add i8 %440, %443
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !218

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %5545, label %362, !llvm.loop !219

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !220

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !221

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !222

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

573:                                              ; preds = %568
  %574 = sext i32 %569 to i64
  %575 = getelementptr inbounds i32, ptr %24, i64 %574
  %576 = load i32, ptr %575, align 4, !tbaa !6
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i32 %576, %576
  %579 = mul i32 %578, %578
  %580 = trunc i32 %579 to i8
  %581 = add i8 %577, %580
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !223

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %5545, label %496, !llvm.loop !224

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 333, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %647

643:                                              ; preds = %637
  %644 = load i32, ptr %639, align 4, !tbaa !6
  %645 = mul i32 %644, %644
  %646 = mul i32 %645, %645
  store i32 %646, ptr %641, align 4, !tbaa !6
  br label %5545

647:                                              ; preds = %637
  switch i32 %1, label %1245 [
    i32 1, label %648
    i32 0, label %951
  ]

648:                                              ; preds = %647
  %649 = getelementptr inbounds i32, ptr %3, i64 %19
  %650 = load i32, ptr %649, align 4, !tbaa !6
  %651 = icmp eq i32 %650, 0
  %652 = icmp sgt i32 %5, 0
  br i1 %651, label %662, label %653

653:                                              ; preds = %648
  br i1 %652, label %654, label %5545

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %810

662:                                              ; preds = %648
  br i1 %652, label %663, label %5545

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %671

671:                                              ; preds = %663, %808
  %672 = phi i32 [ 0, %663 ], [ %760, %808 ]
  %673 = phi double [ 0.000000e+00, %663 ], [ %759, %808 ]
  %674 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %675, label %744

675:                                              ; preds = %671, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %671 ]
  %677 = phi i64 [ %685, %734 ], [ %668, %671 ]
  %678 = phi i64 [ %742, %734 ], [ %667, %671 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %671 ]
  %680 = sub i32 %666, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !225

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !6
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !226

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !227

744:                                              ; preds = %734, %671
  %745 = phi i32 [ %674, %671 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !19
  %749 = getelementptr inbounds i32, ptr %639, i64 %746
  %750 = load i32, ptr %749, align 4, !tbaa !6
  %751 = load i32, ptr %641, align 4, !tbaa !6
  %752 = sitofp i32 %751 to double
  %753 = sitofp i32 %750 to double
  %754 = fmul fast double %748, %753
  %755 = fmul fast double %754, %754
  %756 = fmul fast double %755, %755
  %757 = fadd fast double %756, %752
  %758 = fptosi double %757 to i32
  store i32 %758, ptr %641, align 4, !tbaa !6
  %759 = fadd fast double %748, %673
  %760 = add nuw nsw i32 %672, 1
  br i1 %665, label %761, label %808

761:                                              ; preds = %744
  %762 = load i32, ptr %4, align 4, !tbaa !6
  %763 = load i32, ptr %12, align 4, !tbaa !6
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %762, %764
  br i1 %765, label %785, label %766

766:                                              ; preds = %761
  %767 = icmp eq i32 %762, %764
  br i1 %767, label %768, label %801

768:                                              ; preds = %766
  store i32 0, ptr %4, align 4, !tbaa !6
  %769 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %769, ptr %6, align 4, !tbaa !6
  br i1 %670, label %808, label %770

770:                                              ; preds = %768, %795
  %771 = phi i64 [ %799, %795 ], [ 1, %768 ]
  %772 = getelementptr inbounds i32, ptr %4, i64 %771
  %773 = load i32, ptr %772, align 4, !tbaa !6
  %774 = getelementptr inbounds i32, ptr %12, i64 %771
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = add nsw i32 %775, -1
  %777 = icmp slt i32 %773, %776
  br i1 %777, label %778, label %793

778:                                              ; preds = %770
  br i1 %765, label %785, label %779

779:                                              ; preds = %778
  %780 = getelementptr inbounds i32, ptr %7, i64 %771
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = getelementptr inbounds i32, ptr %6, i64 %771
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = add nsw i32 %783, %781
  store i32 %784, ptr %782, align 4, !tbaa !6
  br label %803

785:                                              ; preds = %761, %778
  %786 = phi i32 [ %773, %778 ], [ %762, %761 ]
  %787 = phi ptr [ %772, %778 ], [ %4, %761 ]
  %788 = phi i64 [ %771, %778 ], [ 0, %761 ]
  %789 = add nsw i32 %786, 1
  store i32 %789, ptr %787, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %7, i64 %788
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %788
  br label %803

793:                                              ; preds = %770
  %794 = icmp eq i32 %773, %776
  br i1 %794, label %795, label %801

795:                                              ; preds = %793
  store i32 0, ptr %772, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %8, i64 %771
  %797 = load i32, ptr %796, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %6, i64 %771
  store i32 %797, ptr %798, align 4, !tbaa !6
  %799 = add nuw nsw i64 %771, 1
  %800 = icmp eq i64 %799, %668
  br i1 %800, label %808, label %770, !llvm.loop !228

801:                                              ; preds = %766, %793
  %802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

803:                                              ; preds = %779, %785
  %804 = phi ptr [ %792, %785 ], [ %772, %779 ]
  %805 = phi i32 [ %791, %785 ], [ 1, %779 ]
  %806 = load i32, ptr %804, align 4, !tbaa !6
  %807 = add nsw i32 %806, %805
  store i32 %807, ptr %804, align 4, !tbaa !6
  br label %808

808:                                              ; preds = %795, %803, %768, %744
  %809 = icmp eq i32 %760, %5
  br i1 %809, label %5545, label %671, !llvm.loop !229

810:                                              ; preds = %654, %949
  %811 = phi i32 [ 0, %654 ], [ %898, %949 ]
  %812 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %655, label %813, label %882

813:                                              ; preds = %810, %872
  %814 = phi i32 [ %881, %872 ], [ 0, %810 ]
  %815 = phi i64 [ %823, %872 ], [ %659, %810 ]
  %816 = phi i64 [ %880, %872 ], [ %658, %810 ]
  %817 = phi i32 [ %878, %872 ], [ %812, %810 ]
  %818 = sub i32 %657, %814
  %819 = tail call i32 @llvm.smin.i32(i32 %818, i32 0)
  %820 = sub i32 %818, %819
  %821 = zext i32 %820 to i64
  %822 = add nuw nsw i64 %821, 1
  %823 = add nsw i64 %815, -1
  %824 = icmp ult i32 %820, 31
  br i1 %824, label %860, label %825

825:                                              ; preds = %813
  %826 = and i64 %822, 8589934560
  %827 = sub i64 %816, %826
  br label %828

828:                                              ; preds = %828, %825
  %829 = phi i64 [ 0, %825 ], [ %852, %828 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %848, %828 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %849, %828 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %850, %828 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %851, %828 ]
  %834 = sub i64 %816, %829
  %835 = getelementptr inbounds i32, ptr %11, i64 %834
  %836 = getelementptr inbounds i32, ptr %835, i64 -7
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !6
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %835, i64 -15
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !6
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %835, i64 -23
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !6
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %835, i64 -31
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = mul <8 x i32> %838, %830
  %849 = mul <8 x i32> %841, %831
  %850 = mul <8 x i32> %844, %832
  %851 = mul <8 x i32> %847, %833
  %852 = add nuw i64 %829, 32
  %853 = icmp eq i64 %852, %826
  br i1 %853, label %854, label %828, !llvm.loop !230

854:                                              ; preds = %828
  %855 = mul <8 x i32> %849, %848
  %856 = mul <8 x i32> %850, %855
  %857 = mul <8 x i32> %851, %856
  %858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %857)
  %859 = icmp eq i64 %822, %826
  br i1 %859, label %872, label %860

860:                                              ; preds = %813, %854
  %861 = phi i64 [ %816, %813 ], [ %827, %854 ]
  %862 = phi i32 [ 1, %813 ], [ %858, %854 ]
  br label %863

863:                                              ; preds = %860, %863
  %864 = phi i64 [ %869, %863 ], [ %861, %860 ]
  %865 = phi i32 [ %868, %863 ], [ %862, %860 ]
  %866 = getelementptr inbounds i32, ptr %11, i64 %864
  %867 = load i32, ptr %866, align 4, !tbaa !6
  %868 = mul nsw i32 %867, %865
  %869 = add nsw i64 %864, -1
  %870 = trunc i64 %864 to i32
  %871 = icmp sgt i32 %870, 0
  br i1 %871, label %863, label %872, !llvm.loop !231

872:                                              ; preds = %863, %854
  %873 = phi i32 [ %858, %854 ], [ %868, %863 ]
  %874 = and i64 %823, 4294967295
  %875 = getelementptr inbounds i32, ptr %6, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !6
  %877 = mul nsw i32 %876, %873
  %878 = add nsw i32 %877, %817
  %879 = icmp sgt i64 %815, 2
  %880 = add nsw i64 %816, -1
  %881 = add i32 %814, 1
  br i1 %879, label %813, label %882, !llvm.loop !232

882:                                              ; preds = %872, %810
  %883 = phi i32 [ %812, %810 ], [ %878, %872 ]
  %884 = icmp slt i32 %883, %5
  br i1 %884, label %887, label %885

885:                                              ; preds = %882
  %886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

887:                                              ; preds = %882
  %888 = sext i32 %883 to i64
  %889 = getelementptr inbounds i32, ptr %639, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !6
  %891 = load i32, ptr %641, align 4, !tbaa !6
  %892 = sitofp i32 %891 to double
  %893 = sitofp i32 %890 to double
  %894 = fmul fast double %893, %893
  %895 = fmul fast double %894, %894
  %896 = fadd fast double %895, %892
  %897 = fptosi double %896 to i32
  store i32 %897, ptr %641, align 4, !tbaa !6
  %898 = add nuw nsw i32 %811, 1
  br i1 %656, label %899, label %949

899:                                              ; preds = %887
  %900 = load i32, ptr %4, align 4, !tbaa !6
  %901 = load i32, ptr %12, align 4, !tbaa !6
  %902 = add nsw i32 %901, -1
  %903 = icmp slt i32 %900, %902
  br i1 %903, label %926, label %904

904:                                              ; preds = %899
  %905 = icmp eq i32 %900, %902
  br i1 %905, label %906, label %942

906:                                              ; preds = %904
  store i32 0, ptr %4, align 4, !tbaa !6
  %907 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %907, ptr %6, align 4, !tbaa !6
  br i1 %661, label %949, label %908

908:                                              ; preds = %906, %936
  %909 = phi i64 [ %940, %936 ], [ 1, %906 ]
  %910 = getelementptr inbounds i32, ptr %4, i64 %909
  %911 = load i32, ptr %910, align 4, !tbaa !6
  %912 = getelementptr inbounds i32, ptr %12, i64 %909
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %911, %914
  br i1 %915, label %916, label %934

916:                                              ; preds = %908
  br i1 %903, label %926, label %917

917:                                              ; preds = %916
  %918 = shl i64 %909, 32
  %919 = add i64 %918, -4294967296
  %920 = ashr exact i64 %919, 32
  %921 = getelementptr inbounds i32, ptr %7, i64 %920
  %922 = load i32, ptr %921, align 4, !tbaa !6
  %923 = getelementptr inbounds i32, ptr %6, i64 %909
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = add nsw i32 %924, %922
  store i32 %925, ptr %923, align 4, !tbaa !6
  br label %944

926:                                              ; preds = %899, %916
  %927 = phi i32 [ %911, %916 ], [ %900, %899 ]
  %928 = phi ptr [ %910, %916 ], [ %4, %899 ]
  %929 = phi i64 [ %909, %916 ], [ 0, %899 ]
  %930 = add nsw i32 %927, 1
  store i32 %930, ptr %928, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %7, i64 %929
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %6, i64 %929
  br label %944

934:                                              ; preds = %908
  %935 = icmp eq i32 %911, %914
  br i1 %935, label %936, label %942

936:                                              ; preds = %934
  store i32 0, ptr %910, align 4, !tbaa !6
  %937 = getelementptr inbounds i32, ptr %8, i64 %909
  %938 = load i32, ptr %937, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %6, i64 %909
  store i32 %938, ptr %939, align 4, !tbaa !6
  %940 = add nuw nsw i64 %909, 1
  %941 = icmp eq i64 %940, %659
  br i1 %941, label %949, label %908, !llvm.loop !233

942:                                              ; preds = %904, %934
  %943 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

944:                                              ; preds = %917, %926
  %945 = phi ptr [ %933, %926 ], [ %910, %917 ]
  %946 = phi i32 [ %932, %926 ], [ 1, %917 ]
  %947 = load i32, ptr %945, align 4, !tbaa !6
  %948 = add nsw i32 %947, %946
  store i32 %948, ptr %945, align 4, !tbaa !6
  br label %949

949:                                              ; preds = %936, %944, %906, %887
  %950 = icmp eq i32 %898, %5
  br i1 %950, label %5545, label %810, !llvm.loop !234

951:                                              ; preds = %647
  %952 = getelementptr inbounds i32, ptr %3, i64 %19
  %953 = load i32, ptr %952, align 4, !tbaa !6
  %954 = icmp eq i32 %953, 0
  %955 = icmp sgt i32 %5, 0
  br i1 %954, label %965, label %956

956:                                              ; preds = %951
  br i1 %955, label %957, label %5545

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %1107

965:                                              ; preds = %951
  br i1 %955, label %966, label %5545

966:                                              ; preds = %965
  %967 = icmp sgt i32 %13, 1
  %968 = icmp sgt i32 %13, 0
  %969 = add i32 %13, -2
  %970 = zext i32 %969 to i64
  %971 = zext i32 %13 to i64
  %972 = add nuw i32 %5, 1
  %973 = icmp eq i32 %13, 1
  br label %974

974:                                              ; preds = %966, %1105
  %975 = phi i32 [ 0, %966 ], [ %1057, %1105 ]
  %976 = phi double [ 0.000000e+00, %966 ], [ %1056, %1105 ]
  %977 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %967, label %978, label %1047

978:                                              ; preds = %974, %1037
  %979 = phi i32 [ %1046, %1037 ], [ 0, %974 ]
  %980 = phi i64 [ %988, %1037 ], [ %971, %974 ]
  %981 = phi i64 [ %1045, %1037 ], [ %970, %974 ]
  %982 = phi i32 [ %1043, %1037 ], [ %977, %974 ]
  %983 = sub i32 %969, %979
  %984 = tail call i32 @llvm.smin.i32(i32 %983, i32 0)
  %985 = sub i32 %983, %984
  %986 = zext i32 %985 to i64
  %987 = add nuw nsw i64 %986, 1
  %988 = add nsw i64 %980, -1
  %989 = icmp ult i32 %985, 31
  br i1 %989, label %1025, label %990

990:                                              ; preds = %978
  %991 = and i64 %987, 8589934560
  %992 = sub i64 %981, %991
  br label %993

993:                                              ; preds = %993, %990
  %994 = phi i64 [ 0, %990 ], [ %1017, %993 ]
  %995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1013, %993 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1014, %993 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1015, %993 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1016, %993 ]
  %999 = sub i64 %981, %994
  %1000 = getelementptr inbounds i32, ptr %9, i64 %999
  %1001 = getelementptr inbounds i32, ptr %1000, i64 -7
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = getelementptr inbounds i32, ptr %1000, i64 -15
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = getelementptr inbounds i32, ptr %1000, i64 -23
  %1008 = load <8 x i32>, ptr %1007, align 4, !tbaa !6
  %1009 = shufflevector <8 x i32> %1008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1010 = getelementptr inbounds i32, ptr %1000, i64 -31
  %1011 = load <8 x i32>, ptr %1010, align 4, !tbaa !6
  %1012 = shufflevector <8 x i32> %1011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1013 = mul <8 x i32> %1003, %995
  %1014 = mul <8 x i32> %1006, %996
  %1015 = mul <8 x i32> %1009, %997
  %1016 = mul <8 x i32> %1012, %998
  %1017 = add nuw i64 %994, 32
  %1018 = icmp eq i64 %1017, %991
  br i1 %1018, label %1019, label %993, !llvm.loop !235

1019:                                             ; preds = %993
  %1020 = mul <8 x i32> %1014, %1013
  %1021 = mul <8 x i32> %1015, %1020
  %1022 = mul <8 x i32> %1016, %1021
  %1023 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1022)
  %1024 = icmp eq i64 %987, %991
  br i1 %1024, label %1037, label %1025

1025:                                             ; preds = %978, %1019
  %1026 = phi i64 [ %981, %978 ], [ %992, %1019 ]
  %1027 = phi i32 [ 1, %978 ], [ %1023, %1019 ]
  br label %1028

1028:                                             ; preds = %1025, %1028
  %1029 = phi i64 [ %1034, %1028 ], [ %1026, %1025 ]
  %1030 = phi i32 [ %1033, %1028 ], [ %1027, %1025 ]
  %1031 = getelementptr inbounds i32, ptr %9, i64 %1029
  %1032 = load i32, ptr %1031, align 4, !tbaa !6
  %1033 = mul nsw i32 %1032, %1030
  %1034 = add nsw i64 %1029, -1
  %1035 = trunc i64 %1029 to i32
  %1036 = icmp sgt i32 %1035, 0
  br i1 %1036, label %1028, label %1037, !llvm.loop !236

1037:                                             ; preds = %1028, %1019
  %1038 = phi i32 [ %1023, %1019 ], [ %1033, %1028 ]
  %1039 = and i64 %988, 4294967295
  %1040 = getelementptr inbounds i32, ptr %6, i64 %1039
  %1041 = load i32, ptr %1040, align 4, !tbaa !6
  %1042 = mul nsw i32 %1041, %1038
  %1043 = add nsw i32 %1042, %982
  %1044 = icmp sgt i64 %980, 2
  %1045 = add nsw i64 %981, -1
  %1046 = add i32 %979, 1
  br i1 %1044, label %978, label %1047, !llvm.loop !237

1047:                                             ; preds = %1037, %974
  %1048 = phi i32 [ %977, %974 ], [ %1043, %1037 ]
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds i32, ptr %639, i64 %1049
  %1051 = load i32, ptr %1050, align 4, !tbaa !6
  %1052 = load i32, ptr %641, align 4, !tbaa !6
  %1053 = mul i32 %1051, %1051
  %1054 = mul i32 %1053, %1053
  %1055 = add nsw i32 %1054, %1052
  store i32 %1055, ptr %641, align 4, !tbaa !6
  %1056 = fadd fast double %976, 1.000000e+00
  %1057 = add nuw nsw i32 %975, 1
  br i1 %968, label %1058, label %1105

1058:                                             ; preds = %1047
  %1059 = load i32, ptr %4, align 4, !tbaa !6
  %1060 = load i32, ptr %12, align 4, !tbaa !6
  %1061 = add nsw i32 %1060, -1
  %1062 = icmp slt i32 %1059, %1061
  br i1 %1062, label %1082, label %1063

1063:                                             ; preds = %1058
  %1064 = icmp eq i32 %1059, %1061
  br i1 %1064, label %1065, label %1098

1065:                                             ; preds = %1063
  store i32 0, ptr %4, align 4, !tbaa !6
  %1066 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1066, ptr %6, align 4, !tbaa !6
  br i1 %973, label %1105, label %1067

1067:                                             ; preds = %1065, %1092
  %1068 = phi i64 [ %1096, %1092 ], [ 1, %1065 ]
  %1069 = getelementptr inbounds i32, ptr %4, i64 %1068
  %1070 = load i32, ptr %1069, align 4, !tbaa !6
  %1071 = getelementptr inbounds i32, ptr %12, i64 %1068
  %1072 = load i32, ptr %1071, align 4, !tbaa !6
  %1073 = add nsw i32 %1072, -1
  %1074 = icmp slt i32 %1070, %1073
  br i1 %1074, label %1075, label %1090

1075:                                             ; preds = %1067
  br i1 %1062, label %1082, label %1076

1076:                                             ; preds = %1075
  %1077 = getelementptr inbounds i32, ptr %7, i64 %1068
  %1078 = load i32, ptr %1077, align 4, !tbaa !6
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1068
  %1080 = load i32, ptr %1079, align 4, !tbaa !6
  %1081 = add nsw i32 %1080, %1078
  store i32 %1081, ptr %1079, align 4, !tbaa !6
  br label %1100

1082:                                             ; preds = %1058, %1075
  %1083 = phi i32 [ %1070, %1075 ], [ %1059, %1058 ]
  %1084 = phi ptr [ %1069, %1075 ], [ %4, %1058 ]
  %1085 = phi i64 [ %1068, %1075 ], [ 0, %1058 ]
  %1086 = add nsw i32 %1083, 1
  store i32 %1086, ptr %1084, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %7, i64 %1085
  %1088 = load i32, ptr %1087, align 4, !tbaa !6
  %1089 = getelementptr inbounds i32, ptr %6, i64 %1085
  br label %1100

1090:                                             ; preds = %1067
  %1091 = icmp eq i32 %1070, %1073
  br i1 %1091, label %1092, label %1098

1092:                                             ; preds = %1090
  store i32 0, ptr %1069, align 4, !tbaa !6
  %1093 = getelementptr inbounds i32, ptr %8, i64 %1068
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1068
  store i32 %1094, ptr %1095, align 4, !tbaa !6
  %1096 = add nuw nsw i64 %1068, 1
  %1097 = icmp eq i64 %1096, %971
  br i1 %1097, label %1105, label %1067, !llvm.loop !238

1098:                                             ; preds = %1063, %1090
  %1099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1100:                                             ; preds = %1076, %1082
  %1101 = phi ptr [ %1089, %1082 ], [ %1069, %1076 ]
  %1102 = phi i32 [ %1088, %1082 ], [ 1, %1076 ]
  %1103 = load i32, ptr %1101, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, %1102
  store i32 %1104, ptr %1101, align 4, !tbaa !6
  br label %1105

1105:                                             ; preds = %1092, %1100, %1065, %1047
  %1106 = icmp eq i32 %1057, %5
  br i1 %1106, label %5545, label %974, !llvm.loop !239

1107:                                             ; preds = %957, %1243
  %1108 = phi i32 [ 0, %957 ], [ %1192, %1243 ]
  %1109 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %958, label %1110, label %1179

1110:                                             ; preds = %1107, %1169
  %1111 = phi i32 [ %1178, %1169 ], [ 0, %1107 ]
  %1112 = phi i64 [ %1120, %1169 ], [ %962, %1107 ]
  %1113 = phi i64 [ %1177, %1169 ], [ %961, %1107 ]
  %1114 = phi i32 [ %1175, %1169 ], [ %1109, %1107 ]
  %1115 = sub i32 %960, %1111
  %1116 = tail call i32 @llvm.smin.i32(i32 %1115, i32 0)
  %1117 = sub i32 %1115, %1116
  %1118 = zext i32 %1117 to i64
  %1119 = add nuw nsw i64 %1118, 1
  %1120 = add nsw i64 %1112, -1
  %1121 = icmp ult i32 %1117, 31
  br i1 %1121, label %1157, label %1122

1122:                                             ; preds = %1110
  %1123 = and i64 %1119, 8589934560
  %1124 = sub i64 %1113, %1123
  br label %1125

1125:                                             ; preds = %1125, %1122
  %1126 = phi i64 [ 0, %1122 ], [ %1149, %1125 ]
  %1127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1145, %1125 ]
  %1128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1146, %1125 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1147, %1125 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1148, %1125 ]
  %1131 = sub i64 %1113, %1126
  %1132 = getelementptr inbounds i32, ptr %11, i64 %1131
  %1133 = getelementptr inbounds i32, ptr %1132, i64 -7
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !6
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = getelementptr inbounds i32, ptr %1132, i64 -15
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1132, i64 -23
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1132, i64 -31
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = mul <8 x i32> %1135, %1127
  %1146 = mul <8 x i32> %1138, %1128
  %1147 = mul <8 x i32> %1141, %1129
  %1148 = mul <8 x i32> %1144, %1130
  %1149 = add nuw i64 %1126, 32
  %1150 = icmp eq i64 %1149, %1123
  br i1 %1150, label %1151, label %1125, !llvm.loop !240

1151:                                             ; preds = %1125
  %1152 = mul <8 x i32> %1146, %1145
  %1153 = mul <8 x i32> %1147, %1152
  %1154 = mul <8 x i32> %1148, %1153
  %1155 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1154)
  %1156 = icmp eq i64 %1119, %1123
  br i1 %1156, label %1169, label %1157

1157:                                             ; preds = %1110, %1151
  %1158 = phi i64 [ %1113, %1110 ], [ %1124, %1151 ]
  %1159 = phi i32 [ 1, %1110 ], [ %1155, %1151 ]
  br label %1160

1160:                                             ; preds = %1157, %1160
  %1161 = phi i64 [ %1166, %1160 ], [ %1158, %1157 ]
  %1162 = phi i32 [ %1165, %1160 ], [ %1159, %1157 ]
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1161
  %1164 = load i32, ptr %1163, align 4, !tbaa !6
  %1165 = mul nsw i32 %1164, %1162
  %1166 = add nsw i64 %1161, -1
  %1167 = trunc i64 %1161 to i32
  %1168 = icmp sgt i32 %1167, 0
  br i1 %1168, label %1160, label %1169, !llvm.loop !241

1169:                                             ; preds = %1160, %1151
  %1170 = phi i32 [ %1155, %1151 ], [ %1165, %1160 ]
  %1171 = and i64 %1120, 4294967295
  %1172 = getelementptr inbounds i32, ptr %6, i64 %1171
  %1173 = load i32, ptr %1172, align 4, !tbaa !6
  %1174 = mul nsw i32 %1173, %1170
  %1175 = add nsw i32 %1174, %1114
  %1176 = icmp sgt i64 %1112, 2
  %1177 = add nsw i64 %1113, -1
  %1178 = add i32 %1111, 1
  br i1 %1176, label %1110, label %1179, !llvm.loop !242

1179:                                             ; preds = %1169, %1107
  %1180 = phi i32 [ %1109, %1107 ], [ %1175, %1169 ]
  %1181 = icmp slt i32 %1180, %5
  br i1 %1181, label %1184, label %1182

1182:                                             ; preds = %1179
  %1183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1184:                                             ; preds = %1179
  %1185 = sext i32 %1180 to i64
  %1186 = getelementptr inbounds i32, ptr %639, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !6
  %1188 = load i32, ptr %641, align 4, !tbaa !6
  %1189 = mul i32 %1187, %1187
  %1190 = mul i32 %1189, %1189
  %1191 = add nsw i32 %1190, %1188
  store i32 %1191, ptr %641, align 4, !tbaa !6
  %1192 = add nuw nsw i32 %1108, 1
  br i1 %959, label %1193, label %1243

1193:                                             ; preds = %1184
  %1194 = load i32, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %12, align 4, !tbaa !6
  %1196 = add nsw i32 %1195, -1
  %1197 = icmp slt i32 %1194, %1196
  br i1 %1197, label %1220, label %1198

1198:                                             ; preds = %1193
  %1199 = icmp eq i32 %1194, %1196
  br i1 %1199, label %1200, label %1236

1200:                                             ; preds = %1198
  store i32 0, ptr %4, align 4, !tbaa !6
  %1201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1201, ptr %6, align 4, !tbaa !6
  br i1 %964, label %1243, label %1202

1202:                                             ; preds = %1200, %1230
  %1203 = phi i64 [ %1234, %1230 ], [ 1, %1200 ]
  %1204 = getelementptr inbounds i32, ptr %4, i64 %1203
  %1205 = load i32, ptr %1204, align 4, !tbaa !6
  %1206 = getelementptr inbounds i32, ptr %12, i64 %1203
  %1207 = load i32, ptr %1206, align 4, !tbaa !6
  %1208 = add nsw i32 %1207, -1
  %1209 = icmp slt i32 %1205, %1208
  br i1 %1209, label %1210, label %1228

1210:                                             ; preds = %1202
  br i1 %1197, label %1220, label %1211

1211:                                             ; preds = %1210
  %1212 = shl i64 %1203, 32
  %1213 = add i64 %1212, -4294967296
  %1214 = ashr exact i64 %1213, 32
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1214
  %1216 = load i32, ptr %1215, align 4, !tbaa !6
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1203
  %1218 = load i32, ptr %1217, align 4, !tbaa !6
  %1219 = add nsw i32 %1218, %1216
  store i32 %1219, ptr %1217, align 4, !tbaa !6
  br label %1238

1220:                                             ; preds = %1193, %1210
  %1221 = phi i32 [ %1205, %1210 ], [ %1194, %1193 ]
  %1222 = phi ptr [ %1204, %1210 ], [ %4, %1193 ]
  %1223 = phi i64 [ %1203, %1210 ], [ 0, %1193 ]
  %1224 = add nsw i32 %1221, 1
  store i32 %1224, ptr %1222, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %7, i64 %1223
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1223
  br label %1238

1228:                                             ; preds = %1202
  %1229 = icmp eq i32 %1205, %1208
  br i1 %1229, label %1230, label %1236

1230:                                             ; preds = %1228
  store i32 0, ptr %1204, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %8, i64 %1203
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = getelementptr inbounds i32, ptr %6, i64 %1203
  store i32 %1232, ptr %1233, align 4, !tbaa !6
  %1234 = add nuw nsw i64 %1203, 1
  %1235 = icmp eq i64 %1234, %962
  br i1 %1235, label %1243, label %1202, !llvm.loop !243

1236:                                             ; preds = %1198, %1228
  %1237 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1238:                                             ; preds = %1211, %1220
  %1239 = phi ptr [ %1227, %1220 ], [ %1204, %1211 ]
  %1240 = phi i32 [ %1226, %1220 ], [ 1, %1211 ]
  %1241 = load i32, ptr %1239, align 4, !tbaa !6
  %1242 = add nsw i32 %1241, %1240
  store i32 %1242, ptr %1239, align 4, !tbaa !6
  br label %1243

1243:                                             ; preds = %1230, %1238, %1200, %1184
  %1244 = icmp eq i32 %1192, %5
  br i1 %1244, label %5545, label %1107, !llvm.loop !244

1245:                                             ; preds = %647
  %1246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 336, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1247:                                             ; preds = %18
  %1248 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1249 = load ptr, ptr %1248, align 8, !tbaa !10
  %1250 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1251 = load ptr, ptr %1250, align 8, !tbaa !10
  store i8 0, ptr %1251, align 1, !tbaa !12
  %1252 = icmp eq i32 %13, 0
  br i1 %1252, label %1253, label %1258

1253:                                             ; preds = %1247
  %1254 = load i32, ptr %1249, align 4, !tbaa !6
  %1255 = mul i32 %1254, %1254
  %1256 = mul i32 %1255, %1255
  %1257 = trunc i32 %1256 to i8
  store i8 %1257, ptr %1251, align 1, !tbaa !12
  br label %5545

1258:                                             ; preds = %1247
  switch i32 %1, label %1862 [
    i32 1, label %1259
    i32 0, label %1566
  ]

1259:                                             ; preds = %1258
  %1260 = getelementptr inbounds i32, ptr %3, i64 %19
  %1261 = load i32, ptr %1260, align 4, !tbaa !6
  %1262 = icmp eq i32 %1261, 0
  %1263 = icmp sgt i32 %5, 0
  br i1 %1262, label %1273, label %1264

1264:                                             ; preds = %1259
  br i1 %1263, label %1265, label %5545

1265:                                             ; preds = %1264
  %1266 = icmp sgt i32 %13, 1
  %1267 = icmp sgt i32 %13, 0
  %1268 = add i32 %13, -2
  %1269 = zext i32 %1268 to i64
  %1270 = zext i32 %13 to i64
  %1271 = add nuw i32 %5, 1
  %1272 = icmp eq i32 %13, 1
  br label %1423

1273:                                             ; preds = %1259
  br i1 %1263, label %1274, label %5545

1274:                                             ; preds = %1273
  %1275 = icmp sgt i32 %13, 1
  %1276 = icmp sgt i32 %13, 0
  %1277 = add i32 %13, -2
  %1278 = zext i32 %1277 to i64
  %1279 = zext i32 %13 to i64
  %1280 = add nuw i32 %5, 1
  %1281 = icmp eq i32 %13, 1
  br label %1282

1282:                                             ; preds = %1274, %1421
  %1283 = phi i32 [ 0, %1274 ], [ %1373, %1421 ]
  %1284 = phi double [ 0.000000e+00, %1274 ], [ %1372, %1421 ]
  %1285 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1275, label %1286, label %1355

1286:                                             ; preds = %1282, %1345
  %1287 = phi i32 [ %1354, %1345 ], [ 0, %1282 ]
  %1288 = phi i64 [ %1296, %1345 ], [ %1279, %1282 ]
  %1289 = phi i64 [ %1353, %1345 ], [ %1278, %1282 ]
  %1290 = phi i32 [ %1351, %1345 ], [ %1285, %1282 ]
  %1291 = sub i32 %1277, %1287
  %1292 = tail call i32 @llvm.smin.i32(i32 %1291, i32 0)
  %1293 = sub i32 %1291, %1292
  %1294 = zext i32 %1293 to i64
  %1295 = add nuw nsw i64 %1294, 1
  %1296 = add nsw i64 %1288, -1
  %1297 = icmp ult i32 %1293, 31
  br i1 %1297, label %1333, label %1298

1298:                                             ; preds = %1286
  %1299 = and i64 %1295, 8589934560
  %1300 = sub i64 %1289, %1299
  br label %1301

1301:                                             ; preds = %1301, %1298
  %1302 = phi i64 [ 0, %1298 ], [ %1325, %1301 ]
  %1303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1321, %1301 ]
  %1304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1322, %1301 ]
  %1305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1323, %1301 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1324, %1301 ]
  %1307 = sub i64 %1289, %1302
  %1308 = getelementptr inbounds i32, ptr %9, i64 %1307
  %1309 = getelementptr inbounds i32, ptr %1308, i64 -7
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !6
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = getelementptr inbounds i32, ptr %1308, i64 -15
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !6
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1308, i64 -23
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !6
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1308, i64 -31
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !6
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = mul <8 x i32> %1311, %1303
  %1322 = mul <8 x i32> %1314, %1304
  %1323 = mul <8 x i32> %1317, %1305
  %1324 = mul <8 x i32> %1320, %1306
  %1325 = add nuw i64 %1302, 32
  %1326 = icmp eq i64 %1325, %1299
  br i1 %1326, label %1327, label %1301, !llvm.loop !245

1327:                                             ; preds = %1301
  %1328 = mul <8 x i32> %1322, %1321
  %1329 = mul <8 x i32> %1323, %1328
  %1330 = mul <8 x i32> %1324, %1329
  %1331 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1330)
  %1332 = icmp eq i64 %1295, %1299
  br i1 %1332, label %1345, label %1333

1333:                                             ; preds = %1286, %1327
  %1334 = phi i64 [ %1289, %1286 ], [ %1300, %1327 ]
  %1335 = phi i32 [ 1, %1286 ], [ %1331, %1327 ]
  br label %1336

1336:                                             ; preds = %1333, %1336
  %1337 = phi i64 [ %1342, %1336 ], [ %1334, %1333 ]
  %1338 = phi i32 [ %1341, %1336 ], [ %1335, %1333 ]
  %1339 = getelementptr inbounds i32, ptr %9, i64 %1337
  %1340 = load i32, ptr %1339, align 4, !tbaa !6
  %1341 = mul nsw i32 %1340, %1338
  %1342 = add nsw i64 %1337, -1
  %1343 = trunc i64 %1337 to i32
  %1344 = icmp sgt i32 %1343, 0
  br i1 %1344, label %1336, label %1345, !llvm.loop !246

1345:                                             ; preds = %1336, %1327
  %1346 = phi i32 [ %1331, %1327 ], [ %1341, %1336 ]
  %1347 = and i64 %1296, 4294967295
  %1348 = getelementptr inbounds i32, ptr %6, i64 %1347
  %1349 = load i32, ptr %1348, align 4, !tbaa !6
  %1350 = mul nsw i32 %1349, %1346
  %1351 = add nsw i32 %1350, %1290
  %1352 = icmp sgt i64 %1288, 2
  %1353 = add nsw i64 %1289, -1
  %1354 = add i32 %1287, 1
  br i1 %1352, label %1286, label %1355, !llvm.loop !247

1355:                                             ; preds = %1345, %1282
  %1356 = phi i32 [ %1285, %1282 ], [ %1351, %1345 ]
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds double, ptr %2, i64 %1357
  %1359 = load double, ptr %1358, align 8, !tbaa !19
  %1360 = getelementptr inbounds i32, ptr %1249, i64 %1357
  %1361 = load i32, ptr %1360, align 4, !tbaa !6
  %1362 = load i8, ptr %1251, align 1, !tbaa !12
  %1363 = sitofp i8 %1362 to double
  %1364 = shl i32 %1361, 24
  %1365 = ashr exact i32 %1364, 24
  %1366 = sitofp i32 %1365 to double
  %1367 = fmul fast double %1359, %1366
  %1368 = fmul fast double %1367, %1367
  %1369 = fmul fast double %1368, %1368
  %1370 = fadd fast double %1369, %1363
  %1371 = fptosi double %1370 to i8
  store i8 %1371, ptr %1251, align 1, !tbaa !12
  %1372 = fadd fast double %1359, %1284
  %1373 = add nuw nsw i32 %1283, 1
  br i1 %1276, label %1374, label %1421

1374:                                             ; preds = %1355
  %1375 = load i32, ptr %4, align 4, !tbaa !6
  %1376 = load i32, ptr %12, align 4, !tbaa !6
  %1377 = add nsw i32 %1376, -1
  %1378 = icmp slt i32 %1375, %1377
  br i1 %1378, label %1398, label %1379

1379:                                             ; preds = %1374
  %1380 = icmp eq i32 %1375, %1377
  br i1 %1380, label %1381, label %1414

1381:                                             ; preds = %1379
  store i32 0, ptr %4, align 4, !tbaa !6
  %1382 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1382, ptr %6, align 4, !tbaa !6
  br i1 %1281, label %1421, label %1383

1383:                                             ; preds = %1381, %1408
  %1384 = phi i64 [ %1412, %1408 ], [ 1, %1381 ]
  %1385 = getelementptr inbounds i32, ptr %4, i64 %1384
  %1386 = load i32, ptr %1385, align 4, !tbaa !6
  %1387 = getelementptr inbounds i32, ptr %12, i64 %1384
  %1388 = load i32, ptr %1387, align 4, !tbaa !6
  %1389 = add nsw i32 %1388, -1
  %1390 = icmp slt i32 %1386, %1389
  br i1 %1390, label %1391, label %1406

1391:                                             ; preds = %1383
  br i1 %1378, label %1398, label %1392

1392:                                             ; preds = %1391
  %1393 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1394 = load i32, ptr %1393, align 4, !tbaa !6
  %1395 = getelementptr inbounds i32, ptr %6, i64 %1384
  %1396 = load i32, ptr %1395, align 4, !tbaa !6
  %1397 = add nsw i32 %1396, %1394
  store i32 %1397, ptr %1395, align 4, !tbaa !6
  br label %1416

1398:                                             ; preds = %1374, %1391
  %1399 = phi i32 [ %1386, %1391 ], [ %1375, %1374 ]
  %1400 = phi ptr [ %1385, %1391 ], [ %4, %1374 ]
  %1401 = phi i64 [ %1384, %1391 ], [ 0, %1374 ]
  %1402 = add nsw i32 %1399, 1
  store i32 %1402, ptr %1400, align 4, !tbaa !6
  %1403 = getelementptr inbounds i32, ptr %7, i64 %1401
  %1404 = load i32, ptr %1403, align 4, !tbaa !6
  %1405 = getelementptr inbounds i32, ptr %6, i64 %1401
  br label %1416

1406:                                             ; preds = %1383
  %1407 = icmp eq i32 %1386, %1389
  br i1 %1407, label %1408, label %1414

1408:                                             ; preds = %1406
  store i32 0, ptr %1385, align 4, !tbaa !6
  %1409 = getelementptr inbounds i32, ptr %8, i64 %1384
  %1410 = load i32, ptr %1409, align 4, !tbaa !6
  %1411 = getelementptr inbounds i32, ptr %6, i64 %1384
  store i32 %1410, ptr %1411, align 4, !tbaa !6
  %1412 = add nuw nsw i64 %1384, 1
  %1413 = icmp eq i64 %1412, %1279
  br i1 %1413, label %1421, label %1383, !llvm.loop !248

1414:                                             ; preds = %1379, %1406
  %1415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1416:                                             ; preds = %1392, %1398
  %1417 = phi ptr [ %1405, %1398 ], [ %1385, %1392 ]
  %1418 = phi i32 [ %1404, %1398 ], [ 1, %1392 ]
  %1419 = load i32, ptr %1417, align 4, !tbaa !6
  %1420 = add nsw i32 %1419, %1418
  store i32 %1420, ptr %1417, align 4, !tbaa !6
  br label %1421

1421:                                             ; preds = %1408, %1416, %1381, %1355
  %1422 = icmp eq i32 %1373, %5
  br i1 %1422, label %5545, label %1282, !llvm.loop !249

1423:                                             ; preds = %1265, %1564
  %1424 = phi i32 [ 0, %1265 ], [ %1513, %1564 ]
  %1425 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1266, label %1426, label %1495

1426:                                             ; preds = %1423, %1485
  %1427 = phi i32 [ %1494, %1485 ], [ 0, %1423 ]
  %1428 = phi i64 [ %1436, %1485 ], [ %1270, %1423 ]
  %1429 = phi i64 [ %1493, %1485 ], [ %1269, %1423 ]
  %1430 = phi i32 [ %1491, %1485 ], [ %1425, %1423 ]
  %1431 = sub i32 %1268, %1427
  %1432 = tail call i32 @llvm.smin.i32(i32 %1431, i32 0)
  %1433 = sub i32 %1431, %1432
  %1434 = zext i32 %1433 to i64
  %1435 = add nuw nsw i64 %1434, 1
  %1436 = add nsw i64 %1428, -1
  %1437 = icmp ult i32 %1433, 31
  br i1 %1437, label %1473, label %1438

1438:                                             ; preds = %1426
  %1439 = and i64 %1435, 8589934560
  %1440 = sub i64 %1429, %1439
  br label %1441

1441:                                             ; preds = %1441, %1438
  %1442 = phi i64 [ 0, %1438 ], [ %1465, %1441 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1461, %1441 ]
  %1444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1462, %1441 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1463, %1441 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1464, %1441 ]
  %1447 = sub i64 %1429, %1442
  %1448 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1449 = getelementptr inbounds i32, ptr %1448, i64 -7
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !6
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1448, i64 -15
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1448, i64 -23
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1448, i64 -31
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = mul <8 x i32> %1451, %1443
  %1462 = mul <8 x i32> %1454, %1444
  %1463 = mul <8 x i32> %1457, %1445
  %1464 = mul <8 x i32> %1460, %1446
  %1465 = add nuw i64 %1442, 32
  %1466 = icmp eq i64 %1465, %1439
  br i1 %1466, label %1467, label %1441, !llvm.loop !250

1467:                                             ; preds = %1441
  %1468 = mul <8 x i32> %1462, %1461
  %1469 = mul <8 x i32> %1463, %1468
  %1470 = mul <8 x i32> %1464, %1469
  %1471 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1470)
  %1472 = icmp eq i64 %1435, %1439
  br i1 %1472, label %1485, label %1473

1473:                                             ; preds = %1426, %1467
  %1474 = phi i64 [ %1429, %1426 ], [ %1440, %1467 ]
  %1475 = phi i32 [ 1, %1426 ], [ %1471, %1467 ]
  br label %1476

1476:                                             ; preds = %1473, %1476
  %1477 = phi i64 [ %1482, %1476 ], [ %1474, %1473 ]
  %1478 = phi i32 [ %1481, %1476 ], [ %1475, %1473 ]
  %1479 = getelementptr inbounds i32, ptr %11, i64 %1477
  %1480 = load i32, ptr %1479, align 4, !tbaa !6
  %1481 = mul nsw i32 %1480, %1478
  %1482 = add nsw i64 %1477, -1
  %1483 = trunc i64 %1477 to i32
  %1484 = icmp sgt i32 %1483, 0
  br i1 %1484, label %1476, label %1485, !llvm.loop !251

1485:                                             ; preds = %1476, %1467
  %1486 = phi i32 [ %1471, %1467 ], [ %1481, %1476 ]
  %1487 = and i64 %1436, 4294967295
  %1488 = getelementptr inbounds i32, ptr %6, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !6
  %1490 = mul nsw i32 %1489, %1486
  %1491 = add nsw i32 %1490, %1430
  %1492 = icmp sgt i64 %1428, 2
  %1493 = add nsw i64 %1429, -1
  %1494 = add i32 %1427, 1
  br i1 %1492, label %1426, label %1495, !llvm.loop !252

1495:                                             ; preds = %1485, %1423
  %1496 = phi i32 [ %1425, %1423 ], [ %1491, %1485 ]
  %1497 = icmp slt i32 %1496, %5
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1495
  %1499 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1500:                                             ; preds = %1495
  %1501 = sext i32 %1496 to i64
  %1502 = getelementptr inbounds i32, ptr %1249, i64 %1501
  %1503 = load i32, ptr %1502, align 4, !tbaa !6
  %1504 = load i8, ptr %1251, align 1, !tbaa !12
  %1505 = sitofp i8 %1504 to double
  %1506 = shl i32 %1503, 24
  %1507 = ashr exact i32 %1506, 24
  %1508 = sitofp i32 %1507 to double
  %1509 = fmul fast double %1508, %1508
  %1510 = fmul fast double %1509, %1509
  %1511 = fadd fast double %1510, %1505
  %1512 = fptosi double %1511 to i8
  store i8 %1512, ptr %1251, align 1, !tbaa !12
  %1513 = add nuw nsw i32 %1424, 1
  br i1 %1267, label %1514, label %1564

1514:                                             ; preds = %1500
  %1515 = load i32, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %12, align 4, !tbaa !6
  %1517 = add nsw i32 %1516, -1
  %1518 = icmp slt i32 %1515, %1517
  br i1 %1518, label %1541, label %1519

1519:                                             ; preds = %1514
  %1520 = icmp eq i32 %1515, %1517
  br i1 %1520, label %1521, label %1557

1521:                                             ; preds = %1519
  store i32 0, ptr %4, align 4, !tbaa !6
  %1522 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1522, ptr %6, align 4, !tbaa !6
  br i1 %1272, label %1564, label %1523

1523:                                             ; preds = %1521, %1551
  %1524 = phi i64 [ %1555, %1551 ], [ 1, %1521 ]
  %1525 = getelementptr inbounds i32, ptr %4, i64 %1524
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %12, i64 %1524
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, -1
  %1530 = icmp slt i32 %1526, %1529
  br i1 %1530, label %1531, label %1549

1531:                                             ; preds = %1523
  br i1 %1518, label %1541, label %1532

1532:                                             ; preds = %1531
  %1533 = shl i64 %1524, 32
  %1534 = add i64 %1533, -4294967296
  %1535 = ashr exact i64 %1534, 32
  %1536 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1524
  %1539 = load i32, ptr %1538, align 4, !tbaa !6
  %1540 = add nsw i32 %1539, %1537
  store i32 %1540, ptr %1538, align 4, !tbaa !6
  br label %1559

1541:                                             ; preds = %1514, %1531
  %1542 = phi i32 [ %1526, %1531 ], [ %1515, %1514 ]
  %1543 = phi ptr [ %1525, %1531 ], [ %4, %1514 ]
  %1544 = phi i64 [ %1524, %1531 ], [ 0, %1514 ]
  %1545 = add nsw i32 %1542, 1
  store i32 %1545, ptr %1543, align 4, !tbaa !6
  %1546 = getelementptr inbounds i32, ptr %7, i64 %1544
  %1547 = load i32, ptr %1546, align 4, !tbaa !6
  %1548 = getelementptr inbounds i32, ptr %6, i64 %1544
  br label %1559

1549:                                             ; preds = %1523
  %1550 = icmp eq i32 %1526, %1529
  br i1 %1550, label %1551, label %1557

1551:                                             ; preds = %1549
  store i32 0, ptr %1525, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %8, i64 %1524
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1524
  store i32 %1553, ptr %1554, align 4, !tbaa !6
  %1555 = add nuw nsw i64 %1524, 1
  %1556 = icmp eq i64 %1555, %1270
  br i1 %1556, label %1564, label %1523, !llvm.loop !253

1557:                                             ; preds = %1519, %1549
  %1558 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1559:                                             ; preds = %1532, %1541
  %1560 = phi ptr [ %1548, %1541 ], [ %1525, %1532 ]
  %1561 = phi i32 [ %1547, %1541 ], [ 1, %1532 ]
  %1562 = load i32, ptr %1560, align 4, !tbaa !6
  %1563 = add nsw i32 %1562, %1561
  store i32 %1563, ptr %1560, align 4, !tbaa !6
  br label %1564

1564:                                             ; preds = %1551, %1559, %1521, %1500
  %1565 = icmp eq i32 %1513, %5
  br i1 %1565, label %5545, label %1423, !llvm.loop !254

1566:                                             ; preds = %1258
  %1567 = getelementptr inbounds i32, ptr %3, i64 %19
  %1568 = load i32, ptr %1567, align 4, !tbaa !6
  %1569 = icmp eq i32 %1568, 0
  %1570 = icmp sgt i32 %5, 0
  br i1 %1569, label %1580, label %1571

1571:                                             ; preds = %1566
  br i1 %1570, label %1572, label %5545

1572:                                             ; preds = %1571
  %1573 = icmp sgt i32 %13, 1
  %1574 = icmp sgt i32 %13, 0
  %1575 = add i32 %13, -2
  %1576 = zext i32 %1575 to i64
  %1577 = zext i32 %13 to i64
  %1578 = add nuw i32 %5, 1
  %1579 = icmp eq i32 %13, 1
  br label %1723

1580:                                             ; preds = %1566
  br i1 %1570, label %1581, label %5545

1581:                                             ; preds = %1580
  %1582 = icmp sgt i32 %13, 1
  %1583 = icmp sgt i32 %13, 0
  %1584 = add i32 %13, -2
  %1585 = zext i32 %1584 to i64
  %1586 = zext i32 %13 to i64
  %1587 = add nuw i32 %5, 1
  %1588 = icmp eq i32 %13, 1
  br label %1589

1589:                                             ; preds = %1581, %1721
  %1590 = phi i32 [ 0, %1581 ], [ %1673, %1721 ]
  %1591 = phi double [ 0.000000e+00, %1581 ], [ %1672, %1721 ]
  %1592 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1582, label %1593, label %1662

1593:                                             ; preds = %1589, %1652
  %1594 = phi i32 [ %1661, %1652 ], [ 0, %1589 ]
  %1595 = phi i64 [ %1603, %1652 ], [ %1586, %1589 ]
  %1596 = phi i64 [ %1660, %1652 ], [ %1585, %1589 ]
  %1597 = phi i32 [ %1658, %1652 ], [ %1592, %1589 ]
  %1598 = sub i32 %1584, %1594
  %1599 = tail call i32 @llvm.smin.i32(i32 %1598, i32 0)
  %1600 = sub i32 %1598, %1599
  %1601 = zext i32 %1600 to i64
  %1602 = add nuw nsw i64 %1601, 1
  %1603 = add nsw i64 %1595, -1
  %1604 = icmp ult i32 %1600, 31
  br i1 %1604, label %1640, label %1605

1605:                                             ; preds = %1593
  %1606 = and i64 %1602, 8589934560
  %1607 = sub i64 %1596, %1606
  br label %1608

1608:                                             ; preds = %1608, %1605
  %1609 = phi i64 [ 0, %1605 ], [ %1632, %1608 ]
  %1610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1628, %1608 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1629, %1608 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1630, %1608 ]
  %1613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1631, %1608 ]
  %1614 = sub i64 %1596, %1609
  %1615 = getelementptr inbounds i32, ptr %9, i64 %1614
  %1616 = getelementptr inbounds i32, ptr %1615, i64 -7
  %1617 = load <8 x i32>, ptr %1616, align 4, !tbaa !6
  %1618 = shufflevector <8 x i32> %1617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1619 = getelementptr inbounds i32, ptr %1615, i64 -15
  %1620 = load <8 x i32>, ptr %1619, align 4, !tbaa !6
  %1621 = shufflevector <8 x i32> %1620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1622 = getelementptr inbounds i32, ptr %1615, i64 -23
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !6
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1615, i64 -31
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !6
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = mul <8 x i32> %1618, %1610
  %1629 = mul <8 x i32> %1621, %1611
  %1630 = mul <8 x i32> %1624, %1612
  %1631 = mul <8 x i32> %1627, %1613
  %1632 = add nuw i64 %1609, 32
  %1633 = icmp eq i64 %1632, %1606
  br i1 %1633, label %1634, label %1608, !llvm.loop !255

1634:                                             ; preds = %1608
  %1635 = mul <8 x i32> %1629, %1628
  %1636 = mul <8 x i32> %1630, %1635
  %1637 = mul <8 x i32> %1631, %1636
  %1638 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1637)
  %1639 = icmp eq i64 %1602, %1606
  br i1 %1639, label %1652, label %1640

1640:                                             ; preds = %1593, %1634
  %1641 = phi i64 [ %1596, %1593 ], [ %1607, %1634 ]
  %1642 = phi i32 [ 1, %1593 ], [ %1638, %1634 ]
  br label %1643

1643:                                             ; preds = %1640, %1643
  %1644 = phi i64 [ %1649, %1643 ], [ %1641, %1640 ]
  %1645 = phi i32 [ %1648, %1643 ], [ %1642, %1640 ]
  %1646 = getelementptr inbounds i32, ptr %9, i64 %1644
  %1647 = load i32, ptr %1646, align 4, !tbaa !6
  %1648 = mul nsw i32 %1647, %1645
  %1649 = add nsw i64 %1644, -1
  %1650 = trunc i64 %1644 to i32
  %1651 = icmp sgt i32 %1650, 0
  br i1 %1651, label %1643, label %1652, !llvm.loop !256

1652:                                             ; preds = %1643, %1634
  %1653 = phi i32 [ %1638, %1634 ], [ %1648, %1643 ]
  %1654 = and i64 %1603, 4294967295
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1654
  %1656 = load i32, ptr %1655, align 4, !tbaa !6
  %1657 = mul nsw i32 %1656, %1653
  %1658 = add nsw i32 %1657, %1597
  %1659 = icmp sgt i64 %1595, 2
  %1660 = add nsw i64 %1596, -1
  %1661 = add i32 %1594, 1
  br i1 %1659, label %1593, label %1662, !llvm.loop !257

1662:                                             ; preds = %1652, %1589
  %1663 = phi i32 [ %1592, %1589 ], [ %1658, %1652 ]
  %1664 = sext i32 %1663 to i64
  %1665 = getelementptr inbounds i32, ptr %1249, i64 %1664
  %1666 = load i32, ptr %1665, align 4, !tbaa !6
  %1667 = load i8, ptr %1251, align 1, !tbaa !12
  %1668 = mul i32 %1666, %1666
  %1669 = mul i32 %1668, %1668
  %1670 = trunc i32 %1669 to i8
  %1671 = add i8 %1667, %1670
  store i8 %1671, ptr %1251, align 1, !tbaa !12
  %1672 = fadd fast double %1591, 1.000000e+00
  %1673 = add nuw nsw i32 %1590, 1
  br i1 %1583, label %1674, label %1721

1674:                                             ; preds = %1662
  %1675 = load i32, ptr %4, align 4, !tbaa !6
  %1676 = load i32, ptr %12, align 4, !tbaa !6
  %1677 = add nsw i32 %1676, -1
  %1678 = icmp slt i32 %1675, %1677
  br i1 %1678, label %1698, label %1679

1679:                                             ; preds = %1674
  %1680 = icmp eq i32 %1675, %1677
  br i1 %1680, label %1681, label %1714

1681:                                             ; preds = %1679
  store i32 0, ptr %4, align 4, !tbaa !6
  %1682 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1682, ptr %6, align 4, !tbaa !6
  br i1 %1588, label %1721, label %1683

1683:                                             ; preds = %1681, %1708
  %1684 = phi i64 [ %1712, %1708 ], [ 1, %1681 ]
  %1685 = getelementptr inbounds i32, ptr %4, i64 %1684
  %1686 = load i32, ptr %1685, align 4, !tbaa !6
  %1687 = getelementptr inbounds i32, ptr %12, i64 %1684
  %1688 = load i32, ptr %1687, align 4, !tbaa !6
  %1689 = add nsw i32 %1688, -1
  %1690 = icmp slt i32 %1686, %1689
  br i1 %1690, label %1691, label %1706

1691:                                             ; preds = %1683
  br i1 %1678, label %1698, label %1692

1692:                                             ; preds = %1691
  %1693 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1694 = load i32, ptr %1693, align 4, !tbaa !6
  %1695 = getelementptr inbounds i32, ptr %6, i64 %1684
  %1696 = load i32, ptr %1695, align 4, !tbaa !6
  %1697 = add nsw i32 %1696, %1694
  store i32 %1697, ptr %1695, align 4, !tbaa !6
  br label %1716

1698:                                             ; preds = %1674, %1691
  %1699 = phi i32 [ %1686, %1691 ], [ %1675, %1674 ]
  %1700 = phi ptr [ %1685, %1691 ], [ %4, %1674 ]
  %1701 = phi i64 [ %1684, %1691 ], [ 0, %1674 ]
  %1702 = add nsw i32 %1699, 1
  store i32 %1702, ptr %1700, align 4, !tbaa !6
  %1703 = getelementptr inbounds i32, ptr %7, i64 %1701
  %1704 = load i32, ptr %1703, align 4, !tbaa !6
  %1705 = getelementptr inbounds i32, ptr %6, i64 %1701
  br label %1716

1706:                                             ; preds = %1683
  %1707 = icmp eq i32 %1686, %1689
  br i1 %1707, label %1708, label %1714

1708:                                             ; preds = %1706
  store i32 0, ptr %1685, align 4, !tbaa !6
  %1709 = getelementptr inbounds i32, ptr %8, i64 %1684
  %1710 = load i32, ptr %1709, align 4, !tbaa !6
  %1711 = getelementptr inbounds i32, ptr %6, i64 %1684
  store i32 %1710, ptr %1711, align 4, !tbaa !6
  %1712 = add nuw nsw i64 %1684, 1
  %1713 = icmp eq i64 %1712, %1586
  br i1 %1713, label %1721, label %1683, !llvm.loop !258

1714:                                             ; preds = %1679, %1706
  %1715 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1716:                                             ; preds = %1692, %1698
  %1717 = phi ptr [ %1705, %1698 ], [ %1685, %1692 ]
  %1718 = phi i32 [ %1704, %1698 ], [ 1, %1692 ]
  %1719 = load i32, ptr %1717, align 4, !tbaa !6
  %1720 = add nsw i32 %1719, %1718
  store i32 %1720, ptr %1717, align 4, !tbaa !6
  br label %1721

1721:                                             ; preds = %1708, %1716, %1681, %1662
  %1722 = icmp eq i32 %1673, %5
  br i1 %1722, label %5545, label %1589, !llvm.loop !259

1723:                                             ; preds = %1572, %1860
  %1724 = phi i32 [ 0, %1572 ], [ %1809, %1860 ]
  %1725 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1573, label %1726, label %1795

1726:                                             ; preds = %1723, %1785
  %1727 = phi i32 [ %1794, %1785 ], [ 0, %1723 ]
  %1728 = phi i64 [ %1736, %1785 ], [ %1577, %1723 ]
  %1729 = phi i64 [ %1793, %1785 ], [ %1576, %1723 ]
  %1730 = phi i32 [ %1791, %1785 ], [ %1725, %1723 ]
  %1731 = sub i32 %1575, %1727
  %1732 = tail call i32 @llvm.smin.i32(i32 %1731, i32 0)
  %1733 = sub i32 %1731, %1732
  %1734 = zext i32 %1733 to i64
  %1735 = add nuw nsw i64 %1734, 1
  %1736 = add nsw i64 %1728, -1
  %1737 = icmp ult i32 %1733, 31
  br i1 %1737, label %1773, label %1738

1738:                                             ; preds = %1726
  %1739 = and i64 %1735, 8589934560
  %1740 = sub i64 %1729, %1739
  br label %1741

1741:                                             ; preds = %1741, %1738
  %1742 = phi i64 [ 0, %1738 ], [ %1765, %1741 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1761, %1741 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1762, %1741 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1763, %1741 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1764, %1741 ]
  %1747 = sub i64 %1729, %1742
  %1748 = getelementptr inbounds i32, ptr %11, i64 %1747
  %1749 = getelementptr inbounds i32, ptr %1748, i64 -7
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !6
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = getelementptr inbounds i32, ptr %1748, i64 -15
  %1753 = load <8 x i32>, ptr %1752, align 4, !tbaa !6
  %1754 = shufflevector <8 x i32> %1753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1755 = getelementptr inbounds i32, ptr %1748, i64 -23
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !6
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = getelementptr inbounds i32, ptr %1748, i64 -31
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = mul <8 x i32> %1751, %1743
  %1762 = mul <8 x i32> %1754, %1744
  %1763 = mul <8 x i32> %1757, %1745
  %1764 = mul <8 x i32> %1760, %1746
  %1765 = add nuw i64 %1742, 32
  %1766 = icmp eq i64 %1765, %1739
  br i1 %1766, label %1767, label %1741, !llvm.loop !260

1767:                                             ; preds = %1741
  %1768 = mul <8 x i32> %1762, %1761
  %1769 = mul <8 x i32> %1763, %1768
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1770)
  %1772 = icmp eq i64 %1735, %1739
  br i1 %1772, label %1785, label %1773

1773:                                             ; preds = %1726, %1767
  %1774 = phi i64 [ %1729, %1726 ], [ %1740, %1767 ]
  %1775 = phi i32 [ 1, %1726 ], [ %1771, %1767 ]
  br label %1776

1776:                                             ; preds = %1773, %1776
  %1777 = phi i64 [ %1782, %1776 ], [ %1774, %1773 ]
  %1778 = phi i32 [ %1781, %1776 ], [ %1775, %1773 ]
  %1779 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1780 = load i32, ptr %1779, align 4, !tbaa !6
  %1781 = mul nsw i32 %1780, %1778
  %1782 = add nsw i64 %1777, -1
  %1783 = trunc i64 %1777 to i32
  %1784 = icmp sgt i32 %1783, 0
  br i1 %1784, label %1776, label %1785, !llvm.loop !261

1785:                                             ; preds = %1776, %1767
  %1786 = phi i32 [ %1771, %1767 ], [ %1781, %1776 ]
  %1787 = and i64 %1736, 4294967295
  %1788 = getelementptr inbounds i32, ptr %6, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !6
  %1790 = mul nsw i32 %1789, %1786
  %1791 = add nsw i32 %1790, %1730
  %1792 = icmp sgt i64 %1728, 2
  %1793 = add nsw i64 %1729, -1
  %1794 = add i32 %1727, 1
  br i1 %1792, label %1726, label %1795, !llvm.loop !262

1795:                                             ; preds = %1785, %1723
  %1796 = phi i32 [ %1725, %1723 ], [ %1791, %1785 ]
  %1797 = icmp slt i32 %1796, %5
  br i1 %1797, label %1800, label %1798

1798:                                             ; preds = %1795
  %1799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1800:                                             ; preds = %1795
  %1801 = sext i32 %1796 to i64
  %1802 = getelementptr inbounds i32, ptr %1249, i64 %1801
  %1803 = load i32, ptr %1802, align 4, !tbaa !6
  %1804 = load i8, ptr %1251, align 1, !tbaa !12
  %1805 = mul i32 %1803, %1803
  %1806 = mul i32 %1805, %1805
  %1807 = trunc i32 %1806 to i8
  %1808 = add i8 %1804, %1807
  store i8 %1808, ptr %1251, align 1, !tbaa !12
  %1809 = add nuw nsw i32 %1724, 1
  br i1 %1574, label %1810, label %1860

1810:                                             ; preds = %1800
  %1811 = load i32, ptr %4, align 4, !tbaa !6
  %1812 = load i32, ptr %12, align 4, !tbaa !6
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1811, %1813
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1810
  %1816 = icmp eq i32 %1811, %1813
  br i1 %1816, label %1817, label %1853

1817:                                             ; preds = %1815
  store i32 0, ptr %4, align 4, !tbaa !6
  %1818 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1818, ptr %6, align 4, !tbaa !6
  br i1 %1579, label %1860, label %1819

1819:                                             ; preds = %1817, %1847
  %1820 = phi i64 [ %1851, %1847 ], [ 1, %1817 ]
  %1821 = getelementptr inbounds i32, ptr %4, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = getelementptr inbounds i32, ptr %12, i64 %1820
  %1824 = load i32, ptr %1823, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1822, %1825
  br i1 %1826, label %1827, label %1845

1827:                                             ; preds = %1819
  br i1 %1814, label %1837, label %1828

1828:                                             ; preds = %1827
  %1829 = shl i64 %1820, 32
  %1830 = add i64 %1829, -4294967296
  %1831 = ashr exact i64 %1830, 32
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1833 = load i32, ptr %1832, align 4, !tbaa !6
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1820
  %1835 = load i32, ptr %1834, align 4, !tbaa !6
  %1836 = add nsw i32 %1835, %1833
  store i32 %1836, ptr %1834, align 4, !tbaa !6
  br label %1855

1837:                                             ; preds = %1810, %1827
  %1838 = phi i32 [ %1822, %1827 ], [ %1811, %1810 ]
  %1839 = phi ptr [ %1821, %1827 ], [ %4, %1810 ]
  %1840 = phi i64 [ %1820, %1827 ], [ 0, %1810 ]
  %1841 = add nsw i32 %1838, 1
  store i32 %1841, ptr %1839, align 4, !tbaa !6
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1843 = load i32, ptr %1842, align 4, !tbaa !6
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1840
  br label %1855

1845:                                             ; preds = %1819
  %1846 = icmp eq i32 %1822, %1825
  br i1 %1846, label %1847, label %1853

1847:                                             ; preds = %1845
  store i32 0, ptr %1821, align 4, !tbaa !6
  %1848 = getelementptr inbounds i32, ptr %8, i64 %1820
  %1849 = load i32, ptr %1848, align 4, !tbaa !6
  %1850 = getelementptr inbounds i32, ptr %6, i64 %1820
  store i32 %1849, ptr %1850, align 4, !tbaa !6
  %1851 = add nuw nsw i64 %1820, 1
  %1852 = icmp eq i64 %1851, %1577
  br i1 %1852, label %1860, label %1819, !llvm.loop !263

1853:                                             ; preds = %1815, %1845
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1855:                                             ; preds = %1828, %1837
  %1856 = phi ptr [ %1844, %1837 ], [ %1821, %1828 ]
  %1857 = phi i32 [ %1843, %1837 ], [ 1, %1828 ]
  %1858 = load i32, ptr %1856, align 4, !tbaa !6
  %1859 = add nsw i32 %1858, %1857
  store i32 %1859, ptr %1856, align 4, !tbaa !6
  br label %1860

1860:                                             ; preds = %1847, %1855, %1817, %1800
  %1861 = icmp eq i32 %1809, %5
  br i1 %1861, label %5545, label %1723, !llvm.loop !264

1862:                                             ; preds = %1258
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 340, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1864:                                             ; preds = %18
  %1865 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !10
  %1867 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1868 = load ptr, ptr %1867, align 8, !tbaa !10
  store i16 0, ptr %1868, align 2, !tbaa !79
  %1869 = icmp eq i32 %13, 0
  br i1 %1869, label %1870, label %1875

1870:                                             ; preds = %1864
  %1871 = load i32, ptr %1866, align 4, !tbaa !6
  %1872 = mul i32 %1871, %1871
  %1873 = mul i32 %1872, %1872
  %1874 = trunc i32 %1873 to i16
  store i16 %1874, ptr %1868, align 2, !tbaa !79
  br label %5545

1875:                                             ; preds = %1864
  switch i32 %1, label %2479 [
    i32 1, label %1876
    i32 0, label %2183
  ]

1876:                                             ; preds = %1875
  %1877 = getelementptr inbounds i32, ptr %3, i64 %19
  %1878 = load i32, ptr %1877, align 4, !tbaa !6
  %1879 = icmp eq i32 %1878, 0
  %1880 = icmp sgt i32 %5, 0
  br i1 %1879, label %1890, label %1881

1881:                                             ; preds = %1876
  br i1 %1880, label %1882, label %5545

1882:                                             ; preds = %1881
  %1883 = icmp sgt i32 %13, 1
  %1884 = icmp sgt i32 %13, 0
  %1885 = add i32 %13, -2
  %1886 = zext i32 %1885 to i64
  %1887 = zext i32 %13 to i64
  %1888 = add nuw i32 %5, 1
  %1889 = icmp eq i32 %13, 1
  br label %2040

1890:                                             ; preds = %1876
  br i1 %1880, label %1891, label %5545

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %1899

1899:                                             ; preds = %1891, %2038
  %1900 = phi i16 [ 0, %1891 ], [ %1988, %2038 ]
  %1901 = phi i32 [ 0, %1891 ], [ %1990, %2038 ]
  %1902 = phi double [ 0.000000e+00, %1891 ], [ %1989, %2038 ]
  %1903 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %1904, label %1973

1904:                                             ; preds = %1899, %1963
  %1905 = phi i32 [ %1972, %1963 ], [ 0, %1899 ]
  %1906 = phi i64 [ %1914, %1963 ], [ %1896, %1899 ]
  %1907 = phi i64 [ %1971, %1963 ], [ %1895, %1899 ]
  %1908 = phi i32 [ %1969, %1963 ], [ %1903, %1899 ]
  %1909 = sub i32 %1894, %1905
  %1910 = tail call i32 @llvm.smin.i32(i32 %1909, i32 0)
  %1911 = sub i32 %1909, %1910
  %1912 = zext i32 %1911 to i64
  %1913 = add nuw nsw i64 %1912, 1
  %1914 = add nsw i64 %1906, -1
  %1915 = icmp ult i32 %1911, 31
  br i1 %1915, label %1951, label %1916

1916:                                             ; preds = %1904
  %1917 = and i64 %1913, 8589934560
  %1918 = sub i64 %1907, %1917
  br label %1919

1919:                                             ; preds = %1919, %1916
  %1920 = phi i64 [ 0, %1916 ], [ %1943, %1919 ]
  %1921 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1939, %1919 ]
  %1922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1940, %1919 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1941, %1919 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1942, %1919 ]
  %1925 = sub i64 %1907, %1920
  %1926 = getelementptr inbounds i32, ptr %9, i64 %1925
  %1927 = getelementptr inbounds i32, ptr %1926, i64 -7
  %1928 = load <8 x i32>, ptr %1927, align 4, !tbaa !6
  %1929 = shufflevector <8 x i32> %1928, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1930 = getelementptr inbounds i32, ptr %1926, i64 -15
  %1931 = load <8 x i32>, ptr %1930, align 4, !tbaa !6
  %1932 = shufflevector <8 x i32> %1931, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1933 = getelementptr inbounds i32, ptr %1926, i64 -23
  %1934 = load <8 x i32>, ptr %1933, align 4, !tbaa !6
  %1935 = shufflevector <8 x i32> %1934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1936 = getelementptr inbounds i32, ptr %1926, i64 -31
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !6
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = mul <8 x i32> %1929, %1921
  %1940 = mul <8 x i32> %1932, %1922
  %1941 = mul <8 x i32> %1935, %1923
  %1942 = mul <8 x i32> %1938, %1924
  %1943 = add nuw i64 %1920, 32
  %1944 = icmp eq i64 %1943, %1917
  br i1 %1944, label %1945, label %1919, !llvm.loop !265

1945:                                             ; preds = %1919
  %1946 = mul <8 x i32> %1940, %1939
  %1947 = mul <8 x i32> %1941, %1946
  %1948 = mul <8 x i32> %1942, %1947
  %1949 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1948)
  %1950 = icmp eq i64 %1913, %1917
  br i1 %1950, label %1963, label %1951

1951:                                             ; preds = %1904, %1945
  %1952 = phi i64 [ %1907, %1904 ], [ %1918, %1945 ]
  %1953 = phi i32 [ 1, %1904 ], [ %1949, %1945 ]
  br label %1954

1954:                                             ; preds = %1951, %1954
  %1955 = phi i64 [ %1960, %1954 ], [ %1952, %1951 ]
  %1956 = phi i32 [ %1959, %1954 ], [ %1953, %1951 ]
  %1957 = getelementptr inbounds i32, ptr %9, i64 %1955
  %1958 = load i32, ptr %1957, align 4, !tbaa !6
  %1959 = mul nsw i32 %1958, %1956
  %1960 = add nsw i64 %1955, -1
  %1961 = trunc i64 %1955 to i32
  %1962 = icmp sgt i32 %1961, 0
  br i1 %1962, label %1954, label %1963, !llvm.loop !266

1963:                                             ; preds = %1954, %1945
  %1964 = phi i32 [ %1949, %1945 ], [ %1959, %1954 ]
  %1965 = and i64 %1914, 4294967295
  %1966 = getelementptr inbounds i32, ptr %6, i64 %1965
  %1967 = load i32, ptr %1966, align 4, !tbaa !6
  %1968 = mul nsw i32 %1967, %1964
  %1969 = add nsw i32 %1968, %1908
  %1970 = icmp sgt i64 %1906, 2
  %1971 = add nsw i64 %1907, -1
  %1972 = add i32 %1905, 1
  br i1 %1970, label %1904, label %1973, !llvm.loop !267

1973:                                             ; preds = %1963, %1899
  %1974 = phi i32 [ %1903, %1899 ], [ %1969, %1963 ]
  %1975 = sext i32 %1974 to i64
  %1976 = getelementptr inbounds double, ptr %2, i64 %1975
  %1977 = load double, ptr %1976, align 8, !tbaa !19
  %1978 = getelementptr inbounds i32, ptr %1866, i64 %1975
  %1979 = load i32, ptr %1978, align 4, !tbaa !6
  %1980 = sitofp i16 %1900 to double
  %1981 = shl i32 %1979, 16
  %1982 = ashr exact i32 %1981, 16
  %1983 = sitofp i32 %1982 to double
  %1984 = fmul fast double %1977, %1983
  %1985 = fmul fast double %1984, %1984
  %1986 = fmul fast double %1985, %1985
  %1987 = fadd fast double %1986, %1980
  %1988 = fptosi double %1987 to i16
  %1989 = fadd fast double %1977, %1902
  %1990 = add nuw nsw i32 %1901, 1
  br i1 %1893, label %1991, label %2038

1991:                                             ; preds = %1973
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1898, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1896
  br i1 %2030, label %2038, label %2000, !llvm.loop !268

2031:                                             ; preds = %1996, %2023
  store i16 %1988, ptr %1868, align 2, !tbaa !79
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1973
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5537, label %1899, !llvm.loop !269

2040:                                             ; preds = %1882, %2181
  %2041 = phi i16 [ 0, %1882 ], [ %2129, %2181 ]
  %2042 = phi i32 [ 0, %1882 ], [ %2130, %2181 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1883, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1887, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1886, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1885, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !270

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !271

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !272

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds i32, ptr %1866, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !6
  %2122 = sitofp i16 %2041 to double
  %2123 = shl i32 %2121, 16
  %2124 = ashr exact i32 %2123, 16
  %2125 = sitofp i32 %2124 to double
  %2126 = fmul fast double %2125, %2125
  %2127 = fmul fast double %2126, %2126
  %2128 = fadd fast double %2127, %2122
  %2129 = fptosi double %2128 to i16
  store i16 %2129, ptr %1868, align 2, !tbaa !79
  %2130 = add nuw nsw i32 %2042, 1
  br i1 %1884, label %2131, label %2181

2131:                                             ; preds = %2118
  %2132 = load i32, ptr %4, align 4, !tbaa !6
  %2133 = load i32, ptr %12, align 4, !tbaa !6
  %2134 = add nsw i32 %2133, -1
  %2135 = icmp slt i32 %2132, %2134
  br i1 %2135, label %2158, label %2136

2136:                                             ; preds = %2131
  %2137 = icmp eq i32 %2132, %2134
  br i1 %2137, label %2138, label %2174

2138:                                             ; preds = %2136
  store i32 0, ptr %4, align 4, !tbaa !6
  %2139 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2139, ptr %6, align 4, !tbaa !6
  br i1 %1889, label %2181, label %2140

2140:                                             ; preds = %2138, %2168
  %2141 = phi i64 [ %2172, %2168 ], [ 1, %2138 ]
  %2142 = getelementptr inbounds i32, ptr %4, i64 %2141
  %2143 = load i32, ptr %2142, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %12, i64 %2141
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = add nsw i32 %2145, -1
  %2147 = icmp slt i32 %2143, %2146
  br i1 %2147, label %2148, label %2166

2148:                                             ; preds = %2140
  br i1 %2135, label %2158, label %2149

2149:                                             ; preds = %2148
  %2150 = shl i64 %2141, 32
  %2151 = add i64 %2150, -4294967296
  %2152 = ashr exact i64 %2151, 32
  %2153 = getelementptr inbounds i32, ptr %7, i64 %2152
  %2154 = load i32, ptr %2153, align 4, !tbaa !6
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2141
  %2156 = load i32, ptr %2155, align 4, !tbaa !6
  %2157 = add nsw i32 %2156, %2154
  store i32 %2157, ptr %2155, align 4, !tbaa !6
  br label %2176

2158:                                             ; preds = %2131, %2148
  %2159 = phi i32 [ %2143, %2148 ], [ %2132, %2131 ]
  %2160 = phi ptr [ %2142, %2148 ], [ %4, %2131 ]
  %2161 = phi i64 [ %2141, %2148 ], [ 0, %2131 ]
  %2162 = add nsw i32 %2159, 1
  store i32 %2162, ptr %2160, align 4, !tbaa !6
  %2163 = getelementptr inbounds i32, ptr %7, i64 %2161
  %2164 = load i32, ptr %2163, align 4, !tbaa !6
  %2165 = getelementptr inbounds i32, ptr %6, i64 %2161
  br label %2176

2166:                                             ; preds = %2140
  %2167 = icmp eq i32 %2143, %2146
  br i1 %2167, label %2168, label %2174

2168:                                             ; preds = %2166
  store i32 0, ptr %2142, align 4, !tbaa !6
  %2169 = getelementptr inbounds i32, ptr %8, i64 %2141
  %2170 = load i32, ptr %2169, align 4, !tbaa !6
  %2171 = getelementptr inbounds i32, ptr %6, i64 %2141
  store i32 %2170, ptr %2171, align 4, !tbaa !6
  %2172 = add nuw nsw i64 %2141, 1
  %2173 = icmp eq i64 %2172, %1887
  br i1 %2173, label %2181, label %2140, !llvm.loop !273

2174:                                             ; preds = %2136, %2166
  %2175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2176:                                             ; preds = %2149, %2158
  %2177 = phi ptr [ %2165, %2158 ], [ %2142, %2149 ]
  %2178 = phi i32 [ %2164, %2158 ], [ 1, %2149 ]
  %2179 = load i32, ptr %2177, align 4, !tbaa !6
  %2180 = add nsw i32 %2179, %2178
  store i32 %2180, ptr %2177, align 4, !tbaa !6
  br label %2181

2181:                                             ; preds = %2168, %2176, %2138, %2118
  %2182 = icmp eq i32 %2130, %5
  br i1 %2182, label %5545, label %2040, !llvm.loop !274

2183:                                             ; preds = %1875
  %2184 = getelementptr inbounds i32, ptr %3, i64 %19
  %2185 = load i32, ptr %2184, align 4, !tbaa !6
  %2186 = icmp eq i32 %2185, 0
  %2187 = icmp sgt i32 %5, 0
  br i1 %2186, label %2197, label %2188

2188:                                             ; preds = %2183
  br i1 %2187, label %2189, label %5545

2189:                                             ; preds = %2188
  %2190 = icmp sgt i32 %13, 1
  %2191 = icmp sgt i32 %13, 0
  %2192 = add i32 %13, -2
  %2193 = zext i32 %2192 to i64
  %2194 = zext i32 %13 to i64
  %2195 = add nuw i32 %5, 1
  %2196 = icmp eq i32 %13, 1
  br label %2340

2197:                                             ; preds = %2183
  br i1 %2187, label %2198, label %5545

2198:                                             ; preds = %2197
  %2199 = icmp sgt i32 %13, 1
  %2200 = icmp sgt i32 %13, 0
  %2201 = add i32 %13, -2
  %2202 = zext i32 %2201 to i64
  %2203 = zext i32 %13 to i64
  %2204 = add nuw i32 %5, 1
  %2205 = icmp eq i32 %13, 1
  br label %2206

2206:                                             ; preds = %2198, %2338
  %2207 = phi i16 [ 0, %2198 ], [ %2288, %2338 ]
  %2208 = phi i32 [ 0, %2198 ], [ %2290, %2338 ]
  %2209 = phi double [ 0.000000e+00, %2198 ], [ %2289, %2338 ]
  %2210 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2199, label %2211, label %2280

2211:                                             ; preds = %2206, %2270
  %2212 = phi i32 [ %2279, %2270 ], [ 0, %2206 ]
  %2213 = phi i64 [ %2221, %2270 ], [ %2203, %2206 ]
  %2214 = phi i64 [ %2278, %2270 ], [ %2202, %2206 ]
  %2215 = phi i32 [ %2276, %2270 ], [ %2210, %2206 ]
  %2216 = sub i32 %2201, %2212
  %2217 = tail call i32 @llvm.smin.i32(i32 %2216, i32 0)
  %2218 = sub i32 %2216, %2217
  %2219 = zext i32 %2218 to i64
  %2220 = add nuw nsw i64 %2219, 1
  %2221 = add nsw i64 %2213, -1
  %2222 = icmp ult i32 %2218, 31
  br i1 %2222, label %2258, label %2223

2223:                                             ; preds = %2211
  %2224 = and i64 %2220, 8589934560
  %2225 = sub i64 %2214, %2224
  br label %2226

2226:                                             ; preds = %2226, %2223
  %2227 = phi i64 [ 0, %2223 ], [ %2250, %2226 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2246, %2226 ]
  %2229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2247, %2226 ]
  %2230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2248, %2226 ]
  %2231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2249, %2226 ]
  %2232 = sub i64 %2214, %2227
  %2233 = getelementptr inbounds i32, ptr %9, i64 %2232
  %2234 = getelementptr inbounds i32, ptr %2233, i64 -7
  %2235 = load <8 x i32>, ptr %2234, align 4, !tbaa !6
  %2236 = shufflevector <8 x i32> %2235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2237 = getelementptr inbounds i32, ptr %2233, i64 -15
  %2238 = load <8 x i32>, ptr %2237, align 4, !tbaa !6
  %2239 = shufflevector <8 x i32> %2238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2240 = getelementptr inbounds i32, ptr %2233, i64 -23
  %2241 = load <8 x i32>, ptr %2240, align 4, !tbaa !6
  %2242 = shufflevector <8 x i32> %2241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2243 = getelementptr inbounds i32, ptr %2233, i64 -31
  %2244 = load <8 x i32>, ptr %2243, align 4, !tbaa !6
  %2245 = shufflevector <8 x i32> %2244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2246 = mul <8 x i32> %2236, %2228
  %2247 = mul <8 x i32> %2239, %2229
  %2248 = mul <8 x i32> %2242, %2230
  %2249 = mul <8 x i32> %2245, %2231
  %2250 = add nuw i64 %2227, 32
  %2251 = icmp eq i64 %2250, %2224
  br i1 %2251, label %2252, label %2226, !llvm.loop !275

2252:                                             ; preds = %2226
  %2253 = mul <8 x i32> %2247, %2246
  %2254 = mul <8 x i32> %2248, %2253
  %2255 = mul <8 x i32> %2249, %2254
  %2256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2255)
  %2257 = icmp eq i64 %2220, %2224
  br i1 %2257, label %2270, label %2258

2258:                                             ; preds = %2211, %2252
  %2259 = phi i64 [ %2214, %2211 ], [ %2225, %2252 ]
  %2260 = phi i32 [ 1, %2211 ], [ %2256, %2252 ]
  br label %2261

2261:                                             ; preds = %2258, %2261
  %2262 = phi i64 [ %2267, %2261 ], [ %2259, %2258 ]
  %2263 = phi i32 [ %2266, %2261 ], [ %2260, %2258 ]
  %2264 = getelementptr inbounds i32, ptr %9, i64 %2262
  %2265 = load i32, ptr %2264, align 4, !tbaa !6
  %2266 = mul nsw i32 %2265, %2263
  %2267 = add nsw i64 %2262, -1
  %2268 = trunc i64 %2262 to i32
  %2269 = icmp sgt i32 %2268, 0
  br i1 %2269, label %2261, label %2270, !llvm.loop !276

2270:                                             ; preds = %2261, %2252
  %2271 = phi i32 [ %2256, %2252 ], [ %2266, %2261 ]
  %2272 = and i64 %2221, 4294967295
  %2273 = getelementptr inbounds i32, ptr %6, i64 %2272
  %2274 = load i32, ptr %2273, align 4, !tbaa !6
  %2275 = mul nsw i32 %2274, %2271
  %2276 = add nsw i32 %2275, %2215
  %2277 = icmp sgt i64 %2213, 2
  %2278 = add nsw i64 %2214, -1
  %2279 = add i32 %2212, 1
  br i1 %2277, label %2211, label %2280, !llvm.loop !277

2280:                                             ; preds = %2270, %2206
  %2281 = phi i32 [ %2210, %2206 ], [ %2276, %2270 ]
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds i32, ptr %1866, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !6
  %2285 = mul i32 %2284, %2284
  %2286 = mul i32 %2285, %2285
  %2287 = trunc i32 %2286 to i16
  %2288 = add i16 %2207, %2287
  %2289 = fadd fast double %2209, 1.000000e+00
  %2290 = add nuw nsw i32 %2208, 1
  br i1 %2200, label %2291, label %2338

2291:                                             ; preds = %2280
  %2292 = load i32, ptr %4, align 4, !tbaa !6
  %2293 = load i32, ptr %12, align 4, !tbaa !6
  %2294 = add nsw i32 %2293, -1
  %2295 = icmp slt i32 %2292, %2294
  br i1 %2295, label %2315, label %2296

2296:                                             ; preds = %2291
  %2297 = icmp eq i32 %2292, %2294
  br i1 %2297, label %2298, label %2331

2298:                                             ; preds = %2296
  store i32 0, ptr %4, align 4, !tbaa !6
  %2299 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2299, ptr %6, align 4, !tbaa !6
  br i1 %2205, label %2338, label %2300

2300:                                             ; preds = %2298, %2325
  %2301 = phi i64 [ %2329, %2325 ], [ 1, %2298 ]
  %2302 = getelementptr inbounds i32, ptr %4, i64 %2301
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %12, i64 %2301
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = add nsw i32 %2305, -1
  %2307 = icmp slt i32 %2303, %2306
  br i1 %2307, label %2308, label %2323

2308:                                             ; preds = %2300
  br i1 %2295, label %2315, label %2309

2309:                                             ; preds = %2308
  %2310 = getelementptr inbounds i32, ptr %7, i64 %2301
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2301
  %2313 = load i32, ptr %2312, align 4, !tbaa !6
  %2314 = add nsw i32 %2313, %2311
  store i32 %2314, ptr %2312, align 4, !tbaa !6
  br label %2333

2315:                                             ; preds = %2291, %2308
  %2316 = phi i32 [ %2303, %2308 ], [ %2292, %2291 ]
  %2317 = phi ptr [ %2302, %2308 ], [ %4, %2291 ]
  %2318 = phi i64 [ %2301, %2308 ], [ 0, %2291 ]
  %2319 = add nsw i32 %2316, 1
  store i32 %2319, ptr %2317, align 4, !tbaa !6
  %2320 = getelementptr inbounds i32, ptr %7, i64 %2318
  %2321 = load i32, ptr %2320, align 4, !tbaa !6
  %2322 = getelementptr inbounds i32, ptr %6, i64 %2318
  br label %2333

2323:                                             ; preds = %2300
  %2324 = icmp eq i32 %2303, %2306
  br i1 %2324, label %2325, label %2331

2325:                                             ; preds = %2323
  store i32 0, ptr %2302, align 4, !tbaa !6
  %2326 = getelementptr inbounds i32, ptr %8, i64 %2301
  %2327 = load i32, ptr %2326, align 4, !tbaa !6
  %2328 = getelementptr inbounds i32, ptr %6, i64 %2301
  store i32 %2327, ptr %2328, align 4, !tbaa !6
  %2329 = add nuw nsw i64 %2301, 1
  %2330 = icmp eq i64 %2329, %2203
  br i1 %2330, label %2338, label %2300, !llvm.loop !278

2331:                                             ; preds = %2296, %2323
  store i16 %2288, ptr %1868, align 2, !tbaa !79
  %2332 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2333:                                             ; preds = %2309, %2315
  %2334 = phi ptr [ %2322, %2315 ], [ %2302, %2309 ]
  %2335 = phi i32 [ %2321, %2315 ], [ 1, %2309 ]
  %2336 = load i32, ptr %2334, align 4, !tbaa !6
  %2337 = add nsw i32 %2336, %2335
  store i32 %2337, ptr %2334, align 4, !tbaa !6
  br label %2338

2338:                                             ; preds = %2325, %2333, %2298, %2280
  %2339 = icmp eq i32 %2290, %5
  br i1 %2339, label %5538, label %2206, !llvm.loop !279

2340:                                             ; preds = %2189, %2477
  %2341 = phi i16 [ 0, %2189 ], [ %2425, %2477 ]
  %2342 = phi i32 [ 0, %2189 ], [ %2426, %2477 ]
  %2343 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2190, label %2344, label %2413

2344:                                             ; preds = %2340, %2403
  %2345 = phi i32 [ %2412, %2403 ], [ 0, %2340 ]
  %2346 = phi i64 [ %2354, %2403 ], [ %2194, %2340 ]
  %2347 = phi i64 [ %2411, %2403 ], [ %2193, %2340 ]
  %2348 = phi i32 [ %2409, %2403 ], [ %2343, %2340 ]
  %2349 = sub i32 %2192, %2345
  %2350 = tail call i32 @llvm.smin.i32(i32 %2349, i32 0)
  %2351 = sub i32 %2349, %2350
  %2352 = zext i32 %2351 to i64
  %2353 = add nuw nsw i64 %2352, 1
  %2354 = add nsw i64 %2346, -1
  %2355 = icmp ult i32 %2351, 31
  br i1 %2355, label %2391, label %2356

2356:                                             ; preds = %2344
  %2357 = and i64 %2353, 8589934560
  %2358 = sub i64 %2347, %2357
  br label %2359

2359:                                             ; preds = %2359, %2356
  %2360 = phi i64 [ 0, %2356 ], [ %2383, %2359 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2379, %2359 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2380, %2359 ]
  %2363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2381, %2359 ]
  %2364 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2382, %2359 ]
  %2365 = sub i64 %2347, %2360
  %2366 = getelementptr inbounds i32, ptr %11, i64 %2365
  %2367 = getelementptr inbounds i32, ptr %2366, i64 -7
  %2368 = load <8 x i32>, ptr %2367, align 4, !tbaa !6
  %2369 = shufflevector <8 x i32> %2368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2370 = getelementptr inbounds i32, ptr %2366, i64 -15
  %2371 = load <8 x i32>, ptr %2370, align 4, !tbaa !6
  %2372 = shufflevector <8 x i32> %2371, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2373 = getelementptr inbounds i32, ptr %2366, i64 -23
  %2374 = load <8 x i32>, ptr %2373, align 4, !tbaa !6
  %2375 = shufflevector <8 x i32> %2374, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2376 = getelementptr inbounds i32, ptr %2366, i64 -31
  %2377 = load <8 x i32>, ptr %2376, align 4, !tbaa !6
  %2378 = shufflevector <8 x i32> %2377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2379 = mul <8 x i32> %2369, %2361
  %2380 = mul <8 x i32> %2372, %2362
  %2381 = mul <8 x i32> %2375, %2363
  %2382 = mul <8 x i32> %2378, %2364
  %2383 = add nuw i64 %2360, 32
  %2384 = icmp eq i64 %2383, %2357
  br i1 %2384, label %2385, label %2359, !llvm.loop !280

2385:                                             ; preds = %2359
  %2386 = mul <8 x i32> %2380, %2379
  %2387 = mul <8 x i32> %2381, %2386
  %2388 = mul <8 x i32> %2382, %2387
  %2389 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2388)
  %2390 = icmp eq i64 %2353, %2357
  br i1 %2390, label %2403, label %2391

2391:                                             ; preds = %2344, %2385
  %2392 = phi i64 [ %2347, %2344 ], [ %2358, %2385 ]
  %2393 = phi i32 [ 1, %2344 ], [ %2389, %2385 ]
  br label %2394

2394:                                             ; preds = %2391, %2394
  %2395 = phi i64 [ %2400, %2394 ], [ %2392, %2391 ]
  %2396 = phi i32 [ %2399, %2394 ], [ %2393, %2391 ]
  %2397 = getelementptr inbounds i32, ptr %11, i64 %2395
  %2398 = load i32, ptr %2397, align 4, !tbaa !6
  %2399 = mul nsw i32 %2398, %2396
  %2400 = add nsw i64 %2395, -1
  %2401 = trunc i64 %2395 to i32
  %2402 = icmp sgt i32 %2401, 0
  br i1 %2402, label %2394, label %2403, !llvm.loop !281

2403:                                             ; preds = %2394, %2385
  %2404 = phi i32 [ %2389, %2385 ], [ %2399, %2394 ]
  %2405 = and i64 %2354, 4294967295
  %2406 = getelementptr inbounds i32, ptr %6, i64 %2405
  %2407 = load i32, ptr %2406, align 4, !tbaa !6
  %2408 = mul nsw i32 %2407, %2404
  %2409 = add nsw i32 %2408, %2348
  %2410 = icmp sgt i64 %2346, 2
  %2411 = add nsw i64 %2347, -1
  %2412 = add i32 %2345, 1
  br i1 %2410, label %2344, label %2413, !llvm.loop !282

2413:                                             ; preds = %2403, %2340
  %2414 = phi i32 [ %2343, %2340 ], [ %2409, %2403 ]
  %2415 = icmp slt i32 %2414, %5
  br i1 %2415, label %2418, label %2416

2416:                                             ; preds = %2413
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2418:                                             ; preds = %2413
  %2419 = sext i32 %2414 to i64
  %2420 = getelementptr inbounds i32, ptr %1866, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !6
  %2422 = mul i32 %2421, %2421
  %2423 = mul i32 %2422, %2422
  %2424 = trunc i32 %2423 to i16
  %2425 = add i16 %2341, %2424
  store i16 %2425, ptr %1868, align 2, !tbaa !79
  %2426 = add nuw nsw i32 %2342, 1
  br i1 %2191, label %2427, label %2477

2427:                                             ; preds = %2418
  %2428 = load i32, ptr %4, align 4, !tbaa !6
  %2429 = load i32, ptr %12, align 4, !tbaa !6
  %2430 = add nsw i32 %2429, -1
  %2431 = icmp slt i32 %2428, %2430
  br i1 %2431, label %2454, label %2432

2432:                                             ; preds = %2427
  %2433 = icmp eq i32 %2428, %2430
  br i1 %2433, label %2434, label %2470

2434:                                             ; preds = %2432
  store i32 0, ptr %4, align 4, !tbaa !6
  %2435 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2435, ptr %6, align 4, !tbaa !6
  br i1 %2196, label %2477, label %2436

2436:                                             ; preds = %2434, %2464
  %2437 = phi i64 [ %2468, %2464 ], [ 1, %2434 ]
  %2438 = getelementptr inbounds i32, ptr %4, i64 %2437
  %2439 = load i32, ptr %2438, align 4, !tbaa !6
  %2440 = getelementptr inbounds i32, ptr %12, i64 %2437
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = add nsw i32 %2441, -1
  %2443 = icmp slt i32 %2439, %2442
  br i1 %2443, label %2444, label %2462

2444:                                             ; preds = %2436
  br i1 %2431, label %2454, label %2445

2445:                                             ; preds = %2444
  %2446 = shl i64 %2437, 32
  %2447 = add i64 %2446, -4294967296
  %2448 = ashr exact i64 %2447, 32
  %2449 = getelementptr inbounds i32, ptr %7, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = getelementptr inbounds i32, ptr %6, i64 %2437
  %2452 = load i32, ptr %2451, align 4, !tbaa !6
  %2453 = add nsw i32 %2452, %2450
  store i32 %2453, ptr %2451, align 4, !tbaa !6
  br label %2472

2454:                                             ; preds = %2427, %2444
  %2455 = phi i32 [ %2439, %2444 ], [ %2428, %2427 ]
  %2456 = phi ptr [ %2438, %2444 ], [ %4, %2427 ]
  %2457 = phi i64 [ %2437, %2444 ], [ 0, %2427 ]
  %2458 = add nsw i32 %2455, 1
  store i32 %2458, ptr %2456, align 4, !tbaa !6
  %2459 = getelementptr inbounds i32, ptr %7, i64 %2457
  %2460 = load i32, ptr %2459, align 4, !tbaa !6
  %2461 = getelementptr inbounds i32, ptr %6, i64 %2457
  br label %2472

2462:                                             ; preds = %2436
  %2463 = icmp eq i32 %2439, %2442
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2462
  store i32 0, ptr %2438, align 4, !tbaa !6
  %2465 = getelementptr inbounds i32, ptr %8, i64 %2437
  %2466 = load i32, ptr %2465, align 4, !tbaa !6
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2437
  store i32 %2466, ptr %2467, align 4, !tbaa !6
  %2468 = add nuw nsw i64 %2437, 1
  %2469 = icmp eq i64 %2468, %2194
  br i1 %2469, label %2477, label %2436, !llvm.loop !283

2470:                                             ; preds = %2432, %2462
  %2471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2472:                                             ; preds = %2445, %2454
  %2473 = phi ptr [ %2461, %2454 ], [ %2438, %2445 ]
  %2474 = phi i32 [ %2460, %2454 ], [ 1, %2445 ]
  %2475 = load i32, ptr %2473, align 4, !tbaa !6
  %2476 = add nsw i32 %2475, %2474
  store i32 %2476, ptr %2473, align 4, !tbaa !6
  br label %2477

2477:                                             ; preds = %2464, %2472, %2434, %2418
  %2478 = icmp eq i32 %2426, %5
  br i1 %2478, label %5545, label %2340, !llvm.loop !284

2479:                                             ; preds = %1875
  %2480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

2481:                                             ; preds = %18
  %2482 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2483 = load ptr, ptr %2482, align 8, !tbaa !10
  %2484 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2485 = load ptr, ptr %2484, align 8, !tbaa !10
  store i32 0, ptr %2485, align 4, !tbaa !6
  %2486 = icmp eq i32 %13, 0
  br i1 %2486, label %2487, label %2491

2487:                                             ; preds = %2481
  %2488 = load i32, ptr %2483, align 4, !tbaa !6
  %2489 = mul i32 %2488, %2488
  %2490 = mul i32 %2489, %2489
  store i32 %2490, ptr %2485, align 4, !tbaa !6
  br label %5545

2491:                                             ; preds = %2481
  switch i32 %1, label %3089 [
    i32 1, label %2492
    i32 0, label %2795
  ]

2492:                                             ; preds = %2491
  %2493 = getelementptr inbounds i32, ptr %3, i64 %19
  %2494 = load i32, ptr %2493, align 4, !tbaa !6
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp sgt i32 %5, 0
  br i1 %2495, label %2506, label %2497

2497:                                             ; preds = %2492
  br i1 %2496, label %2498, label %5545

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2654

2506:                                             ; preds = %2492
  br i1 %2496, label %2507, label %5545

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2515

2515:                                             ; preds = %2507, %2652
  %2516 = phi i32 [ 0, %2507 ], [ %2604, %2652 ]
  %2517 = phi double [ 0.000000e+00, %2507 ], [ %2603, %2652 ]
  %2518 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2519, label %2588

2519:                                             ; preds = %2515, %2578
  %2520 = phi i32 [ %2587, %2578 ], [ 0, %2515 ]
  %2521 = phi i64 [ %2529, %2578 ], [ %2512, %2515 ]
  %2522 = phi i64 [ %2586, %2578 ], [ %2511, %2515 ]
  %2523 = phi i32 [ %2584, %2578 ], [ %2518, %2515 ]
  %2524 = sub i32 %2510, %2520
  %2525 = tail call i32 @llvm.smin.i32(i32 %2524, i32 0)
  %2526 = sub i32 %2524, %2525
  %2527 = zext i32 %2526 to i64
  %2528 = add nuw nsw i64 %2527, 1
  %2529 = add nsw i64 %2521, -1
  %2530 = icmp ult i32 %2526, 31
  br i1 %2530, label %2566, label %2531

2531:                                             ; preds = %2519
  %2532 = and i64 %2528, 8589934560
  %2533 = sub i64 %2522, %2532
  br label %2534

2534:                                             ; preds = %2534, %2531
  %2535 = phi i64 [ 0, %2531 ], [ %2558, %2534 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2554, %2534 ]
  %2537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2555, %2534 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2556, %2534 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2557, %2534 ]
  %2540 = sub i64 %2522, %2535
  %2541 = getelementptr inbounds i32, ptr %9, i64 %2540
  %2542 = getelementptr inbounds i32, ptr %2541, i64 -7
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2541, i64 -15
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2541, i64 -23
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = getelementptr inbounds i32, ptr %2541, i64 -31
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = mul <8 x i32> %2544, %2536
  %2555 = mul <8 x i32> %2547, %2537
  %2556 = mul <8 x i32> %2550, %2538
  %2557 = mul <8 x i32> %2553, %2539
  %2558 = add nuw i64 %2535, 32
  %2559 = icmp eq i64 %2558, %2532
  br i1 %2559, label %2560, label %2534, !llvm.loop !285

2560:                                             ; preds = %2534
  %2561 = mul <8 x i32> %2555, %2554
  %2562 = mul <8 x i32> %2556, %2561
  %2563 = mul <8 x i32> %2557, %2562
  %2564 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2563)
  %2565 = icmp eq i64 %2528, %2532
  br i1 %2565, label %2578, label %2566

2566:                                             ; preds = %2519, %2560
  %2567 = phi i64 [ %2522, %2519 ], [ %2533, %2560 ]
  %2568 = phi i32 [ 1, %2519 ], [ %2564, %2560 ]
  br label %2569

2569:                                             ; preds = %2566, %2569
  %2570 = phi i64 [ %2575, %2569 ], [ %2567, %2566 ]
  %2571 = phi i32 [ %2574, %2569 ], [ %2568, %2566 ]
  %2572 = getelementptr inbounds i32, ptr %9, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2571
  %2575 = add nsw i64 %2570, -1
  %2576 = trunc i64 %2570 to i32
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2569, label %2578, !llvm.loop !286

2578:                                             ; preds = %2569, %2560
  %2579 = phi i32 [ %2564, %2560 ], [ %2574, %2569 ]
  %2580 = and i64 %2529, 4294967295
  %2581 = getelementptr inbounds i32, ptr %6, i64 %2580
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2579
  %2584 = add nsw i32 %2583, %2523
  %2585 = icmp sgt i64 %2521, 2
  %2586 = add nsw i64 %2522, -1
  %2587 = add i32 %2520, 1
  br i1 %2585, label %2519, label %2588, !llvm.loop !287

2588:                                             ; preds = %2578, %2515
  %2589 = phi i32 [ %2518, %2515 ], [ %2584, %2578 ]
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds double, ptr %2, i64 %2590
  %2592 = load double, ptr %2591, align 8, !tbaa !19
  %2593 = getelementptr inbounds i32, ptr %2483, i64 %2590
  %2594 = load i32, ptr %2593, align 4, !tbaa !6
  %2595 = load i32, ptr %2485, align 4, !tbaa !6
  %2596 = sitofp i32 %2595 to double
  %2597 = sitofp i32 %2594 to double
  %2598 = fmul fast double %2592, %2597
  %2599 = fmul fast double %2598, %2598
  %2600 = fmul fast double %2599, %2599
  %2601 = fadd fast double %2600, %2596
  %2602 = fptosi double %2601 to i32
  store i32 %2602, ptr %2485, align 4, !tbaa !6
  %2603 = fadd fast double %2592, %2517
  %2604 = add nuw nsw i32 %2516, 1
  br i1 %2509, label %2605, label %2652

2605:                                             ; preds = %2588
  %2606 = load i32, ptr %4, align 4, !tbaa !6
  %2607 = load i32, ptr %12, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, -1
  %2609 = icmp slt i32 %2606, %2608
  br i1 %2609, label %2629, label %2610

2610:                                             ; preds = %2605
  %2611 = icmp eq i32 %2606, %2608
  br i1 %2611, label %2612, label %2645

2612:                                             ; preds = %2610
  store i32 0, ptr %4, align 4, !tbaa !6
  %2613 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2613, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2652, label %2614

2614:                                             ; preds = %2612, %2639
  %2615 = phi i64 [ %2643, %2639 ], [ 1, %2612 ]
  %2616 = getelementptr inbounds i32, ptr %4, i64 %2615
  %2617 = load i32, ptr %2616, align 4, !tbaa !6
  %2618 = getelementptr inbounds i32, ptr %12, i64 %2615
  %2619 = load i32, ptr %2618, align 4, !tbaa !6
  %2620 = add nsw i32 %2619, -1
  %2621 = icmp slt i32 %2617, %2620
  br i1 %2621, label %2622, label %2637

2622:                                             ; preds = %2614
  br i1 %2609, label %2629, label %2623

2623:                                             ; preds = %2622
  %2624 = getelementptr inbounds i32, ptr %7, i64 %2615
  %2625 = load i32, ptr %2624, align 4, !tbaa !6
  %2626 = getelementptr inbounds i32, ptr %6, i64 %2615
  %2627 = load i32, ptr %2626, align 4, !tbaa !6
  %2628 = add nsw i32 %2627, %2625
  store i32 %2628, ptr %2626, align 4, !tbaa !6
  br label %2647

2629:                                             ; preds = %2605, %2622
  %2630 = phi i32 [ %2617, %2622 ], [ %2606, %2605 ]
  %2631 = phi ptr [ %2616, %2622 ], [ %4, %2605 ]
  %2632 = phi i64 [ %2615, %2622 ], [ 0, %2605 ]
  %2633 = add nsw i32 %2630, 1
  store i32 %2633, ptr %2631, align 4, !tbaa !6
  %2634 = getelementptr inbounds i32, ptr %7, i64 %2632
  %2635 = load i32, ptr %2634, align 4, !tbaa !6
  %2636 = getelementptr inbounds i32, ptr %6, i64 %2632
  br label %2647

2637:                                             ; preds = %2614
  %2638 = icmp eq i32 %2617, %2620
  br i1 %2638, label %2639, label %2645

2639:                                             ; preds = %2637
  store i32 0, ptr %2616, align 4, !tbaa !6
  %2640 = getelementptr inbounds i32, ptr %8, i64 %2615
  %2641 = load i32, ptr %2640, align 4, !tbaa !6
  %2642 = getelementptr inbounds i32, ptr %6, i64 %2615
  store i32 %2641, ptr %2642, align 4, !tbaa !6
  %2643 = add nuw nsw i64 %2615, 1
  %2644 = icmp eq i64 %2643, %2512
  br i1 %2644, label %2652, label %2614, !llvm.loop !288

2645:                                             ; preds = %2610, %2637
  %2646 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2647:                                             ; preds = %2623, %2629
  %2648 = phi ptr [ %2636, %2629 ], [ %2616, %2623 ]
  %2649 = phi i32 [ %2635, %2629 ], [ 1, %2623 ]
  %2650 = load i32, ptr %2648, align 4, !tbaa !6
  %2651 = add nsw i32 %2650, %2649
  store i32 %2651, ptr %2648, align 4, !tbaa !6
  br label %2652

2652:                                             ; preds = %2639, %2647, %2612, %2588
  %2653 = icmp eq i32 %2604, %5
  br i1 %2653, label %5545, label %2515, !llvm.loop !289

2654:                                             ; preds = %2498, %2793
  %2655 = phi i32 [ 0, %2498 ], [ %2742, %2793 ]
  %2656 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2657, label %2726

2657:                                             ; preds = %2654, %2716
  %2658 = phi i32 [ %2725, %2716 ], [ 0, %2654 ]
  %2659 = phi i64 [ %2667, %2716 ], [ %2503, %2654 ]
  %2660 = phi i64 [ %2724, %2716 ], [ %2502, %2654 ]
  %2661 = phi i32 [ %2722, %2716 ], [ %2656, %2654 ]
  %2662 = sub i32 %2501, %2658
  %2663 = tail call i32 @llvm.smin.i32(i32 %2662, i32 0)
  %2664 = sub i32 %2662, %2663
  %2665 = zext i32 %2664 to i64
  %2666 = add nuw nsw i64 %2665, 1
  %2667 = add nsw i64 %2659, -1
  %2668 = icmp ult i32 %2664, 31
  br i1 %2668, label %2704, label %2669

2669:                                             ; preds = %2657
  %2670 = and i64 %2666, 8589934560
  %2671 = sub i64 %2660, %2670
  br label %2672

2672:                                             ; preds = %2672, %2669
  %2673 = phi i64 [ 0, %2669 ], [ %2696, %2672 ]
  %2674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2692, %2672 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2693, %2672 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2694, %2672 ]
  %2677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2695, %2672 ]
  %2678 = sub i64 %2660, %2673
  %2679 = getelementptr inbounds i32, ptr %11, i64 %2678
  %2680 = getelementptr inbounds i32, ptr %2679, i64 -7
  %2681 = load <8 x i32>, ptr %2680, align 4, !tbaa !6
  %2682 = shufflevector <8 x i32> %2681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2683 = getelementptr inbounds i32, ptr %2679, i64 -15
  %2684 = load <8 x i32>, ptr %2683, align 4, !tbaa !6
  %2685 = shufflevector <8 x i32> %2684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2686 = getelementptr inbounds i32, ptr %2679, i64 -23
  %2687 = load <8 x i32>, ptr %2686, align 4, !tbaa !6
  %2688 = shufflevector <8 x i32> %2687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2689 = getelementptr inbounds i32, ptr %2679, i64 -31
  %2690 = load <8 x i32>, ptr %2689, align 4, !tbaa !6
  %2691 = shufflevector <8 x i32> %2690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2692 = mul <8 x i32> %2682, %2674
  %2693 = mul <8 x i32> %2685, %2675
  %2694 = mul <8 x i32> %2688, %2676
  %2695 = mul <8 x i32> %2691, %2677
  %2696 = add nuw i64 %2673, 32
  %2697 = icmp eq i64 %2696, %2670
  br i1 %2697, label %2698, label %2672, !llvm.loop !290

2698:                                             ; preds = %2672
  %2699 = mul <8 x i32> %2693, %2692
  %2700 = mul <8 x i32> %2694, %2699
  %2701 = mul <8 x i32> %2695, %2700
  %2702 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2701)
  %2703 = icmp eq i64 %2666, %2670
  br i1 %2703, label %2716, label %2704

2704:                                             ; preds = %2657, %2698
  %2705 = phi i64 [ %2660, %2657 ], [ %2671, %2698 ]
  %2706 = phi i32 [ 1, %2657 ], [ %2702, %2698 ]
  br label %2707

2707:                                             ; preds = %2704, %2707
  %2708 = phi i64 [ %2713, %2707 ], [ %2705, %2704 ]
  %2709 = phi i32 [ %2712, %2707 ], [ %2706, %2704 ]
  %2710 = getelementptr inbounds i32, ptr %11, i64 %2708
  %2711 = load i32, ptr %2710, align 4, !tbaa !6
  %2712 = mul nsw i32 %2711, %2709
  %2713 = add nsw i64 %2708, -1
  %2714 = trunc i64 %2708 to i32
  %2715 = icmp sgt i32 %2714, 0
  br i1 %2715, label %2707, label %2716, !llvm.loop !291

2716:                                             ; preds = %2707, %2698
  %2717 = phi i32 [ %2702, %2698 ], [ %2712, %2707 ]
  %2718 = and i64 %2667, 4294967295
  %2719 = getelementptr inbounds i32, ptr %6, i64 %2718
  %2720 = load i32, ptr %2719, align 4, !tbaa !6
  %2721 = mul nsw i32 %2720, %2717
  %2722 = add nsw i32 %2721, %2661
  %2723 = icmp sgt i64 %2659, 2
  %2724 = add nsw i64 %2660, -1
  %2725 = add i32 %2658, 1
  br i1 %2723, label %2657, label %2726, !llvm.loop !292

2726:                                             ; preds = %2716, %2654
  %2727 = phi i32 [ %2656, %2654 ], [ %2722, %2716 ]
  %2728 = icmp slt i32 %2727, %5
  br i1 %2728, label %2731, label %2729

2729:                                             ; preds = %2726
  %2730 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2731:                                             ; preds = %2726
  %2732 = sext i32 %2727 to i64
  %2733 = getelementptr inbounds i32, ptr %2483, i64 %2732
  %2734 = load i32, ptr %2733, align 4, !tbaa !6
  %2735 = load i32, ptr %2485, align 4, !tbaa !6
  %2736 = sitofp i32 %2735 to double
  %2737 = sitofp i32 %2734 to double
  %2738 = fmul fast double %2737, %2737
  %2739 = fmul fast double %2738, %2738
  %2740 = fadd fast double %2739, %2736
  %2741 = fptosi double %2740 to i32
  store i32 %2741, ptr %2485, align 4, !tbaa !6
  %2742 = add nuw nsw i32 %2655, 1
  br i1 %2500, label %2743, label %2793

2743:                                             ; preds = %2731
  %2744 = load i32, ptr %4, align 4, !tbaa !6
  %2745 = load i32, ptr %12, align 4, !tbaa !6
  %2746 = add nsw i32 %2745, -1
  %2747 = icmp slt i32 %2744, %2746
  br i1 %2747, label %2770, label %2748

2748:                                             ; preds = %2743
  %2749 = icmp eq i32 %2744, %2746
  br i1 %2749, label %2750, label %2786

2750:                                             ; preds = %2748
  store i32 0, ptr %4, align 4, !tbaa !6
  %2751 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2751, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2793, label %2752

2752:                                             ; preds = %2750, %2780
  %2753 = phi i64 [ %2784, %2780 ], [ 1, %2750 ]
  %2754 = getelementptr inbounds i32, ptr %4, i64 %2753
  %2755 = load i32, ptr %2754, align 4, !tbaa !6
  %2756 = getelementptr inbounds i32, ptr %12, i64 %2753
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = add nsw i32 %2757, -1
  %2759 = icmp slt i32 %2755, %2758
  br i1 %2759, label %2760, label %2778

2760:                                             ; preds = %2752
  br i1 %2747, label %2770, label %2761

2761:                                             ; preds = %2760
  %2762 = shl i64 %2753, 32
  %2763 = add i64 %2762, -4294967296
  %2764 = ashr exact i64 %2763, 32
  %2765 = getelementptr inbounds i32, ptr %7, i64 %2764
  %2766 = load i32, ptr %2765, align 4, !tbaa !6
  %2767 = getelementptr inbounds i32, ptr %6, i64 %2753
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, %2766
  store i32 %2769, ptr %2767, align 4, !tbaa !6
  br label %2788

2770:                                             ; preds = %2743, %2760
  %2771 = phi i32 [ %2755, %2760 ], [ %2744, %2743 ]
  %2772 = phi ptr [ %2754, %2760 ], [ %4, %2743 ]
  %2773 = phi i64 [ %2753, %2760 ], [ 0, %2743 ]
  %2774 = add nsw i32 %2771, 1
  store i32 %2774, ptr %2772, align 4, !tbaa !6
  %2775 = getelementptr inbounds i32, ptr %7, i64 %2773
  %2776 = load i32, ptr %2775, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %6, i64 %2773
  br label %2788

2778:                                             ; preds = %2752
  %2779 = icmp eq i32 %2755, %2758
  br i1 %2779, label %2780, label %2786

2780:                                             ; preds = %2778
  store i32 0, ptr %2754, align 4, !tbaa !6
  %2781 = getelementptr inbounds i32, ptr %8, i64 %2753
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = getelementptr inbounds i32, ptr %6, i64 %2753
  store i32 %2782, ptr %2783, align 4, !tbaa !6
  %2784 = add nuw nsw i64 %2753, 1
  %2785 = icmp eq i64 %2784, %2503
  br i1 %2785, label %2793, label %2752, !llvm.loop !293

2786:                                             ; preds = %2748, %2778
  %2787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2788:                                             ; preds = %2761, %2770
  %2789 = phi ptr [ %2777, %2770 ], [ %2754, %2761 ]
  %2790 = phi i32 [ %2776, %2770 ], [ 1, %2761 ]
  %2791 = load i32, ptr %2789, align 4, !tbaa !6
  %2792 = add nsw i32 %2791, %2790
  store i32 %2792, ptr %2789, align 4, !tbaa !6
  br label %2793

2793:                                             ; preds = %2780, %2788, %2750, %2731
  %2794 = icmp eq i32 %2742, %5
  br i1 %2794, label %5545, label %2654, !llvm.loop !294

2795:                                             ; preds = %2491
  %2796 = getelementptr inbounds i32, ptr %3, i64 %19
  %2797 = load i32, ptr %2796, align 4, !tbaa !6
  %2798 = icmp eq i32 %2797, 0
  %2799 = icmp sgt i32 %5, 0
  br i1 %2798, label %2809, label %2800

2800:                                             ; preds = %2795
  br i1 %2799, label %2801, label %5545

2801:                                             ; preds = %2800
  %2802 = icmp sgt i32 %13, 1
  %2803 = icmp sgt i32 %13, 0
  %2804 = add i32 %13, -2
  %2805 = zext i32 %2804 to i64
  %2806 = zext i32 %13 to i64
  %2807 = add nuw i32 %5, 1
  %2808 = icmp eq i32 %13, 1
  br label %2951

2809:                                             ; preds = %2795
  br i1 %2799, label %2810, label %5545

2810:                                             ; preds = %2809
  %2811 = icmp sgt i32 %13, 1
  %2812 = icmp sgt i32 %13, 0
  %2813 = add i32 %13, -2
  %2814 = zext i32 %2813 to i64
  %2815 = zext i32 %13 to i64
  %2816 = add nuw i32 %5, 1
  %2817 = icmp eq i32 %13, 1
  br label %2818

2818:                                             ; preds = %2810, %2949
  %2819 = phi i32 [ 0, %2810 ], [ %2901, %2949 ]
  %2820 = phi double [ 0.000000e+00, %2810 ], [ %2900, %2949 ]
  %2821 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2811, label %2822, label %2891

2822:                                             ; preds = %2818, %2881
  %2823 = phi i32 [ %2890, %2881 ], [ 0, %2818 ]
  %2824 = phi i64 [ %2832, %2881 ], [ %2815, %2818 ]
  %2825 = phi i64 [ %2889, %2881 ], [ %2814, %2818 ]
  %2826 = phi i32 [ %2887, %2881 ], [ %2821, %2818 ]
  %2827 = sub i32 %2813, %2823
  %2828 = tail call i32 @llvm.smin.i32(i32 %2827, i32 0)
  %2829 = sub i32 %2827, %2828
  %2830 = zext i32 %2829 to i64
  %2831 = add nuw nsw i64 %2830, 1
  %2832 = add nsw i64 %2824, -1
  %2833 = icmp ult i32 %2829, 31
  br i1 %2833, label %2869, label %2834

2834:                                             ; preds = %2822
  %2835 = and i64 %2831, 8589934560
  %2836 = sub i64 %2825, %2835
  br label %2837

2837:                                             ; preds = %2837, %2834
  %2838 = phi i64 [ 0, %2834 ], [ %2861, %2837 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2857, %2837 ]
  %2840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2858, %2837 ]
  %2841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2859, %2837 ]
  %2842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2860, %2837 ]
  %2843 = sub i64 %2825, %2838
  %2844 = getelementptr inbounds i32, ptr %9, i64 %2843
  %2845 = getelementptr inbounds i32, ptr %2844, i64 -7
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2844, i64 -15
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2844, i64 -23
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = getelementptr inbounds i32, ptr %2844, i64 -31
  %2855 = load <8 x i32>, ptr %2854, align 4, !tbaa !6
  %2856 = shufflevector <8 x i32> %2855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2857 = mul <8 x i32> %2847, %2839
  %2858 = mul <8 x i32> %2850, %2840
  %2859 = mul <8 x i32> %2853, %2841
  %2860 = mul <8 x i32> %2856, %2842
  %2861 = add nuw i64 %2838, 32
  %2862 = icmp eq i64 %2861, %2835
  br i1 %2862, label %2863, label %2837, !llvm.loop !295

2863:                                             ; preds = %2837
  %2864 = mul <8 x i32> %2858, %2857
  %2865 = mul <8 x i32> %2859, %2864
  %2866 = mul <8 x i32> %2860, %2865
  %2867 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2866)
  %2868 = icmp eq i64 %2831, %2835
  br i1 %2868, label %2881, label %2869

2869:                                             ; preds = %2822, %2863
  %2870 = phi i64 [ %2825, %2822 ], [ %2836, %2863 ]
  %2871 = phi i32 [ 1, %2822 ], [ %2867, %2863 ]
  br label %2872

2872:                                             ; preds = %2869, %2872
  %2873 = phi i64 [ %2878, %2872 ], [ %2870, %2869 ]
  %2874 = phi i32 [ %2877, %2872 ], [ %2871, %2869 ]
  %2875 = getelementptr inbounds i32, ptr %9, i64 %2873
  %2876 = load i32, ptr %2875, align 4, !tbaa !6
  %2877 = mul nsw i32 %2876, %2874
  %2878 = add nsw i64 %2873, -1
  %2879 = trunc i64 %2873 to i32
  %2880 = icmp sgt i32 %2879, 0
  br i1 %2880, label %2872, label %2881, !llvm.loop !296

2881:                                             ; preds = %2872, %2863
  %2882 = phi i32 [ %2867, %2863 ], [ %2877, %2872 ]
  %2883 = and i64 %2832, 4294967295
  %2884 = getelementptr inbounds i32, ptr %6, i64 %2883
  %2885 = load i32, ptr %2884, align 4, !tbaa !6
  %2886 = mul nsw i32 %2885, %2882
  %2887 = add nsw i32 %2886, %2826
  %2888 = icmp sgt i64 %2824, 2
  %2889 = add nsw i64 %2825, -1
  %2890 = add i32 %2823, 1
  br i1 %2888, label %2822, label %2891, !llvm.loop !297

2891:                                             ; preds = %2881, %2818
  %2892 = phi i32 [ %2821, %2818 ], [ %2887, %2881 ]
  %2893 = sext i32 %2892 to i64
  %2894 = getelementptr inbounds i32, ptr %2483, i64 %2893
  %2895 = load i32, ptr %2894, align 4, !tbaa !6
  %2896 = load i32, ptr %2485, align 4, !tbaa !6
  %2897 = mul i32 %2895, %2895
  %2898 = mul i32 %2897, %2897
  %2899 = add nsw i32 %2898, %2896
  store i32 %2899, ptr %2485, align 4, !tbaa !6
  %2900 = fadd fast double %2820, 1.000000e+00
  %2901 = add nuw nsw i32 %2819, 1
  br i1 %2812, label %2902, label %2949

2902:                                             ; preds = %2891
  %2903 = load i32, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %12, align 4, !tbaa !6
  %2905 = add nsw i32 %2904, -1
  %2906 = icmp slt i32 %2903, %2905
  br i1 %2906, label %2926, label %2907

2907:                                             ; preds = %2902
  %2908 = icmp eq i32 %2903, %2905
  br i1 %2908, label %2909, label %2942

2909:                                             ; preds = %2907
  store i32 0, ptr %4, align 4, !tbaa !6
  %2910 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2910, ptr %6, align 4, !tbaa !6
  br i1 %2817, label %2949, label %2911

2911:                                             ; preds = %2909, %2936
  %2912 = phi i64 [ %2940, %2936 ], [ 1, %2909 ]
  %2913 = getelementptr inbounds i32, ptr %4, i64 %2912
  %2914 = load i32, ptr %2913, align 4, !tbaa !6
  %2915 = getelementptr inbounds i32, ptr %12, i64 %2912
  %2916 = load i32, ptr %2915, align 4, !tbaa !6
  %2917 = add nsw i32 %2916, -1
  %2918 = icmp slt i32 %2914, %2917
  br i1 %2918, label %2919, label %2934

2919:                                             ; preds = %2911
  br i1 %2906, label %2926, label %2920

2920:                                             ; preds = %2919
  %2921 = getelementptr inbounds i32, ptr %7, i64 %2912
  %2922 = load i32, ptr %2921, align 4, !tbaa !6
  %2923 = getelementptr inbounds i32, ptr %6, i64 %2912
  %2924 = load i32, ptr %2923, align 4, !tbaa !6
  %2925 = add nsw i32 %2924, %2922
  store i32 %2925, ptr %2923, align 4, !tbaa !6
  br label %2944

2926:                                             ; preds = %2902, %2919
  %2927 = phi i32 [ %2914, %2919 ], [ %2903, %2902 ]
  %2928 = phi ptr [ %2913, %2919 ], [ %4, %2902 ]
  %2929 = phi i64 [ %2912, %2919 ], [ 0, %2902 ]
  %2930 = add nsw i32 %2927, 1
  store i32 %2930, ptr %2928, align 4, !tbaa !6
  %2931 = getelementptr inbounds i32, ptr %7, i64 %2929
  %2932 = load i32, ptr %2931, align 4, !tbaa !6
  %2933 = getelementptr inbounds i32, ptr %6, i64 %2929
  br label %2944

2934:                                             ; preds = %2911
  %2935 = icmp eq i32 %2914, %2917
  br i1 %2935, label %2936, label %2942

2936:                                             ; preds = %2934
  store i32 0, ptr %2913, align 4, !tbaa !6
  %2937 = getelementptr inbounds i32, ptr %8, i64 %2912
  %2938 = load i32, ptr %2937, align 4, !tbaa !6
  %2939 = getelementptr inbounds i32, ptr %6, i64 %2912
  store i32 %2938, ptr %2939, align 4, !tbaa !6
  %2940 = add nuw nsw i64 %2912, 1
  %2941 = icmp eq i64 %2940, %2815
  br i1 %2941, label %2949, label %2911, !llvm.loop !298

2942:                                             ; preds = %2907, %2934
  %2943 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2944:                                             ; preds = %2920, %2926
  %2945 = phi ptr [ %2933, %2926 ], [ %2913, %2920 ]
  %2946 = phi i32 [ %2932, %2926 ], [ 1, %2920 ]
  %2947 = load i32, ptr %2945, align 4, !tbaa !6
  %2948 = add nsw i32 %2947, %2946
  store i32 %2948, ptr %2945, align 4, !tbaa !6
  br label %2949

2949:                                             ; preds = %2936, %2944, %2909, %2891
  %2950 = icmp eq i32 %2901, %5
  br i1 %2950, label %5545, label %2818, !llvm.loop !299

2951:                                             ; preds = %2801, %3087
  %2952 = phi i32 [ 0, %2801 ], [ %3036, %3087 ]
  %2953 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2802, label %2954, label %3023

2954:                                             ; preds = %2951, %3013
  %2955 = phi i32 [ %3022, %3013 ], [ 0, %2951 ]
  %2956 = phi i64 [ %2964, %3013 ], [ %2806, %2951 ]
  %2957 = phi i64 [ %3021, %3013 ], [ %2805, %2951 ]
  %2958 = phi i32 [ %3019, %3013 ], [ %2953, %2951 ]
  %2959 = sub i32 %2804, %2955
  %2960 = tail call i32 @llvm.smin.i32(i32 %2959, i32 0)
  %2961 = sub i32 %2959, %2960
  %2962 = zext i32 %2961 to i64
  %2963 = add nuw nsw i64 %2962, 1
  %2964 = add nsw i64 %2956, -1
  %2965 = icmp ult i32 %2961, 31
  br i1 %2965, label %3001, label %2966

2966:                                             ; preds = %2954
  %2967 = and i64 %2963, 8589934560
  %2968 = sub i64 %2957, %2967
  br label %2969

2969:                                             ; preds = %2969, %2966
  %2970 = phi i64 [ 0, %2966 ], [ %2993, %2969 ]
  %2971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2989, %2969 ]
  %2972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2990, %2969 ]
  %2973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2991, %2969 ]
  %2974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2992, %2969 ]
  %2975 = sub i64 %2957, %2970
  %2976 = getelementptr inbounds i32, ptr %11, i64 %2975
  %2977 = getelementptr inbounds i32, ptr %2976, i64 -7
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !6
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = getelementptr inbounds i32, ptr %2976, i64 -15
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !6
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = getelementptr inbounds i32, ptr %2976, i64 -23
  %2984 = load <8 x i32>, ptr %2983, align 4, !tbaa !6
  %2985 = shufflevector <8 x i32> %2984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2986 = getelementptr inbounds i32, ptr %2976, i64 -31
  %2987 = load <8 x i32>, ptr %2986, align 4, !tbaa !6
  %2988 = shufflevector <8 x i32> %2987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2989 = mul <8 x i32> %2979, %2971
  %2990 = mul <8 x i32> %2982, %2972
  %2991 = mul <8 x i32> %2985, %2973
  %2992 = mul <8 x i32> %2988, %2974
  %2993 = add nuw i64 %2970, 32
  %2994 = icmp eq i64 %2993, %2967
  br i1 %2994, label %2995, label %2969, !llvm.loop !300

2995:                                             ; preds = %2969
  %2996 = mul <8 x i32> %2990, %2989
  %2997 = mul <8 x i32> %2991, %2996
  %2998 = mul <8 x i32> %2992, %2997
  %2999 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2998)
  %3000 = icmp eq i64 %2963, %2967
  br i1 %3000, label %3013, label %3001

3001:                                             ; preds = %2954, %2995
  %3002 = phi i64 [ %2957, %2954 ], [ %2968, %2995 ]
  %3003 = phi i32 [ 1, %2954 ], [ %2999, %2995 ]
  br label %3004

3004:                                             ; preds = %3001, %3004
  %3005 = phi i64 [ %3010, %3004 ], [ %3002, %3001 ]
  %3006 = phi i32 [ %3009, %3004 ], [ %3003, %3001 ]
  %3007 = getelementptr inbounds i32, ptr %11, i64 %3005
  %3008 = load i32, ptr %3007, align 4, !tbaa !6
  %3009 = mul nsw i32 %3008, %3006
  %3010 = add nsw i64 %3005, -1
  %3011 = trunc i64 %3005 to i32
  %3012 = icmp sgt i32 %3011, 0
  br i1 %3012, label %3004, label %3013, !llvm.loop !301

3013:                                             ; preds = %3004, %2995
  %3014 = phi i32 [ %2999, %2995 ], [ %3009, %3004 ]
  %3015 = and i64 %2964, 4294967295
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3015
  %3017 = load i32, ptr %3016, align 4, !tbaa !6
  %3018 = mul nsw i32 %3017, %3014
  %3019 = add nsw i32 %3018, %2958
  %3020 = icmp sgt i64 %2956, 2
  %3021 = add nsw i64 %2957, -1
  %3022 = add i32 %2955, 1
  br i1 %3020, label %2954, label %3023, !llvm.loop !302

3023:                                             ; preds = %3013, %2951
  %3024 = phi i32 [ %2953, %2951 ], [ %3019, %3013 ]
  %3025 = icmp slt i32 %3024, %5
  br i1 %3025, label %3028, label %3026

3026:                                             ; preds = %3023
  %3027 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3028:                                             ; preds = %3023
  %3029 = sext i32 %3024 to i64
  %3030 = getelementptr inbounds i32, ptr %2483, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = load i32, ptr %2485, align 4, !tbaa !6
  %3033 = mul i32 %3031, %3031
  %3034 = mul i32 %3033, %3033
  %3035 = add nsw i32 %3034, %3032
  store i32 %3035, ptr %2485, align 4, !tbaa !6
  %3036 = add nuw nsw i32 %2952, 1
  br i1 %2803, label %3037, label %3087

3037:                                             ; preds = %3028
  %3038 = load i32, ptr %4, align 4, !tbaa !6
  %3039 = load i32, ptr %12, align 4, !tbaa !6
  %3040 = add nsw i32 %3039, -1
  %3041 = icmp slt i32 %3038, %3040
  br i1 %3041, label %3064, label %3042

3042:                                             ; preds = %3037
  %3043 = icmp eq i32 %3038, %3040
  br i1 %3043, label %3044, label %3080

3044:                                             ; preds = %3042
  store i32 0, ptr %4, align 4, !tbaa !6
  %3045 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3045, ptr %6, align 4, !tbaa !6
  br i1 %2808, label %3087, label %3046

3046:                                             ; preds = %3044, %3074
  %3047 = phi i64 [ %3078, %3074 ], [ 1, %3044 ]
  %3048 = getelementptr inbounds i32, ptr %4, i64 %3047
  %3049 = load i32, ptr %3048, align 4, !tbaa !6
  %3050 = getelementptr inbounds i32, ptr %12, i64 %3047
  %3051 = load i32, ptr %3050, align 4, !tbaa !6
  %3052 = add nsw i32 %3051, -1
  %3053 = icmp slt i32 %3049, %3052
  br i1 %3053, label %3054, label %3072

3054:                                             ; preds = %3046
  br i1 %3041, label %3064, label %3055

3055:                                             ; preds = %3054
  %3056 = shl i64 %3047, 32
  %3057 = add i64 %3056, -4294967296
  %3058 = ashr exact i64 %3057, 32
  %3059 = getelementptr inbounds i32, ptr %7, i64 %3058
  %3060 = load i32, ptr %3059, align 4, !tbaa !6
  %3061 = getelementptr inbounds i32, ptr %6, i64 %3047
  %3062 = load i32, ptr %3061, align 4, !tbaa !6
  %3063 = add nsw i32 %3062, %3060
  store i32 %3063, ptr %3061, align 4, !tbaa !6
  br label %3082

3064:                                             ; preds = %3037, %3054
  %3065 = phi i32 [ %3049, %3054 ], [ %3038, %3037 ]
  %3066 = phi ptr [ %3048, %3054 ], [ %4, %3037 ]
  %3067 = phi i64 [ %3047, %3054 ], [ 0, %3037 ]
  %3068 = add nsw i32 %3065, 1
  store i32 %3068, ptr %3066, align 4, !tbaa !6
  %3069 = getelementptr inbounds i32, ptr %7, i64 %3067
  %3070 = load i32, ptr %3069, align 4, !tbaa !6
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3067
  br label %3082

3072:                                             ; preds = %3046
  %3073 = icmp eq i32 %3049, %3052
  br i1 %3073, label %3074, label %3080

3074:                                             ; preds = %3072
  store i32 0, ptr %3048, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %8, i64 %3047
  %3076 = load i32, ptr %3075, align 4, !tbaa !6
  %3077 = getelementptr inbounds i32, ptr %6, i64 %3047
  store i32 %3076, ptr %3077, align 4, !tbaa !6
  %3078 = add nuw nsw i64 %3047, 1
  %3079 = icmp eq i64 %3078, %2806
  br i1 %3079, label %3087, label %3046, !llvm.loop !303

3080:                                             ; preds = %3042, %3072
  %3081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3082:                                             ; preds = %3055, %3064
  %3083 = phi ptr [ %3071, %3064 ], [ %3048, %3055 ]
  %3084 = phi i32 [ %3070, %3064 ], [ 1, %3055 ]
  %3085 = load i32, ptr %3083, align 4, !tbaa !6
  %3086 = add nsw i32 %3085, %3084
  store i32 %3086, ptr %3083, align 4, !tbaa !6
  br label %3087

3087:                                             ; preds = %3074, %3082, %3044, %3028
  %3088 = icmp eq i32 %3036, %5
  br i1 %3088, label %5545, label %2951, !llvm.loop !304

3089:                                             ; preds = %2491
  %3090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3091:                                             ; preds = %18
  %3092 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3093 = load ptr, ptr %3092, align 8, !tbaa !10
  %3094 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3095 = load ptr, ptr %3094, align 8, !tbaa !10
  store i64 0, ptr %3095, align 8, !tbaa !121
  %3096 = icmp eq i32 %13, 0
  br i1 %3096, label %3097, label %3102

3097:                                             ; preds = %3091
  %3098 = load i32, ptr %3093, align 4, !tbaa !6
  %3099 = sext i32 %3098 to i64
  %3100 = mul nsw i64 %3099, %3099
  %3101 = mul i64 %3100, %3100
  store i64 %3101, ptr %3095, align 8, !tbaa !121
  br label %5545

3102:                                             ; preds = %3091
  switch i32 %1, label %3702 [
    i32 1, label %3103
    i32 0, label %3406
  ]

3103:                                             ; preds = %3102
  %3104 = getelementptr inbounds i32, ptr %3, i64 %19
  %3105 = load i32, ptr %3104, align 4, !tbaa !6
  %3106 = icmp eq i32 %3105, 0
  %3107 = icmp sgt i32 %5, 0
  br i1 %3106, label %3117, label %3108

3108:                                             ; preds = %3103
  br i1 %3107, label %3109, label %5545

3109:                                             ; preds = %3108
  %3110 = icmp sgt i32 %13, 1
  %3111 = icmp sgt i32 %13, 0
  %3112 = add i32 %13, -2
  %3113 = zext i32 %3112 to i64
  %3114 = zext i32 %13 to i64
  %3115 = add nuw i32 %5, 1
  %3116 = icmp eq i32 %13, 1
  br label %3265

3117:                                             ; preds = %3103
  br i1 %3107, label %3118, label %5545

3118:                                             ; preds = %3117
  %3119 = icmp sgt i32 %13, 1
  %3120 = icmp sgt i32 %13, 0
  %3121 = add i32 %13, -2
  %3122 = zext i32 %3121 to i64
  %3123 = zext i32 %13 to i64
  %3124 = add nuw i32 %5, 1
  %3125 = icmp eq i32 %13, 1
  br label %3126

3126:                                             ; preds = %3118, %3263
  %3127 = phi i64 [ 0, %3118 ], [ %3213, %3263 ]
  %3128 = phi i32 [ 0, %3118 ], [ %3215, %3263 ]
  %3129 = phi double [ 0.000000e+00, %3118 ], [ %3214, %3263 ]
  %3130 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3119, label %3131, label %3200

3131:                                             ; preds = %3126, %3190
  %3132 = phi i32 [ %3199, %3190 ], [ 0, %3126 ]
  %3133 = phi i64 [ %3141, %3190 ], [ %3123, %3126 ]
  %3134 = phi i64 [ %3198, %3190 ], [ %3122, %3126 ]
  %3135 = phi i32 [ %3196, %3190 ], [ %3130, %3126 ]
  %3136 = sub i32 %3121, %3132
  %3137 = tail call i32 @llvm.smin.i32(i32 %3136, i32 0)
  %3138 = sub i32 %3136, %3137
  %3139 = zext i32 %3138 to i64
  %3140 = add nuw nsw i64 %3139, 1
  %3141 = add nsw i64 %3133, -1
  %3142 = icmp ult i32 %3138, 31
  br i1 %3142, label %3178, label %3143

3143:                                             ; preds = %3131
  %3144 = and i64 %3140, 8589934560
  %3145 = sub i64 %3134, %3144
  br label %3146

3146:                                             ; preds = %3146, %3143
  %3147 = phi i64 [ 0, %3143 ], [ %3170, %3146 ]
  %3148 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3166, %3146 ]
  %3149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3167, %3146 ]
  %3150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3168, %3146 ]
  %3151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3169, %3146 ]
  %3152 = sub i64 %3134, %3147
  %3153 = getelementptr inbounds i32, ptr %9, i64 %3152
  %3154 = getelementptr inbounds i32, ptr %3153, i64 -7
  %3155 = load <8 x i32>, ptr %3154, align 4, !tbaa !6
  %3156 = shufflevector <8 x i32> %3155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3157 = getelementptr inbounds i32, ptr %3153, i64 -15
  %3158 = load <8 x i32>, ptr %3157, align 4, !tbaa !6
  %3159 = shufflevector <8 x i32> %3158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3160 = getelementptr inbounds i32, ptr %3153, i64 -23
  %3161 = load <8 x i32>, ptr %3160, align 4, !tbaa !6
  %3162 = shufflevector <8 x i32> %3161, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3163 = getelementptr inbounds i32, ptr %3153, i64 -31
  %3164 = load <8 x i32>, ptr %3163, align 4, !tbaa !6
  %3165 = shufflevector <8 x i32> %3164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3166 = mul <8 x i32> %3156, %3148
  %3167 = mul <8 x i32> %3159, %3149
  %3168 = mul <8 x i32> %3162, %3150
  %3169 = mul <8 x i32> %3165, %3151
  %3170 = add nuw i64 %3147, 32
  %3171 = icmp eq i64 %3170, %3144
  br i1 %3171, label %3172, label %3146, !llvm.loop !305

3172:                                             ; preds = %3146
  %3173 = mul <8 x i32> %3167, %3166
  %3174 = mul <8 x i32> %3168, %3173
  %3175 = mul <8 x i32> %3169, %3174
  %3176 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3175)
  %3177 = icmp eq i64 %3140, %3144
  br i1 %3177, label %3190, label %3178

3178:                                             ; preds = %3131, %3172
  %3179 = phi i64 [ %3134, %3131 ], [ %3145, %3172 ]
  %3180 = phi i32 [ 1, %3131 ], [ %3176, %3172 ]
  br label %3181

3181:                                             ; preds = %3178, %3181
  %3182 = phi i64 [ %3187, %3181 ], [ %3179, %3178 ]
  %3183 = phi i32 [ %3186, %3181 ], [ %3180, %3178 ]
  %3184 = getelementptr inbounds i32, ptr %9, i64 %3182
  %3185 = load i32, ptr %3184, align 4, !tbaa !6
  %3186 = mul nsw i32 %3185, %3183
  %3187 = add nsw i64 %3182, -1
  %3188 = trunc i64 %3182 to i32
  %3189 = icmp sgt i32 %3188, 0
  br i1 %3189, label %3181, label %3190, !llvm.loop !306

3190:                                             ; preds = %3181, %3172
  %3191 = phi i32 [ %3176, %3172 ], [ %3186, %3181 ]
  %3192 = and i64 %3141, 4294967295
  %3193 = getelementptr inbounds i32, ptr %6, i64 %3192
  %3194 = load i32, ptr %3193, align 4, !tbaa !6
  %3195 = mul nsw i32 %3194, %3191
  %3196 = add nsw i32 %3195, %3135
  %3197 = icmp sgt i64 %3133, 2
  %3198 = add nsw i64 %3134, -1
  %3199 = add i32 %3132, 1
  br i1 %3197, label %3131, label %3200, !llvm.loop !307

3200:                                             ; preds = %3190, %3126
  %3201 = phi i32 [ %3130, %3126 ], [ %3196, %3190 ]
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds double, ptr %2, i64 %3202
  %3204 = load double, ptr %3203, align 8, !tbaa !19
  %3205 = getelementptr inbounds i32, ptr %3093, i64 %3202
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = sitofp i64 %3127 to double
  %3208 = sitofp i32 %3206 to double
  %3209 = fmul fast double %3204, %3208
  %3210 = fmul fast double %3209, %3209
  %3211 = fmul fast double %3210, %3210
  %3212 = fadd fast double %3211, %3207
  %3213 = fptosi double %3212 to i64
  %3214 = fadd fast double %3204, %3129
  %3215 = add nuw nsw i32 %3128, 1
  br i1 %3120, label %3216, label %3263

3216:                                             ; preds = %3200
  %3217 = load i32, ptr %4, align 4, !tbaa !6
  %3218 = load i32, ptr %12, align 4, !tbaa !6
  %3219 = add nsw i32 %3218, -1
  %3220 = icmp slt i32 %3217, %3219
  br i1 %3220, label %3240, label %3221

3221:                                             ; preds = %3216
  %3222 = icmp eq i32 %3217, %3219
  br i1 %3222, label %3223, label %3256

3223:                                             ; preds = %3221
  store i32 0, ptr %4, align 4, !tbaa !6
  %3224 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3224, ptr %6, align 4, !tbaa !6
  br i1 %3125, label %3263, label %3225

3225:                                             ; preds = %3223, %3250
  %3226 = phi i64 [ %3254, %3250 ], [ 1, %3223 ]
  %3227 = getelementptr inbounds i32, ptr %4, i64 %3226
  %3228 = load i32, ptr %3227, align 4, !tbaa !6
  %3229 = getelementptr inbounds i32, ptr %12, i64 %3226
  %3230 = load i32, ptr %3229, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, -1
  %3232 = icmp slt i32 %3228, %3231
  br i1 %3232, label %3233, label %3248

3233:                                             ; preds = %3225
  br i1 %3220, label %3240, label %3234

3234:                                             ; preds = %3233
  %3235 = getelementptr inbounds i32, ptr %7, i64 %3226
  %3236 = load i32, ptr %3235, align 4, !tbaa !6
  %3237 = getelementptr inbounds i32, ptr %6, i64 %3226
  %3238 = load i32, ptr %3237, align 4, !tbaa !6
  %3239 = add nsw i32 %3238, %3236
  store i32 %3239, ptr %3237, align 4, !tbaa !6
  br label %3258

3240:                                             ; preds = %3216, %3233
  %3241 = phi i32 [ %3228, %3233 ], [ %3217, %3216 ]
  %3242 = phi ptr [ %3227, %3233 ], [ %4, %3216 ]
  %3243 = phi i64 [ %3226, %3233 ], [ 0, %3216 ]
  %3244 = add nsw i32 %3241, 1
  store i32 %3244, ptr %3242, align 4, !tbaa !6
  %3245 = getelementptr inbounds i32, ptr %7, i64 %3243
  %3246 = load i32, ptr %3245, align 4, !tbaa !6
  %3247 = getelementptr inbounds i32, ptr %6, i64 %3243
  br label %3258

3248:                                             ; preds = %3225
  %3249 = icmp eq i32 %3228, %3231
  br i1 %3249, label %3250, label %3256

3250:                                             ; preds = %3248
  store i32 0, ptr %3227, align 4, !tbaa !6
  %3251 = getelementptr inbounds i32, ptr %8, i64 %3226
  %3252 = load i32, ptr %3251, align 4, !tbaa !6
  %3253 = getelementptr inbounds i32, ptr %6, i64 %3226
  store i32 %3252, ptr %3253, align 4, !tbaa !6
  %3254 = add nuw nsw i64 %3226, 1
  %3255 = icmp eq i64 %3254, %3123
  br i1 %3255, label %3263, label %3225, !llvm.loop !308

3256:                                             ; preds = %3221, %3248
  store i64 %3213, ptr %3095, align 8, !tbaa !121
  %3257 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3258:                                             ; preds = %3234, %3240
  %3259 = phi ptr [ %3247, %3240 ], [ %3227, %3234 ]
  %3260 = phi i32 [ %3246, %3240 ], [ 1, %3234 ]
  %3261 = load i32, ptr %3259, align 4, !tbaa !6
  %3262 = add nsw i32 %3261, %3260
  store i32 %3262, ptr %3259, align 4, !tbaa !6
  br label %3263

3263:                                             ; preds = %3250, %3258, %3223, %3200
  %3264 = icmp eq i32 %3215, %5
  br i1 %3264, label %5539, label %3126, !llvm.loop !309

3265:                                             ; preds = %3109, %3404
  %3266 = phi i64 [ 0, %3109 ], [ %3352, %3404 ]
  %3267 = phi i32 [ 0, %3109 ], [ %3353, %3404 ]
  %3268 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3110, label %3269, label %3338

3269:                                             ; preds = %3265, %3328
  %3270 = phi i32 [ %3337, %3328 ], [ 0, %3265 ]
  %3271 = phi i64 [ %3279, %3328 ], [ %3114, %3265 ]
  %3272 = phi i64 [ %3336, %3328 ], [ %3113, %3265 ]
  %3273 = phi i32 [ %3334, %3328 ], [ %3268, %3265 ]
  %3274 = sub i32 %3112, %3270
  %3275 = tail call i32 @llvm.smin.i32(i32 %3274, i32 0)
  %3276 = sub i32 %3274, %3275
  %3277 = zext i32 %3276 to i64
  %3278 = add nuw nsw i64 %3277, 1
  %3279 = add nsw i64 %3271, -1
  %3280 = icmp ult i32 %3276, 31
  br i1 %3280, label %3316, label %3281

3281:                                             ; preds = %3269
  %3282 = and i64 %3278, 8589934560
  %3283 = sub i64 %3272, %3282
  br label %3284

3284:                                             ; preds = %3284, %3281
  %3285 = phi i64 [ 0, %3281 ], [ %3308, %3284 ]
  %3286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3304, %3284 ]
  %3287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3305, %3284 ]
  %3288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3306, %3284 ]
  %3289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3307, %3284 ]
  %3290 = sub i64 %3272, %3285
  %3291 = getelementptr inbounds i32, ptr %11, i64 %3290
  %3292 = getelementptr inbounds i32, ptr %3291, i64 -7
  %3293 = load <8 x i32>, ptr %3292, align 4, !tbaa !6
  %3294 = shufflevector <8 x i32> %3293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3295 = getelementptr inbounds i32, ptr %3291, i64 -15
  %3296 = load <8 x i32>, ptr %3295, align 4, !tbaa !6
  %3297 = shufflevector <8 x i32> %3296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3298 = getelementptr inbounds i32, ptr %3291, i64 -23
  %3299 = load <8 x i32>, ptr %3298, align 4, !tbaa !6
  %3300 = shufflevector <8 x i32> %3299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3301 = getelementptr inbounds i32, ptr %3291, i64 -31
  %3302 = load <8 x i32>, ptr %3301, align 4, !tbaa !6
  %3303 = shufflevector <8 x i32> %3302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3304 = mul <8 x i32> %3294, %3286
  %3305 = mul <8 x i32> %3297, %3287
  %3306 = mul <8 x i32> %3300, %3288
  %3307 = mul <8 x i32> %3303, %3289
  %3308 = add nuw i64 %3285, 32
  %3309 = icmp eq i64 %3308, %3282
  br i1 %3309, label %3310, label %3284, !llvm.loop !310

3310:                                             ; preds = %3284
  %3311 = mul <8 x i32> %3305, %3304
  %3312 = mul <8 x i32> %3306, %3311
  %3313 = mul <8 x i32> %3307, %3312
  %3314 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3313)
  %3315 = icmp eq i64 %3278, %3282
  br i1 %3315, label %3328, label %3316

3316:                                             ; preds = %3269, %3310
  %3317 = phi i64 [ %3272, %3269 ], [ %3283, %3310 ]
  %3318 = phi i32 [ 1, %3269 ], [ %3314, %3310 ]
  br label %3319

3319:                                             ; preds = %3316, %3319
  %3320 = phi i64 [ %3325, %3319 ], [ %3317, %3316 ]
  %3321 = phi i32 [ %3324, %3319 ], [ %3318, %3316 ]
  %3322 = getelementptr inbounds i32, ptr %11, i64 %3320
  %3323 = load i32, ptr %3322, align 4, !tbaa !6
  %3324 = mul nsw i32 %3323, %3321
  %3325 = add nsw i64 %3320, -1
  %3326 = trunc i64 %3320 to i32
  %3327 = icmp sgt i32 %3326, 0
  br i1 %3327, label %3319, label %3328, !llvm.loop !311

3328:                                             ; preds = %3319, %3310
  %3329 = phi i32 [ %3314, %3310 ], [ %3324, %3319 ]
  %3330 = and i64 %3279, 4294967295
  %3331 = getelementptr inbounds i32, ptr %6, i64 %3330
  %3332 = load i32, ptr %3331, align 4, !tbaa !6
  %3333 = mul nsw i32 %3332, %3329
  %3334 = add nsw i32 %3333, %3273
  %3335 = icmp sgt i64 %3271, 2
  %3336 = add nsw i64 %3272, -1
  %3337 = add i32 %3270, 1
  br i1 %3335, label %3269, label %3338, !llvm.loop !312

3338:                                             ; preds = %3328, %3265
  %3339 = phi i32 [ %3268, %3265 ], [ %3334, %3328 ]
  %3340 = icmp slt i32 %3339, %5
  br i1 %3340, label %3343, label %3341

3341:                                             ; preds = %3338
  %3342 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3343:                                             ; preds = %3338
  %3344 = sext i32 %3339 to i64
  %3345 = getelementptr inbounds i32, ptr %3093, i64 %3344
  %3346 = load i32, ptr %3345, align 4, !tbaa !6
  %3347 = sitofp i64 %3266 to double
  %3348 = sitofp i32 %3346 to double
  %3349 = fmul fast double %3348, %3348
  %3350 = fmul fast double %3349, %3349
  %3351 = fadd fast double %3350, %3347
  %3352 = fptosi double %3351 to i64
  store i64 %3352, ptr %3095, align 8, !tbaa !121
  %3353 = add nuw nsw i32 %3267, 1
  br i1 %3111, label %3354, label %3404

3354:                                             ; preds = %3343
  %3355 = load i32, ptr %4, align 4, !tbaa !6
  %3356 = load i32, ptr %12, align 4, !tbaa !6
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3355, %3357
  br i1 %3358, label %3381, label %3359

3359:                                             ; preds = %3354
  %3360 = icmp eq i32 %3355, %3357
  br i1 %3360, label %3361, label %3397

3361:                                             ; preds = %3359
  store i32 0, ptr %4, align 4, !tbaa !6
  %3362 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3362, ptr %6, align 4, !tbaa !6
  br i1 %3116, label %3404, label %3363

3363:                                             ; preds = %3361, %3391
  %3364 = phi i64 [ %3395, %3391 ], [ 1, %3361 ]
  %3365 = getelementptr inbounds i32, ptr %4, i64 %3364
  %3366 = load i32, ptr %3365, align 4, !tbaa !6
  %3367 = getelementptr inbounds i32, ptr %12, i64 %3364
  %3368 = load i32, ptr %3367, align 4, !tbaa !6
  %3369 = add nsw i32 %3368, -1
  %3370 = icmp slt i32 %3366, %3369
  br i1 %3370, label %3371, label %3389

3371:                                             ; preds = %3363
  br i1 %3358, label %3381, label %3372

3372:                                             ; preds = %3371
  %3373 = shl i64 %3364, 32
  %3374 = add i64 %3373, -4294967296
  %3375 = ashr exact i64 %3374, 32
  %3376 = getelementptr inbounds i32, ptr %7, i64 %3375
  %3377 = load i32, ptr %3376, align 4, !tbaa !6
  %3378 = getelementptr inbounds i32, ptr %6, i64 %3364
  %3379 = load i32, ptr %3378, align 4, !tbaa !6
  %3380 = add nsw i32 %3379, %3377
  store i32 %3380, ptr %3378, align 4, !tbaa !6
  br label %3399

3381:                                             ; preds = %3354, %3371
  %3382 = phi i32 [ %3366, %3371 ], [ %3355, %3354 ]
  %3383 = phi ptr [ %3365, %3371 ], [ %4, %3354 ]
  %3384 = phi i64 [ %3364, %3371 ], [ 0, %3354 ]
  %3385 = add nsw i32 %3382, 1
  store i32 %3385, ptr %3383, align 4, !tbaa !6
  %3386 = getelementptr inbounds i32, ptr %7, i64 %3384
  %3387 = load i32, ptr %3386, align 4, !tbaa !6
  %3388 = getelementptr inbounds i32, ptr %6, i64 %3384
  br label %3399

3389:                                             ; preds = %3363
  %3390 = icmp eq i32 %3366, %3369
  br i1 %3390, label %3391, label %3397

3391:                                             ; preds = %3389
  store i32 0, ptr %3365, align 4, !tbaa !6
  %3392 = getelementptr inbounds i32, ptr %8, i64 %3364
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3364
  store i32 %3393, ptr %3394, align 4, !tbaa !6
  %3395 = add nuw nsw i64 %3364, 1
  %3396 = icmp eq i64 %3395, %3114
  br i1 %3396, label %3404, label %3363, !llvm.loop !313

3397:                                             ; preds = %3359, %3389
  %3398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3399:                                             ; preds = %3372, %3381
  %3400 = phi ptr [ %3388, %3381 ], [ %3365, %3372 ]
  %3401 = phi i32 [ %3387, %3381 ], [ 1, %3372 ]
  %3402 = load i32, ptr %3400, align 4, !tbaa !6
  %3403 = add nsw i32 %3402, %3401
  store i32 %3403, ptr %3400, align 4, !tbaa !6
  br label %3404

3404:                                             ; preds = %3391, %3399, %3361, %3343
  %3405 = icmp eq i32 %3353, %5
  br i1 %3405, label %5545, label %3265, !llvm.loop !314

3406:                                             ; preds = %3102
  %3407 = getelementptr inbounds i32, ptr %3, i64 %19
  %3408 = load i32, ptr %3407, align 4, !tbaa !6
  %3409 = icmp eq i32 %3408, 0
  %3410 = icmp sgt i32 %5, 0
  br i1 %3409, label %3420, label %3411

3411:                                             ; preds = %3406
  br i1 %3410, label %3412, label %5545

3412:                                             ; preds = %3411
  %3413 = icmp sgt i32 %13, 1
  %3414 = icmp sgt i32 %13, 0
  %3415 = add i32 %13, -2
  %3416 = zext i32 %3415 to i64
  %3417 = zext i32 %13 to i64
  %3418 = add nuw i32 %5, 1
  %3419 = icmp eq i32 %13, 1
  br label %3563

3420:                                             ; preds = %3406
  br i1 %3410, label %3421, label %5545

3421:                                             ; preds = %3420
  %3422 = icmp sgt i32 %13, 1
  %3423 = icmp sgt i32 %13, 0
  %3424 = add i32 %13, -2
  %3425 = zext i32 %3424 to i64
  %3426 = zext i32 %13 to i64
  %3427 = add nuw i32 %5, 1
  %3428 = icmp eq i32 %13, 1
  br label %3429

3429:                                             ; preds = %3421, %3561
  %3430 = phi i64 [ 0, %3421 ], [ %3511, %3561 ]
  %3431 = phi i32 [ 0, %3421 ], [ %3513, %3561 ]
  %3432 = phi double [ 0.000000e+00, %3421 ], [ %3512, %3561 ]
  %3433 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3422, label %3434, label %3503

3434:                                             ; preds = %3429, %3493
  %3435 = phi i32 [ %3502, %3493 ], [ 0, %3429 ]
  %3436 = phi i64 [ %3444, %3493 ], [ %3426, %3429 ]
  %3437 = phi i64 [ %3501, %3493 ], [ %3425, %3429 ]
  %3438 = phi i32 [ %3499, %3493 ], [ %3433, %3429 ]
  %3439 = sub i32 %3424, %3435
  %3440 = tail call i32 @llvm.smin.i32(i32 %3439, i32 0)
  %3441 = sub i32 %3439, %3440
  %3442 = zext i32 %3441 to i64
  %3443 = add nuw nsw i64 %3442, 1
  %3444 = add nsw i64 %3436, -1
  %3445 = icmp ult i32 %3441, 31
  br i1 %3445, label %3481, label %3446

3446:                                             ; preds = %3434
  %3447 = and i64 %3443, 8589934560
  %3448 = sub i64 %3437, %3447
  br label %3449

3449:                                             ; preds = %3449, %3446
  %3450 = phi i64 [ 0, %3446 ], [ %3473, %3449 ]
  %3451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3469, %3449 ]
  %3452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3470, %3449 ]
  %3453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3471, %3449 ]
  %3454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3472, %3449 ]
  %3455 = sub i64 %3437, %3450
  %3456 = getelementptr inbounds i32, ptr %9, i64 %3455
  %3457 = getelementptr inbounds i32, ptr %3456, i64 -7
  %3458 = load <8 x i32>, ptr %3457, align 4, !tbaa !6
  %3459 = shufflevector <8 x i32> %3458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3460 = getelementptr inbounds i32, ptr %3456, i64 -15
  %3461 = load <8 x i32>, ptr %3460, align 4, !tbaa !6
  %3462 = shufflevector <8 x i32> %3461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3463 = getelementptr inbounds i32, ptr %3456, i64 -23
  %3464 = load <8 x i32>, ptr %3463, align 4, !tbaa !6
  %3465 = shufflevector <8 x i32> %3464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3466 = getelementptr inbounds i32, ptr %3456, i64 -31
  %3467 = load <8 x i32>, ptr %3466, align 4, !tbaa !6
  %3468 = shufflevector <8 x i32> %3467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3469 = mul <8 x i32> %3459, %3451
  %3470 = mul <8 x i32> %3462, %3452
  %3471 = mul <8 x i32> %3465, %3453
  %3472 = mul <8 x i32> %3468, %3454
  %3473 = add nuw i64 %3450, 32
  %3474 = icmp eq i64 %3473, %3447
  br i1 %3474, label %3475, label %3449, !llvm.loop !315

3475:                                             ; preds = %3449
  %3476 = mul <8 x i32> %3470, %3469
  %3477 = mul <8 x i32> %3471, %3476
  %3478 = mul <8 x i32> %3472, %3477
  %3479 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3478)
  %3480 = icmp eq i64 %3443, %3447
  br i1 %3480, label %3493, label %3481

3481:                                             ; preds = %3434, %3475
  %3482 = phi i64 [ %3437, %3434 ], [ %3448, %3475 ]
  %3483 = phi i32 [ 1, %3434 ], [ %3479, %3475 ]
  br label %3484

3484:                                             ; preds = %3481, %3484
  %3485 = phi i64 [ %3490, %3484 ], [ %3482, %3481 ]
  %3486 = phi i32 [ %3489, %3484 ], [ %3483, %3481 ]
  %3487 = getelementptr inbounds i32, ptr %9, i64 %3485
  %3488 = load i32, ptr %3487, align 4, !tbaa !6
  %3489 = mul nsw i32 %3488, %3486
  %3490 = add nsw i64 %3485, -1
  %3491 = trunc i64 %3485 to i32
  %3492 = icmp sgt i32 %3491, 0
  br i1 %3492, label %3484, label %3493, !llvm.loop !316

3493:                                             ; preds = %3484, %3475
  %3494 = phi i32 [ %3479, %3475 ], [ %3489, %3484 ]
  %3495 = and i64 %3444, 4294967295
  %3496 = getelementptr inbounds i32, ptr %6, i64 %3495
  %3497 = load i32, ptr %3496, align 4, !tbaa !6
  %3498 = mul nsw i32 %3497, %3494
  %3499 = add nsw i32 %3498, %3438
  %3500 = icmp sgt i64 %3436, 2
  %3501 = add nsw i64 %3437, -1
  %3502 = add i32 %3435, 1
  br i1 %3500, label %3434, label %3503, !llvm.loop !317

3503:                                             ; preds = %3493, %3429
  %3504 = phi i32 [ %3433, %3429 ], [ %3499, %3493 ]
  %3505 = sext i32 %3504 to i64
  %3506 = getelementptr inbounds i32, ptr %3093, i64 %3505
  %3507 = load i32, ptr %3506, align 4, !tbaa !6
  %3508 = sext i32 %3507 to i64
  %3509 = mul nsw i64 %3508, %3508
  %3510 = mul i64 %3509, %3509
  %3511 = add nsw i64 %3510, %3430
  %3512 = fadd fast double %3432, 1.000000e+00
  %3513 = add nuw nsw i32 %3431, 1
  br i1 %3423, label %3514, label %3561

3514:                                             ; preds = %3503
  %3515 = load i32, ptr %4, align 4, !tbaa !6
  %3516 = load i32, ptr %12, align 4, !tbaa !6
  %3517 = add nsw i32 %3516, -1
  %3518 = icmp slt i32 %3515, %3517
  br i1 %3518, label %3538, label %3519

3519:                                             ; preds = %3514
  %3520 = icmp eq i32 %3515, %3517
  br i1 %3520, label %3521, label %3554

3521:                                             ; preds = %3519
  store i32 0, ptr %4, align 4, !tbaa !6
  %3522 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3522, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3561, label %3523

3523:                                             ; preds = %3521, %3548
  %3524 = phi i64 [ %3552, %3548 ], [ 1, %3521 ]
  %3525 = getelementptr inbounds i32, ptr %4, i64 %3524
  %3526 = load i32, ptr %3525, align 4, !tbaa !6
  %3527 = getelementptr inbounds i32, ptr %12, i64 %3524
  %3528 = load i32, ptr %3527, align 4, !tbaa !6
  %3529 = add nsw i32 %3528, -1
  %3530 = icmp slt i32 %3526, %3529
  br i1 %3530, label %3531, label %3546

3531:                                             ; preds = %3523
  br i1 %3518, label %3538, label %3532

3532:                                             ; preds = %3531
  %3533 = getelementptr inbounds i32, ptr %7, i64 %3524
  %3534 = load i32, ptr %3533, align 4, !tbaa !6
  %3535 = getelementptr inbounds i32, ptr %6, i64 %3524
  %3536 = load i32, ptr %3535, align 4, !tbaa !6
  %3537 = add nsw i32 %3536, %3534
  store i32 %3537, ptr %3535, align 4, !tbaa !6
  br label %3556

3538:                                             ; preds = %3514, %3531
  %3539 = phi i32 [ %3526, %3531 ], [ %3515, %3514 ]
  %3540 = phi ptr [ %3525, %3531 ], [ %4, %3514 ]
  %3541 = phi i64 [ %3524, %3531 ], [ 0, %3514 ]
  %3542 = add nsw i32 %3539, 1
  store i32 %3542, ptr %3540, align 4, !tbaa !6
  %3543 = getelementptr inbounds i32, ptr %7, i64 %3541
  %3544 = load i32, ptr %3543, align 4, !tbaa !6
  %3545 = getelementptr inbounds i32, ptr %6, i64 %3541
  br label %3556

3546:                                             ; preds = %3523
  %3547 = icmp eq i32 %3526, %3529
  br i1 %3547, label %3548, label %3554

3548:                                             ; preds = %3546
  store i32 0, ptr %3525, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %8, i64 %3524
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3524
  store i32 %3550, ptr %3551, align 4, !tbaa !6
  %3552 = add nuw nsw i64 %3524, 1
  %3553 = icmp eq i64 %3552, %3426
  br i1 %3553, label %3561, label %3523, !llvm.loop !318

3554:                                             ; preds = %3519, %3546
  store i64 %3511, ptr %3095, align 8, !tbaa !121
  %3555 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3556:                                             ; preds = %3532, %3538
  %3557 = phi ptr [ %3545, %3538 ], [ %3525, %3532 ]
  %3558 = phi i32 [ %3544, %3538 ], [ 1, %3532 ]
  %3559 = load i32, ptr %3557, align 4, !tbaa !6
  %3560 = add nsw i32 %3559, %3558
  store i32 %3560, ptr %3557, align 4, !tbaa !6
  br label %3561

3561:                                             ; preds = %3548, %3556, %3521, %3503
  %3562 = icmp eq i32 %3513, %5
  br i1 %3562, label %5540, label %3429, !llvm.loop !319

3563:                                             ; preds = %3412, %3700
  %3564 = phi i64 [ 0, %3412 ], [ %3648, %3700 ]
  %3565 = phi i32 [ 0, %3412 ], [ %3649, %3700 ]
  %3566 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3413, label %3567, label %3636

3567:                                             ; preds = %3563, %3626
  %3568 = phi i32 [ %3635, %3626 ], [ 0, %3563 ]
  %3569 = phi i64 [ %3577, %3626 ], [ %3417, %3563 ]
  %3570 = phi i64 [ %3634, %3626 ], [ %3416, %3563 ]
  %3571 = phi i32 [ %3632, %3626 ], [ %3566, %3563 ]
  %3572 = sub i32 %3415, %3568
  %3573 = tail call i32 @llvm.smin.i32(i32 %3572, i32 0)
  %3574 = sub i32 %3572, %3573
  %3575 = zext i32 %3574 to i64
  %3576 = add nuw nsw i64 %3575, 1
  %3577 = add nsw i64 %3569, -1
  %3578 = icmp ult i32 %3574, 31
  br i1 %3578, label %3614, label %3579

3579:                                             ; preds = %3567
  %3580 = and i64 %3576, 8589934560
  %3581 = sub i64 %3570, %3580
  br label %3582

3582:                                             ; preds = %3582, %3579
  %3583 = phi i64 [ 0, %3579 ], [ %3606, %3582 ]
  %3584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3602, %3582 ]
  %3585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3603, %3582 ]
  %3586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3604, %3582 ]
  %3587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3605, %3582 ]
  %3588 = sub i64 %3570, %3583
  %3589 = getelementptr inbounds i32, ptr %11, i64 %3588
  %3590 = getelementptr inbounds i32, ptr %3589, i64 -7
  %3591 = load <8 x i32>, ptr %3590, align 4, !tbaa !6
  %3592 = shufflevector <8 x i32> %3591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3593 = getelementptr inbounds i32, ptr %3589, i64 -15
  %3594 = load <8 x i32>, ptr %3593, align 4, !tbaa !6
  %3595 = shufflevector <8 x i32> %3594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3596 = getelementptr inbounds i32, ptr %3589, i64 -23
  %3597 = load <8 x i32>, ptr %3596, align 4, !tbaa !6
  %3598 = shufflevector <8 x i32> %3597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3599 = getelementptr inbounds i32, ptr %3589, i64 -31
  %3600 = load <8 x i32>, ptr %3599, align 4, !tbaa !6
  %3601 = shufflevector <8 x i32> %3600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3602 = mul <8 x i32> %3592, %3584
  %3603 = mul <8 x i32> %3595, %3585
  %3604 = mul <8 x i32> %3598, %3586
  %3605 = mul <8 x i32> %3601, %3587
  %3606 = add nuw i64 %3583, 32
  %3607 = icmp eq i64 %3606, %3580
  br i1 %3607, label %3608, label %3582, !llvm.loop !320

3608:                                             ; preds = %3582
  %3609 = mul <8 x i32> %3603, %3602
  %3610 = mul <8 x i32> %3604, %3609
  %3611 = mul <8 x i32> %3605, %3610
  %3612 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3611)
  %3613 = icmp eq i64 %3576, %3580
  br i1 %3613, label %3626, label %3614

3614:                                             ; preds = %3567, %3608
  %3615 = phi i64 [ %3570, %3567 ], [ %3581, %3608 ]
  %3616 = phi i32 [ 1, %3567 ], [ %3612, %3608 ]
  br label %3617

3617:                                             ; preds = %3614, %3617
  %3618 = phi i64 [ %3623, %3617 ], [ %3615, %3614 ]
  %3619 = phi i32 [ %3622, %3617 ], [ %3616, %3614 ]
  %3620 = getelementptr inbounds i32, ptr %11, i64 %3618
  %3621 = load i32, ptr %3620, align 4, !tbaa !6
  %3622 = mul nsw i32 %3621, %3619
  %3623 = add nsw i64 %3618, -1
  %3624 = trunc i64 %3618 to i32
  %3625 = icmp sgt i32 %3624, 0
  br i1 %3625, label %3617, label %3626, !llvm.loop !321

3626:                                             ; preds = %3617, %3608
  %3627 = phi i32 [ %3612, %3608 ], [ %3622, %3617 ]
  %3628 = and i64 %3577, 4294967295
  %3629 = getelementptr inbounds i32, ptr %6, i64 %3628
  %3630 = load i32, ptr %3629, align 4, !tbaa !6
  %3631 = mul nsw i32 %3630, %3627
  %3632 = add nsw i32 %3631, %3571
  %3633 = icmp sgt i64 %3569, 2
  %3634 = add nsw i64 %3570, -1
  %3635 = add i32 %3568, 1
  br i1 %3633, label %3567, label %3636, !llvm.loop !322

3636:                                             ; preds = %3626, %3563
  %3637 = phi i32 [ %3566, %3563 ], [ %3632, %3626 ]
  %3638 = icmp slt i32 %3637, %5
  br i1 %3638, label %3641, label %3639

3639:                                             ; preds = %3636
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3641:                                             ; preds = %3636
  %3642 = sext i32 %3637 to i64
  %3643 = getelementptr inbounds i32, ptr %3093, i64 %3642
  %3644 = load i32, ptr %3643, align 4, !tbaa !6
  %3645 = sext i32 %3644 to i64
  %3646 = mul nsw i64 %3645, %3645
  %3647 = mul i64 %3646, %3646
  %3648 = add nsw i64 %3647, %3564
  store i64 %3648, ptr %3095, align 8, !tbaa !121
  %3649 = add nuw nsw i32 %3565, 1
  br i1 %3414, label %3650, label %3700

3650:                                             ; preds = %3641
  %3651 = load i32, ptr %4, align 4, !tbaa !6
  %3652 = load i32, ptr %12, align 4, !tbaa !6
  %3653 = add nsw i32 %3652, -1
  %3654 = icmp slt i32 %3651, %3653
  br i1 %3654, label %3677, label %3655

3655:                                             ; preds = %3650
  %3656 = icmp eq i32 %3651, %3653
  br i1 %3656, label %3657, label %3693

3657:                                             ; preds = %3655
  store i32 0, ptr %4, align 4, !tbaa !6
  %3658 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3658, ptr %6, align 4, !tbaa !6
  br i1 %3419, label %3700, label %3659

3659:                                             ; preds = %3657, %3687
  %3660 = phi i64 [ %3691, %3687 ], [ 1, %3657 ]
  %3661 = getelementptr inbounds i32, ptr %4, i64 %3660
  %3662 = load i32, ptr %3661, align 4, !tbaa !6
  %3663 = getelementptr inbounds i32, ptr %12, i64 %3660
  %3664 = load i32, ptr %3663, align 4, !tbaa !6
  %3665 = add nsw i32 %3664, -1
  %3666 = icmp slt i32 %3662, %3665
  br i1 %3666, label %3667, label %3685

3667:                                             ; preds = %3659
  br i1 %3654, label %3677, label %3668

3668:                                             ; preds = %3667
  %3669 = shl i64 %3660, 32
  %3670 = add i64 %3669, -4294967296
  %3671 = ashr exact i64 %3670, 32
  %3672 = getelementptr inbounds i32, ptr %7, i64 %3671
  %3673 = load i32, ptr %3672, align 4, !tbaa !6
  %3674 = getelementptr inbounds i32, ptr %6, i64 %3660
  %3675 = load i32, ptr %3674, align 4, !tbaa !6
  %3676 = add nsw i32 %3675, %3673
  store i32 %3676, ptr %3674, align 4, !tbaa !6
  br label %3695

3677:                                             ; preds = %3650, %3667
  %3678 = phi i32 [ %3662, %3667 ], [ %3651, %3650 ]
  %3679 = phi ptr [ %3661, %3667 ], [ %4, %3650 ]
  %3680 = phi i64 [ %3660, %3667 ], [ 0, %3650 ]
  %3681 = add nsw i32 %3678, 1
  store i32 %3681, ptr %3679, align 4, !tbaa !6
  %3682 = getelementptr inbounds i32, ptr %7, i64 %3680
  %3683 = load i32, ptr %3682, align 4, !tbaa !6
  %3684 = getelementptr inbounds i32, ptr %6, i64 %3680
  br label %3695

3685:                                             ; preds = %3659
  %3686 = icmp eq i32 %3662, %3665
  br i1 %3686, label %3687, label %3693

3687:                                             ; preds = %3685
  store i32 0, ptr %3661, align 4, !tbaa !6
  %3688 = getelementptr inbounds i32, ptr %8, i64 %3660
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3660
  store i32 %3689, ptr %3690, align 4, !tbaa !6
  %3691 = add nuw nsw i64 %3660, 1
  %3692 = icmp eq i64 %3691, %3417
  br i1 %3692, label %3700, label %3659, !llvm.loop !323

3693:                                             ; preds = %3655, %3685
  %3694 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3695:                                             ; preds = %3668, %3677
  %3696 = phi ptr [ %3684, %3677 ], [ %3661, %3668 ]
  %3697 = phi i32 [ %3683, %3677 ], [ 1, %3668 ]
  %3698 = load i32, ptr %3696, align 4, !tbaa !6
  %3699 = add nsw i32 %3698, %3697
  store i32 %3699, ptr %3696, align 4, !tbaa !6
  br label %3700

3700:                                             ; preds = %3687, %3695, %3657, %3641
  %3701 = icmp eq i32 %3649, %5
  br i1 %3701, label %5545, label %3563, !llvm.loop !324

3702:                                             ; preds = %3102
  %3703 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3704:                                             ; preds = %18
  %3705 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3706 = load ptr, ptr %3705, align 8, !tbaa !10
  %3707 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3708 = load ptr, ptr %3707, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3708, align 8, !tbaa !19
  %3709 = icmp eq i32 %13, 0
  br i1 %3709, label %3710, label %3715

3710:                                             ; preds = %3704
  %3711 = load i32, ptr %3706, align 4, !tbaa !6
  %3712 = sitofp i32 %3711 to double
  %3713 = fmul fast double %3712, %3712
  %3714 = fmul fast double %3713, %3713
  store double %3714, ptr %3708, align 8, !tbaa !19
  br label %5545

3715:                                             ; preds = %3704
  switch i32 %1, label %4311 [
    i32 1, label %3716
    i32 0, label %4015
  ]

3716:                                             ; preds = %3715
  %3717 = getelementptr inbounds i32, ptr %3, i64 %19
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = icmp eq i32 %3718, 0
  %3720 = icmp sgt i32 %5, 0
  br i1 %3719, label %3730, label %3721

3721:                                             ; preds = %3716
  br i1 %3720, label %3722, label %5545

3722:                                             ; preds = %3721
  %3723 = icmp sgt i32 %13, 1
  %3724 = icmp sgt i32 %13, 0
  %3725 = add i32 %13, -2
  %3726 = zext i32 %3725 to i64
  %3727 = zext i32 %13 to i64
  %3728 = add nuw i32 %5, 1
  %3729 = icmp eq i32 %13, 1
  br label %3876

3730:                                             ; preds = %3716
  br i1 %3720, label %3731, label %5545

3731:                                             ; preds = %3730
  %3732 = icmp sgt i32 %13, 1
  %3733 = icmp sgt i32 %13, 0
  %3734 = add i32 %13, -2
  %3735 = zext i32 %3734 to i64
  %3736 = zext i32 %13 to i64
  %3737 = add nuw i32 %5, 1
  %3738 = icmp eq i32 %13, 1
  br label %3739

3739:                                             ; preds = %3731, %3874
  %3740 = phi double [ 0.000000e+00, %3731 ], [ %3824, %3874 ]
  %3741 = phi i32 [ 0, %3731 ], [ %3826, %3874 ]
  %3742 = phi double [ 0.000000e+00, %3731 ], [ %3825, %3874 ]
  %3743 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3732, label %3744, label %3813

3744:                                             ; preds = %3739, %3803
  %3745 = phi i32 [ %3812, %3803 ], [ 0, %3739 ]
  %3746 = phi i64 [ %3754, %3803 ], [ %3736, %3739 ]
  %3747 = phi i64 [ %3811, %3803 ], [ %3735, %3739 ]
  %3748 = phi i32 [ %3809, %3803 ], [ %3743, %3739 ]
  %3749 = sub i32 %3734, %3745
  %3750 = tail call i32 @llvm.smin.i32(i32 %3749, i32 0)
  %3751 = sub i32 %3749, %3750
  %3752 = zext i32 %3751 to i64
  %3753 = add nuw nsw i64 %3752, 1
  %3754 = add nsw i64 %3746, -1
  %3755 = icmp ult i32 %3751, 31
  br i1 %3755, label %3791, label %3756

3756:                                             ; preds = %3744
  %3757 = and i64 %3753, 8589934560
  %3758 = sub i64 %3747, %3757
  br label %3759

3759:                                             ; preds = %3759, %3756
  %3760 = phi i64 [ 0, %3756 ], [ %3783, %3759 ]
  %3761 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3779, %3759 ]
  %3762 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3780, %3759 ]
  %3763 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3781, %3759 ]
  %3764 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3782, %3759 ]
  %3765 = sub i64 %3747, %3760
  %3766 = getelementptr inbounds i32, ptr %9, i64 %3765
  %3767 = getelementptr inbounds i32, ptr %3766, i64 -7
  %3768 = load <8 x i32>, ptr %3767, align 4, !tbaa !6
  %3769 = shufflevector <8 x i32> %3768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3770 = getelementptr inbounds i32, ptr %3766, i64 -15
  %3771 = load <8 x i32>, ptr %3770, align 4, !tbaa !6
  %3772 = shufflevector <8 x i32> %3771, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3773 = getelementptr inbounds i32, ptr %3766, i64 -23
  %3774 = load <8 x i32>, ptr %3773, align 4, !tbaa !6
  %3775 = shufflevector <8 x i32> %3774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3776 = getelementptr inbounds i32, ptr %3766, i64 -31
  %3777 = load <8 x i32>, ptr %3776, align 4, !tbaa !6
  %3778 = shufflevector <8 x i32> %3777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3779 = mul <8 x i32> %3769, %3761
  %3780 = mul <8 x i32> %3772, %3762
  %3781 = mul <8 x i32> %3775, %3763
  %3782 = mul <8 x i32> %3778, %3764
  %3783 = add nuw i64 %3760, 32
  %3784 = icmp eq i64 %3783, %3757
  br i1 %3784, label %3785, label %3759, !llvm.loop !325

3785:                                             ; preds = %3759
  %3786 = mul <8 x i32> %3780, %3779
  %3787 = mul <8 x i32> %3781, %3786
  %3788 = mul <8 x i32> %3782, %3787
  %3789 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3788)
  %3790 = icmp eq i64 %3753, %3757
  br i1 %3790, label %3803, label %3791

3791:                                             ; preds = %3744, %3785
  %3792 = phi i64 [ %3747, %3744 ], [ %3758, %3785 ]
  %3793 = phi i32 [ 1, %3744 ], [ %3789, %3785 ]
  br label %3794

3794:                                             ; preds = %3791, %3794
  %3795 = phi i64 [ %3800, %3794 ], [ %3792, %3791 ]
  %3796 = phi i32 [ %3799, %3794 ], [ %3793, %3791 ]
  %3797 = getelementptr inbounds i32, ptr %9, i64 %3795
  %3798 = load i32, ptr %3797, align 4, !tbaa !6
  %3799 = mul nsw i32 %3798, %3796
  %3800 = add nsw i64 %3795, -1
  %3801 = trunc i64 %3795 to i32
  %3802 = icmp sgt i32 %3801, 0
  br i1 %3802, label %3794, label %3803, !llvm.loop !326

3803:                                             ; preds = %3794, %3785
  %3804 = phi i32 [ %3789, %3785 ], [ %3799, %3794 ]
  %3805 = and i64 %3754, 4294967295
  %3806 = getelementptr inbounds i32, ptr %6, i64 %3805
  %3807 = load i32, ptr %3806, align 4, !tbaa !6
  %3808 = mul nsw i32 %3807, %3804
  %3809 = add nsw i32 %3808, %3748
  %3810 = icmp sgt i64 %3746, 2
  %3811 = add nsw i64 %3747, -1
  %3812 = add i32 %3745, 1
  br i1 %3810, label %3744, label %3813, !llvm.loop !327

3813:                                             ; preds = %3803, %3739
  %3814 = phi i32 [ %3743, %3739 ], [ %3809, %3803 ]
  %3815 = sext i32 %3814 to i64
  %3816 = getelementptr inbounds double, ptr %2, i64 %3815
  %3817 = load double, ptr %3816, align 8, !tbaa !19
  %3818 = getelementptr inbounds i32, ptr %3706, i64 %3815
  %3819 = load i32, ptr %3818, align 4, !tbaa !6
  %3820 = sitofp i32 %3819 to double
  %3821 = fmul fast double %3817, %3820
  %3822 = fmul fast double %3821, %3821
  %3823 = fmul fast double %3822, %3822
  %3824 = fadd fast double %3823, %3740
  store double %3824, ptr %3708, align 8, !tbaa !19
  %3825 = fadd fast double %3817, %3742
  %3826 = add nuw nsw i32 %3741, 1
  br i1 %3733, label %3827, label %3874

3827:                                             ; preds = %3813
  %3828 = load i32, ptr %4, align 4, !tbaa !6
  %3829 = load i32, ptr %12, align 4, !tbaa !6
  %3830 = add nsw i32 %3829, -1
  %3831 = icmp slt i32 %3828, %3830
  br i1 %3831, label %3851, label %3832

3832:                                             ; preds = %3827
  %3833 = icmp eq i32 %3828, %3830
  br i1 %3833, label %3834, label %3867

3834:                                             ; preds = %3832
  store i32 0, ptr %4, align 4, !tbaa !6
  %3835 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3835, ptr %6, align 4, !tbaa !6
  br i1 %3738, label %3874, label %3836

3836:                                             ; preds = %3834, %3861
  %3837 = phi i64 [ %3865, %3861 ], [ 1, %3834 ]
  %3838 = getelementptr inbounds i32, ptr %4, i64 %3837
  %3839 = load i32, ptr %3838, align 4, !tbaa !6
  %3840 = getelementptr inbounds i32, ptr %12, i64 %3837
  %3841 = load i32, ptr %3840, align 4, !tbaa !6
  %3842 = add nsw i32 %3841, -1
  %3843 = icmp slt i32 %3839, %3842
  br i1 %3843, label %3844, label %3859

3844:                                             ; preds = %3836
  br i1 %3831, label %3851, label %3845

3845:                                             ; preds = %3844
  %3846 = getelementptr inbounds i32, ptr %7, i64 %3837
  %3847 = load i32, ptr %3846, align 4, !tbaa !6
  %3848 = getelementptr inbounds i32, ptr %6, i64 %3837
  %3849 = load i32, ptr %3848, align 4, !tbaa !6
  %3850 = add nsw i32 %3849, %3847
  store i32 %3850, ptr %3848, align 4, !tbaa !6
  br label %3869

3851:                                             ; preds = %3827, %3844
  %3852 = phi i32 [ %3839, %3844 ], [ %3828, %3827 ]
  %3853 = phi ptr [ %3838, %3844 ], [ %4, %3827 ]
  %3854 = phi i64 [ %3837, %3844 ], [ 0, %3827 ]
  %3855 = add nsw i32 %3852, 1
  store i32 %3855, ptr %3853, align 4, !tbaa !6
  %3856 = getelementptr inbounds i32, ptr %7, i64 %3854
  %3857 = load i32, ptr %3856, align 4, !tbaa !6
  %3858 = getelementptr inbounds i32, ptr %6, i64 %3854
  br label %3869

3859:                                             ; preds = %3836
  %3860 = icmp eq i32 %3839, %3842
  br i1 %3860, label %3861, label %3867

3861:                                             ; preds = %3859
  store i32 0, ptr %3838, align 4, !tbaa !6
  %3862 = getelementptr inbounds i32, ptr %8, i64 %3837
  %3863 = load i32, ptr %3862, align 4, !tbaa !6
  %3864 = getelementptr inbounds i32, ptr %6, i64 %3837
  store i32 %3863, ptr %3864, align 4, !tbaa !6
  %3865 = add nuw nsw i64 %3837, 1
  %3866 = icmp eq i64 %3865, %3736
  br i1 %3866, label %3874, label %3836, !llvm.loop !328

3867:                                             ; preds = %3832, %3859
  %3868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3869:                                             ; preds = %3845, %3851
  %3870 = phi ptr [ %3858, %3851 ], [ %3838, %3845 ]
  %3871 = phi i32 [ %3857, %3851 ], [ 1, %3845 ]
  %3872 = load i32, ptr %3870, align 4, !tbaa !6
  %3873 = add nsw i32 %3872, %3871
  store i32 %3873, ptr %3870, align 4, !tbaa !6
  br label %3874

3874:                                             ; preds = %3861, %3869, %3834, %3813
  %3875 = icmp eq i32 %3826, %5
  br i1 %3875, label %5545, label %3739, !llvm.loop !329

3876:                                             ; preds = %3722, %4013
  %3877 = phi double [ 0.000000e+00, %3722 ], [ %3961, %4013 ]
  %3878 = phi i32 [ 0, %3722 ], [ %3962, %4013 ]
  %3879 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3723, label %3880, label %3949

3880:                                             ; preds = %3876, %3939
  %3881 = phi i32 [ %3948, %3939 ], [ 0, %3876 ]
  %3882 = phi i64 [ %3890, %3939 ], [ %3727, %3876 ]
  %3883 = phi i64 [ %3947, %3939 ], [ %3726, %3876 ]
  %3884 = phi i32 [ %3945, %3939 ], [ %3879, %3876 ]
  %3885 = sub i32 %3725, %3881
  %3886 = tail call i32 @llvm.smin.i32(i32 %3885, i32 0)
  %3887 = sub i32 %3885, %3886
  %3888 = zext i32 %3887 to i64
  %3889 = add nuw nsw i64 %3888, 1
  %3890 = add nsw i64 %3882, -1
  %3891 = icmp ult i32 %3887, 31
  br i1 %3891, label %3927, label %3892

3892:                                             ; preds = %3880
  %3893 = and i64 %3889, 8589934560
  %3894 = sub i64 %3883, %3893
  br label %3895

3895:                                             ; preds = %3895, %3892
  %3896 = phi i64 [ 0, %3892 ], [ %3919, %3895 ]
  %3897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3915, %3895 ]
  %3898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3916, %3895 ]
  %3899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3917, %3895 ]
  %3900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3918, %3895 ]
  %3901 = sub i64 %3883, %3896
  %3902 = getelementptr inbounds i32, ptr %11, i64 %3901
  %3903 = getelementptr inbounds i32, ptr %3902, i64 -7
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !6
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = getelementptr inbounds i32, ptr %3902, i64 -15
  %3907 = load <8 x i32>, ptr %3906, align 4, !tbaa !6
  %3908 = shufflevector <8 x i32> %3907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3909 = getelementptr inbounds i32, ptr %3902, i64 -23
  %3910 = load <8 x i32>, ptr %3909, align 4, !tbaa !6
  %3911 = shufflevector <8 x i32> %3910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3912 = getelementptr inbounds i32, ptr %3902, i64 -31
  %3913 = load <8 x i32>, ptr %3912, align 4, !tbaa !6
  %3914 = shufflevector <8 x i32> %3913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3915 = mul <8 x i32> %3905, %3897
  %3916 = mul <8 x i32> %3908, %3898
  %3917 = mul <8 x i32> %3911, %3899
  %3918 = mul <8 x i32> %3914, %3900
  %3919 = add nuw i64 %3896, 32
  %3920 = icmp eq i64 %3919, %3893
  br i1 %3920, label %3921, label %3895, !llvm.loop !330

3921:                                             ; preds = %3895
  %3922 = mul <8 x i32> %3916, %3915
  %3923 = mul <8 x i32> %3917, %3922
  %3924 = mul <8 x i32> %3918, %3923
  %3925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3924)
  %3926 = icmp eq i64 %3889, %3893
  br i1 %3926, label %3939, label %3927

3927:                                             ; preds = %3880, %3921
  %3928 = phi i64 [ %3883, %3880 ], [ %3894, %3921 ]
  %3929 = phi i32 [ 1, %3880 ], [ %3925, %3921 ]
  br label %3930

3930:                                             ; preds = %3927, %3930
  %3931 = phi i64 [ %3936, %3930 ], [ %3928, %3927 ]
  %3932 = phi i32 [ %3935, %3930 ], [ %3929, %3927 ]
  %3933 = getelementptr inbounds i32, ptr %11, i64 %3931
  %3934 = load i32, ptr %3933, align 4, !tbaa !6
  %3935 = mul nsw i32 %3934, %3932
  %3936 = add nsw i64 %3931, -1
  %3937 = trunc i64 %3931 to i32
  %3938 = icmp sgt i32 %3937, 0
  br i1 %3938, label %3930, label %3939, !llvm.loop !331

3939:                                             ; preds = %3930, %3921
  %3940 = phi i32 [ %3925, %3921 ], [ %3935, %3930 ]
  %3941 = and i64 %3890, 4294967295
  %3942 = getelementptr inbounds i32, ptr %6, i64 %3941
  %3943 = load i32, ptr %3942, align 4, !tbaa !6
  %3944 = mul nsw i32 %3943, %3940
  %3945 = add nsw i32 %3944, %3884
  %3946 = icmp sgt i64 %3882, 2
  %3947 = add nsw i64 %3883, -1
  %3948 = add i32 %3881, 1
  br i1 %3946, label %3880, label %3949, !llvm.loop !332

3949:                                             ; preds = %3939, %3876
  %3950 = phi i32 [ %3879, %3876 ], [ %3945, %3939 ]
  %3951 = icmp slt i32 %3950, %5
  br i1 %3951, label %3954, label %3952

3952:                                             ; preds = %3949
  %3953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3954:                                             ; preds = %3949
  %3955 = sext i32 %3950 to i64
  %3956 = getelementptr inbounds i32, ptr %3706, i64 %3955
  %3957 = load i32, ptr %3956, align 4, !tbaa !6
  %3958 = sitofp i32 %3957 to double
  %3959 = fmul fast double %3958, %3958
  %3960 = fmul fast double %3959, %3959
  %3961 = fadd fast double %3960, %3877
  store double %3961, ptr %3708, align 8, !tbaa !19
  %3962 = add nuw nsw i32 %3878, 1
  br i1 %3724, label %3963, label %4013

3963:                                             ; preds = %3954
  %3964 = load i32, ptr %4, align 4, !tbaa !6
  %3965 = load i32, ptr %12, align 4, !tbaa !6
  %3966 = add nsw i32 %3965, -1
  %3967 = icmp slt i32 %3964, %3966
  br i1 %3967, label %3990, label %3968

3968:                                             ; preds = %3963
  %3969 = icmp eq i32 %3964, %3966
  br i1 %3969, label %3970, label %4006

3970:                                             ; preds = %3968
  store i32 0, ptr %4, align 4, !tbaa !6
  %3971 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3971, ptr %6, align 4, !tbaa !6
  br i1 %3729, label %4013, label %3972

3972:                                             ; preds = %3970, %4000
  %3973 = phi i64 [ %4004, %4000 ], [ 1, %3970 ]
  %3974 = getelementptr inbounds i32, ptr %4, i64 %3973
  %3975 = load i32, ptr %3974, align 4, !tbaa !6
  %3976 = getelementptr inbounds i32, ptr %12, i64 %3973
  %3977 = load i32, ptr %3976, align 4, !tbaa !6
  %3978 = add nsw i32 %3977, -1
  %3979 = icmp slt i32 %3975, %3978
  br i1 %3979, label %3980, label %3998

3980:                                             ; preds = %3972
  br i1 %3967, label %3990, label %3981

3981:                                             ; preds = %3980
  %3982 = shl i64 %3973, 32
  %3983 = add i64 %3982, -4294967296
  %3984 = ashr exact i64 %3983, 32
  %3985 = getelementptr inbounds i32, ptr %7, i64 %3984
  %3986 = load i32, ptr %3985, align 4, !tbaa !6
  %3987 = getelementptr inbounds i32, ptr %6, i64 %3973
  %3988 = load i32, ptr %3987, align 4, !tbaa !6
  %3989 = add nsw i32 %3988, %3986
  store i32 %3989, ptr %3987, align 4, !tbaa !6
  br label %4008

3990:                                             ; preds = %3963, %3980
  %3991 = phi i32 [ %3975, %3980 ], [ %3964, %3963 ]
  %3992 = phi ptr [ %3974, %3980 ], [ %4, %3963 ]
  %3993 = phi i64 [ %3973, %3980 ], [ 0, %3963 ]
  %3994 = add nsw i32 %3991, 1
  store i32 %3994, ptr %3992, align 4, !tbaa !6
  %3995 = getelementptr inbounds i32, ptr %7, i64 %3993
  %3996 = load i32, ptr %3995, align 4, !tbaa !6
  %3997 = getelementptr inbounds i32, ptr %6, i64 %3993
  br label %4008

3998:                                             ; preds = %3972
  %3999 = icmp eq i32 %3975, %3978
  br i1 %3999, label %4000, label %4006

4000:                                             ; preds = %3998
  store i32 0, ptr %3974, align 4, !tbaa !6
  %4001 = getelementptr inbounds i32, ptr %8, i64 %3973
  %4002 = load i32, ptr %4001, align 4, !tbaa !6
  %4003 = getelementptr inbounds i32, ptr %6, i64 %3973
  store i32 %4002, ptr %4003, align 4, !tbaa !6
  %4004 = add nuw nsw i64 %3973, 1
  %4005 = icmp eq i64 %4004, %3727
  br i1 %4005, label %4013, label %3972, !llvm.loop !333

4006:                                             ; preds = %3968, %3998
  %4007 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4008:                                             ; preds = %3981, %3990
  %4009 = phi ptr [ %3997, %3990 ], [ %3974, %3981 ]
  %4010 = phi i32 [ %3996, %3990 ], [ 1, %3981 ]
  %4011 = load i32, ptr %4009, align 4, !tbaa !6
  %4012 = add nsw i32 %4011, %4010
  store i32 %4012, ptr %4009, align 4, !tbaa !6
  br label %4013

4013:                                             ; preds = %4000, %4008, %3970, %3954
  %4014 = icmp eq i32 %3962, %5
  br i1 %4014, label %5545, label %3876, !llvm.loop !334

4015:                                             ; preds = %3715
  %4016 = getelementptr inbounds i32, ptr %3, i64 %19
  %4017 = load i32, ptr %4016, align 4, !tbaa !6
  %4018 = icmp eq i32 %4017, 0
  %4019 = icmp sgt i32 %5, 0
  br i1 %4018, label %4029, label %4020

4020:                                             ; preds = %4015
  br i1 %4019, label %4021, label %5545

4021:                                             ; preds = %4020
  %4022 = icmp sgt i32 %13, 1
  %4023 = icmp sgt i32 %13, 0
  %4024 = add i32 %13, -2
  %4025 = zext i32 %4024 to i64
  %4026 = zext i32 %13 to i64
  %4027 = add nuw i32 %5, 1
  %4028 = icmp eq i32 %13, 1
  br label %4172

4029:                                             ; preds = %4015
  br i1 %4019, label %4030, label %5545

4030:                                             ; preds = %4029
  %4031 = icmp sgt i32 %13, 1
  %4032 = icmp sgt i32 %13, 0
  %4033 = add i32 %13, -2
  %4034 = zext i32 %4033 to i64
  %4035 = zext i32 %13 to i64
  %4036 = add nuw i32 %5, 1
  %4037 = icmp eq i32 %13, 1
  br label %4038

4038:                                             ; preds = %4030, %4170
  %4039 = phi double [ 0.000000e+00, %4030 ], [ %4120, %4170 ]
  %4040 = phi i32 [ 0, %4030 ], [ %4122, %4170 ]
  %4041 = phi double [ 0.000000e+00, %4030 ], [ %4121, %4170 ]
  %4042 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4031, label %4043, label %4112

4043:                                             ; preds = %4038, %4102
  %4044 = phi i32 [ %4111, %4102 ], [ 0, %4038 ]
  %4045 = phi i64 [ %4053, %4102 ], [ %4035, %4038 ]
  %4046 = phi i64 [ %4110, %4102 ], [ %4034, %4038 ]
  %4047 = phi i32 [ %4108, %4102 ], [ %4042, %4038 ]
  %4048 = sub i32 %4033, %4044
  %4049 = tail call i32 @llvm.smin.i32(i32 %4048, i32 0)
  %4050 = sub i32 %4048, %4049
  %4051 = zext i32 %4050 to i64
  %4052 = add nuw nsw i64 %4051, 1
  %4053 = add nsw i64 %4045, -1
  %4054 = icmp ult i32 %4050, 31
  br i1 %4054, label %4090, label %4055

4055:                                             ; preds = %4043
  %4056 = and i64 %4052, 8589934560
  %4057 = sub i64 %4046, %4056
  br label %4058

4058:                                             ; preds = %4058, %4055
  %4059 = phi i64 [ 0, %4055 ], [ %4082, %4058 ]
  %4060 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4078, %4058 ]
  %4061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4079, %4058 ]
  %4062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4080, %4058 ]
  %4063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4081, %4058 ]
  %4064 = sub i64 %4046, %4059
  %4065 = getelementptr inbounds i32, ptr %9, i64 %4064
  %4066 = getelementptr inbounds i32, ptr %4065, i64 -7
  %4067 = load <8 x i32>, ptr %4066, align 4, !tbaa !6
  %4068 = shufflevector <8 x i32> %4067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4069 = getelementptr inbounds i32, ptr %4065, i64 -15
  %4070 = load <8 x i32>, ptr %4069, align 4, !tbaa !6
  %4071 = shufflevector <8 x i32> %4070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4072 = getelementptr inbounds i32, ptr %4065, i64 -23
  %4073 = load <8 x i32>, ptr %4072, align 4, !tbaa !6
  %4074 = shufflevector <8 x i32> %4073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4075 = getelementptr inbounds i32, ptr %4065, i64 -31
  %4076 = load <8 x i32>, ptr %4075, align 4, !tbaa !6
  %4077 = shufflevector <8 x i32> %4076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4078 = mul <8 x i32> %4068, %4060
  %4079 = mul <8 x i32> %4071, %4061
  %4080 = mul <8 x i32> %4074, %4062
  %4081 = mul <8 x i32> %4077, %4063
  %4082 = add nuw i64 %4059, 32
  %4083 = icmp eq i64 %4082, %4056
  br i1 %4083, label %4084, label %4058, !llvm.loop !335

4084:                                             ; preds = %4058
  %4085 = mul <8 x i32> %4079, %4078
  %4086 = mul <8 x i32> %4080, %4085
  %4087 = mul <8 x i32> %4081, %4086
  %4088 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4087)
  %4089 = icmp eq i64 %4052, %4056
  br i1 %4089, label %4102, label %4090

4090:                                             ; preds = %4043, %4084
  %4091 = phi i64 [ %4046, %4043 ], [ %4057, %4084 ]
  %4092 = phi i32 [ 1, %4043 ], [ %4088, %4084 ]
  br label %4093

4093:                                             ; preds = %4090, %4093
  %4094 = phi i64 [ %4099, %4093 ], [ %4091, %4090 ]
  %4095 = phi i32 [ %4098, %4093 ], [ %4092, %4090 ]
  %4096 = getelementptr inbounds i32, ptr %9, i64 %4094
  %4097 = load i32, ptr %4096, align 4, !tbaa !6
  %4098 = mul nsw i32 %4097, %4095
  %4099 = add nsw i64 %4094, -1
  %4100 = trunc i64 %4094 to i32
  %4101 = icmp sgt i32 %4100, 0
  br i1 %4101, label %4093, label %4102, !llvm.loop !336

4102:                                             ; preds = %4093, %4084
  %4103 = phi i32 [ %4088, %4084 ], [ %4098, %4093 ]
  %4104 = and i64 %4053, 4294967295
  %4105 = getelementptr inbounds i32, ptr %6, i64 %4104
  %4106 = load i32, ptr %4105, align 4, !tbaa !6
  %4107 = mul nsw i32 %4106, %4103
  %4108 = add nsw i32 %4107, %4047
  %4109 = icmp sgt i64 %4045, 2
  %4110 = add nsw i64 %4046, -1
  %4111 = add i32 %4044, 1
  br i1 %4109, label %4043, label %4112, !llvm.loop !337

4112:                                             ; preds = %4102, %4038
  %4113 = phi i32 [ %4042, %4038 ], [ %4108, %4102 ]
  %4114 = sext i32 %4113 to i64
  %4115 = getelementptr inbounds i32, ptr %3706, i64 %4114
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = sitofp i32 %4116 to double
  %4118 = fmul fast double %4117, %4117
  %4119 = fmul fast double %4118, %4118
  %4120 = fadd fast double %4119, %4039
  %4121 = fadd fast double %4041, 1.000000e+00
  %4122 = add nuw nsw i32 %4040, 1
  br i1 %4032, label %4123, label %4170

4123:                                             ; preds = %4112
  %4124 = load i32, ptr %4, align 4, !tbaa !6
  %4125 = load i32, ptr %12, align 4, !tbaa !6
  %4126 = add nsw i32 %4125, -1
  %4127 = icmp slt i32 %4124, %4126
  br i1 %4127, label %4147, label %4128

4128:                                             ; preds = %4123
  %4129 = icmp eq i32 %4124, %4126
  br i1 %4129, label %4130, label %4163

4130:                                             ; preds = %4128
  store i32 0, ptr %4, align 4, !tbaa !6
  %4131 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4131, ptr %6, align 4, !tbaa !6
  br i1 %4037, label %4170, label %4132

4132:                                             ; preds = %4130, %4157
  %4133 = phi i64 [ %4161, %4157 ], [ 1, %4130 ]
  %4134 = getelementptr inbounds i32, ptr %4, i64 %4133
  %4135 = load i32, ptr %4134, align 4, !tbaa !6
  %4136 = getelementptr inbounds i32, ptr %12, i64 %4133
  %4137 = load i32, ptr %4136, align 4, !tbaa !6
  %4138 = add nsw i32 %4137, -1
  %4139 = icmp slt i32 %4135, %4138
  br i1 %4139, label %4140, label %4155

4140:                                             ; preds = %4132
  br i1 %4127, label %4147, label %4141

4141:                                             ; preds = %4140
  %4142 = getelementptr inbounds i32, ptr %7, i64 %4133
  %4143 = load i32, ptr %4142, align 4, !tbaa !6
  %4144 = getelementptr inbounds i32, ptr %6, i64 %4133
  %4145 = load i32, ptr %4144, align 4, !tbaa !6
  %4146 = add nsw i32 %4145, %4143
  store i32 %4146, ptr %4144, align 4, !tbaa !6
  br label %4165

4147:                                             ; preds = %4123, %4140
  %4148 = phi i32 [ %4135, %4140 ], [ %4124, %4123 ]
  %4149 = phi ptr [ %4134, %4140 ], [ %4, %4123 ]
  %4150 = phi i64 [ %4133, %4140 ], [ 0, %4123 ]
  %4151 = add nsw i32 %4148, 1
  store i32 %4151, ptr %4149, align 4, !tbaa !6
  %4152 = getelementptr inbounds i32, ptr %7, i64 %4150
  %4153 = load i32, ptr %4152, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %6, i64 %4150
  br label %4165

4155:                                             ; preds = %4132
  %4156 = icmp eq i32 %4135, %4138
  br i1 %4156, label %4157, label %4163

4157:                                             ; preds = %4155
  store i32 0, ptr %4134, align 4, !tbaa !6
  %4158 = getelementptr inbounds i32, ptr %8, i64 %4133
  %4159 = load i32, ptr %4158, align 4, !tbaa !6
  %4160 = getelementptr inbounds i32, ptr %6, i64 %4133
  store i32 %4159, ptr %4160, align 4, !tbaa !6
  %4161 = add nuw nsw i64 %4133, 1
  %4162 = icmp eq i64 %4161, %4035
  br i1 %4162, label %4170, label %4132, !llvm.loop !338

4163:                                             ; preds = %4128, %4155
  store double %4120, ptr %3708, align 8, !tbaa !19
  %4164 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4165:                                             ; preds = %4141, %4147
  %4166 = phi ptr [ %4154, %4147 ], [ %4134, %4141 ]
  %4167 = phi i32 [ %4153, %4147 ], [ 1, %4141 ]
  %4168 = load i32, ptr %4166, align 4, !tbaa !6
  %4169 = add nsw i32 %4168, %4167
  store i32 %4169, ptr %4166, align 4, !tbaa !6
  br label %4170

4170:                                             ; preds = %4157, %4165, %4130, %4112
  %4171 = icmp eq i32 %4122, %5
  br i1 %4171, label %5541, label %4038, !llvm.loop !339

4172:                                             ; preds = %4021, %4309
  %4173 = phi double [ 0.000000e+00, %4021 ], [ %4257, %4309 ]
  %4174 = phi i32 [ 0, %4021 ], [ %4258, %4309 ]
  %4175 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4022, label %4176, label %4245

4176:                                             ; preds = %4172, %4235
  %4177 = phi i32 [ %4244, %4235 ], [ 0, %4172 ]
  %4178 = phi i64 [ %4186, %4235 ], [ %4026, %4172 ]
  %4179 = phi i64 [ %4243, %4235 ], [ %4025, %4172 ]
  %4180 = phi i32 [ %4241, %4235 ], [ %4175, %4172 ]
  %4181 = sub i32 %4024, %4177
  %4182 = tail call i32 @llvm.smin.i32(i32 %4181, i32 0)
  %4183 = sub i32 %4181, %4182
  %4184 = zext i32 %4183 to i64
  %4185 = add nuw nsw i64 %4184, 1
  %4186 = add nsw i64 %4178, -1
  %4187 = icmp ult i32 %4183, 31
  br i1 %4187, label %4223, label %4188

4188:                                             ; preds = %4176
  %4189 = and i64 %4185, 8589934560
  %4190 = sub i64 %4179, %4189
  br label %4191

4191:                                             ; preds = %4191, %4188
  %4192 = phi i64 [ 0, %4188 ], [ %4215, %4191 ]
  %4193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4211, %4191 ]
  %4194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4212, %4191 ]
  %4195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4213, %4191 ]
  %4196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4214, %4191 ]
  %4197 = sub i64 %4179, %4192
  %4198 = getelementptr inbounds i32, ptr %11, i64 %4197
  %4199 = getelementptr inbounds i32, ptr %4198, i64 -7
  %4200 = load <8 x i32>, ptr %4199, align 4, !tbaa !6
  %4201 = shufflevector <8 x i32> %4200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4202 = getelementptr inbounds i32, ptr %4198, i64 -15
  %4203 = load <8 x i32>, ptr %4202, align 4, !tbaa !6
  %4204 = shufflevector <8 x i32> %4203, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4205 = getelementptr inbounds i32, ptr %4198, i64 -23
  %4206 = load <8 x i32>, ptr %4205, align 4, !tbaa !6
  %4207 = shufflevector <8 x i32> %4206, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4208 = getelementptr inbounds i32, ptr %4198, i64 -31
  %4209 = load <8 x i32>, ptr %4208, align 4, !tbaa !6
  %4210 = shufflevector <8 x i32> %4209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4211 = mul <8 x i32> %4201, %4193
  %4212 = mul <8 x i32> %4204, %4194
  %4213 = mul <8 x i32> %4207, %4195
  %4214 = mul <8 x i32> %4210, %4196
  %4215 = add nuw i64 %4192, 32
  %4216 = icmp eq i64 %4215, %4189
  br i1 %4216, label %4217, label %4191, !llvm.loop !340

4217:                                             ; preds = %4191
  %4218 = mul <8 x i32> %4212, %4211
  %4219 = mul <8 x i32> %4213, %4218
  %4220 = mul <8 x i32> %4214, %4219
  %4221 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4220)
  %4222 = icmp eq i64 %4185, %4189
  br i1 %4222, label %4235, label %4223

4223:                                             ; preds = %4176, %4217
  %4224 = phi i64 [ %4179, %4176 ], [ %4190, %4217 ]
  %4225 = phi i32 [ 1, %4176 ], [ %4221, %4217 ]
  br label %4226

4226:                                             ; preds = %4223, %4226
  %4227 = phi i64 [ %4232, %4226 ], [ %4224, %4223 ]
  %4228 = phi i32 [ %4231, %4226 ], [ %4225, %4223 ]
  %4229 = getelementptr inbounds i32, ptr %11, i64 %4227
  %4230 = load i32, ptr %4229, align 4, !tbaa !6
  %4231 = mul nsw i32 %4230, %4228
  %4232 = add nsw i64 %4227, -1
  %4233 = trunc i64 %4227 to i32
  %4234 = icmp sgt i32 %4233, 0
  br i1 %4234, label %4226, label %4235, !llvm.loop !341

4235:                                             ; preds = %4226, %4217
  %4236 = phi i32 [ %4221, %4217 ], [ %4231, %4226 ]
  %4237 = and i64 %4186, 4294967295
  %4238 = getelementptr inbounds i32, ptr %6, i64 %4237
  %4239 = load i32, ptr %4238, align 4, !tbaa !6
  %4240 = mul nsw i32 %4239, %4236
  %4241 = add nsw i32 %4240, %4180
  %4242 = icmp sgt i64 %4178, 2
  %4243 = add nsw i64 %4179, -1
  %4244 = add i32 %4177, 1
  br i1 %4242, label %4176, label %4245, !llvm.loop !342

4245:                                             ; preds = %4235, %4172
  %4246 = phi i32 [ %4175, %4172 ], [ %4241, %4235 ]
  %4247 = icmp slt i32 %4246, %5
  br i1 %4247, label %4250, label %4248

4248:                                             ; preds = %4245
  %4249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4250:                                             ; preds = %4245
  %4251 = sext i32 %4246 to i64
  %4252 = getelementptr inbounds i32, ptr %3706, i64 %4251
  %4253 = load i32, ptr %4252, align 4, !tbaa !6
  %4254 = sitofp i32 %4253 to double
  %4255 = fmul fast double %4254, %4254
  %4256 = fmul fast double %4255, %4255
  %4257 = fadd fast double %4256, %4173
  store double %4257, ptr %3708, align 8, !tbaa !19
  %4258 = add nuw nsw i32 %4174, 1
  br i1 %4023, label %4259, label %4309

4259:                                             ; preds = %4250
  %4260 = load i32, ptr %4, align 4, !tbaa !6
  %4261 = load i32, ptr %12, align 4, !tbaa !6
  %4262 = add nsw i32 %4261, -1
  %4263 = icmp slt i32 %4260, %4262
  br i1 %4263, label %4286, label %4264

4264:                                             ; preds = %4259
  %4265 = icmp eq i32 %4260, %4262
  br i1 %4265, label %4266, label %4302

4266:                                             ; preds = %4264
  store i32 0, ptr %4, align 4, !tbaa !6
  %4267 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4267, ptr %6, align 4, !tbaa !6
  br i1 %4028, label %4309, label %4268

4268:                                             ; preds = %4266, %4296
  %4269 = phi i64 [ %4300, %4296 ], [ 1, %4266 ]
  %4270 = getelementptr inbounds i32, ptr %4, i64 %4269
  %4271 = load i32, ptr %4270, align 4, !tbaa !6
  %4272 = getelementptr inbounds i32, ptr %12, i64 %4269
  %4273 = load i32, ptr %4272, align 4, !tbaa !6
  %4274 = add nsw i32 %4273, -1
  %4275 = icmp slt i32 %4271, %4274
  br i1 %4275, label %4276, label %4294

4276:                                             ; preds = %4268
  br i1 %4263, label %4286, label %4277

4277:                                             ; preds = %4276
  %4278 = shl i64 %4269, 32
  %4279 = add i64 %4278, -4294967296
  %4280 = ashr exact i64 %4279, 32
  %4281 = getelementptr inbounds i32, ptr %7, i64 %4280
  %4282 = load i32, ptr %4281, align 4, !tbaa !6
  %4283 = getelementptr inbounds i32, ptr %6, i64 %4269
  %4284 = load i32, ptr %4283, align 4, !tbaa !6
  %4285 = add nsw i32 %4284, %4282
  store i32 %4285, ptr %4283, align 4, !tbaa !6
  br label %4304

4286:                                             ; preds = %4259, %4276
  %4287 = phi i32 [ %4271, %4276 ], [ %4260, %4259 ]
  %4288 = phi ptr [ %4270, %4276 ], [ %4, %4259 ]
  %4289 = phi i64 [ %4269, %4276 ], [ 0, %4259 ]
  %4290 = add nsw i32 %4287, 1
  store i32 %4290, ptr %4288, align 4, !tbaa !6
  %4291 = getelementptr inbounds i32, ptr %7, i64 %4289
  %4292 = load i32, ptr %4291, align 4, !tbaa !6
  %4293 = getelementptr inbounds i32, ptr %6, i64 %4289
  br label %4304

4294:                                             ; preds = %4268
  %4295 = icmp eq i32 %4271, %4274
  br i1 %4295, label %4296, label %4302

4296:                                             ; preds = %4294
  store i32 0, ptr %4270, align 4, !tbaa !6
  %4297 = getelementptr inbounds i32, ptr %8, i64 %4269
  %4298 = load i32, ptr %4297, align 4, !tbaa !6
  %4299 = getelementptr inbounds i32, ptr %6, i64 %4269
  store i32 %4298, ptr %4299, align 4, !tbaa !6
  %4300 = add nuw nsw i64 %4269, 1
  %4301 = icmp eq i64 %4300, %4026
  br i1 %4301, label %4309, label %4268, !llvm.loop !343

4302:                                             ; preds = %4264, %4294
  %4303 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4304:                                             ; preds = %4277, %4286
  %4305 = phi ptr [ %4293, %4286 ], [ %4270, %4277 ]
  %4306 = phi i32 [ %4292, %4286 ], [ 1, %4277 ]
  %4307 = load i32, ptr %4305, align 4, !tbaa !6
  %4308 = add nsw i32 %4307, %4306
  store i32 %4308, ptr %4305, align 4, !tbaa !6
  br label %4309

4309:                                             ; preds = %4296, %4304, %4266, %4250
  %4310 = icmp eq i32 %4258, %5
  br i1 %4310, label %5545, label %4172, !llvm.loop !344

4311:                                             ; preds = %3715
  %4312 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 359, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4313:                                             ; preds = %18
  %4314 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4315 = load ptr, ptr %4314, align 8, !tbaa !10
  %4316 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4317 = load ptr, ptr %4316, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4317, align 4, !tbaa !163
  %4318 = icmp eq i32 %13, 0
  br i1 %4318, label %4319, label %4324

4319:                                             ; preds = %4313
  %4320 = load i32, ptr %4315, align 4, !tbaa !6
  %4321 = sitofp i32 %4320 to float
  %4322 = fmul fast float %4321, %4321
  %4323 = fmul fast float %4322, %4322
  store float %4323, ptr %4317, align 4, !tbaa !163
  br label %5545

4324:                                             ; preds = %4313
  switch i32 %1, label %4926 [
    i32 1, label %4325
    i32 0, label %4630
  ]

4325:                                             ; preds = %4324
  %4326 = getelementptr inbounds i32, ptr %3, i64 %19
  %4327 = load i32, ptr %4326, align 4, !tbaa !6
  %4328 = icmp eq i32 %4327, 0
  %4329 = icmp sgt i32 %5, 0
  br i1 %4328, label %4339, label %4330

4330:                                             ; preds = %4325
  br i1 %4329, label %4331, label %5545

4331:                                             ; preds = %4330
  %4332 = icmp sgt i32 %13, 1
  %4333 = icmp sgt i32 %13, 0
  %4334 = add i32 %13, -2
  %4335 = zext i32 %4334 to i64
  %4336 = zext i32 %13 to i64
  %4337 = add nuw i32 %5, 1
  %4338 = icmp eq i32 %13, 1
  br label %4488

4339:                                             ; preds = %4325
  br i1 %4329, label %4340, label %5545

4340:                                             ; preds = %4339
  %4341 = icmp sgt i32 %13, 1
  %4342 = icmp sgt i32 %13, 0
  %4343 = add i32 %13, -2
  %4344 = zext i32 %4343 to i64
  %4345 = zext i32 %13 to i64
  %4346 = add nuw i32 %5, 1
  %4347 = icmp eq i32 %13, 1
  br label %4348

4348:                                             ; preds = %4340, %4486
  %4349 = phi float [ 0.000000e+00, %4340 ], [ %4436, %4486 ]
  %4350 = phi i32 [ 0, %4340 ], [ %4438, %4486 ]
  %4351 = phi double [ 0.000000e+00, %4340 ], [ %4437, %4486 ]
  %4352 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4341, label %4353, label %4422

4353:                                             ; preds = %4348, %4412
  %4354 = phi i32 [ %4421, %4412 ], [ 0, %4348 ]
  %4355 = phi i64 [ %4363, %4412 ], [ %4345, %4348 ]
  %4356 = phi i64 [ %4420, %4412 ], [ %4344, %4348 ]
  %4357 = phi i32 [ %4418, %4412 ], [ %4352, %4348 ]
  %4358 = sub i32 %4343, %4354
  %4359 = tail call i32 @llvm.smin.i32(i32 %4358, i32 0)
  %4360 = sub i32 %4358, %4359
  %4361 = zext i32 %4360 to i64
  %4362 = add nuw nsw i64 %4361, 1
  %4363 = add nsw i64 %4355, -1
  %4364 = icmp ult i32 %4360, 31
  br i1 %4364, label %4400, label %4365

4365:                                             ; preds = %4353
  %4366 = and i64 %4362, 8589934560
  %4367 = sub i64 %4356, %4366
  br label %4368

4368:                                             ; preds = %4368, %4365
  %4369 = phi i64 [ 0, %4365 ], [ %4392, %4368 ]
  %4370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4388, %4368 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4389, %4368 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4390, %4368 ]
  %4373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4391, %4368 ]
  %4374 = sub i64 %4356, %4369
  %4375 = getelementptr inbounds i32, ptr %9, i64 %4374
  %4376 = getelementptr inbounds i32, ptr %4375, i64 -7
  %4377 = load <8 x i32>, ptr %4376, align 4, !tbaa !6
  %4378 = shufflevector <8 x i32> %4377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4379 = getelementptr inbounds i32, ptr %4375, i64 -15
  %4380 = load <8 x i32>, ptr %4379, align 4, !tbaa !6
  %4381 = shufflevector <8 x i32> %4380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4382 = getelementptr inbounds i32, ptr %4375, i64 -23
  %4383 = load <8 x i32>, ptr %4382, align 4, !tbaa !6
  %4384 = shufflevector <8 x i32> %4383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4385 = getelementptr inbounds i32, ptr %4375, i64 -31
  %4386 = load <8 x i32>, ptr %4385, align 4, !tbaa !6
  %4387 = shufflevector <8 x i32> %4386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4388 = mul <8 x i32> %4378, %4370
  %4389 = mul <8 x i32> %4381, %4371
  %4390 = mul <8 x i32> %4384, %4372
  %4391 = mul <8 x i32> %4387, %4373
  %4392 = add nuw i64 %4369, 32
  %4393 = icmp eq i64 %4392, %4366
  br i1 %4393, label %4394, label %4368, !llvm.loop !345

4394:                                             ; preds = %4368
  %4395 = mul <8 x i32> %4389, %4388
  %4396 = mul <8 x i32> %4390, %4395
  %4397 = mul <8 x i32> %4391, %4396
  %4398 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4397)
  %4399 = icmp eq i64 %4362, %4366
  br i1 %4399, label %4412, label %4400

4400:                                             ; preds = %4353, %4394
  %4401 = phi i64 [ %4356, %4353 ], [ %4367, %4394 ]
  %4402 = phi i32 [ 1, %4353 ], [ %4398, %4394 ]
  br label %4403

4403:                                             ; preds = %4400, %4403
  %4404 = phi i64 [ %4409, %4403 ], [ %4401, %4400 ]
  %4405 = phi i32 [ %4408, %4403 ], [ %4402, %4400 ]
  %4406 = getelementptr inbounds i32, ptr %9, i64 %4404
  %4407 = load i32, ptr %4406, align 4, !tbaa !6
  %4408 = mul nsw i32 %4407, %4405
  %4409 = add nsw i64 %4404, -1
  %4410 = trunc i64 %4404 to i32
  %4411 = icmp sgt i32 %4410, 0
  br i1 %4411, label %4403, label %4412, !llvm.loop !346

4412:                                             ; preds = %4403, %4394
  %4413 = phi i32 [ %4398, %4394 ], [ %4408, %4403 ]
  %4414 = and i64 %4363, 4294967295
  %4415 = getelementptr inbounds i32, ptr %6, i64 %4414
  %4416 = load i32, ptr %4415, align 4, !tbaa !6
  %4417 = mul nsw i32 %4416, %4413
  %4418 = add nsw i32 %4417, %4357
  %4419 = icmp sgt i64 %4355, 2
  %4420 = add nsw i64 %4356, -1
  %4421 = add i32 %4354, 1
  br i1 %4419, label %4353, label %4422, !llvm.loop !347

4422:                                             ; preds = %4412, %4348
  %4423 = phi i32 [ %4352, %4348 ], [ %4418, %4412 ]
  %4424 = sext i32 %4423 to i64
  %4425 = getelementptr inbounds double, ptr %2, i64 %4424
  %4426 = load double, ptr %4425, align 8, !tbaa !19
  %4427 = getelementptr inbounds i32, ptr %4315, i64 %4424
  %4428 = load i32, ptr %4427, align 4, !tbaa !6
  %4429 = sitofp i32 %4428 to float
  %4430 = fpext float %4349 to double
  %4431 = fpext float %4429 to double
  %4432 = fmul fast double %4426, %4431
  %4433 = fmul fast double %4432, %4432
  %4434 = fmul fast double %4433, %4433
  %4435 = fadd fast double %4434, %4430
  %4436 = fptrunc double %4435 to float
  %4437 = fadd fast double %4426, %4351
  %4438 = add nuw nsw i32 %4350, 1
  br i1 %4342, label %4439, label %4486

4439:                                             ; preds = %4422
  %4440 = load i32, ptr %4, align 4, !tbaa !6
  %4441 = load i32, ptr %12, align 4, !tbaa !6
  %4442 = add nsw i32 %4441, -1
  %4443 = icmp slt i32 %4440, %4442
  br i1 %4443, label %4463, label %4444

4444:                                             ; preds = %4439
  %4445 = icmp eq i32 %4440, %4442
  br i1 %4445, label %4446, label %4479

4446:                                             ; preds = %4444
  store i32 0, ptr %4, align 4, !tbaa !6
  %4447 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4447, ptr %6, align 4, !tbaa !6
  br i1 %4347, label %4486, label %4448

4448:                                             ; preds = %4446, %4473
  %4449 = phi i64 [ %4477, %4473 ], [ 1, %4446 ]
  %4450 = getelementptr inbounds i32, ptr %4, i64 %4449
  %4451 = load i32, ptr %4450, align 4, !tbaa !6
  %4452 = getelementptr inbounds i32, ptr %12, i64 %4449
  %4453 = load i32, ptr %4452, align 4, !tbaa !6
  %4454 = add nsw i32 %4453, -1
  %4455 = icmp slt i32 %4451, %4454
  br i1 %4455, label %4456, label %4471

4456:                                             ; preds = %4448
  br i1 %4443, label %4463, label %4457

4457:                                             ; preds = %4456
  %4458 = getelementptr inbounds i32, ptr %7, i64 %4449
  %4459 = load i32, ptr %4458, align 4, !tbaa !6
  %4460 = getelementptr inbounds i32, ptr %6, i64 %4449
  %4461 = load i32, ptr %4460, align 4, !tbaa !6
  %4462 = add nsw i32 %4461, %4459
  store i32 %4462, ptr %4460, align 4, !tbaa !6
  br label %4481

4463:                                             ; preds = %4439, %4456
  %4464 = phi i32 [ %4451, %4456 ], [ %4440, %4439 ]
  %4465 = phi ptr [ %4450, %4456 ], [ %4, %4439 ]
  %4466 = phi i64 [ %4449, %4456 ], [ 0, %4439 ]
  %4467 = add nsw i32 %4464, 1
  store i32 %4467, ptr %4465, align 4, !tbaa !6
  %4468 = getelementptr inbounds i32, ptr %7, i64 %4466
  %4469 = load i32, ptr %4468, align 4, !tbaa !6
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4466
  br label %4481

4471:                                             ; preds = %4448
  %4472 = icmp eq i32 %4451, %4454
  br i1 %4472, label %4473, label %4479

4473:                                             ; preds = %4471
  store i32 0, ptr %4450, align 4, !tbaa !6
  %4474 = getelementptr inbounds i32, ptr %8, i64 %4449
  %4475 = load i32, ptr %4474, align 4, !tbaa !6
  %4476 = getelementptr inbounds i32, ptr %6, i64 %4449
  store i32 %4475, ptr %4476, align 4, !tbaa !6
  %4477 = add nuw nsw i64 %4449, 1
  %4478 = icmp eq i64 %4477, %4345
  br i1 %4478, label %4486, label %4448, !llvm.loop !348

4479:                                             ; preds = %4444, %4471
  store float %4436, ptr %4317, align 4, !tbaa !163
  %4480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4481:                                             ; preds = %4457, %4463
  %4482 = phi ptr [ %4470, %4463 ], [ %4450, %4457 ]
  %4483 = phi i32 [ %4469, %4463 ], [ 1, %4457 ]
  %4484 = load i32, ptr %4482, align 4, !tbaa !6
  %4485 = add nsw i32 %4484, %4483
  store i32 %4485, ptr %4482, align 4, !tbaa !6
  br label %4486

4486:                                             ; preds = %4473, %4481, %4446, %4422
  %4487 = icmp eq i32 %4438, %5
  br i1 %4487, label %5542, label %4348, !llvm.loop !349

4488:                                             ; preds = %4331, %4628
  %4489 = phi float [ 0.000000e+00, %4331 ], [ %4576, %4628 ]
  %4490 = phi i32 [ 0, %4331 ], [ %4577, %4628 ]
  %4491 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4332, label %4492, label %4561

4492:                                             ; preds = %4488, %4551
  %4493 = phi i32 [ %4560, %4551 ], [ 0, %4488 ]
  %4494 = phi i64 [ %4502, %4551 ], [ %4336, %4488 ]
  %4495 = phi i64 [ %4559, %4551 ], [ %4335, %4488 ]
  %4496 = phi i32 [ %4557, %4551 ], [ %4491, %4488 ]
  %4497 = sub i32 %4334, %4493
  %4498 = tail call i32 @llvm.smin.i32(i32 %4497, i32 0)
  %4499 = sub i32 %4497, %4498
  %4500 = zext i32 %4499 to i64
  %4501 = add nuw nsw i64 %4500, 1
  %4502 = add nsw i64 %4494, -1
  %4503 = icmp ult i32 %4499, 31
  br i1 %4503, label %4539, label %4504

4504:                                             ; preds = %4492
  %4505 = and i64 %4501, 8589934560
  %4506 = sub i64 %4495, %4505
  br label %4507

4507:                                             ; preds = %4507, %4504
  %4508 = phi i64 [ 0, %4504 ], [ %4531, %4507 ]
  %4509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4527, %4507 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4528, %4507 ]
  %4511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4529, %4507 ]
  %4512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4530, %4507 ]
  %4513 = sub i64 %4495, %4508
  %4514 = getelementptr inbounds i32, ptr %11, i64 %4513
  %4515 = getelementptr inbounds i32, ptr %4514, i64 -7
  %4516 = load <8 x i32>, ptr %4515, align 4, !tbaa !6
  %4517 = shufflevector <8 x i32> %4516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4518 = getelementptr inbounds i32, ptr %4514, i64 -15
  %4519 = load <8 x i32>, ptr %4518, align 4, !tbaa !6
  %4520 = shufflevector <8 x i32> %4519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4521 = getelementptr inbounds i32, ptr %4514, i64 -23
  %4522 = load <8 x i32>, ptr %4521, align 4, !tbaa !6
  %4523 = shufflevector <8 x i32> %4522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4524 = getelementptr inbounds i32, ptr %4514, i64 -31
  %4525 = load <8 x i32>, ptr %4524, align 4, !tbaa !6
  %4526 = shufflevector <8 x i32> %4525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4527 = mul <8 x i32> %4517, %4509
  %4528 = mul <8 x i32> %4520, %4510
  %4529 = mul <8 x i32> %4523, %4511
  %4530 = mul <8 x i32> %4526, %4512
  %4531 = add nuw i64 %4508, 32
  %4532 = icmp eq i64 %4531, %4505
  br i1 %4532, label %4533, label %4507, !llvm.loop !350

4533:                                             ; preds = %4507
  %4534 = mul <8 x i32> %4528, %4527
  %4535 = mul <8 x i32> %4529, %4534
  %4536 = mul <8 x i32> %4530, %4535
  %4537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4536)
  %4538 = icmp eq i64 %4501, %4505
  br i1 %4538, label %4551, label %4539

4539:                                             ; preds = %4492, %4533
  %4540 = phi i64 [ %4495, %4492 ], [ %4506, %4533 ]
  %4541 = phi i32 [ 1, %4492 ], [ %4537, %4533 ]
  br label %4542

4542:                                             ; preds = %4539, %4542
  %4543 = phi i64 [ %4548, %4542 ], [ %4540, %4539 ]
  %4544 = phi i32 [ %4547, %4542 ], [ %4541, %4539 ]
  %4545 = getelementptr inbounds i32, ptr %11, i64 %4543
  %4546 = load i32, ptr %4545, align 4, !tbaa !6
  %4547 = mul nsw i32 %4546, %4544
  %4548 = add nsw i64 %4543, -1
  %4549 = trunc i64 %4543 to i32
  %4550 = icmp sgt i32 %4549, 0
  br i1 %4550, label %4542, label %4551, !llvm.loop !351

4551:                                             ; preds = %4542, %4533
  %4552 = phi i32 [ %4537, %4533 ], [ %4547, %4542 ]
  %4553 = and i64 %4502, 4294967295
  %4554 = getelementptr inbounds i32, ptr %6, i64 %4553
  %4555 = load i32, ptr %4554, align 4, !tbaa !6
  %4556 = mul nsw i32 %4555, %4552
  %4557 = add nsw i32 %4556, %4496
  %4558 = icmp sgt i64 %4494, 2
  %4559 = add nsw i64 %4495, -1
  %4560 = add i32 %4493, 1
  br i1 %4558, label %4492, label %4561, !llvm.loop !352

4561:                                             ; preds = %4551, %4488
  %4562 = phi i32 [ %4491, %4488 ], [ %4557, %4551 ]
  %4563 = icmp slt i32 %4562, %5
  br i1 %4563, label %4566, label %4564

4564:                                             ; preds = %4561
  %4565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4566:                                             ; preds = %4561
  %4567 = sext i32 %4562 to i64
  %4568 = getelementptr inbounds i32, ptr %4315, i64 %4567
  %4569 = load i32, ptr %4568, align 4, !tbaa !6
  %4570 = sitofp i32 %4569 to float
  %4571 = fpext float %4489 to double
  %4572 = fpext float %4570 to double
  %4573 = fmul fast double %4572, %4572
  %4574 = fmul fast double %4573, %4573
  %4575 = fadd fast double %4574, %4571
  %4576 = fptrunc double %4575 to float
  store float %4576, ptr %4317, align 4, !tbaa !163
  %4577 = add nuw nsw i32 %4490, 1
  br i1 %4333, label %4578, label %4628

4578:                                             ; preds = %4566
  %4579 = load i32, ptr %4, align 4, !tbaa !6
  %4580 = load i32, ptr %12, align 4, !tbaa !6
  %4581 = add nsw i32 %4580, -1
  %4582 = icmp slt i32 %4579, %4581
  br i1 %4582, label %4605, label %4583

4583:                                             ; preds = %4578
  %4584 = icmp eq i32 %4579, %4581
  br i1 %4584, label %4585, label %4621

4585:                                             ; preds = %4583
  store i32 0, ptr %4, align 4, !tbaa !6
  %4586 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4586, ptr %6, align 4, !tbaa !6
  br i1 %4338, label %4628, label %4587

4587:                                             ; preds = %4585, %4615
  %4588 = phi i64 [ %4619, %4615 ], [ 1, %4585 ]
  %4589 = getelementptr inbounds i32, ptr %4, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %12, i64 %4588
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = add nsw i32 %4592, -1
  %4594 = icmp slt i32 %4590, %4593
  br i1 %4594, label %4595, label %4613

4595:                                             ; preds = %4587
  br i1 %4582, label %4605, label %4596

4596:                                             ; preds = %4595
  %4597 = shl i64 %4588, 32
  %4598 = add i64 %4597, -4294967296
  %4599 = ashr exact i64 %4598, 32
  %4600 = getelementptr inbounds i32, ptr %7, i64 %4599
  %4601 = load i32, ptr %4600, align 4, !tbaa !6
  %4602 = getelementptr inbounds i32, ptr %6, i64 %4588
  %4603 = load i32, ptr %4602, align 4, !tbaa !6
  %4604 = add nsw i32 %4603, %4601
  store i32 %4604, ptr %4602, align 4, !tbaa !6
  br label %4623

4605:                                             ; preds = %4578, %4595
  %4606 = phi i32 [ %4590, %4595 ], [ %4579, %4578 ]
  %4607 = phi ptr [ %4589, %4595 ], [ %4, %4578 ]
  %4608 = phi i64 [ %4588, %4595 ], [ 0, %4578 ]
  %4609 = add nsw i32 %4606, 1
  store i32 %4609, ptr %4607, align 4, !tbaa !6
  %4610 = getelementptr inbounds i32, ptr %7, i64 %4608
  %4611 = load i32, ptr %4610, align 4, !tbaa !6
  %4612 = getelementptr inbounds i32, ptr %6, i64 %4608
  br label %4623

4613:                                             ; preds = %4587
  %4614 = icmp eq i32 %4590, %4593
  br i1 %4614, label %4615, label %4621

4615:                                             ; preds = %4613
  store i32 0, ptr %4589, align 4, !tbaa !6
  %4616 = getelementptr inbounds i32, ptr %8, i64 %4588
  %4617 = load i32, ptr %4616, align 4, !tbaa !6
  %4618 = getelementptr inbounds i32, ptr %6, i64 %4588
  store i32 %4617, ptr %4618, align 4, !tbaa !6
  %4619 = add nuw nsw i64 %4588, 1
  %4620 = icmp eq i64 %4619, %4336
  br i1 %4620, label %4628, label %4587, !llvm.loop !353

4621:                                             ; preds = %4583, %4613
  %4622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4623:                                             ; preds = %4596, %4605
  %4624 = phi ptr [ %4612, %4605 ], [ %4589, %4596 ]
  %4625 = phi i32 [ %4611, %4605 ], [ 1, %4596 ]
  %4626 = load i32, ptr %4624, align 4, !tbaa !6
  %4627 = add nsw i32 %4626, %4625
  store i32 %4627, ptr %4624, align 4, !tbaa !6
  br label %4628

4628:                                             ; preds = %4615, %4623, %4585, %4566
  %4629 = icmp eq i32 %4577, %5
  br i1 %4629, label %5545, label %4488, !llvm.loop !354

4630:                                             ; preds = %4324
  %4631 = getelementptr inbounds i32, ptr %3, i64 %19
  %4632 = load i32, ptr %4631, align 4, !tbaa !6
  %4633 = icmp eq i32 %4632, 0
  %4634 = icmp sgt i32 %5, 0
  br i1 %4633, label %4644, label %4635

4635:                                             ; preds = %4630
  br i1 %4634, label %4636, label %5545

4636:                                             ; preds = %4635
  %4637 = icmp sgt i32 %13, 1
  %4638 = icmp sgt i32 %13, 0
  %4639 = add i32 %13, -2
  %4640 = zext i32 %4639 to i64
  %4641 = zext i32 %13 to i64
  %4642 = add nuw i32 %5, 1
  %4643 = icmp eq i32 %13, 1
  br label %4787

4644:                                             ; preds = %4630
  br i1 %4634, label %4645, label %5545

4645:                                             ; preds = %4644
  %4646 = icmp sgt i32 %13, 1
  %4647 = icmp sgt i32 %13, 0
  %4648 = add i32 %13, -2
  %4649 = zext i32 %4648 to i64
  %4650 = zext i32 %13 to i64
  %4651 = add nuw i32 %5, 1
  %4652 = icmp eq i32 %13, 1
  br label %4653

4653:                                             ; preds = %4645, %4785
  %4654 = phi float [ 0.000000e+00, %4645 ], [ %4735, %4785 ]
  %4655 = phi i32 [ 0, %4645 ], [ %4737, %4785 ]
  %4656 = phi double [ 0.000000e+00, %4645 ], [ %4736, %4785 ]
  %4657 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4646, label %4658, label %4727

4658:                                             ; preds = %4653, %4717
  %4659 = phi i32 [ %4726, %4717 ], [ 0, %4653 ]
  %4660 = phi i64 [ %4668, %4717 ], [ %4650, %4653 ]
  %4661 = phi i64 [ %4725, %4717 ], [ %4649, %4653 ]
  %4662 = phi i32 [ %4723, %4717 ], [ %4657, %4653 ]
  %4663 = sub i32 %4648, %4659
  %4664 = tail call i32 @llvm.smin.i32(i32 %4663, i32 0)
  %4665 = sub i32 %4663, %4664
  %4666 = zext i32 %4665 to i64
  %4667 = add nuw nsw i64 %4666, 1
  %4668 = add nsw i64 %4660, -1
  %4669 = icmp ult i32 %4665, 31
  br i1 %4669, label %4705, label %4670

4670:                                             ; preds = %4658
  %4671 = and i64 %4667, 8589934560
  %4672 = sub i64 %4661, %4671
  br label %4673

4673:                                             ; preds = %4673, %4670
  %4674 = phi i64 [ 0, %4670 ], [ %4697, %4673 ]
  %4675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4693, %4673 ]
  %4676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4694, %4673 ]
  %4677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4695, %4673 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4696, %4673 ]
  %4679 = sub i64 %4661, %4674
  %4680 = getelementptr inbounds i32, ptr %9, i64 %4679
  %4681 = getelementptr inbounds i32, ptr %4680, i64 -7
  %4682 = load <8 x i32>, ptr %4681, align 4, !tbaa !6
  %4683 = shufflevector <8 x i32> %4682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4684 = getelementptr inbounds i32, ptr %4680, i64 -15
  %4685 = load <8 x i32>, ptr %4684, align 4, !tbaa !6
  %4686 = shufflevector <8 x i32> %4685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4687 = getelementptr inbounds i32, ptr %4680, i64 -23
  %4688 = load <8 x i32>, ptr %4687, align 4, !tbaa !6
  %4689 = shufflevector <8 x i32> %4688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4690 = getelementptr inbounds i32, ptr %4680, i64 -31
  %4691 = load <8 x i32>, ptr %4690, align 4, !tbaa !6
  %4692 = shufflevector <8 x i32> %4691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4693 = mul <8 x i32> %4683, %4675
  %4694 = mul <8 x i32> %4686, %4676
  %4695 = mul <8 x i32> %4689, %4677
  %4696 = mul <8 x i32> %4692, %4678
  %4697 = add nuw i64 %4674, 32
  %4698 = icmp eq i64 %4697, %4671
  br i1 %4698, label %4699, label %4673, !llvm.loop !355

4699:                                             ; preds = %4673
  %4700 = mul <8 x i32> %4694, %4693
  %4701 = mul <8 x i32> %4695, %4700
  %4702 = mul <8 x i32> %4696, %4701
  %4703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4702)
  %4704 = icmp eq i64 %4667, %4671
  br i1 %4704, label %4717, label %4705

4705:                                             ; preds = %4658, %4699
  %4706 = phi i64 [ %4661, %4658 ], [ %4672, %4699 ]
  %4707 = phi i32 [ 1, %4658 ], [ %4703, %4699 ]
  br label %4708

4708:                                             ; preds = %4705, %4708
  %4709 = phi i64 [ %4714, %4708 ], [ %4706, %4705 ]
  %4710 = phi i32 [ %4713, %4708 ], [ %4707, %4705 ]
  %4711 = getelementptr inbounds i32, ptr %9, i64 %4709
  %4712 = load i32, ptr %4711, align 4, !tbaa !6
  %4713 = mul nsw i32 %4712, %4710
  %4714 = add nsw i64 %4709, -1
  %4715 = trunc i64 %4709 to i32
  %4716 = icmp sgt i32 %4715, 0
  br i1 %4716, label %4708, label %4717, !llvm.loop !356

4717:                                             ; preds = %4708, %4699
  %4718 = phi i32 [ %4703, %4699 ], [ %4713, %4708 ]
  %4719 = and i64 %4668, 4294967295
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4719
  %4721 = load i32, ptr %4720, align 4, !tbaa !6
  %4722 = mul nsw i32 %4721, %4718
  %4723 = add nsw i32 %4722, %4662
  %4724 = icmp sgt i64 %4660, 2
  %4725 = add nsw i64 %4661, -1
  %4726 = add i32 %4659, 1
  br i1 %4724, label %4658, label %4727, !llvm.loop !357

4727:                                             ; preds = %4717, %4653
  %4728 = phi i32 [ %4657, %4653 ], [ %4723, %4717 ]
  %4729 = sext i32 %4728 to i64
  %4730 = getelementptr inbounds i32, ptr %4315, i64 %4729
  %4731 = load i32, ptr %4730, align 4, !tbaa !6
  %4732 = sitofp i32 %4731 to float
  %4733 = fmul fast float %4732, %4732
  %4734 = fmul fast float %4733, %4733
  %4735 = fadd fast float %4734, %4654
  %4736 = fadd fast double %4656, 1.000000e+00
  %4737 = add nuw nsw i32 %4655, 1
  br i1 %4647, label %4738, label %4785

4738:                                             ; preds = %4727
  %4739 = load i32, ptr %4, align 4, !tbaa !6
  %4740 = load i32, ptr %12, align 4, !tbaa !6
  %4741 = add nsw i32 %4740, -1
  %4742 = icmp slt i32 %4739, %4741
  br i1 %4742, label %4762, label %4743

4743:                                             ; preds = %4738
  %4744 = icmp eq i32 %4739, %4741
  br i1 %4744, label %4745, label %4778

4745:                                             ; preds = %4743
  store i32 0, ptr %4, align 4, !tbaa !6
  %4746 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4746, ptr %6, align 4, !tbaa !6
  br i1 %4652, label %4785, label %4747

4747:                                             ; preds = %4745, %4772
  %4748 = phi i64 [ %4776, %4772 ], [ 1, %4745 ]
  %4749 = getelementptr inbounds i32, ptr %4, i64 %4748
  %4750 = load i32, ptr %4749, align 4, !tbaa !6
  %4751 = getelementptr inbounds i32, ptr %12, i64 %4748
  %4752 = load i32, ptr %4751, align 4, !tbaa !6
  %4753 = add nsw i32 %4752, -1
  %4754 = icmp slt i32 %4750, %4753
  br i1 %4754, label %4755, label %4770

4755:                                             ; preds = %4747
  br i1 %4742, label %4762, label %4756

4756:                                             ; preds = %4755
  %4757 = getelementptr inbounds i32, ptr %7, i64 %4748
  %4758 = load i32, ptr %4757, align 4, !tbaa !6
  %4759 = getelementptr inbounds i32, ptr %6, i64 %4748
  %4760 = load i32, ptr %4759, align 4, !tbaa !6
  %4761 = add nsw i32 %4760, %4758
  store i32 %4761, ptr %4759, align 4, !tbaa !6
  br label %4780

4762:                                             ; preds = %4738, %4755
  %4763 = phi i32 [ %4750, %4755 ], [ %4739, %4738 ]
  %4764 = phi ptr [ %4749, %4755 ], [ %4, %4738 ]
  %4765 = phi i64 [ %4748, %4755 ], [ 0, %4738 ]
  %4766 = add nsw i32 %4763, 1
  store i32 %4766, ptr %4764, align 4, !tbaa !6
  %4767 = getelementptr inbounds i32, ptr %7, i64 %4765
  %4768 = load i32, ptr %4767, align 4, !tbaa !6
  %4769 = getelementptr inbounds i32, ptr %6, i64 %4765
  br label %4780

4770:                                             ; preds = %4747
  %4771 = icmp eq i32 %4750, %4753
  br i1 %4771, label %4772, label %4778

4772:                                             ; preds = %4770
  store i32 0, ptr %4749, align 4, !tbaa !6
  %4773 = getelementptr inbounds i32, ptr %8, i64 %4748
  %4774 = load i32, ptr %4773, align 4, !tbaa !6
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4748
  store i32 %4774, ptr %4775, align 4, !tbaa !6
  %4776 = add nuw nsw i64 %4748, 1
  %4777 = icmp eq i64 %4776, %4650
  br i1 %4777, label %4785, label %4747, !llvm.loop !358

4778:                                             ; preds = %4743, %4770
  store float %4735, ptr %4317, align 4, !tbaa !163
  %4779 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4780:                                             ; preds = %4756, %4762
  %4781 = phi ptr [ %4769, %4762 ], [ %4749, %4756 ]
  %4782 = phi i32 [ %4768, %4762 ], [ 1, %4756 ]
  %4783 = load i32, ptr %4781, align 4, !tbaa !6
  %4784 = add nsw i32 %4783, %4782
  store i32 %4784, ptr %4781, align 4, !tbaa !6
  br label %4785

4785:                                             ; preds = %4772, %4780, %4745, %4727
  %4786 = icmp eq i32 %4737, %5
  br i1 %4786, label %5543, label %4653, !llvm.loop !359

4787:                                             ; preds = %4636, %4924
  %4788 = phi float [ 0.000000e+00, %4636 ], [ %4872, %4924 ]
  %4789 = phi i32 [ 0, %4636 ], [ %4873, %4924 ]
  %4790 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4637, label %4791, label %4860

4791:                                             ; preds = %4787, %4850
  %4792 = phi i32 [ %4859, %4850 ], [ 0, %4787 ]
  %4793 = phi i64 [ %4801, %4850 ], [ %4641, %4787 ]
  %4794 = phi i64 [ %4858, %4850 ], [ %4640, %4787 ]
  %4795 = phi i32 [ %4856, %4850 ], [ %4790, %4787 ]
  %4796 = sub i32 %4639, %4792
  %4797 = tail call i32 @llvm.smin.i32(i32 %4796, i32 0)
  %4798 = sub i32 %4796, %4797
  %4799 = zext i32 %4798 to i64
  %4800 = add nuw nsw i64 %4799, 1
  %4801 = add nsw i64 %4793, -1
  %4802 = icmp ult i32 %4798, 31
  br i1 %4802, label %4838, label %4803

4803:                                             ; preds = %4791
  %4804 = and i64 %4800, 8589934560
  %4805 = sub i64 %4794, %4804
  br label %4806

4806:                                             ; preds = %4806, %4803
  %4807 = phi i64 [ 0, %4803 ], [ %4830, %4806 ]
  %4808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4826, %4806 ]
  %4809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4827, %4806 ]
  %4810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4828, %4806 ]
  %4811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4829, %4806 ]
  %4812 = sub i64 %4794, %4807
  %4813 = getelementptr inbounds i32, ptr %11, i64 %4812
  %4814 = getelementptr inbounds i32, ptr %4813, i64 -7
  %4815 = load <8 x i32>, ptr %4814, align 4, !tbaa !6
  %4816 = shufflevector <8 x i32> %4815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4817 = getelementptr inbounds i32, ptr %4813, i64 -15
  %4818 = load <8 x i32>, ptr %4817, align 4, !tbaa !6
  %4819 = shufflevector <8 x i32> %4818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4820 = getelementptr inbounds i32, ptr %4813, i64 -23
  %4821 = load <8 x i32>, ptr %4820, align 4, !tbaa !6
  %4822 = shufflevector <8 x i32> %4821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4823 = getelementptr inbounds i32, ptr %4813, i64 -31
  %4824 = load <8 x i32>, ptr %4823, align 4, !tbaa !6
  %4825 = shufflevector <8 x i32> %4824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4826 = mul <8 x i32> %4816, %4808
  %4827 = mul <8 x i32> %4819, %4809
  %4828 = mul <8 x i32> %4822, %4810
  %4829 = mul <8 x i32> %4825, %4811
  %4830 = add nuw i64 %4807, 32
  %4831 = icmp eq i64 %4830, %4804
  br i1 %4831, label %4832, label %4806, !llvm.loop !360

4832:                                             ; preds = %4806
  %4833 = mul <8 x i32> %4827, %4826
  %4834 = mul <8 x i32> %4828, %4833
  %4835 = mul <8 x i32> %4829, %4834
  %4836 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4835)
  %4837 = icmp eq i64 %4800, %4804
  br i1 %4837, label %4850, label %4838

4838:                                             ; preds = %4791, %4832
  %4839 = phi i64 [ %4794, %4791 ], [ %4805, %4832 ]
  %4840 = phi i32 [ 1, %4791 ], [ %4836, %4832 ]
  br label %4841

4841:                                             ; preds = %4838, %4841
  %4842 = phi i64 [ %4847, %4841 ], [ %4839, %4838 ]
  %4843 = phi i32 [ %4846, %4841 ], [ %4840, %4838 ]
  %4844 = getelementptr inbounds i32, ptr %11, i64 %4842
  %4845 = load i32, ptr %4844, align 4, !tbaa !6
  %4846 = mul nsw i32 %4845, %4843
  %4847 = add nsw i64 %4842, -1
  %4848 = trunc i64 %4842 to i32
  %4849 = icmp sgt i32 %4848, 0
  br i1 %4849, label %4841, label %4850, !llvm.loop !361

4850:                                             ; preds = %4841, %4832
  %4851 = phi i32 [ %4836, %4832 ], [ %4846, %4841 ]
  %4852 = and i64 %4801, 4294967295
  %4853 = getelementptr inbounds i32, ptr %6, i64 %4852
  %4854 = load i32, ptr %4853, align 4, !tbaa !6
  %4855 = mul nsw i32 %4854, %4851
  %4856 = add nsw i32 %4855, %4795
  %4857 = icmp sgt i64 %4793, 2
  %4858 = add nsw i64 %4794, -1
  %4859 = add i32 %4792, 1
  br i1 %4857, label %4791, label %4860, !llvm.loop !362

4860:                                             ; preds = %4850, %4787
  %4861 = phi i32 [ %4790, %4787 ], [ %4856, %4850 ]
  %4862 = icmp slt i32 %4861, %5
  br i1 %4862, label %4865, label %4863

4863:                                             ; preds = %4860
  %4864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4865:                                             ; preds = %4860
  %4866 = sext i32 %4861 to i64
  %4867 = getelementptr inbounds i32, ptr %4315, i64 %4866
  %4868 = load i32, ptr %4867, align 4, !tbaa !6
  %4869 = sitofp i32 %4868 to float
  %4870 = fmul fast float %4869, %4869
  %4871 = fmul fast float %4870, %4870
  %4872 = fadd fast float %4871, %4788
  store float %4872, ptr %4317, align 4, !tbaa !163
  %4873 = add nuw nsw i32 %4789, 1
  br i1 %4638, label %4874, label %4924

4874:                                             ; preds = %4865
  %4875 = load i32, ptr %4, align 4, !tbaa !6
  %4876 = load i32, ptr %12, align 4, !tbaa !6
  %4877 = add nsw i32 %4876, -1
  %4878 = icmp slt i32 %4875, %4877
  br i1 %4878, label %4901, label %4879

4879:                                             ; preds = %4874
  %4880 = icmp eq i32 %4875, %4877
  br i1 %4880, label %4881, label %4917

4881:                                             ; preds = %4879
  store i32 0, ptr %4, align 4, !tbaa !6
  %4882 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4882, ptr %6, align 4, !tbaa !6
  br i1 %4643, label %4924, label %4883

4883:                                             ; preds = %4881, %4911
  %4884 = phi i64 [ %4915, %4911 ], [ 1, %4881 ]
  %4885 = getelementptr inbounds i32, ptr %4, i64 %4884
  %4886 = load i32, ptr %4885, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %12, i64 %4884
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = add nsw i32 %4888, -1
  %4890 = icmp slt i32 %4886, %4889
  br i1 %4890, label %4891, label %4909

4891:                                             ; preds = %4883
  br i1 %4878, label %4901, label %4892

4892:                                             ; preds = %4891
  %4893 = shl i64 %4884, 32
  %4894 = add i64 %4893, -4294967296
  %4895 = ashr exact i64 %4894, 32
  %4896 = getelementptr inbounds i32, ptr %7, i64 %4895
  %4897 = load i32, ptr %4896, align 4, !tbaa !6
  %4898 = getelementptr inbounds i32, ptr %6, i64 %4884
  %4899 = load i32, ptr %4898, align 4, !tbaa !6
  %4900 = add nsw i32 %4899, %4897
  store i32 %4900, ptr %4898, align 4, !tbaa !6
  br label %4919

4901:                                             ; preds = %4874, %4891
  %4902 = phi i32 [ %4886, %4891 ], [ %4875, %4874 ]
  %4903 = phi ptr [ %4885, %4891 ], [ %4, %4874 ]
  %4904 = phi i64 [ %4884, %4891 ], [ 0, %4874 ]
  %4905 = add nsw i32 %4902, 1
  store i32 %4905, ptr %4903, align 4, !tbaa !6
  %4906 = getelementptr inbounds i32, ptr %7, i64 %4904
  %4907 = load i32, ptr %4906, align 4, !tbaa !6
  %4908 = getelementptr inbounds i32, ptr %6, i64 %4904
  br label %4919

4909:                                             ; preds = %4883
  %4910 = icmp eq i32 %4886, %4889
  br i1 %4910, label %4911, label %4917

4911:                                             ; preds = %4909
  store i32 0, ptr %4885, align 4, !tbaa !6
  %4912 = getelementptr inbounds i32, ptr %8, i64 %4884
  %4913 = load i32, ptr %4912, align 4, !tbaa !6
  %4914 = getelementptr inbounds i32, ptr %6, i64 %4884
  store i32 %4913, ptr %4914, align 4, !tbaa !6
  %4915 = add nuw nsw i64 %4884, 1
  %4916 = icmp eq i64 %4915, %4641
  br i1 %4916, label %4924, label %4883, !llvm.loop !363

4917:                                             ; preds = %4879, %4909
  %4918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4919:                                             ; preds = %4892, %4901
  %4920 = phi ptr [ %4908, %4901 ], [ %4885, %4892 ]
  %4921 = phi i32 [ %4907, %4901 ], [ 1, %4892 ]
  %4922 = load i32, ptr %4920, align 4, !tbaa !6
  %4923 = add nsw i32 %4922, %4921
  store i32 %4923, ptr %4920, align 4, !tbaa !6
  br label %4924

4924:                                             ; preds = %4911, %4919, %4881, %4865
  %4925 = icmp eq i32 %4873, %5
  br i1 %4925, label %5545, label %4787, !llvm.loop !364

4926:                                             ; preds = %4324
  %4927 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 363, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4928:                                             ; preds = %18
  %4929 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4930 = load ptr, ptr %4929, align 8, !tbaa !10
  %4931 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4932 = load ptr, ptr %4931, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4932, align 8, !tbaa !19
  %4933 = icmp eq i32 %13, 0
  br i1 %4933, label %4934, label %4939

4934:                                             ; preds = %4928
  %4935 = load i32, ptr %4930, align 4, !tbaa !6
  %4936 = sitofp i32 %4935 to double
  %4937 = fmul fast double %4936, %4936
  %4938 = fmul fast double %4937, %4937
  store double %4938, ptr %4932, align 8, !tbaa !19
  br label %5545

4939:                                             ; preds = %4928
  switch i32 %1, label %5535 [
    i32 1, label %4940
    i32 0, label %5239
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !6
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5545

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5100

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5545

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5098
  %4964 = phi double [ 0.000000e+00, %4955 ], [ %5048, %5098 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5050, %5098 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5049, %5098 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !6
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !6
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !6
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !6
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !365

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !6
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !366

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !6
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !367

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !19
  %5042 = getelementptr inbounds i32, ptr %4930, i64 %5039
  %5043 = load i32, ptr %5042, align 4, !tbaa !6
  %5044 = sitofp i32 %5043 to double
  %5045 = fmul fast double %5041, %5044
  %5046 = fmul fast double %5045, %5045
  %5047 = fmul fast double %5046, %5046
  %5048 = fadd fast double %5047, %4964
  store double %5048, ptr %4932, align 8, !tbaa !19
  %5049 = fadd fast double %5041, %4966
  %5050 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5051, label %5098

5051:                                             ; preds = %5037
  %5052 = load i32, ptr %4, align 4, !tbaa !6
  %5053 = load i32, ptr %12, align 4, !tbaa !6
  %5054 = add nsw i32 %5053, -1
  %5055 = icmp slt i32 %5052, %5054
  br i1 %5055, label %5075, label %5056

5056:                                             ; preds = %5051
  %5057 = icmp eq i32 %5052, %5054
  br i1 %5057, label %5058, label %5091

5058:                                             ; preds = %5056
  store i32 0, ptr %4, align 4, !tbaa !6
  %5059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5059, ptr %6, align 4, !tbaa !6
  br i1 %4962, label %5098, label %5060

5060:                                             ; preds = %5058, %5085
  %5061 = phi i64 [ %5089, %5085 ], [ 1, %5058 ]
  %5062 = getelementptr inbounds i32, ptr %4, i64 %5061
  %5063 = load i32, ptr %5062, align 4, !tbaa !6
  %5064 = getelementptr inbounds i32, ptr %12, i64 %5061
  %5065 = load i32, ptr %5064, align 4, !tbaa !6
  %5066 = add nsw i32 %5065, -1
  %5067 = icmp slt i32 %5063, %5066
  br i1 %5067, label %5068, label %5083

5068:                                             ; preds = %5060
  br i1 %5055, label %5075, label %5069

5069:                                             ; preds = %5068
  %5070 = getelementptr inbounds i32, ptr %7, i64 %5061
  %5071 = load i32, ptr %5070, align 4, !tbaa !6
  %5072 = getelementptr inbounds i32, ptr %6, i64 %5061
  %5073 = load i32, ptr %5072, align 4, !tbaa !6
  %5074 = add nsw i32 %5073, %5071
  store i32 %5074, ptr %5072, align 4, !tbaa !6
  br label %5093

5075:                                             ; preds = %5051, %5068
  %5076 = phi i32 [ %5063, %5068 ], [ %5052, %5051 ]
  %5077 = phi ptr [ %5062, %5068 ], [ %4, %5051 ]
  %5078 = phi i64 [ %5061, %5068 ], [ 0, %5051 ]
  %5079 = add nsw i32 %5076, 1
  store i32 %5079, ptr %5077, align 4, !tbaa !6
  %5080 = getelementptr inbounds i32, ptr %7, i64 %5078
  %5081 = load i32, ptr %5080, align 4, !tbaa !6
  %5082 = getelementptr inbounds i32, ptr %6, i64 %5078
  br label %5093

5083:                                             ; preds = %5060
  %5084 = icmp eq i32 %5063, %5066
  br i1 %5084, label %5085, label %5091

5085:                                             ; preds = %5083
  store i32 0, ptr %5062, align 4, !tbaa !6
  %5086 = getelementptr inbounds i32, ptr %8, i64 %5061
  %5087 = load i32, ptr %5086, align 4, !tbaa !6
  %5088 = getelementptr inbounds i32, ptr %6, i64 %5061
  store i32 %5087, ptr %5088, align 4, !tbaa !6
  %5089 = add nuw nsw i64 %5061, 1
  %5090 = icmp eq i64 %5089, %4960
  br i1 %5090, label %5098, label %5060, !llvm.loop !368

5091:                                             ; preds = %5056, %5083
  %5092 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5093:                                             ; preds = %5069, %5075
  %5094 = phi ptr [ %5082, %5075 ], [ %5062, %5069 ]
  %5095 = phi i32 [ %5081, %5075 ], [ 1, %5069 ]
  %5096 = load i32, ptr %5094, align 4, !tbaa !6
  %5097 = add nsw i32 %5096, %5095
  store i32 %5097, ptr %5094, align 4, !tbaa !6
  br label %5098

5098:                                             ; preds = %5085, %5093, %5058, %5037
  %5099 = icmp eq i32 %5050, %5
  br i1 %5099, label %5545, label %4963, !llvm.loop !369

5100:                                             ; preds = %4946, %5237
  %5101 = phi double [ 0.000000e+00, %4946 ], [ %5185, %5237 ]
  %5102 = phi i32 [ 0, %4946 ], [ %5186, %5237 ]
  %5103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5104, label %5173

5104:                                             ; preds = %5100, %5163
  %5105 = phi i32 [ %5172, %5163 ], [ 0, %5100 ]
  %5106 = phi i64 [ %5114, %5163 ], [ %4951, %5100 ]
  %5107 = phi i64 [ %5171, %5163 ], [ %4950, %5100 ]
  %5108 = phi i32 [ %5169, %5163 ], [ %5103, %5100 ]
  %5109 = sub i32 %4949, %5105
  %5110 = tail call i32 @llvm.smin.i32(i32 %5109, i32 0)
  %5111 = sub i32 %5109, %5110
  %5112 = zext i32 %5111 to i64
  %5113 = add nuw nsw i64 %5112, 1
  %5114 = add nsw i64 %5106, -1
  %5115 = icmp ult i32 %5111, 31
  br i1 %5115, label %5151, label %5116

5116:                                             ; preds = %5104
  %5117 = and i64 %5113, 8589934560
  %5118 = sub i64 %5107, %5117
  br label %5119

5119:                                             ; preds = %5119, %5116
  %5120 = phi i64 [ 0, %5116 ], [ %5143, %5119 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5139, %5119 ]
  %5122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5140, %5119 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5141, %5119 ]
  %5124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5142, %5119 ]
  %5125 = sub i64 %5107, %5120
  %5126 = getelementptr inbounds i32, ptr %11, i64 %5125
  %5127 = getelementptr inbounds i32, ptr %5126, i64 -7
  %5128 = load <8 x i32>, ptr %5127, align 4, !tbaa !6
  %5129 = shufflevector <8 x i32> %5128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5130 = getelementptr inbounds i32, ptr %5126, i64 -15
  %5131 = load <8 x i32>, ptr %5130, align 4, !tbaa !6
  %5132 = shufflevector <8 x i32> %5131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5133 = getelementptr inbounds i32, ptr %5126, i64 -23
  %5134 = load <8 x i32>, ptr %5133, align 4, !tbaa !6
  %5135 = shufflevector <8 x i32> %5134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5136 = getelementptr inbounds i32, ptr %5126, i64 -31
  %5137 = load <8 x i32>, ptr %5136, align 4, !tbaa !6
  %5138 = shufflevector <8 x i32> %5137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5139 = mul <8 x i32> %5129, %5121
  %5140 = mul <8 x i32> %5132, %5122
  %5141 = mul <8 x i32> %5135, %5123
  %5142 = mul <8 x i32> %5138, %5124
  %5143 = add nuw i64 %5120, 32
  %5144 = icmp eq i64 %5143, %5117
  br i1 %5144, label %5145, label %5119, !llvm.loop !370

5145:                                             ; preds = %5119
  %5146 = mul <8 x i32> %5140, %5139
  %5147 = mul <8 x i32> %5141, %5146
  %5148 = mul <8 x i32> %5142, %5147
  %5149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5148)
  %5150 = icmp eq i64 %5113, %5117
  br i1 %5150, label %5163, label %5151

5151:                                             ; preds = %5104, %5145
  %5152 = phi i64 [ %5107, %5104 ], [ %5118, %5145 ]
  %5153 = phi i32 [ 1, %5104 ], [ %5149, %5145 ]
  br label %5154

5154:                                             ; preds = %5151, %5154
  %5155 = phi i64 [ %5160, %5154 ], [ %5152, %5151 ]
  %5156 = phi i32 [ %5159, %5154 ], [ %5153, %5151 ]
  %5157 = getelementptr inbounds i32, ptr %11, i64 %5155
  %5158 = load i32, ptr %5157, align 4, !tbaa !6
  %5159 = mul nsw i32 %5158, %5156
  %5160 = add nsw i64 %5155, -1
  %5161 = trunc i64 %5155 to i32
  %5162 = icmp sgt i32 %5161, 0
  br i1 %5162, label %5154, label %5163, !llvm.loop !371

5163:                                             ; preds = %5154, %5145
  %5164 = phi i32 [ %5149, %5145 ], [ %5159, %5154 ]
  %5165 = and i64 %5114, 4294967295
  %5166 = getelementptr inbounds i32, ptr %6, i64 %5165
  %5167 = load i32, ptr %5166, align 4, !tbaa !6
  %5168 = mul nsw i32 %5167, %5164
  %5169 = add nsw i32 %5168, %5108
  %5170 = icmp sgt i64 %5106, 2
  %5171 = add nsw i64 %5107, -1
  %5172 = add i32 %5105, 1
  br i1 %5170, label %5104, label %5173, !llvm.loop !372

5173:                                             ; preds = %5163, %5100
  %5174 = phi i32 [ %5103, %5100 ], [ %5169, %5163 ]
  %5175 = icmp slt i32 %5174, %5
  br i1 %5175, label %5178, label %5176

5176:                                             ; preds = %5173
  %5177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5178:                                             ; preds = %5173
  %5179 = sext i32 %5174 to i64
  %5180 = getelementptr inbounds i32, ptr %4930, i64 %5179
  %5181 = load i32, ptr %5180, align 4, !tbaa !6
  %5182 = sitofp i32 %5181 to double
  %5183 = fmul fast double %5182, %5182
  %5184 = fmul fast double %5183, %5183
  %5185 = fadd fast double %5184, %5101
  store double %5185, ptr %4932, align 8, !tbaa !19
  %5186 = add nuw nsw i32 %5102, 1
  br i1 %4948, label %5187, label %5237

5187:                                             ; preds = %5178
  %5188 = load i32, ptr %4, align 4, !tbaa !6
  %5189 = load i32, ptr %12, align 4, !tbaa !6
  %5190 = add nsw i32 %5189, -1
  %5191 = icmp slt i32 %5188, %5190
  br i1 %5191, label %5214, label %5192

5192:                                             ; preds = %5187
  %5193 = icmp eq i32 %5188, %5190
  br i1 %5193, label %5194, label %5230

5194:                                             ; preds = %5192
  store i32 0, ptr %4, align 4, !tbaa !6
  %5195 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5195, ptr %6, align 4, !tbaa !6
  br i1 %4953, label %5237, label %5196

5196:                                             ; preds = %5194, %5224
  %5197 = phi i64 [ %5228, %5224 ], [ 1, %5194 ]
  %5198 = getelementptr inbounds i32, ptr %4, i64 %5197
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %12, i64 %5197
  %5201 = load i32, ptr %5200, align 4, !tbaa !6
  %5202 = add nsw i32 %5201, -1
  %5203 = icmp slt i32 %5199, %5202
  br i1 %5203, label %5204, label %5222

5204:                                             ; preds = %5196
  br i1 %5191, label %5214, label %5205

5205:                                             ; preds = %5204
  %5206 = shl i64 %5197, 32
  %5207 = add i64 %5206, -4294967296
  %5208 = ashr exact i64 %5207, 32
  %5209 = getelementptr inbounds i32, ptr %7, i64 %5208
  %5210 = load i32, ptr %5209, align 4, !tbaa !6
  %5211 = getelementptr inbounds i32, ptr %6, i64 %5197
  %5212 = load i32, ptr %5211, align 4, !tbaa !6
  %5213 = add nsw i32 %5212, %5210
  store i32 %5213, ptr %5211, align 4, !tbaa !6
  br label %5232

5214:                                             ; preds = %5187, %5204
  %5215 = phi i32 [ %5199, %5204 ], [ %5188, %5187 ]
  %5216 = phi ptr [ %5198, %5204 ], [ %4, %5187 ]
  %5217 = phi i64 [ %5197, %5204 ], [ 0, %5187 ]
  %5218 = add nsw i32 %5215, 1
  store i32 %5218, ptr %5216, align 4, !tbaa !6
  %5219 = getelementptr inbounds i32, ptr %7, i64 %5217
  %5220 = load i32, ptr %5219, align 4, !tbaa !6
  %5221 = getelementptr inbounds i32, ptr %6, i64 %5217
  br label %5232

5222:                                             ; preds = %5196
  %5223 = icmp eq i32 %5199, %5202
  br i1 %5223, label %5224, label %5230

5224:                                             ; preds = %5222
  store i32 0, ptr %5198, align 4, !tbaa !6
  %5225 = getelementptr inbounds i32, ptr %8, i64 %5197
  %5226 = load i32, ptr %5225, align 4, !tbaa !6
  %5227 = getelementptr inbounds i32, ptr %6, i64 %5197
  store i32 %5226, ptr %5227, align 4, !tbaa !6
  %5228 = add nuw nsw i64 %5197, 1
  %5229 = icmp eq i64 %5228, %4951
  br i1 %5229, label %5237, label %5196, !llvm.loop !373

5230:                                             ; preds = %5192, %5222
  %5231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5232:                                             ; preds = %5205, %5214
  %5233 = phi ptr [ %5221, %5214 ], [ %5198, %5205 ]
  %5234 = phi i32 [ %5220, %5214 ], [ 1, %5205 ]
  %5235 = load i32, ptr %5233, align 4, !tbaa !6
  %5236 = add nsw i32 %5235, %5234
  store i32 %5236, ptr %5233, align 4, !tbaa !6
  br label %5237

5237:                                             ; preds = %5224, %5232, %5194, %5178
  %5238 = icmp eq i32 %5186, %5
  br i1 %5238, label %5545, label %5100, !llvm.loop !374

5239:                                             ; preds = %4939
  %5240 = getelementptr inbounds i32, ptr %3, i64 %19
  %5241 = load i32, ptr %5240, align 4, !tbaa !6
  %5242 = icmp eq i32 %5241, 0
  %5243 = icmp sgt i32 %5, 0
  br i1 %5242, label %5253, label %5244

5244:                                             ; preds = %5239
  br i1 %5243, label %5245, label %5545

5245:                                             ; preds = %5244
  %5246 = icmp sgt i32 %13, 1
  %5247 = icmp sgt i32 %13, 0
  %5248 = add i32 %13, -2
  %5249 = zext i32 %5248 to i64
  %5250 = zext i32 %13 to i64
  %5251 = add nuw i32 %5, 1
  %5252 = icmp eq i32 %13, 1
  br label %5396

5253:                                             ; preds = %5239
  br i1 %5243, label %5254, label %5545

5254:                                             ; preds = %5253
  %5255 = icmp sgt i32 %13, 1
  %5256 = icmp sgt i32 %13, 0
  %5257 = add i32 %13, -2
  %5258 = zext i32 %5257 to i64
  %5259 = zext i32 %13 to i64
  %5260 = add nuw i32 %5, 1
  %5261 = icmp eq i32 %13, 1
  br label %5262

5262:                                             ; preds = %5254, %5394
  %5263 = phi double [ 0.000000e+00, %5254 ], [ %5344, %5394 ]
  %5264 = phi i32 [ 0, %5254 ], [ %5346, %5394 ]
  %5265 = phi double [ 0.000000e+00, %5254 ], [ %5345, %5394 ]
  %5266 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5255, label %5267, label %5336

5267:                                             ; preds = %5262, %5326
  %5268 = phi i32 [ %5335, %5326 ], [ 0, %5262 ]
  %5269 = phi i64 [ %5277, %5326 ], [ %5259, %5262 ]
  %5270 = phi i64 [ %5334, %5326 ], [ %5258, %5262 ]
  %5271 = phi i32 [ %5332, %5326 ], [ %5266, %5262 ]
  %5272 = sub i32 %5257, %5268
  %5273 = tail call i32 @llvm.smin.i32(i32 %5272, i32 0)
  %5274 = sub i32 %5272, %5273
  %5275 = zext i32 %5274 to i64
  %5276 = add nuw nsw i64 %5275, 1
  %5277 = add nsw i64 %5269, -1
  %5278 = icmp ult i32 %5274, 31
  br i1 %5278, label %5314, label %5279

5279:                                             ; preds = %5267
  %5280 = and i64 %5276, 8589934560
  %5281 = sub i64 %5270, %5280
  br label %5282

5282:                                             ; preds = %5282, %5279
  %5283 = phi i64 [ 0, %5279 ], [ %5306, %5282 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5302, %5282 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5303, %5282 ]
  %5286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5304, %5282 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5305, %5282 ]
  %5288 = sub i64 %5270, %5283
  %5289 = getelementptr inbounds i32, ptr %9, i64 %5288
  %5290 = getelementptr inbounds i32, ptr %5289, i64 -7
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !6
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5289, i64 -15
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !6
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = getelementptr inbounds i32, ptr %5289, i64 -23
  %5297 = load <8 x i32>, ptr %5296, align 4, !tbaa !6
  %5298 = shufflevector <8 x i32> %5297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5299 = getelementptr inbounds i32, ptr %5289, i64 -31
  %5300 = load <8 x i32>, ptr %5299, align 4, !tbaa !6
  %5301 = shufflevector <8 x i32> %5300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5302 = mul <8 x i32> %5292, %5284
  %5303 = mul <8 x i32> %5295, %5285
  %5304 = mul <8 x i32> %5298, %5286
  %5305 = mul <8 x i32> %5301, %5287
  %5306 = add nuw i64 %5283, 32
  %5307 = icmp eq i64 %5306, %5280
  br i1 %5307, label %5308, label %5282, !llvm.loop !375

5308:                                             ; preds = %5282
  %5309 = mul <8 x i32> %5303, %5302
  %5310 = mul <8 x i32> %5304, %5309
  %5311 = mul <8 x i32> %5305, %5310
  %5312 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5311)
  %5313 = icmp eq i64 %5276, %5280
  br i1 %5313, label %5326, label %5314

5314:                                             ; preds = %5267, %5308
  %5315 = phi i64 [ %5270, %5267 ], [ %5281, %5308 ]
  %5316 = phi i32 [ 1, %5267 ], [ %5312, %5308 ]
  br label %5317

5317:                                             ; preds = %5314, %5317
  %5318 = phi i64 [ %5323, %5317 ], [ %5315, %5314 ]
  %5319 = phi i32 [ %5322, %5317 ], [ %5316, %5314 ]
  %5320 = getelementptr inbounds i32, ptr %9, i64 %5318
  %5321 = load i32, ptr %5320, align 4, !tbaa !6
  %5322 = mul nsw i32 %5321, %5319
  %5323 = add nsw i64 %5318, -1
  %5324 = trunc i64 %5318 to i32
  %5325 = icmp sgt i32 %5324, 0
  br i1 %5325, label %5317, label %5326, !llvm.loop !376

5326:                                             ; preds = %5317, %5308
  %5327 = phi i32 [ %5312, %5308 ], [ %5322, %5317 ]
  %5328 = and i64 %5277, 4294967295
  %5329 = getelementptr inbounds i32, ptr %6, i64 %5328
  %5330 = load i32, ptr %5329, align 4, !tbaa !6
  %5331 = mul nsw i32 %5330, %5327
  %5332 = add nsw i32 %5331, %5271
  %5333 = icmp sgt i64 %5269, 2
  %5334 = add nsw i64 %5270, -1
  %5335 = add i32 %5268, 1
  br i1 %5333, label %5267, label %5336, !llvm.loop !377

5336:                                             ; preds = %5326, %5262
  %5337 = phi i32 [ %5266, %5262 ], [ %5332, %5326 ]
  %5338 = sext i32 %5337 to i64
  %5339 = getelementptr inbounds i32, ptr %4930, i64 %5338
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = sitofp i32 %5340 to double
  %5342 = fmul fast double %5341, %5341
  %5343 = fmul fast double %5342, %5342
  %5344 = fadd fast double %5343, %5263
  %5345 = fadd fast double %5265, 1.000000e+00
  %5346 = add nuw nsw i32 %5264, 1
  br i1 %5256, label %5347, label %5394

5347:                                             ; preds = %5336
  %5348 = load i32, ptr %4, align 4, !tbaa !6
  %5349 = load i32, ptr %12, align 4, !tbaa !6
  %5350 = add nsw i32 %5349, -1
  %5351 = icmp slt i32 %5348, %5350
  br i1 %5351, label %5371, label %5352

5352:                                             ; preds = %5347
  %5353 = icmp eq i32 %5348, %5350
  br i1 %5353, label %5354, label %5387

5354:                                             ; preds = %5352
  store i32 0, ptr %4, align 4, !tbaa !6
  %5355 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5355, ptr %6, align 4, !tbaa !6
  br i1 %5261, label %5394, label %5356

5356:                                             ; preds = %5354, %5381
  %5357 = phi i64 [ %5385, %5381 ], [ 1, %5354 ]
  %5358 = getelementptr inbounds i32, ptr %4, i64 %5357
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %12, i64 %5357
  %5361 = load i32, ptr %5360, align 4, !tbaa !6
  %5362 = add nsw i32 %5361, -1
  %5363 = icmp slt i32 %5359, %5362
  br i1 %5363, label %5364, label %5379

5364:                                             ; preds = %5356
  br i1 %5351, label %5371, label %5365

5365:                                             ; preds = %5364
  %5366 = getelementptr inbounds i32, ptr %7, i64 %5357
  %5367 = load i32, ptr %5366, align 4, !tbaa !6
  %5368 = getelementptr inbounds i32, ptr %6, i64 %5357
  %5369 = load i32, ptr %5368, align 4, !tbaa !6
  %5370 = add nsw i32 %5369, %5367
  store i32 %5370, ptr %5368, align 4, !tbaa !6
  br label %5389

5371:                                             ; preds = %5347, %5364
  %5372 = phi i32 [ %5359, %5364 ], [ %5348, %5347 ]
  %5373 = phi ptr [ %5358, %5364 ], [ %4, %5347 ]
  %5374 = phi i64 [ %5357, %5364 ], [ 0, %5347 ]
  %5375 = add nsw i32 %5372, 1
  store i32 %5375, ptr %5373, align 4, !tbaa !6
  %5376 = getelementptr inbounds i32, ptr %7, i64 %5374
  %5377 = load i32, ptr %5376, align 4, !tbaa !6
  %5378 = getelementptr inbounds i32, ptr %6, i64 %5374
  br label %5389

5379:                                             ; preds = %5356
  %5380 = icmp eq i32 %5359, %5362
  br i1 %5380, label %5381, label %5387

5381:                                             ; preds = %5379
  store i32 0, ptr %5358, align 4, !tbaa !6
  %5382 = getelementptr inbounds i32, ptr %8, i64 %5357
  %5383 = load i32, ptr %5382, align 4, !tbaa !6
  %5384 = getelementptr inbounds i32, ptr %6, i64 %5357
  store i32 %5383, ptr %5384, align 4, !tbaa !6
  %5385 = add nuw nsw i64 %5357, 1
  %5386 = icmp eq i64 %5385, %5259
  br i1 %5386, label %5394, label %5356, !llvm.loop !378

5387:                                             ; preds = %5352, %5379
  store double %5344, ptr %4932, align 8, !tbaa !19
  %5388 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5389:                                             ; preds = %5365, %5371
  %5390 = phi ptr [ %5378, %5371 ], [ %5358, %5365 ]
  %5391 = phi i32 [ %5377, %5371 ], [ 1, %5365 ]
  %5392 = load i32, ptr %5390, align 4, !tbaa !6
  %5393 = add nsw i32 %5392, %5391
  store i32 %5393, ptr %5390, align 4, !tbaa !6
  br label %5394

5394:                                             ; preds = %5381, %5389, %5354, %5336
  %5395 = icmp eq i32 %5346, %5
  br i1 %5395, label %5544, label %5262, !llvm.loop !379

5396:                                             ; preds = %5245, %5533
  %5397 = phi double [ 0.000000e+00, %5245 ], [ %5481, %5533 ]
  %5398 = phi i32 [ 0, %5245 ], [ %5482, %5533 ]
  %5399 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5246, label %5400, label %5469

5400:                                             ; preds = %5396, %5459
  %5401 = phi i32 [ %5468, %5459 ], [ 0, %5396 ]
  %5402 = phi i64 [ %5410, %5459 ], [ %5250, %5396 ]
  %5403 = phi i64 [ %5467, %5459 ], [ %5249, %5396 ]
  %5404 = phi i32 [ %5465, %5459 ], [ %5399, %5396 ]
  %5405 = sub i32 %5248, %5401
  %5406 = tail call i32 @llvm.smin.i32(i32 %5405, i32 0)
  %5407 = sub i32 %5405, %5406
  %5408 = zext i32 %5407 to i64
  %5409 = add nuw nsw i64 %5408, 1
  %5410 = add nsw i64 %5402, -1
  %5411 = icmp ult i32 %5407, 31
  br i1 %5411, label %5447, label %5412

5412:                                             ; preds = %5400
  %5413 = and i64 %5409, 8589934560
  %5414 = sub i64 %5403, %5413
  br label %5415

5415:                                             ; preds = %5415, %5412
  %5416 = phi i64 [ 0, %5412 ], [ %5439, %5415 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5435, %5415 ]
  %5418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5436, %5415 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5437, %5415 ]
  %5420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5438, %5415 ]
  %5421 = sub i64 %5403, %5416
  %5422 = getelementptr inbounds i32, ptr %11, i64 %5421
  %5423 = getelementptr inbounds i32, ptr %5422, i64 -7
  %5424 = load <8 x i32>, ptr %5423, align 4, !tbaa !6
  %5425 = shufflevector <8 x i32> %5424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5426 = getelementptr inbounds i32, ptr %5422, i64 -15
  %5427 = load <8 x i32>, ptr %5426, align 4, !tbaa !6
  %5428 = shufflevector <8 x i32> %5427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5429 = getelementptr inbounds i32, ptr %5422, i64 -23
  %5430 = load <8 x i32>, ptr %5429, align 4, !tbaa !6
  %5431 = shufflevector <8 x i32> %5430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5432 = getelementptr inbounds i32, ptr %5422, i64 -31
  %5433 = load <8 x i32>, ptr %5432, align 4, !tbaa !6
  %5434 = shufflevector <8 x i32> %5433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5435 = mul <8 x i32> %5425, %5417
  %5436 = mul <8 x i32> %5428, %5418
  %5437 = mul <8 x i32> %5431, %5419
  %5438 = mul <8 x i32> %5434, %5420
  %5439 = add nuw i64 %5416, 32
  %5440 = icmp eq i64 %5439, %5413
  br i1 %5440, label %5441, label %5415, !llvm.loop !380

5441:                                             ; preds = %5415
  %5442 = mul <8 x i32> %5436, %5435
  %5443 = mul <8 x i32> %5437, %5442
  %5444 = mul <8 x i32> %5438, %5443
  %5445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5444)
  %5446 = icmp eq i64 %5409, %5413
  br i1 %5446, label %5459, label %5447

5447:                                             ; preds = %5400, %5441
  %5448 = phi i64 [ %5403, %5400 ], [ %5414, %5441 ]
  %5449 = phi i32 [ 1, %5400 ], [ %5445, %5441 ]
  br label %5450

5450:                                             ; preds = %5447, %5450
  %5451 = phi i64 [ %5456, %5450 ], [ %5448, %5447 ]
  %5452 = phi i32 [ %5455, %5450 ], [ %5449, %5447 ]
  %5453 = getelementptr inbounds i32, ptr %11, i64 %5451
  %5454 = load i32, ptr %5453, align 4, !tbaa !6
  %5455 = mul nsw i32 %5454, %5452
  %5456 = add nsw i64 %5451, -1
  %5457 = trunc i64 %5451 to i32
  %5458 = icmp sgt i32 %5457, 0
  br i1 %5458, label %5450, label %5459, !llvm.loop !381

5459:                                             ; preds = %5450, %5441
  %5460 = phi i32 [ %5445, %5441 ], [ %5455, %5450 ]
  %5461 = and i64 %5410, 4294967295
  %5462 = getelementptr inbounds i32, ptr %6, i64 %5461
  %5463 = load i32, ptr %5462, align 4, !tbaa !6
  %5464 = mul nsw i32 %5463, %5460
  %5465 = add nsw i32 %5464, %5404
  %5466 = icmp sgt i64 %5402, 2
  %5467 = add nsw i64 %5403, -1
  %5468 = add i32 %5401, 1
  br i1 %5466, label %5400, label %5469, !llvm.loop !382

5469:                                             ; preds = %5459, %5396
  %5470 = phi i32 [ %5399, %5396 ], [ %5465, %5459 ]
  %5471 = icmp slt i32 %5470, %5
  br i1 %5471, label %5474, label %5472

5472:                                             ; preds = %5469
  %5473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5474:                                             ; preds = %5469
  %5475 = sext i32 %5470 to i64
  %5476 = getelementptr inbounds i32, ptr %4930, i64 %5475
  %5477 = load i32, ptr %5476, align 4, !tbaa !6
  %5478 = sitofp i32 %5477 to double
  %5479 = fmul fast double %5478, %5478
  %5480 = fmul fast double %5479, %5479
  %5481 = fadd fast double %5480, %5397
  store double %5481, ptr %4932, align 8, !tbaa !19
  %5482 = add nuw nsw i32 %5398, 1
  br i1 %5247, label %5483, label %5533

5483:                                             ; preds = %5474
  %5484 = load i32, ptr %4, align 4, !tbaa !6
  %5485 = load i32, ptr %12, align 4, !tbaa !6
  %5486 = add nsw i32 %5485, -1
  %5487 = icmp slt i32 %5484, %5486
  br i1 %5487, label %5510, label %5488

5488:                                             ; preds = %5483
  %5489 = icmp eq i32 %5484, %5486
  br i1 %5489, label %5490, label %5526

5490:                                             ; preds = %5488
  store i32 0, ptr %4, align 4, !tbaa !6
  %5491 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5491, ptr %6, align 4, !tbaa !6
  br i1 %5252, label %5533, label %5492

5492:                                             ; preds = %5490, %5520
  %5493 = phi i64 [ %5524, %5520 ], [ 1, %5490 ]
  %5494 = getelementptr inbounds i32, ptr %4, i64 %5493
  %5495 = load i32, ptr %5494, align 4, !tbaa !6
  %5496 = getelementptr inbounds i32, ptr %12, i64 %5493
  %5497 = load i32, ptr %5496, align 4, !tbaa !6
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5495, %5498
  br i1 %5499, label %5500, label %5518

5500:                                             ; preds = %5492
  br i1 %5487, label %5510, label %5501

5501:                                             ; preds = %5500
  %5502 = shl i64 %5493, 32
  %5503 = add i64 %5502, -4294967296
  %5504 = ashr exact i64 %5503, 32
  %5505 = getelementptr inbounds i32, ptr %7, i64 %5504
  %5506 = load i32, ptr %5505, align 4, !tbaa !6
  %5507 = getelementptr inbounds i32, ptr %6, i64 %5493
  %5508 = load i32, ptr %5507, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, %5506
  store i32 %5509, ptr %5507, align 4, !tbaa !6
  br label %5528

5510:                                             ; preds = %5483, %5500
  %5511 = phi i32 [ %5495, %5500 ], [ %5484, %5483 ]
  %5512 = phi ptr [ %5494, %5500 ], [ %4, %5483 ]
  %5513 = phi i64 [ %5493, %5500 ], [ 0, %5483 ]
  %5514 = add nsw i32 %5511, 1
  store i32 %5514, ptr %5512, align 4, !tbaa !6
  %5515 = getelementptr inbounds i32, ptr %7, i64 %5513
  %5516 = load i32, ptr %5515, align 4, !tbaa !6
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5513
  br label %5528

5518:                                             ; preds = %5492
  %5519 = icmp eq i32 %5495, %5498
  br i1 %5519, label %5520, label %5526

5520:                                             ; preds = %5518
  store i32 0, ptr %5494, align 4, !tbaa !6
  %5521 = getelementptr inbounds i32, ptr %8, i64 %5493
  %5522 = load i32, ptr %5521, align 4, !tbaa !6
  %5523 = getelementptr inbounds i32, ptr %6, i64 %5493
  store i32 %5522, ptr %5523, align 4, !tbaa !6
  %5524 = add nuw nsw i64 %5493, 1
  %5525 = icmp eq i64 %5524, %5250
  br i1 %5525, label %5533, label %5492, !llvm.loop !383

5526:                                             ; preds = %5488, %5518
  %5527 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5528:                                             ; preds = %5501, %5510
  %5529 = phi ptr [ %5517, %5510 ], [ %5494, %5501 ]
  %5530 = phi i32 [ %5516, %5510 ], [ 1, %5501 ]
  %5531 = load i32, ptr %5529, align 4, !tbaa !6
  %5532 = add nsw i32 %5531, %5530
  store i32 %5532, ptr %5529, align 4, !tbaa !6
  br label %5533

5533:                                             ; preds = %5520, %5528, %5490, %5474
  %5534 = icmp eq i32 %5482, %5
  br i1 %5534, label %5545, label %5396, !llvm.loop !384

5535:                                             ; preds = %4939
  %5536 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

5537:                                             ; preds = %2038
  store i16 %1988, ptr %1868, align 2, !tbaa !79
  br label %5545

5538:                                             ; preds = %2338
  store i16 %2288, ptr %1868, align 2, !tbaa !79
  br label %5545

5539:                                             ; preds = %3263
  store i64 %3213, ptr %3095, align 8, !tbaa !121
  br label %5545

5540:                                             ; preds = %3561
  store i64 %3511, ptr %3095, align 8, !tbaa !121
  br label %5545

5541:                                             ; preds = %4170
  store double %4120, ptr %3708, align 8, !tbaa !19
  br label %5545

5542:                                             ; preds = %4486
  store float %4436, ptr %4317, align 4, !tbaa !163
  br label %5545

5543:                                             ; preds = %4785
  store float %4735, ptr %4317, align 4, !tbaa !163
  br label %5545

5544:                                             ; preds = %5394
  store double %5344, ptr %4932, align 8, !tbaa !19
  br label %5545

5545:                                             ; preds = %5533, %5237, %5098, %4924, %4628, %4309, %4013, %3874, %3700, %3404, %3087, %2949, %2793, %2652, %2477, %2181, %1860, %1721, %1564, %1421, %1243, %1105, %949, %808, %633, %494, %337, %195, %5244, %5253, %5544, %4945, %4954, %4635, %4644, %5543, %4330, %4339, %5542, %4020, %4029, %5541, %3721, %3730, %3411, %3420, %5540, %3108, %3117, %5539, %2800, %2809, %2497, %2506, %2188, %2197, %5538, %1881, %1890, %5537, %1571, %1580, %1264, %1273, %956, %965, %653, %662, %344, %353, %39, %48, %4934, %5535, %4319, %4926, %3710, %4311, %3097, %3702, %2487, %3089, %1870, %2479, %1253, %1862, %643, %1245, %28, %635, %18
  %5546 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1862 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %2479 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %3089 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %3702 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %4311 ], [ 0.000000e+00, %3710 ], [ 0.000000e+00, %4926 ], [ 0.000000e+00, %4319 ], [ 0.000000e+00, %5535 ], [ 0.000000e+00, %4934 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %965 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %1273 ], [ 0.000000e+00, %1264 ], [ 0.000000e+00, %1580 ], [ 0.000000e+00, %1571 ], [ %1989, %5537 ], [ 0.000000e+00, %1890 ], [ 0.000000e+00, %1881 ], [ %2289, %5538 ], [ 0.000000e+00, %2197 ], [ 0.000000e+00, %2188 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2809 ], [ 0.000000e+00, %2800 ], [ %3214, %5539 ], [ 0.000000e+00, %3117 ], [ 0.000000e+00, %3108 ], [ %3512, %5540 ], [ 0.000000e+00, %3420 ], [ 0.000000e+00, %3411 ], [ 0.000000e+00, %3730 ], [ 0.000000e+00, %3721 ], [ %4121, %5541 ], [ 0.000000e+00, %4029 ], [ 0.000000e+00, %4020 ], [ %4437, %5542 ], [ 0.000000e+00, %4339 ], [ 0.000000e+00, %4330 ], [ %4736, %5543 ], [ 0.000000e+00, %4644 ], [ 0.000000e+00, %4635 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ %5345, %5544 ], [ 0.000000e+00, %5253 ], [ 0.000000e+00, %5244 ], [ %146, %195 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %759, %808 ], [ 0.000000e+00, %949 ], [ %1056, %1105 ], [ 0.000000e+00, %1243 ], [ %1372, %1421 ], [ 0.000000e+00, %1564 ], [ %1672, %1721 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2477 ], [ %2603, %2652 ], [ 0.000000e+00, %2793 ], [ %2900, %2949 ], [ 0.000000e+00, %3087 ], [ 0.000000e+00, %3404 ], [ 0.000000e+00, %3700 ], [ %3825, %3874 ], [ 0.000000e+00, %4013 ], [ 0.000000e+00, %4309 ], [ 0.000000e+00, %4628 ], [ 0.000000e+00, %4924 ], [ %5049, %5098 ], [ 0.000000e+00, %5237 ], [ 0.000000e+00, %5533 ]
  %5547 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1245 ], [ 1, %643 ], [ 1, %1862 ], [ 1, %1253 ], [ 1, %2479 ], [ 1, %1870 ], [ 1, %3089 ], [ 1, %2487 ], [ 1, %3702 ], [ 1, %3097 ], [ 1, %4311 ], [ 1, %3710 ], [ 1, %4926 ], [ 1, %4319 ], [ 1, %5535 ], [ 1, %4934 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %662 ], [ 1, %653 ], [ 1, %965 ], [ 1, %956 ], [ 1, %1273 ], [ 1, %1264 ], [ 1, %1580 ], [ 1, %1571 ], [ %1897, %5537 ], [ 1, %1890 ], [ 1, %1881 ], [ %2204, %5538 ], [ 1, %2197 ], [ 1, %2188 ], [ 1, %2506 ], [ 1, %2497 ], [ 1, %2809 ], [ 1, %2800 ], [ %3124, %5539 ], [ 1, %3117 ], [ 1, %3108 ], [ %3427, %5540 ], [ 1, %3420 ], [ 1, %3411 ], [ 1, %3730 ], [ 1, %3721 ], [ %4036, %5541 ], [ 1, %4029 ], [ 1, %4020 ], [ %4346, %5542 ], [ 1, %4339 ], [ 1, %4330 ], [ %4651, %5543 ], [ 1, %4644 ], [ 1, %4635 ], [ 1, %4954 ], [ 1, %4945 ], [ %5260, %5544 ], [ 1, %5253 ], [ 1, %5244 ], [ %55, %195 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %669, %808 ], [ %660, %949 ], [ %972, %1105 ], [ %963, %1243 ], [ %1280, %1421 ], [ %1271, %1564 ], [ %1587, %1721 ], [ %1578, %1860 ], [ %1888, %2181 ], [ %2195, %2477 ], [ %2513, %2652 ], [ %2504, %2793 ], [ %2816, %2949 ], [ %2807, %3087 ], [ %3115, %3404 ], [ %3418, %3700 ], [ %3737, %3874 ], [ %3728, %4013 ], [ %4027, %4309 ], [ %4337, %4628 ], [ %4642, %4924 ], [ %4961, %5098 ], [ %4952, %5237 ], [ %5251, %5533 ]
  %5548 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5547, ptr noundef nonnull @.str.5) #3
  %5549 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5546, ptr noundef nonnull @.str.6) #3
  br label %5550

5550:                                             ; preds = %5091, %5176, %5230, %5387, %5472, %5526, %4479, %4564, %4621, %4778, %4863, %4917, %3867, %3952, %4006, %4163, %4248, %4302, %3256, %3341, %3397, %3554, %3639, %3693, %2645, %2729, %2786, %2942, %3026, %3080, %2031, %2116, %2174, %2331, %2416, %2470, %1414, %1498, %1557, %1714, %1798, %1853, %801, %885, %942, %1098, %1182, %1236, %188, %272, %330, %487, %571, %626, %5545
  %5551 = phi i32 [ 0, %5545 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1236 ], [ -1, %1182 ], [ -1, %1098 ], [ -1, %942 ], [ -1, %885 ], [ -1, %801 ], [ -1, %1853 ], [ -1, %1798 ], [ -1, %1714 ], [ -1, %1557 ], [ -1, %1498 ], [ -1, %1414 ], [ -1, %2470 ], [ -1, %2416 ], [ -1, %2331 ], [ -1, %2174 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3080 ], [ -1, %3026 ], [ -1, %2942 ], [ -1, %2786 ], [ -1, %2729 ], [ -1, %2645 ], [ -1, %3693 ], [ -1, %3639 ], [ -1, %3554 ], [ -1, %3397 ], [ -1, %3341 ], [ -1, %3256 ], [ -1, %4302 ], [ -1, %4248 ], [ -1, %4163 ], [ -1, %4006 ], [ -1, %3952 ], [ -1, %3867 ], [ -1, %4917 ], [ -1, %4863 ], [ -1, %4778 ], [ -1, %4621 ], [ -1, %4564 ], [ -1, %4479 ], [ -1, %5526 ], [ -1, %5472 ], [ -1, %5387 ], [ -1, %5230 ], [ -1, %5176 ], [ -1, %5091 ]
  ret i32 %5551
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3074 [
    i32 101, label %22
    i32 102, label %631
    i32 107, label %1243
    i32 108, label %1852
    i32 109, label %2465
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !12
  %30 = mul i8 %29, %29
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !12
  br label %3074

32:                                               ; preds = %22
  switch i32 %1, label %629 [
    i32 1, label %33
    i32 0, label %335
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !6
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %3074

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %3074

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !6
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !385

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !6
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !386

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !6
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !387

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !19
  %134 = getelementptr inbounds i8, ptr %24, i64 %131
  %135 = load i8, ptr %134, align 1, !tbaa !12
  %136 = load i8, ptr %26, align 1, !tbaa !12
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %133, %138
  %140 = fmul fast double %139, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !12
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !6
  %148 = load i32, ptr %12, align 4, !tbaa !6
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %154, ptr %6, align 4, !tbaa !6
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !6
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !6
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !6
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !388

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !6
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !6
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %3074, label %56, !llvm.loop !389

195:                                              ; preds = %39, %333
  %196 = phi i32 [ 0, %39 ], [ %282, %333 ]
  %197 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !6
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !6
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !390

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !6
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !391

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !6
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !392

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds i8, ptr %24, i64 %273
  %275 = load i8, ptr %274, align 1, !tbaa !12
  %276 = load i8, ptr %26, align 1, !tbaa !12
  %277 = zext i8 %275 to i64
  %278 = mul nuw nsw i64 %277, %277
  %279 = mul nuw nsw i64 %278, %278
  %280 = trunc i64 %279 to i8
  %281 = add i8 %276, %280
  store i8 %281, ptr %26, align 1, !tbaa !12
  %282 = add nuw nsw i32 %196, 1
  br i1 %41, label %283, label %333

283:                                              ; preds = %272
  %284 = load i32, ptr %4, align 4, !tbaa !6
  %285 = load i32, ptr %12, align 4, !tbaa !6
  %286 = add nsw i32 %285, -1
  %287 = icmp slt i32 %284, %286
  br i1 %287, label %310, label %288

288:                                              ; preds = %283
  %289 = icmp eq i32 %284, %286
  br i1 %289, label %290, label %326

290:                                              ; preds = %288
  store i32 0, ptr %4, align 4, !tbaa !6
  %291 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %291, ptr %6, align 4, !tbaa !6
  br i1 %46, label %333, label %292

292:                                              ; preds = %290, %320
  %293 = phi i64 [ %324, %320 ], [ 1, %290 ]
  %294 = getelementptr inbounds i32, ptr %4, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !6
  %296 = getelementptr inbounds i32, ptr %12, i64 %293
  %297 = load i32, ptr %296, align 4, !tbaa !6
  %298 = add nsw i32 %297, -1
  %299 = icmp slt i32 %295, %298
  br i1 %299, label %300, label %318

300:                                              ; preds = %292
  br i1 %287, label %310, label %301

301:                                              ; preds = %300
  %302 = shl i64 %293, 32
  %303 = add i64 %302, -4294967296
  %304 = ashr exact i64 %303, 32
  %305 = getelementptr inbounds i32, ptr %7, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !6
  %307 = getelementptr inbounds i32, ptr %6, i64 %293
  %308 = load i32, ptr %307, align 4, !tbaa !6
  %309 = add nsw i32 %308, %306
  store i32 %309, ptr %307, align 4, !tbaa !6
  br label %328

310:                                              ; preds = %283, %300
  %311 = phi i32 [ %295, %300 ], [ %284, %283 ]
  %312 = phi ptr [ %294, %300 ], [ %4, %283 ]
  %313 = phi i64 [ %293, %300 ], [ 0, %283 ]
  %314 = add nsw i32 %311, 1
  store i32 %314, ptr %312, align 4, !tbaa !6
  %315 = getelementptr inbounds i32, ptr %7, i64 %313
  %316 = load i32, ptr %315, align 4, !tbaa !6
  %317 = getelementptr inbounds i32, ptr %6, i64 %313
  br label %328

318:                                              ; preds = %292
  %319 = icmp eq i32 %295, %298
  br i1 %319, label %320, label %326

320:                                              ; preds = %318
  store i32 0, ptr %294, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %8, i64 %293
  %322 = load i32, ptr %321, align 4, !tbaa !6
  %323 = getelementptr inbounds i32, ptr %6, i64 %293
  store i32 %322, ptr %323, align 4, !tbaa !6
  %324 = add nuw nsw i64 %293, 1
  %325 = icmp eq i64 %324, %44
  br i1 %325, label %333, label %292, !llvm.loop !393

326:                                              ; preds = %288, %318
  %327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

328:                                              ; preds = %301, %310
  %329 = phi ptr [ %317, %310 ], [ %294, %301 ]
  %330 = phi i32 [ %316, %310 ], [ 1, %301 ]
  %331 = load i32, ptr %329, align 4, !tbaa !6
  %332 = add nsw i32 %331, %330
  store i32 %332, ptr %329, align 4, !tbaa !6
  br label %333

333:                                              ; preds = %320, %328, %290, %272
  %334 = icmp eq i32 %282, %5
  br i1 %334, label %3074, label %195, !llvm.loop !394

335:                                              ; preds = %32
  %336 = getelementptr inbounds i32, ptr %3, i64 %19
  %337 = load i32, ptr %336, align 4, !tbaa !6
  %338 = icmp eq i32 %337, 0
  %339 = icmp sgt i32 %5, 0
  br i1 %338, label %349, label %340

340:                                              ; preds = %335
  br i1 %339, label %341, label %3074

341:                                              ; preds = %340
  %342 = icmp sgt i32 %13, 1
  %343 = icmp sgt i32 %13, 0
  %344 = add i32 %13, -2
  %345 = zext i32 %344 to i64
  %346 = zext i32 %13 to i64
  %347 = add nuw i32 %5, 1
  %348 = icmp eq i32 %13, 1
  br label %491

349:                                              ; preds = %335
  br i1 %339, label %350, label %3074

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %358

358:                                              ; preds = %350, %489
  %359 = phi i32 [ 0, %350 ], [ %441, %489 ]
  %360 = phi double [ 0.000000e+00, %350 ], [ %440, %489 ]
  %361 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %351, label %362, label %431

362:                                              ; preds = %358, %421
  %363 = phi i32 [ %430, %421 ], [ 0, %358 ]
  %364 = phi i64 [ %372, %421 ], [ %355, %358 ]
  %365 = phi i64 [ %429, %421 ], [ %354, %358 ]
  %366 = phi i32 [ %427, %421 ], [ %361, %358 ]
  %367 = sub i32 %353, %363
  %368 = tail call i32 @llvm.smin.i32(i32 %367, i32 0)
  %369 = sub i32 %367, %368
  %370 = zext i32 %369 to i64
  %371 = add nuw nsw i64 %370, 1
  %372 = add nsw i64 %364, -1
  %373 = icmp ult i32 %369, 31
  br i1 %373, label %409, label %374

374:                                              ; preds = %362
  %375 = and i64 %371, 8589934560
  %376 = sub i64 %365, %375
  br label %377

377:                                              ; preds = %377, %374
  %378 = phi i64 [ 0, %374 ], [ %401, %377 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %397, %377 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %398, %377 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %399, %377 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %400, %377 ]
  %383 = sub i64 %365, %378
  %384 = getelementptr inbounds i32, ptr %9, i64 %383
  %385 = getelementptr inbounds i32, ptr %384, i64 -7
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !6
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %384, i64 -15
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %384, i64 -23
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %384, i64 -31
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = mul <8 x i32> %387, %379
  %398 = mul <8 x i32> %390, %380
  %399 = mul <8 x i32> %393, %381
  %400 = mul <8 x i32> %396, %382
  %401 = add nuw i64 %378, 32
  %402 = icmp eq i64 %401, %375
  br i1 %402, label %403, label %377, !llvm.loop !395

403:                                              ; preds = %377
  %404 = mul <8 x i32> %398, %397
  %405 = mul <8 x i32> %399, %404
  %406 = mul <8 x i32> %400, %405
  %407 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %406)
  %408 = icmp eq i64 %371, %375
  br i1 %408, label %421, label %409

409:                                              ; preds = %362, %403
  %410 = phi i64 [ %365, %362 ], [ %376, %403 ]
  %411 = phi i32 [ 1, %362 ], [ %407, %403 ]
  br label %412

412:                                              ; preds = %409, %412
  %413 = phi i64 [ %418, %412 ], [ %410, %409 ]
  %414 = phi i32 [ %417, %412 ], [ %411, %409 ]
  %415 = getelementptr inbounds i32, ptr %9, i64 %413
  %416 = load i32, ptr %415, align 4, !tbaa !6
  %417 = mul nsw i32 %416, %414
  %418 = add nsw i64 %413, -1
  %419 = trunc i64 %413 to i32
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %412, label %421, !llvm.loop !396

421:                                              ; preds = %412, %403
  %422 = phi i32 [ %407, %403 ], [ %417, %412 ]
  %423 = and i64 %372, 4294967295
  %424 = getelementptr inbounds i32, ptr %6, i64 %423
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = mul nsw i32 %425, %422
  %427 = add nsw i32 %426, %366
  %428 = icmp sgt i64 %364, 2
  %429 = add nsw i64 %365, -1
  %430 = add i32 %363, 1
  br i1 %428, label %362, label %431, !llvm.loop !397

431:                                              ; preds = %421, %358
  %432 = phi i32 [ %361, %358 ], [ %427, %421 ]
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, ptr %24, i64 %433
  %435 = load i8, ptr %434, align 1, !tbaa !12
  %436 = load i8, ptr %26, align 1, !tbaa !12
  %437 = mul i8 %435, %435
  %438 = mul i8 %437, %437
  %439 = add i8 %438, %436
  store i8 %439, ptr %26, align 1, !tbaa !12
  %440 = fadd fast double %360, 1.000000e+00
  %441 = add nuw nsw i32 %359, 1
  br i1 %352, label %442, label %489

442:                                              ; preds = %431
  %443 = load i32, ptr %4, align 4, !tbaa !6
  %444 = load i32, ptr %12, align 4, !tbaa !6
  %445 = add nsw i32 %444, -1
  %446 = icmp slt i32 %443, %445
  br i1 %446, label %466, label %447

447:                                              ; preds = %442
  %448 = icmp eq i32 %443, %445
  br i1 %448, label %449, label %482

449:                                              ; preds = %447
  store i32 0, ptr %4, align 4, !tbaa !6
  %450 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %450, ptr %6, align 4, !tbaa !6
  br i1 %357, label %489, label %451

451:                                              ; preds = %449, %476
  %452 = phi i64 [ %480, %476 ], [ 1, %449 ]
  %453 = getelementptr inbounds i32, ptr %4, i64 %452
  %454 = load i32, ptr %453, align 4, !tbaa !6
  %455 = getelementptr inbounds i32, ptr %12, i64 %452
  %456 = load i32, ptr %455, align 4, !tbaa !6
  %457 = add nsw i32 %456, -1
  %458 = icmp slt i32 %454, %457
  br i1 %458, label %459, label %474

459:                                              ; preds = %451
  br i1 %446, label %466, label %460

460:                                              ; preds = %459
  %461 = getelementptr inbounds i32, ptr %7, i64 %452
  %462 = load i32, ptr %461, align 4, !tbaa !6
  %463 = getelementptr inbounds i32, ptr %6, i64 %452
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = add nsw i32 %464, %462
  store i32 %465, ptr %463, align 4, !tbaa !6
  br label %484

466:                                              ; preds = %442, %459
  %467 = phi i32 [ %454, %459 ], [ %443, %442 ]
  %468 = phi ptr [ %453, %459 ], [ %4, %442 ]
  %469 = phi i64 [ %452, %459 ], [ 0, %442 ]
  %470 = add nsw i32 %467, 1
  store i32 %470, ptr %468, align 4, !tbaa !6
  %471 = getelementptr inbounds i32, ptr %7, i64 %469
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %469
  br label %484

474:                                              ; preds = %451
  %475 = icmp eq i32 %454, %457
  br i1 %475, label %476, label %482

476:                                              ; preds = %474
  store i32 0, ptr %453, align 4, !tbaa !6
  %477 = getelementptr inbounds i32, ptr %8, i64 %452
  %478 = load i32, ptr %477, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %6, i64 %452
  store i32 %478, ptr %479, align 4, !tbaa !6
  %480 = add nuw nsw i64 %452, 1
  %481 = icmp eq i64 %480, %355
  br i1 %481, label %489, label %451, !llvm.loop !398

482:                                              ; preds = %447, %474
  %483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

484:                                              ; preds = %460, %466
  %485 = phi ptr [ %473, %466 ], [ %453, %460 ]
  %486 = phi i32 [ %472, %466 ], [ 1, %460 ]
  %487 = load i32, ptr %485, align 4, !tbaa !6
  %488 = add nsw i32 %487, %486
  store i32 %488, ptr %485, align 4, !tbaa !6
  br label %489

489:                                              ; preds = %476, %484, %449, %431
  %490 = icmp eq i32 %441, %5
  br i1 %490, label %3074, label %358, !llvm.loop !399

491:                                              ; preds = %341, %627
  %492 = phi i32 [ 0, %341 ], [ %576, %627 ]
  %493 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %342, label %494, label %563

494:                                              ; preds = %491, %553
  %495 = phi i32 [ %562, %553 ], [ 0, %491 ]
  %496 = phi i64 [ %504, %553 ], [ %346, %491 ]
  %497 = phi i64 [ %561, %553 ], [ %345, %491 ]
  %498 = phi i32 [ %559, %553 ], [ %493, %491 ]
  %499 = sub i32 %344, %495
  %500 = tail call i32 @llvm.smin.i32(i32 %499, i32 0)
  %501 = sub i32 %499, %500
  %502 = zext i32 %501 to i64
  %503 = add nuw nsw i64 %502, 1
  %504 = add nsw i64 %496, -1
  %505 = icmp ult i32 %501, 31
  br i1 %505, label %541, label %506

506:                                              ; preds = %494
  %507 = and i64 %503, 8589934560
  %508 = sub i64 %497, %507
  br label %509

509:                                              ; preds = %509, %506
  %510 = phi i64 [ 0, %506 ], [ %533, %509 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %529, %509 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %530, %509 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %531, %509 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %506 ], [ %532, %509 ]
  %515 = sub i64 %497, %510
  %516 = getelementptr inbounds i32, ptr %11, i64 %515
  %517 = getelementptr inbounds i32, ptr %516, i64 -7
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !6
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %516, i64 -15
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !6
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %516, i64 -23
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !6
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %516, i64 -31
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !6
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = mul <8 x i32> %519, %511
  %530 = mul <8 x i32> %522, %512
  %531 = mul <8 x i32> %525, %513
  %532 = mul <8 x i32> %528, %514
  %533 = add nuw i64 %510, 32
  %534 = icmp eq i64 %533, %507
  br i1 %534, label %535, label %509, !llvm.loop !400

535:                                              ; preds = %509
  %536 = mul <8 x i32> %530, %529
  %537 = mul <8 x i32> %531, %536
  %538 = mul <8 x i32> %532, %537
  %539 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %538)
  %540 = icmp eq i64 %503, %507
  br i1 %540, label %553, label %541

541:                                              ; preds = %494, %535
  %542 = phi i64 [ %497, %494 ], [ %508, %535 ]
  %543 = phi i32 [ 1, %494 ], [ %539, %535 ]
  br label %544

544:                                              ; preds = %541, %544
  %545 = phi i64 [ %550, %544 ], [ %542, %541 ]
  %546 = phi i32 [ %549, %544 ], [ %543, %541 ]
  %547 = getelementptr inbounds i32, ptr %11, i64 %545
  %548 = load i32, ptr %547, align 4, !tbaa !6
  %549 = mul nsw i32 %548, %546
  %550 = add nsw i64 %545, -1
  %551 = trunc i64 %545 to i32
  %552 = icmp sgt i32 %551, 0
  br i1 %552, label %544, label %553, !llvm.loop !401

553:                                              ; preds = %544, %535
  %554 = phi i32 [ %539, %535 ], [ %549, %544 ]
  %555 = and i64 %504, 4294967295
  %556 = getelementptr inbounds i32, ptr %6, i64 %555
  %557 = load i32, ptr %556, align 4, !tbaa !6
  %558 = mul nsw i32 %557, %554
  %559 = add nsw i32 %558, %498
  %560 = icmp sgt i64 %496, 2
  %561 = add nsw i64 %497, -1
  %562 = add i32 %495, 1
  br i1 %560, label %494, label %563, !llvm.loop !402

563:                                              ; preds = %553, %491
  %564 = phi i32 [ %493, %491 ], [ %559, %553 ]
  %565 = icmp slt i32 %564, %5
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

568:                                              ; preds = %563
  %569 = sext i32 %564 to i64
  %570 = getelementptr inbounds i8, ptr %24, i64 %569
  %571 = load i8, ptr %570, align 1, !tbaa !12
  %572 = load i8, ptr %26, align 1, !tbaa !12
  %573 = mul i8 %571, %571
  %574 = mul i8 %573, %573
  %575 = add i8 %574, %572
  store i8 %575, ptr %26, align 1, !tbaa !12
  %576 = add nuw nsw i32 %492, 1
  br i1 %343, label %577, label %627

577:                                              ; preds = %568
  %578 = load i32, ptr %4, align 4, !tbaa !6
  %579 = load i32, ptr %12, align 4, !tbaa !6
  %580 = add nsw i32 %579, -1
  %581 = icmp slt i32 %578, %580
  br i1 %581, label %604, label %582

582:                                              ; preds = %577
  %583 = icmp eq i32 %578, %580
  br i1 %583, label %584, label %620

584:                                              ; preds = %582
  store i32 0, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %585, ptr %6, align 4, !tbaa !6
  br i1 %348, label %627, label %586

586:                                              ; preds = %584, %614
  %587 = phi i64 [ %618, %614 ], [ 1, %584 ]
  %588 = getelementptr inbounds i32, ptr %4, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !6
  %590 = getelementptr inbounds i32, ptr %12, i64 %587
  %591 = load i32, ptr %590, align 4, !tbaa !6
  %592 = add nsw i32 %591, -1
  %593 = icmp slt i32 %589, %592
  br i1 %593, label %594, label %612

594:                                              ; preds = %586
  br i1 %581, label %604, label %595

595:                                              ; preds = %594
  %596 = shl i64 %587, 32
  %597 = add i64 %596, -4294967296
  %598 = ashr exact i64 %597, 32
  %599 = getelementptr inbounds i32, ptr %7, i64 %598
  %600 = load i32, ptr %599, align 4, !tbaa !6
  %601 = getelementptr inbounds i32, ptr %6, i64 %587
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = add nsw i32 %602, %600
  store i32 %603, ptr %601, align 4, !tbaa !6
  br label %622

604:                                              ; preds = %577, %594
  %605 = phi i32 [ %589, %594 ], [ %578, %577 ]
  %606 = phi ptr [ %588, %594 ], [ %4, %577 ]
  %607 = phi i64 [ %587, %594 ], [ 0, %577 ]
  %608 = add nsw i32 %605, 1
  store i32 %608, ptr %606, align 4, !tbaa !6
  %609 = getelementptr inbounds i32, ptr %7, i64 %607
  %610 = load i32, ptr %609, align 4, !tbaa !6
  %611 = getelementptr inbounds i32, ptr %6, i64 %607
  br label %622

612:                                              ; preds = %586
  %613 = icmp eq i32 %589, %592
  br i1 %613, label %614, label %620

614:                                              ; preds = %612
  store i32 0, ptr %588, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %8, i64 %587
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %587
  store i32 %616, ptr %617, align 4, !tbaa !6
  %618 = add nuw nsw i64 %587, 1
  %619 = icmp eq i64 %618, %346
  br i1 %619, label %627, label %586, !llvm.loop !403

620:                                              ; preds = %582, %612
  %621 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

622:                                              ; preds = %595, %604
  %623 = phi ptr [ %611, %604 ], [ %588, %595 ]
  %624 = phi i32 [ %610, %604 ], [ 1, %595 ]
  %625 = load i32, ptr %623, align 4, !tbaa !6
  %626 = add nsw i32 %625, %624
  store i32 %626, ptr %623, align 4, !tbaa !6
  br label %627

627:                                              ; preds = %614, %622, %584, %568
  %628 = icmp eq i32 %576, %5
  br i1 %628, label %3074, label %491, !llvm.loop !404

629:                                              ; preds = %32
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 607, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3074

631:                                              ; preds = %18
  %632 = getelementptr inbounds ptr, ptr %14, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !10
  %634 = getelementptr inbounds ptr, ptr %16, i64 %19
  %635 = load ptr, ptr %634, align 8, !tbaa !10
  store i32 0, ptr %635, align 4, !tbaa !6
  %636 = icmp eq i32 %13, 0
  br i1 %636, label %637, label %642

637:                                              ; preds = %631
  %638 = load i8, ptr %633, align 1, !tbaa !12
  %639 = sext i8 %638 to i32
  %640 = mul nsw i32 %639, %639
  %641 = mul nsw i32 %640, %640
  store i32 %641, ptr %635, align 4, !tbaa !6
  br label %3074

642:                                              ; preds = %631
  switch i32 %1, label %1241 [
    i32 1, label %643
    i32 0, label %945
  ]

643:                                              ; preds = %642
  %644 = getelementptr inbounds i32, ptr %3, i64 %19
  %645 = load i32, ptr %644, align 4, !tbaa !6
  %646 = icmp eq i32 %645, 0
  %647 = icmp sgt i32 %5, 0
  br i1 %646, label %657, label %648

648:                                              ; preds = %643
  br i1 %647, label %649, label %3074

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %805

657:                                              ; preds = %643
  br i1 %647, label %658, label %3074

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %666

666:                                              ; preds = %658, %803
  %667 = phi i32 [ 0, %658 ], [ %755, %803 ]
  %668 = phi double [ 0.000000e+00, %658 ], [ %754, %803 ]
  %669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %670, label %739

670:                                              ; preds = %666, %729
  %671 = phi i32 [ %738, %729 ], [ 0, %666 ]
  %672 = phi i64 [ %680, %729 ], [ %663, %666 ]
  %673 = phi i64 [ %737, %729 ], [ %662, %666 ]
  %674 = phi i32 [ %735, %729 ], [ %669, %666 ]
  %675 = sub i32 %661, %671
  %676 = tail call i32 @llvm.smin.i32(i32 %675, i32 0)
  %677 = sub i32 %675, %676
  %678 = zext i32 %677 to i64
  %679 = add nuw nsw i64 %678, 1
  %680 = add nsw i64 %672, -1
  %681 = icmp ult i32 %677, 31
  br i1 %681, label %717, label %682

682:                                              ; preds = %670
  %683 = and i64 %679, 8589934560
  %684 = sub i64 %673, %683
  br label %685

685:                                              ; preds = %685, %682
  %686 = phi i64 [ 0, %682 ], [ %709, %685 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %705, %685 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %706, %685 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %707, %685 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %708, %685 ]
  %691 = sub i64 %673, %686
  %692 = getelementptr inbounds i32, ptr %9, i64 %691
  %693 = getelementptr inbounds i32, ptr %692, i64 -7
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !6
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %692, i64 -15
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !6
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %692, i64 -23
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %692, i64 -31
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = mul <8 x i32> %695, %687
  %706 = mul <8 x i32> %698, %688
  %707 = mul <8 x i32> %701, %689
  %708 = mul <8 x i32> %704, %690
  %709 = add nuw i64 %686, 32
  %710 = icmp eq i64 %709, %683
  br i1 %710, label %711, label %685, !llvm.loop !405

711:                                              ; preds = %685
  %712 = mul <8 x i32> %706, %705
  %713 = mul <8 x i32> %707, %712
  %714 = mul <8 x i32> %708, %713
  %715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %714)
  %716 = icmp eq i64 %679, %683
  br i1 %716, label %729, label %717

717:                                              ; preds = %670, %711
  %718 = phi i64 [ %673, %670 ], [ %684, %711 ]
  %719 = phi i32 [ 1, %670 ], [ %715, %711 ]
  br label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %726, %720 ], [ %718, %717 ]
  %722 = phi i32 [ %725, %720 ], [ %719, %717 ]
  %723 = getelementptr inbounds i32, ptr %9, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !6
  %725 = mul nsw i32 %724, %722
  %726 = add nsw i64 %721, -1
  %727 = trunc i64 %721 to i32
  %728 = icmp sgt i32 %727, 0
  br i1 %728, label %720, label %729, !llvm.loop !406

729:                                              ; preds = %720, %711
  %730 = phi i32 [ %715, %711 ], [ %725, %720 ]
  %731 = and i64 %680, 4294967295
  %732 = getelementptr inbounds i32, ptr %6, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %730
  %735 = add nsw i32 %734, %674
  %736 = icmp sgt i64 %672, 2
  %737 = add nsw i64 %673, -1
  %738 = add i32 %671, 1
  br i1 %736, label %670, label %739, !llvm.loop !407

739:                                              ; preds = %729, %666
  %740 = phi i32 [ %669, %666 ], [ %735, %729 ]
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds double, ptr %2, i64 %741
  %743 = load double, ptr %742, align 8, !tbaa !19
  %744 = getelementptr inbounds i8, ptr %633, i64 %741
  %745 = load i8, ptr %744, align 1, !tbaa !12
  %746 = load i32, ptr %635, align 4, !tbaa !6
  %747 = sitofp i32 %746 to double
  %748 = sitofp i8 %745 to double
  %749 = fmul fast double %743, %748
  %750 = fmul fast double %749, %749
  %751 = fmul fast double %750, %750
  %752 = fadd fast double %751, %747
  %753 = fptosi double %752 to i32
  store i32 %753, ptr %635, align 4, !tbaa !6
  %754 = fadd fast double %743, %668
  %755 = add nuw nsw i32 %667, 1
  br i1 %660, label %756, label %803

756:                                              ; preds = %739
  %757 = load i32, ptr %4, align 4, !tbaa !6
  %758 = load i32, ptr %12, align 4, !tbaa !6
  %759 = add nsw i32 %758, -1
  %760 = icmp slt i32 %757, %759
  br i1 %760, label %780, label %761

761:                                              ; preds = %756
  %762 = icmp eq i32 %757, %759
  br i1 %762, label %763, label %796

763:                                              ; preds = %761
  store i32 0, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %764, ptr %6, align 4, !tbaa !6
  br i1 %665, label %803, label %765

765:                                              ; preds = %763, %790
  %766 = phi i64 [ %794, %790 ], [ 1, %763 ]
  %767 = getelementptr inbounds i32, ptr %4, i64 %766
  %768 = load i32, ptr %767, align 4, !tbaa !6
  %769 = getelementptr inbounds i32, ptr %12, i64 %766
  %770 = load i32, ptr %769, align 4, !tbaa !6
  %771 = add nsw i32 %770, -1
  %772 = icmp slt i32 %768, %771
  br i1 %772, label %773, label %788

773:                                              ; preds = %765
  br i1 %760, label %780, label %774

774:                                              ; preds = %773
  %775 = getelementptr inbounds i32, ptr %7, i64 %766
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = getelementptr inbounds i32, ptr %6, i64 %766
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = add nsw i32 %778, %776
  store i32 %779, ptr %777, align 4, !tbaa !6
  br label %798

780:                                              ; preds = %756, %773
  %781 = phi i32 [ %768, %773 ], [ %757, %756 ]
  %782 = phi ptr [ %767, %773 ], [ %4, %756 ]
  %783 = phi i64 [ %766, %773 ], [ 0, %756 ]
  %784 = add nsw i32 %781, 1
  store i32 %784, ptr %782, align 4, !tbaa !6
  %785 = getelementptr inbounds i32, ptr %7, i64 %783
  %786 = load i32, ptr %785, align 4, !tbaa !6
  %787 = getelementptr inbounds i32, ptr %6, i64 %783
  br label %798

788:                                              ; preds = %765
  %789 = icmp eq i32 %768, %771
  br i1 %789, label %790, label %796

790:                                              ; preds = %788
  store i32 0, ptr %767, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %8, i64 %766
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %766
  store i32 %792, ptr %793, align 4, !tbaa !6
  %794 = add nuw nsw i64 %766, 1
  %795 = icmp eq i64 %794, %663
  br i1 %795, label %803, label %765, !llvm.loop !408

796:                                              ; preds = %761, %788
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

798:                                              ; preds = %774, %780
  %799 = phi ptr [ %787, %780 ], [ %767, %774 ]
  %800 = phi i32 [ %786, %780 ], [ 1, %774 ]
  %801 = load i32, ptr %799, align 4, !tbaa !6
  %802 = add nsw i32 %801, %800
  store i32 %802, ptr %799, align 4, !tbaa !6
  br label %803

803:                                              ; preds = %790, %798, %763, %739
  %804 = icmp eq i32 %755, %5
  br i1 %804, label %3074, label %666, !llvm.loop !409

805:                                              ; preds = %649, %943
  %806 = phi i32 [ 0, %649 ], [ %892, %943 ]
  %807 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %650, label %808, label %877

808:                                              ; preds = %805, %867
  %809 = phi i32 [ %876, %867 ], [ 0, %805 ]
  %810 = phi i64 [ %818, %867 ], [ %654, %805 ]
  %811 = phi i64 [ %875, %867 ], [ %653, %805 ]
  %812 = phi i32 [ %873, %867 ], [ %807, %805 ]
  %813 = sub i32 %652, %809
  %814 = tail call i32 @llvm.smin.i32(i32 %813, i32 0)
  %815 = sub i32 %813, %814
  %816 = zext i32 %815 to i64
  %817 = add nuw nsw i64 %816, 1
  %818 = add nsw i64 %810, -1
  %819 = icmp ult i32 %815, 31
  br i1 %819, label %855, label %820

820:                                              ; preds = %808
  %821 = and i64 %817, 8589934560
  %822 = sub i64 %811, %821
  br label %823

823:                                              ; preds = %823, %820
  %824 = phi i64 [ 0, %820 ], [ %847, %823 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %843, %823 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %844, %823 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %845, %823 ]
  %828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %820 ], [ %846, %823 ]
  %829 = sub i64 %811, %824
  %830 = getelementptr inbounds i32, ptr %11, i64 %829
  %831 = getelementptr inbounds i32, ptr %830, i64 -7
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !6
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %830, i64 -15
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !6
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %830, i64 -23
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %830, i64 -31
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = mul <8 x i32> %833, %825
  %844 = mul <8 x i32> %836, %826
  %845 = mul <8 x i32> %839, %827
  %846 = mul <8 x i32> %842, %828
  %847 = add nuw i64 %824, 32
  %848 = icmp eq i64 %847, %821
  br i1 %848, label %849, label %823, !llvm.loop !410

849:                                              ; preds = %823
  %850 = mul <8 x i32> %844, %843
  %851 = mul <8 x i32> %845, %850
  %852 = mul <8 x i32> %846, %851
  %853 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %852)
  %854 = icmp eq i64 %817, %821
  br i1 %854, label %867, label %855

855:                                              ; preds = %808, %849
  %856 = phi i64 [ %811, %808 ], [ %822, %849 ]
  %857 = phi i32 [ 1, %808 ], [ %853, %849 ]
  br label %858

858:                                              ; preds = %855, %858
  %859 = phi i64 [ %864, %858 ], [ %856, %855 ]
  %860 = phi i32 [ %863, %858 ], [ %857, %855 ]
  %861 = getelementptr inbounds i32, ptr %11, i64 %859
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = mul nsw i32 %862, %860
  %864 = add nsw i64 %859, -1
  %865 = trunc i64 %859 to i32
  %866 = icmp sgt i32 %865, 0
  br i1 %866, label %858, label %867, !llvm.loop !411

867:                                              ; preds = %858, %849
  %868 = phi i32 [ %853, %849 ], [ %863, %858 ]
  %869 = and i64 %818, 4294967295
  %870 = getelementptr inbounds i32, ptr %6, i64 %869
  %871 = load i32, ptr %870, align 4, !tbaa !6
  %872 = mul nsw i32 %871, %868
  %873 = add nsw i32 %872, %812
  %874 = icmp sgt i64 %810, 2
  %875 = add nsw i64 %811, -1
  %876 = add i32 %809, 1
  br i1 %874, label %808, label %877, !llvm.loop !412

877:                                              ; preds = %867, %805
  %878 = phi i32 [ %807, %805 ], [ %873, %867 ]
  %879 = icmp slt i32 %878, %5
  br i1 %879, label %882, label %880

880:                                              ; preds = %877
  %881 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

882:                                              ; preds = %877
  %883 = sext i32 %878 to i64
  %884 = getelementptr inbounds i8, ptr %633, i64 %883
  %885 = load i8, ptr %884, align 1, !tbaa !12
  %886 = load i32, ptr %635, align 4, !tbaa !6
  %887 = sext i8 %885 to i64
  %888 = mul nsw i64 %887, %887
  %889 = mul nsw i64 %888, %888
  %890 = trunc i64 %889 to i32
  %891 = add i32 %886, %890
  store i32 %891, ptr %635, align 4, !tbaa !6
  %892 = add nuw nsw i32 %806, 1
  br i1 %651, label %893, label %943

893:                                              ; preds = %882
  %894 = load i32, ptr %4, align 4, !tbaa !6
  %895 = load i32, ptr %12, align 4, !tbaa !6
  %896 = add nsw i32 %895, -1
  %897 = icmp slt i32 %894, %896
  br i1 %897, label %920, label %898

898:                                              ; preds = %893
  %899 = icmp eq i32 %894, %896
  br i1 %899, label %900, label %936

900:                                              ; preds = %898
  store i32 0, ptr %4, align 4, !tbaa !6
  %901 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %901, ptr %6, align 4, !tbaa !6
  br i1 %656, label %943, label %902

902:                                              ; preds = %900, %930
  %903 = phi i64 [ %934, %930 ], [ 1, %900 ]
  %904 = getelementptr inbounds i32, ptr %4, i64 %903
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = getelementptr inbounds i32, ptr %12, i64 %903
  %907 = load i32, ptr %906, align 4, !tbaa !6
  %908 = add nsw i32 %907, -1
  %909 = icmp slt i32 %905, %908
  br i1 %909, label %910, label %928

910:                                              ; preds = %902
  br i1 %897, label %920, label %911

911:                                              ; preds = %910
  %912 = shl i64 %903, 32
  %913 = add i64 %912, -4294967296
  %914 = ashr exact i64 %913, 32
  %915 = getelementptr inbounds i32, ptr %7, i64 %914
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = getelementptr inbounds i32, ptr %6, i64 %903
  %918 = load i32, ptr %917, align 4, !tbaa !6
  %919 = add nsw i32 %918, %916
  store i32 %919, ptr %917, align 4, !tbaa !6
  br label %938

920:                                              ; preds = %893, %910
  %921 = phi i32 [ %905, %910 ], [ %894, %893 ]
  %922 = phi ptr [ %904, %910 ], [ %4, %893 ]
  %923 = phi i64 [ %903, %910 ], [ 0, %893 ]
  %924 = add nsw i32 %921, 1
  store i32 %924, ptr %922, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %7, i64 %923
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = getelementptr inbounds i32, ptr %6, i64 %923
  br label %938

928:                                              ; preds = %902
  %929 = icmp eq i32 %905, %908
  br i1 %929, label %930, label %936

930:                                              ; preds = %928
  store i32 0, ptr %904, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %8, i64 %903
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %6, i64 %903
  store i32 %932, ptr %933, align 4, !tbaa !6
  %934 = add nuw nsw i64 %903, 1
  %935 = icmp eq i64 %934, %654
  br i1 %935, label %943, label %902, !llvm.loop !413

936:                                              ; preds = %898, %928
  %937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

938:                                              ; preds = %911, %920
  %939 = phi ptr [ %927, %920 ], [ %904, %911 ]
  %940 = phi i32 [ %926, %920 ], [ 1, %911 ]
  %941 = load i32, ptr %939, align 4, !tbaa !6
  %942 = add nsw i32 %941, %940
  store i32 %942, ptr %939, align 4, !tbaa !6
  br label %943

943:                                              ; preds = %930, %938, %900, %882
  %944 = icmp eq i32 %892, %5
  br i1 %944, label %3074, label %805, !llvm.loop !414

945:                                              ; preds = %642
  %946 = getelementptr inbounds i32, ptr %3, i64 %19
  %947 = load i32, ptr %946, align 4, !tbaa !6
  %948 = icmp eq i32 %947, 0
  %949 = icmp sgt i32 %5, 0
  br i1 %948, label %959, label %950

950:                                              ; preds = %945
  br i1 %949, label %951, label %3074

951:                                              ; preds = %950
  %952 = icmp sgt i32 %13, 1
  %953 = icmp sgt i32 %13, 0
  %954 = add i32 %13, -2
  %955 = zext i32 %954 to i64
  %956 = zext i32 %13 to i64
  %957 = add nuw i32 %5, 1
  %958 = icmp eq i32 %13, 1
  br label %1102

959:                                              ; preds = %945
  br i1 %949, label %960, label %3074

960:                                              ; preds = %959
  %961 = icmp sgt i32 %13, 1
  %962 = icmp sgt i32 %13, 0
  %963 = add i32 %13, -2
  %964 = zext i32 %963 to i64
  %965 = zext i32 %13 to i64
  %966 = add nuw i32 %5, 1
  %967 = icmp eq i32 %13, 1
  br label %968

968:                                              ; preds = %960, %1100
  %969 = phi i32 [ 0, %960 ], [ %1052, %1100 ]
  %970 = phi double [ 0.000000e+00, %960 ], [ %1051, %1100 ]
  %971 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %961, label %972, label %1041

972:                                              ; preds = %968, %1031
  %973 = phi i32 [ %1040, %1031 ], [ 0, %968 ]
  %974 = phi i64 [ %982, %1031 ], [ %965, %968 ]
  %975 = phi i64 [ %1039, %1031 ], [ %964, %968 ]
  %976 = phi i32 [ %1037, %1031 ], [ %971, %968 ]
  %977 = sub i32 %963, %973
  %978 = tail call i32 @llvm.smin.i32(i32 %977, i32 0)
  %979 = sub i32 %977, %978
  %980 = zext i32 %979 to i64
  %981 = add nuw nsw i64 %980, 1
  %982 = add nsw i64 %974, -1
  %983 = icmp ult i32 %979, 31
  br i1 %983, label %1019, label %984

984:                                              ; preds = %972
  %985 = and i64 %981, 8589934560
  %986 = sub i64 %975, %985
  br label %987

987:                                              ; preds = %987, %984
  %988 = phi i64 [ 0, %984 ], [ %1011, %987 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1007, %987 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1008, %987 ]
  %991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1009, %987 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %984 ], [ %1010, %987 ]
  %993 = sub i64 %975, %988
  %994 = getelementptr inbounds i32, ptr %9, i64 %993
  %995 = getelementptr inbounds i32, ptr %994, i64 -7
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !6
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %994, i64 -15
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !6
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %994, i64 -23
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = getelementptr inbounds i32, ptr %994, i64 -31
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = mul <8 x i32> %997, %989
  %1008 = mul <8 x i32> %1000, %990
  %1009 = mul <8 x i32> %1003, %991
  %1010 = mul <8 x i32> %1006, %992
  %1011 = add nuw i64 %988, 32
  %1012 = icmp eq i64 %1011, %985
  br i1 %1012, label %1013, label %987, !llvm.loop !415

1013:                                             ; preds = %987
  %1014 = mul <8 x i32> %1008, %1007
  %1015 = mul <8 x i32> %1009, %1014
  %1016 = mul <8 x i32> %1010, %1015
  %1017 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1016)
  %1018 = icmp eq i64 %981, %985
  br i1 %1018, label %1031, label %1019

1019:                                             ; preds = %972, %1013
  %1020 = phi i64 [ %975, %972 ], [ %986, %1013 ]
  %1021 = phi i32 [ 1, %972 ], [ %1017, %1013 ]
  br label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i64 [ %1028, %1022 ], [ %1020, %1019 ]
  %1024 = phi i32 [ %1027, %1022 ], [ %1021, %1019 ]
  %1025 = getelementptr inbounds i32, ptr %9, i64 %1023
  %1026 = load i32, ptr %1025, align 4, !tbaa !6
  %1027 = mul nsw i32 %1026, %1024
  %1028 = add nsw i64 %1023, -1
  %1029 = trunc i64 %1023 to i32
  %1030 = icmp sgt i32 %1029, 0
  br i1 %1030, label %1022, label %1031, !llvm.loop !416

1031:                                             ; preds = %1022, %1013
  %1032 = phi i32 [ %1017, %1013 ], [ %1027, %1022 ]
  %1033 = and i64 %982, 4294967295
  %1034 = getelementptr inbounds i32, ptr %6, i64 %1033
  %1035 = load i32, ptr %1034, align 4, !tbaa !6
  %1036 = mul nsw i32 %1035, %1032
  %1037 = add nsw i32 %1036, %976
  %1038 = icmp sgt i64 %974, 2
  %1039 = add nsw i64 %975, -1
  %1040 = add i32 %973, 1
  br i1 %1038, label %972, label %1041, !llvm.loop !417

1041:                                             ; preds = %1031, %968
  %1042 = phi i32 [ %971, %968 ], [ %1037, %1031 ]
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds i8, ptr %633, i64 %1043
  %1045 = load i8, ptr %1044, align 1, !tbaa !12
  %1046 = sext i8 %1045 to i32
  %1047 = load i32, ptr %635, align 4, !tbaa !6
  %1048 = mul nsw i32 %1046, %1046
  %1049 = mul nsw i32 %1048, %1048
  %1050 = add nsw i32 %1049, %1047
  store i32 %1050, ptr %635, align 4, !tbaa !6
  %1051 = fadd fast double %970, 1.000000e+00
  %1052 = add nuw nsw i32 %969, 1
  br i1 %962, label %1053, label %1100

1053:                                             ; preds = %1041
  %1054 = load i32, ptr %4, align 4, !tbaa !6
  %1055 = load i32, ptr %12, align 4, !tbaa !6
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1054, %1056
  br i1 %1057, label %1077, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp eq i32 %1054, %1056
  br i1 %1059, label %1060, label %1093

1060:                                             ; preds = %1058
  store i32 0, ptr %4, align 4, !tbaa !6
  %1061 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1061, ptr %6, align 4, !tbaa !6
  br i1 %967, label %1100, label %1062

1062:                                             ; preds = %1060, %1087
  %1063 = phi i64 [ %1091, %1087 ], [ 1, %1060 ]
  %1064 = getelementptr inbounds i32, ptr %4, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !6
  %1066 = getelementptr inbounds i32, ptr %12, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1065, %1068
  br i1 %1069, label %1070, label %1085

1070:                                             ; preds = %1062
  br i1 %1057, label %1077, label %1071

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1063
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1063
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, %1073
  store i32 %1076, ptr %1074, align 4, !tbaa !6
  br label %1095

1077:                                             ; preds = %1053, %1070
  %1078 = phi i32 [ %1065, %1070 ], [ %1054, %1053 ]
  %1079 = phi ptr [ %1064, %1070 ], [ %4, %1053 ]
  %1080 = phi i64 [ %1063, %1070 ], [ 0, %1053 ]
  %1081 = add nsw i32 %1078, 1
  store i32 %1081, ptr %1079, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %7, i64 %1080
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1080
  br label %1095

1085:                                             ; preds = %1062
  %1086 = icmp eq i32 %1065, %1068
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1085
  store i32 0, ptr %1064, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %8, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1063
  store i32 %1089, ptr %1090, align 4, !tbaa !6
  %1091 = add nuw nsw i64 %1063, 1
  %1092 = icmp eq i64 %1091, %965
  br i1 %1092, label %1100, label %1062, !llvm.loop !418

1093:                                             ; preds = %1058, %1085
  %1094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1095:                                             ; preds = %1071, %1077
  %1096 = phi ptr [ %1084, %1077 ], [ %1064, %1071 ]
  %1097 = phi i32 [ %1083, %1077 ], [ 1, %1071 ]
  %1098 = load i32, ptr %1096, align 4, !tbaa !6
  %1099 = add nsw i32 %1098, %1097
  store i32 %1099, ptr %1096, align 4, !tbaa !6
  br label %1100

1100:                                             ; preds = %1087, %1095, %1060, %1041
  %1101 = icmp eq i32 %1052, %5
  br i1 %1101, label %3074, label %968, !llvm.loop !419

1102:                                             ; preds = %951, %1239
  %1103 = phi i32 [ 0, %951 ], [ %1188, %1239 ]
  %1104 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %952, label %1105, label %1174

1105:                                             ; preds = %1102, %1164
  %1106 = phi i32 [ %1173, %1164 ], [ 0, %1102 ]
  %1107 = phi i64 [ %1115, %1164 ], [ %956, %1102 ]
  %1108 = phi i64 [ %1172, %1164 ], [ %955, %1102 ]
  %1109 = phi i32 [ %1170, %1164 ], [ %1104, %1102 ]
  %1110 = sub i32 %954, %1106
  %1111 = tail call i32 @llvm.smin.i32(i32 %1110, i32 0)
  %1112 = sub i32 %1110, %1111
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1113, 1
  %1115 = add nsw i64 %1107, -1
  %1116 = icmp ult i32 %1112, 31
  br i1 %1116, label %1152, label %1117

1117:                                             ; preds = %1105
  %1118 = and i64 %1114, 8589934560
  %1119 = sub i64 %1108, %1118
  br label %1120

1120:                                             ; preds = %1120, %1117
  %1121 = phi i64 [ 0, %1117 ], [ %1144, %1120 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1140, %1120 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1141, %1120 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1142, %1120 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1143, %1120 ]
  %1126 = sub i64 %1108, %1121
  %1127 = getelementptr inbounds i32, ptr %11, i64 %1126
  %1128 = getelementptr inbounds i32, ptr %1127, i64 -7
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !6
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1127, i64 -15
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !6
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1127, i64 -23
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !6
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1127, i64 -31
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !6
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = mul <8 x i32> %1130, %1122
  %1141 = mul <8 x i32> %1133, %1123
  %1142 = mul <8 x i32> %1136, %1124
  %1143 = mul <8 x i32> %1139, %1125
  %1144 = add nuw i64 %1121, 32
  %1145 = icmp eq i64 %1144, %1118
  br i1 %1145, label %1146, label %1120, !llvm.loop !420

1146:                                             ; preds = %1120
  %1147 = mul <8 x i32> %1141, %1140
  %1148 = mul <8 x i32> %1142, %1147
  %1149 = mul <8 x i32> %1143, %1148
  %1150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1149)
  %1151 = icmp eq i64 %1114, %1118
  br i1 %1151, label %1164, label %1152

1152:                                             ; preds = %1105, %1146
  %1153 = phi i64 [ %1108, %1105 ], [ %1119, %1146 ]
  %1154 = phi i32 [ 1, %1105 ], [ %1150, %1146 ]
  br label %1155

1155:                                             ; preds = %1152, %1155
  %1156 = phi i64 [ %1161, %1155 ], [ %1153, %1152 ]
  %1157 = phi i32 [ %1160, %1155 ], [ %1154, %1152 ]
  %1158 = getelementptr inbounds i32, ptr %11, i64 %1156
  %1159 = load i32, ptr %1158, align 4, !tbaa !6
  %1160 = mul nsw i32 %1159, %1157
  %1161 = add nsw i64 %1156, -1
  %1162 = trunc i64 %1156 to i32
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1155, label %1164, !llvm.loop !421

1164:                                             ; preds = %1155, %1146
  %1165 = phi i32 [ %1150, %1146 ], [ %1160, %1155 ]
  %1166 = and i64 %1115, 4294967295
  %1167 = getelementptr inbounds i32, ptr %6, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !6
  %1169 = mul nsw i32 %1168, %1165
  %1170 = add nsw i32 %1169, %1109
  %1171 = icmp sgt i64 %1107, 2
  %1172 = add nsw i64 %1108, -1
  %1173 = add i32 %1106, 1
  br i1 %1171, label %1105, label %1174, !llvm.loop !422

1174:                                             ; preds = %1164, %1102
  %1175 = phi i32 [ %1104, %1102 ], [ %1170, %1164 ]
  %1176 = icmp slt i32 %1175, %5
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1174
  %1178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

1179:                                             ; preds = %1174
  %1180 = sext i32 %1175 to i64
  %1181 = getelementptr inbounds i8, ptr %633, i64 %1180
  %1182 = load i8, ptr %1181, align 1, !tbaa !12
  %1183 = sext i8 %1182 to i32
  %1184 = load i32, ptr %635, align 4, !tbaa !6
  %1185 = mul nsw i32 %1183, %1183
  %1186 = mul nsw i32 %1185, %1185
  %1187 = add nsw i32 %1186, %1184
  store i32 %1187, ptr %635, align 4, !tbaa !6
  %1188 = add nuw nsw i32 %1103, 1
  br i1 %953, label %1189, label %1239

1189:                                             ; preds = %1179
  %1190 = load i32, ptr %4, align 4, !tbaa !6
  %1191 = load i32, ptr %12, align 4, !tbaa !6
  %1192 = add nsw i32 %1191, -1
  %1193 = icmp slt i32 %1190, %1192
  br i1 %1193, label %1216, label %1194

1194:                                             ; preds = %1189
  %1195 = icmp eq i32 %1190, %1192
  br i1 %1195, label %1196, label %1232

1196:                                             ; preds = %1194
  store i32 0, ptr %4, align 4, !tbaa !6
  %1197 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1197, ptr %6, align 4, !tbaa !6
  br i1 %958, label %1239, label %1198

1198:                                             ; preds = %1196, %1226
  %1199 = phi i64 [ %1230, %1226 ], [ 1, %1196 ]
  %1200 = getelementptr inbounds i32, ptr %4, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !6
  %1202 = getelementptr inbounds i32, ptr %12, i64 %1199
  %1203 = load i32, ptr %1202, align 4, !tbaa !6
  %1204 = add nsw i32 %1203, -1
  %1205 = icmp slt i32 %1201, %1204
  br i1 %1205, label %1206, label %1224

1206:                                             ; preds = %1198
  br i1 %1193, label %1216, label %1207

1207:                                             ; preds = %1206
  %1208 = shl i64 %1199, 32
  %1209 = add i64 %1208, -4294967296
  %1210 = ashr exact i64 %1209, 32
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1210
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1199
  %1214 = load i32, ptr %1213, align 4, !tbaa !6
  %1215 = add nsw i32 %1214, %1212
  store i32 %1215, ptr %1213, align 4, !tbaa !6
  br label %1234

1216:                                             ; preds = %1189, %1206
  %1217 = phi i32 [ %1201, %1206 ], [ %1190, %1189 ]
  %1218 = phi ptr [ %1200, %1206 ], [ %4, %1189 ]
  %1219 = phi i64 [ %1199, %1206 ], [ 0, %1189 ]
  %1220 = add nsw i32 %1217, 1
  store i32 %1220, ptr %1218, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %7, i64 %1219
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1219
  br label %1234

1224:                                             ; preds = %1198
  %1225 = icmp eq i32 %1201, %1204
  br i1 %1225, label %1226, label %1232

1226:                                             ; preds = %1224
  store i32 0, ptr %1200, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %8, i64 %1199
  %1228 = load i32, ptr %1227, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %6, i64 %1199
  store i32 %1228, ptr %1229, align 4, !tbaa !6
  %1230 = add nuw nsw i64 %1199, 1
  %1231 = icmp eq i64 %1230, %956
  br i1 %1231, label %1239, label %1198, !llvm.loop !423

1232:                                             ; preds = %1194, %1224
  %1233 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1234:                                             ; preds = %1207, %1216
  %1235 = phi ptr [ %1223, %1216 ], [ %1200, %1207 ]
  %1236 = phi i32 [ %1222, %1216 ], [ 1, %1207 ]
  %1237 = load i32, ptr %1235, align 4, !tbaa !6
  %1238 = add nsw i32 %1237, %1236
  store i32 %1238, ptr %1235, align 4, !tbaa !6
  br label %1239

1239:                                             ; preds = %1226, %1234, %1196, %1179
  %1240 = icmp eq i32 %1188, %5
  br i1 %1240, label %3074, label %1102, !llvm.loop !424

1241:                                             ; preds = %642
  %1242 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 610, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3074

1243:                                             ; preds = %18
  %1244 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !10
  %1246 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1247 = load ptr, ptr %1246, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1247, align 8, !tbaa !19
  %1248 = icmp eq i32 %13, 0
  br i1 %1248, label %1249, label %1254

1249:                                             ; preds = %1243
  %1250 = load i8, ptr %1245, align 1, !tbaa !12
  %1251 = sitofp i8 %1250 to double
  %1252 = fmul fast double %1251, %1251
  %1253 = fmul fast double %1252, %1252
  store double %1253, ptr %1247, align 8, !tbaa !19
  br label %3074

1254:                                             ; preds = %1243
  switch i32 %1, label %1850 [
    i32 1, label %1255
    i32 0, label %1554
  ]

1255:                                             ; preds = %1254
  %1256 = getelementptr inbounds i32, ptr %3, i64 %19
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp sgt i32 %5, 0
  br i1 %1258, label %1269, label %1260

1260:                                             ; preds = %1255
  br i1 %1259, label %1261, label %3074

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1415

1269:                                             ; preds = %1255
  br i1 %1259, label %1270, label %3074

1270:                                             ; preds = %1269
  %1271 = icmp sgt i32 %13, 1
  %1272 = icmp sgt i32 %13, 0
  %1273 = add i32 %13, -2
  %1274 = zext i32 %1273 to i64
  %1275 = zext i32 %13 to i64
  %1276 = add nuw i32 %5, 1
  %1277 = icmp eq i32 %13, 1
  br label %1278

1278:                                             ; preds = %1270, %1413
  %1279 = phi double [ 0.000000e+00, %1270 ], [ %1363, %1413 ]
  %1280 = phi i32 [ 0, %1270 ], [ %1365, %1413 ]
  %1281 = phi double [ 0.000000e+00, %1270 ], [ %1364, %1413 ]
  %1282 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1271, label %1283, label %1352

1283:                                             ; preds = %1278, %1342
  %1284 = phi i32 [ %1351, %1342 ], [ 0, %1278 ]
  %1285 = phi i64 [ %1293, %1342 ], [ %1275, %1278 ]
  %1286 = phi i64 [ %1350, %1342 ], [ %1274, %1278 ]
  %1287 = phi i32 [ %1348, %1342 ], [ %1282, %1278 ]
  %1288 = sub i32 %1273, %1284
  %1289 = tail call i32 @llvm.smin.i32(i32 %1288, i32 0)
  %1290 = sub i32 %1288, %1289
  %1291 = zext i32 %1290 to i64
  %1292 = add nuw nsw i64 %1291, 1
  %1293 = add nsw i64 %1285, -1
  %1294 = icmp ult i32 %1290, 31
  br i1 %1294, label %1330, label %1295

1295:                                             ; preds = %1283
  %1296 = and i64 %1292, 8589934560
  %1297 = sub i64 %1286, %1296
  br label %1298

1298:                                             ; preds = %1298, %1295
  %1299 = phi i64 [ 0, %1295 ], [ %1322, %1298 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1295 ], [ %1318, %1298 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1295 ], [ %1319, %1298 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1295 ], [ %1320, %1298 ]
  %1303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1295 ], [ %1321, %1298 ]
  %1304 = sub i64 %1286, %1299
  %1305 = getelementptr inbounds i32, ptr %9, i64 %1304
  %1306 = getelementptr inbounds i32, ptr %1305, i64 -7
  %1307 = load <8 x i32>, ptr %1306, align 4, !tbaa !6
  %1308 = shufflevector <8 x i32> %1307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1309 = getelementptr inbounds i32, ptr %1305, i64 -15
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !6
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = getelementptr inbounds i32, ptr %1305, i64 -23
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !6
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1305, i64 -31
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !6
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = mul <8 x i32> %1308, %1300
  %1319 = mul <8 x i32> %1311, %1301
  %1320 = mul <8 x i32> %1314, %1302
  %1321 = mul <8 x i32> %1317, %1303
  %1322 = add nuw i64 %1299, 32
  %1323 = icmp eq i64 %1322, %1296
  br i1 %1323, label %1324, label %1298, !llvm.loop !425

1324:                                             ; preds = %1298
  %1325 = mul <8 x i32> %1319, %1318
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = mul <8 x i32> %1321, %1326
  %1328 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1327)
  %1329 = icmp eq i64 %1292, %1296
  br i1 %1329, label %1342, label %1330

1330:                                             ; preds = %1283, %1324
  %1331 = phi i64 [ %1286, %1283 ], [ %1297, %1324 ]
  %1332 = phi i32 [ 1, %1283 ], [ %1328, %1324 ]
  br label %1333

1333:                                             ; preds = %1330, %1333
  %1334 = phi i64 [ %1339, %1333 ], [ %1331, %1330 ]
  %1335 = phi i32 [ %1338, %1333 ], [ %1332, %1330 ]
  %1336 = getelementptr inbounds i32, ptr %9, i64 %1334
  %1337 = load i32, ptr %1336, align 4, !tbaa !6
  %1338 = mul nsw i32 %1337, %1335
  %1339 = add nsw i64 %1334, -1
  %1340 = trunc i64 %1334 to i32
  %1341 = icmp sgt i32 %1340, 0
  br i1 %1341, label %1333, label %1342, !llvm.loop !426

1342:                                             ; preds = %1333, %1324
  %1343 = phi i32 [ %1328, %1324 ], [ %1338, %1333 ]
  %1344 = and i64 %1293, 4294967295
  %1345 = getelementptr inbounds i32, ptr %6, i64 %1344
  %1346 = load i32, ptr %1345, align 4, !tbaa !6
  %1347 = mul nsw i32 %1346, %1343
  %1348 = add nsw i32 %1347, %1287
  %1349 = icmp sgt i64 %1285, 2
  %1350 = add nsw i64 %1286, -1
  %1351 = add i32 %1284, 1
  br i1 %1349, label %1283, label %1352, !llvm.loop !427

1352:                                             ; preds = %1342, %1278
  %1353 = phi i32 [ %1282, %1278 ], [ %1348, %1342 ]
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds double, ptr %2, i64 %1354
  %1356 = load double, ptr %1355, align 8, !tbaa !19
  %1357 = getelementptr inbounds i8, ptr %1245, i64 %1354
  %1358 = load i8, ptr %1357, align 1, !tbaa !12
  %1359 = sitofp i8 %1358 to double
  %1360 = fmul fast double %1356, %1359
  %1361 = fmul fast double %1360, %1360
  %1362 = fmul fast double %1361, %1361
  %1363 = fadd fast double %1362, %1279
  store double %1363, ptr %1247, align 8, !tbaa !19
  %1364 = fadd fast double %1356, %1281
  %1365 = add nuw nsw i32 %1280, 1
  br i1 %1272, label %1366, label %1413

1366:                                             ; preds = %1352
  %1367 = load i32, ptr %4, align 4, !tbaa !6
  %1368 = load i32, ptr %12, align 4, !tbaa !6
  %1369 = add nsw i32 %1368, -1
  %1370 = icmp slt i32 %1367, %1369
  br i1 %1370, label %1390, label %1371

1371:                                             ; preds = %1366
  %1372 = icmp eq i32 %1367, %1369
  br i1 %1372, label %1373, label %1406

1373:                                             ; preds = %1371
  store i32 0, ptr %4, align 4, !tbaa !6
  %1374 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1374, ptr %6, align 4, !tbaa !6
  br i1 %1277, label %1413, label %1375

1375:                                             ; preds = %1373, %1400
  %1376 = phi i64 [ %1404, %1400 ], [ 1, %1373 ]
  %1377 = getelementptr inbounds i32, ptr %4, i64 %1376
  %1378 = load i32, ptr %1377, align 4, !tbaa !6
  %1379 = getelementptr inbounds i32, ptr %12, i64 %1376
  %1380 = load i32, ptr %1379, align 4, !tbaa !6
  %1381 = add nsw i32 %1380, -1
  %1382 = icmp slt i32 %1378, %1381
  br i1 %1382, label %1383, label %1398

1383:                                             ; preds = %1375
  br i1 %1370, label %1390, label %1384

1384:                                             ; preds = %1383
  %1385 = getelementptr inbounds i32, ptr %7, i64 %1376
  %1386 = load i32, ptr %1385, align 4, !tbaa !6
  %1387 = getelementptr inbounds i32, ptr %6, i64 %1376
  %1388 = load i32, ptr %1387, align 4, !tbaa !6
  %1389 = add nsw i32 %1388, %1386
  store i32 %1389, ptr %1387, align 4, !tbaa !6
  br label %1408

1390:                                             ; preds = %1366, %1383
  %1391 = phi i32 [ %1378, %1383 ], [ %1367, %1366 ]
  %1392 = phi ptr [ %1377, %1383 ], [ %4, %1366 ]
  %1393 = phi i64 [ %1376, %1383 ], [ 0, %1366 ]
  %1394 = add nsw i32 %1391, 1
  store i32 %1394, ptr %1392, align 4, !tbaa !6
  %1395 = getelementptr inbounds i32, ptr %7, i64 %1393
  %1396 = load i32, ptr %1395, align 4, !tbaa !6
  %1397 = getelementptr inbounds i32, ptr %6, i64 %1393
  br label %1408

1398:                                             ; preds = %1375
  %1399 = icmp eq i32 %1378, %1381
  br i1 %1399, label %1400, label %1406

1400:                                             ; preds = %1398
  store i32 0, ptr %1377, align 4, !tbaa !6
  %1401 = getelementptr inbounds i32, ptr %8, i64 %1376
  %1402 = load i32, ptr %1401, align 4, !tbaa !6
  %1403 = getelementptr inbounds i32, ptr %6, i64 %1376
  store i32 %1402, ptr %1403, align 4, !tbaa !6
  %1404 = add nuw nsw i64 %1376, 1
  %1405 = icmp eq i64 %1404, %1275
  br i1 %1405, label %1413, label %1375, !llvm.loop !428

1406:                                             ; preds = %1371, %1398
  %1407 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1408:                                             ; preds = %1384, %1390
  %1409 = phi ptr [ %1397, %1390 ], [ %1377, %1384 ]
  %1410 = phi i32 [ %1396, %1390 ], [ 1, %1384 ]
  %1411 = load i32, ptr %1409, align 4, !tbaa !6
  %1412 = add nsw i32 %1411, %1410
  store i32 %1412, ptr %1409, align 4, !tbaa !6
  br label %1413

1413:                                             ; preds = %1400, %1408, %1373, %1352
  %1414 = icmp eq i32 %1365, %5
  br i1 %1414, label %3074, label %1278, !llvm.loop !429

1415:                                             ; preds = %1261, %1552
  %1416 = phi double [ 0.000000e+00, %1261 ], [ %1500, %1552 ]
  %1417 = phi i32 [ 0, %1261 ], [ %1501, %1552 ]
  %1418 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1262, label %1419, label %1488

1419:                                             ; preds = %1415, %1478
  %1420 = phi i32 [ %1487, %1478 ], [ 0, %1415 ]
  %1421 = phi i64 [ %1429, %1478 ], [ %1266, %1415 ]
  %1422 = phi i64 [ %1486, %1478 ], [ %1265, %1415 ]
  %1423 = phi i32 [ %1484, %1478 ], [ %1418, %1415 ]
  %1424 = sub i32 %1264, %1420
  %1425 = tail call i32 @llvm.smin.i32(i32 %1424, i32 0)
  %1426 = sub i32 %1424, %1425
  %1427 = zext i32 %1426 to i64
  %1428 = add nuw nsw i64 %1427, 1
  %1429 = add nsw i64 %1421, -1
  %1430 = icmp ult i32 %1426, 31
  br i1 %1430, label %1466, label %1431

1431:                                             ; preds = %1419
  %1432 = and i64 %1428, 8589934560
  %1433 = sub i64 %1422, %1432
  br label %1434

1434:                                             ; preds = %1434, %1431
  %1435 = phi i64 [ 0, %1431 ], [ %1458, %1434 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1454, %1434 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1455, %1434 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1456, %1434 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1457, %1434 ]
  %1440 = sub i64 %1422, %1435
  %1441 = getelementptr inbounds i32, ptr %11, i64 %1440
  %1442 = getelementptr inbounds i32, ptr %1441, i64 -7
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !6
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1441, i64 -15
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !6
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1441, i64 -23
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !6
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1441, i64 -31
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !6
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = mul <8 x i32> %1444, %1436
  %1455 = mul <8 x i32> %1447, %1437
  %1456 = mul <8 x i32> %1450, %1438
  %1457 = mul <8 x i32> %1453, %1439
  %1458 = add nuw i64 %1435, 32
  %1459 = icmp eq i64 %1458, %1432
  br i1 %1459, label %1460, label %1434, !llvm.loop !430

1460:                                             ; preds = %1434
  %1461 = mul <8 x i32> %1455, %1454
  %1462 = mul <8 x i32> %1456, %1461
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1463)
  %1465 = icmp eq i64 %1428, %1432
  br i1 %1465, label %1478, label %1466

1466:                                             ; preds = %1419, %1460
  %1467 = phi i64 [ %1422, %1419 ], [ %1433, %1460 ]
  %1468 = phi i32 [ 1, %1419 ], [ %1464, %1460 ]
  br label %1469

1469:                                             ; preds = %1466, %1469
  %1470 = phi i64 [ %1475, %1469 ], [ %1467, %1466 ]
  %1471 = phi i32 [ %1474, %1469 ], [ %1468, %1466 ]
  %1472 = getelementptr inbounds i32, ptr %11, i64 %1470
  %1473 = load i32, ptr %1472, align 4, !tbaa !6
  %1474 = mul nsw i32 %1473, %1471
  %1475 = add nsw i64 %1470, -1
  %1476 = trunc i64 %1470 to i32
  %1477 = icmp sgt i32 %1476, 0
  br i1 %1477, label %1469, label %1478, !llvm.loop !431

1478:                                             ; preds = %1469, %1460
  %1479 = phi i32 [ %1464, %1460 ], [ %1474, %1469 ]
  %1480 = and i64 %1429, 4294967295
  %1481 = getelementptr inbounds i32, ptr %6, i64 %1480
  %1482 = load i32, ptr %1481, align 4, !tbaa !6
  %1483 = mul nsw i32 %1482, %1479
  %1484 = add nsw i32 %1483, %1423
  %1485 = icmp sgt i64 %1421, 2
  %1486 = add nsw i64 %1422, -1
  %1487 = add i32 %1420, 1
  br i1 %1485, label %1419, label %1488, !llvm.loop !432

1488:                                             ; preds = %1478, %1415
  %1489 = phi i32 [ %1418, %1415 ], [ %1484, %1478 ]
  %1490 = icmp slt i32 %1489, %5
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1488
  %1492 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

1493:                                             ; preds = %1488
  %1494 = sext i32 %1489 to i64
  %1495 = getelementptr inbounds i8, ptr %1245, i64 %1494
  %1496 = load i8, ptr %1495, align 1, !tbaa !12
  %1497 = sitofp i8 %1496 to double
  %1498 = fmul fast double %1497, %1497
  %1499 = fmul fast double %1498, %1498
  %1500 = fadd fast double %1499, %1416
  store double %1500, ptr %1247, align 8, !tbaa !19
  %1501 = add nuw nsw i32 %1417, 1
  br i1 %1263, label %1502, label %1552

1502:                                             ; preds = %1493
  %1503 = load i32, ptr %4, align 4, !tbaa !6
  %1504 = load i32, ptr %12, align 4, !tbaa !6
  %1505 = add nsw i32 %1504, -1
  %1506 = icmp slt i32 %1503, %1505
  br i1 %1506, label %1529, label %1507

1507:                                             ; preds = %1502
  %1508 = icmp eq i32 %1503, %1505
  br i1 %1508, label %1509, label %1545

1509:                                             ; preds = %1507
  store i32 0, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1510, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1552, label %1511

1511:                                             ; preds = %1509, %1539
  %1512 = phi i64 [ %1543, %1539 ], [ 1, %1509 ]
  %1513 = getelementptr inbounds i32, ptr %4, i64 %1512
  %1514 = load i32, ptr %1513, align 4, !tbaa !6
  %1515 = getelementptr inbounds i32, ptr %12, i64 %1512
  %1516 = load i32, ptr %1515, align 4, !tbaa !6
  %1517 = add nsw i32 %1516, -1
  %1518 = icmp slt i32 %1514, %1517
  br i1 %1518, label %1519, label %1537

1519:                                             ; preds = %1511
  br i1 %1506, label %1529, label %1520

1520:                                             ; preds = %1519
  %1521 = shl i64 %1512, 32
  %1522 = add i64 %1521, -4294967296
  %1523 = ashr exact i64 %1522, 32
  %1524 = getelementptr inbounds i32, ptr %7, i64 %1523
  %1525 = load i32, ptr %1524, align 4, !tbaa !6
  %1526 = getelementptr inbounds i32, ptr %6, i64 %1512
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = add nsw i32 %1527, %1525
  store i32 %1528, ptr %1526, align 4, !tbaa !6
  br label %1547

1529:                                             ; preds = %1502, %1519
  %1530 = phi i32 [ %1514, %1519 ], [ %1503, %1502 ]
  %1531 = phi ptr [ %1513, %1519 ], [ %4, %1502 ]
  %1532 = phi i64 [ %1512, %1519 ], [ 0, %1502 ]
  %1533 = add nsw i32 %1530, 1
  store i32 %1533, ptr %1531, align 4, !tbaa !6
  %1534 = getelementptr inbounds i32, ptr %7, i64 %1532
  %1535 = load i32, ptr %1534, align 4, !tbaa !6
  %1536 = getelementptr inbounds i32, ptr %6, i64 %1532
  br label %1547

1537:                                             ; preds = %1511
  %1538 = icmp eq i32 %1514, %1517
  br i1 %1538, label %1539, label %1545

1539:                                             ; preds = %1537
  store i32 0, ptr %1513, align 4, !tbaa !6
  %1540 = getelementptr inbounds i32, ptr %8, i64 %1512
  %1541 = load i32, ptr %1540, align 4, !tbaa !6
  %1542 = getelementptr inbounds i32, ptr %6, i64 %1512
  store i32 %1541, ptr %1542, align 4, !tbaa !6
  %1543 = add nuw nsw i64 %1512, 1
  %1544 = icmp eq i64 %1543, %1266
  br i1 %1544, label %1552, label %1511, !llvm.loop !433

1545:                                             ; preds = %1507, %1537
  %1546 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1547:                                             ; preds = %1520, %1529
  %1548 = phi ptr [ %1536, %1529 ], [ %1513, %1520 ]
  %1549 = phi i32 [ %1535, %1529 ], [ 1, %1520 ]
  %1550 = load i32, ptr %1548, align 4, !tbaa !6
  %1551 = add nsw i32 %1550, %1549
  store i32 %1551, ptr %1548, align 4, !tbaa !6
  br label %1552

1552:                                             ; preds = %1539, %1547, %1509, %1493
  %1553 = icmp eq i32 %1501, %5
  br i1 %1553, label %3074, label %1415, !llvm.loop !434

1554:                                             ; preds = %1254
  %1555 = getelementptr inbounds i32, ptr %3, i64 %19
  %1556 = load i32, ptr %1555, align 4, !tbaa !6
  %1557 = icmp eq i32 %1556, 0
  %1558 = icmp sgt i32 %5, 0
  br i1 %1557, label %1568, label %1559

1559:                                             ; preds = %1554
  br i1 %1558, label %1560, label %3074

1560:                                             ; preds = %1559
  %1561 = icmp sgt i32 %13, 1
  %1562 = icmp sgt i32 %13, 0
  %1563 = add i32 %13, -2
  %1564 = zext i32 %1563 to i64
  %1565 = zext i32 %13 to i64
  %1566 = add nuw i32 %5, 1
  %1567 = icmp eq i32 %13, 1
  br label %1711

1568:                                             ; preds = %1554
  br i1 %1558, label %1569, label %3074

1569:                                             ; preds = %1568
  %1570 = icmp sgt i32 %13, 1
  %1571 = icmp sgt i32 %13, 0
  %1572 = add i32 %13, -2
  %1573 = zext i32 %1572 to i64
  %1574 = zext i32 %13 to i64
  %1575 = add nuw i32 %5, 1
  %1576 = icmp eq i32 %13, 1
  br label %1577

1577:                                             ; preds = %1569, %1709
  %1578 = phi double [ 0.000000e+00, %1569 ], [ %1659, %1709 ]
  %1579 = phi i32 [ 0, %1569 ], [ %1661, %1709 ]
  %1580 = phi double [ 0.000000e+00, %1569 ], [ %1660, %1709 ]
  %1581 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1570, label %1582, label %1651

1582:                                             ; preds = %1577, %1641
  %1583 = phi i32 [ %1650, %1641 ], [ 0, %1577 ]
  %1584 = phi i64 [ %1592, %1641 ], [ %1574, %1577 ]
  %1585 = phi i64 [ %1649, %1641 ], [ %1573, %1577 ]
  %1586 = phi i32 [ %1647, %1641 ], [ %1581, %1577 ]
  %1587 = sub i32 %1572, %1583
  %1588 = tail call i32 @llvm.smin.i32(i32 %1587, i32 0)
  %1589 = sub i32 %1587, %1588
  %1590 = zext i32 %1589 to i64
  %1591 = add nuw nsw i64 %1590, 1
  %1592 = add nsw i64 %1584, -1
  %1593 = icmp ult i32 %1589, 31
  br i1 %1593, label %1629, label %1594

1594:                                             ; preds = %1582
  %1595 = and i64 %1591, 8589934560
  %1596 = sub i64 %1585, %1595
  br label %1597

1597:                                             ; preds = %1597, %1594
  %1598 = phi i64 [ 0, %1594 ], [ %1621, %1597 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1617, %1597 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1618, %1597 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1619, %1597 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1620, %1597 ]
  %1603 = sub i64 %1585, %1598
  %1604 = getelementptr inbounds i32, ptr %9, i64 %1603
  %1605 = getelementptr inbounds i32, ptr %1604, i64 -7
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !6
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = getelementptr inbounds i32, ptr %1604, i64 -15
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !6
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1604, i64 -23
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !6
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1604, i64 -31
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !6
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = mul <8 x i32> %1607, %1599
  %1618 = mul <8 x i32> %1610, %1600
  %1619 = mul <8 x i32> %1613, %1601
  %1620 = mul <8 x i32> %1616, %1602
  %1621 = add nuw i64 %1598, 32
  %1622 = icmp eq i64 %1621, %1595
  br i1 %1622, label %1623, label %1597, !llvm.loop !435

1623:                                             ; preds = %1597
  %1624 = mul <8 x i32> %1618, %1617
  %1625 = mul <8 x i32> %1619, %1624
  %1626 = mul <8 x i32> %1620, %1625
  %1627 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1626)
  %1628 = icmp eq i64 %1591, %1595
  br i1 %1628, label %1641, label %1629

1629:                                             ; preds = %1582, %1623
  %1630 = phi i64 [ %1585, %1582 ], [ %1596, %1623 ]
  %1631 = phi i32 [ 1, %1582 ], [ %1627, %1623 ]
  br label %1632

1632:                                             ; preds = %1629, %1632
  %1633 = phi i64 [ %1638, %1632 ], [ %1630, %1629 ]
  %1634 = phi i32 [ %1637, %1632 ], [ %1631, %1629 ]
  %1635 = getelementptr inbounds i32, ptr %9, i64 %1633
  %1636 = load i32, ptr %1635, align 4, !tbaa !6
  %1637 = mul nsw i32 %1636, %1634
  %1638 = add nsw i64 %1633, -1
  %1639 = trunc i64 %1633 to i32
  %1640 = icmp sgt i32 %1639, 0
  br i1 %1640, label %1632, label %1641, !llvm.loop !436

1641:                                             ; preds = %1632, %1623
  %1642 = phi i32 [ %1627, %1623 ], [ %1637, %1632 ]
  %1643 = and i64 %1592, 4294967295
  %1644 = getelementptr inbounds i32, ptr %6, i64 %1643
  %1645 = load i32, ptr %1644, align 4, !tbaa !6
  %1646 = mul nsw i32 %1645, %1642
  %1647 = add nsw i32 %1646, %1586
  %1648 = icmp sgt i64 %1584, 2
  %1649 = add nsw i64 %1585, -1
  %1650 = add i32 %1583, 1
  br i1 %1648, label %1582, label %1651, !llvm.loop !437

1651:                                             ; preds = %1641, %1577
  %1652 = phi i32 [ %1581, %1577 ], [ %1647, %1641 ]
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds i8, ptr %1245, i64 %1653
  %1655 = load i8, ptr %1654, align 1, !tbaa !12
  %1656 = sitofp i8 %1655 to double
  %1657 = fmul fast double %1656, %1656
  %1658 = fmul fast double %1657, %1657
  %1659 = fadd fast double %1658, %1578
  store double %1659, ptr %1247, align 8, !tbaa !19
  %1660 = fadd fast double %1580, 1.000000e+00
  %1661 = add nuw nsw i32 %1579, 1
  br i1 %1571, label %1662, label %1709

1662:                                             ; preds = %1651
  %1663 = load i32, ptr %4, align 4, !tbaa !6
  %1664 = load i32, ptr %12, align 4, !tbaa !6
  %1665 = add nsw i32 %1664, -1
  %1666 = icmp slt i32 %1663, %1665
  br i1 %1666, label %1686, label %1667

1667:                                             ; preds = %1662
  %1668 = icmp eq i32 %1663, %1665
  br i1 %1668, label %1669, label %1702

1669:                                             ; preds = %1667
  store i32 0, ptr %4, align 4, !tbaa !6
  %1670 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1670, ptr %6, align 4, !tbaa !6
  br i1 %1576, label %1709, label %1671

1671:                                             ; preds = %1669, %1696
  %1672 = phi i64 [ %1700, %1696 ], [ 1, %1669 ]
  %1673 = getelementptr inbounds i32, ptr %4, i64 %1672
  %1674 = load i32, ptr %1673, align 4, !tbaa !6
  %1675 = getelementptr inbounds i32, ptr %12, i64 %1672
  %1676 = load i32, ptr %1675, align 4, !tbaa !6
  %1677 = add nsw i32 %1676, -1
  %1678 = icmp slt i32 %1674, %1677
  br i1 %1678, label %1679, label %1694

1679:                                             ; preds = %1671
  br i1 %1666, label %1686, label %1680

1680:                                             ; preds = %1679
  %1681 = getelementptr inbounds i32, ptr %7, i64 %1672
  %1682 = load i32, ptr %1681, align 4, !tbaa !6
  %1683 = getelementptr inbounds i32, ptr %6, i64 %1672
  %1684 = load i32, ptr %1683, align 4, !tbaa !6
  %1685 = add nsw i32 %1684, %1682
  store i32 %1685, ptr %1683, align 4, !tbaa !6
  br label %1704

1686:                                             ; preds = %1662, %1679
  %1687 = phi i32 [ %1674, %1679 ], [ %1663, %1662 ]
  %1688 = phi ptr [ %1673, %1679 ], [ %4, %1662 ]
  %1689 = phi i64 [ %1672, %1679 ], [ 0, %1662 ]
  %1690 = add nsw i32 %1687, 1
  store i32 %1690, ptr %1688, align 4, !tbaa !6
  %1691 = getelementptr inbounds i32, ptr %7, i64 %1689
  %1692 = load i32, ptr %1691, align 4, !tbaa !6
  %1693 = getelementptr inbounds i32, ptr %6, i64 %1689
  br label %1704

1694:                                             ; preds = %1671
  %1695 = icmp eq i32 %1674, %1677
  br i1 %1695, label %1696, label %1702

1696:                                             ; preds = %1694
  store i32 0, ptr %1673, align 4, !tbaa !6
  %1697 = getelementptr inbounds i32, ptr %8, i64 %1672
  %1698 = load i32, ptr %1697, align 4, !tbaa !6
  %1699 = getelementptr inbounds i32, ptr %6, i64 %1672
  store i32 %1698, ptr %1699, align 4, !tbaa !6
  %1700 = add nuw nsw i64 %1672, 1
  %1701 = icmp eq i64 %1700, %1574
  br i1 %1701, label %1709, label %1671, !llvm.loop !438

1702:                                             ; preds = %1667, %1694
  %1703 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1704:                                             ; preds = %1680, %1686
  %1705 = phi ptr [ %1693, %1686 ], [ %1673, %1680 ]
  %1706 = phi i32 [ %1692, %1686 ], [ 1, %1680 ]
  %1707 = load i32, ptr %1705, align 4, !tbaa !6
  %1708 = add nsw i32 %1707, %1706
  store i32 %1708, ptr %1705, align 4, !tbaa !6
  br label %1709

1709:                                             ; preds = %1696, %1704, %1669, %1651
  %1710 = icmp eq i32 %1661, %5
  br i1 %1710, label %3074, label %1577, !llvm.loop !439

1711:                                             ; preds = %1560, %1848
  %1712 = phi double [ 0.000000e+00, %1560 ], [ %1796, %1848 ]
  %1713 = phi i32 [ 0, %1560 ], [ %1797, %1848 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1561, label %1715, label %1784

1715:                                             ; preds = %1711, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1711 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1565, %1711 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1564, %1711 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1711 ]
  %1720 = sub i32 %1563, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !440

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !6
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !441

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !442

1784:                                             ; preds = %1774, %1711
  %1785 = phi i32 [ %1714, %1711 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds i8, ptr %1245, i64 %1790
  %1792 = load i8, ptr %1791, align 1, !tbaa !12
  %1793 = sitofp i8 %1792 to double
  %1794 = fmul fast double %1793, %1793
  %1795 = fmul fast double %1794, %1794
  %1796 = fadd fast double %1795, %1712
  store double %1796, ptr %1247, align 8, !tbaa !19
  %1797 = add nuw nsw i32 %1713, 1
  br i1 %1562, label %1798, label %1848

1798:                                             ; preds = %1789
  %1799 = load i32, ptr %4, align 4, !tbaa !6
  %1800 = load i32, ptr %12, align 4, !tbaa !6
  %1801 = add nsw i32 %1800, -1
  %1802 = icmp slt i32 %1799, %1801
  br i1 %1802, label %1825, label %1803

1803:                                             ; preds = %1798
  %1804 = icmp eq i32 %1799, %1801
  br i1 %1804, label %1805, label %1841

1805:                                             ; preds = %1803
  store i32 0, ptr %4, align 4, !tbaa !6
  %1806 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1806, ptr %6, align 4, !tbaa !6
  br i1 %1567, label %1848, label %1807

1807:                                             ; preds = %1805, %1835
  %1808 = phi i64 [ %1839, %1835 ], [ 1, %1805 ]
  %1809 = getelementptr inbounds i32, ptr %4, i64 %1808
  %1810 = load i32, ptr %1809, align 4, !tbaa !6
  %1811 = getelementptr inbounds i32, ptr %12, i64 %1808
  %1812 = load i32, ptr %1811, align 4, !tbaa !6
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1810, %1813
  br i1 %1814, label %1815, label %1833

1815:                                             ; preds = %1807
  br i1 %1802, label %1825, label %1816

1816:                                             ; preds = %1815
  %1817 = shl i64 %1808, 32
  %1818 = add i64 %1817, -4294967296
  %1819 = ashr exact i64 %1818, 32
  %1820 = getelementptr inbounds i32, ptr %7, i64 %1819
  %1821 = load i32, ptr %1820, align 4, !tbaa !6
  %1822 = getelementptr inbounds i32, ptr %6, i64 %1808
  %1823 = load i32, ptr %1822, align 4, !tbaa !6
  %1824 = add nsw i32 %1823, %1821
  store i32 %1824, ptr %1822, align 4, !tbaa !6
  br label %1843

1825:                                             ; preds = %1798, %1815
  %1826 = phi i32 [ %1810, %1815 ], [ %1799, %1798 ]
  %1827 = phi ptr [ %1809, %1815 ], [ %4, %1798 ]
  %1828 = phi i64 [ %1808, %1815 ], [ 0, %1798 ]
  %1829 = add nsw i32 %1826, 1
  store i32 %1829, ptr %1827, align 4, !tbaa !6
  %1830 = getelementptr inbounds i32, ptr %7, i64 %1828
  %1831 = load i32, ptr %1830, align 4, !tbaa !6
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1828
  br label %1843

1833:                                             ; preds = %1807
  %1834 = icmp eq i32 %1810, %1813
  br i1 %1834, label %1835, label %1841

1835:                                             ; preds = %1833
  store i32 0, ptr %1809, align 4, !tbaa !6
  %1836 = getelementptr inbounds i32, ptr %8, i64 %1808
  %1837 = load i32, ptr %1836, align 4, !tbaa !6
  %1838 = getelementptr inbounds i32, ptr %6, i64 %1808
  store i32 %1837, ptr %1838, align 4, !tbaa !6
  %1839 = add nuw nsw i64 %1808, 1
  %1840 = icmp eq i64 %1839, %1565
  br i1 %1840, label %1848, label %1807, !llvm.loop !443

1841:                                             ; preds = %1803, %1833
  %1842 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

1843:                                             ; preds = %1816, %1825
  %1844 = phi ptr [ %1832, %1825 ], [ %1809, %1816 ]
  %1845 = phi i32 [ %1831, %1825 ], [ 1, %1816 ]
  %1846 = load i32, ptr %1844, align 4, !tbaa !6
  %1847 = add nsw i32 %1846, %1845
  store i32 %1847, ptr %1844, align 4, !tbaa !6
  br label %1848

1848:                                             ; preds = %1835, %1843, %1805, %1789
  %1849 = icmp eq i32 %1797, %5
  br i1 %1849, label %3074, label %1711, !llvm.loop !444

1850:                                             ; preds = %1254
  %1851 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 633, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3074

1852:                                             ; preds = %18
  %1853 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1854 = load ptr, ptr %1853, align 8, !tbaa !10
  %1855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1856 = load ptr, ptr %1855, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1856, align 4, !tbaa !163
  %1857 = icmp eq i32 %13, 0
  br i1 %1857, label %1858, label %1863

1858:                                             ; preds = %1852
  %1859 = load i8, ptr %1854, align 1, !tbaa !12
  %1860 = sitofp i8 %1859 to float
  %1861 = fmul fast float %1860, %1860
  %1862 = fmul fast float %1861, %1861
  store float %1862, ptr %1856, align 4, !tbaa !163
  br label %3074

1863:                                             ; preds = %1852
  switch i32 %1, label %2463 [
    i32 1, label %1864
    i32 0, label %2167
  ]

1864:                                             ; preds = %1863
  %1865 = getelementptr inbounds i32, ptr %3, i64 %19
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = icmp eq i32 %1866, 0
  %1868 = icmp sgt i32 %5, 0
  br i1 %1867, label %1878, label %1869

1869:                                             ; preds = %1864
  br i1 %1868, label %1870, label %3074

1870:                                             ; preds = %1869
  %1871 = icmp sgt i32 %13, 1
  %1872 = icmp sgt i32 %13, 0
  %1873 = add i32 %13, -2
  %1874 = zext i32 %1873 to i64
  %1875 = zext i32 %13 to i64
  %1876 = add nuw i32 %5, 1
  %1877 = icmp eq i32 %13, 1
  br label %2026

1878:                                             ; preds = %1864
  br i1 %1868, label %1879, label %3074

1879:                                             ; preds = %1878
  %1880 = icmp sgt i32 %13, 1
  %1881 = icmp sgt i32 %13, 0
  %1882 = add i32 %13, -2
  %1883 = zext i32 %1882 to i64
  %1884 = zext i32 %13 to i64
  %1885 = add nuw i32 %5, 1
  %1886 = icmp eq i32 %13, 1
  br label %1887

1887:                                             ; preds = %1879, %2024
  %1888 = phi float [ 0.000000e+00, %1879 ], [ %1974, %2024 ]
  %1889 = phi i32 [ 0, %1879 ], [ %1976, %2024 ]
  %1890 = phi double [ 0.000000e+00, %1879 ], [ %1975, %2024 ]
  %1891 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1880, label %1892, label %1961

1892:                                             ; preds = %1887, %1951
  %1893 = phi i32 [ %1960, %1951 ], [ 0, %1887 ]
  %1894 = phi i64 [ %1902, %1951 ], [ %1884, %1887 ]
  %1895 = phi i64 [ %1959, %1951 ], [ %1883, %1887 ]
  %1896 = phi i32 [ %1957, %1951 ], [ %1891, %1887 ]
  %1897 = sub i32 %1882, %1893
  %1898 = tail call i32 @llvm.smin.i32(i32 %1897, i32 0)
  %1899 = sub i32 %1897, %1898
  %1900 = zext i32 %1899 to i64
  %1901 = add nuw nsw i64 %1900, 1
  %1902 = add nsw i64 %1894, -1
  %1903 = icmp ult i32 %1899, 31
  br i1 %1903, label %1939, label %1904

1904:                                             ; preds = %1892
  %1905 = and i64 %1901, 8589934560
  %1906 = sub i64 %1895, %1905
  br label %1907

1907:                                             ; preds = %1907, %1904
  %1908 = phi i64 [ 0, %1904 ], [ %1931, %1907 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1927, %1907 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1928, %1907 ]
  %1911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1929, %1907 ]
  %1912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1904 ], [ %1930, %1907 ]
  %1913 = sub i64 %1895, %1908
  %1914 = getelementptr inbounds i32, ptr %9, i64 %1913
  %1915 = getelementptr inbounds i32, ptr %1914, i64 -7
  %1916 = load <8 x i32>, ptr %1915, align 4, !tbaa !6
  %1917 = shufflevector <8 x i32> %1916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1918 = getelementptr inbounds i32, ptr %1914, i64 -15
  %1919 = load <8 x i32>, ptr %1918, align 4, !tbaa !6
  %1920 = shufflevector <8 x i32> %1919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1921 = getelementptr inbounds i32, ptr %1914, i64 -23
  %1922 = load <8 x i32>, ptr %1921, align 4, !tbaa !6
  %1923 = shufflevector <8 x i32> %1922, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1924 = getelementptr inbounds i32, ptr %1914, i64 -31
  %1925 = load <8 x i32>, ptr %1924, align 4, !tbaa !6
  %1926 = shufflevector <8 x i32> %1925, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1927 = mul <8 x i32> %1917, %1909
  %1928 = mul <8 x i32> %1920, %1910
  %1929 = mul <8 x i32> %1923, %1911
  %1930 = mul <8 x i32> %1926, %1912
  %1931 = add nuw i64 %1908, 32
  %1932 = icmp eq i64 %1931, %1905
  br i1 %1932, label %1933, label %1907, !llvm.loop !445

1933:                                             ; preds = %1907
  %1934 = mul <8 x i32> %1928, %1927
  %1935 = mul <8 x i32> %1929, %1934
  %1936 = mul <8 x i32> %1930, %1935
  %1937 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1936)
  %1938 = icmp eq i64 %1901, %1905
  br i1 %1938, label %1951, label %1939

1939:                                             ; preds = %1892, %1933
  %1940 = phi i64 [ %1895, %1892 ], [ %1906, %1933 ]
  %1941 = phi i32 [ 1, %1892 ], [ %1937, %1933 ]
  br label %1942

1942:                                             ; preds = %1939, %1942
  %1943 = phi i64 [ %1948, %1942 ], [ %1940, %1939 ]
  %1944 = phi i32 [ %1947, %1942 ], [ %1941, %1939 ]
  %1945 = getelementptr inbounds i32, ptr %9, i64 %1943
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = mul nsw i32 %1946, %1944
  %1948 = add nsw i64 %1943, -1
  %1949 = trunc i64 %1943 to i32
  %1950 = icmp sgt i32 %1949, 0
  br i1 %1950, label %1942, label %1951, !llvm.loop !446

1951:                                             ; preds = %1942, %1933
  %1952 = phi i32 [ %1937, %1933 ], [ %1947, %1942 ]
  %1953 = and i64 %1902, 4294967295
  %1954 = getelementptr inbounds i32, ptr %6, i64 %1953
  %1955 = load i32, ptr %1954, align 4, !tbaa !6
  %1956 = mul nsw i32 %1955, %1952
  %1957 = add nsw i32 %1956, %1896
  %1958 = icmp sgt i64 %1894, 2
  %1959 = add nsw i64 %1895, -1
  %1960 = add i32 %1893, 1
  br i1 %1958, label %1892, label %1961, !llvm.loop !447

1961:                                             ; preds = %1951, %1887
  %1962 = phi i32 [ %1891, %1887 ], [ %1957, %1951 ]
  %1963 = sext i32 %1962 to i64
  %1964 = getelementptr inbounds double, ptr %2, i64 %1963
  %1965 = load double, ptr %1964, align 8, !tbaa !19
  %1966 = getelementptr inbounds i8, ptr %1854, i64 %1963
  %1967 = load i8, ptr %1966, align 1, !tbaa !12
  %1968 = fpext float %1888 to double
  %1969 = sitofp i8 %1967 to double
  %1970 = fmul fast double %1965, %1969
  %1971 = fmul fast double %1970, %1970
  %1972 = fmul fast double %1971, %1971
  %1973 = fadd fast double %1972, %1968
  %1974 = fptrunc double %1973 to float
  store float %1974, ptr %1856, align 4, !tbaa !163
  %1975 = fadd fast double %1965, %1890
  %1976 = add nuw nsw i32 %1889, 1
  br i1 %1881, label %1977, label %2024

1977:                                             ; preds = %1961
  %1978 = load i32, ptr %4, align 4, !tbaa !6
  %1979 = load i32, ptr %12, align 4, !tbaa !6
  %1980 = add nsw i32 %1979, -1
  %1981 = icmp slt i32 %1978, %1980
  br i1 %1981, label %2001, label %1982

1982:                                             ; preds = %1977
  %1983 = icmp eq i32 %1978, %1980
  br i1 %1983, label %1984, label %2017

1984:                                             ; preds = %1982
  store i32 0, ptr %4, align 4, !tbaa !6
  %1985 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1985, ptr %6, align 4, !tbaa !6
  br i1 %1886, label %2024, label %1986

1986:                                             ; preds = %1984, %2011
  %1987 = phi i64 [ %2015, %2011 ], [ 1, %1984 ]
  %1988 = getelementptr inbounds i32, ptr %4, i64 %1987
  %1989 = load i32, ptr %1988, align 4, !tbaa !6
  %1990 = getelementptr inbounds i32, ptr %12, i64 %1987
  %1991 = load i32, ptr %1990, align 4, !tbaa !6
  %1992 = add nsw i32 %1991, -1
  %1993 = icmp slt i32 %1989, %1992
  br i1 %1993, label %1994, label %2009

1994:                                             ; preds = %1986
  br i1 %1981, label %2001, label %1995

1995:                                             ; preds = %1994
  %1996 = getelementptr inbounds i32, ptr %7, i64 %1987
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1987
  %1999 = load i32, ptr %1998, align 4, !tbaa !6
  %2000 = add nsw i32 %1999, %1997
  store i32 %2000, ptr %1998, align 4, !tbaa !6
  br label %2019

2001:                                             ; preds = %1977, %1994
  %2002 = phi i32 [ %1989, %1994 ], [ %1978, %1977 ]
  %2003 = phi ptr [ %1988, %1994 ], [ %4, %1977 ]
  %2004 = phi i64 [ %1987, %1994 ], [ 0, %1977 ]
  %2005 = add nsw i32 %2002, 1
  store i32 %2005, ptr %2003, align 4, !tbaa !6
  %2006 = getelementptr inbounds i32, ptr %7, i64 %2004
  %2007 = load i32, ptr %2006, align 4, !tbaa !6
  %2008 = getelementptr inbounds i32, ptr %6, i64 %2004
  br label %2019

2009:                                             ; preds = %1986
  %2010 = icmp eq i32 %1989, %1992
  br i1 %2010, label %2011, label %2017

2011:                                             ; preds = %2009
  store i32 0, ptr %1988, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %8, i64 %1987
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %6, i64 %1987
  store i32 %2013, ptr %2014, align 4, !tbaa !6
  %2015 = add nuw nsw i64 %1987, 1
  %2016 = icmp eq i64 %2015, %1884
  br i1 %2016, label %2024, label %1986, !llvm.loop !448

2017:                                             ; preds = %1982, %2009
  %2018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2019:                                             ; preds = %1995, %2001
  %2020 = phi ptr [ %2008, %2001 ], [ %1988, %1995 ]
  %2021 = phi i32 [ %2007, %2001 ], [ 1, %1995 ]
  %2022 = load i32, ptr %2020, align 4, !tbaa !6
  %2023 = add nsw i32 %2022, %2021
  store i32 %2023, ptr %2020, align 4, !tbaa !6
  br label %2024

2024:                                             ; preds = %2011, %2019, %1984, %1961
  %2025 = icmp eq i32 %1976, %5
  br i1 %2025, label %3074, label %1887, !llvm.loop !449

2026:                                             ; preds = %1870, %2165
  %2027 = phi float [ 0.000000e+00, %1870 ], [ %2113, %2165 ]
  %2028 = phi i32 [ 0, %1870 ], [ %2114, %2165 ]
  %2029 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1871, label %2030, label %2099

2030:                                             ; preds = %2026, %2089
  %2031 = phi i32 [ %2098, %2089 ], [ 0, %2026 ]
  %2032 = phi i64 [ %2040, %2089 ], [ %1875, %2026 ]
  %2033 = phi i64 [ %2097, %2089 ], [ %1874, %2026 ]
  %2034 = phi i32 [ %2095, %2089 ], [ %2029, %2026 ]
  %2035 = sub i32 %1873, %2031
  %2036 = tail call i32 @llvm.smin.i32(i32 %2035, i32 0)
  %2037 = sub i32 %2035, %2036
  %2038 = zext i32 %2037 to i64
  %2039 = add nuw nsw i64 %2038, 1
  %2040 = add nsw i64 %2032, -1
  %2041 = icmp ult i32 %2037, 31
  br i1 %2041, label %2077, label %2042

2042:                                             ; preds = %2030
  %2043 = and i64 %2039, 8589934560
  %2044 = sub i64 %2033, %2043
  br label %2045

2045:                                             ; preds = %2045, %2042
  %2046 = phi i64 [ 0, %2042 ], [ %2069, %2045 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2065, %2045 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2066, %2045 ]
  %2049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2067, %2045 ]
  %2050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2068, %2045 ]
  %2051 = sub i64 %2033, %2046
  %2052 = getelementptr inbounds i32, ptr %11, i64 %2051
  %2053 = getelementptr inbounds i32, ptr %2052, i64 -7
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !6
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2052, i64 -15
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !6
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2052, i64 -23
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !6
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2052, i64 -31
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !6
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = mul <8 x i32> %2055, %2047
  %2066 = mul <8 x i32> %2058, %2048
  %2067 = mul <8 x i32> %2061, %2049
  %2068 = mul <8 x i32> %2064, %2050
  %2069 = add nuw i64 %2046, 32
  %2070 = icmp eq i64 %2069, %2043
  br i1 %2070, label %2071, label %2045, !llvm.loop !450

2071:                                             ; preds = %2045
  %2072 = mul <8 x i32> %2066, %2065
  %2073 = mul <8 x i32> %2067, %2072
  %2074 = mul <8 x i32> %2068, %2073
  %2075 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2074)
  %2076 = icmp eq i64 %2039, %2043
  br i1 %2076, label %2089, label %2077

2077:                                             ; preds = %2030, %2071
  %2078 = phi i64 [ %2033, %2030 ], [ %2044, %2071 ]
  %2079 = phi i32 [ 1, %2030 ], [ %2075, %2071 ]
  br label %2080

2080:                                             ; preds = %2077, %2080
  %2081 = phi i64 [ %2086, %2080 ], [ %2078, %2077 ]
  %2082 = phi i32 [ %2085, %2080 ], [ %2079, %2077 ]
  %2083 = getelementptr inbounds i32, ptr %11, i64 %2081
  %2084 = load i32, ptr %2083, align 4, !tbaa !6
  %2085 = mul nsw i32 %2084, %2082
  %2086 = add nsw i64 %2081, -1
  %2087 = trunc i64 %2081 to i32
  %2088 = icmp sgt i32 %2087, 0
  br i1 %2088, label %2080, label %2089, !llvm.loop !451

2089:                                             ; preds = %2080, %2071
  %2090 = phi i32 [ %2075, %2071 ], [ %2085, %2080 ]
  %2091 = and i64 %2040, 4294967295
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2091
  %2093 = load i32, ptr %2092, align 4, !tbaa !6
  %2094 = mul nsw i32 %2093, %2090
  %2095 = add nsw i32 %2094, %2034
  %2096 = icmp sgt i64 %2032, 2
  %2097 = add nsw i64 %2033, -1
  %2098 = add i32 %2031, 1
  br i1 %2096, label %2030, label %2099, !llvm.loop !452

2099:                                             ; preds = %2089, %2026
  %2100 = phi i32 [ %2029, %2026 ], [ %2095, %2089 ]
  %2101 = icmp slt i32 %2100, %5
  br i1 %2101, label %2104, label %2102

2102:                                             ; preds = %2099
  %2103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

2104:                                             ; preds = %2099
  %2105 = sext i32 %2100 to i64
  %2106 = getelementptr inbounds i8, ptr %1854, i64 %2105
  %2107 = load i8, ptr %2106, align 1, !tbaa !12
  %2108 = fpext float %2027 to double
  %2109 = sitofp i8 %2107 to double
  %2110 = fmul fast double %2109, %2109
  %2111 = fmul fast double %2110, %2110
  %2112 = fadd fast double %2111, %2108
  %2113 = fptrunc double %2112 to float
  store float %2113, ptr %1856, align 4, !tbaa !163
  %2114 = add nuw nsw i32 %2028, 1
  br i1 %1872, label %2115, label %2165

2115:                                             ; preds = %2104
  %2116 = load i32, ptr %4, align 4, !tbaa !6
  %2117 = load i32, ptr %12, align 4, !tbaa !6
  %2118 = add nsw i32 %2117, -1
  %2119 = icmp slt i32 %2116, %2118
  br i1 %2119, label %2142, label %2120

2120:                                             ; preds = %2115
  %2121 = icmp eq i32 %2116, %2118
  br i1 %2121, label %2122, label %2158

2122:                                             ; preds = %2120
  store i32 0, ptr %4, align 4, !tbaa !6
  %2123 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2123, ptr %6, align 4, !tbaa !6
  br i1 %1877, label %2165, label %2124

2124:                                             ; preds = %2122, %2152
  %2125 = phi i64 [ %2156, %2152 ], [ 1, %2122 ]
  %2126 = getelementptr inbounds i32, ptr %4, i64 %2125
  %2127 = load i32, ptr %2126, align 4, !tbaa !6
  %2128 = getelementptr inbounds i32, ptr %12, i64 %2125
  %2129 = load i32, ptr %2128, align 4, !tbaa !6
  %2130 = add nsw i32 %2129, -1
  %2131 = icmp slt i32 %2127, %2130
  br i1 %2131, label %2132, label %2150

2132:                                             ; preds = %2124
  br i1 %2119, label %2142, label %2133

2133:                                             ; preds = %2132
  %2134 = shl i64 %2125, 32
  %2135 = add i64 %2134, -4294967296
  %2136 = ashr exact i64 %2135, 32
  %2137 = getelementptr inbounds i32, ptr %7, i64 %2136
  %2138 = load i32, ptr %2137, align 4, !tbaa !6
  %2139 = getelementptr inbounds i32, ptr %6, i64 %2125
  %2140 = load i32, ptr %2139, align 4, !tbaa !6
  %2141 = add nsw i32 %2140, %2138
  store i32 %2141, ptr %2139, align 4, !tbaa !6
  br label %2160

2142:                                             ; preds = %2115, %2132
  %2143 = phi i32 [ %2127, %2132 ], [ %2116, %2115 ]
  %2144 = phi ptr [ %2126, %2132 ], [ %4, %2115 ]
  %2145 = phi i64 [ %2125, %2132 ], [ 0, %2115 ]
  %2146 = add nsw i32 %2143, 1
  store i32 %2146, ptr %2144, align 4, !tbaa !6
  %2147 = getelementptr inbounds i32, ptr %7, i64 %2145
  %2148 = load i32, ptr %2147, align 4, !tbaa !6
  %2149 = getelementptr inbounds i32, ptr %6, i64 %2145
  br label %2160

2150:                                             ; preds = %2124
  %2151 = icmp eq i32 %2127, %2130
  br i1 %2151, label %2152, label %2158

2152:                                             ; preds = %2150
  store i32 0, ptr %2126, align 4, !tbaa !6
  %2153 = getelementptr inbounds i32, ptr %8, i64 %2125
  %2154 = load i32, ptr %2153, align 4, !tbaa !6
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2125
  store i32 %2154, ptr %2155, align 4, !tbaa !6
  %2156 = add nuw nsw i64 %2125, 1
  %2157 = icmp eq i64 %2156, %1875
  br i1 %2157, label %2165, label %2124, !llvm.loop !453

2158:                                             ; preds = %2120, %2150
  %2159 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2160:                                             ; preds = %2133, %2142
  %2161 = phi ptr [ %2149, %2142 ], [ %2126, %2133 ]
  %2162 = phi i32 [ %2148, %2142 ], [ 1, %2133 ]
  %2163 = load i32, ptr %2161, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2162
  store i32 %2164, ptr %2161, align 4, !tbaa !6
  br label %2165

2165:                                             ; preds = %2152, %2160, %2122, %2104
  %2166 = icmp eq i32 %2114, %5
  br i1 %2166, label %3074, label %2026, !llvm.loop !454

2167:                                             ; preds = %1863
  %2168 = getelementptr inbounds i32, ptr %3, i64 %19
  %2169 = load i32, ptr %2168, align 4, !tbaa !6
  %2170 = icmp eq i32 %2169, 0
  %2171 = icmp sgt i32 %5, 0
  br i1 %2170, label %2181, label %2172

2172:                                             ; preds = %2167
  br i1 %2171, label %2173, label %3074

2173:                                             ; preds = %2172
  %2174 = icmp sgt i32 %13, 1
  %2175 = icmp sgt i32 %13, 0
  %2176 = add i32 %13, -2
  %2177 = zext i32 %2176 to i64
  %2178 = zext i32 %13 to i64
  %2179 = add nuw i32 %5, 1
  %2180 = icmp eq i32 %13, 1
  br label %2324

2181:                                             ; preds = %2167
  br i1 %2171, label %2182, label %3074

2182:                                             ; preds = %2181
  %2183 = icmp sgt i32 %13, 1
  %2184 = icmp sgt i32 %13, 0
  %2185 = add i32 %13, -2
  %2186 = zext i32 %2185 to i64
  %2187 = zext i32 %13 to i64
  %2188 = add nuw i32 %5, 1
  %2189 = icmp eq i32 %13, 1
  br label %2190

2190:                                             ; preds = %2182, %2322
  %2191 = phi float [ 0.000000e+00, %2182 ], [ %2272, %2322 ]
  %2192 = phi i32 [ 0, %2182 ], [ %2274, %2322 ]
  %2193 = phi double [ 0.000000e+00, %2182 ], [ %2273, %2322 ]
  %2194 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2183, label %2195, label %2264

2195:                                             ; preds = %2190, %2254
  %2196 = phi i32 [ %2263, %2254 ], [ 0, %2190 ]
  %2197 = phi i64 [ %2205, %2254 ], [ %2187, %2190 ]
  %2198 = phi i64 [ %2262, %2254 ], [ %2186, %2190 ]
  %2199 = phi i32 [ %2260, %2254 ], [ %2194, %2190 ]
  %2200 = sub i32 %2185, %2196
  %2201 = tail call i32 @llvm.smin.i32(i32 %2200, i32 0)
  %2202 = sub i32 %2200, %2201
  %2203 = zext i32 %2202 to i64
  %2204 = add nuw nsw i64 %2203, 1
  %2205 = add nsw i64 %2197, -1
  %2206 = icmp ult i32 %2202, 31
  br i1 %2206, label %2242, label %2207

2207:                                             ; preds = %2195
  %2208 = and i64 %2204, 8589934560
  %2209 = sub i64 %2198, %2208
  br label %2210

2210:                                             ; preds = %2210, %2207
  %2211 = phi i64 [ 0, %2207 ], [ %2234, %2210 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2230, %2210 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2231, %2210 ]
  %2214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2232, %2210 ]
  %2215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2233, %2210 ]
  %2216 = sub i64 %2198, %2211
  %2217 = getelementptr inbounds i32, ptr %9, i64 %2216
  %2218 = getelementptr inbounds i32, ptr %2217, i64 -7
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !6
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2217, i64 -15
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !6
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2217, i64 -23
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = getelementptr inbounds i32, ptr %2217, i64 -31
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !6
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = mul <8 x i32> %2220, %2212
  %2231 = mul <8 x i32> %2223, %2213
  %2232 = mul <8 x i32> %2226, %2214
  %2233 = mul <8 x i32> %2229, %2215
  %2234 = add nuw i64 %2211, 32
  %2235 = icmp eq i64 %2234, %2208
  br i1 %2235, label %2236, label %2210, !llvm.loop !455

2236:                                             ; preds = %2210
  %2237 = mul <8 x i32> %2231, %2230
  %2238 = mul <8 x i32> %2232, %2237
  %2239 = mul <8 x i32> %2233, %2238
  %2240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2239)
  %2241 = icmp eq i64 %2204, %2208
  br i1 %2241, label %2254, label %2242

2242:                                             ; preds = %2195, %2236
  %2243 = phi i64 [ %2198, %2195 ], [ %2209, %2236 ]
  %2244 = phi i32 [ 1, %2195 ], [ %2240, %2236 ]
  br label %2245

2245:                                             ; preds = %2242, %2245
  %2246 = phi i64 [ %2251, %2245 ], [ %2243, %2242 ]
  %2247 = phi i32 [ %2250, %2245 ], [ %2244, %2242 ]
  %2248 = getelementptr inbounds i32, ptr %9, i64 %2246
  %2249 = load i32, ptr %2248, align 4, !tbaa !6
  %2250 = mul nsw i32 %2249, %2247
  %2251 = add nsw i64 %2246, -1
  %2252 = trunc i64 %2246 to i32
  %2253 = icmp sgt i32 %2252, 0
  br i1 %2253, label %2245, label %2254, !llvm.loop !456

2254:                                             ; preds = %2245, %2236
  %2255 = phi i32 [ %2240, %2236 ], [ %2250, %2245 ]
  %2256 = and i64 %2205, 4294967295
  %2257 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !6
  %2259 = mul nsw i32 %2258, %2255
  %2260 = add nsw i32 %2259, %2199
  %2261 = icmp sgt i64 %2197, 2
  %2262 = add nsw i64 %2198, -1
  %2263 = add i32 %2196, 1
  br i1 %2261, label %2195, label %2264, !llvm.loop !457

2264:                                             ; preds = %2254, %2190
  %2265 = phi i32 [ %2194, %2190 ], [ %2260, %2254 ]
  %2266 = sext i32 %2265 to i64
  %2267 = getelementptr inbounds i8, ptr %1854, i64 %2266
  %2268 = load i8, ptr %2267, align 1, !tbaa !12
  %2269 = sitofp i8 %2268 to float
  %2270 = fmul fast float %2269, %2269
  %2271 = fmul fast float %2270, %2270
  %2272 = fadd fast float %2271, %2191
  store float %2272, ptr %1856, align 4, !tbaa !163
  %2273 = fadd fast double %2193, 1.000000e+00
  %2274 = add nuw nsw i32 %2192, 1
  br i1 %2184, label %2275, label %2322

2275:                                             ; preds = %2264
  %2276 = load i32, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %12, align 4, !tbaa !6
  %2278 = add nsw i32 %2277, -1
  %2279 = icmp slt i32 %2276, %2278
  br i1 %2279, label %2299, label %2280

2280:                                             ; preds = %2275
  %2281 = icmp eq i32 %2276, %2278
  br i1 %2281, label %2282, label %2315

2282:                                             ; preds = %2280
  store i32 0, ptr %4, align 4, !tbaa !6
  %2283 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2283, ptr %6, align 4, !tbaa !6
  br i1 %2189, label %2322, label %2284

2284:                                             ; preds = %2282, %2309
  %2285 = phi i64 [ %2313, %2309 ], [ 1, %2282 ]
  %2286 = getelementptr inbounds i32, ptr %4, i64 %2285
  %2287 = load i32, ptr %2286, align 4, !tbaa !6
  %2288 = getelementptr inbounds i32, ptr %12, i64 %2285
  %2289 = load i32, ptr %2288, align 4, !tbaa !6
  %2290 = add nsw i32 %2289, -1
  %2291 = icmp slt i32 %2287, %2290
  br i1 %2291, label %2292, label %2307

2292:                                             ; preds = %2284
  br i1 %2279, label %2299, label %2293

2293:                                             ; preds = %2292
  %2294 = getelementptr inbounds i32, ptr %7, i64 %2285
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = getelementptr inbounds i32, ptr %6, i64 %2285
  %2297 = load i32, ptr %2296, align 4, !tbaa !6
  %2298 = add nsw i32 %2297, %2295
  store i32 %2298, ptr %2296, align 4, !tbaa !6
  br label %2317

2299:                                             ; preds = %2275, %2292
  %2300 = phi i32 [ %2287, %2292 ], [ %2276, %2275 ]
  %2301 = phi ptr [ %2286, %2292 ], [ %4, %2275 ]
  %2302 = phi i64 [ %2285, %2292 ], [ 0, %2275 ]
  %2303 = add nsw i32 %2300, 1
  store i32 %2303, ptr %2301, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %7, i64 %2302
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = getelementptr inbounds i32, ptr %6, i64 %2302
  br label %2317

2307:                                             ; preds = %2284
  %2308 = icmp eq i32 %2287, %2290
  br i1 %2308, label %2309, label %2315

2309:                                             ; preds = %2307
  store i32 0, ptr %2286, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %8, i64 %2285
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2285
  store i32 %2311, ptr %2312, align 4, !tbaa !6
  %2313 = add nuw nsw i64 %2285, 1
  %2314 = icmp eq i64 %2313, %2187
  br i1 %2314, label %2322, label %2284, !llvm.loop !458

2315:                                             ; preds = %2280, %2307
  %2316 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2317:                                             ; preds = %2293, %2299
  %2318 = phi ptr [ %2306, %2299 ], [ %2286, %2293 ]
  %2319 = phi i32 [ %2305, %2299 ], [ 1, %2293 ]
  %2320 = load i32, ptr %2318, align 4, !tbaa !6
  %2321 = add nsw i32 %2320, %2319
  store i32 %2321, ptr %2318, align 4, !tbaa !6
  br label %2322

2322:                                             ; preds = %2309, %2317, %2282, %2264
  %2323 = icmp eq i32 %2274, %5
  br i1 %2323, label %3074, label %2190, !llvm.loop !459

2324:                                             ; preds = %2173, %2461
  %2325 = phi float [ 0.000000e+00, %2173 ], [ %2409, %2461 ]
  %2326 = phi i32 [ 0, %2173 ], [ %2410, %2461 ]
  %2327 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2174, label %2328, label %2397

2328:                                             ; preds = %2324, %2387
  %2329 = phi i32 [ %2396, %2387 ], [ 0, %2324 ]
  %2330 = phi i64 [ %2338, %2387 ], [ %2178, %2324 ]
  %2331 = phi i64 [ %2395, %2387 ], [ %2177, %2324 ]
  %2332 = phi i32 [ %2393, %2387 ], [ %2327, %2324 ]
  %2333 = sub i32 %2176, %2329
  %2334 = tail call i32 @llvm.smin.i32(i32 %2333, i32 0)
  %2335 = sub i32 %2333, %2334
  %2336 = zext i32 %2335 to i64
  %2337 = add nuw nsw i64 %2336, 1
  %2338 = add nsw i64 %2330, -1
  %2339 = icmp ult i32 %2335, 31
  br i1 %2339, label %2375, label %2340

2340:                                             ; preds = %2328
  %2341 = and i64 %2337, 8589934560
  %2342 = sub i64 %2331, %2341
  br label %2343

2343:                                             ; preds = %2343, %2340
  %2344 = phi i64 [ 0, %2340 ], [ %2367, %2343 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2363, %2343 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2364, %2343 ]
  %2347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2365, %2343 ]
  %2348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2366, %2343 ]
  %2349 = sub i64 %2331, %2344
  %2350 = getelementptr inbounds i32, ptr %11, i64 %2349
  %2351 = getelementptr inbounds i32, ptr %2350, i64 -7
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !6
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2350, i64 -15
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !6
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2350, i64 -23
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !6
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = getelementptr inbounds i32, ptr %2350, i64 -31
  %2361 = load <8 x i32>, ptr %2360, align 4, !tbaa !6
  %2362 = shufflevector <8 x i32> %2361, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2363 = mul <8 x i32> %2353, %2345
  %2364 = mul <8 x i32> %2356, %2346
  %2365 = mul <8 x i32> %2359, %2347
  %2366 = mul <8 x i32> %2362, %2348
  %2367 = add nuw i64 %2344, 32
  %2368 = icmp eq i64 %2367, %2341
  br i1 %2368, label %2369, label %2343, !llvm.loop !460

2369:                                             ; preds = %2343
  %2370 = mul <8 x i32> %2364, %2363
  %2371 = mul <8 x i32> %2365, %2370
  %2372 = mul <8 x i32> %2366, %2371
  %2373 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2372)
  %2374 = icmp eq i64 %2337, %2341
  br i1 %2374, label %2387, label %2375

2375:                                             ; preds = %2328, %2369
  %2376 = phi i64 [ %2331, %2328 ], [ %2342, %2369 ]
  %2377 = phi i32 [ 1, %2328 ], [ %2373, %2369 ]
  br label %2378

2378:                                             ; preds = %2375, %2378
  %2379 = phi i64 [ %2384, %2378 ], [ %2376, %2375 ]
  %2380 = phi i32 [ %2383, %2378 ], [ %2377, %2375 ]
  %2381 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2382 = load i32, ptr %2381, align 4, !tbaa !6
  %2383 = mul nsw i32 %2382, %2380
  %2384 = add nsw i64 %2379, -1
  %2385 = trunc i64 %2379 to i32
  %2386 = icmp sgt i32 %2385, 0
  br i1 %2386, label %2378, label %2387, !llvm.loop !461

2387:                                             ; preds = %2378, %2369
  %2388 = phi i32 [ %2373, %2369 ], [ %2383, %2378 ]
  %2389 = and i64 %2338, 4294967295
  %2390 = getelementptr inbounds i32, ptr %6, i64 %2389
  %2391 = load i32, ptr %2390, align 4, !tbaa !6
  %2392 = mul nsw i32 %2391, %2388
  %2393 = add nsw i32 %2392, %2332
  %2394 = icmp sgt i64 %2330, 2
  %2395 = add nsw i64 %2331, -1
  %2396 = add i32 %2329, 1
  br i1 %2394, label %2328, label %2397, !llvm.loop !462

2397:                                             ; preds = %2387, %2324
  %2398 = phi i32 [ %2327, %2324 ], [ %2393, %2387 ]
  %2399 = icmp slt i32 %2398, %5
  br i1 %2399, label %2402, label %2400

2400:                                             ; preds = %2397
  %2401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

2402:                                             ; preds = %2397
  %2403 = sext i32 %2398 to i64
  %2404 = getelementptr inbounds i8, ptr %1854, i64 %2403
  %2405 = load i8, ptr %2404, align 1, !tbaa !12
  %2406 = sitofp i8 %2405 to float
  %2407 = fmul fast float %2406, %2406
  %2408 = fmul fast float %2407, %2407
  %2409 = fadd fast float %2408, %2325
  store float %2409, ptr %1856, align 4, !tbaa !163
  %2410 = add nuw nsw i32 %2326, 1
  br i1 %2175, label %2411, label %2461

2411:                                             ; preds = %2402
  %2412 = load i32, ptr %4, align 4, !tbaa !6
  %2413 = load i32, ptr %12, align 4, !tbaa !6
  %2414 = add nsw i32 %2413, -1
  %2415 = icmp slt i32 %2412, %2414
  br i1 %2415, label %2438, label %2416

2416:                                             ; preds = %2411
  %2417 = icmp eq i32 %2412, %2414
  br i1 %2417, label %2418, label %2454

2418:                                             ; preds = %2416
  store i32 0, ptr %4, align 4, !tbaa !6
  %2419 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2419, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2461, label %2420

2420:                                             ; preds = %2418, %2448
  %2421 = phi i64 [ %2452, %2448 ], [ 1, %2418 ]
  %2422 = getelementptr inbounds i32, ptr %4, i64 %2421
  %2423 = load i32, ptr %2422, align 4, !tbaa !6
  %2424 = getelementptr inbounds i32, ptr %12, i64 %2421
  %2425 = load i32, ptr %2424, align 4, !tbaa !6
  %2426 = add nsw i32 %2425, -1
  %2427 = icmp slt i32 %2423, %2426
  br i1 %2427, label %2428, label %2446

2428:                                             ; preds = %2420
  br i1 %2415, label %2438, label %2429

2429:                                             ; preds = %2428
  %2430 = shl i64 %2421, 32
  %2431 = add i64 %2430, -4294967296
  %2432 = ashr exact i64 %2431, 32
  %2433 = getelementptr inbounds i32, ptr %7, i64 %2432
  %2434 = load i32, ptr %2433, align 4, !tbaa !6
  %2435 = getelementptr inbounds i32, ptr %6, i64 %2421
  %2436 = load i32, ptr %2435, align 4, !tbaa !6
  %2437 = add nsw i32 %2436, %2434
  store i32 %2437, ptr %2435, align 4, !tbaa !6
  br label %2456

2438:                                             ; preds = %2411, %2428
  %2439 = phi i32 [ %2423, %2428 ], [ %2412, %2411 ]
  %2440 = phi ptr [ %2422, %2428 ], [ %4, %2411 ]
  %2441 = phi i64 [ %2421, %2428 ], [ 0, %2411 ]
  %2442 = add nsw i32 %2439, 1
  store i32 %2442, ptr %2440, align 4, !tbaa !6
  %2443 = getelementptr inbounds i32, ptr %7, i64 %2441
  %2444 = load i32, ptr %2443, align 4, !tbaa !6
  %2445 = getelementptr inbounds i32, ptr %6, i64 %2441
  br label %2456

2446:                                             ; preds = %2420
  %2447 = icmp eq i32 %2423, %2426
  br i1 %2447, label %2448, label %2454

2448:                                             ; preds = %2446
  store i32 0, ptr %2422, align 4, !tbaa !6
  %2449 = getelementptr inbounds i32, ptr %8, i64 %2421
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = getelementptr inbounds i32, ptr %6, i64 %2421
  store i32 %2450, ptr %2451, align 4, !tbaa !6
  %2452 = add nuw nsw i64 %2421, 1
  %2453 = icmp eq i64 %2452, %2178
  br i1 %2453, label %2461, label %2420, !llvm.loop !463

2454:                                             ; preds = %2416, %2446
  %2455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2456:                                             ; preds = %2429, %2438
  %2457 = phi ptr [ %2445, %2438 ], [ %2422, %2429 ]
  %2458 = phi i32 [ %2444, %2438 ], [ 1, %2429 ]
  %2459 = load i32, ptr %2457, align 4, !tbaa !6
  %2460 = add nsw i32 %2459, %2458
  store i32 %2460, ptr %2457, align 4, !tbaa !6
  br label %2461

2461:                                             ; preds = %2448, %2456, %2418, %2402
  %2462 = icmp eq i32 %2410, %5
  br i1 %2462, label %3074, label %2324, !llvm.loop !464

2463:                                             ; preds = %1863
  %2464 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 637, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3074

2465:                                             ; preds = %18
  %2466 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2467 = load ptr, ptr %2466, align 8, !tbaa !10
  %2468 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2469 = load ptr, ptr %2468, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2469, align 8, !tbaa !19
  %2470 = icmp eq i32 %13, 0
  br i1 %2470, label %2471, label %2476

2471:                                             ; preds = %2465
  %2472 = load i8, ptr %2467, align 1, !tbaa !12
  %2473 = sitofp i8 %2472 to double
  %2474 = fmul fast double %2473, %2473
  %2475 = fmul fast double %2474, %2474
  store double %2475, ptr %2469, align 8, !tbaa !19
  br label %3074

2476:                                             ; preds = %2465
  switch i32 %1, label %3072 [
    i32 1, label %2477
    i32 0, label %2776
  ]

2477:                                             ; preds = %2476
  %2478 = getelementptr inbounds i32, ptr %3, i64 %19
  %2479 = load i32, ptr %2478, align 4, !tbaa !6
  %2480 = icmp eq i32 %2479, 0
  %2481 = icmp sgt i32 %5, 0
  br i1 %2480, label %2491, label %2482

2482:                                             ; preds = %2477
  br i1 %2481, label %2483, label %3074

2483:                                             ; preds = %2482
  %2484 = icmp sgt i32 %13, 1
  %2485 = icmp sgt i32 %13, 0
  %2486 = add i32 %13, -2
  %2487 = zext i32 %2486 to i64
  %2488 = zext i32 %13 to i64
  %2489 = add nuw i32 %5, 1
  %2490 = icmp eq i32 %13, 1
  br label %2637

2491:                                             ; preds = %2477
  br i1 %2481, label %2492, label %3074

2492:                                             ; preds = %2491
  %2493 = icmp sgt i32 %13, 1
  %2494 = icmp sgt i32 %13, 0
  %2495 = add i32 %13, -2
  %2496 = zext i32 %2495 to i64
  %2497 = zext i32 %13 to i64
  %2498 = add nuw i32 %5, 1
  %2499 = icmp eq i32 %13, 1
  br label %2500

2500:                                             ; preds = %2492, %2635
  %2501 = phi double [ 0.000000e+00, %2492 ], [ %2585, %2635 ]
  %2502 = phi i32 [ 0, %2492 ], [ %2587, %2635 ]
  %2503 = phi double [ 0.000000e+00, %2492 ], [ %2586, %2635 ]
  %2504 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2493, label %2505, label %2574

2505:                                             ; preds = %2500, %2564
  %2506 = phi i32 [ %2573, %2564 ], [ 0, %2500 ]
  %2507 = phi i64 [ %2515, %2564 ], [ %2497, %2500 ]
  %2508 = phi i64 [ %2572, %2564 ], [ %2496, %2500 ]
  %2509 = phi i32 [ %2570, %2564 ], [ %2504, %2500 ]
  %2510 = sub i32 %2495, %2506
  %2511 = tail call i32 @llvm.smin.i32(i32 %2510, i32 0)
  %2512 = sub i32 %2510, %2511
  %2513 = zext i32 %2512 to i64
  %2514 = add nuw nsw i64 %2513, 1
  %2515 = add nsw i64 %2507, -1
  %2516 = icmp ult i32 %2512, 31
  br i1 %2516, label %2552, label %2517

2517:                                             ; preds = %2505
  %2518 = and i64 %2514, 8589934560
  %2519 = sub i64 %2508, %2518
  br label %2520

2520:                                             ; preds = %2520, %2517
  %2521 = phi i64 [ 0, %2517 ], [ %2544, %2520 ]
  %2522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2540, %2520 ]
  %2523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2541, %2520 ]
  %2524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2542, %2520 ]
  %2525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2517 ], [ %2543, %2520 ]
  %2526 = sub i64 %2508, %2521
  %2527 = getelementptr inbounds i32, ptr %9, i64 %2526
  %2528 = getelementptr inbounds i32, ptr %2527, i64 -7
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !6
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2527, i64 -15
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !6
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = getelementptr inbounds i32, ptr %2527, i64 -23
  %2535 = load <8 x i32>, ptr %2534, align 4, !tbaa !6
  %2536 = shufflevector <8 x i32> %2535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2537 = getelementptr inbounds i32, ptr %2527, i64 -31
  %2538 = load <8 x i32>, ptr %2537, align 4, !tbaa !6
  %2539 = shufflevector <8 x i32> %2538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2540 = mul <8 x i32> %2530, %2522
  %2541 = mul <8 x i32> %2533, %2523
  %2542 = mul <8 x i32> %2536, %2524
  %2543 = mul <8 x i32> %2539, %2525
  %2544 = add nuw i64 %2521, 32
  %2545 = icmp eq i64 %2544, %2518
  br i1 %2545, label %2546, label %2520, !llvm.loop !465

2546:                                             ; preds = %2520
  %2547 = mul <8 x i32> %2541, %2540
  %2548 = mul <8 x i32> %2542, %2547
  %2549 = mul <8 x i32> %2543, %2548
  %2550 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2549)
  %2551 = icmp eq i64 %2514, %2518
  br i1 %2551, label %2564, label %2552

2552:                                             ; preds = %2505, %2546
  %2553 = phi i64 [ %2508, %2505 ], [ %2519, %2546 ]
  %2554 = phi i32 [ 1, %2505 ], [ %2550, %2546 ]
  br label %2555

2555:                                             ; preds = %2552, %2555
  %2556 = phi i64 [ %2561, %2555 ], [ %2553, %2552 ]
  %2557 = phi i32 [ %2560, %2555 ], [ %2554, %2552 ]
  %2558 = getelementptr inbounds i32, ptr %9, i64 %2556
  %2559 = load i32, ptr %2558, align 4, !tbaa !6
  %2560 = mul nsw i32 %2559, %2557
  %2561 = add nsw i64 %2556, -1
  %2562 = trunc i64 %2556 to i32
  %2563 = icmp sgt i32 %2562, 0
  br i1 %2563, label %2555, label %2564, !llvm.loop !466

2564:                                             ; preds = %2555, %2546
  %2565 = phi i32 [ %2550, %2546 ], [ %2560, %2555 ]
  %2566 = and i64 %2515, 4294967295
  %2567 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !6
  %2569 = mul nsw i32 %2568, %2565
  %2570 = add nsw i32 %2569, %2509
  %2571 = icmp sgt i64 %2507, 2
  %2572 = add nsw i64 %2508, -1
  %2573 = add i32 %2506, 1
  br i1 %2571, label %2505, label %2574, !llvm.loop !467

2574:                                             ; preds = %2564, %2500
  %2575 = phi i32 [ %2504, %2500 ], [ %2570, %2564 ]
  %2576 = sext i32 %2575 to i64
  %2577 = getelementptr inbounds double, ptr %2, i64 %2576
  %2578 = load double, ptr %2577, align 8, !tbaa !19
  %2579 = getelementptr inbounds i8, ptr %2467, i64 %2576
  %2580 = load i8, ptr %2579, align 1, !tbaa !12
  %2581 = sitofp i8 %2580 to double
  %2582 = fmul fast double %2578, %2581
  %2583 = fmul fast double %2582, %2582
  %2584 = fmul fast double %2583, %2583
  %2585 = fadd fast double %2584, %2501
  store double %2585, ptr %2469, align 8, !tbaa !19
  %2586 = fadd fast double %2578, %2503
  %2587 = add nuw nsw i32 %2502, 1
  br i1 %2494, label %2588, label %2635

2588:                                             ; preds = %2574
  %2589 = load i32, ptr %4, align 4, !tbaa !6
  %2590 = load i32, ptr %12, align 4, !tbaa !6
  %2591 = add nsw i32 %2590, -1
  %2592 = icmp slt i32 %2589, %2591
  br i1 %2592, label %2612, label %2593

2593:                                             ; preds = %2588
  %2594 = icmp eq i32 %2589, %2591
  br i1 %2594, label %2595, label %2628

2595:                                             ; preds = %2593
  store i32 0, ptr %4, align 4, !tbaa !6
  %2596 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2596, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2635, label %2597

2597:                                             ; preds = %2595, %2622
  %2598 = phi i64 [ %2626, %2622 ], [ 1, %2595 ]
  %2599 = getelementptr inbounds i32, ptr %4, i64 %2598
  %2600 = load i32, ptr %2599, align 4, !tbaa !6
  %2601 = getelementptr inbounds i32, ptr %12, i64 %2598
  %2602 = load i32, ptr %2601, align 4, !tbaa !6
  %2603 = add nsw i32 %2602, -1
  %2604 = icmp slt i32 %2600, %2603
  br i1 %2604, label %2605, label %2620

2605:                                             ; preds = %2597
  br i1 %2592, label %2612, label %2606

2606:                                             ; preds = %2605
  %2607 = getelementptr inbounds i32, ptr %7, i64 %2598
  %2608 = load i32, ptr %2607, align 4, !tbaa !6
  %2609 = getelementptr inbounds i32, ptr %6, i64 %2598
  %2610 = load i32, ptr %2609, align 4, !tbaa !6
  %2611 = add nsw i32 %2610, %2608
  store i32 %2611, ptr %2609, align 4, !tbaa !6
  br label %2630

2612:                                             ; preds = %2588, %2605
  %2613 = phi i32 [ %2600, %2605 ], [ %2589, %2588 ]
  %2614 = phi ptr [ %2599, %2605 ], [ %4, %2588 ]
  %2615 = phi i64 [ %2598, %2605 ], [ 0, %2588 ]
  %2616 = add nsw i32 %2613, 1
  store i32 %2616, ptr %2614, align 4, !tbaa !6
  %2617 = getelementptr inbounds i32, ptr %7, i64 %2615
  %2618 = load i32, ptr %2617, align 4, !tbaa !6
  %2619 = getelementptr inbounds i32, ptr %6, i64 %2615
  br label %2630

2620:                                             ; preds = %2597
  %2621 = icmp eq i32 %2600, %2603
  br i1 %2621, label %2622, label %2628

2622:                                             ; preds = %2620
  store i32 0, ptr %2599, align 4, !tbaa !6
  %2623 = getelementptr inbounds i32, ptr %8, i64 %2598
  %2624 = load i32, ptr %2623, align 4, !tbaa !6
  %2625 = getelementptr inbounds i32, ptr %6, i64 %2598
  store i32 %2624, ptr %2625, align 4, !tbaa !6
  %2626 = add nuw nsw i64 %2598, 1
  %2627 = icmp eq i64 %2626, %2497
  br i1 %2627, label %2635, label %2597, !llvm.loop !468

2628:                                             ; preds = %2593, %2620
  %2629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2630:                                             ; preds = %2606, %2612
  %2631 = phi ptr [ %2619, %2612 ], [ %2599, %2606 ]
  %2632 = phi i32 [ %2618, %2612 ], [ 1, %2606 ]
  %2633 = load i32, ptr %2631, align 4, !tbaa !6
  %2634 = add nsw i32 %2633, %2632
  store i32 %2634, ptr %2631, align 4, !tbaa !6
  br label %2635

2635:                                             ; preds = %2622, %2630, %2595, %2574
  %2636 = icmp eq i32 %2587, %5
  br i1 %2636, label %3074, label %2500, !llvm.loop !469

2637:                                             ; preds = %2483, %2774
  %2638 = phi double [ 0.000000e+00, %2483 ], [ %2722, %2774 ]
  %2639 = phi i32 [ 0, %2483 ], [ %2723, %2774 ]
  %2640 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2484, label %2641, label %2710

2641:                                             ; preds = %2637, %2700
  %2642 = phi i32 [ %2709, %2700 ], [ 0, %2637 ]
  %2643 = phi i64 [ %2651, %2700 ], [ %2488, %2637 ]
  %2644 = phi i64 [ %2708, %2700 ], [ %2487, %2637 ]
  %2645 = phi i32 [ %2706, %2700 ], [ %2640, %2637 ]
  %2646 = sub i32 %2486, %2642
  %2647 = tail call i32 @llvm.smin.i32(i32 %2646, i32 0)
  %2648 = sub i32 %2646, %2647
  %2649 = zext i32 %2648 to i64
  %2650 = add nuw nsw i64 %2649, 1
  %2651 = add nsw i64 %2643, -1
  %2652 = icmp ult i32 %2648, 31
  br i1 %2652, label %2688, label %2653

2653:                                             ; preds = %2641
  %2654 = and i64 %2650, 8589934560
  %2655 = sub i64 %2644, %2654
  br label %2656

2656:                                             ; preds = %2656, %2653
  %2657 = phi i64 [ 0, %2653 ], [ %2680, %2656 ]
  %2658 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2653 ], [ %2676, %2656 ]
  %2659 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2653 ], [ %2677, %2656 ]
  %2660 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2653 ], [ %2678, %2656 ]
  %2661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2653 ], [ %2679, %2656 ]
  %2662 = sub i64 %2644, %2657
  %2663 = getelementptr inbounds i32, ptr %11, i64 %2662
  %2664 = getelementptr inbounds i32, ptr %2663, i64 -7
  %2665 = load <8 x i32>, ptr %2664, align 4, !tbaa !6
  %2666 = shufflevector <8 x i32> %2665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2667 = getelementptr inbounds i32, ptr %2663, i64 -15
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !6
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = getelementptr inbounds i32, ptr %2663, i64 -23
  %2671 = load <8 x i32>, ptr %2670, align 4, !tbaa !6
  %2672 = shufflevector <8 x i32> %2671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2673 = getelementptr inbounds i32, ptr %2663, i64 -31
  %2674 = load <8 x i32>, ptr %2673, align 4, !tbaa !6
  %2675 = shufflevector <8 x i32> %2674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2676 = mul <8 x i32> %2666, %2658
  %2677 = mul <8 x i32> %2669, %2659
  %2678 = mul <8 x i32> %2672, %2660
  %2679 = mul <8 x i32> %2675, %2661
  %2680 = add nuw i64 %2657, 32
  %2681 = icmp eq i64 %2680, %2654
  br i1 %2681, label %2682, label %2656, !llvm.loop !470

2682:                                             ; preds = %2656
  %2683 = mul <8 x i32> %2677, %2676
  %2684 = mul <8 x i32> %2678, %2683
  %2685 = mul <8 x i32> %2679, %2684
  %2686 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2685)
  %2687 = icmp eq i64 %2650, %2654
  br i1 %2687, label %2700, label %2688

2688:                                             ; preds = %2641, %2682
  %2689 = phi i64 [ %2644, %2641 ], [ %2655, %2682 ]
  %2690 = phi i32 [ 1, %2641 ], [ %2686, %2682 ]
  br label %2691

2691:                                             ; preds = %2688, %2691
  %2692 = phi i64 [ %2697, %2691 ], [ %2689, %2688 ]
  %2693 = phi i32 [ %2696, %2691 ], [ %2690, %2688 ]
  %2694 = getelementptr inbounds i32, ptr %11, i64 %2692
  %2695 = load i32, ptr %2694, align 4, !tbaa !6
  %2696 = mul nsw i32 %2695, %2693
  %2697 = add nsw i64 %2692, -1
  %2698 = trunc i64 %2692 to i32
  %2699 = icmp sgt i32 %2698, 0
  br i1 %2699, label %2691, label %2700, !llvm.loop !471

2700:                                             ; preds = %2691, %2682
  %2701 = phi i32 [ %2686, %2682 ], [ %2696, %2691 ]
  %2702 = and i64 %2651, 4294967295
  %2703 = getelementptr inbounds i32, ptr %6, i64 %2702
  %2704 = load i32, ptr %2703, align 4, !tbaa !6
  %2705 = mul nsw i32 %2704, %2701
  %2706 = add nsw i32 %2705, %2645
  %2707 = icmp sgt i64 %2643, 2
  %2708 = add nsw i64 %2644, -1
  %2709 = add i32 %2642, 1
  br i1 %2707, label %2641, label %2710, !llvm.loop !472

2710:                                             ; preds = %2700, %2637
  %2711 = phi i32 [ %2640, %2637 ], [ %2706, %2700 ]
  %2712 = icmp slt i32 %2711, %5
  br i1 %2712, label %2715, label %2713

2713:                                             ; preds = %2710
  %2714 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

2715:                                             ; preds = %2710
  %2716 = sext i32 %2711 to i64
  %2717 = getelementptr inbounds i8, ptr %2467, i64 %2716
  %2718 = load i8, ptr %2717, align 1, !tbaa !12
  %2719 = sitofp i8 %2718 to double
  %2720 = fmul fast double %2719, %2719
  %2721 = fmul fast double %2720, %2720
  %2722 = fadd fast double %2721, %2638
  store double %2722, ptr %2469, align 8, !tbaa !19
  %2723 = add nuw nsw i32 %2639, 1
  br i1 %2485, label %2724, label %2774

2724:                                             ; preds = %2715
  %2725 = load i32, ptr %4, align 4, !tbaa !6
  %2726 = load i32, ptr %12, align 4, !tbaa !6
  %2727 = add nsw i32 %2726, -1
  %2728 = icmp slt i32 %2725, %2727
  br i1 %2728, label %2751, label %2729

2729:                                             ; preds = %2724
  %2730 = icmp eq i32 %2725, %2727
  br i1 %2730, label %2731, label %2767

2731:                                             ; preds = %2729
  store i32 0, ptr %4, align 4, !tbaa !6
  %2732 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2732, ptr %6, align 4, !tbaa !6
  br i1 %2490, label %2774, label %2733

2733:                                             ; preds = %2731, %2761
  %2734 = phi i64 [ %2765, %2761 ], [ 1, %2731 ]
  %2735 = getelementptr inbounds i32, ptr %4, i64 %2734
  %2736 = load i32, ptr %2735, align 4, !tbaa !6
  %2737 = getelementptr inbounds i32, ptr %12, i64 %2734
  %2738 = load i32, ptr %2737, align 4, !tbaa !6
  %2739 = add nsw i32 %2738, -1
  %2740 = icmp slt i32 %2736, %2739
  br i1 %2740, label %2741, label %2759

2741:                                             ; preds = %2733
  br i1 %2728, label %2751, label %2742

2742:                                             ; preds = %2741
  %2743 = shl i64 %2734, 32
  %2744 = add i64 %2743, -4294967296
  %2745 = ashr exact i64 %2744, 32
  %2746 = getelementptr inbounds i32, ptr %7, i64 %2745
  %2747 = load i32, ptr %2746, align 4, !tbaa !6
  %2748 = getelementptr inbounds i32, ptr %6, i64 %2734
  %2749 = load i32, ptr %2748, align 4, !tbaa !6
  %2750 = add nsw i32 %2749, %2747
  store i32 %2750, ptr %2748, align 4, !tbaa !6
  br label %2769

2751:                                             ; preds = %2724, %2741
  %2752 = phi i32 [ %2736, %2741 ], [ %2725, %2724 ]
  %2753 = phi ptr [ %2735, %2741 ], [ %4, %2724 ]
  %2754 = phi i64 [ %2734, %2741 ], [ 0, %2724 ]
  %2755 = add nsw i32 %2752, 1
  store i32 %2755, ptr %2753, align 4, !tbaa !6
  %2756 = getelementptr inbounds i32, ptr %7, i64 %2754
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = getelementptr inbounds i32, ptr %6, i64 %2754
  br label %2769

2759:                                             ; preds = %2733
  %2760 = icmp eq i32 %2736, %2739
  br i1 %2760, label %2761, label %2767

2761:                                             ; preds = %2759
  store i32 0, ptr %2735, align 4, !tbaa !6
  %2762 = getelementptr inbounds i32, ptr %8, i64 %2734
  %2763 = load i32, ptr %2762, align 4, !tbaa !6
  %2764 = getelementptr inbounds i32, ptr %6, i64 %2734
  store i32 %2763, ptr %2764, align 4, !tbaa !6
  %2765 = add nuw nsw i64 %2734, 1
  %2766 = icmp eq i64 %2765, %2488
  br i1 %2766, label %2774, label %2733, !llvm.loop !473

2767:                                             ; preds = %2729, %2759
  %2768 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2769:                                             ; preds = %2742, %2751
  %2770 = phi ptr [ %2758, %2751 ], [ %2735, %2742 ]
  %2771 = phi i32 [ %2757, %2751 ], [ 1, %2742 ]
  %2772 = load i32, ptr %2770, align 4, !tbaa !6
  %2773 = add nsw i32 %2772, %2771
  store i32 %2773, ptr %2770, align 4, !tbaa !6
  br label %2774

2774:                                             ; preds = %2761, %2769, %2731, %2715
  %2775 = icmp eq i32 %2723, %5
  br i1 %2775, label %3074, label %2637, !llvm.loop !474

2776:                                             ; preds = %2476
  %2777 = getelementptr inbounds i32, ptr %3, i64 %19
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = icmp eq i32 %2778, 0
  %2780 = icmp sgt i32 %5, 0
  br i1 %2779, label %2790, label %2781

2781:                                             ; preds = %2776
  br i1 %2780, label %2782, label %3074

2782:                                             ; preds = %2781
  %2783 = icmp sgt i32 %13, 1
  %2784 = icmp sgt i32 %13, 0
  %2785 = add i32 %13, -2
  %2786 = zext i32 %2785 to i64
  %2787 = zext i32 %13 to i64
  %2788 = add nuw i32 %5, 1
  %2789 = icmp eq i32 %13, 1
  br label %2933

2790:                                             ; preds = %2776
  br i1 %2780, label %2791, label %3074

2791:                                             ; preds = %2790
  %2792 = icmp sgt i32 %13, 1
  %2793 = icmp sgt i32 %13, 0
  %2794 = add i32 %13, -2
  %2795 = zext i32 %2794 to i64
  %2796 = zext i32 %13 to i64
  %2797 = add nuw i32 %5, 1
  %2798 = icmp eq i32 %13, 1
  br label %2799

2799:                                             ; preds = %2791, %2931
  %2800 = phi double [ 0.000000e+00, %2791 ], [ %2881, %2931 ]
  %2801 = phi i32 [ 0, %2791 ], [ %2883, %2931 ]
  %2802 = phi double [ 0.000000e+00, %2791 ], [ %2882, %2931 ]
  %2803 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2792, label %2804, label %2873

2804:                                             ; preds = %2799, %2863
  %2805 = phi i32 [ %2872, %2863 ], [ 0, %2799 ]
  %2806 = phi i64 [ %2814, %2863 ], [ %2796, %2799 ]
  %2807 = phi i64 [ %2871, %2863 ], [ %2795, %2799 ]
  %2808 = phi i32 [ %2869, %2863 ], [ %2803, %2799 ]
  %2809 = sub i32 %2794, %2805
  %2810 = tail call i32 @llvm.smin.i32(i32 %2809, i32 0)
  %2811 = sub i32 %2809, %2810
  %2812 = zext i32 %2811 to i64
  %2813 = add nuw nsw i64 %2812, 1
  %2814 = add nsw i64 %2806, -1
  %2815 = icmp ult i32 %2811, 31
  br i1 %2815, label %2851, label %2816

2816:                                             ; preds = %2804
  %2817 = and i64 %2813, 8589934560
  %2818 = sub i64 %2807, %2817
  br label %2819

2819:                                             ; preds = %2819, %2816
  %2820 = phi i64 [ 0, %2816 ], [ %2843, %2819 ]
  %2821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2839, %2819 ]
  %2822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2840, %2819 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2841, %2819 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2842, %2819 ]
  %2825 = sub i64 %2807, %2820
  %2826 = getelementptr inbounds i32, ptr %9, i64 %2825
  %2827 = getelementptr inbounds i32, ptr %2826, i64 -7
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !6
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2826, i64 -15
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !6
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2826, i64 -23
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !6
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2826, i64 -31
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !6
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = mul <8 x i32> %2829, %2821
  %2840 = mul <8 x i32> %2832, %2822
  %2841 = mul <8 x i32> %2835, %2823
  %2842 = mul <8 x i32> %2838, %2824
  %2843 = add nuw i64 %2820, 32
  %2844 = icmp eq i64 %2843, %2817
  br i1 %2844, label %2845, label %2819, !llvm.loop !475

2845:                                             ; preds = %2819
  %2846 = mul <8 x i32> %2840, %2839
  %2847 = mul <8 x i32> %2841, %2846
  %2848 = mul <8 x i32> %2842, %2847
  %2849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2848)
  %2850 = icmp eq i64 %2813, %2817
  br i1 %2850, label %2863, label %2851

2851:                                             ; preds = %2804, %2845
  %2852 = phi i64 [ %2807, %2804 ], [ %2818, %2845 ]
  %2853 = phi i32 [ 1, %2804 ], [ %2849, %2845 ]
  br label %2854

2854:                                             ; preds = %2851, %2854
  %2855 = phi i64 [ %2860, %2854 ], [ %2852, %2851 ]
  %2856 = phi i32 [ %2859, %2854 ], [ %2853, %2851 ]
  %2857 = getelementptr inbounds i32, ptr %9, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !6
  %2859 = mul nsw i32 %2858, %2856
  %2860 = add nsw i64 %2855, -1
  %2861 = trunc i64 %2855 to i32
  %2862 = icmp sgt i32 %2861, 0
  br i1 %2862, label %2854, label %2863, !llvm.loop !476

2863:                                             ; preds = %2854, %2845
  %2864 = phi i32 [ %2849, %2845 ], [ %2859, %2854 ]
  %2865 = and i64 %2814, 4294967295
  %2866 = getelementptr inbounds i32, ptr %6, i64 %2865
  %2867 = load i32, ptr %2866, align 4, !tbaa !6
  %2868 = mul nsw i32 %2867, %2864
  %2869 = add nsw i32 %2868, %2808
  %2870 = icmp sgt i64 %2806, 2
  %2871 = add nsw i64 %2807, -1
  %2872 = add i32 %2805, 1
  br i1 %2870, label %2804, label %2873, !llvm.loop !477

2873:                                             ; preds = %2863, %2799
  %2874 = phi i32 [ %2803, %2799 ], [ %2869, %2863 ]
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds i8, ptr %2467, i64 %2875
  %2877 = load i8, ptr %2876, align 1, !tbaa !12
  %2878 = sitofp i8 %2877 to double
  %2879 = fmul fast double %2878, %2878
  %2880 = fmul fast double %2879, %2879
  %2881 = fadd fast double %2880, %2800
  store double %2881, ptr %2469, align 8, !tbaa !19
  %2882 = fadd fast double %2802, 1.000000e+00
  %2883 = add nuw nsw i32 %2801, 1
  br i1 %2793, label %2884, label %2931

2884:                                             ; preds = %2873
  %2885 = load i32, ptr %4, align 4, !tbaa !6
  %2886 = load i32, ptr %12, align 4, !tbaa !6
  %2887 = add nsw i32 %2886, -1
  %2888 = icmp slt i32 %2885, %2887
  br i1 %2888, label %2908, label %2889

2889:                                             ; preds = %2884
  %2890 = icmp eq i32 %2885, %2887
  br i1 %2890, label %2891, label %2924

2891:                                             ; preds = %2889
  store i32 0, ptr %4, align 4, !tbaa !6
  %2892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2892, ptr %6, align 4, !tbaa !6
  br i1 %2798, label %2931, label %2893

2893:                                             ; preds = %2891, %2918
  %2894 = phi i64 [ %2922, %2918 ], [ 1, %2891 ]
  %2895 = getelementptr inbounds i32, ptr %4, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !6
  %2897 = getelementptr inbounds i32, ptr %12, i64 %2894
  %2898 = load i32, ptr %2897, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2896, %2899
  br i1 %2900, label %2901, label %2916

2901:                                             ; preds = %2893
  br i1 %2888, label %2908, label %2902

2902:                                             ; preds = %2901
  %2903 = getelementptr inbounds i32, ptr %7, i64 %2894
  %2904 = load i32, ptr %2903, align 4, !tbaa !6
  %2905 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2906 = load i32, ptr %2905, align 4, !tbaa !6
  %2907 = add nsw i32 %2906, %2904
  store i32 %2907, ptr %2905, align 4, !tbaa !6
  br label %2926

2908:                                             ; preds = %2884, %2901
  %2909 = phi i32 [ %2896, %2901 ], [ %2885, %2884 ]
  %2910 = phi ptr [ %2895, %2901 ], [ %4, %2884 ]
  %2911 = phi i64 [ %2894, %2901 ], [ 0, %2884 ]
  %2912 = add nsw i32 %2909, 1
  store i32 %2912, ptr %2910, align 4, !tbaa !6
  %2913 = getelementptr inbounds i32, ptr %7, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !6
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2911
  br label %2926

2916:                                             ; preds = %2893
  %2917 = icmp eq i32 %2896, %2899
  br i1 %2917, label %2918, label %2924

2918:                                             ; preds = %2916
  store i32 0, ptr %2895, align 4, !tbaa !6
  %2919 = getelementptr inbounds i32, ptr %8, i64 %2894
  %2920 = load i32, ptr %2919, align 4, !tbaa !6
  %2921 = getelementptr inbounds i32, ptr %6, i64 %2894
  store i32 %2920, ptr %2921, align 4, !tbaa !6
  %2922 = add nuw nsw i64 %2894, 1
  %2923 = icmp eq i64 %2922, %2796
  br i1 %2923, label %2931, label %2893, !llvm.loop !478

2924:                                             ; preds = %2889, %2916
  %2925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

2926:                                             ; preds = %2902, %2908
  %2927 = phi ptr [ %2915, %2908 ], [ %2895, %2902 ]
  %2928 = phi i32 [ %2914, %2908 ], [ 1, %2902 ]
  %2929 = load i32, ptr %2927, align 4, !tbaa !6
  %2930 = add nsw i32 %2929, %2928
  store i32 %2930, ptr %2927, align 4, !tbaa !6
  br label %2931

2931:                                             ; preds = %2918, %2926, %2891, %2873
  %2932 = icmp eq i32 %2883, %5
  br i1 %2932, label %3074, label %2799, !llvm.loop !479

2933:                                             ; preds = %2782, %3070
  %2934 = phi double [ 0.000000e+00, %2782 ], [ %3018, %3070 ]
  %2935 = phi i32 [ 0, %2782 ], [ %3019, %3070 ]
  %2936 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2783, label %2937, label %3006

2937:                                             ; preds = %2933, %2996
  %2938 = phi i32 [ %3005, %2996 ], [ 0, %2933 ]
  %2939 = phi i64 [ %2947, %2996 ], [ %2787, %2933 ]
  %2940 = phi i64 [ %3004, %2996 ], [ %2786, %2933 ]
  %2941 = phi i32 [ %3002, %2996 ], [ %2936, %2933 ]
  %2942 = sub i32 %2785, %2938
  %2943 = tail call i32 @llvm.smin.i32(i32 %2942, i32 0)
  %2944 = sub i32 %2942, %2943
  %2945 = zext i32 %2944 to i64
  %2946 = add nuw nsw i64 %2945, 1
  %2947 = add nsw i64 %2939, -1
  %2948 = icmp ult i32 %2944, 31
  br i1 %2948, label %2984, label %2949

2949:                                             ; preds = %2937
  %2950 = and i64 %2946, 8589934560
  %2951 = sub i64 %2940, %2950
  br label %2952

2952:                                             ; preds = %2952, %2949
  %2953 = phi i64 [ 0, %2949 ], [ %2976, %2952 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2972, %2952 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2973, %2952 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2974, %2952 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2975, %2952 ]
  %2958 = sub i64 %2940, %2953
  %2959 = getelementptr inbounds i32, ptr %11, i64 %2958
  %2960 = getelementptr inbounds i32, ptr %2959, i64 -7
  %2961 = load <8 x i32>, ptr %2960, align 4, !tbaa !6
  %2962 = shufflevector <8 x i32> %2961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2963 = getelementptr inbounds i32, ptr %2959, i64 -15
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !6
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2959, i64 -23
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !6
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2959, i64 -31
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !6
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = mul <8 x i32> %2962, %2954
  %2973 = mul <8 x i32> %2965, %2955
  %2974 = mul <8 x i32> %2968, %2956
  %2975 = mul <8 x i32> %2971, %2957
  %2976 = add nuw i64 %2953, 32
  %2977 = icmp eq i64 %2976, %2950
  br i1 %2977, label %2978, label %2952, !llvm.loop !480

2978:                                             ; preds = %2952
  %2979 = mul <8 x i32> %2973, %2972
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = mul <8 x i32> %2975, %2980
  %2982 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2981)
  %2983 = icmp eq i64 %2946, %2950
  br i1 %2983, label %2996, label %2984

2984:                                             ; preds = %2937, %2978
  %2985 = phi i64 [ %2940, %2937 ], [ %2951, %2978 ]
  %2986 = phi i32 [ 1, %2937 ], [ %2982, %2978 ]
  br label %2987

2987:                                             ; preds = %2984, %2987
  %2988 = phi i64 [ %2993, %2987 ], [ %2985, %2984 ]
  %2989 = phi i32 [ %2992, %2987 ], [ %2986, %2984 ]
  %2990 = getelementptr inbounds i32, ptr %11, i64 %2988
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = mul nsw i32 %2991, %2989
  %2993 = add nsw i64 %2988, -1
  %2994 = trunc i64 %2988 to i32
  %2995 = icmp sgt i32 %2994, 0
  br i1 %2995, label %2987, label %2996, !llvm.loop !481

2996:                                             ; preds = %2987, %2978
  %2997 = phi i32 [ %2982, %2978 ], [ %2992, %2987 ]
  %2998 = and i64 %2947, 4294967295
  %2999 = getelementptr inbounds i32, ptr %6, i64 %2998
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = mul nsw i32 %3000, %2997
  %3002 = add nsw i32 %3001, %2941
  %3003 = icmp sgt i64 %2939, 2
  %3004 = add nsw i64 %2940, -1
  %3005 = add i32 %2938, 1
  br i1 %3003, label %2937, label %3006, !llvm.loop !482

3006:                                             ; preds = %2996, %2933
  %3007 = phi i32 [ %2936, %2933 ], [ %3002, %2996 ]
  %3008 = icmp slt i32 %3007, %5
  br i1 %3008, label %3011, label %3009

3009:                                             ; preds = %3006
  %3010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3079

3011:                                             ; preds = %3006
  %3012 = sext i32 %3007 to i64
  %3013 = getelementptr inbounds i8, ptr %2467, i64 %3012
  %3014 = load i8, ptr %3013, align 1, !tbaa !12
  %3015 = sitofp i8 %3014 to double
  %3016 = fmul fast double %3015, %3015
  %3017 = fmul fast double %3016, %3016
  %3018 = fadd fast double %3017, %2934
  store double %3018, ptr %2469, align 8, !tbaa !19
  %3019 = add nuw nsw i32 %2935, 1
  br i1 %2784, label %3020, label %3070

3020:                                             ; preds = %3011
  %3021 = load i32, ptr %4, align 4, !tbaa !6
  %3022 = load i32, ptr %12, align 4, !tbaa !6
  %3023 = add nsw i32 %3022, -1
  %3024 = icmp slt i32 %3021, %3023
  br i1 %3024, label %3047, label %3025

3025:                                             ; preds = %3020
  %3026 = icmp eq i32 %3021, %3023
  br i1 %3026, label %3027, label %3063

3027:                                             ; preds = %3025
  store i32 0, ptr %4, align 4, !tbaa !6
  %3028 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3028, ptr %6, align 4, !tbaa !6
  br i1 %2789, label %3070, label %3029

3029:                                             ; preds = %3027, %3057
  %3030 = phi i64 [ %3061, %3057 ], [ 1, %3027 ]
  %3031 = getelementptr inbounds i32, ptr %4, i64 %3030
  %3032 = load i32, ptr %3031, align 4, !tbaa !6
  %3033 = getelementptr inbounds i32, ptr %12, i64 %3030
  %3034 = load i32, ptr %3033, align 4, !tbaa !6
  %3035 = add nsw i32 %3034, -1
  %3036 = icmp slt i32 %3032, %3035
  br i1 %3036, label %3037, label %3055

3037:                                             ; preds = %3029
  br i1 %3024, label %3047, label %3038

3038:                                             ; preds = %3037
  %3039 = shl i64 %3030, 32
  %3040 = add i64 %3039, -4294967296
  %3041 = ashr exact i64 %3040, 32
  %3042 = getelementptr inbounds i32, ptr %7, i64 %3041
  %3043 = load i32, ptr %3042, align 4, !tbaa !6
  %3044 = getelementptr inbounds i32, ptr %6, i64 %3030
  %3045 = load i32, ptr %3044, align 4, !tbaa !6
  %3046 = add nsw i32 %3045, %3043
  store i32 %3046, ptr %3044, align 4, !tbaa !6
  br label %3065

3047:                                             ; preds = %3020, %3037
  %3048 = phi i32 [ %3032, %3037 ], [ %3021, %3020 ]
  %3049 = phi ptr [ %3031, %3037 ], [ %4, %3020 ]
  %3050 = phi i64 [ %3030, %3037 ], [ 0, %3020 ]
  %3051 = add nsw i32 %3048, 1
  store i32 %3051, ptr %3049, align 4, !tbaa !6
  %3052 = getelementptr inbounds i32, ptr %7, i64 %3050
  %3053 = load i32, ptr %3052, align 4, !tbaa !6
  %3054 = getelementptr inbounds i32, ptr %6, i64 %3050
  br label %3065

3055:                                             ; preds = %3029
  %3056 = icmp eq i32 %3032, %3035
  br i1 %3056, label %3057, label %3063

3057:                                             ; preds = %3055
  store i32 0, ptr %3031, align 4, !tbaa !6
  %3058 = getelementptr inbounds i32, ptr %8, i64 %3030
  %3059 = load i32, ptr %3058, align 4, !tbaa !6
  %3060 = getelementptr inbounds i32, ptr %6, i64 %3030
  store i32 %3059, ptr %3060, align 4, !tbaa !6
  %3061 = add nuw nsw i64 %3030, 1
  %3062 = icmp eq i64 %3061, %2787
  br i1 %3062, label %3070, label %3029, !llvm.loop !483

3063:                                             ; preds = %3025, %3055
  %3064 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3079

3065:                                             ; preds = %3038, %3047
  %3066 = phi ptr [ %3054, %3047 ], [ %3031, %3038 ]
  %3067 = phi i32 [ %3053, %3047 ], [ 1, %3038 ]
  %3068 = load i32, ptr %3066, align 4, !tbaa !6
  %3069 = add nsw i32 %3068, %3067
  store i32 %3069, ptr %3066, align 4, !tbaa !6
  br label %3070

3070:                                             ; preds = %3057, %3065, %3027, %3011
  %3071 = icmp eq i32 %3019, %5
  br i1 %3071, label %3074, label %2933, !llvm.loop !484

3072:                                             ; preds = %2476
  %3073 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3074

3074:                                             ; preds = %3070, %2931, %2774, %2635, %2461, %2322, %2165, %2024, %1848, %1709, %1552, %1413, %1239, %1100, %943, %803, %627, %489, %333, %193, %2781, %2790, %2482, %2491, %2172, %2181, %1869, %1878, %1559, %1568, %1260, %1269, %950, %959, %648, %657, %340, %349, %38, %47, %2471, %3072, %1858, %2463, %1249, %1850, %637, %1241, %28, %629, %18
  %3075 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %629 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %637 ], [ 0.000000e+00, %1850 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %1858 ], [ 0.000000e+00, %3072 ], [ 0.000000e+00, %2471 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %349 ], [ 0.000000e+00, %340 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %959 ], [ 0.000000e+00, %950 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1568 ], [ 0.000000e+00, %1559 ], [ 0.000000e+00, %1878 ], [ 0.000000e+00, %1869 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2172 ], [ 0.000000e+00, %2491 ], [ 0.000000e+00, %2482 ], [ 0.000000e+00, %2790 ], [ 0.000000e+00, %2781 ], [ %144, %193 ], [ 0.000000e+00, %333 ], [ %440, %489 ], [ 0.000000e+00, %627 ], [ %754, %803 ], [ 0.000000e+00, %943 ], [ %1051, %1100 ], [ 0.000000e+00, %1239 ], [ %1364, %1413 ], [ 0.000000e+00, %1552 ], [ %1660, %1709 ], [ 0.000000e+00, %1848 ], [ %1975, %2024 ], [ 0.000000e+00, %2165 ], [ %2273, %2322 ], [ 0.000000e+00, %2461 ], [ %2586, %2635 ], [ 0.000000e+00, %2774 ], [ %2882, %2931 ], [ 0.000000e+00, %3070 ]
  %3076 = phi i32 [ %10, %18 ], [ 1, %629 ], [ 1, %28 ], [ 1, %1241 ], [ 1, %637 ], [ 1, %1850 ], [ 1, %1249 ], [ 1, %2463 ], [ 1, %1858 ], [ 1, %3072 ], [ 1, %2471 ], [ 1, %47 ], [ 1, %38 ], [ 1, %349 ], [ 1, %340 ], [ 1, %657 ], [ 1, %648 ], [ 1, %959 ], [ 1, %950 ], [ 1, %1269 ], [ 1, %1260 ], [ 1, %1568 ], [ 1, %1559 ], [ 1, %1878 ], [ 1, %1869 ], [ 1, %2181 ], [ 1, %2172 ], [ 1, %2491 ], [ 1, %2482 ], [ 1, %2790 ], [ 1, %2781 ], [ %54, %193 ], [ %45, %333 ], [ %356, %489 ], [ %347, %627 ], [ %664, %803 ], [ %655, %943 ], [ %966, %1100 ], [ %957, %1239 ], [ %1276, %1413 ], [ %1267, %1552 ], [ %1575, %1709 ], [ %1566, %1848 ], [ %1885, %2024 ], [ %1876, %2165 ], [ %2188, %2322 ], [ %2179, %2461 ], [ %2498, %2635 ], [ %2489, %2774 ], [ %2797, %2931 ], [ %2788, %3070 ]
  %3077 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3076, ptr noundef nonnull @.str.5) #3
  %3078 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3075, ptr noundef nonnull @.str.6) #3
  br label %3079

3079:                                             ; preds = %2628, %2713, %2767, %2924, %3009, %3063, %2017, %2102, %2158, %2315, %2400, %2454, %1406, %1491, %1545, %1702, %1787, %1841, %796, %880, %936, %1093, %1177, %1232, %186, %270, %326, %482, %566, %620, %3074
  %3080 = phi i32 [ 0, %3074 ], [ -1, %620 ], [ -1, %566 ], [ -1, %482 ], [ -1, %326 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1232 ], [ -1, %1177 ], [ -1, %1093 ], [ -1, %936 ], [ -1, %880 ], [ -1, %796 ], [ -1, %1841 ], [ -1, %1787 ], [ -1, %1702 ], [ -1, %1545 ], [ -1, %1491 ], [ -1, %1406 ], [ -1, %2454 ], [ -1, %2400 ], [ -1, %2315 ], [ -1, %2158 ], [ -1, %2102 ], [ -1, %2017 ], [ -1, %3063 ], [ -1, %3009 ], [ -1, %2924 ], [ -1, %2767 ], [ -1, %2713 ], [ -1, %2628 ]
  ret i32 %3080
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3085 [
    i32 101, label %22
    i32 102, label %637
    i32 107, label %1250
    i32 108, label %1859
    i32 109, label %2472
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !79
  %30 = mul i16 %29, %29
  %31 = mul i16 %30, %30
  %32 = trunc i16 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %3085

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %3085

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %3085

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !485

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !486

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !487

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i16, ptr %24, i64 %132
  %136 = load i16, ptr %135, align 2, !tbaa !79
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i16 %136, 255
  %140 = uitofp i16 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %138
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !488

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %3085, label %57, !llvm.loop !489

197:                                              ; preds = %40, %337
  %198 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !490

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !491

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !492

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds i16, ptr %24, i64 %275
  %277 = load i16, ptr %276, align 2, !tbaa !79
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = uitofp i8 %278 to double
  %280 = and i16 %277, 255
  %281 = uitofp i16 %280 to double
  %282 = fmul fast double %281, %281
  %283 = fmul fast double %282, %282
  %284 = fadd fast double %283, %279
  %285 = fptoui double %284 to i8
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %198, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %274
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !493

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %274
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %3085, label %197, !llvm.loop !494

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %3085

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %3085

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !495

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !496

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !497

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i16, ptr %24, i64 %437
  %439 = load i16, ptr %438, align 2, !tbaa !79
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i16 %439, %439
  %442 = mul i16 %441, %441
  %443 = trunc i16 %442 to i8
  %444 = add i8 %440, %443
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !498

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %3085, label %362, !llvm.loop !499

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !500

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !501

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !502

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

573:                                              ; preds = %568
  %574 = sext i32 %569 to i64
  %575 = getelementptr inbounds i16, ptr %24, i64 %574
  %576 = load i16, ptr %575, align 2, !tbaa !79
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i16 %576, %576
  %579 = mul i16 %578, %578
  %580 = trunc i16 %579 to i8
  %581 = add i8 %577, %580
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !503

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %3085, label %496, !llvm.loop !504

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 884, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3085

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %648

643:                                              ; preds = %637
  %644 = load i16, ptr %639, align 2, !tbaa !79
  %645 = sext i16 %644 to i32
  %646 = mul nsw i32 %645, %645
  %647 = mul i32 %646, %646
  store i32 %647, ptr %641, align 4, !tbaa !6
  br label %3085

648:                                              ; preds = %637
  switch i32 %1, label %1248 [
    i32 1, label %649
    i32 0, label %952
  ]

649:                                              ; preds = %648
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3085

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %811

663:                                              ; preds = %649
  br i1 %653, label %664, label %3085

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 1
  %666 = icmp sgt i32 %13, 0
  %667 = add i32 %13, -2
  %668 = zext i32 %667 to i64
  %669 = zext i32 %13 to i64
  %670 = add nuw i32 %5, 1
  %671 = icmp eq i32 %13, 1
  br label %672

672:                                              ; preds = %664, %809
  %673 = phi i32 [ 0, %664 ], [ %761, %809 ]
  %674 = phi double [ 0.000000e+00, %664 ], [ %760, %809 ]
  %675 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %665, label %676, label %745

676:                                              ; preds = %672, %735
  %677 = phi i32 [ %744, %735 ], [ 0, %672 ]
  %678 = phi i64 [ %686, %735 ], [ %669, %672 ]
  %679 = phi i64 [ %743, %735 ], [ %668, %672 ]
  %680 = phi i32 [ %741, %735 ], [ %675, %672 ]
  %681 = sub i32 %667, %677
  %682 = tail call i32 @llvm.smin.i32(i32 %681, i32 0)
  %683 = sub i32 %681, %682
  %684 = zext i32 %683 to i64
  %685 = add nuw nsw i64 %684, 1
  %686 = add nsw i64 %678, -1
  %687 = icmp ult i32 %683, 31
  br i1 %687, label %723, label %688

688:                                              ; preds = %676
  %689 = and i64 %685, 8589934560
  %690 = sub i64 %679, %689
  br label %691

691:                                              ; preds = %691, %688
  %692 = phi i64 [ 0, %688 ], [ %715, %691 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %688 ], [ %711, %691 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %688 ], [ %712, %691 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %688 ], [ %713, %691 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %688 ], [ %714, %691 ]
  %697 = sub i64 %679, %692
  %698 = getelementptr inbounds i32, ptr %9, i64 %697
  %699 = getelementptr inbounds i32, ptr %698, i64 -7
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %698, i64 -15
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = getelementptr inbounds i32, ptr %698, i64 -23
  %706 = load <8 x i32>, ptr %705, align 4, !tbaa !6
  %707 = shufflevector <8 x i32> %706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %708 = getelementptr inbounds i32, ptr %698, i64 -31
  %709 = load <8 x i32>, ptr %708, align 4, !tbaa !6
  %710 = shufflevector <8 x i32> %709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %711 = mul <8 x i32> %701, %693
  %712 = mul <8 x i32> %704, %694
  %713 = mul <8 x i32> %707, %695
  %714 = mul <8 x i32> %710, %696
  %715 = add nuw i64 %692, 32
  %716 = icmp eq i64 %715, %689
  br i1 %716, label %717, label %691, !llvm.loop !505

717:                                              ; preds = %691
  %718 = mul <8 x i32> %712, %711
  %719 = mul <8 x i32> %713, %718
  %720 = mul <8 x i32> %714, %719
  %721 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %720)
  %722 = icmp eq i64 %685, %689
  br i1 %722, label %735, label %723

723:                                              ; preds = %676, %717
  %724 = phi i64 [ %679, %676 ], [ %690, %717 ]
  %725 = phi i32 [ 1, %676 ], [ %721, %717 ]
  br label %726

726:                                              ; preds = %723, %726
  %727 = phi i64 [ %732, %726 ], [ %724, %723 ]
  %728 = phi i32 [ %731, %726 ], [ %725, %723 ]
  %729 = getelementptr inbounds i32, ptr %9, i64 %727
  %730 = load i32, ptr %729, align 4, !tbaa !6
  %731 = mul nsw i32 %730, %728
  %732 = add nsw i64 %727, -1
  %733 = trunc i64 %727 to i32
  %734 = icmp sgt i32 %733, 0
  br i1 %734, label %726, label %735, !llvm.loop !506

735:                                              ; preds = %726, %717
  %736 = phi i32 [ %721, %717 ], [ %731, %726 ]
  %737 = and i64 %686, 4294967295
  %738 = getelementptr inbounds i32, ptr %6, i64 %737
  %739 = load i32, ptr %738, align 4, !tbaa !6
  %740 = mul nsw i32 %739, %736
  %741 = add nsw i32 %740, %680
  %742 = icmp sgt i64 %678, 2
  %743 = add nsw i64 %679, -1
  %744 = add i32 %677, 1
  br i1 %742, label %676, label %745, !llvm.loop !507

745:                                              ; preds = %735, %672
  %746 = phi i32 [ %675, %672 ], [ %741, %735 ]
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds double, ptr %2, i64 %747
  %749 = load double, ptr %748, align 8, !tbaa !19
  %750 = getelementptr inbounds i16, ptr %639, i64 %747
  %751 = load i16, ptr %750, align 2, !tbaa !79
  %752 = load i32, ptr %641, align 4, !tbaa !6
  %753 = sitofp i32 %752 to double
  %754 = sitofp i16 %751 to double
  %755 = fmul fast double %749, %754
  %756 = fmul fast double %755, %755
  %757 = fmul fast double %756, %756
  %758 = fadd fast double %757, %753
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %641, align 4, !tbaa !6
  %760 = fadd fast double %749, %674
  %761 = add nuw nsw i32 %673, 1
  br i1 %666, label %762, label %809

762:                                              ; preds = %745
  %763 = load i32, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %12, align 4, !tbaa !6
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !6
  %770 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %770, ptr %6, align 4, !tbaa !6
  br i1 %671, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !6
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !6
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %669
  br i1 %801, label %809, label %771, !llvm.loop !508

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !6
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !6
  br label %809

809:                                              ; preds = %796, %804, %769, %745
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %3085, label %672, !llvm.loop !509

811:                                              ; preds = %655, %950
  %812 = phi i32 [ 0, %655 ], [ %899, %950 ]
  %813 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %660, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %659, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %658, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !510

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !6
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !511

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !6
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !512

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds i16, ptr %639, i64 %889
  %891 = load i16, ptr %890, align 2, !tbaa !79
  %892 = load i32, ptr %641, align 4, !tbaa !6
  %893 = sitofp i32 %892 to double
  %894 = sitofp i16 %891 to double
  %895 = fmul fast double %894, %894
  %896 = fmul fast double %895, %895
  %897 = fadd fast double %896, %893
  %898 = fptosi double %897 to i32
  store i32 %898, ptr %641, align 4, !tbaa !6
  %899 = add nuw nsw i32 %812, 1
  br i1 %657, label %900, label %950

900:                                              ; preds = %888
  %901 = load i32, ptr %4, align 4, !tbaa !6
  %902 = load i32, ptr %12, align 4, !tbaa !6
  %903 = add nsw i32 %902, -1
  %904 = icmp slt i32 %901, %903
  br i1 %904, label %927, label %905

905:                                              ; preds = %900
  %906 = icmp eq i32 %901, %903
  br i1 %906, label %907, label %943

907:                                              ; preds = %905
  store i32 0, ptr %4, align 4, !tbaa !6
  %908 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %908, ptr %6, align 4, !tbaa !6
  br i1 %662, label %950, label %909

909:                                              ; preds = %907, %937
  %910 = phi i64 [ %941, %937 ], [ 1, %907 ]
  %911 = getelementptr inbounds i32, ptr %4, i64 %910
  %912 = load i32, ptr %911, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %12, i64 %910
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = add nsw i32 %914, -1
  %916 = icmp slt i32 %912, %915
  br i1 %916, label %917, label %935

917:                                              ; preds = %909
  br i1 %904, label %927, label %918

918:                                              ; preds = %917
  %919 = shl i64 %910, 32
  %920 = add i64 %919, -4294967296
  %921 = ashr exact i64 %920, 32
  %922 = getelementptr inbounds i32, ptr %7, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %6, i64 %910
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, %923
  store i32 %926, ptr %924, align 4, !tbaa !6
  br label %945

927:                                              ; preds = %900, %917
  %928 = phi i32 [ %912, %917 ], [ %901, %900 ]
  %929 = phi ptr [ %911, %917 ], [ %4, %900 ]
  %930 = phi i64 [ %910, %917 ], [ 0, %900 ]
  %931 = add nsw i32 %928, 1
  store i32 %931, ptr %929, align 4, !tbaa !6
  %932 = getelementptr inbounds i32, ptr %7, i64 %930
  %933 = load i32, ptr %932, align 4, !tbaa !6
  %934 = getelementptr inbounds i32, ptr %6, i64 %930
  br label %945

935:                                              ; preds = %909
  %936 = icmp eq i32 %912, %915
  br i1 %936, label %937, label %943

937:                                              ; preds = %935
  store i32 0, ptr %911, align 4, !tbaa !6
  %938 = getelementptr inbounds i32, ptr %8, i64 %910
  %939 = load i32, ptr %938, align 4, !tbaa !6
  %940 = getelementptr inbounds i32, ptr %6, i64 %910
  store i32 %939, ptr %940, align 4, !tbaa !6
  %941 = add nuw nsw i64 %910, 1
  %942 = icmp eq i64 %941, %660
  br i1 %942, label %950, label %909, !llvm.loop !513

943:                                              ; preds = %905, %935
  %944 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

945:                                              ; preds = %918, %927
  %946 = phi ptr [ %934, %927 ], [ %911, %918 ]
  %947 = phi i32 [ %933, %927 ], [ 1, %918 ]
  %948 = load i32, ptr %946, align 4, !tbaa !6
  %949 = add nsw i32 %948, %947
  store i32 %949, ptr %946, align 4, !tbaa !6
  br label %950

950:                                              ; preds = %937, %945, %907, %888
  %951 = icmp eq i32 %899, %5
  br i1 %951, label %3085, label %811, !llvm.loop !514

952:                                              ; preds = %648
  %953 = getelementptr inbounds i32, ptr %3, i64 %19
  %954 = load i32, ptr %953, align 4, !tbaa !6
  %955 = icmp eq i32 %954, 0
  %956 = icmp sgt i32 %5, 0
  br i1 %955, label %966, label %957

957:                                              ; preds = %952
  br i1 %956, label %958, label %3085

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %1109

966:                                              ; preds = %952
  br i1 %956, label %967, label %3085

967:                                              ; preds = %966
  %968 = icmp sgt i32 %13, 1
  %969 = icmp sgt i32 %13, 0
  %970 = add i32 %13, -2
  %971 = zext i32 %970 to i64
  %972 = zext i32 %13 to i64
  %973 = add nuw i32 %5, 1
  %974 = icmp eq i32 %13, 1
  br label %975

975:                                              ; preds = %967, %1107
  %976 = phi i32 [ 0, %967 ], [ %1059, %1107 ]
  %977 = phi double [ 0.000000e+00, %967 ], [ %1058, %1107 ]
  %978 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %968, label %979, label %1048

979:                                              ; preds = %975, %1038
  %980 = phi i32 [ %1047, %1038 ], [ 0, %975 ]
  %981 = phi i64 [ %989, %1038 ], [ %972, %975 ]
  %982 = phi i64 [ %1046, %1038 ], [ %971, %975 ]
  %983 = phi i32 [ %1044, %1038 ], [ %978, %975 ]
  %984 = sub i32 %970, %980
  %985 = tail call i32 @llvm.smin.i32(i32 %984, i32 0)
  %986 = sub i32 %984, %985
  %987 = zext i32 %986 to i64
  %988 = add nuw nsw i64 %987, 1
  %989 = add nsw i64 %981, -1
  %990 = icmp ult i32 %986, 31
  br i1 %990, label %1026, label %991

991:                                              ; preds = %979
  %992 = and i64 %988, 8589934560
  %993 = sub i64 %982, %992
  br label %994

994:                                              ; preds = %994, %991
  %995 = phi i64 [ 0, %991 ], [ %1018, %994 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1014, %994 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1015, %994 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1016, %994 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1017, %994 ]
  %1000 = sub i64 %982, %995
  %1001 = getelementptr inbounds i32, ptr %9, i64 %1000
  %1002 = getelementptr inbounds i32, ptr %1001, i64 -7
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !6
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = getelementptr inbounds i32, ptr %1001, i64 -15
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !6
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %1001, i64 -23
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !6
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = getelementptr inbounds i32, ptr %1001, i64 -31
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !6
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = mul <8 x i32> %1004, %996
  %1015 = mul <8 x i32> %1007, %997
  %1016 = mul <8 x i32> %1010, %998
  %1017 = mul <8 x i32> %1013, %999
  %1018 = add nuw i64 %995, 32
  %1019 = icmp eq i64 %1018, %992
  br i1 %1019, label %1020, label %994, !llvm.loop !515

1020:                                             ; preds = %994
  %1021 = mul <8 x i32> %1015, %1014
  %1022 = mul <8 x i32> %1016, %1021
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1023)
  %1025 = icmp eq i64 %988, %992
  br i1 %1025, label %1038, label %1026

1026:                                             ; preds = %979, %1020
  %1027 = phi i64 [ %982, %979 ], [ %993, %1020 ]
  %1028 = phi i32 [ 1, %979 ], [ %1024, %1020 ]
  br label %1029

1029:                                             ; preds = %1026, %1029
  %1030 = phi i64 [ %1035, %1029 ], [ %1027, %1026 ]
  %1031 = phi i32 [ %1034, %1029 ], [ %1028, %1026 ]
  %1032 = getelementptr inbounds i32, ptr %9, i64 %1030
  %1033 = load i32, ptr %1032, align 4, !tbaa !6
  %1034 = mul nsw i32 %1033, %1031
  %1035 = add nsw i64 %1030, -1
  %1036 = trunc i64 %1030 to i32
  %1037 = icmp sgt i32 %1036, 0
  br i1 %1037, label %1029, label %1038, !llvm.loop !516

1038:                                             ; preds = %1029, %1020
  %1039 = phi i32 [ %1024, %1020 ], [ %1034, %1029 ]
  %1040 = and i64 %989, 4294967295
  %1041 = getelementptr inbounds i32, ptr %6, i64 %1040
  %1042 = load i32, ptr %1041, align 4, !tbaa !6
  %1043 = mul nsw i32 %1042, %1039
  %1044 = add nsw i32 %1043, %983
  %1045 = icmp sgt i64 %981, 2
  %1046 = add nsw i64 %982, -1
  %1047 = add i32 %980, 1
  br i1 %1045, label %979, label %1048, !llvm.loop !517

1048:                                             ; preds = %1038, %975
  %1049 = phi i32 [ %978, %975 ], [ %1044, %1038 ]
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds i16, ptr %639, i64 %1050
  %1052 = load i16, ptr %1051, align 2, !tbaa !79
  %1053 = sext i16 %1052 to i32
  %1054 = load i32, ptr %641, align 4, !tbaa !6
  %1055 = mul nsw i32 %1053, %1053
  %1056 = mul i32 %1055, %1055
  %1057 = add nsw i32 %1056, %1054
  store i32 %1057, ptr %641, align 4, !tbaa !6
  %1058 = fadd fast double %977, 1.000000e+00
  %1059 = add nuw nsw i32 %976, 1
  br i1 %969, label %1060, label %1107

1060:                                             ; preds = %1048
  %1061 = load i32, ptr %4, align 4, !tbaa !6
  %1062 = load i32, ptr %12, align 4, !tbaa !6
  %1063 = add nsw i32 %1062, -1
  %1064 = icmp slt i32 %1061, %1063
  br i1 %1064, label %1084, label %1065

1065:                                             ; preds = %1060
  %1066 = icmp eq i32 %1061, %1063
  br i1 %1066, label %1067, label %1100

1067:                                             ; preds = %1065
  store i32 0, ptr %4, align 4, !tbaa !6
  %1068 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1068, ptr %6, align 4, !tbaa !6
  br i1 %974, label %1107, label %1069

1069:                                             ; preds = %1067, %1094
  %1070 = phi i64 [ %1098, %1094 ], [ 1, %1067 ]
  %1071 = getelementptr inbounds i32, ptr %4, i64 %1070
  %1072 = load i32, ptr %1071, align 4, !tbaa !6
  %1073 = getelementptr inbounds i32, ptr %12, i64 %1070
  %1074 = load i32, ptr %1073, align 4, !tbaa !6
  %1075 = add nsw i32 %1074, -1
  %1076 = icmp slt i32 %1072, %1075
  br i1 %1076, label %1077, label %1092

1077:                                             ; preds = %1069
  br i1 %1064, label %1084, label %1078

1078:                                             ; preds = %1077
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1070
  %1080 = load i32, ptr %1079, align 4, !tbaa !6
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1070
  %1082 = load i32, ptr %1081, align 4, !tbaa !6
  %1083 = add nsw i32 %1082, %1080
  store i32 %1083, ptr %1081, align 4, !tbaa !6
  br label %1102

1084:                                             ; preds = %1060, %1077
  %1085 = phi i32 [ %1072, %1077 ], [ %1061, %1060 ]
  %1086 = phi ptr [ %1071, %1077 ], [ %4, %1060 ]
  %1087 = phi i64 [ %1070, %1077 ], [ 0, %1060 ]
  %1088 = add nsw i32 %1085, 1
  store i32 %1088, ptr %1086, align 4, !tbaa !6
  %1089 = getelementptr inbounds i32, ptr %7, i64 %1087
  %1090 = load i32, ptr %1089, align 4, !tbaa !6
  %1091 = getelementptr inbounds i32, ptr %6, i64 %1087
  br label %1102

1092:                                             ; preds = %1069
  %1093 = icmp eq i32 %1072, %1075
  br i1 %1093, label %1094, label %1100

1094:                                             ; preds = %1092
  store i32 0, ptr %1071, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %8, i64 %1070
  %1096 = load i32, ptr %1095, align 4, !tbaa !6
  %1097 = getelementptr inbounds i32, ptr %6, i64 %1070
  store i32 %1096, ptr %1097, align 4, !tbaa !6
  %1098 = add nuw nsw i64 %1070, 1
  %1099 = icmp eq i64 %1098, %972
  br i1 %1099, label %1107, label %1069, !llvm.loop !518

1100:                                             ; preds = %1065, %1092
  %1101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1102:                                             ; preds = %1078, %1084
  %1103 = phi ptr [ %1091, %1084 ], [ %1071, %1078 ]
  %1104 = phi i32 [ %1090, %1084 ], [ 1, %1078 ]
  %1105 = load i32, ptr %1103, align 4, !tbaa !6
  %1106 = add nsw i32 %1105, %1104
  store i32 %1106, ptr %1103, align 4, !tbaa !6
  br label %1107

1107:                                             ; preds = %1094, %1102, %1067, %1048
  %1108 = icmp eq i32 %1059, %5
  br i1 %1108, label %3085, label %975, !llvm.loop !519

1109:                                             ; preds = %958, %1246
  %1110 = phi i32 [ 0, %958 ], [ %1195, %1246 ]
  %1111 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %959, label %1112, label %1181

1112:                                             ; preds = %1109, %1171
  %1113 = phi i32 [ %1180, %1171 ], [ 0, %1109 ]
  %1114 = phi i64 [ %1122, %1171 ], [ %963, %1109 ]
  %1115 = phi i64 [ %1179, %1171 ], [ %962, %1109 ]
  %1116 = phi i32 [ %1177, %1171 ], [ %1111, %1109 ]
  %1117 = sub i32 %961, %1113
  %1118 = tail call i32 @llvm.smin.i32(i32 %1117, i32 0)
  %1119 = sub i32 %1117, %1118
  %1120 = zext i32 %1119 to i64
  %1121 = add nuw nsw i64 %1120, 1
  %1122 = add nsw i64 %1114, -1
  %1123 = icmp ult i32 %1119, 31
  br i1 %1123, label %1159, label %1124

1124:                                             ; preds = %1112
  %1125 = and i64 %1121, 8589934560
  %1126 = sub i64 %1115, %1125
  br label %1127

1127:                                             ; preds = %1127, %1124
  %1128 = phi i64 [ 0, %1124 ], [ %1151, %1127 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1124 ], [ %1147, %1127 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1124 ], [ %1148, %1127 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1124 ], [ %1149, %1127 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1124 ], [ %1150, %1127 ]
  %1133 = sub i64 %1115, %1128
  %1134 = getelementptr inbounds i32, ptr %11, i64 %1133
  %1135 = getelementptr inbounds i32, ptr %1134, i64 -7
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !6
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = getelementptr inbounds i32, ptr %1134, i64 -15
  %1139 = load <8 x i32>, ptr %1138, align 4, !tbaa !6
  %1140 = shufflevector <8 x i32> %1139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1141 = getelementptr inbounds i32, ptr %1134, i64 -23
  %1142 = load <8 x i32>, ptr %1141, align 4, !tbaa !6
  %1143 = shufflevector <8 x i32> %1142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1144 = getelementptr inbounds i32, ptr %1134, i64 -31
  %1145 = load <8 x i32>, ptr %1144, align 4, !tbaa !6
  %1146 = shufflevector <8 x i32> %1145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1147 = mul <8 x i32> %1137, %1129
  %1148 = mul <8 x i32> %1140, %1130
  %1149 = mul <8 x i32> %1143, %1131
  %1150 = mul <8 x i32> %1146, %1132
  %1151 = add nuw i64 %1128, 32
  %1152 = icmp eq i64 %1151, %1125
  br i1 %1152, label %1153, label %1127, !llvm.loop !520

1153:                                             ; preds = %1127
  %1154 = mul <8 x i32> %1148, %1147
  %1155 = mul <8 x i32> %1149, %1154
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1156)
  %1158 = icmp eq i64 %1121, %1125
  br i1 %1158, label %1171, label %1159

1159:                                             ; preds = %1112, %1153
  %1160 = phi i64 [ %1115, %1112 ], [ %1126, %1153 ]
  %1161 = phi i32 [ 1, %1112 ], [ %1157, %1153 ]
  br label %1162

1162:                                             ; preds = %1159, %1162
  %1163 = phi i64 [ %1168, %1162 ], [ %1160, %1159 ]
  %1164 = phi i32 [ %1167, %1162 ], [ %1161, %1159 ]
  %1165 = getelementptr inbounds i32, ptr %11, i64 %1163
  %1166 = load i32, ptr %1165, align 4, !tbaa !6
  %1167 = mul nsw i32 %1166, %1164
  %1168 = add nsw i64 %1163, -1
  %1169 = trunc i64 %1163 to i32
  %1170 = icmp sgt i32 %1169, 0
  br i1 %1170, label %1162, label %1171, !llvm.loop !521

1171:                                             ; preds = %1162, %1153
  %1172 = phi i32 [ %1157, %1153 ], [ %1167, %1162 ]
  %1173 = and i64 %1122, 4294967295
  %1174 = getelementptr inbounds i32, ptr %6, i64 %1173
  %1175 = load i32, ptr %1174, align 4, !tbaa !6
  %1176 = mul nsw i32 %1175, %1172
  %1177 = add nsw i32 %1176, %1116
  %1178 = icmp sgt i64 %1114, 2
  %1179 = add nsw i64 %1115, -1
  %1180 = add i32 %1113, 1
  br i1 %1178, label %1112, label %1181, !llvm.loop !522

1181:                                             ; preds = %1171, %1109
  %1182 = phi i32 [ %1111, %1109 ], [ %1177, %1171 ]
  %1183 = icmp slt i32 %1182, %5
  br i1 %1183, label %1186, label %1184

1184:                                             ; preds = %1181
  %1185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

1186:                                             ; preds = %1181
  %1187 = sext i32 %1182 to i64
  %1188 = getelementptr inbounds i16, ptr %639, i64 %1187
  %1189 = load i16, ptr %1188, align 2, !tbaa !79
  %1190 = sext i16 %1189 to i32
  %1191 = load i32, ptr %641, align 4, !tbaa !6
  %1192 = mul nsw i32 %1190, %1190
  %1193 = mul i32 %1192, %1192
  %1194 = add nsw i32 %1193, %1191
  store i32 %1194, ptr %641, align 4, !tbaa !6
  %1195 = add nuw nsw i32 %1110, 1
  br i1 %960, label %1196, label %1246

1196:                                             ; preds = %1186
  %1197 = load i32, ptr %4, align 4, !tbaa !6
  %1198 = load i32, ptr %12, align 4, !tbaa !6
  %1199 = add nsw i32 %1198, -1
  %1200 = icmp slt i32 %1197, %1199
  br i1 %1200, label %1223, label %1201

1201:                                             ; preds = %1196
  %1202 = icmp eq i32 %1197, %1199
  br i1 %1202, label %1203, label %1239

1203:                                             ; preds = %1201
  store i32 0, ptr %4, align 4, !tbaa !6
  %1204 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1204, ptr %6, align 4, !tbaa !6
  br i1 %965, label %1246, label %1205

1205:                                             ; preds = %1203, %1233
  %1206 = phi i64 [ %1237, %1233 ], [ 1, %1203 ]
  %1207 = getelementptr inbounds i32, ptr %4, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !6
  %1209 = getelementptr inbounds i32, ptr %12, i64 %1206
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = add nsw i32 %1210, -1
  %1212 = icmp slt i32 %1208, %1211
  br i1 %1212, label %1213, label %1231

1213:                                             ; preds = %1205
  br i1 %1200, label %1223, label %1214

1214:                                             ; preds = %1213
  %1215 = shl i64 %1206, 32
  %1216 = add i64 %1215, -4294967296
  %1217 = ashr exact i64 %1216, 32
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1219 = load i32, ptr %1218, align 4, !tbaa !6
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1206
  %1221 = load i32, ptr %1220, align 4, !tbaa !6
  %1222 = add nsw i32 %1221, %1219
  store i32 %1222, ptr %1220, align 4, !tbaa !6
  br label %1241

1223:                                             ; preds = %1196, %1213
  %1224 = phi i32 [ %1208, %1213 ], [ %1197, %1196 ]
  %1225 = phi ptr [ %1207, %1213 ], [ %4, %1196 ]
  %1226 = phi i64 [ %1206, %1213 ], [ 0, %1196 ]
  %1227 = add nsw i32 %1224, 1
  store i32 %1227, ptr %1225, align 4, !tbaa !6
  %1228 = getelementptr inbounds i32, ptr %7, i64 %1226
  %1229 = load i32, ptr %1228, align 4, !tbaa !6
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1226
  br label %1241

1231:                                             ; preds = %1205
  %1232 = icmp eq i32 %1208, %1211
  br i1 %1232, label %1233, label %1239

1233:                                             ; preds = %1231
  store i32 0, ptr %1207, align 4, !tbaa !6
  %1234 = getelementptr inbounds i32, ptr %8, i64 %1206
  %1235 = load i32, ptr %1234, align 4, !tbaa !6
  %1236 = getelementptr inbounds i32, ptr %6, i64 %1206
  store i32 %1235, ptr %1236, align 4, !tbaa !6
  %1237 = add nuw nsw i64 %1206, 1
  %1238 = icmp eq i64 %1237, %963
  br i1 %1238, label %1246, label %1205, !llvm.loop !523

1239:                                             ; preds = %1201, %1231
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1241:                                             ; preds = %1214, %1223
  %1242 = phi ptr [ %1230, %1223 ], [ %1207, %1214 ]
  %1243 = phi i32 [ %1229, %1223 ], [ 1, %1214 ]
  %1244 = load i32, ptr %1242, align 4, !tbaa !6
  %1245 = add nsw i32 %1244, %1243
  store i32 %1245, ptr %1242, align 4, !tbaa !6
  br label %1246

1246:                                             ; preds = %1233, %1241, %1203, %1186
  %1247 = icmp eq i32 %1195, %5
  br i1 %1247, label %3085, label %1109, !llvm.loop !524

1248:                                             ; preds = %648
  %1249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3085

1250:                                             ; preds = %18
  %1251 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1252 = load ptr, ptr %1251, align 8, !tbaa !10
  %1253 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1254 = load ptr, ptr %1253, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1254, align 8, !tbaa !19
  %1255 = icmp eq i32 %13, 0
  br i1 %1255, label %1256, label %1261

1256:                                             ; preds = %1250
  %1257 = load i16, ptr %1252, align 2, !tbaa !79
  %1258 = sitofp i16 %1257 to double
  %1259 = fmul fast double %1258, %1258
  %1260 = fmul fast double %1259, %1259
  store double %1260, ptr %1254, align 8, !tbaa !19
  br label %3085

1261:                                             ; preds = %1250
  switch i32 %1, label %1857 [
    i32 1, label %1262
    i32 0, label %1561
  ]

1262:                                             ; preds = %1261
  %1263 = getelementptr inbounds i32, ptr %3, i64 %19
  %1264 = load i32, ptr %1263, align 4, !tbaa !6
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp sgt i32 %5, 0
  br i1 %1265, label %1276, label %1267

1267:                                             ; preds = %1262
  br i1 %1266, label %1268, label %3085

1268:                                             ; preds = %1267
  %1269 = icmp sgt i32 %13, 1
  %1270 = icmp sgt i32 %13, 0
  %1271 = add i32 %13, -2
  %1272 = zext i32 %1271 to i64
  %1273 = zext i32 %13 to i64
  %1274 = add nuw i32 %5, 1
  %1275 = icmp eq i32 %13, 1
  br label %1422

1276:                                             ; preds = %1262
  br i1 %1266, label %1277, label %3085

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1285

1285:                                             ; preds = %1277, %1420
  %1286 = phi double [ 0.000000e+00, %1277 ], [ %1370, %1420 ]
  %1287 = phi i32 [ 0, %1277 ], [ %1372, %1420 ]
  %1288 = phi double [ 0.000000e+00, %1277 ], [ %1371, %1420 ]
  %1289 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1278, label %1290, label %1359

1290:                                             ; preds = %1285, %1349
  %1291 = phi i32 [ %1358, %1349 ], [ 0, %1285 ]
  %1292 = phi i64 [ %1300, %1349 ], [ %1282, %1285 ]
  %1293 = phi i64 [ %1357, %1349 ], [ %1281, %1285 ]
  %1294 = phi i32 [ %1355, %1349 ], [ %1289, %1285 ]
  %1295 = sub i32 %1280, %1291
  %1296 = tail call i32 @llvm.smin.i32(i32 %1295, i32 0)
  %1297 = sub i32 %1295, %1296
  %1298 = zext i32 %1297 to i64
  %1299 = add nuw nsw i64 %1298, 1
  %1300 = add nsw i64 %1292, -1
  %1301 = icmp ult i32 %1297, 31
  br i1 %1301, label %1337, label %1302

1302:                                             ; preds = %1290
  %1303 = and i64 %1299, 8589934560
  %1304 = sub i64 %1293, %1303
  br label %1305

1305:                                             ; preds = %1305, %1302
  %1306 = phi i64 [ 0, %1302 ], [ %1329, %1305 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1325, %1305 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1326, %1305 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1327, %1305 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1328, %1305 ]
  %1311 = sub i64 %1293, %1306
  %1312 = getelementptr inbounds i32, ptr %9, i64 %1311
  %1313 = getelementptr inbounds i32, ptr %1312, i64 -7
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !6
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1312, i64 -15
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1312, i64 -23
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1312, i64 -31
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = mul <8 x i32> %1315, %1307
  %1326 = mul <8 x i32> %1318, %1308
  %1327 = mul <8 x i32> %1321, %1309
  %1328 = mul <8 x i32> %1324, %1310
  %1329 = add nuw i64 %1306, 32
  %1330 = icmp eq i64 %1329, %1303
  br i1 %1330, label %1331, label %1305, !llvm.loop !525

1331:                                             ; preds = %1305
  %1332 = mul <8 x i32> %1326, %1325
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = mul <8 x i32> %1328, %1333
  %1335 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1334)
  %1336 = icmp eq i64 %1299, %1303
  br i1 %1336, label %1349, label %1337

1337:                                             ; preds = %1290, %1331
  %1338 = phi i64 [ %1293, %1290 ], [ %1304, %1331 ]
  %1339 = phi i32 [ 1, %1290 ], [ %1335, %1331 ]
  br label %1340

1340:                                             ; preds = %1337, %1340
  %1341 = phi i64 [ %1346, %1340 ], [ %1338, %1337 ]
  %1342 = phi i32 [ %1345, %1340 ], [ %1339, %1337 ]
  %1343 = getelementptr inbounds i32, ptr %9, i64 %1341
  %1344 = load i32, ptr %1343, align 4, !tbaa !6
  %1345 = mul nsw i32 %1344, %1342
  %1346 = add nsw i64 %1341, -1
  %1347 = trunc i64 %1341 to i32
  %1348 = icmp sgt i32 %1347, 0
  br i1 %1348, label %1340, label %1349, !llvm.loop !526

1349:                                             ; preds = %1340, %1331
  %1350 = phi i32 [ %1335, %1331 ], [ %1345, %1340 ]
  %1351 = and i64 %1300, 4294967295
  %1352 = getelementptr inbounds i32, ptr %6, i64 %1351
  %1353 = load i32, ptr %1352, align 4, !tbaa !6
  %1354 = mul nsw i32 %1353, %1350
  %1355 = add nsw i32 %1354, %1294
  %1356 = icmp sgt i64 %1292, 2
  %1357 = add nsw i64 %1293, -1
  %1358 = add i32 %1291, 1
  br i1 %1356, label %1290, label %1359, !llvm.loop !527

1359:                                             ; preds = %1349, %1285
  %1360 = phi i32 [ %1289, %1285 ], [ %1355, %1349 ]
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds double, ptr %2, i64 %1361
  %1363 = load double, ptr %1362, align 8, !tbaa !19
  %1364 = getelementptr inbounds i16, ptr %1252, i64 %1361
  %1365 = load i16, ptr %1364, align 2, !tbaa !79
  %1366 = sitofp i16 %1365 to double
  %1367 = fmul fast double %1363, %1366
  %1368 = fmul fast double %1367, %1367
  %1369 = fmul fast double %1368, %1368
  %1370 = fadd fast double %1369, %1286
  store double %1370, ptr %1254, align 8, !tbaa !19
  %1371 = fadd fast double %1363, %1288
  %1372 = add nuw nsw i32 %1287, 1
  br i1 %1279, label %1373, label %1420

1373:                                             ; preds = %1359
  %1374 = load i32, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %12, align 4, !tbaa !6
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1374, %1376
  br i1 %1377, label %1397, label %1378

1378:                                             ; preds = %1373
  %1379 = icmp eq i32 %1374, %1376
  br i1 %1379, label %1380, label %1413

1380:                                             ; preds = %1378
  store i32 0, ptr %4, align 4, !tbaa !6
  %1381 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1381, ptr %6, align 4, !tbaa !6
  br i1 %1284, label %1420, label %1382

1382:                                             ; preds = %1380, %1407
  %1383 = phi i64 [ %1411, %1407 ], [ 1, %1380 ]
  %1384 = getelementptr inbounds i32, ptr %4, i64 %1383
  %1385 = load i32, ptr %1384, align 4, !tbaa !6
  %1386 = getelementptr inbounds i32, ptr %12, i64 %1383
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = add nsw i32 %1387, -1
  %1389 = icmp slt i32 %1385, %1388
  br i1 %1389, label %1390, label %1405

1390:                                             ; preds = %1382
  br i1 %1377, label %1397, label %1391

1391:                                             ; preds = %1390
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1383
  %1393 = load i32, ptr %1392, align 4, !tbaa !6
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1383
  %1395 = load i32, ptr %1394, align 4, !tbaa !6
  %1396 = add nsw i32 %1395, %1393
  store i32 %1396, ptr %1394, align 4, !tbaa !6
  br label %1415

1397:                                             ; preds = %1373, %1390
  %1398 = phi i32 [ %1385, %1390 ], [ %1374, %1373 ]
  %1399 = phi ptr [ %1384, %1390 ], [ %4, %1373 ]
  %1400 = phi i64 [ %1383, %1390 ], [ 0, %1373 ]
  %1401 = add nsw i32 %1398, 1
  store i32 %1401, ptr %1399, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %7, i64 %1400
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1400
  br label %1415

1405:                                             ; preds = %1382
  %1406 = icmp eq i32 %1385, %1388
  br i1 %1406, label %1407, label %1413

1407:                                             ; preds = %1405
  store i32 0, ptr %1384, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %8, i64 %1383
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1383
  store i32 %1409, ptr %1410, align 4, !tbaa !6
  %1411 = add nuw nsw i64 %1383, 1
  %1412 = icmp eq i64 %1411, %1282
  br i1 %1412, label %1420, label %1382, !llvm.loop !528

1413:                                             ; preds = %1378, %1405
  %1414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1415:                                             ; preds = %1391, %1397
  %1416 = phi ptr [ %1404, %1397 ], [ %1384, %1391 ]
  %1417 = phi i32 [ %1403, %1397 ], [ 1, %1391 ]
  %1418 = load i32, ptr %1416, align 4, !tbaa !6
  %1419 = add nsw i32 %1418, %1417
  store i32 %1419, ptr %1416, align 4, !tbaa !6
  br label %1420

1420:                                             ; preds = %1407, %1415, %1380, %1359
  %1421 = icmp eq i32 %1372, %5
  br i1 %1421, label %3085, label %1285, !llvm.loop !529

1422:                                             ; preds = %1268, %1559
  %1423 = phi double [ 0.000000e+00, %1268 ], [ %1507, %1559 ]
  %1424 = phi i32 [ 0, %1268 ], [ %1508, %1559 ]
  %1425 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1269, label %1426, label %1495

1426:                                             ; preds = %1422, %1485
  %1427 = phi i32 [ %1494, %1485 ], [ 0, %1422 ]
  %1428 = phi i64 [ %1436, %1485 ], [ %1273, %1422 ]
  %1429 = phi i64 [ %1493, %1485 ], [ %1272, %1422 ]
  %1430 = phi i32 [ %1491, %1485 ], [ %1425, %1422 ]
  %1431 = sub i32 %1271, %1427
  %1432 = tail call i32 @llvm.smin.i32(i32 %1431, i32 0)
  %1433 = sub i32 %1431, %1432
  %1434 = zext i32 %1433 to i64
  %1435 = add nuw nsw i64 %1434, 1
  %1436 = add nsw i64 %1428, -1
  %1437 = icmp ult i32 %1433, 31
  br i1 %1437, label %1473, label %1438

1438:                                             ; preds = %1426
  %1439 = and i64 %1435, 8589934560
  %1440 = sub i64 %1429, %1439
  br label %1441

1441:                                             ; preds = %1441, %1438
  %1442 = phi i64 [ 0, %1438 ], [ %1465, %1441 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1461, %1441 ]
  %1444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1462, %1441 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1463, %1441 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1464, %1441 ]
  %1447 = sub i64 %1429, %1442
  %1448 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1449 = getelementptr inbounds i32, ptr %1448, i64 -7
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !6
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1448, i64 -15
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1448, i64 -23
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1448, i64 -31
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = mul <8 x i32> %1451, %1443
  %1462 = mul <8 x i32> %1454, %1444
  %1463 = mul <8 x i32> %1457, %1445
  %1464 = mul <8 x i32> %1460, %1446
  %1465 = add nuw i64 %1442, 32
  %1466 = icmp eq i64 %1465, %1439
  br i1 %1466, label %1467, label %1441, !llvm.loop !530

1467:                                             ; preds = %1441
  %1468 = mul <8 x i32> %1462, %1461
  %1469 = mul <8 x i32> %1463, %1468
  %1470 = mul <8 x i32> %1464, %1469
  %1471 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1470)
  %1472 = icmp eq i64 %1435, %1439
  br i1 %1472, label %1485, label %1473

1473:                                             ; preds = %1426, %1467
  %1474 = phi i64 [ %1429, %1426 ], [ %1440, %1467 ]
  %1475 = phi i32 [ 1, %1426 ], [ %1471, %1467 ]
  br label %1476

1476:                                             ; preds = %1473, %1476
  %1477 = phi i64 [ %1482, %1476 ], [ %1474, %1473 ]
  %1478 = phi i32 [ %1481, %1476 ], [ %1475, %1473 ]
  %1479 = getelementptr inbounds i32, ptr %11, i64 %1477
  %1480 = load i32, ptr %1479, align 4, !tbaa !6
  %1481 = mul nsw i32 %1480, %1478
  %1482 = add nsw i64 %1477, -1
  %1483 = trunc i64 %1477 to i32
  %1484 = icmp sgt i32 %1483, 0
  br i1 %1484, label %1476, label %1485, !llvm.loop !531

1485:                                             ; preds = %1476, %1467
  %1486 = phi i32 [ %1471, %1467 ], [ %1481, %1476 ]
  %1487 = and i64 %1436, 4294967295
  %1488 = getelementptr inbounds i32, ptr %6, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !6
  %1490 = mul nsw i32 %1489, %1486
  %1491 = add nsw i32 %1490, %1430
  %1492 = icmp sgt i64 %1428, 2
  %1493 = add nsw i64 %1429, -1
  %1494 = add i32 %1427, 1
  br i1 %1492, label %1426, label %1495, !llvm.loop !532

1495:                                             ; preds = %1485, %1422
  %1496 = phi i32 [ %1425, %1422 ], [ %1491, %1485 ]
  %1497 = icmp slt i32 %1496, %5
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1495
  %1499 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

1500:                                             ; preds = %1495
  %1501 = sext i32 %1496 to i64
  %1502 = getelementptr inbounds i16, ptr %1252, i64 %1501
  %1503 = load i16, ptr %1502, align 2, !tbaa !79
  %1504 = sitofp i16 %1503 to double
  %1505 = fmul fast double %1504, %1504
  %1506 = fmul fast double %1505, %1505
  %1507 = fadd fast double %1506, %1423
  store double %1507, ptr %1254, align 8, !tbaa !19
  %1508 = add nuw nsw i32 %1424, 1
  br i1 %1270, label %1509, label %1559

1509:                                             ; preds = %1500
  %1510 = load i32, ptr %4, align 4, !tbaa !6
  %1511 = load i32, ptr %12, align 4, !tbaa !6
  %1512 = add nsw i32 %1511, -1
  %1513 = icmp slt i32 %1510, %1512
  br i1 %1513, label %1536, label %1514

1514:                                             ; preds = %1509
  %1515 = icmp eq i32 %1510, %1512
  br i1 %1515, label %1516, label %1552

1516:                                             ; preds = %1514
  store i32 0, ptr %4, align 4, !tbaa !6
  %1517 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1517, ptr %6, align 4, !tbaa !6
  br i1 %1275, label %1559, label %1518

1518:                                             ; preds = %1516, %1546
  %1519 = phi i64 [ %1550, %1546 ], [ 1, %1516 ]
  %1520 = getelementptr inbounds i32, ptr %4, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !6
  %1522 = getelementptr inbounds i32, ptr %12, i64 %1519
  %1523 = load i32, ptr %1522, align 4, !tbaa !6
  %1524 = add nsw i32 %1523, -1
  %1525 = icmp slt i32 %1521, %1524
  br i1 %1525, label %1526, label %1544

1526:                                             ; preds = %1518
  br i1 %1513, label %1536, label %1527

1527:                                             ; preds = %1526
  %1528 = shl i64 %1519, 32
  %1529 = add i64 %1528, -4294967296
  %1530 = ashr exact i64 %1529, 32
  %1531 = getelementptr inbounds i32, ptr %7, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !6
  %1533 = getelementptr inbounds i32, ptr %6, i64 %1519
  %1534 = load i32, ptr %1533, align 4, !tbaa !6
  %1535 = add nsw i32 %1534, %1532
  store i32 %1535, ptr %1533, align 4, !tbaa !6
  br label %1554

1536:                                             ; preds = %1509, %1526
  %1537 = phi i32 [ %1521, %1526 ], [ %1510, %1509 ]
  %1538 = phi ptr [ %1520, %1526 ], [ %4, %1509 ]
  %1539 = phi i64 [ %1519, %1526 ], [ 0, %1509 ]
  %1540 = add nsw i32 %1537, 1
  store i32 %1540, ptr %1538, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %7, i64 %1539
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1539
  br label %1554

1544:                                             ; preds = %1518
  %1545 = icmp eq i32 %1521, %1524
  br i1 %1545, label %1546, label %1552

1546:                                             ; preds = %1544
  store i32 0, ptr %1520, align 4, !tbaa !6
  %1547 = getelementptr inbounds i32, ptr %8, i64 %1519
  %1548 = load i32, ptr %1547, align 4, !tbaa !6
  %1549 = getelementptr inbounds i32, ptr %6, i64 %1519
  store i32 %1548, ptr %1549, align 4, !tbaa !6
  %1550 = add nuw nsw i64 %1519, 1
  %1551 = icmp eq i64 %1550, %1273
  br i1 %1551, label %1559, label %1518, !llvm.loop !533

1552:                                             ; preds = %1514, %1544
  %1553 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1554:                                             ; preds = %1527, %1536
  %1555 = phi ptr [ %1543, %1536 ], [ %1520, %1527 ]
  %1556 = phi i32 [ %1542, %1536 ], [ 1, %1527 ]
  %1557 = load i32, ptr %1555, align 4, !tbaa !6
  %1558 = add nsw i32 %1557, %1556
  store i32 %1558, ptr %1555, align 4, !tbaa !6
  br label %1559

1559:                                             ; preds = %1546, %1554, %1516, %1500
  %1560 = icmp eq i32 %1508, %5
  br i1 %1560, label %3085, label %1422, !llvm.loop !534

1561:                                             ; preds = %1261
  %1562 = getelementptr inbounds i32, ptr %3, i64 %19
  %1563 = load i32, ptr %1562, align 4, !tbaa !6
  %1564 = icmp eq i32 %1563, 0
  %1565 = icmp sgt i32 %5, 0
  br i1 %1564, label %1575, label %1566

1566:                                             ; preds = %1561
  br i1 %1565, label %1567, label %3085

1567:                                             ; preds = %1566
  %1568 = icmp sgt i32 %13, 1
  %1569 = icmp sgt i32 %13, 0
  %1570 = add i32 %13, -2
  %1571 = zext i32 %1570 to i64
  %1572 = zext i32 %13 to i64
  %1573 = add nuw i32 %5, 1
  %1574 = icmp eq i32 %13, 1
  br label %1718

1575:                                             ; preds = %1561
  br i1 %1565, label %1576, label %3085

1576:                                             ; preds = %1575
  %1577 = icmp sgt i32 %13, 1
  %1578 = icmp sgt i32 %13, 0
  %1579 = add i32 %13, -2
  %1580 = zext i32 %1579 to i64
  %1581 = zext i32 %13 to i64
  %1582 = add nuw i32 %5, 1
  %1583 = icmp eq i32 %13, 1
  br label %1584

1584:                                             ; preds = %1576, %1716
  %1585 = phi double [ 0.000000e+00, %1576 ], [ %1666, %1716 ]
  %1586 = phi i32 [ 0, %1576 ], [ %1668, %1716 ]
  %1587 = phi double [ 0.000000e+00, %1576 ], [ %1667, %1716 ]
  %1588 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1577, label %1589, label %1658

1589:                                             ; preds = %1584, %1648
  %1590 = phi i32 [ %1657, %1648 ], [ 0, %1584 ]
  %1591 = phi i64 [ %1599, %1648 ], [ %1581, %1584 ]
  %1592 = phi i64 [ %1656, %1648 ], [ %1580, %1584 ]
  %1593 = phi i32 [ %1654, %1648 ], [ %1588, %1584 ]
  %1594 = sub i32 %1579, %1590
  %1595 = tail call i32 @llvm.smin.i32(i32 %1594, i32 0)
  %1596 = sub i32 %1594, %1595
  %1597 = zext i32 %1596 to i64
  %1598 = add nuw nsw i64 %1597, 1
  %1599 = add nsw i64 %1591, -1
  %1600 = icmp ult i32 %1596, 31
  br i1 %1600, label %1636, label %1601

1601:                                             ; preds = %1589
  %1602 = and i64 %1598, 8589934560
  %1603 = sub i64 %1592, %1602
  br label %1604

1604:                                             ; preds = %1604, %1601
  %1605 = phi i64 [ 0, %1601 ], [ %1628, %1604 ]
  %1606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1624, %1604 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1625, %1604 ]
  %1608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1626, %1604 ]
  %1609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1627, %1604 ]
  %1610 = sub i64 %1592, %1605
  %1611 = getelementptr inbounds i32, ptr %9, i64 %1610
  %1612 = getelementptr inbounds i32, ptr %1611, i64 -7
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !6
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = getelementptr inbounds i32, ptr %1611, i64 -15
  %1616 = load <8 x i32>, ptr %1615, align 4, !tbaa !6
  %1617 = shufflevector <8 x i32> %1616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1618 = getelementptr inbounds i32, ptr %1611, i64 -23
  %1619 = load <8 x i32>, ptr %1618, align 4, !tbaa !6
  %1620 = shufflevector <8 x i32> %1619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1621 = getelementptr inbounds i32, ptr %1611, i64 -31
  %1622 = load <8 x i32>, ptr %1621, align 4, !tbaa !6
  %1623 = shufflevector <8 x i32> %1622, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1624 = mul <8 x i32> %1614, %1606
  %1625 = mul <8 x i32> %1617, %1607
  %1626 = mul <8 x i32> %1620, %1608
  %1627 = mul <8 x i32> %1623, %1609
  %1628 = add nuw i64 %1605, 32
  %1629 = icmp eq i64 %1628, %1602
  br i1 %1629, label %1630, label %1604, !llvm.loop !535

1630:                                             ; preds = %1604
  %1631 = mul <8 x i32> %1625, %1624
  %1632 = mul <8 x i32> %1626, %1631
  %1633 = mul <8 x i32> %1627, %1632
  %1634 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1633)
  %1635 = icmp eq i64 %1598, %1602
  br i1 %1635, label %1648, label %1636

1636:                                             ; preds = %1589, %1630
  %1637 = phi i64 [ %1592, %1589 ], [ %1603, %1630 ]
  %1638 = phi i32 [ 1, %1589 ], [ %1634, %1630 ]
  br label %1639

1639:                                             ; preds = %1636, %1639
  %1640 = phi i64 [ %1645, %1639 ], [ %1637, %1636 ]
  %1641 = phi i32 [ %1644, %1639 ], [ %1638, %1636 ]
  %1642 = getelementptr inbounds i32, ptr %9, i64 %1640
  %1643 = load i32, ptr %1642, align 4, !tbaa !6
  %1644 = mul nsw i32 %1643, %1641
  %1645 = add nsw i64 %1640, -1
  %1646 = trunc i64 %1640 to i32
  %1647 = icmp sgt i32 %1646, 0
  br i1 %1647, label %1639, label %1648, !llvm.loop !536

1648:                                             ; preds = %1639, %1630
  %1649 = phi i32 [ %1634, %1630 ], [ %1644, %1639 ]
  %1650 = and i64 %1599, 4294967295
  %1651 = getelementptr inbounds i32, ptr %6, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = mul nsw i32 %1652, %1649
  %1654 = add nsw i32 %1653, %1593
  %1655 = icmp sgt i64 %1591, 2
  %1656 = add nsw i64 %1592, -1
  %1657 = add i32 %1590, 1
  br i1 %1655, label %1589, label %1658, !llvm.loop !537

1658:                                             ; preds = %1648, %1584
  %1659 = phi i32 [ %1588, %1584 ], [ %1654, %1648 ]
  %1660 = sext i32 %1659 to i64
  %1661 = getelementptr inbounds i16, ptr %1252, i64 %1660
  %1662 = load i16, ptr %1661, align 2, !tbaa !79
  %1663 = sitofp i16 %1662 to double
  %1664 = fmul fast double %1663, %1663
  %1665 = fmul fast double %1664, %1664
  %1666 = fadd fast double %1665, %1585
  %1667 = fadd fast double %1587, 1.000000e+00
  %1668 = add nuw nsw i32 %1586, 1
  br i1 %1578, label %1669, label %1716

1669:                                             ; preds = %1658
  %1670 = load i32, ptr %4, align 4, !tbaa !6
  %1671 = load i32, ptr %12, align 4, !tbaa !6
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1670, %1672
  br i1 %1673, label %1693, label %1674

1674:                                             ; preds = %1669
  %1675 = icmp eq i32 %1670, %1672
  br i1 %1675, label %1676, label %1709

1676:                                             ; preds = %1674
  store i32 0, ptr %4, align 4, !tbaa !6
  %1677 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1677, ptr %6, align 4, !tbaa !6
  br i1 %1583, label %1716, label %1678

1678:                                             ; preds = %1676, %1703
  %1679 = phi i64 [ %1707, %1703 ], [ 1, %1676 ]
  %1680 = getelementptr inbounds i32, ptr %4, i64 %1679
  %1681 = load i32, ptr %1680, align 4, !tbaa !6
  %1682 = getelementptr inbounds i32, ptr %12, i64 %1679
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = add nsw i32 %1683, -1
  %1685 = icmp slt i32 %1681, %1684
  br i1 %1685, label %1686, label %1701

1686:                                             ; preds = %1678
  br i1 %1673, label %1693, label %1687

1687:                                             ; preds = %1686
  %1688 = getelementptr inbounds i32, ptr %7, i64 %1679
  %1689 = load i32, ptr %1688, align 4, !tbaa !6
  %1690 = getelementptr inbounds i32, ptr %6, i64 %1679
  %1691 = load i32, ptr %1690, align 4, !tbaa !6
  %1692 = add nsw i32 %1691, %1689
  store i32 %1692, ptr %1690, align 4, !tbaa !6
  br label %1711

1693:                                             ; preds = %1669, %1686
  %1694 = phi i32 [ %1681, %1686 ], [ %1670, %1669 ]
  %1695 = phi ptr [ %1680, %1686 ], [ %4, %1669 ]
  %1696 = phi i64 [ %1679, %1686 ], [ 0, %1669 ]
  %1697 = add nsw i32 %1694, 1
  store i32 %1697, ptr %1695, align 4, !tbaa !6
  %1698 = getelementptr inbounds i32, ptr %7, i64 %1696
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1696
  br label %1711

1701:                                             ; preds = %1678
  %1702 = icmp eq i32 %1681, %1684
  br i1 %1702, label %1703, label %1709

1703:                                             ; preds = %1701
  store i32 0, ptr %1680, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %8, i64 %1679
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = getelementptr inbounds i32, ptr %6, i64 %1679
  store i32 %1705, ptr %1706, align 4, !tbaa !6
  %1707 = add nuw nsw i64 %1679, 1
  %1708 = icmp eq i64 %1707, %1581
  br i1 %1708, label %1716, label %1678, !llvm.loop !538

1709:                                             ; preds = %1674, %1701
  store double %1666, ptr %1254, align 8, !tbaa !19
  %1710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1711:                                             ; preds = %1687, %1693
  %1712 = phi ptr [ %1700, %1693 ], [ %1680, %1687 ]
  %1713 = phi i32 [ %1699, %1693 ], [ 1, %1687 ]
  %1714 = load i32, ptr %1712, align 4, !tbaa !6
  %1715 = add nsw i32 %1714, %1713
  store i32 %1715, ptr %1712, align 4, !tbaa !6
  br label %1716

1716:                                             ; preds = %1703, %1711, %1676, %1658
  %1717 = icmp eq i32 %1668, %5
  br i1 %1717, label %3081, label %1584, !llvm.loop !539

1718:                                             ; preds = %1567, %1855
  %1719 = phi double [ 0.000000e+00, %1567 ], [ %1803, %1855 ]
  %1720 = phi i32 [ 0, %1567 ], [ %1804, %1855 ]
  %1721 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1568, label %1722, label %1791

1722:                                             ; preds = %1718, %1781
  %1723 = phi i32 [ %1790, %1781 ], [ 0, %1718 ]
  %1724 = phi i64 [ %1732, %1781 ], [ %1572, %1718 ]
  %1725 = phi i64 [ %1789, %1781 ], [ %1571, %1718 ]
  %1726 = phi i32 [ %1787, %1781 ], [ %1721, %1718 ]
  %1727 = sub i32 %1570, %1723
  %1728 = tail call i32 @llvm.smin.i32(i32 %1727, i32 0)
  %1729 = sub i32 %1727, %1728
  %1730 = zext i32 %1729 to i64
  %1731 = add nuw nsw i64 %1730, 1
  %1732 = add nsw i64 %1724, -1
  %1733 = icmp ult i32 %1729, 31
  br i1 %1733, label %1769, label %1734

1734:                                             ; preds = %1722
  %1735 = and i64 %1731, 8589934560
  %1736 = sub i64 %1725, %1735
  br label %1737

1737:                                             ; preds = %1737, %1734
  %1738 = phi i64 [ 0, %1734 ], [ %1761, %1737 ]
  %1739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1734 ], [ %1757, %1737 ]
  %1740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1734 ], [ %1758, %1737 ]
  %1741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1734 ], [ %1759, %1737 ]
  %1742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1734 ], [ %1760, %1737 ]
  %1743 = sub i64 %1725, %1738
  %1744 = getelementptr inbounds i32, ptr %11, i64 %1743
  %1745 = getelementptr inbounds i32, ptr %1744, i64 -7
  %1746 = load <8 x i32>, ptr %1745, align 4, !tbaa !6
  %1747 = shufflevector <8 x i32> %1746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1748 = getelementptr inbounds i32, ptr %1744, i64 -15
  %1749 = load <8 x i32>, ptr %1748, align 4, !tbaa !6
  %1750 = shufflevector <8 x i32> %1749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1751 = getelementptr inbounds i32, ptr %1744, i64 -23
  %1752 = load <8 x i32>, ptr %1751, align 4, !tbaa !6
  %1753 = shufflevector <8 x i32> %1752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1754 = getelementptr inbounds i32, ptr %1744, i64 -31
  %1755 = load <8 x i32>, ptr %1754, align 4, !tbaa !6
  %1756 = shufflevector <8 x i32> %1755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1757 = mul <8 x i32> %1747, %1739
  %1758 = mul <8 x i32> %1750, %1740
  %1759 = mul <8 x i32> %1753, %1741
  %1760 = mul <8 x i32> %1756, %1742
  %1761 = add nuw i64 %1738, 32
  %1762 = icmp eq i64 %1761, %1735
  br i1 %1762, label %1763, label %1737, !llvm.loop !540

1763:                                             ; preds = %1737
  %1764 = mul <8 x i32> %1758, %1757
  %1765 = mul <8 x i32> %1759, %1764
  %1766 = mul <8 x i32> %1760, %1765
  %1767 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1766)
  %1768 = icmp eq i64 %1731, %1735
  br i1 %1768, label %1781, label %1769

1769:                                             ; preds = %1722, %1763
  %1770 = phi i64 [ %1725, %1722 ], [ %1736, %1763 ]
  %1771 = phi i32 [ 1, %1722 ], [ %1767, %1763 ]
  br label %1772

1772:                                             ; preds = %1769, %1772
  %1773 = phi i64 [ %1778, %1772 ], [ %1770, %1769 ]
  %1774 = phi i32 [ %1777, %1772 ], [ %1771, %1769 ]
  %1775 = getelementptr inbounds i32, ptr %11, i64 %1773
  %1776 = load i32, ptr %1775, align 4, !tbaa !6
  %1777 = mul nsw i32 %1776, %1774
  %1778 = add nsw i64 %1773, -1
  %1779 = trunc i64 %1773 to i32
  %1780 = icmp sgt i32 %1779, 0
  br i1 %1780, label %1772, label %1781, !llvm.loop !541

1781:                                             ; preds = %1772, %1763
  %1782 = phi i32 [ %1767, %1763 ], [ %1777, %1772 ]
  %1783 = and i64 %1732, 4294967295
  %1784 = getelementptr inbounds i32, ptr %6, i64 %1783
  %1785 = load i32, ptr %1784, align 4, !tbaa !6
  %1786 = mul nsw i32 %1785, %1782
  %1787 = add nsw i32 %1786, %1726
  %1788 = icmp sgt i64 %1724, 2
  %1789 = add nsw i64 %1725, -1
  %1790 = add i32 %1723, 1
  br i1 %1788, label %1722, label %1791, !llvm.loop !542

1791:                                             ; preds = %1781, %1718
  %1792 = phi i32 [ %1721, %1718 ], [ %1787, %1781 ]
  %1793 = icmp slt i32 %1792, %5
  br i1 %1793, label %1796, label %1794

1794:                                             ; preds = %1791
  %1795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

1796:                                             ; preds = %1791
  %1797 = sext i32 %1792 to i64
  %1798 = getelementptr inbounds i16, ptr %1252, i64 %1797
  %1799 = load i16, ptr %1798, align 2, !tbaa !79
  %1800 = sitofp i16 %1799 to double
  %1801 = fmul fast double %1800, %1800
  %1802 = fmul fast double %1801, %1801
  %1803 = fadd fast double %1802, %1719
  store double %1803, ptr %1254, align 8, !tbaa !19
  %1804 = add nuw nsw i32 %1720, 1
  br i1 %1569, label %1805, label %1855

1805:                                             ; preds = %1796
  %1806 = load i32, ptr %4, align 4, !tbaa !6
  %1807 = load i32, ptr %12, align 4, !tbaa !6
  %1808 = add nsw i32 %1807, -1
  %1809 = icmp slt i32 %1806, %1808
  br i1 %1809, label %1832, label %1810

1810:                                             ; preds = %1805
  %1811 = icmp eq i32 %1806, %1808
  br i1 %1811, label %1812, label %1848

1812:                                             ; preds = %1810
  store i32 0, ptr %4, align 4, !tbaa !6
  %1813 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1813, ptr %6, align 4, !tbaa !6
  br i1 %1574, label %1855, label %1814

1814:                                             ; preds = %1812, %1842
  %1815 = phi i64 [ %1846, %1842 ], [ 1, %1812 ]
  %1816 = getelementptr inbounds i32, ptr %4, i64 %1815
  %1817 = load i32, ptr %1816, align 4, !tbaa !6
  %1818 = getelementptr inbounds i32, ptr %12, i64 %1815
  %1819 = load i32, ptr %1818, align 4, !tbaa !6
  %1820 = add nsw i32 %1819, -1
  %1821 = icmp slt i32 %1817, %1820
  br i1 %1821, label %1822, label %1840

1822:                                             ; preds = %1814
  br i1 %1809, label %1832, label %1823

1823:                                             ; preds = %1822
  %1824 = shl i64 %1815, 32
  %1825 = add i64 %1824, -4294967296
  %1826 = ashr exact i64 %1825, 32
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1826
  %1828 = load i32, ptr %1827, align 4, !tbaa !6
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1815
  %1830 = load i32, ptr %1829, align 4, !tbaa !6
  %1831 = add nsw i32 %1830, %1828
  store i32 %1831, ptr %1829, align 4, !tbaa !6
  br label %1850

1832:                                             ; preds = %1805, %1822
  %1833 = phi i32 [ %1817, %1822 ], [ %1806, %1805 ]
  %1834 = phi ptr [ %1816, %1822 ], [ %4, %1805 ]
  %1835 = phi i64 [ %1815, %1822 ], [ 0, %1805 ]
  %1836 = add nsw i32 %1833, 1
  store i32 %1836, ptr %1834, align 4, !tbaa !6
  %1837 = getelementptr inbounds i32, ptr %7, i64 %1835
  %1838 = load i32, ptr %1837, align 4, !tbaa !6
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1835
  br label %1850

1840:                                             ; preds = %1814
  %1841 = icmp eq i32 %1817, %1820
  br i1 %1841, label %1842, label %1848

1842:                                             ; preds = %1840
  store i32 0, ptr %1816, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %8, i64 %1815
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = getelementptr inbounds i32, ptr %6, i64 %1815
  store i32 %1844, ptr %1845, align 4, !tbaa !6
  %1846 = add nuw nsw i64 %1815, 1
  %1847 = icmp eq i64 %1846, %1572
  br i1 %1847, label %1855, label %1814, !llvm.loop !543

1848:                                             ; preds = %1810, %1840
  %1849 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

1850:                                             ; preds = %1823, %1832
  %1851 = phi ptr [ %1839, %1832 ], [ %1816, %1823 ]
  %1852 = phi i32 [ %1838, %1832 ], [ 1, %1823 ]
  %1853 = load i32, ptr %1851, align 4, !tbaa !6
  %1854 = add nsw i32 %1853, %1852
  store i32 %1854, ptr %1851, align 4, !tbaa !6
  br label %1855

1855:                                             ; preds = %1842, %1850, %1812, %1796
  %1856 = icmp eq i32 %1804, %5
  br i1 %1856, label %3085, label %1718, !llvm.loop !544

1857:                                             ; preds = %1261
  %1858 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 910, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3085

1859:                                             ; preds = %18
  %1860 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1861 = load ptr, ptr %1860, align 8, !tbaa !10
  %1862 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1863 = load ptr, ptr %1862, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1863, align 4, !tbaa !163
  %1864 = icmp eq i32 %13, 0
  br i1 %1864, label %1865, label %1870

1865:                                             ; preds = %1859
  %1866 = load i16, ptr %1861, align 2, !tbaa !79
  %1867 = sitofp i16 %1866 to float
  %1868 = fmul fast float %1867, %1867
  %1869 = fmul fast float %1868, %1868
  store float %1869, ptr %1863, align 4, !tbaa !163
  br label %3085

1870:                                             ; preds = %1859
  switch i32 %1, label %2470 [
    i32 1, label %1871
    i32 0, label %2174
  ]

1871:                                             ; preds = %1870
  %1872 = getelementptr inbounds i32, ptr %3, i64 %19
  %1873 = load i32, ptr %1872, align 4, !tbaa !6
  %1874 = icmp eq i32 %1873, 0
  %1875 = icmp sgt i32 %5, 0
  br i1 %1874, label %1885, label %1876

1876:                                             ; preds = %1871
  br i1 %1875, label %1877, label %3085

1877:                                             ; preds = %1876
  %1878 = icmp sgt i32 %13, 1
  %1879 = icmp sgt i32 %13, 0
  %1880 = add i32 %13, -2
  %1881 = zext i32 %1880 to i64
  %1882 = zext i32 %13 to i64
  %1883 = add nuw i32 %5, 1
  %1884 = icmp eq i32 %13, 1
  br label %2033

1885:                                             ; preds = %1871
  br i1 %1875, label %1886, label %3085

1886:                                             ; preds = %1885
  %1887 = icmp sgt i32 %13, 1
  %1888 = icmp sgt i32 %13, 0
  %1889 = add i32 %13, -2
  %1890 = zext i32 %1889 to i64
  %1891 = zext i32 %13 to i64
  %1892 = add nuw i32 %5, 1
  %1893 = icmp eq i32 %13, 1
  br label %1894

1894:                                             ; preds = %1886, %2031
  %1895 = phi float [ 0.000000e+00, %1886 ], [ %1981, %2031 ]
  %1896 = phi i32 [ 0, %1886 ], [ %1983, %2031 ]
  %1897 = phi double [ 0.000000e+00, %1886 ], [ %1982, %2031 ]
  %1898 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1887, label %1899, label %1968

1899:                                             ; preds = %1894, %1958
  %1900 = phi i32 [ %1967, %1958 ], [ 0, %1894 ]
  %1901 = phi i64 [ %1909, %1958 ], [ %1891, %1894 ]
  %1902 = phi i64 [ %1966, %1958 ], [ %1890, %1894 ]
  %1903 = phi i32 [ %1964, %1958 ], [ %1898, %1894 ]
  %1904 = sub i32 %1889, %1900
  %1905 = tail call i32 @llvm.smin.i32(i32 %1904, i32 0)
  %1906 = sub i32 %1904, %1905
  %1907 = zext i32 %1906 to i64
  %1908 = add nuw nsw i64 %1907, 1
  %1909 = add nsw i64 %1901, -1
  %1910 = icmp ult i32 %1906, 31
  br i1 %1910, label %1946, label %1911

1911:                                             ; preds = %1899
  %1912 = and i64 %1908, 8589934560
  %1913 = sub i64 %1902, %1912
  br label %1914

1914:                                             ; preds = %1914, %1911
  %1915 = phi i64 [ 0, %1911 ], [ %1938, %1914 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1934, %1914 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1935, %1914 ]
  %1918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1936, %1914 ]
  %1919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1937, %1914 ]
  %1920 = sub i64 %1902, %1915
  %1921 = getelementptr inbounds i32, ptr %9, i64 %1920
  %1922 = getelementptr inbounds i32, ptr %1921, i64 -7
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !6
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = getelementptr inbounds i32, ptr %1921, i64 -15
  %1926 = load <8 x i32>, ptr %1925, align 4, !tbaa !6
  %1927 = shufflevector <8 x i32> %1926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1928 = getelementptr inbounds i32, ptr %1921, i64 -23
  %1929 = load <8 x i32>, ptr %1928, align 4, !tbaa !6
  %1930 = shufflevector <8 x i32> %1929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1931 = getelementptr inbounds i32, ptr %1921, i64 -31
  %1932 = load <8 x i32>, ptr %1931, align 4, !tbaa !6
  %1933 = shufflevector <8 x i32> %1932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1934 = mul <8 x i32> %1924, %1916
  %1935 = mul <8 x i32> %1927, %1917
  %1936 = mul <8 x i32> %1930, %1918
  %1937 = mul <8 x i32> %1933, %1919
  %1938 = add nuw i64 %1915, 32
  %1939 = icmp eq i64 %1938, %1912
  br i1 %1939, label %1940, label %1914, !llvm.loop !545

1940:                                             ; preds = %1914
  %1941 = mul <8 x i32> %1935, %1934
  %1942 = mul <8 x i32> %1936, %1941
  %1943 = mul <8 x i32> %1937, %1942
  %1944 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1943)
  %1945 = icmp eq i64 %1908, %1912
  br i1 %1945, label %1958, label %1946

1946:                                             ; preds = %1899, %1940
  %1947 = phi i64 [ %1902, %1899 ], [ %1913, %1940 ]
  %1948 = phi i32 [ 1, %1899 ], [ %1944, %1940 ]
  br label %1949

1949:                                             ; preds = %1946, %1949
  %1950 = phi i64 [ %1955, %1949 ], [ %1947, %1946 ]
  %1951 = phi i32 [ %1954, %1949 ], [ %1948, %1946 ]
  %1952 = getelementptr inbounds i32, ptr %9, i64 %1950
  %1953 = load i32, ptr %1952, align 4, !tbaa !6
  %1954 = mul nsw i32 %1953, %1951
  %1955 = add nsw i64 %1950, -1
  %1956 = trunc i64 %1950 to i32
  %1957 = icmp sgt i32 %1956, 0
  br i1 %1957, label %1949, label %1958, !llvm.loop !546

1958:                                             ; preds = %1949, %1940
  %1959 = phi i32 [ %1944, %1940 ], [ %1954, %1949 ]
  %1960 = and i64 %1909, 4294967295
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1960
  %1962 = load i32, ptr %1961, align 4, !tbaa !6
  %1963 = mul nsw i32 %1962, %1959
  %1964 = add nsw i32 %1963, %1903
  %1965 = icmp sgt i64 %1901, 2
  %1966 = add nsw i64 %1902, -1
  %1967 = add i32 %1900, 1
  br i1 %1965, label %1899, label %1968, !llvm.loop !547

1968:                                             ; preds = %1958, %1894
  %1969 = phi i32 [ %1898, %1894 ], [ %1964, %1958 ]
  %1970 = sext i32 %1969 to i64
  %1971 = getelementptr inbounds double, ptr %2, i64 %1970
  %1972 = load double, ptr %1971, align 8, !tbaa !19
  %1973 = getelementptr inbounds i16, ptr %1861, i64 %1970
  %1974 = load i16, ptr %1973, align 2, !tbaa !79
  %1975 = fpext float %1895 to double
  %1976 = sitofp i16 %1974 to double
  %1977 = fmul fast double %1972, %1976
  %1978 = fmul fast double %1977, %1977
  %1979 = fmul fast double %1978, %1978
  %1980 = fadd fast double %1979, %1975
  %1981 = fptrunc double %1980 to float
  %1982 = fadd fast double %1972, %1897
  %1983 = add nuw nsw i32 %1896, 1
  br i1 %1888, label %1984, label %2031

1984:                                             ; preds = %1968
  %1985 = load i32, ptr %4, align 4, !tbaa !6
  %1986 = load i32, ptr %12, align 4, !tbaa !6
  %1987 = add nsw i32 %1986, -1
  %1988 = icmp slt i32 %1985, %1987
  br i1 %1988, label %2008, label %1989

1989:                                             ; preds = %1984
  %1990 = icmp eq i32 %1985, %1987
  br i1 %1990, label %1991, label %2024

1991:                                             ; preds = %1989
  store i32 0, ptr %4, align 4, !tbaa !6
  %1992 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1992, ptr %6, align 4, !tbaa !6
  br i1 %1893, label %2031, label %1993

1993:                                             ; preds = %1991, %2018
  %1994 = phi i64 [ %2022, %2018 ], [ 1, %1991 ]
  %1995 = getelementptr inbounds i32, ptr %4, i64 %1994
  %1996 = load i32, ptr %1995, align 4, !tbaa !6
  %1997 = getelementptr inbounds i32, ptr %12, i64 %1994
  %1998 = load i32, ptr %1997, align 4, !tbaa !6
  %1999 = add nsw i32 %1998, -1
  %2000 = icmp slt i32 %1996, %1999
  br i1 %2000, label %2001, label %2016

2001:                                             ; preds = %1993
  br i1 %1988, label %2008, label %2002

2002:                                             ; preds = %2001
  %2003 = getelementptr inbounds i32, ptr %7, i64 %1994
  %2004 = load i32, ptr %2003, align 4, !tbaa !6
  %2005 = getelementptr inbounds i32, ptr %6, i64 %1994
  %2006 = load i32, ptr %2005, align 4, !tbaa !6
  %2007 = add nsw i32 %2006, %2004
  store i32 %2007, ptr %2005, align 4, !tbaa !6
  br label %2026

2008:                                             ; preds = %1984, %2001
  %2009 = phi i32 [ %1996, %2001 ], [ %1985, %1984 ]
  %2010 = phi ptr [ %1995, %2001 ], [ %4, %1984 ]
  %2011 = phi i64 [ %1994, %2001 ], [ 0, %1984 ]
  %2012 = add nsw i32 %2009, 1
  store i32 %2012, ptr %2010, align 4, !tbaa !6
  %2013 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2014 = load i32, ptr %2013, align 4, !tbaa !6
  %2015 = getelementptr inbounds i32, ptr %6, i64 %2011
  br label %2026

2016:                                             ; preds = %1993
  %2017 = icmp eq i32 %1996, %1999
  br i1 %2017, label %2018, label %2024

2018:                                             ; preds = %2016
  store i32 0, ptr %1995, align 4, !tbaa !6
  %2019 = getelementptr inbounds i32, ptr %8, i64 %1994
  %2020 = load i32, ptr %2019, align 4, !tbaa !6
  %2021 = getelementptr inbounds i32, ptr %6, i64 %1994
  store i32 %2020, ptr %2021, align 4, !tbaa !6
  %2022 = add nuw nsw i64 %1994, 1
  %2023 = icmp eq i64 %2022, %1891
  br i1 %2023, label %2031, label %1993, !llvm.loop !548

2024:                                             ; preds = %1989, %2016
  store float %1981, ptr %1863, align 4, !tbaa !163
  %2025 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2026:                                             ; preds = %2002, %2008
  %2027 = phi ptr [ %2015, %2008 ], [ %1995, %2002 ]
  %2028 = phi i32 [ %2014, %2008 ], [ 1, %2002 ]
  %2029 = load i32, ptr %2027, align 4, !tbaa !6
  %2030 = add nsw i32 %2029, %2028
  store i32 %2030, ptr %2027, align 4, !tbaa !6
  br label %2031

2031:                                             ; preds = %2018, %2026, %1991, %1968
  %2032 = icmp eq i32 %1983, %5
  br i1 %2032, label %3082, label %1894, !llvm.loop !549

2033:                                             ; preds = %1877, %2172
  %2034 = phi float [ 0.000000e+00, %1877 ], [ %2120, %2172 ]
  %2035 = phi i32 [ 0, %1877 ], [ %2121, %2172 ]
  %2036 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1878, label %2037, label %2106

2037:                                             ; preds = %2033, %2096
  %2038 = phi i32 [ %2105, %2096 ], [ 0, %2033 ]
  %2039 = phi i64 [ %2047, %2096 ], [ %1882, %2033 ]
  %2040 = phi i64 [ %2104, %2096 ], [ %1881, %2033 ]
  %2041 = phi i32 [ %2102, %2096 ], [ %2036, %2033 ]
  %2042 = sub i32 %1880, %2038
  %2043 = tail call i32 @llvm.smin.i32(i32 %2042, i32 0)
  %2044 = sub i32 %2042, %2043
  %2045 = zext i32 %2044 to i64
  %2046 = add nuw nsw i64 %2045, 1
  %2047 = add nsw i64 %2039, -1
  %2048 = icmp ult i32 %2044, 31
  br i1 %2048, label %2084, label %2049

2049:                                             ; preds = %2037
  %2050 = and i64 %2046, 8589934560
  %2051 = sub i64 %2040, %2050
  br label %2052

2052:                                             ; preds = %2052, %2049
  %2053 = phi i64 [ 0, %2049 ], [ %2076, %2052 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2072, %2052 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2073, %2052 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2074, %2052 ]
  %2057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2075, %2052 ]
  %2058 = sub i64 %2040, %2053
  %2059 = getelementptr inbounds i32, ptr %11, i64 %2058
  %2060 = getelementptr inbounds i32, ptr %2059, i64 -7
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !6
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = getelementptr inbounds i32, ptr %2059, i64 -15
  %2064 = load <8 x i32>, ptr %2063, align 4, !tbaa !6
  %2065 = shufflevector <8 x i32> %2064, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2066 = getelementptr inbounds i32, ptr %2059, i64 -23
  %2067 = load <8 x i32>, ptr %2066, align 4, !tbaa !6
  %2068 = shufflevector <8 x i32> %2067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2069 = getelementptr inbounds i32, ptr %2059, i64 -31
  %2070 = load <8 x i32>, ptr %2069, align 4, !tbaa !6
  %2071 = shufflevector <8 x i32> %2070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2072 = mul <8 x i32> %2062, %2054
  %2073 = mul <8 x i32> %2065, %2055
  %2074 = mul <8 x i32> %2068, %2056
  %2075 = mul <8 x i32> %2071, %2057
  %2076 = add nuw i64 %2053, 32
  %2077 = icmp eq i64 %2076, %2050
  br i1 %2077, label %2078, label %2052, !llvm.loop !550

2078:                                             ; preds = %2052
  %2079 = mul <8 x i32> %2073, %2072
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = mul <8 x i32> %2075, %2080
  %2082 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2081)
  %2083 = icmp eq i64 %2046, %2050
  br i1 %2083, label %2096, label %2084

2084:                                             ; preds = %2037, %2078
  %2085 = phi i64 [ %2040, %2037 ], [ %2051, %2078 ]
  %2086 = phi i32 [ 1, %2037 ], [ %2082, %2078 ]
  br label %2087

2087:                                             ; preds = %2084, %2087
  %2088 = phi i64 [ %2093, %2087 ], [ %2085, %2084 ]
  %2089 = phi i32 [ %2092, %2087 ], [ %2086, %2084 ]
  %2090 = getelementptr inbounds i32, ptr %11, i64 %2088
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = mul nsw i32 %2091, %2089
  %2093 = add nsw i64 %2088, -1
  %2094 = trunc i64 %2088 to i32
  %2095 = icmp sgt i32 %2094, 0
  br i1 %2095, label %2087, label %2096, !llvm.loop !551

2096:                                             ; preds = %2087, %2078
  %2097 = phi i32 [ %2082, %2078 ], [ %2092, %2087 ]
  %2098 = and i64 %2047, 4294967295
  %2099 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !6
  %2101 = mul nsw i32 %2100, %2097
  %2102 = add nsw i32 %2101, %2041
  %2103 = icmp sgt i64 %2039, 2
  %2104 = add nsw i64 %2040, -1
  %2105 = add i32 %2038, 1
  br i1 %2103, label %2037, label %2106, !llvm.loop !552

2106:                                             ; preds = %2096, %2033
  %2107 = phi i32 [ %2036, %2033 ], [ %2102, %2096 ]
  %2108 = icmp slt i32 %2107, %5
  br i1 %2108, label %2111, label %2109

2109:                                             ; preds = %2106
  %2110 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

2111:                                             ; preds = %2106
  %2112 = sext i32 %2107 to i64
  %2113 = getelementptr inbounds i16, ptr %1861, i64 %2112
  %2114 = load i16, ptr %2113, align 2, !tbaa !79
  %2115 = fpext float %2034 to double
  %2116 = sitofp i16 %2114 to double
  %2117 = fmul fast double %2116, %2116
  %2118 = fmul fast double %2117, %2117
  %2119 = fadd fast double %2118, %2115
  %2120 = fptrunc double %2119 to float
  store float %2120, ptr %1863, align 4, !tbaa !163
  %2121 = add nuw nsw i32 %2035, 1
  br i1 %1879, label %2122, label %2172

2122:                                             ; preds = %2111
  %2123 = load i32, ptr %4, align 4, !tbaa !6
  %2124 = load i32, ptr %12, align 4, !tbaa !6
  %2125 = add nsw i32 %2124, -1
  %2126 = icmp slt i32 %2123, %2125
  br i1 %2126, label %2149, label %2127

2127:                                             ; preds = %2122
  %2128 = icmp eq i32 %2123, %2125
  br i1 %2128, label %2129, label %2165

2129:                                             ; preds = %2127
  store i32 0, ptr %4, align 4, !tbaa !6
  %2130 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2130, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2172, label %2131

2131:                                             ; preds = %2129, %2159
  %2132 = phi i64 [ %2163, %2159 ], [ 1, %2129 ]
  %2133 = getelementptr inbounds i32, ptr %4, i64 %2132
  %2134 = load i32, ptr %2133, align 4, !tbaa !6
  %2135 = getelementptr inbounds i32, ptr %12, i64 %2132
  %2136 = load i32, ptr %2135, align 4, !tbaa !6
  %2137 = add nsw i32 %2136, -1
  %2138 = icmp slt i32 %2134, %2137
  br i1 %2138, label %2139, label %2157

2139:                                             ; preds = %2131
  br i1 %2126, label %2149, label %2140

2140:                                             ; preds = %2139
  %2141 = shl i64 %2132, 32
  %2142 = add i64 %2141, -4294967296
  %2143 = ashr exact i64 %2142, 32
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2132
  %2147 = load i32, ptr %2146, align 4, !tbaa !6
  %2148 = add nsw i32 %2147, %2145
  store i32 %2148, ptr %2146, align 4, !tbaa !6
  br label %2167

2149:                                             ; preds = %2122, %2139
  %2150 = phi i32 [ %2134, %2139 ], [ %2123, %2122 ]
  %2151 = phi ptr [ %2133, %2139 ], [ %4, %2122 ]
  %2152 = phi i64 [ %2132, %2139 ], [ 0, %2122 ]
  %2153 = add nsw i32 %2150, 1
  store i32 %2153, ptr %2151, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %7, i64 %2152
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = getelementptr inbounds i32, ptr %6, i64 %2152
  br label %2167

2157:                                             ; preds = %2131
  %2158 = icmp eq i32 %2134, %2137
  br i1 %2158, label %2159, label %2165

2159:                                             ; preds = %2157
  store i32 0, ptr %2133, align 4, !tbaa !6
  %2160 = getelementptr inbounds i32, ptr %8, i64 %2132
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2132
  store i32 %2161, ptr %2162, align 4, !tbaa !6
  %2163 = add nuw nsw i64 %2132, 1
  %2164 = icmp eq i64 %2163, %1882
  br i1 %2164, label %2172, label %2131, !llvm.loop !553

2165:                                             ; preds = %2127, %2157
  %2166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2167:                                             ; preds = %2140, %2149
  %2168 = phi ptr [ %2156, %2149 ], [ %2133, %2140 ]
  %2169 = phi i32 [ %2155, %2149 ], [ 1, %2140 ]
  %2170 = load i32, ptr %2168, align 4, !tbaa !6
  %2171 = add nsw i32 %2170, %2169
  store i32 %2171, ptr %2168, align 4, !tbaa !6
  br label %2172

2172:                                             ; preds = %2159, %2167, %2129, %2111
  %2173 = icmp eq i32 %2121, %5
  br i1 %2173, label %3085, label %2033, !llvm.loop !554

2174:                                             ; preds = %1870
  %2175 = getelementptr inbounds i32, ptr %3, i64 %19
  %2176 = load i32, ptr %2175, align 4, !tbaa !6
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp sgt i32 %5, 0
  br i1 %2177, label %2188, label %2179

2179:                                             ; preds = %2174
  br i1 %2178, label %2180, label %3085

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2331

2188:                                             ; preds = %2174
  br i1 %2178, label %2189, label %3085

2189:                                             ; preds = %2188
  %2190 = icmp sgt i32 %13, 1
  %2191 = icmp sgt i32 %13, 0
  %2192 = add i32 %13, -2
  %2193 = zext i32 %2192 to i64
  %2194 = zext i32 %13 to i64
  %2195 = add nuw i32 %5, 1
  %2196 = icmp eq i32 %13, 1
  br label %2197

2197:                                             ; preds = %2189, %2329
  %2198 = phi float [ 0.000000e+00, %2189 ], [ %2279, %2329 ]
  %2199 = phi i32 [ 0, %2189 ], [ %2281, %2329 ]
  %2200 = phi double [ 0.000000e+00, %2189 ], [ %2280, %2329 ]
  %2201 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2190, label %2202, label %2271

2202:                                             ; preds = %2197, %2261
  %2203 = phi i32 [ %2270, %2261 ], [ 0, %2197 ]
  %2204 = phi i64 [ %2212, %2261 ], [ %2194, %2197 ]
  %2205 = phi i64 [ %2269, %2261 ], [ %2193, %2197 ]
  %2206 = phi i32 [ %2267, %2261 ], [ %2201, %2197 ]
  %2207 = sub i32 %2192, %2203
  %2208 = tail call i32 @llvm.smin.i32(i32 %2207, i32 0)
  %2209 = sub i32 %2207, %2208
  %2210 = zext i32 %2209 to i64
  %2211 = add nuw nsw i64 %2210, 1
  %2212 = add nsw i64 %2204, -1
  %2213 = icmp ult i32 %2209, 31
  br i1 %2213, label %2249, label %2214

2214:                                             ; preds = %2202
  %2215 = and i64 %2211, 8589934560
  %2216 = sub i64 %2205, %2215
  br label %2217

2217:                                             ; preds = %2217, %2214
  %2218 = phi i64 [ 0, %2214 ], [ %2241, %2217 ]
  %2219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2237, %2217 ]
  %2220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2238, %2217 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2239, %2217 ]
  %2222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2240, %2217 ]
  %2223 = sub i64 %2205, %2218
  %2224 = getelementptr inbounds i32, ptr %9, i64 %2223
  %2225 = getelementptr inbounds i32, ptr %2224, i64 -7
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = getelementptr inbounds i32, ptr %2224, i64 -15
  %2229 = load <8 x i32>, ptr %2228, align 4, !tbaa !6
  %2230 = shufflevector <8 x i32> %2229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2231 = getelementptr inbounds i32, ptr %2224, i64 -23
  %2232 = load <8 x i32>, ptr %2231, align 4, !tbaa !6
  %2233 = shufflevector <8 x i32> %2232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2234 = getelementptr inbounds i32, ptr %2224, i64 -31
  %2235 = load <8 x i32>, ptr %2234, align 4, !tbaa !6
  %2236 = shufflevector <8 x i32> %2235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2237 = mul <8 x i32> %2227, %2219
  %2238 = mul <8 x i32> %2230, %2220
  %2239 = mul <8 x i32> %2233, %2221
  %2240 = mul <8 x i32> %2236, %2222
  %2241 = add nuw i64 %2218, 32
  %2242 = icmp eq i64 %2241, %2215
  br i1 %2242, label %2243, label %2217, !llvm.loop !555

2243:                                             ; preds = %2217
  %2244 = mul <8 x i32> %2238, %2237
  %2245 = mul <8 x i32> %2239, %2244
  %2246 = mul <8 x i32> %2240, %2245
  %2247 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2246)
  %2248 = icmp eq i64 %2211, %2215
  br i1 %2248, label %2261, label %2249

2249:                                             ; preds = %2202, %2243
  %2250 = phi i64 [ %2205, %2202 ], [ %2216, %2243 ]
  %2251 = phi i32 [ 1, %2202 ], [ %2247, %2243 ]
  br label %2252

2252:                                             ; preds = %2249, %2252
  %2253 = phi i64 [ %2258, %2252 ], [ %2250, %2249 ]
  %2254 = phi i32 [ %2257, %2252 ], [ %2251, %2249 ]
  %2255 = getelementptr inbounds i32, ptr %9, i64 %2253
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2254
  %2258 = add nsw i64 %2253, -1
  %2259 = trunc i64 %2253 to i32
  %2260 = icmp sgt i32 %2259, 0
  br i1 %2260, label %2252, label %2261, !llvm.loop !556

2261:                                             ; preds = %2252, %2243
  %2262 = phi i32 [ %2247, %2243 ], [ %2257, %2252 ]
  %2263 = and i64 %2212, 4294967295
  %2264 = getelementptr inbounds i32, ptr %6, i64 %2263
  %2265 = load i32, ptr %2264, align 4, !tbaa !6
  %2266 = mul nsw i32 %2265, %2262
  %2267 = add nsw i32 %2266, %2206
  %2268 = icmp sgt i64 %2204, 2
  %2269 = add nsw i64 %2205, -1
  %2270 = add i32 %2203, 1
  br i1 %2268, label %2202, label %2271, !llvm.loop !557

2271:                                             ; preds = %2261, %2197
  %2272 = phi i32 [ %2201, %2197 ], [ %2267, %2261 ]
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds i16, ptr %1861, i64 %2273
  %2275 = load i16, ptr %2274, align 2, !tbaa !79
  %2276 = sitofp i16 %2275 to float
  %2277 = fmul fast float %2276, %2276
  %2278 = fmul fast float %2277, %2277
  %2279 = fadd fast float %2278, %2198
  %2280 = fadd fast double %2200, 1.000000e+00
  %2281 = add nuw nsw i32 %2199, 1
  br i1 %2191, label %2282, label %2329

2282:                                             ; preds = %2271
  %2283 = load i32, ptr %4, align 4, !tbaa !6
  %2284 = load i32, ptr %12, align 4, !tbaa !6
  %2285 = add nsw i32 %2284, -1
  %2286 = icmp slt i32 %2283, %2285
  br i1 %2286, label %2306, label %2287

2287:                                             ; preds = %2282
  %2288 = icmp eq i32 %2283, %2285
  br i1 %2288, label %2289, label %2322

2289:                                             ; preds = %2287
  store i32 0, ptr %4, align 4, !tbaa !6
  %2290 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2290, ptr %6, align 4, !tbaa !6
  br i1 %2196, label %2329, label %2291

2291:                                             ; preds = %2289, %2316
  %2292 = phi i64 [ %2320, %2316 ], [ 1, %2289 ]
  %2293 = getelementptr inbounds i32, ptr %4, i64 %2292
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = getelementptr inbounds i32, ptr %12, i64 %2292
  %2296 = load i32, ptr %2295, align 4, !tbaa !6
  %2297 = add nsw i32 %2296, -1
  %2298 = icmp slt i32 %2294, %2297
  br i1 %2298, label %2299, label %2314

2299:                                             ; preds = %2291
  br i1 %2286, label %2306, label %2300

2300:                                             ; preds = %2299
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2292
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2292
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, %2302
  store i32 %2305, ptr %2303, align 4, !tbaa !6
  br label %2324

2306:                                             ; preds = %2282, %2299
  %2307 = phi i32 [ %2294, %2299 ], [ %2283, %2282 ]
  %2308 = phi ptr [ %2293, %2299 ], [ %4, %2282 ]
  %2309 = phi i64 [ %2292, %2299 ], [ 0, %2282 ]
  %2310 = add nsw i32 %2307, 1
  store i32 %2310, ptr %2308, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %7, i64 %2309
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2309
  br label %2324

2314:                                             ; preds = %2291
  %2315 = icmp eq i32 %2294, %2297
  br i1 %2315, label %2316, label %2322

2316:                                             ; preds = %2314
  store i32 0, ptr %2293, align 4, !tbaa !6
  %2317 = getelementptr inbounds i32, ptr %8, i64 %2292
  %2318 = load i32, ptr %2317, align 4, !tbaa !6
  %2319 = getelementptr inbounds i32, ptr %6, i64 %2292
  store i32 %2318, ptr %2319, align 4, !tbaa !6
  %2320 = add nuw nsw i64 %2292, 1
  %2321 = icmp eq i64 %2320, %2194
  br i1 %2321, label %2329, label %2291, !llvm.loop !558

2322:                                             ; preds = %2287, %2314
  store float %2279, ptr %1863, align 4, !tbaa !163
  %2323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2324:                                             ; preds = %2300, %2306
  %2325 = phi ptr [ %2313, %2306 ], [ %2293, %2300 ]
  %2326 = phi i32 [ %2312, %2306 ], [ 1, %2300 ]
  %2327 = load i32, ptr %2325, align 4, !tbaa !6
  %2328 = add nsw i32 %2327, %2326
  store i32 %2328, ptr %2325, align 4, !tbaa !6
  br label %2329

2329:                                             ; preds = %2316, %2324, %2289, %2271
  %2330 = icmp eq i32 %2281, %5
  br i1 %2330, label %3083, label %2197, !llvm.loop !559

2331:                                             ; preds = %2180, %2468
  %2332 = phi float [ 0.000000e+00, %2180 ], [ %2416, %2468 ]
  %2333 = phi i32 [ 0, %2180 ], [ %2417, %2468 ]
  %2334 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2181, label %2335, label %2404

2335:                                             ; preds = %2331, %2394
  %2336 = phi i32 [ %2403, %2394 ], [ 0, %2331 ]
  %2337 = phi i64 [ %2345, %2394 ], [ %2185, %2331 ]
  %2338 = phi i64 [ %2402, %2394 ], [ %2184, %2331 ]
  %2339 = phi i32 [ %2400, %2394 ], [ %2334, %2331 ]
  %2340 = sub i32 %2183, %2336
  %2341 = tail call i32 @llvm.smin.i32(i32 %2340, i32 0)
  %2342 = sub i32 %2340, %2341
  %2343 = zext i32 %2342 to i64
  %2344 = add nuw nsw i64 %2343, 1
  %2345 = add nsw i64 %2337, -1
  %2346 = icmp ult i32 %2342, 31
  br i1 %2346, label %2382, label %2347

2347:                                             ; preds = %2335
  %2348 = and i64 %2344, 8589934560
  %2349 = sub i64 %2338, %2348
  br label %2350

2350:                                             ; preds = %2350, %2347
  %2351 = phi i64 [ 0, %2347 ], [ %2374, %2350 ]
  %2352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2370, %2350 ]
  %2353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2371, %2350 ]
  %2354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2372, %2350 ]
  %2355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2373, %2350 ]
  %2356 = sub i64 %2338, %2351
  %2357 = getelementptr inbounds i32, ptr %11, i64 %2356
  %2358 = getelementptr inbounds i32, ptr %2357, i64 -7
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = getelementptr inbounds i32, ptr %2357, i64 -15
  %2362 = load <8 x i32>, ptr %2361, align 4, !tbaa !6
  %2363 = shufflevector <8 x i32> %2362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2364 = getelementptr inbounds i32, ptr %2357, i64 -23
  %2365 = load <8 x i32>, ptr %2364, align 4, !tbaa !6
  %2366 = shufflevector <8 x i32> %2365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2367 = getelementptr inbounds i32, ptr %2357, i64 -31
  %2368 = load <8 x i32>, ptr %2367, align 4, !tbaa !6
  %2369 = shufflevector <8 x i32> %2368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2370 = mul <8 x i32> %2360, %2352
  %2371 = mul <8 x i32> %2363, %2353
  %2372 = mul <8 x i32> %2366, %2354
  %2373 = mul <8 x i32> %2369, %2355
  %2374 = add nuw i64 %2351, 32
  %2375 = icmp eq i64 %2374, %2348
  br i1 %2375, label %2376, label %2350, !llvm.loop !560

2376:                                             ; preds = %2350
  %2377 = mul <8 x i32> %2371, %2370
  %2378 = mul <8 x i32> %2372, %2377
  %2379 = mul <8 x i32> %2373, %2378
  %2380 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2379)
  %2381 = icmp eq i64 %2344, %2348
  br i1 %2381, label %2394, label %2382

2382:                                             ; preds = %2335, %2376
  %2383 = phi i64 [ %2338, %2335 ], [ %2349, %2376 ]
  %2384 = phi i32 [ 1, %2335 ], [ %2380, %2376 ]
  br label %2385

2385:                                             ; preds = %2382, %2385
  %2386 = phi i64 [ %2391, %2385 ], [ %2383, %2382 ]
  %2387 = phi i32 [ %2390, %2385 ], [ %2384, %2382 ]
  %2388 = getelementptr inbounds i32, ptr %11, i64 %2386
  %2389 = load i32, ptr %2388, align 4, !tbaa !6
  %2390 = mul nsw i32 %2389, %2387
  %2391 = add nsw i64 %2386, -1
  %2392 = trunc i64 %2386 to i32
  %2393 = icmp sgt i32 %2392, 0
  br i1 %2393, label %2385, label %2394, !llvm.loop !561

2394:                                             ; preds = %2385, %2376
  %2395 = phi i32 [ %2380, %2376 ], [ %2390, %2385 ]
  %2396 = and i64 %2345, 4294967295
  %2397 = getelementptr inbounds i32, ptr %6, i64 %2396
  %2398 = load i32, ptr %2397, align 4, !tbaa !6
  %2399 = mul nsw i32 %2398, %2395
  %2400 = add nsw i32 %2399, %2339
  %2401 = icmp sgt i64 %2337, 2
  %2402 = add nsw i64 %2338, -1
  %2403 = add i32 %2336, 1
  br i1 %2401, label %2335, label %2404, !llvm.loop !562

2404:                                             ; preds = %2394, %2331
  %2405 = phi i32 [ %2334, %2331 ], [ %2400, %2394 ]
  %2406 = icmp slt i32 %2405, %5
  br i1 %2406, label %2409, label %2407

2407:                                             ; preds = %2404
  %2408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

2409:                                             ; preds = %2404
  %2410 = sext i32 %2405 to i64
  %2411 = getelementptr inbounds i16, ptr %1861, i64 %2410
  %2412 = load i16, ptr %2411, align 2, !tbaa !79
  %2413 = sitofp i16 %2412 to float
  %2414 = fmul fast float %2413, %2413
  %2415 = fmul fast float %2414, %2414
  %2416 = fadd fast float %2415, %2332
  store float %2416, ptr %1863, align 4, !tbaa !163
  %2417 = add nuw nsw i32 %2333, 1
  br i1 %2182, label %2418, label %2468

2418:                                             ; preds = %2409
  %2419 = load i32, ptr %4, align 4, !tbaa !6
  %2420 = load i32, ptr %12, align 4, !tbaa !6
  %2421 = add nsw i32 %2420, -1
  %2422 = icmp slt i32 %2419, %2421
  br i1 %2422, label %2445, label %2423

2423:                                             ; preds = %2418
  %2424 = icmp eq i32 %2419, %2421
  br i1 %2424, label %2425, label %2461

2425:                                             ; preds = %2423
  store i32 0, ptr %4, align 4, !tbaa !6
  %2426 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2426, ptr %6, align 4, !tbaa !6
  br i1 %2187, label %2468, label %2427

2427:                                             ; preds = %2425, %2455
  %2428 = phi i64 [ %2459, %2455 ], [ 1, %2425 ]
  %2429 = getelementptr inbounds i32, ptr %4, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !6
  %2431 = getelementptr inbounds i32, ptr %12, i64 %2428
  %2432 = load i32, ptr %2431, align 4, !tbaa !6
  %2433 = add nsw i32 %2432, -1
  %2434 = icmp slt i32 %2430, %2433
  br i1 %2434, label %2435, label %2453

2435:                                             ; preds = %2427
  br i1 %2422, label %2445, label %2436

2436:                                             ; preds = %2435
  %2437 = shl i64 %2428, 32
  %2438 = add i64 %2437, -4294967296
  %2439 = ashr exact i64 %2438, 32
  %2440 = getelementptr inbounds i32, ptr %7, i64 %2439
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = getelementptr inbounds i32, ptr %6, i64 %2428
  %2443 = load i32, ptr %2442, align 4, !tbaa !6
  %2444 = add nsw i32 %2443, %2441
  store i32 %2444, ptr %2442, align 4, !tbaa !6
  br label %2463

2445:                                             ; preds = %2418, %2435
  %2446 = phi i32 [ %2430, %2435 ], [ %2419, %2418 ]
  %2447 = phi ptr [ %2429, %2435 ], [ %4, %2418 ]
  %2448 = phi i64 [ %2428, %2435 ], [ 0, %2418 ]
  %2449 = add nsw i32 %2446, 1
  store i32 %2449, ptr %2447, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %7, i64 %2448
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2448
  br label %2463

2453:                                             ; preds = %2427
  %2454 = icmp eq i32 %2430, %2433
  br i1 %2454, label %2455, label %2461

2455:                                             ; preds = %2453
  store i32 0, ptr %2429, align 4, !tbaa !6
  %2456 = getelementptr inbounds i32, ptr %8, i64 %2428
  %2457 = load i32, ptr %2456, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %6, i64 %2428
  store i32 %2457, ptr %2458, align 4, !tbaa !6
  %2459 = add nuw nsw i64 %2428, 1
  %2460 = icmp eq i64 %2459, %2185
  br i1 %2460, label %2468, label %2427, !llvm.loop !563

2461:                                             ; preds = %2423, %2453
  %2462 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2463:                                             ; preds = %2436, %2445
  %2464 = phi ptr [ %2452, %2445 ], [ %2429, %2436 ]
  %2465 = phi i32 [ %2451, %2445 ], [ 1, %2436 ]
  %2466 = load i32, ptr %2464, align 4, !tbaa !6
  %2467 = add nsw i32 %2466, %2465
  store i32 %2467, ptr %2464, align 4, !tbaa !6
  br label %2468

2468:                                             ; preds = %2455, %2463, %2425, %2409
  %2469 = icmp eq i32 %2417, %5
  br i1 %2469, label %3085, label %2331, !llvm.loop !564

2470:                                             ; preds = %1870
  %2471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 914, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3085

2472:                                             ; preds = %18
  %2473 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2474 = load ptr, ptr %2473, align 8, !tbaa !10
  %2475 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2476 = load ptr, ptr %2475, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2476, align 8, !tbaa !19
  %2477 = icmp eq i32 %13, 0
  br i1 %2477, label %2478, label %2483

2478:                                             ; preds = %2472
  %2479 = load i16, ptr %2474, align 2, !tbaa !79
  %2480 = sitofp i16 %2479 to double
  %2481 = fmul fast double %2480, %2480
  %2482 = fmul fast double %2481, %2481
  store double %2482, ptr %2476, align 8, !tbaa !19
  br label %3085

2483:                                             ; preds = %2472
  switch i32 %1, label %3079 [
    i32 1, label %2484
    i32 0, label %2783
  ]

2484:                                             ; preds = %2483
  %2485 = getelementptr inbounds i32, ptr %3, i64 %19
  %2486 = load i32, ptr %2485, align 4, !tbaa !6
  %2487 = icmp eq i32 %2486, 0
  %2488 = icmp sgt i32 %5, 0
  br i1 %2487, label %2498, label %2489

2489:                                             ; preds = %2484
  br i1 %2488, label %2490, label %3085

2490:                                             ; preds = %2489
  %2491 = icmp sgt i32 %13, 1
  %2492 = icmp sgt i32 %13, 0
  %2493 = add i32 %13, -2
  %2494 = zext i32 %2493 to i64
  %2495 = zext i32 %13 to i64
  %2496 = add nuw i32 %5, 1
  %2497 = icmp eq i32 %13, 1
  br label %2644

2498:                                             ; preds = %2484
  br i1 %2488, label %2499, label %3085

2499:                                             ; preds = %2498
  %2500 = icmp sgt i32 %13, 1
  %2501 = icmp sgt i32 %13, 0
  %2502 = add i32 %13, -2
  %2503 = zext i32 %2502 to i64
  %2504 = zext i32 %13 to i64
  %2505 = add nuw i32 %5, 1
  %2506 = icmp eq i32 %13, 1
  br label %2507

2507:                                             ; preds = %2499, %2642
  %2508 = phi double [ 0.000000e+00, %2499 ], [ %2592, %2642 ]
  %2509 = phi i32 [ 0, %2499 ], [ %2594, %2642 ]
  %2510 = phi double [ 0.000000e+00, %2499 ], [ %2593, %2642 ]
  %2511 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2500, label %2512, label %2581

2512:                                             ; preds = %2507, %2571
  %2513 = phi i32 [ %2580, %2571 ], [ 0, %2507 ]
  %2514 = phi i64 [ %2522, %2571 ], [ %2504, %2507 ]
  %2515 = phi i64 [ %2579, %2571 ], [ %2503, %2507 ]
  %2516 = phi i32 [ %2577, %2571 ], [ %2511, %2507 ]
  %2517 = sub i32 %2502, %2513
  %2518 = tail call i32 @llvm.smin.i32(i32 %2517, i32 0)
  %2519 = sub i32 %2517, %2518
  %2520 = zext i32 %2519 to i64
  %2521 = add nuw nsw i64 %2520, 1
  %2522 = add nsw i64 %2514, -1
  %2523 = icmp ult i32 %2519, 31
  br i1 %2523, label %2559, label %2524

2524:                                             ; preds = %2512
  %2525 = and i64 %2521, 8589934560
  %2526 = sub i64 %2515, %2525
  br label %2527

2527:                                             ; preds = %2527, %2524
  %2528 = phi i64 [ 0, %2524 ], [ %2551, %2527 ]
  %2529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2524 ], [ %2547, %2527 ]
  %2530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2524 ], [ %2548, %2527 ]
  %2531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2524 ], [ %2549, %2527 ]
  %2532 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2524 ], [ %2550, %2527 ]
  %2533 = sub i64 %2515, %2528
  %2534 = getelementptr inbounds i32, ptr %9, i64 %2533
  %2535 = getelementptr inbounds i32, ptr %2534, i64 -7
  %2536 = load <8 x i32>, ptr %2535, align 4, !tbaa !6
  %2537 = shufflevector <8 x i32> %2536, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2538 = getelementptr inbounds i32, ptr %2534, i64 -15
  %2539 = load <8 x i32>, ptr %2538, align 4, !tbaa !6
  %2540 = shufflevector <8 x i32> %2539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2541 = getelementptr inbounds i32, ptr %2534, i64 -23
  %2542 = load <8 x i32>, ptr %2541, align 4, !tbaa !6
  %2543 = shufflevector <8 x i32> %2542, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2544 = getelementptr inbounds i32, ptr %2534, i64 -31
  %2545 = load <8 x i32>, ptr %2544, align 4, !tbaa !6
  %2546 = shufflevector <8 x i32> %2545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2547 = mul <8 x i32> %2537, %2529
  %2548 = mul <8 x i32> %2540, %2530
  %2549 = mul <8 x i32> %2543, %2531
  %2550 = mul <8 x i32> %2546, %2532
  %2551 = add nuw i64 %2528, 32
  %2552 = icmp eq i64 %2551, %2525
  br i1 %2552, label %2553, label %2527, !llvm.loop !565

2553:                                             ; preds = %2527
  %2554 = mul <8 x i32> %2548, %2547
  %2555 = mul <8 x i32> %2549, %2554
  %2556 = mul <8 x i32> %2550, %2555
  %2557 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2556)
  %2558 = icmp eq i64 %2521, %2525
  br i1 %2558, label %2571, label %2559

2559:                                             ; preds = %2512, %2553
  %2560 = phi i64 [ %2515, %2512 ], [ %2526, %2553 ]
  %2561 = phi i32 [ 1, %2512 ], [ %2557, %2553 ]
  br label %2562

2562:                                             ; preds = %2559, %2562
  %2563 = phi i64 [ %2568, %2562 ], [ %2560, %2559 ]
  %2564 = phi i32 [ %2567, %2562 ], [ %2561, %2559 ]
  %2565 = getelementptr inbounds i32, ptr %9, i64 %2563
  %2566 = load i32, ptr %2565, align 4, !tbaa !6
  %2567 = mul nsw i32 %2566, %2564
  %2568 = add nsw i64 %2563, -1
  %2569 = trunc i64 %2563 to i32
  %2570 = icmp sgt i32 %2569, 0
  br i1 %2570, label %2562, label %2571, !llvm.loop !566

2571:                                             ; preds = %2562, %2553
  %2572 = phi i32 [ %2557, %2553 ], [ %2567, %2562 ]
  %2573 = and i64 %2522, 4294967295
  %2574 = getelementptr inbounds i32, ptr %6, i64 %2573
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = mul nsw i32 %2575, %2572
  %2577 = add nsw i32 %2576, %2516
  %2578 = icmp sgt i64 %2514, 2
  %2579 = add nsw i64 %2515, -1
  %2580 = add i32 %2513, 1
  br i1 %2578, label %2512, label %2581, !llvm.loop !567

2581:                                             ; preds = %2571, %2507
  %2582 = phi i32 [ %2511, %2507 ], [ %2577, %2571 ]
  %2583 = sext i32 %2582 to i64
  %2584 = getelementptr inbounds double, ptr %2, i64 %2583
  %2585 = load double, ptr %2584, align 8, !tbaa !19
  %2586 = getelementptr inbounds i16, ptr %2474, i64 %2583
  %2587 = load i16, ptr %2586, align 2, !tbaa !79
  %2588 = sitofp i16 %2587 to double
  %2589 = fmul fast double %2585, %2588
  %2590 = fmul fast double %2589, %2589
  %2591 = fmul fast double %2590, %2590
  %2592 = fadd fast double %2591, %2508
  store double %2592, ptr %2476, align 8, !tbaa !19
  %2593 = fadd fast double %2585, %2510
  %2594 = add nuw nsw i32 %2509, 1
  br i1 %2501, label %2595, label %2642

2595:                                             ; preds = %2581
  %2596 = load i32, ptr %4, align 4, !tbaa !6
  %2597 = load i32, ptr %12, align 4, !tbaa !6
  %2598 = add nsw i32 %2597, -1
  %2599 = icmp slt i32 %2596, %2598
  br i1 %2599, label %2619, label %2600

2600:                                             ; preds = %2595
  %2601 = icmp eq i32 %2596, %2598
  br i1 %2601, label %2602, label %2635

2602:                                             ; preds = %2600
  store i32 0, ptr %4, align 4, !tbaa !6
  %2603 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2603, ptr %6, align 4, !tbaa !6
  br i1 %2506, label %2642, label %2604

2604:                                             ; preds = %2602, %2629
  %2605 = phi i64 [ %2633, %2629 ], [ 1, %2602 ]
  %2606 = getelementptr inbounds i32, ptr %4, i64 %2605
  %2607 = load i32, ptr %2606, align 4, !tbaa !6
  %2608 = getelementptr inbounds i32, ptr %12, i64 %2605
  %2609 = load i32, ptr %2608, align 4, !tbaa !6
  %2610 = add nsw i32 %2609, -1
  %2611 = icmp slt i32 %2607, %2610
  br i1 %2611, label %2612, label %2627

2612:                                             ; preds = %2604
  br i1 %2599, label %2619, label %2613

2613:                                             ; preds = %2612
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2605
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2605
  %2617 = load i32, ptr %2616, align 4, !tbaa !6
  %2618 = add nsw i32 %2617, %2615
  store i32 %2618, ptr %2616, align 4, !tbaa !6
  br label %2637

2619:                                             ; preds = %2595, %2612
  %2620 = phi i32 [ %2607, %2612 ], [ %2596, %2595 ]
  %2621 = phi ptr [ %2606, %2612 ], [ %4, %2595 ]
  %2622 = phi i64 [ %2605, %2612 ], [ 0, %2595 ]
  %2623 = add nsw i32 %2620, 1
  store i32 %2623, ptr %2621, align 4, !tbaa !6
  %2624 = getelementptr inbounds i32, ptr %7, i64 %2622
  %2625 = load i32, ptr %2624, align 4, !tbaa !6
  %2626 = getelementptr inbounds i32, ptr %6, i64 %2622
  br label %2637

2627:                                             ; preds = %2604
  %2628 = icmp eq i32 %2607, %2610
  br i1 %2628, label %2629, label %2635

2629:                                             ; preds = %2627
  store i32 0, ptr %2606, align 4, !tbaa !6
  %2630 = getelementptr inbounds i32, ptr %8, i64 %2605
  %2631 = load i32, ptr %2630, align 4, !tbaa !6
  %2632 = getelementptr inbounds i32, ptr %6, i64 %2605
  store i32 %2631, ptr %2632, align 4, !tbaa !6
  %2633 = add nuw nsw i64 %2605, 1
  %2634 = icmp eq i64 %2633, %2504
  br i1 %2634, label %2642, label %2604, !llvm.loop !568

2635:                                             ; preds = %2600, %2627
  %2636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2637:                                             ; preds = %2613, %2619
  %2638 = phi ptr [ %2626, %2619 ], [ %2606, %2613 ]
  %2639 = phi i32 [ %2625, %2619 ], [ 1, %2613 ]
  %2640 = load i32, ptr %2638, align 4, !tbaa !6
  %2641 = add nsw i32 %2640, %2639
  store i32 %2641, ptr %2638, align 4, !tbaa !6
  br label %2642

2642:                                             ; preds = %2629, %2637, %2602, %2581
  %2643 = icmp eq i32 %2594, %5
  br i1 %2643, label %3085, label %2507, !llvm.loop !569

2644:                                             ; preds = %2490, %2781
  %2645 = phi double [ 0.000000e+00, %2490 ], [ %2729, %2781 ]
  %2646 = phi i32 [ 0, %2490 ], [ %2730, %2781 ]
  %2647 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2491, label %2648, label %2717

2648:                                             ; preds = %2644, %2707
  %2649 = phi i32 [ %2716, %2707 ], [ 0, %2644 ]
  %2650 = phi i64 [ %2658, %2707 ], [ %2495, %2644 ]
  %2651 = phi i64 [ %2715, %2707 ], [ %2494, %2644 ]
  %2652 = phi i32 [ %2713, %2707 ], [ %2647, %2644 ]
  %2653 = sub i32 %2493, %2649
  %2654 = tail call i32 @llvm.smin.i32(i32 %2653, i32 0)
  %2655 = sub i32 %2653, %2654
  %2656 = zext i32 %2655 to i64
  %2657 = add nuw nsw i64 %2656, 1
  %2658 = add nsw i64 %2650, -1
  %2659 = icmp ult i32 %2655, 31
  br i1 %2659, label %2695, label %2660

2660:                                             ; preds = %2648
  %2661 = and i64 %2657, 8589934560
  %2662 = sub i64 %2651, %2661
  br label %2663

2663:                                             ; preds = %2663, %2660
  %2664 = phi i64 [ 0, %2660 ], [ %2687, %2663 ]
  %2665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2683, %2663 ]
  %2666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2684, %2663 ]
  %2667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2685, %2663 ]
  %2668 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2686, %2663 ]
  %2669 = sub i64 %2651, %2664
  %2670 = getelementptr inbounds i32, ptr %11, i64 %2669
  %2671 = getelementptr inbounds i32, ptr %2670, i64 -7
  %2672 = load <8 x i32>, ptr %2671, align 4, !tbaa !6
  %2673 = shufflevector <8 x i32> %2672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2674 = getelementptr inbounds i32, ptr %2670, i64 -15
  %2675 = load <8 x i32>, ptr %2674, align 4, !tbaa !6
  %2676 = shufflevector <8 x i32> %2675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2677 = getelementptr inbounds i32, ptr %2670, i64 -23
  %2678 = load <8 x i32>, ptr %2677, align 4, !tbaa !6
  %2679 = shufflevector <8 x i32> %2678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2680 = getelementptr inbounds i32, ptr %2670, i64 -31
  %2681 = load <8 x i32>, ptr %2680, align 4, !tbaa !6
  %2682 = shufflevector <8 x i32> %2681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2683 = mul <8 x i32> %2673, %2665
  %2684 = mul <8 x i32> %2676, %2666
  %2685 = mul <8 x i32> %2679, %2667
  %2686 = mul <8 x i32> %2682, %2668
  %2687 = add nuw i64 %2664, 32
  %2688 = icmp eq i64 %2687, %2661
  br i1 %2688, label %2689, label %2663, !llvm.loop !570

2689:                                             ; preds = %2663
  %2690 = mul <8 x i32> %2684, %2683
  %2691 = mul <8 x i32> %2685, %2690
  %2692 = mul <8 x i32> %2686, %2691
  %2693 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2692)
  %2694 = icmp eq i64 %2657, %2661
  br i1 %2694, label %2707, label %2695

2695:                                             ; preds = %2648, %2689
  %2696 = phi i64 [ %2651, %2648 ], [ %2662, %2689 ]
  %2697 = phi i32 [ 1, %2648 ], [ %2693, %2689 ]
  br label %2698

2698:                                             ; preds = %2695, %2698
  %2699 = phi i64 [ %2704, %2698 ], [ %2696, %2695 ]
  %2700 = phi i32 [ %2703, %2698 ], [ %2697, %2695 ]
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2699
  %2702 = load i32, ptr %2701, align 4, !tbaa !6
  %2703 = mul nsw i32 %2702, %2700
  %2704 = add nsw i64 %2699, -1
  %2705 = trunc i64 %2699 to i32
  %2706 = icmp sgt i32 %2705, 0
  br i1 %2706, label %2698, label %2707, !llvm.loop !571

2707:                                             ; preds = %2698, %2689
  %2708 = phi i32 [ %2693, %2689 ], [ %2703, %2698 ]
  %2709 = and i64 %2658, 4294967295
  %2710 = getelementptr inbounds i32, ptr %6, i64 %2709
  %2711 = load i32, ptr %2710, align 4, !tbaa !6
  %2712 = mul nsw i32 %2711, %2708
  %2713 = add nsw i32 %2712, %2652
  %2714 = icmp sgt i64 %2650, 2
  %2715 = add nsw i64 %2651, -1
  %2716 = add i32 %2649, 1
  br i1 %2714, label %2648, label %2717, !llvm.loop !572

2717:                                             ; preds = %2707, %2644
  %2718 = phi i32 [ %2647, %2644 ], [ %2713, %2707 ]
  %2719 = icmp slt i32 %2718, %5
  br i1 %2719, label %2722, label %2720

2720:                                             ; preds = %2717
  %2721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

2722:                                             ; preds = %2717
  %2723 = sext i32 %2718 to i64
  %2724 = getelementptr inbounds i16, ptr %2474, i64 %2723
  %2725 = load i16, ptr %2724, align 2, !tbaa !79
  %2726 = sitofp i16 %2725 to double
  %2727 = fmul fast double %2726, %2726
  %2728 = fmul fast double %2727, %2727
  %2729 = fadd fast double %2728, %2645
  store double %2729, ptr %2476, align 8, !tbaa !19
  %2730 = add nuw nsw i32 %2646, 1
  br i1 %2492, label %2731, label %2781

2731:                                             ; preds = %2722
  %2732 = load i32, ptr %4, align 4, !tbaa !6
  %2733 = load i32, ptr %12, align 4, !tbaa !6
  %2734 = add nsw i32 %2733, -1
  %2735 = icmp slt i32 %2732, %2734
  br i1 %2735, label %2758, label %2736

2736:                                             ; preds = %2731
  %2737 = icmp eq i32 %2732, %2734
  br i1 %2737, label %2738, label %2774

2738:                                             ; preds = %2736
  store i32 0, ptr %4, align 4, !tbaa !6
  %2739 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2739, ptr %6, align 4, !tbaa !6
  br i1 %2497, label %2781, label %2740

2740:                                             ; preds = %2738, %2768
  %2741 = phi i64 [ %2772, %2768 ], [ 1, %2738 ]
  %2742 = getelementptr inbounds i32, ptr %4, i64 %2741
  %2743 = load i32, ptr %2742, align 4, !tbaa !6
  %2744 = getelementptr inbounds i32, ptr %12, i64 %2741
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = add nsw i32 %2745, -1
  %2747 = icmp slt i32 %2743, %2746
  br i1 %2747, label %2748, label %2766

2748:                                             ; preds = %2740
  br i1 %2735, label %2758, label %2749

2749:                                             ; preds = %2748
  %2750 = shl i64 %2741, 32
  %2751 = add i64 %2750, -4294967296
  %2752 = ashr exact i64 %2751, 32
  %2753 = getelementptr inbounds i32, ptr %7, i64 %2752
  %2754 = load i32, ptr %2753, align 4, !tbaa !6
  %2755 = getelementptr inbounds i32, ptr %6, i64 %2741
  %2756 = load i32, ptr %2755, align 4, !tbaa !6
  %2757 = add nsw i32 %2756, %2754
  store i32 %2757, ptr %2755, align 4, !tbaa !6
  br label %2776

2758:                                             ; preds = %2731, %2748
  %2759 = phi i32 [ %2743, %2748 ], [ %2732, %2731 ]
  %2760 = phi ptr [ %2742, %2748 ], [ %4, %2731 ]
  %2761 = phi i64 [ %2741, %2748 ], [ 0, %2731 ]
  %2762 = add nsw i32 %2759, 1
  store i32 %2762, ptr %2760, align 4, !tbaa !6
  %2763 = getelementptr inbounds i32, ptr %7, i64 %2761
  %2764 = load i32, ptr %2763, align 4, !tbaa !6
  %2765 = getelementptr inbounds i32, ptr %6, i64 %2761
  br label %2776

2766:                                             ; preds = %2740
  %2767 = icmp eq i32 %2743, %2746
  br i1 %2767, label %2768, label %2774

2768:                                             ; preds = %2766
  store i32 0, ptr %2742, align 4, !tbaa !6
  %2769 = getelementptr inbounds i32, ptr %8, i64 %2741
  %2770 = load i32, ptr %2769, align 4, !tbaa !6
  %2771 = getelementptr inbounds i32, ptr %6, i64 %2741
  store i32 %2770, ptr %2771, align 4, !tbaa !6
  %2772 = add nuw nsw i64 %2741, 1
  %2773 = icmp eq i64 %2772, %2495
  br i1 %2773, label %2781, label %2740, !llvm.loop !573

2774:                                             ; preds = %2736, %2766
  %2775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2776:                                             ; preds = %2749, %2758
  %2777 = phi ptr [ %2765, %2758 ], [ %2742, %2749 ]
  %2778 = phi i32 [ %2764, %2758 ], [ 1, %2749 ]
  %2779 = load i32, ptr %2777, align 4, !tbaa !6
  %2780 = add nsw i32 %2779, %2778
  store i32 %2780, ptr %2777, align 4, !tbaa !6
  br label %2781

2781:                                             ; preds = %2768, %2776, %2738, %2722
  %2782 = icmp eq i32 %2730, %5
  br i1 %2782, label %3085, label %2644, !llvm.loop !574

2783:                                             ; preds = %2483
  %2784 = getelementptr inbounds i32, ptr %3, i64 %19
  %2785 = load i32, ptr %2784, align 4, !tbaa !6
  %2786 = icmp eq i32 %2785, 0
  %2787 = icmp sgt i32 %5, 0
  br i1 %2786, label %2797, label %2788

2788:                                             ; preds = %2783
  br i1 %2787, label %2789, label %3085

2789:                                             ; preds = %2788
  %2790 = icmp sgt i32 %13, 1
  %2791 = icmp sgt i32 %13, 0
  %2792 = add i32 %13, -2
  %2793 = zext i32 %2792 to i64
  %2794 = zext i32 %13 to i64
  %2795 = add nuw i32 %5, 1
  %2796 = icmp eq i32 %13, 1
  br label %2940

2797:                                             ; preds = %2783
  br i1 %2787, label %2798, label %3085

2798:                                             ; preds = %2797
  %2799 = icmp sgt i32 %13, 1
  %2800 = icmp sgt i32 %13, 0
  %2801 = add i32 %13, -2
  %2802 = zext i32 %2801 to i64
  %2803 = zext i32 %13 to i64
  %2804 = add nuw i32 %5, 1
  %2805 = icmp eq i32 %13, 1
  br label %2806

2806:                                             ; preds = %2798, %2938
  %2807 = phi double [ 0.000000e+00, %2798 ], [ %2888, %2938 ]
  %2808 = phi i32 [ 0, %2798 ], [ %2890, %2938 ]
  %2809 = phi double [ 0.000000e+00, %2798 ], [ %2889, %2938 ]
  %2810 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2799, label %2811, label %2880

2811:                                             ; preds = %2806, %2870
  %2812 = phi i32 [ %2879, %2870 ], [ 0, %2806 ]
  %2813 = phi i64 [ %2821, %2870 ], [ %2803, %2806 ]
  %2814 = phi i64 [ %2878, %2870 ], [ %2802, %2806 ]
  %2815 = phi i32 [ %2876, %2870 ], [ %2810, %2806 ]
  %2816 = sub i32 %2801, %2812
  %2817 = tail call i32 @llvm.smin.i32(i32 %2816, i32 0)
  %2818 = sub i32 %2816, %2817
  %2819 = zext i32 %2818 to i64
  %2820 = add nuw nsw i64 %2819, 1
  %2821 = add nsw i64 %2813, -1
  %2822 = icmp ult i32 %2818, 31
  br i1 %2822, label %2858, label %2823

2823:                                             ; preds = %2811
  %2824 = and i64 %2820, 8589934560
  %2825 = sub i64 %2814, %2824
  br label %2826

2826:                                             ; preds = %2826, %2823
  %2827 = phi i64 [ 0, %2823 ], [ %2850, %2826 ]
  %2828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2823 ], [ %2846, %2826 ]
  %2829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2823 ], [ %2847, %2826 ]
  %2830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2823 ], [ %2848, %2826 ]
  %2831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2823 ], [ %2849, %2826 ]
  %2832 = sub i64 %2814, %2827
  %2833 = getelementptr inbounds i32, ptr %9, i64 %2832
  %2834 = getelementptr inbounds i32, ptr %2833, i64 -7
  %2835 = load <8 x i32>, ptr %2834, align 4, !tbaa !6
  %2836 = shufflevector <8 x i32> %2835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2837 = getelementptr inbounds i32, ptr %2833, i64 -15
  %2838 = load <8 x i32>, ptr %2837, align 4, !tbaa !6
  %2839 = shufflevector <8 x i32> %2838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2840 = getelementptr inbounds i32, ptr %2833, i64 -23
  %2841 = load <8 x i32>, ptr %2840, align 4, !tbaa !6
  %2842 = shufflevector <8 x i32> %2841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2843 = getelementptr inbounds i32, ptr %2833, i64 -31
  %2844 = load <8 x i32>, ptr %2843, align 4, !tbaa !6
  %2845 = shufflevector <8 x i32> %2844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2846 = mul <8 x i32> %2836, %2828
  %2847 = mul <8 x i32> %2839, %2829
  %2848 = mul <8 x i32> %2842, %2830
  %2849 = mul <8 x i32> %2845, %2831
  %2850 = add nuw i64 %2827, 32
  %2851 = icmp eq i64 %2850, %2824
  br i1 %2851, label %2852, label %2826, !llvm.loop !575

2852:                                             ; preds = %2826
  %2853 = mul <8 x i32> %2847, %2846
  %2854 = mul <8 x i32> %2848, %2853
  %2855 = mul <8 x i32> %2849, %2854
  %2856 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2855)
  %2857 = icmp eq i64 %2820, %2824
  br i1 %2857, label %2870, label %2858

2858:                                             ; preds = %2811, %2852
  %2859 = phi i64 [ %2814, %2811 ], [ %2825, %2852 ]
  %2860 = phi i32 [ 1, %2811 ], [ %2856, %2852 ]
  br label %2861

2861:                                             ; preds = %2858, %2861
  %2862 = phi i64 [ %2867, %2861 ], [ %2859, %2858 ]
  %2863 = phi i32 [ %2866, %2861 ], [ %2860, %2858 ]
  %2864 = getelementptr inbounds i32, ptr %9, i64 %2862
  %2865 = load i32, ptr %2864, align 4, !tbaa !6
  %2866 = mul nsw i32 %2865, %2863
  %2867 = add nsw i64 %2862, -1
  %2868 = trunc i64 %2862 to i32
  %2869 = icmp sgt i32 %2868, 0
  br i1 %2869, label %2861, label %2870, !llvm.loop !576

2870:                                             ; preds = %2861, %2852
  %2871 = phi i32 [ %2856, %2852 ], [ %2866, %2861 ]
  %2872 = and i64 %2821, 4294967295
  %2873 = getelementptr inbounds i32, ptr %6, i64 %2872
  %2874 = load i32, ptr %2873, align 4, !tbaa !6
  %2875 = mul nsw i32 %2874, %2871
  %2876 = add nsw i32 %2875, %2815
  %2877 = icmp sgt i64 %2813, 2
  %2878 = add nsw i64 %2814, -1
  %2879 = add i32 %2812, 1
  br i1 %2877, label %2811, label %2880, !llvm.loop !577

2880:                                             ; preds = %2870, %2806
  %2881 = phi i32 [ %2810, %2806 ], [ %2876, %2870 ]
  %2882 = sext i32 %2881 to i64
  %2883 = getelementptr inbounds i16, ptr %2474, i64 %2882
  %2884 = load i16, ptr %2883, align 2, !tbaa !79
  %2885 = sitofp i16 %2884 to double
  %2886 = fmul fast double %2885, %2885
  %2887 = fmul fast double %2886, %2886
  %2888 = fadd fast double %2887, %2807
  %2889 = fadd fast double %2809, 1.000000e+00
  %2890 = add nuw nsw i32 %2808, 1
  br i1 %2800, label %2891, label %2938

2891:                                             ; preds = %2880
  %2892 = load i32, ptr %4, align 4, !tbaa !6
  %2893 = load i32, ptr %12, align 4, !tbaa !6
  %2894 = add nsw i32 %2893, -1
  %2895 = icmp slt i32 %2892, %2894
  br i1 %2895, label %2915, label %2896

2896:                                             ; preds = %2891
  %2897 = icmp eq i32 %2892, %2894
  br i1 %2897, label %2898, label %2931

2898:                                             ; preds = %2896
  store i32 0, ptr %4, align 4, !tbaa !6
  %2899 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2899, ptr %6, align 4, !tbaa !6
  br i1 %2805, label %2938, label %2900

2900:                                             ; preds = %2898, %2925
  %2901 = phi i64 [ %2929, %2925 ], [ 1, %2898 ]
  %2902 = getelementptr inbounds i32, ptr %4, i64 %2901
  %2903 = load i32, ptr %2902, align 4, !tbaa !6
  %2904 = getelementptr inbounds i32, ptr %12, i64 %2901
  %2905 = load i32, ptr %2904, align 4, !tbaa !6
  %2906 = add nsw i32 %2905, -1
  %2907 = icmp slt i32 %2903, %2906
  br i1 %2907, label %2908, label %2923

2908:                                             ; preds = %2900
  br i1 %2895, label %2915, label %2909

2909:                                             ; preds = %2908
  %2910 = getelementptr inbounds i32, ptr %7, i64 %2901
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = getelementptr inbounds i32, ptr %6, i64 %2901
  %2913 = load i32, ptr %2912, align 4, !tbaa !6
  %2914 = add nsw i32 %2913, %2911
  store i32 %2914, ptr %2912, align 4, !tbaa !6
  br label %2933

2915:                                             ; preds = %2891, %2908
  %2916 = phi i32 [ %2903, %2908 ], [ %2892, %2891 ]
  %2917 = phi ptr [ %2902, %2908 ], [ %4, %2891 ]
  %2918 = phi i64 [ %2901, %2908 ], [ 0, %2891 ]
  %2919 = add nsw i32 %2916, 1
  store i32 %2919, ptr %2917, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %7, i64 %2918
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = getelementptr inbounds i32, ptr %6, i64 %2918
  br label %2933

2923:                                             ; preds = %2900
  %2924 = icmp eq i32 %2903, %2906
  br i1 %2924, label %2925, label %2931

2925:                                             ; preds = %2923
  store i32 0, ptr %2902, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %8, i64 %2901
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2901
  store i32 %2927, ptr %2928, align 4, !tbaa !6
  %2929 = add nuw nsw i64 %2901, 1
  %2930 = icmp eq i64 %2929, %2803
  br i1 %2930, label %2938, label %2900, !llvm.loop !578

2931:                                             ; preds = %2896, %2923
  store double %2888, ptr %2476, align 8, !tbaa !19
  %2932 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

2933:                                             ; preds = %2909, %2915
  %2934 = phi ptr [ %2922, %2915 ], [ %2902, %2909 ]
  %2935 = phi i32 [ %2921, %2915 ], [ 1, %2909 ]
  %2936 = load i32, ptr %2934, align 4, !tbaa !6
  %2937 = add nsw i32 %2936, %2935
  store i32 %2937, ptr %2934, align 4, !tbaa !6
  br label %2938

2938:                                             ; preds = %2925, %2933, %2898, %2880
  %2939 = icmp eq i32 %2890, %5
  br i1 %2939, label %3084, label %2806, !llvm.loop !579

2940:                                             ; preds = %2789, %3077
  %2941 = phi double [ 0.000000e+00, %2789 ], [ %3025, %3077 ]
  %2942 = phi i32 [ 0, %2789 ], [ %3026, %3077 ]
  %2943 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2790, label %2944, label %3013

2944:                                             ; preds = %2940, %3003
  %2945 = phi i32 [ %3012, %3003 ], [ 0, %2940 ]
  %2946 = phi i64 [ %2954, %3003 ], [ %2794, %2940 ]
  %2947 = phi i64 [ %3011, %3003 ], [ %2793, %2940 ]
  %2948 = phi i32 [ %3009, %3003 ], [ %2943, %2940 ]
  %2949 = sub i32 %2792, %2945
  %2950 = tail call i32 @llvm.smin.i32(i32 %2949, i32 0)
  %2951 = sub i32 %2949, %2950
  %2952 = zext i32 %2951 to i64
  %2953 = add nuw nsw i64 %2952, 1
  %2954 = add nsw i64 %2946, -1
  %2955 = icmp ult i32 %2951, 31
  br i1 %2955, label %2991, label %2956

2956:                                             ; preds = %2944
  %2957 = and i64 %2953, 8589934560
  %2958 = sub i64 %2947, %2957
  br label %2959

2959:                                             ; preds = %2959, %2956
  %2960 = phi i64 [ 0, %2956 ], [ %2983, %2959 ]
  %2961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2956 ], [ %2979, %2959 ]
  %2962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2956 ], [ %2980, %2959 ]
  %2963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2956 ], [ %2981, %2959 ]
  %2964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2956 ], [ %2982, %2959 ]
  %2965 = sub i64 %2947, %2960
  %2966 = getelementptr inbounds i32, ptr %11, i64 %2965
  %2967 = getelementptr inbounds i32, ptr %2966, i64 -7
  %2968 = load <8 x i32>, ptr %2967, align 4, !tbaa !6
  %2969 = shufflevector <8 x i32> %2968, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2970 = getelementptr inbounds i32, ptr %2966, i64 -15
  %2971 = load <8 x i32>, ptr %2970, align 4, !tbaa !6
  %2972 = shufflevector <8 x i32> %2971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2973 = getelementptr inbounds i32, ptr %2966, i64 -23
  %2974 = load <8 x i32>, ptr %2973, align 4, !tbaa !6
  %2975 = shufflevector <8 x i32> %2974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2976 = getelementptr inbounds i32, ptr %2966, i64 -31
  %2977 = load <8 x i32>, ptr %2976, align 4, !tbaa !6
  %2978 = shufflevector <8 x i32> %2977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2979 = mul <8 x i32> %2969, %2961
  %2980 = mul <8 x i32> %2972, %2962
  %2981 = mul <8 x i32> %2975, %2963
  %2982 = mul <8 x i32> %2978, %2964
  %2983 = add nuw i64 %2960, 32
  %2984 = icmp eq i64 %2983, %2957
  br i1 %2984, label %2985, label %2959, !llvm.loop !580

2985:                                             ; preds = %2959
  %2986 = mul <8 x i32> %2980, %2979
  %2987 = mul <8 x i32> %2981, %2986
  %2988 = mul <8 x i32> %2982, %2987
  %2989 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2988)
  %2990 = icmp eq i64 %2953, %2957
  br i1 %2990, label %3003, label %2991

2991:                                             ; preds = %2944, %2985
  %2992 = phi i64 [ %2947, %2944 ], [ %2958, %2985 ]
  %2993 = phi i32 [ 1, %2944 ], [ %2989, %2985 ]
  br label %2994

2994:                                             ; preds = %2991, %2994
  %2995 = phi i64 [ %3000, %2994 ], [ %2992, %2991 ]
  %2996 = phi i32 [ %2999, %2994 ], [ %2993, %2991 ]
  %2997 = getelementptr inbounds i32, ptr %11, i64 %2995
  %2998 = load i32, ptr %2997, align 4, !tbaa !6
  %2999 = mul nsw i32 %2998, %2996
  %3000 = add nsw i64 %2995, -1
  %3001 = trunc i64 %2995 to i32
  %3002 = icmp sgt i32 %3001, 0
  br i1 %3002, label %2994, label %3003, !llvm.loop !581

3003:                                             ; preds = %2994, %2985
  %3004 = phi i32 [ %2989, %2985 ], [ %2999, %2994 ]
  %3005 = and i64 %2954, 4294967295
  %3006 = getelementptr inbounds i32, ptr %6, i64 %3005
  %3007 = load i32, ptr %3006, align 4, !tbaa !6
  %3008 = mul nsw i32 %3007, %3004
  %3009 = add nsw i32 %3008, %2948
  %3010 = icmp sgt i64 %2946, 2
  %3011 = add nsw i64 %2947, -1
  %3012 = add i32 %2945, 1
  br i1 %3010, label %2944, label %3013, !llvm.loop !582

3013:                                             ; preds = %3003, %2940
  %3014 = phi i32 [ %2943, %2940 ], [ %3009, %3003 ]
  %3015 = icmp slt i32 %3014, %5
  br i1 %3015, label %3018, label %3016

3016:                                             ; preds = %3013
  %3017 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3090

3018:                                             ; preds = %3013
  %3019 = sext i32 %3014 to i64
  %3020 = getelementptr inbounds i16, ptr %2474, i64 %3019
  %3021 = load i16, ptr %3020, align 2, !tbaa !79
  %3022 = sitofp i16 %3021 to double
  %3023 = fmul fast double %3022, %3022
  %3024 = fmul fast double %3023, %3023
  %3025 = fadd fast double %3024, %2941
  store double %3025, ptr %2476, align 8, !tbaa !19
  %3026 = add nuw nsw i32 %2942, 1
  br i1 %2791, label %3027, label %3077

3027:                                             ; preds = %3018
  %3028 = load i32, ptr %4, align 4, !tbaa !6
  %3029 = load i32, ptr %12, align 4, !tbaa !6
  %3030 = add nsw i32 %3029, -1
  %3031 = icmp slt i32 %3028, %3030
  br i1 %3031, label %3054, label %3032

3032:                                             ; preds = %3027
  %3033 = icmp eq i32 %3028, %3030
  br i1 %3033, label %3034, label %3070

3034:                                             ; preds = %3032
  store i32 0, ptr %4, align 4, !tbaa !6
  %3035 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3035, ptr %6, align 4, !tbaa !6
  br i1 %2796, label %3077, label %3036

3036:                                             ; preds = %3034, %3064
  %3037 = phi i64 [ %3068, %3064 ], [ 1, %3034 ]
  %3038 = getelementptr inbounds i32, ptr %4, i64 %3037
  %3039 = load i32, ptr %3038, align 4, !tbaa !6
  %3040 = getelementptr inbounds i32, ptr %12, i64 %3037
  %3041 = load i32, ptr %3040, align 4, !tbaa !6
  %3042 = add nsw i32 %3041, -1
  %3043 = icmp slt i32 %3039, %3042
  br i1 %3043, label %3044, label %3062

3044:                                             ; preds = %3036
  br i1 %3031, label %3054, label %3045

3045:                                             ; preds = %3044
  %3046 = shl i64 %3037, 32
  %3047 = add i64 %3046, -4294967296
  %3048 = ashr exact i64 %3047, 32
  %3049 = getelementptr inbounds i32, ptr %7, i64 %3048
  %3050 = load i32, ptr %3049, align 4, !tbaa !6
  %3051 = getelementptr inbounds i32, ptr %6, i64 %3037
  %3052 = load i32, ptr %3051, align 4, !tbaa !6
  %3053 = add nsw i32 %3052, %3050
  store i32 %3053, ptr %3051, align 4, !tbaa !6
  br label %3072

3054:                                             ; preds = %3027, %3044
  %3055 = phi i32 [ %3039, %3044 ], [ %3028, %3027 ]
  %3056 = phi ptr [ %3038, %3044 ], [ %4, %3027 ]
  %3057 = phi i64 [ %3037, %3044 ], [ 0, %3027 ]
  %3058 = add nsw i32 %3055, 1
  store i32 %3058, ptr %3056, align 4, !tbaa !6
  %3059 = getelementptr inbounds i32, ptr %7, i64 %3057
  %3060 = load i32, ptr %3059, align 4, !tbaa !6
  %3061 = getelementptr inbounds i32, ptr %6, i64 %3057
  br label %3072

3062:                                             ; preds = %3036
  %3063 = icmp eq i32 %3039, %3042
  br i1 %3063, label %3064, label %3070

3064:                                             ; preds = %3062
  store i32 0, ptr %3038, align 4, !tbaa !6
  %3065 = getelementptr inbounds i32, ptr %8, i64 %3037
  %3066 = load i32, ptr %3065, align 4, !tbaa !6
  %3067 = getelementptr inbounds i32, ptr %6, i64 %3037
  store i32 %3066, ptr %3067, align 4, !tbaa !6
  %3068 = add nuw nsw i64 %3037, 1
  %3069 = icmp eq i64 %3068, %2794
  br i1 %3069, label %3077, label %3036, !llvm.loop !583

3070:                                             ; preds = %3032, %3062
  %3071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3090

3072:                                             ; preds = %3045, %3054
  %3073 = phi ptr [ %3061, %3054 ], [ %3038, %3045 ]
  %3074 = phi i32 [ %3060, %3054 ], [ 1, %3045 ]
  %3075 = load i32, ptr %3073, align 4, !tbaa !6
  %3076 = add nsw i32 %3075, %3074
  store i32 %3076, ptr %3073, align 4, !tbaa !6
  br label %3077

3077:                                             ; preds = %3064, %3072, %3034, %3018
  %3078 = icmp eq i32 %3026, %5
  br i1 %3078, label %3085, label %2940, !llvm.loop !584

3079:                                             ; preds = %2483
  %3080 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3085

3081:                                             ; preds = %1716
  store double %1666, ptr %1254, align 8, !tbaa !19
  br label %3085

3082:                                             ; preds = %2031
  store float %1981, ptr %1863, align 4, !tbaa !163
  br label %3085

3083:                                             ; preds = %2329
  store float %2279, ptr %1863, align 4, !tbaa !163
  br label %3085

3084:                                             ; preds = %2938
  store double %2888, ptr %2476, align 8, !tbaa !19
  br label %3085

3085:                                             ; preds = %3077, %2781, %2642, %2468, %2172, %1855, %1559, %1420, %1246, %1107, %950, %809, %633, %494, %337, %195, %2788, %2797, %3084, %2489, %2498, %2179, %2188, %3083, %1876, %1885, %3082, %1566, %1575, %3081, %1267, %1276, %957, %966, %654, %663, %344, %353, %39, %48, %2478, %3079, %1865, %2470, %1256, %1857, %643, %1248, %28, %635, %18
  %3086 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1248 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1857 ], [ 0.000000e+00, %1256 ], [ 0.000000e+00, %2470 ], [ 0.000000e+00, %1865 ], [ 0.000000e+00, %3079 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %663 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %966 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1267 ], [ %1667, %3081 ], [ 0.000000e+00, %1575 ], [ 0.000000e+00, %1566 ], [ %1982, %3082 ], [ 0.000000e+00, %1885 ], [ 0.000000e+00, %1876 ], [ %2280, %3083 ], [ 0.000000e+00, %2188 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2498 ], [ 0.000000e+00, %2489 ], [ %2889, %3084 ], [ 0.000000e+00, %2797 ], [ 0.000000e+00, %2788 ], [ %146, %195 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %760, %809 ], [ 0.000000e+00, %950 ], [ %1058, %1107 ], [ 0.000000e+00, %1246 ], [ %1371, %1420 ], [ 0.000000e+00, %1559 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %2172 ], [ 0.000000e+00, %2468 ], [ %2593, %2642 ], [ 0.000000e+00, %2781 ], [ 0.000000e+00, %3077 ]
  %3087 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1248 ], [ 1, %643 ], [ 1, %1857 ], [ 1, %1256 ], [ 1, %2470 ], [ 1, %1865 ], [ 1, %3079 ], [ 1, %2478 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %663 ], [ 1, %654 ], [ 1, %966 ], [ 1, %957 ], [ 1, %1276 ], [ 1, %1267 ], [ %1582, %3081 ], [ 1, %1575 ], [ 1, %1566 ], [ %1892, %3082 ], [ 1, %1885 ], [ 1, %1876 ], [ %2195, %3083 ], [ 1, %2188 ], [ 1, %2179 ], [ 1, %2498 ], [ 1, %2489 ], [ %2804, %3084 ], [ 1, %2797 ], [ 1, %2788 ], [ %55, %195 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %670, %809 ], [ %661, %950 ], [ %973, %1107 ], [ %964, %1246 ], [ %1283, %1420 ], [ %1274, %1559 ], [ %1573, %1855 ], [ %1883, %2172 ], [ %2186, %2468 ], [ %2505, %2642 ], [ %2496, %2781 ], [ %2795, %3077 ]
  %3088 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3087, ptr noundef nonnull @.str.5) #3
  %3089 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3086, ptr noundef nonnull @.str.6) #3
  br label %3090

3090:                                             ; preds = %2635, %2720, %2774, %2931, %3016, %3070, %2024, %2109, %2165, %2322, %2407, %2461, %1413, %1498, %1552, %1709, %1794, %1848, %802, %886, %943, %1100, %1184, %1239, %188, %272, %330, %487, %571, %626, %3085
  %3091 = phi i32 [ 0, %3085 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1239 ], [ -1, %1184 ], [ -1, %1100 ], [ -1, %943 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1848 ], [ -1, %1794 ], [ -1, %1709 ], [ -1, %1552 ], [ -1, %1498 ], [ -1, %1413 ], [ -1, %2461 ], [ -1, %2407 ], [ -1, %2322 ], [ -1, %2165 ], [ -1, %2109 ], [ -1, %2024 ], [ -1, %3070 ], [ -1, %3016 ], [ -1, %2931 ], [ -1, %2774 ], [ -1, %2720 ], [ -1, %2635 ]
  ret i32 %3091
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5545 [
    i32 101, label %22
    i32 102, label %637
    i32 103, label %1247
    i32 104, label %1864
    i32 105, label %2481
    i32 106, label %3091
    i32 107, label %3704
    i32 108, label %4313
    i32 109, label %4928
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !6
  %30 = mul i32 %29, %29
  %31 = mul i32 %30, %30
  %32 = trunc i32 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5545

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5545

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %5545

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !585

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !586

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !587

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i32, ptr %24, i64 %132
  %136 = load i32, ptr %135, align 4, !tbaa !6
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i32 %136, 255
  %140 = sitofp i32 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %138
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !588

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5545, label %57, !llvm.loop !589

197:                                              ; preds = %40, %337
  %198 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !590

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !591

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !592

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds i32, ptr %24, i64 %275
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = uitofp i8 %278 to double
  %280 = and i32 %277, 255
  %281 = sitofp i32 %280 to double
  %282 = fmul fast double %281, %281
  %283 = fmul fast double %282, %282
  %284 = fadd fast double %283, %279
  %285 = fptoui double %284 to i8
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %198, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %274
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !593

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %274
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %5545, label %197, !llvm.loop !594

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %5545

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %5545

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !595

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !596

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !597

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i32, ptr %24, i64 %437
  %439 = load i32, ptr %438, align 4, !tbaa !6
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i32 %439, %439
  %442 = mul i32 %441, %441
  %443 = trunc i32 %442 to i8
  %444 = add i8 %440, %443
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !598

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %5545, label %362, !llvm.loop !599

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !600

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !601

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !602

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

573:                                              ; preds = %568
  %574 = sext i32 %569 to i64
  %575 = getelementptr inbounds i32, ptr %24, i64 %574
  %576 = load i32, ptr %575, align 4, !tbaa !6
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i32 %576, %576
  %579 = mul i32 %578, %578
  %580 = trunc i32 %579 to i8
  %581 = add i8 %577, %580
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !603

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %5545, label %496, !llvm.loop !604

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1161, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %647

643:                                              ; preds = %637
  %644 = load i32, ptr %639, align 4, !tbaa !6
  %645 = mul i32 %644, %644
  %646 = mul i32 %645, %645
  store i32 %646, ptr %641, align 4, !tbaa !6
  br label %5545

647:                                              ; preds = %637
  switch i32 %1, label %1245 [
    i32 1, label %648
    i32 0, label %951
  ]

648:                                              ; preds = %647
  %649 = getelementptr inbounds i32, ptr %3, i64 %19
  %650 = load i32, ptr %649, align 4, !tbaa !6
  %651 = icmp eq i32 %650, 0
  %652 = icmp sgt i32 %5, 0
  br i1 %651, label %662, label %653

653:                                              ; preds = %648
  br i1 %652, label %654, label %5545

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %810

662:                                              ; preds = %648
  br i1 %652, label %663, label %5545

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %671

671:                                              ; preds = %663, %808
  %672 = phi i32 [ 0, %663 ], [ %760, %808 ]
  %673 = phi double [ 0.000000e+00, %663 ], [ %759, %808 ]
  %674 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %675, label %744

675:                                              ; preds = %671, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %671 ]
  %677 = phi i64 [ %685, %734 ], [ %668, %671 ]
  %678 = phi i64 [ %742, %734 ], [ %667, %671 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %671 ]
  %680 = sub i32 %666, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !605

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !6
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !606

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !607

744:                                              ; preds = %734, %671
  %745 = phi i32 [ %674, %671 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !19
  %749 = getelementptr inbounds i32, ptr %639, i64 %746
  %750 = load i32, ptr %749, align 4, !tbaa !6
  %751 = load i32, ptr %641, align 4, !tbaa !6
  %752 = sitofp i32 %751 to double
  %753 = sitofp i32 %750 to double
  %754 = fmul fast double %748, %753
  %755 = fmul fast double %754, %754
  %756 = fmul fast double %755, %755
  %757 = fadd fast double %756, %752
  %758 = fptosi double %757 to i32
  store i32 %758, ptr %641, align 4, !tbaa !6
  %759 = fadd fast double %748, %673
  %760 = add nuw nsw i32 %672, 1
  br i1 %665, label %761, label %808

761:                                              ; preds = %744
  %762 = load i32, ptr %4, align 4, !tbaa !6
  %763 = load i32, ptr %12, align 4, !tbaa !6
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %762, %764
  br i1 %765, label %785, label %766

766:                                              ; preds = %761
  %767 = icmp eq i32 %762, %764
  br i1 %767, label %768, label %801

768:                                              ; preds = %766
  store i32 0, ptr %4, align 4, !tbaa !6
  %769 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %769, ptr %6, align 4, !tbaa !6
  br i1 %670, label %808, label %770

770:                                              ; preds = %768, %795
  %771 = phi i64 [ %799, %795 ], [ 1, %768 ]
  %772 = getelementptr inbounds i32, ptr %4, i64 %771
  %773 = load i32, ptr %772, align 4, !tbaa !6
  %774 = getelementptr inbounds i32, ptr %12, i64 %771
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = add nsw i32 %775, -1
  %777 = icmp slt i32 %773, %776
  br i1 %777, label %778, label %793

778:                                              ; preds = %770
  br i1 %765, label %785, label %779

779:                                              ; preds = %778
  %780 = getelementptr inbounds i32, ptr %7, i64 %771
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = getelementptr inbounds i32, ptr %6, i64 %771
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = add nsw i32 %783, %781
  store i32 %784, ptr %782, align 4, !tbaa !6
  br label %803

785:                                              ; preds = %761, %778
  %786 = phi i32 [ %773, %778 ], [ %762, %761 ]
  %787 = phi ptr [ %772, %778 ], [ %4, %761 ]
  %788 = phi i64 [ %771, %778 ], [ 0, %761 ]
  %789 = add nsw i32 %786, 1
  store i32 %789, ptr %787, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %7, i64 %788
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %788
  br label %803

793:                                              ; preds = %770
  %794 = icmp eq i32 %773, %776
  br i1 %794, label %795, label %801

795:                                              ; preds = %793
  store i32 0, ptr %772, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %8, i64 %771
  %797 = load i32, ptr %796, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %6, i64 %771
  store i32 %797, ptr %798, align 4, !tbaa !6
  %799 = add nuw nsw i64 %771, 1
  %800 = icmp eq i64 %799, %668
  br i1 %800, label %808, label %770, !llvm.loop !608

801:                                              ; preds = %766, %793
  %802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

803:                                              ; preds = %779, %785
  %804 = phi ptr [ %792, %785 ], [ %772, %779 ]
  %805 = phi i32 [ %791, %785 ], [ 1, %779 ]
  %806 = load i32, ptr %804, align 4, !tbaa !6
  %807 = add nsw i32 %806, %805
  store i32 %807, ptr %804, align 4, !tbaa !6
  br label %808

808:                                              ; preds = %795, %803, %768, %744
  %809 = icmp eq i32 %760, %5
  br i1 %809, label %5545, label %671, !llvm.loop !609

810:                                              ; preds = %654, %949
  %811 = phi i32 [ 0, %654 ], [ %898, %949 ]
  %812 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %655, label %813, label %882

813:                                              ; preds = %810, %872
  %814 = phi i32 [ %881, %872 ], [ 0, %810 ]
  %815 = phi i64 [ %823, %872 ], [ %659, %810 ]
  %816 = phi i64 [ %880, %872 ], [ %658, %810 ]
  %817 = phi i32 [ %878, %872 ], [ %812, %810 ]
  %818 = sub i32 %657, %814
  %819 = tail call i32 @llvm.smin.i32(i32 %818, i32 0)
  %820 = sub i32 %818, %819
  %821 = zext i32 %820 to i64
  %822 = add nuw nsw i64 %821, 1
  %823 = add nsw i64 %815, -1
  %824 = icmp ult i32 %820, 31
  br i1 %824, label %860, label %825

825:                                              ; preds = %813
  %826 = and i64 %822, 8589934560
  %827 = sub i64 %816, %826
  br label %828

828:                                              ; preds = %828, %825
  %829 = phi i64 [ 0, %825 ], [ %852, %828 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %848, %828 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %849, %828 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %850, %828 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %851, %828 ]
  %834 = sub i64 %816, %829
  %835 = getelementptr inbounds i32, ptr %11, i64 %834
  %836 = getelementptr inbounds i32, ptr %835, i64 -7
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !6
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %835, i64 -15
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !6
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %835, i64 -23
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !6
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %835, i64 -31
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = mul <8 x i32> %838, %830
  %849 = mul <8 x i32> %841, %831
  %850 = mul <8 x i32> %844, %832
  %851 = mul <8 x i32> %847, %833
  %852 = add nuw i64 %829, 32
  %853 = icmp eq i64 %852, %826
  br i1 %853, label %854, label %828, !llvm.loop !610

854:                                              ; preds = %828
  %855 = mul <8 x i32> %849, %848
  %856 = mul <8 x i32> %850, %855
  %857 = mul <8 x i32> %851, %856
  %858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %857)
  %859 = icmp eq i64 %822, %826
  br i1 %859, label %872, label %860

860:                                              ; preds = %813, %854
  %861 = phi i64 [ %816, %813 ], [ %827, %854 ]
  %862 = phi i32 [ 1, %813 ], [ %858, %854 ]
  br label %863

863:                                              ; preds = %860, %863
  %864 = phi i64 [ %869, %863 ], [ %861, %860 ]
  %865 = phi i32 [ %868, %863 ], [ %862, %860 ]
  %866 = getelementptr inbounds i32, ptr %11, i64 %864
  %867 = load i32, ptr %866, align 4, !tbaa !6
  %868 = mul nsw i32 %867, %865
  %869 = add nsw i64 %864, -1
  %870 = trunc i64 %864 to i32
  %871 = icmp sgt i32 %870, 0
  br i1 %871, label %863, label %872, !llvm.loop !611

872:                                              ; preds = %863, %854
  %873 = phi i32 [ %858, %854 ], [ %868, %863 ]
  %874 = and i64 %823, 4294967295
  %875 = getelementptr inbounds i32, ptr %6, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !6
  %877 = mul nsw i32 %876, %873
  %878 = add nsw i32 %877, %817
  %879 = icmp sgt i64 %815, 2
  %880 = add nsw i64 %816, -1
  %881 = add i32 %814, 1
  br i1 %879, label %813, label %882, !llvm.loop !612

882:                                              ; preds = %872, %810
  %883 = phi i32 [ %812, %810 ], [ %878, %872 ]
  %884 = icmp slt i32 %883, %5
  br i1 %884, label %887, label %885

885:                                              ; preds = %882
  %886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

887:                                              ; preds = %882
  %888 = sext i32 %883 to i64
  %889 = getelementptr inbounds i32, ptr %639, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !6
  %891 = load i32, ptr %641, align 4, !tbaa !6
  %892 = sitofp i32 %891 to double
  %893 = sitofp i32 %890 to double
  %894 = fmul fast double %893, %893
  %895 = fmul fast double %894, %894
  %896 = fadd fast double %895, %892
  %897 = fptosi double %896 to i32
  store i32 %897, ptr %641, align 4, !tbaa !6
  %898 = add nuw nsw i32 %811, 1
  br i1 %656, label %899, label %949

899:                                              ; preds = %887
  %900 = load i32, ptr %4, align 4, !tbaa !6
  %901 = load i32, ptr %12, align 4, !tbaa !6
  %902 = add nsw i32 %901, -1
  %903 = icmp slt i32 %900, %902
  br i1 %903, label %926, label %904

904:                                              ; preds = %899
  %905 = icmp eq i32 %900, %902
  br i1 %905, label %906, label %942

906:                                              ; preds = %904
  store i32 0, ptr %4, align 4, !tbaa !6
  %907 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %907, ptr %6, align 4, !tbaa !6
  br i1 %661, label %949, label %908

908:                                              ; preds = %906, %936
  %909 = phi i64 [ %940, %936 ], [ 1, %906 ]
  %910 = getelementptr inbounds i32, ptr %4, i64 %909
  %911 = load i32, ptr %910, align 4, !tbaa !6
  %912 = getelementptr inbounds i32, ptr %12, i64 %909
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %911, %914
  br i1 %915, label %916, label %934

916:                                              ; preds = %908
  br i1 %903, label %926, label %917

917:                                              ; preds = %916
  %918 = shl i64 %909, 32
  %919 = add i64 %918, -4294967296
  %920 = ashr exact i64 %919, 32
  %921 = getelementptr inbounds i32, ptr %7, i64 %920
  %922 = load i32, ptr %921, align 4, !tbaa !6
  %923 = getelementptr inbounds i32, ptr %6, i64 %909
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = add nsw i32 %924, %922
  store i32 %925, ptr %923, align 4, !tbaa !6
  br label %944

926:                                              ; preds = %899, %916
  %927 = phi i32 [ %911, %916 ], [ %900, %899 ]
  %928 = phi ptr [ %910, %916 ], [ %4, %899 ]
  %929 = phi i64 [ %909, %916 ], [ 0, %899 ]
  %930 = add nsw i32 %927, 1
  store i32 %930, ptr %928, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %7, i64 %929
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %6, i64 %929
  br label %944

934:                                              ; preds = %908
  %935 = icmp eq i32 %911, %914
  br i1 %935, label %936, label %942

936:                                              ; preds = %934
  store i32 0, ptr %910, align 4, !tbaa !6
  %937 = getelementptr inbounds i32, ptr %8, i64 %909
  %938 = load i32, ptr %937, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %6, i64 %909
  store i32 %938, ptr %939, align 4, !tbaa !6
  %940 = add nuw nsw i64 %909, 1
  %941 = icmp eq i64 %940, %659
  br i1 %941, label %949, label %908, !llvm.loop !613

942:                                              ; preds = %904, %934
  %943 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

944:                                              ; preds = %917, %926
  %945 = phi ptr [ %933, %926 ], [ %910, %917 ]
  %946 = phi i32 [ %932, %926 ], [ 1, %917 ]
  %947 = load i32, ptr %945, align 4, !tbaa !6
  %948 = add nsw i32 %947, %946
  store i32 %948, ptr %945, align 4, !tbaa !6
  br label %949

949:                                              ; preds = %936, %944, %906, %887
  %950 = icmp eq i32 %898, %5
  br i1 %950, label %5545, label %810, !llvm.loop !614

951:                                              ; preds = %647
  %952 = getelementptr inbounds i32, ptr %3, i64 %19
  %953 = load i32, ptr %952, align 4, !tbaa !6
  %954 = icmp eq i32 %953, 0
  %955 = icmp sgt i32 %5, 0
  br i1 %954, label %965, label %956

956:                                              ; preds = %951
  br i1 %955, label %957, label %5545

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %1107

965:                                              ; preds = %951
  br i1 %955, label %966, label %5545

966:                                              ; preds = %965
  %967 = icmp sgt i32 %13, 1
  %968 = icmp sgt i32 %13, 0
  %969 = add i32 %13, -2
  %970 = zext i32 %969 to i64
  %971 = zext i32 %13 to i64
  %972 = add nuw i32 %5, 1
  %973 = icmp eq i32 %13, 1
  br label %974

974:                                              ; preds = %966, %1105
  %975 = phi i32 [ 0, %966 ], [ %1057, %1105 ]
  %976 = phi double [ 0.000000e+00, %966 ], [ %1056, %1105 ]
  %977 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %967, label %978, label %1047

978:                                              ; preds = %974, %1037
  %979 = phi i32 [ %1046, %1037 ], [ 0, %974 ]
  %980 = phi i64 [ %988, %1037 ], [ %971, %974 ]
  %981 = phi i64 [ %1045, %1037 ], [ %970, %974 ]
  %982 = phi i32 [ %1043, %1037 ], [ %977, %974 ]
  %983 = sub i32 %969, %979
  %984 = tail call i32 @llvm.smin.i32(i32 %983, i32 0)
  %985 = sub i32 %983, %984
  %986 = zext i32 %985 to i64
  %987 = add nuw nsw i64 %986, 1
  %988 = add nsw i64 %980, -1
  %989 = icmp ult i32 %985, 31
  br i1 %989, label %1025, label %990

990:                                              ; preds = %978
  %991 = and i64 %987, 8589934560
  %992 = sub i64 %981, %991
  br label %993

993:                                              ; preds = %993, %990
  %994 = phi i64 [ 0, %990 ], [ %1017, %993 ]
  %995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1013, %993 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1014, %993 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1015, %993 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %990 ], [ %1016, %993 ]
  %999 = sub i64 %981, %994
  %1000 = getelementptr inbounds i32, ptr %9, i64 %999
  %1001 = getelementptr inbounds i32, ptr %1000, i64 -7
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = getelementptr inbounds i32, ptr %1000, i64 -15
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = getelementptr inbounds i32, ptr %1000, i64 -23
  %1008 = load <8 x i32>, ptr %1007, align 4, !tbaa !6
  %1009 = shufflevector <8 x i32> %1008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1010 = getelementptr inbounds i32, ptr %1000, i64 -31
  %1011 = load <8 x i32>, ptr %1010, align 4, !tbaa !6
  %1012 = shufflevector <8 x i32> %1011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1013 = mul <8 x i32> %1003, %995
  %1014 = mul <8 x i32> %1006, %996
  %1015 = mul <8 x i32> %1009, %997
  %1016 = mul <8 x i32> %1012, %998
  %1017 = add nuw i64 %994, 32
  %1018 = icmp eq i64 %1017, %991
  br i1 %1018, label %1019, label %993, !llvm.loop !615

1019:                                             ; preds = %993
  %1020 = mul <8 x i32> %1014, %1013
  %1021 = mul <8 x i32> %1015, %1020
  %1022 = mul <8 x i32> %1016, %1021
  %1023 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1022)
  %1024 = icmp eq i64 %987, %991
  br i1 %1024, label %1037, label %1025

1025:                                             ; preds = %978, %1019
  %1026 = phi i64 [ %981, %978 ], [ %992, %1019 ]
  %1027 = phi i32 [ 1, %978 ], [ %1023, %1019 ]
  br label %1028

1028:                                             ; preds = %1025, %1028
  %1029 = phi i64 [ %1034, %1028 ], [ %1026, %1025 ]
  %1030 = phi i32 [ %1033, %1028 ], [ %1027, %1025 ]
  %1031 = getelementptr inbounds i32, ptr %9, i64 %1029
  %1032 = load i32, ptr %1031, align 4, !tbaa !6
  %1033 = mul nsw i32 %1032, %1030
  %1034 = add nsw i64 %1029, -1
  %1035 = trunc i64 %1029 to i32
  %1036 = icmp sgt i32 %1035, 0
  br i1 %1036, label %1028, label %1037, !llvm.loop !616

1037:                                             ; preds = %1028, %1019
  %1038 = phi i32 [ %1023, %1019 ], [ %1033, %1028 ]
  %1039 = and i64 %988, 4294967295
  %1040 = getelementptr inbounds i32, ptr %6, i64 %1039
  %1041 = load i32, ptr %1040, align 4, !tbaa !6
  %1042 = mul nsw i32 %1041, %1038
  %1043 = add nsw i32 %1042, %982
  %1044 = icmp sgt i64 %980, 2
  %1045 = add nsw i64 %981, -1
  %1046 = add i32 %979, 1
  br i1 %1044, label %978, label %1047, !llvm.loop !617

1047:                                             ; preds = %1037, %974
  %1048 = phi i32 [ %977, %974 ], [ %1043, %1037 ]
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds i32, ptr %639, i64 %1049
  %1051 = load i32, ptr %1050, align 4, !tbaa !6
  %1052 = load i32, ptr %641, align 4, !tbaa !6
  %1053 = mul i32 %1051, %1051
  %1054 = mul i32 %1053, %1053
  %1055 = add nsw i32 %1054, %1052
  store i32 %1055, ptr %641, align 4, !tbaa !6
  %1056 = fadd fast double %976, 1.000000e+00
  %1057 = add nuw nsw i32 %975, 1
  br i1 %968, label %1058, label %1105

1058:                                             ; preds = %1047
  %1059 = load i32, ptr %4, align 4, !tbaa !6
  %1060 = load i32, ptr %12, align 4, !tbaa !6
  %1061 = add nsw i32 %1060, -1
  %1062 = icmp slt i32 %1059, %1061
  br i1 %1062, label %1082, label %1063

1063:                                             ; preds = %1058
  %1064 = icmp eq i32 %1059, %1061
  br i1 %1064, label %1065, label %1098

1065:                                             ; preds = %1063
  store i32 0, ptr %4, align 4, !tbaa !6
  %1066 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1066, ptr %6, align 4, !tbaa !6
  br i1 %973, label %1105, label %1067

1067:                                             ; preds = %1065, %1092
  %1068 = phi i64 [ %1096, %1092 ], [ 1, %1065 ]
  %1069 = getelementptr inbounds i32, ptr %4, i64 %1068
  %1070 = load i32, ptr %1069, align 4, !tbaa !6
  %1071 = getelementptr inbounds i32, ptr %12, i64 %1068
  %1072 = load i32, ptr %1071, align 4, !tbaa !6
  %1073 = add nsw i32 %1072, -1
  %1074 = icmp slt i32 %1070, %1073
  br i1 %1074, label %1075, label %1090

1075:                                             ; preds = %1067
  br i1 %1062, label %1082, label %1076

1076:                                             ; preds = %1075
  %1077 = getelementptr inbounds i32, ptr %7, i64 %1068
  %1078 = load i32, ptr %1077, align 4, !tbaa !6
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1068
  %1080 = load i32, ptr %1079, align 4, !tbaa !6
  %1081 = add nsw i32 %1080, %1078
  store i32 %1081, ptr %1079, align 4, !tbaa !6
  br label %1100

1082:                                             ; preds = %1058, %1075
  %1083 = phi i32 [ %1070, %1075 ], [ %1059, %1058 ]
  %1084 = phi ptr [ %1069, %1075 ], [ %4, %1058 ]
  %1085 = phi i64 [ %1068, %1075 ], [ 0, %1058 ]
  %1086 = add nsw i32 %1083, 1
  store i32 %1086, ptr %1084, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %7, i64 %1085
  %1088 = load i32, ptr %1087, align 4, !tbaa !6
  %1089 = getelementptr inbounds i32, ptr %6, i64 %1085
  br label %1100

1090:                                             ; preds = %1067
  %1091 = icmp eq i32 %1070, %1073
  br i1 %1091, label %1092, label %1098

1092:                                             ; preds = %1090
  store i32 0, ptr %1069, align 4, !tbaa !6
  %1093 = getelementptr inbounds i32, ptr %8, i64 %1068
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1068
  store i32 %1094, ptr %1095, align 4, !tbaa !6
  %1096 = add nuw nsw i64 %1068, 1
  %1097 = icmp eq i64 %1096, %971
  br i1 %1097, label %1105, label %1067, !llvm.loop !618

1098:                                             ; preds = %1063, %1090
  %1099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1100:                                             ; preds = %1076, %1082
  %1101 = phi ptr [ %1089, %1082 ], [ %1069, %1076 ]
  %1102 = phi i32 [ %1088, %1082 ], [ 1, %1076 ]
  %1103 = load i32, ptr %1101, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, %1102
  store i32 %1104, ptr %1101, align 4, !tbaa !6
  br label %1105

1105:                                             ; preds = %1092, %1100, %1065, %1047
  %1106 = icmp eq i32 %1057, %5
  br i1 %1106, label %5545, label %974, !llvm.loop !619

1107:                                             ; preds = %957, %1243
  %1108 = phi i32 [ 0, %957 ], [ %1192, %1243 ]
  %1109 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %958, label %1110, label %1179

1110:                                             ; preds = %1107, %1169
  %1111 = phi i32 [ %1178, %1169 ], [ 0, %1107 ]
  %1112 = phi i64 [ %1120, %1169 ], [ %962, %1107 ]
  %1113 = phi i64 [ %1177, %1169 ], [ %961, %1107 ]
  %1114 = phi i32 [ %1175, %1169 ], [ %1109, %1107 ]
  %1115 = sub i32 %960, %1111
  %1116 = tail call i32 @llvm.smin.i32(i32 %1115, i32 0)
  %1117 = sub i32 %1115, %1116
  %1118 = zext i32 %1117 to i64
  %1119 = add nuw nsw i64 %1118, 1
  %1120 = add nsw i64 %1112, -1
  %1121 = icmp ult i32 %1117, 31
  br i1 %1121, label %1157, label %1122

1122:                                             ; preds = %1110
  %1123 = and i64 %1119, 8589934560
  %1124 = sub i64 %1113, %1123
  br label %1125

1125:                                             ; preds = %1125, %1122
  %1126 = phi i64 [ 0, %1122 ], [ %1149, %1125 ]
  %1127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1145, %1125 ]
  %1128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1146, %1125 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1147, %1125 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1122 ], [ %1148, %1125 ]
  %1131 = sub i64 %1113, %1126
  %1132 = getelementptr inbounds i32, ptr %11, i64 %1131
  %1133 = getelementptr inbounds i32, ptr %1132, i64 -7
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !6
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = getelementptr inbounds i32, ptr %1132, i64 -15
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1132, i64 -23
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1132, i64 -31
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = mul <8 x i32> %1135, %1127
  %1146 = mul <8 x i32> %1138, %1128
  %1147 = mul <8 x i32> %1141, %1129
  %1148 = mul <8 x i32> %1144, %1130
  %1149 = add nuw i64 %1126, 32
  %1150 = icmp eq i64 %1149, %1123
  br i1 %1150, label %1151, label %1125, !llvm.loop !620

1151:                                             ; preds = %1125
  %1152 = mul <8 x i32> %1146, %1145
  %1153 = mul <8 x i32> %1147, %1152
  %1154 = mul <8 x i32> %1148, %1153
  %1155 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1154)
  %1156 = icmp eq i64 %1119, %1123
  br i1 %1156, label %1169, label %1157

1157:                                             ; preds = %1110, %1151
  %1158 = phi i64 [ %1113, %1110 ], [ %1124, %1151 ]
  %1159 = phi i32 [ 1, %1110 ], [ %1155, %1151 ]
  br label %1160

1160:                                             ; preds = %1157, %1160
  %1161 = phi i64 [ %1166, %1160 ], [ %1158, %1157 ]
  %1162 = phi i32 [ %1165, %1160 ], [ %1159, %1157 ]
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1161
  %1164 = load i32, ptr %1163, align 4, !tbaa !6
  %1165 = mul nsw i32 %1164, %1162
  %1166 = add nsw i64 %1161, -1
  %1167 = trunc i64 %1161 to i32
  %1168 = icmp sgt i32 %1167, 0
  br i1 %1168, label %1160, label %1169, !llvm.loop !621

1169:                                             ; preds = %1160, %1151
  %1170 = phi i32 [ %1155, %1151 ], [ %1165, %1160 ]
  %1171 = and i64 %1120, 4294967295
  %1172 = getelementptr inbounds i32, ptr %6, i64 %1171
  %1173 = load i32, ptr %1172, align 4, !tbaa !6
  %1174 = mul nsw i32 %1173, %1170
  %1175 = add nsw i32 %1174, %1114
  %1176 = icmp sgt i64 %1112, 2
  %1177 = add nsw i64 %1113, -1
  %1178 = add i32 %1111, 1
  br i1 %1176, label %1110, label %1179, !llvm.loop !622

1179:                                             ; preds = %1169, %1107
  %1180 = phi i32 [ %1109, %1107 ], [ %1175, %1169 ]
  %1181 = icmp slt i32 %1180, %5
  br i1 %1181, label %1184, label %1182

1182:                                             ; preds = %1179
  %1183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1184:                                             ; preds = %1179
  %1185 = sext i32 %1180 to i64
  %1186 = getelementptr inbounds i32, ptr %639, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !6
  %1188 = load i32, ptr %641, align 4, !tbaa !6
  %1189 = mul i32 %1187, %1187
  %1190 = mul i32 %1189, %1189
  %1191 = add nsw i32 %1190, %1188
  store i32 %1191, ptr %641, align 4, !tbaa !6
  %1192 = add nuw nsw i32 %1108, 1
  br i1 %959, label %1193, label %1243

1193:                                             ; preds = %1184
  %1194 = load i32, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %12, align 4, !tbaa !6
  %1196 = add nsw i32 %1195, -1
  %1197 = icmp slt i32 %1194, %1196
  br i1 %1197, label %1220, label %1198

1198:                                             ; preds = %1193
  %1199 = icmp eq i32 %1194, %1196
  br i1 %1199, label %1200, label %1236

1200:                                             ; preds = %1198
  store i32 0, ptr %4, align 4, !tbaa !6
  %1201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1201, ptr %6, align 4, !tbaa !6
  br i1 %964, label %1243, label %1202

1202:                                             ; preds = %1200, %1230
  %1203 = phi i64 [ %1234, %1230 ], [ 1, %1200 ]
  %1204 = getelementptr inbounds i32, ptr %4, i64 %1203
  %1205 = load i32, ptr %1204, align 4, !tbaa !6
  %1206 = getelementptr inbounds i32, ptr %12, i64 %1203
  %1207 = load i32, ptr %1206, align 4, !tbaa !6
  %1208 = add nsw i32 %1207, -1
  %1209 = icmp slt i32 %1205, %1208
  br i1 %1209, label %1210, label %1228

1210:                                             ; preds = %1202
  br i1 %1197, label %1220, label %1211

1211:                                             ; preds = %1210
  %1212 = shl i64 %1203, 32
  %1213 = add i64 %1212, -4294967296
  %1214 = ashr exact i64 %1213, 32
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1214
  %1216 = load i32, ptr %1215, align 4, !tbaa !6
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1203
  %1218 = load i32, ptr %1217, align 4, !tbaa !6
  %1219 = add nsw i32 %1218, %1216
  store i32 %1219, ptr %1217, align 4, !tbaa !6
  br label %1238

1220:                                             ; preds = %1193, %1210
  %1221 = phi i32 [ %1205, %1210 ], [ %1194, %1193 ]
  %1222 = phi ptr [ %1204, %1210 ], [ %4, %1193 ]
  %1223 = phi i64 [ %1203, %1210 ], [ 0, %1193 ]
  %1224 = add nsw i32 %1221, 1
  store i32 %1224, ptr %1222, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %7, i64 %1223
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1223
  br label %1238

1228:                                             ; preds = %1202
  %1229 = icmp eq i32 %1205, %1208
  br i1 %1229, label %1230, label %1236

1230:                                             ; preds = %1228
  store i32 0, ptr %1204, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %8, i64 %1203
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = getelementptr inbounds i32, ptr %6, i64 %1203
  store i32 %1232, ptr %1233, align 4, !tbaa !6
  %1234 = add nuw nsw i64 %1203, 1
  %1235 = icmp eq i64 %1234, %962
  br i1 %1235, label %1243, label %1202, !llvm.loop !623

1236:                                             ; preds = %1198, %1228
  %1237 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1238:                                             ; preds = %1211, %1220
  %1239 = phi ptr [ %1227, %1220 ], [ %1204, %1211 ]
  %1240 = phi i32 [ %1226, %1220 ], [ 1, %1211 ]
  %1241 = load i32, ptr %1239, align 4, !tbaa !6
  %1242 = add nsw i32 %1241, %1240
  store i32 %1242, ptr %1239, align 4, !tbaa !6
  br label %1243

1243:                                             ; preds = %1230, %1238, %1200, %1184
  %1244 = icmp eq i32 %1192, %5
  br i1 %1244, label %5545, label %1107, !llvm.loop !624

1245:                                             ; preds = %647
  %1246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1164, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1247:                                             ; preds = %18
  %1248 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1249 = load ptr, ptr %1248, align 8, !tbaa !10
  %1250 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1251 = load ptr, ptr %1250, align 8, !tbaa !10
  store i8 0, ptr %1251, align 1, !tbaa !12
  %1252 = icmp eq i32 %13, 0
  br i1 %1252, label %1253, label %1258

1253:                                             ; preds = %1247
  %1254 = load i32, ptr %1249, align 4, !tbaa !6
  %1255 = mul i32 %1254, %1254
  %1256 = mul i32 %1255, %1255
  %1257 = trunc i32 %1256 to i8
  store i8 %1257, ptr %1251, align 1, !tbaa !12
  br label %5545

1258:                                             ; preds = %1247
  switch i32 %1, label %1862 [
    i32 1, label %1259
    i32 0, label %1566
  ]

1259:                                             ; preds = %1258
  %1260 = getelementptr inbounds i32, ptr %3, i64 %19
  %1261 = load i32, ptr %1260, align 4, !tbaa !6
  %1262 = icmp eq i32 %1261, 0
  %1263 = icmp sgt i32 %5, 0
  br i1 %1262, label %1273, label %1264

1264:                                             ; preds = %1259
  br i1 %1263, label %1265, label %5545

1265:                                             ; preds = %1264
  %1266 = icmp sgt i32 %13, 1
  %1267 = icmp sgt i32 %13, 0
  %1268 = add i32 %13, -2
  %1269 = zext i32 %1268 to i64
  %1270 = zext i32 %13 to i64
  %1271 = add nuw i32 %5, 1
  %1272 = icmp eq i32 %13, 1
  br label %1423

1273:                                             ; preds = %1259
  br i1 %1263, label %1274, label %5545

1274:                                             ; preds = %1273
  %1275 = icmp sgt i32 %13, 1
  %1276 = icmp sgt i32 %13, 0
  %1277 = add i32 %13, -2
  %1278 = zext i32 %1277 to i64
  %1279 = zext i32 %13 to i64
  %1280 = add nuw i32 %5, 1
  %1281 = icmp eq i32 %13, 1
  br label %1282

1282:                                             ; preds = %1274, %1421
  %1283 = phi i32 [ 0, %1274 ], [ %1373, %1421 ]
  %1284 = phi double [ 0.000000e+00, %1274 ], [ %1372, %1421 ]
  %1285 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1275, label %1286, label %1355

1286:                                             ; preds = %1282, %1345
  %1287 = phi i32 [ %1354, %1345 ], [ 0, %1282 ]
  %1288 = phi i64 [ %1296, %1345 ], [ %1279, %1282 ]
  %1289 = phi i64 [ %1353, %1345 ], [ %1278, %1282 ]
  %1290 = phi i32 [ %1351, %1345 ], [ %1285, %1282 ]
  %1291 = sub i32 %1277, %1287
  %1292 = tail call i32 @llvm.smin.i32(i32 %1291, i32 0)
  %1293 = sub i32 %1291, %1292
  %1294 = zext i32 %1293 to i64
  %1295 = add nuw nsw i64 %1294, 1
  %1296 = add nsw i64 %1288, -1
  %1297 = icmp ult i32 %1293, 31
  br i1 %1297, label %1333, label %1298

1298:                                             ; preds = %1286
  %1299 = and i64 %1295, 8589934560
  %1300 = sub i64 %1289, %1299
  br label %1301

1301:                                             ; preds = %1301, %1298
  %1302 = phi i64 [ 0, %1298 ], [ %1325, %1301 ]
  %1303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1321, %1301 ]
  %1304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1322, %1301 ]
  %1305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1323, %1301 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1324, %1301 ]
  %1307 = sub i64 %1289, %1302
  %1308 = getelementptr inbounds i32, ptr %9, i64 %1307
  %1309 = getelementptr inbounds i32, ptr %1308, i64 -7
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !6
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = getelementptr inbounds i32, ptr %1308, i64 -15
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !6
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1308, i64 -23
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !6
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1308, i64 -31
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !6
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = mul <8 x i32> %1311, %1303
  %1322 = mul <8 x i32> %1314, %1304
  %1323 = mul <8 x i32> %1317, %1305
  %1324 = mul <8 x i32> %1320, %1306
  %1325 = add nuw i64 %1302, 32
  %1326 = icmp eq i64 %1325, %1299
  br i1 %1326, label %1327, label %1301, !llvm.loop !625

1327:                                             ; preds = %1301
  %1328 = mul <8 x i32> %1322, %1321
  %1329 = mul <8 x i32> %1323, %1328
  %1330 = mul <8 x i32> %1324, %1329
  %1331 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1330)
  %1332 = icmp eq i64 %1295, %1299
  br i1 %1332, label %1345, label %1333

1333:                                             ; preds = %1286, %1327
  %1334 = phi i64 [ %1289, %1286 ], [ %1300, %1327 ]
  %1335 = phi i32 [ 1, %1286 ], [ %1331, %1327 ]
  br label %1336

1336:                                             ; preds = %1333, %1336
  %1337 = phi i64 [ %1342, %1336 ], [ %1334, %1333 ]
  %1338 = phi i32 [ %1341, %1336 ], [ %1335, %1333 ]
  %1339 = getelementptr inbounds i32, ptr %9, i64 %1337
  %1340 = load i32, ptr %1339, align 4, !tbaa !6
  %1341 = mul nsw i32 %1340, %1338
  %1342 = add nsw i64 %1337, -1
  %1343 = trunc i64 %1337 to i32
  %1344 = icmp sgt i32 %1343, 0
  br i1 %1344, label %1336, label %1345, !llvm.loop !626

1345:                                             ; preds = %1336, %1327
  %1346 = phi i32 [ %1331, %1327 ], [ %1341, %1336 ]
  %1347 = and i64 %1296, 4294967295
  %1348 = getelementptr inbounds i32, ptr %6, i64 %1347
  %1349 = load i32, ptr %1348, align 4, !tbaa !6
  %1350 = mul nsw i32 %1349, %1346
  %1351 = add nsw i32 %1350, %1290
  %1352 = icmp sgt i64 %1288, 2
  %1353 = add nsw i64 %1289, -1
  %1354 = add i32 %1287, 1
  br i1 %1352, label %1286, label %1355, !llvm.loop !627

1355:                                             ; preds = %1345, %1282
  %1356 = phi i32 [ %1285, %1282 ], [ %1351, %1345 ]
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds double, ptr %2, i64 %1357
  %1359 = load double, ptr %1358, align 8, !tbaa !19
  %1360 = getelementptr inbounds i32, ptr %1249, i64 %1357
  %1361 = load i32, ptr %1360, align 4, !tbaa !6
  %1362 = load i8, ptr %1251, align 1, !tbaa !12
  %1363 = sitofp i8 %1362 to double
  %1364 = shl i32 %1361, 24
  %1365 = ashr exact i32 %1364, 24
  %1366 = sitofp i32 %1365 to double
  %1367 = fmul fast double %1359, %1366
  %1368 = fmul fast double %1367, %1367
  %1369 = fmul fast double %1368, %1368
  %1370 = fadd fast double %1369, %1363
  %1371 = fptosi double %1370 to i8
  store i8 %1371, ptr %1251, align 1, !tbaa !12
  %1372 = fadd fast double %1359, %1284
  %1373 = add nuw nsw i32 %1283, 1
  br i1 %1276, label %1374, label %1421

1374:                                             ; preds = %1355
  %1375 = load i32, ptr %4, align 4, !tbaa !6
  %1376 = load i32, ptr %12, align 4, !tbaa !6
  %1377 = add nsw i32 %1376, -1
  %1378 = icmp slt i32 %1375, %1377
  br i1 %1378, label %1398, label %1379

1379:                                             ; preds = %1374
  %1380 = icmp eq i32 %1375, %1377
  br i1 %1380, label %1381, label %1414

1381:                                             ; preds = %1379
  store i32 0, ptr %4, align 4, !tbaa !6
  %1382 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1382, ptr %6, align 4, !tbaa !6
  br i1 %1281, label %1421, label %1383

1383:                                             ; preds = %1381, %1408
  %1384 = phi i64 [ %1412, %1408 ], [ 1, %1381 ]
  %1385 = getelementptr inbounds i32, ptr %4, i64 %1384
  %1386 = load i32, ptr %1385, align 4, !tbaa !6
  %1387 = getelementptr inbounds i32, ptr %12, i64 %1384
  %1388 = load i32, ptr %1387, align 4, !tbaa !6
  %1389 = add nsw i32 %1388, -1
  %1390 = icmp slt i32 %1386, %1389
  br i1 %1390, label %1391, label %1406

1391:                                             ; preds = %1383
  br i1 %1378, label %1398, label %1392

1392:                                             ; preds = %1391
  %1393 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1394 = load i32, ptr %1393, align 4, !tbaa !6
  %1395 = getelementptr inbounds i32, ptr %6, i64 %1384
  %1396 = load i32, ptr %1395, align 4, !tbaa !6
  %1397 = add nsw i32 %1396, %1394
  store i32 %1397, ptr %1395, align 4, !tbaa !6
  br label %1416

1398:                                             ; preds = %1374, %1391
  %1399 = phi i32 [ %1386, %1391 ], [ %1375, %1374 ]
  %1400 = phi ptr [ %1385, %1391 ], [ %4, %1374 ]
  %1401 = phi i64 [ %1384, %1391 ], [ 0, %1374 ]
  %1402 = add nsw i32 %1399, 1
  store i32 %1402, ptr %1400, align 4, !tbaa !6
  %1403 = getelementptr inbounds i32, ptr %7, i64 %1401
  %1404 = load i32, ptr %1403, align 4, !tbaa !6
  %1405 = getelementptr inbounds i32, ptr %6, i64 %1401
  br label %1416

1406:                                             ; preds = %1383
  %1407 = icmp eq i32 %1386, %1389
  br i1 %1407, label %1408, label %1414

1408:                                             ; preds = %1406
  store i32 0, ptr %1385, align 4, !tbaa !6
  %1409 = getelementptr inbounds i32, ptr %8, i64 %1384
  %1410 = load i32, ptr %1409, align 4, !tbaa !6
  %1411 = getelementptr inbounds i32, ptr %6, i64 %1384
  store i32 %1410, ptr %1411, align 4, !tbaa !6
  %1412 = add nuw nsw i64 %1384, 1
  %1413 = icmp eq i64 %1412, %1279
  br i1 %1413, label %1421, label %1383, !llvm.loop !628

1414:                                             ; preds = %1379, %1406
  %1415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1416:                                             ; preds = %1392, %1398
  %1417 = phi ptr [ %1405, %1398 ], [ %1385, %1392 ]
  %1418 = phi i32 [ %1404, %1398 ], [ 1, %1392 ]
  %1419 = load i32, ptr %1417, align 4, !tbaa !6
  %1420 = add nsw i32 %1419, %1418
  store i32 %1420, ptr %1417, align 4, !tbaa !6
  br label %1421

1421:                                             ; preds = %1408, %1416, %1381, %1355
  %1422 = icmp eq i32 %1373, %5
  br i1 %1422, label %5545, label %1282, !llvm.loop !629

1423:                                             ; preds = %1265, %1564
  %1424 = phi i32 [ 0, %1265 ], [ %1513, %1564 ]
  %1425 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1266, label %1426, label %1495

1426:                                             ; preds = %1423, %1485
  %1427 = phi i32 [ %1494, %1485 ], [ 0, %1423 ]
  %1428 = phi i64 [ %1436, %1485 ], [ %1270, %1423 ]
  %1429 = phi i64 [ %1493, %1485 ], [ %1269, %1423 ]
  %1430 = phi i32 [ %1491, %1485 ], [ %1425, %1423 ]
  %1431 = sub i32 %1268, %1427
  %1432 = tail call i32 @llvm.smin.i32(i32 %1431, i32 0)
  %1433 = sub i32 %1431, %1432
  %1434 = zext i32 %1433 to i64
  %1435 = add nuw nsw i64 %1434, 1
  %1436 = add nsw i64 %1428, -1
  %1437 = icmp ult i32 %1433, 31
  br i1 %1437, label %1473, label %1438

1438:                                             ; preds = %1426
  %1439 = and i64 %1435, 8589934560
  %1440 = sub i64 %1429, %1439
  br label %1441

1441:                                             ; preds = %1441, %1438
  %1442 = phi i64 [ 0, %1438 ], [ %1465, %1441 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1461, %1441 ]
  %1444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1462, %1441 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1463, %1441 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1464, %1441 ]
  %1447 = sub i64 %1429, %1442
  %1448 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1449 = getelementptr inbounds i32, ptr %1448, i64 -7
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !6
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1448, i64 -15
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1448, i64 -23
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1448, i64 -31
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = mul <8 x i32> %1451, %1443
  %1462 = mul <8 x i32> %1454, %1444
  %1463 = mul <8 x i32> %1457, %1445
  %1464 = mul <8 x i32> %1460, %1446
  %1465 = add nuw i64 %1442, 32
  %1466 = icmp eq i64 %1465, %1439
  br i1 %1466, label %1467, label %1441, !llvm.loop !630

1467:                                             ; preds = %1441
  %1468 = mul <8 x i32> %1462, %1461
  %1469 = mul <8 x i32> %1463, %1468
  %1470 = mul <8 x i32> %1464, %1469
  %1471 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1470)
  %1472 = icmp eq i64 %1435, %1439
  br i1 %1472, label %1485, label %1473

1473:                                             ; preds = %1426, %1467
  %1474 = phi i64 [ %1429, %1426 ], [ %1440, %1467 ]
  %1475 = phi i32 [ 1, %1426 ], [ %1471, %1467 ]
  br label %1476

1476:                                             ; preds = %1473, %1476
  %1477 = phi i64 [ %1482, %1476 ], [ %1474, %1473 ]
  %1478 = phi i32 [ %1481, %1476 ], [ %1475, %1473 ]
  %1479 = getelementptr inbounds i32, ptr %11, i64 %1477
  %1480 = load i32, ptr %1479, align 4, !tbaa !6
  %1481 = mul nsw i32 %1480, %1478
  %1482 = add nsw i64 %1477, -1
  %1483 = trunc i64 %1477 to i32
  %1484 = icmp sgt i32 %1483, 0
  br i1 %1484, label %1476, label %1485, !llvm.loop !631

1485:                                             ; preds = %1476, %1467
  %1486 = phi i32 [ %1471, %1467 ], [ %1481, %1476 ]
  %1487 = and i64 %1436, 4294967295
  %1488 = getelementptr inbounds i32, ptr %6, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !6
  %1490 = mul nsw i32 %1489, %1486
  %1491 = add nsw i32 %1490, %1430
  %1492 = icmp sgt i64 %1428, 2
  %1493 = add nsw i64 %1429, -1
  %1494 = add i32 %1427, 1
  br i1 %1492, label %1426, label %1495, !llvm.loop !632

1495:                                             ; preds = %1485, %1423
  %1496 = phi i32 [ %1425, %1423 ], [ %1491, %1485 ]
  %1497 = icmp slt i32 %1496, %5
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1495
  %1499 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1500:                                             ; preds = %1495
  %1501 = sext i32 %1496 to i64
  %1502 = getelementptr inbounds i32, ptr %1249, i64 %1501
  %1503 = load i32, ptr %1502, align 4, !tbaa !6
  %1504 = load i8, ptr %1251, align 1, !tbaa !12
  %1505 = sitofp i8 %1504 to double
  %1506 = shl i32 %1503, 24
  %1507 = ashr exact i32 %1506, 24
  %1508 = sitofp i32 %1507 to double
  %1509 = fmul fast double %1508, %1508
  %1510 = fmul fast double %1509, %1509
  %1511 = fadd fast double %1510, %1505
  %1512 = fptosi double %1511 to i8
  store i8 %1512, ptr %1251, align 1, !tbaa !12
  %1513 = add nuw nsw i32 %1424, 1
  br i1 %1267, label %1514, label %1564

1514:                                             ; preds = %1500
  %1515 = load i32, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %12, align 4, !tbaa !6
  %1517 = add nsw i32 %1516, -1
  %1518 = icmp slt i32 %1515, %1517
  br i1 %1518, label %1541, label %1519

1519:                                             ; preds = %1514
  %1520 = icmp eq i32 %1515, %1517
  br i1 %1520, label %1521, label %1557

1521:                                             ; preds = %1519
  store i32 0, ptr %4, align 4, !tbaa !6
  %1522 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1522, ptr %6, align 4, !tbaa !6
  br i1 %1272, label %1564, label %1523

1523:                                             ; preds = %1521, %1551
  %1524 = phi i64 [ %1555, %1551 ], [ 1, %1521 ]
  %1525 = getelementptr inbounds i32, ptr %4, i64 %1524
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %12, i64 %1524
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, -1
  %1530 = icmp slt i32 %1526, %1529
  br i1 %1530, label %1531, label %1549

1531:                                             ; preds = %1523
  br i1 %1518, label %1541, label %1532

1532:                                             ; preds = %1531
  %1533 = shl i64 %1524, 32
  %1534 = add i64 %1533, -4294967296
  %1535 = ashr exact i64 %1534, 32
  %1536 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1524
  %1539 = load i32, ptr %1538, align 4, !tbaa !6
  %1540 = add nsw i32 %1539, %1537
  store i32 %1540, ptr %1538, align 4, !tbaa !6
  br label %1559

1541:                                             ; preds = %1514, %1531
  %1542 = phi i32 [ %1526, %1531 ], [ %1515, %1514 ]
  %1543 = phi ptr [ %1525, %1531 ], [ %4, %1514 ]
  %1544 = phi i64 [ %1524, %1531 ], [ 0, %1514 ]
  %1545 = add nsw i32 %1542, 1
  store i32 %1545, ptr %1543, align 4, !tbaa !6
  %1546 = getelementptr inbounds i32, ptr %7, i64 %1544
  %1547 = load i32, ptr %1546, align 4, !tbaa !6
  %1548 = getelementptr inbounds i32, ptr %6, i64 %1544
  br label %1559

1549:                                             ; preds = %1523
  %1550 = icmp eq i32 %1526, %1529
  br i1 %1550, label %1551, label %1557

1551:                                             ; preds = %1549
  store i32 0, ptr %1525, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %8, i64 %1524
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1524
  store i32 %1553, ptr %1554, align 4, !tbaa !6
  %1555 = add nuw nsw i64 %1524, 1
  %1556 = icmp eq i64 %1555, %1270
  br i1 %1556, label %1564, label %1523, !llvm.loop !633

1557:                                             ; preds = %1519, %1549
  %1558 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1559:                                             ; preds = %1532, %1541
  %1560 = phi ptr [ %1548, %1541 ], [ %1525, %1532 ]
  %1561 = phi i32 [ %1547, %1541 ], [ 1, %1532 ]
  %1562 = load i32, ptr %1560, align 4, !tbaa !6
  %1563 = add nsw i32 %1562, %1561
  store i32 %1563, ptr %1560, align 4, !tbaa !6
  br label %1564

1564:                                             ; preds = %1551, %1559, %1521, %1500
  %1565 = icmp eq i32 %1513, %5
  br i1 %1565, label %5545, label %1423, !llvm.loop !634

1566:                                             ; preds = %1258
  %1567 = getelementptr inbounds i32, ptr %3, i64 %19
  %1568 = load i32, ptr %1567, align 4, !tbaa !6
  %1569 = icmp eq i32 %1568, 0
  %1570 = icmp sgt i32 %5, 0
  br i1 %1569, label %1580, label %1571

1571:                                             ; preds = %1566
  br i1 %1570, label %1572, label %5545

1572:                                             ; preds = %1571
  %1573 = icmp sgt i32 %13, 1
  %1574 = icmp sgt i32 %13, 0
  %1575 = add i32 %13, -2
  %1576 = zext i32 %1575 to i64
  %1577 = zext i32 %13 to i64
  %1578 = add nuw i32 %5, 1
  %1579 = icmp eq i32 %13, 1
  br label %1723

1580:                                             ; preds = %1566
  br i1 %1570, label %1581, label %5545

1581:                                             ; preds = %1580
  %1582 = icmp sgt i32 %13, 1
  %1583 = icmp sgt i32 %13, 0
  %1584 = add i32 %13, -2
  %1585 = zext i32 %1584 to i64
  %1586 = zext i32 %13 to i64
  %1587 = add nuw i32 %5, 1
  %1588 = icmp eq i32 %13, 1
  br label %1589

1589:                                             ; preds = %1581, %1721
  %1590 = phi i32 [ 0, %1581 ], [ %1673, %1721 ]
  %1591 = phi double [ 0.000000e+00, %1581 ], [ %1672, %1721 ]
  %1592 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1582, label %1593, label %1662

1593:                                             ; preds = %1589, %1652
  %1594 = phi i32 [ %1661, %1652 ], [ 0, %1589 ]
  %1595 = phi i64 [ %1603, %1652 ], [ %1586, %1589 ]
  %1596 = phi i64 [ %1660, %1652 ], [ %1585, %1589 ]
  %1597 = phi i32 [ %1658, %1652 ], [ %1592, %1589 ]
  %1598 = sub i32 %1584, %1594
  %1599 = tail call i32 @llvm.smin.i32(i32 %1598, i32 0)
  %1600 = sub i32 %1598, %1599
  %1601 = zext i32 %1600 to i64
  %1602 = add nuw nsw i64 %1601, 1
  %1603 = add nsw i64 %1595, -1
  %1604 = icmp ult i32 %1600, 31
  br i1 %1604, label %1640, label %1605

1605:                                             ; preds = %1593
  %1606 = and i64 %1602, 8589934560
  %1607 = sub i64 %1596, %1606
  br label %1608

1608:                                             ; preds = %1608, %1605
  %1609 = phi i64 [ 0, %1605 ], [ %1632, %1608 ]
  %1610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1628, %1608 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1629, %1608 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1630, %1608 ]
  %1613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1605 ], [ %1631, %1608 ]
  %1614 = sub i64 %1596, %1609
  %1615 = getelementptr inbounds i32, ptr %9, i64 %1614
  %1616 = getelementptr inbounds i32, ptr %1615, i64 -7
  %1617 = load <8 x i32>, ptr %1616, align 4, !tbaa !6
  %1618 = shufflevector <8 x i32> %1617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1619 = getelementptr inbounds i32, ptr %1615, i64 -15
  %1620 = load <8 x i32>, ptr %1619, align 4, !tbaa !6
  %1621 = shufflevector <8 x i32> %1620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1622 = getelementptr inbounds i32, ptr %1615, i64 -23
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !6
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1615, i64 -31
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !6
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = mul <8 x i32> %1618, %1610
  %1629 = mul <8 x i32> %1621, %1611
  %1630 = mul <8 x i32> %1624, %1612
  %1631 = mul <8 x i32> %1627, %1613
  %1632 = add nuw i64 %1609, 32
  %1633 = icmp eq i64 %1632, %1606
  br i1 %1633, label %1634, label %1608, !llvm.loop !635

1634:                                             ; preds = %1608
  %1635 = mul <8 x i32> %1629, %1628
  %1636 = mul <8 x i32> %1630, %1635
  %1637 = mul <8 x i32> %1631, %1636
  %1638 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1637)
  %1639 = icmp eq i64 %1602, %1606
  br i1 %1639, label %1652, label %1640

1640:                                             ; preds = %1593, %1634
  %1641 = phi i64 [ %1596, %1593 ], [ %1607, %1634 ]
  %1642 = phi i32 [ 1, %1593 ], [ %1638, %1634 ]
  br label %1643

1643:                                             ; preds = %1640, %1643
  %1644 = phi i64 [ %1649, %1643 ], [ %1641, %1640 ]
  %1645 = phi i32 [ %1648, %1643 ], [ %1642, %1640 ]
  %1646 = getelementptr inbounds i32, ptr %9, i64 %1644
  %1647 = load i32, ptr %1646, align 4, !tbaa !6
  %1648 = mul nsw i32 %1647, %1645
  %1649 = add nsw i64 %1644, -1
  %1650 = trunc i64 %1644 to i32
  %1651 = icmp sgt i32 %1650, 0
  br i1 %1651, label %1643, label %1652, !llvm.loop !636

1652:                                             ; preds = %1643, %1634
  %1653 = phi i32 [ %1638, %1634 ], [ %1648, %1643 ]
  %1654 = and i64 %1603, 4294967295
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1654
  %1656 = load i32, ptr %1655, align 4, !tbaa !6
  %1657 = mul nsw i32 %1656, %1653
  %1658 = add nsw i32 %1657, %1597
  %1659 = icmp sgt i64 %1595, 2
  %1660 = add nsw i64 %1596, -1
  %1661 = add i32 %1594, 1
  br i1 %1659, label %1593, label %1662, !llvm.loop !637

1662:                                             ; preds = %1652, %1589
  %1663 = phi i32 [ %1592, %1589 ], [ %1658, %1652 ]
  %1664 = sext i32 %1663 to i64
  %1665 = getelementptr inbounds i32, ptr %1249, i64 %1664
  %1666 = load i32, ptr %1665, align 4, !tbaa !6
  %1667 = load i8, ptr %1251, align 1, !tbaa !12
  %1668 = mul i32 %1666, %1666
  %1669 = mul i32 %1668, %1668
  %1670 = trunc i32 %1669 to i8
  %1671 = add i8 %1667, %1670
  store i8 %1671, ptr %1251, align 1, !tbaa !12
  %1672 = fadd fast double %1591, 1.000000e+00
  %1673 = add nuw nsw i32 %1590, 1
  br i1 %1583, label %1674, label %1721

1674:                                             ; preds = %1662
  %1675 = load i32, ptr %4, align 4, !tbaa !6
  %1676 = load i32, ptr %12, align 4, !tbaa !6
  %1677 = add nsw i32 %1676, -1
  %1678 = icmp slt i32 %1675, %1677
  br i1 %1678, label %1698, label %1679

1679:                                             ; preds = %1674
  %1680 = icmp eq i32 %1675, %1677
  br i1 %1680, label %1681, label %1714

1681:                                             ; preds = %1679
  store i32 0, ptr %4, align 4, !tbaa !6
  %1682 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1682, ptr %6, align 4, !tbaa !6
  br i1 %1588, label %1721, label %1683

1683:                                             ; preds = %1681, %1708
  %1684 = phi i64 [ %1712, %1708 ], [ 1, %1681 ]
  %1685 = getelementptr inbounds i32, ptr %4, i64 %1684
  %1686 = load i32, ptr %1685, align 4, !tbaa !6
  %1687 = getelementptr inbounds i32, ptr %12, i64 %1684
  %1688 = load i32, ptr %1687, align 4, !tbaa !6
  %1689 = add nsw i32 %1688, -1
  %1690 = icmp slt i32 %1686, %1689
  br i1 %1690, label %1691, label %1706

1691:                                             ; preds = %1683
  br i1 %1678, label %1698, label %1692

1692:                                             ; preds = %1691
  %1693 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1694 = load i32, ptr %1693, align 4, !tbaa !6
  %1695 = getelementptr inbounds i32, ptr %6, i64 %1684
  %1696 = load i32, ptr %1695, align 4, !tbaa !6
  %1697 = add nsw i32 %1696, %1694
  store i32 %1697, ptr %1695, align 4, !tbaa !6
  br label %1716

1698:                                             ; preds = %1674, %1691
  %1699 = phi i32 [ %1686, %1691 ], [ %1675, %1674 ]
  %1700 = phi ptr [ %1685, %1691 ], [ %4, %1674 ]
  %1701 = phi i64 [ %1684, %1691 ], [ 0, %1674 ]
  %1702 = add nsw i32 %1699, 1
  store i32 %1702, ptr %1700, align 4, !tbaa !6
  %1703 = getelementptr inbounds i32, ptr %7, i64 %1701
  %1704 = load i32, ptr %1703, align 4, !tbaa !6
  %1705 = getelementptr inbounds i32, ptr %6, i64 %1701
  br label %1716

1706:                                             ; preds = %1683
  %1707 = icmp eq i32 %1686, %1689
  br i1 %1707, label %1708, label %1714

1708:                                             ; preds = %1706
  store i32 0, ptr %1685, align 4, !tbaa !6
  %1709 = getelementptr inbounds i32, ptr %8, i64 %1684
  %1710 = load i32, ptr %1709, align 4, !tbaa !6
  %1711 = getelementptr inbounds i32, ptr %6, i64 %1684
  store i32 %1710, ptr %1711, align 4, !tbaa !6
  %1712 = add nuw nsw i64 %1684, 1
  %1713 = icmp eq i64 %1712, %1586
  br i1 %1713, label %1721, label %1683, !llvm.loop !638

1714:                                             ; preds = %1679, %1706
  %1715 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1716:                                             ; preds = %1692, %1698
  %1717 = phi ptr [ %1705, %1698 ], [ %1685, %1692 ]
  %1718 = phi i32 [ %1704, %1698 ], [ 1, %1692 ]
  %1719 = load i32, ptr %1717, align 4, !tbaa !6
  %1720 = add nsw i32 %1719, %1718
  store i32 %1720, ptr %1717, align 4, !tbaa !6
  br label %1721

1721:                                             ; preds = %1708, %1716, %1681, %1662
  %1722 = icmp eq i32 %1673, %5
  br i1 %1722, label %5545, label %1589, !llvm.loop !639

1723:                                             ; preds = %1572, %1860
  %1724 = phi i32 [ 0, %1572 ], [ %1809, %1860 ]
  %1725 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1573, label %1726, label %1795

1726:                                             ; preds = %1723, %1785
  %1727 = phi i32 [ %1794, %1785 ], [ 0, %1723 ]
  %1728 = phi i64 [ %1736, %1785 ], [ %1577, %1723 ]
  %1729 = phi i64 [ %1793, %1785 ], [ %1576, %1723 ]
  %1730 = phi i32 [ %1791, %1785 ], [ %1725, %1723 ]
  %1731 = sub i32 %1575, %1727
  %1732 = tail call i32 @llvm.smin.i32(i32 %1731, i32 0)
  %1733 = sub i32 %1731, %1732
  %1734 = zext i32 %1733 to i64
  %1735 = add nuw nsw i64 %1734, 1
  %1736 = add nsw i64 %1728, -1
  %1737 = icmp ult i32 %1733, 31
  br i1 %1737, label %1773, label %1738

1738:                                             ; preds = %1726
  %1739 = and i64 %1735, 8589934560
  %1740 = sub i64 %1729, %1739
  br label %1741

1741:                                             ; preds = %1741, %1738
  %1742 = phi i64 [ 0, %1738 ], [ %1765, %1741 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1761, %1741 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1762, %1741 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1763, %1741 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1764, %1741 ]
  %1747 = sub i64 %1729, %1742
  %1748 = getelementptr inbounds i32, ptr %11, i64 %1747
  %1749 = getelementptr inbounds i32, ptr %1748, i64 -7
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !6
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = getelementptr inbounds i32, ptr %1748, i64 -15
  %1753 = load <8 x i32>, ptr %1752, align 4, !tbaa !6
  %1754 = shufflevector <8 x i32> %1753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1755 = getelementptr inbounds i32, ptr %1748, i64 -23
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !6
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = getelementptr inbounds i32, ptr %1748, i64 -31
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = mul <8 x i32> %1751, %1743
  %1762 = mul <8 x i32> %1754, %1744
  %1763 = mul <8 x i32> %1757, %1745
  %1764 = mul <8 x i32> %1760, %1746
  %1765 = add nuw i64 %1742, 32
  %1766 = icmp eq i64 %1765, %1739
  br i1 %1766, label %1767, label %1741, !llvm.loop !640

1767:                                             ; preds = %1741
  %1768 = mul <8 x i32> %1762, %1761
  %1769 = mul <8 x i32> %1763, %1768
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1770)
  %1772 = icmp eq i64 %1735, %1739
  br i1 %1772, label %1785, label %1773

1773:                                             ; preds = %1726, %1767
  %1774 = phi i64 [ %1729, %1726 ], [ %1740, %1767 ]
  %1775 = phi i32 [ 1, %1726 ], [ %1771, %1767 ]
  br label %1776

1776:                                             ; preds = %1773, %1776
  %1777 = phi i64 [ %1782, %1776 ], [ %1774, %1773 ]
  %1778 = phi i32 [ %1781, %1776 ], [ %1775, %1773 ]
  %1779 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1780 = load i32, ptr %1779, align 4, !tbaa !6
  %1781 = mul nsw i32 %1780, %1778
  %1782 = add nsw i64 %1777, -1
  %1783 = trunc i64 %1777 to i32
  %1784 = icmp sgt i32 %1783, 0
  br i1 %1784, label %1776, label %1785, !llvm.loop !641

1785:                                             ; preds = %1776, %1767
  %1786 = phi i32 [ %1771, %1767 ], [ %1781, %1776 ]
  %1787 = and i64 %1736, 4294967295
  %1788 = getelementptr inbounds i32, ptr %6, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !6
  %1790 = mul nsw i32 %1789, %1786
  %1791 = add nsw i32 %1790, %1730
  %1792 = icmp sgt i64 %1728, 2
  %1793 = add nsw i64 %1729, -1
  %1794 = add i32 %1727, 1
  br i1 %1792, label %1726, label %1795, !llvm.loop !642

1795:                                             ; preds = %1785, %1723
  %1796 = phi i32 [ %1725, %1723 ], [ %1791, %1785 ]
  %1797 = icmp slt i32 %1796, %5
  br i1 %1797, label %1800, label %1798

1798:                                             ; preds = %1795
  %1799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1800:                                             ; preds = %1795
  %1801 = sext i32 %1796 to i64
  %1802 = getelementptr inbounds i32, ptr %1249, i64 %1801
  %1803 = load i32, ptr %1802, align 4, !tbaa !6
  %1804 = load i8, ptr %1251, align 1, !tbaa !12
  %1805 = mul i32 %1803, %1803
  %1806 = mul i32 %1805, %1805
  %1807 = trunc i32 %1806 to i8
  %1808 = add i8 %1804, %1807
  store i8 %1808, ptr %1251, align 1, !tbaa !12
  %1809 = add nuw nsw i32 %1724, 1
  br i1 %1574, label %1810, label %1860

1810:                                             ; preds = %1800
  %1811 = load i32, ptr %4, align 4, !tbaa !6
  %1812 = load i32, ptr %12, align 4, !tbaa !6
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1811, %1813
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1810
  %1816 = icmp eq i32 %1811, %1813
  br i1 %1816, label %1817, label %1853

1817:                                             ; preds = %1815
  store i32 0, ptr %4, align 4, !tbaa !6
  %1818 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1818, ptr %6, align 4, !tbaa !6
  br i1 %1579, label %1860, label %1819

1819:                                             ; preds = %1817, %1847
  %1820 = phi i64 [ %1851, %1847 ], [ 1, %1817 ]
  %1821 = getelementptr inbounds i32, ptr %4, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = getelementptr inbounds i32, ptr %12, i64 %1820
  %1824 = load i32, ptr %1823, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1822, %1825
  br i1 %1826, label %1827, label %1845

1827:                                             ; preds = %1819
  br i1 %1814, label %1837, label %1828

1828:                                             ; preds = %1827
  %1829 = shl i64 %1820, 32
  %1830 = add i64 %1829, -4294967296
  %1831 = ashr exact i64 %1830, 32
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1833 = load i32, ptr %1832, align 4, !tbaa !6
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1820
  %1835 = load i32, ptr %1834, align 4, !tbaa !6
  %1836 = add nsw i32 %1835, %1833
  store i32 %1836, ptr %1834, align 4, !tbaa !6
  br label %1855

1837:                                             ; preds = %1810, %1827
  %1838 = phi i32 [ %1822, %1827 ], [ %1811, %1810 ]
  %1839 = phi ptr [ %1821, %1827 ], [ %4, %1810 ]
  %1840 = phi i64 [ %1820, %1827 ], [ 0, %1810 ]
  %1841 = add nsw i32 %1838, 1
  store i32 %1841, ptr %1839, align 4, !tbaa !6
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1843 = load i32, ptr %1842, align 4, !tbaa !6
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1840
  br label %1855

1845:                                             ; preds = %1819
  %1846 = icmp eq i32 %1822, %1825
  br i1 %1846, label %1847, label %1853

1847:                                             ; preds = %1845
  store i32 0, ptr %1821, align 4, !tbaa !6
  %1848 = getelementptr inbounds i32, ptr %8, i64 %1820
  %1849 = load i32, ptr %1848, align 4, !tbaa !6
  %1850 = getelementptr inbounds i32, ptr %6, i64 %1820
  store i32 %1849, ptr %1850, align 4, !tbaa !6
  %1851 = add nuw nsw i64 %1820, 1
  %1852 = icmp eq i64 %1851, %1577
  br i1 %1852, label %1860, label %1819, !llvm.loop !643

1853:                                             ; preds = %1815, %1845
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1855:                                             ; preds = %1828, %1837
  %1856 = phi ptr [ %1844, %1837 ], [ %1821, %1828 ]
  %1857 = phi i32 [ %1843, %1837 ], [ 1, %1828 ]
  %1858 = load i32, ptr %1856, align 4, !tbaa !6
  %1859 = add nsw i32 %1858, %1857
  store i32 %1859, ptr %1856, align 4, !tbaa !6
  br label %1860

1860:                                             ; preds = %1847, %1855, %1817, %1800
  %1861 = icmp eq i32 %1809, %5
  br i1 %1861, label %5545, label %1723, !llvm.loop !644

1862:                                             ; preds = %1258
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1864:                                             ; preds = %18
  %1865 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !10
  %1867 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1868 = load ptr, ptr %1867, align 8, !tbaa !10
  store i16 0, ptr %1868, align 2, !tbaa !79
  %1869 = icmp eq i32 %13, 0
  br i1 %1869, label %1870, label %1875

1870:                                             ; preds = %1864
  %1871 = load i32, ptr %1866, align 4, !tbaa !6
  %1872 = mul i32 %1871, %1871
  %1873 = mul i32 %1872, %1872
  %1874 = trunc i32 %1873 to i16
  store i16 %1874, ptr %1868, align 2, !tbaa !79
  br label %5545

1875:                                             ; preds = %1864
  switch i32 %1, label %2479 [
    i32 1, label %1876
    i32 0, label %2183
  ]

1876:                                             ; preds = %1875
  %1877 = getelementptr inbounds i32, ptr %3, i64 %19
  %1878 = load i32, ptr %1877, align 4, !tbaa !6
  %1879 = icmp eq i32 %1878, 0
  %1880 = icmp sgt i32 %5, 0
  br i1 %1879, label %1890, label %1881

1881:                                             ; preds = %1876
  br i1 %1880, label %1882, label %5545

1882:                                             ; preds = %1881
  %1883 = icmp sgt i32 %13, 1
  %1884 = icmp sgt i32 %13, 0
  %1885 = add i32 %13, -2
  %1886 = zext i32 %1885 to i64
  %1887 = zext i32 %13 to i64
  %1888 = add nuw i32 %5, 1
  %1889 = icmp eq i32 %13, 1
  br label %2040

1890:                                             ; preds = %1876
  br i1 %1880, label %1891, label %5545

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %1899

1899:                                             ; preds = %1891, %2038
  %1900 = phi i16 [ 0, %1891 ], [ %1988, %2038 ]
  %1901 = phi i32 [ 0, %1891 ], [ %1990, %2038 ]
  %1902 = phi double [ 0.000000e+00, %1891 ], [ %1989, %2038 ]
  %1903 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %1904, label %1973

1904:                                             ; preds = %1899, %1963
  %1905 = phi i32 [ %1972, %1963 ], [ 0, %1899 ]
  %1906 = phi i64 [ %1914, %1963 ], [ %1896, %1899 ]
  %1907 = phi i64 [ %1971, %1963 ], [ %1895, %1899 ]
  %1908 = phi i32 [ %1969, %1963 ], [ %1903, %1899 ]
  %1909 = sub i32 %1894, %1905
  %1910 = tail call i32 @llvm.smin.i32(i32 %1909, i32 0)
  %1911 = sub i32 %1909, %1910
  %1912 = zext i32 %1911 to i64
  %1913 = add nuw nsw i64 %1912, 1
  %1914 = add nsw i64 %1906, -1
  %1915 = icmp ult i32 %1911, 31
  br i1 %1915, label %1951, label %1916

1916:                                             ; preds = %1904
  %1917 = and i64 %1913, 8589934560
  %1918 = sub i64 %1907, %1917
  br label %1919

1919:                                             ; preds = %1919, %1916
  %1920 = phi i64 [ 0, %1916 ], [ %1943, %1919 ]
  %1921 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1939, %1919 ]
  %1922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1940, %1919 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1941, %1919 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1916 ], [ %1942, %1919 ]
  %1925 = sub i64 %1907, %1920
  %1926 = getelementptr inbounds i32, ptr %9, i64 %1925
  %1927 = getelementptr inbounds i32, ptr %1926, i64 -7
  %1928 = load <8 x i32>, ptr %1927, align 4, !tbaa !6
  %1929 = shufflevector <8 x i32> %1928, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1930 = getelementptr inbounds i32, ptr %1926, i64 -15
  %1931 = load <8 x i32>, ptr %1930, align 4, !tbaa !6
  %1932 = shufflevector <8 x i32> %1931, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1933 = getelementptr inbounds i32, ptr %1926, i64 -23
  %1934 = load <8 x i32>, ptr %1933, align 4, !tbaa !6
  %1935 = shufflevector <8 x i32> %1934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1936 = getelementptr inbounds i32, ptr %1926, i64 -31
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !6
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = mul <8 x i32> %1929, %1921
  %1940 = mul <8 x i32> %1932, %1922
  %1941 = mul <8 x i32> %1935, %1923
  %1942 = mul <8 x i32> %1938, %1924
  %1943 = add nuw i64 %1920, 32
  %1944 = icmp eq i64 %1943, %1917
  br i1 %1944, label %1945, label %1919, !llvm.loop !645

1945:                                             ; preds = %1919
  %1946 = mul <8 x i32> %1940, %1939
  %1947 = mul <8 x i32> %1941, %1946
  %1948 = mul <8 x i32> %1942, %1947
  %1949 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1948)
  %1950 = icmp eq i64 %1913, %1917
  br i1 %1950, label %1963, label %1951

1951:                                             ; preds = %1904, %1945
  %1952 = phi i64 [ %1907, %1904 ], [ %1918, %1945 ]
  %1953 = phi i32 [ 1, %1904 ], [ %1949, %1945 ]
  br label %1954

1954:                                             ; preds = %1951, %1954
  %1955 = phi i64 [ %1960, %1954 ], [ %1952, %1951 ]
  %1956 = phi i32 [ %1959, %1954 ], [ %1953, %1951 ]
  %1957 = getelementptr inbounds i32, ptr %9, i64 %1955
  %1958 = load i32, ptr %1957, align 4, !tbaa !6
  %1959 = mul nsw i32 %1958, %1956
  %1960 = add nsw i64 %1955, -1
  %1961 = trunc i64 %1955 to i32
  %1962 = icmp sgt i32 %1961, 0
  br i1 %1962, label %1954, label %1963, !llvm.loop !646

1963:                                             ; preds = %1954, %1945
  %1964 = phi i32 [ %1949, %1945 ], [ %1959, %1954 ]
  %1965 = and i64 %1914, 4294967295
  %1966 = getelementptr inbounds i32, ptr %6, i64 %1965
  %1967 = load i32, ptr %1966, align 4, !tbaa !6
  %1968 = mul nsw i32 %1967, %1964
  %1969 = add nsw i32 %1968, %1908
  %1970 = icmp sgt i64 %1906, 2
  %1971 = add nsw i64 %1907, -1
  %1972 = add i32 %1905, 1
  br i1 %1970, label %1904, label %1973, !llvm.loop !647

1973:                                             ; preds = %1963, %1899
  %1974 = phi i32 [ %1903, %1899 ], [ %1969, %1963 ]
  %1975 = sext i32 %1974 to i64
  %1976 = getelementptr inbounds double, ptr %2, i64 %1975
  %1977 = load double, ptr %1976, align 8, !tbaa !19
  %1978 = getelementptr inbounds i32, ptr %1866, i64 %1975
  %1979 = load i32, ptr %1978, align 4, !tbaa !6
  %1980 = sitofp i16 %1900 to double
  %1981 = shl i32 %1979, 16
  %1982 = ashr exact i32 %1981, 16
  %1983 = sitofp i32 %1982 to double
  %1984 = fmul fast double %1977, %1983
  %1985 = fmul fast double %1984, %1984
  %1986 = fmul fast double %1985, %1985
  %1987 = fadd fast double %1986, %1980
  %1988 = fptosi double %1987 to i16
  %1989 = fadd fast double %1977, %1902
  %1990 = add nuw nsw i32 %1901, 1
  br i1 %1893, label %1991, label %2038

1991:                                             ; preds = %1973
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1898, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1896
  br i1 %2030, label %2038, label %2000, !llvm.loop !648

2031:                                             ; preds = %1996, %2023
  store i16 %1988, ptr %1868, align 2, !tbaa !79
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1973
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5537, label %1899, !llvm.loop !649

2040:                                             ; preds = %1882, %2181
  %2041 = phi i16 [ 0, %1882 ], [ %2129, %2181 ]
  %2042 = phi i32 [ 0, %1882 ], [ %2130, %2181 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1883, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1887, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1886, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1885, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !650

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !651

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !652

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds i32, ptr %1866, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !6
  %2122 = sitofp i16 %2041 to double
  %2123 = shl i32 %2121, 16
  %2124 = ashr exact i32 %2123, 16
  %2125 = sitofp i32 %2124 to double
  %2126 = fmul fast double %2125, %2125
  %2127 = fmul fast double %2126, %2126
  %2128 = fadd fast double %2127, %2122
  %2129 = fptosi double %2128 to i16
  store i16 %2129, ptr %1868, align 2, !tbaa !79
  %2130 = add nuw nsw i32 %2042, 1
  br i1 %1884, label %2131, label %2181

2131:                                             ; preds = %2118
  %2132 = load i32, ptr %4, align 4, !tbaa !6
  %2133 = load i32, ptr %12, align 4, !tbaa !6
  %2134 = add nsw i32 %2133, -1
  %2135 = icmp slt i32 %2132, %2134
  br i1 %2135, label %2158, label %2136

2136:                                             ; preds = %2131
  %2137 = icmp eq i32 %2132, %2134
  br i1 %2137, label %2138, label %2174

2138:                                             ; preds = %2136
  store i32 0, ptr %4, align 4, !tbaa !6
  %2139 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2139, ptr %6, align 4, !tbaa !6
  br i1 %1889, label %2181, label %2140

2140:                                             ; preds = %2138, %2168
  %2141 = phi i64 [ %2172, %2168 ], [ 1, %2138 ]
  %2142 = getelementptr inbounds i32, ptr %4, i64 %2141
  %2143 = load i32, ptr %2142, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %12, i64 %2141
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = add nsw i32 %2145, -1
  %2147 = icmp slt i32 %2143, %2146
  br i1 %2147, label %2148, label %2166

2148:                                             ; preds = %2140
  br i1 %2135, label %2158, label %2149

2149:                                             ; preds = %2148
  %2150 = shl i64 %2141, 32
  %2151 = add i64 %2150, -4294967296
  %2152 = ashr exact i64 %2151, 32
  %2153 = getelementptr inbounds i32, ptr %7, i64 %2152
  %2154 = load i32, ptr %2153, align 4, !tbaa !6
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2141
  %2156 = load i32, ptr %2155, align 4, !tbaa !6
  %2157 = add nsw i32 %2156, %2154
  store i32 %2157, ptr %2155, align 4, !tbaa !6
  br label %2176

2158:                                             ; preds = %2131, %2148
  %2159 = phi i32 [ %2143, %2148 ], [ %2132, %2131 ]
  %2160 = phi ptr [ %2142, %2148 ], [ %4, %2131 ]
  %2161 = phi i64 [ %2141, %2148 ], [ 0, %2131 ]
  %2162 = add nsw i32 %2159, 1
  store i32 %2162, ptr %2160, align 4, !tbaa !6
  %2163 = getelementptr inbounds i32, ptr %7, i64 %2161
  %2164 = load i32, ptr %2163, align 4, !tbaa !6
  %2165 = getelementptr inbounds i32, ptr %6, i64 %2161
  br label %2176

2166:                                             ; preds = %2140
  %2167 = icmp eq i32 %2143, %2146
  br i1 %2167, label %2168, label %2174

2168:                                             ; preds = %2166
  store i32 0, ptr %2142, align 4, !tbaa !6
  %2169 = getelementptr inbounds i32, ptr %8, i64 %2141
  %2170 = load i32, ptr %2169, align 4, !tbaa !6
  %2171 = getelementptr inbounds i32, ptr %6, i64 %2141
  store i32 %2170, ptr %2171, align 4, !tbaa !6
  %2172 = add nuw nsw i64 %2141, 1
  %2173 = icmp eq i64 %2172, %1887
  br i1 %2173, label %2181, label %2140, !llvm.loop !653

2174:                                             ; preds = %2136, %2166
  %2175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2176:                                             ; preds = %2149, %2158
  %2177 = phi ptr [ %2165, %2158 ], [ %2142, %2149 ]
  %2178 = phi i32 [ %2164, %2158 ], [ 1, %2149 ]
  %2179 = load i32, ptr %2177, align 4, !tbaa !6
  %2180 = add nsw i32 %2179, %2178
  store i32 %2180, ptr %2177, align 4, !tbaa !6
  br label %2181

2181:                                             ; preds = %2168, %2176, %2138, %2118
  %2182 = icmp eq i32 %2130, %5
  br i1 %2182, label %5545, label %2040, !llvm.loop !654

2183:                                             ; preds = %1875
  %2184 = getelementptr inbounds i32, ptr %3, i64 %19
  %2185 = load i32, ptr %2184, align 4, !tbaa !6
  %2186 = icmp eq i32 %2185, 0
  %2187 = icmp sgt i32 %5, 0
  br i1 %2186, label %2197, label %2188

2188:                                             ; preds = %2183
  br i1 %2187, label %2189, label %5545

2189:                                             ; preds = %2188
  %2190 = icmp sgt i32 %13, 1
  %2191 = icmp sgt i32 %13, 0
  %2192 = add i32 %13, -2
  %2193 = zext i32 %2192 to i64
  %2194 = zext i32 %13 to i64
  %2195 = add nuw i32 %5, 1
  %2196 = icmp eq i32 %13, 1
  br label %2340

2197:                                             ; preds = %2183
  br i1 %2187, label %2198, label %5545

2198:                                             ; preds = %2197
  %2199 = icmp sgt i32 %13, 1
  %2200 = icmp sgt i32 %13, 0
  %2201 = add i32 %13, -2
  %2202 = zext i32 %2201 to i64
  %2203 = zext i32 %13 to i64
  %2204 = add nuw i32 %5, 1
  %2205 = icmp eq i32 %13, 1
  br label %2206

2206:                                             ; preds = %2198, %2338
  %2207 = phi i16 [ 0, %2198 ], [ %2288, %2338 ]
  %2208 = phi i32 [ 0, %2198 ], [ %2290, %2338 ]
  %2209 = phi double [ 0.000000e+00, %2198 ], [ %2289, %2338 ]
  %2210 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2199, label %2211, label %2280

2211:                                             ; preds = %2206, %2270
  %2212 = phi i32 [ %2279, %2270 ], [ 0, %2206 ]
  %2213 = phi i64 [ %2221, %2270 ], [ %2203, %2206 ]
  %2214 = phi i64 [ %2278, %2270 ], [ %2202, %2206 ]
  %2215 = phi i32 [ %2276, %2270 ], [ %2210, %2206 ]
  %2216 = sub i32 %2201, %2212
  %2217 = tail call i32 @llvm.smin.i32(i32 %2216, i32 0)
  %2218 = sub i32 %2216, %2217
  %2219 = zext i32 %2218 to i64
  %2220 = add nuw nsw i64 %2219, 1
  %2221 = add nsw i64 %2213, -1
  %2222 = icmp ult i32 %2218, 31
  br i1 %2222, label %2258, label %2223

2223:                                             ; preds = %2211
  %2224 = and i64 %2220, 8589934560
  %2225 = sub i64 %2214, %2224
  br label %2226

2226:                                             ; preds = %2226, %2223
  %2227 = phi i64 [ 0, %2223 ], [ %2250, %2226 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2246, %2226 ]
  %2229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2247, %2226 ]
  %2230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2248, %2226 ]
  %2231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2223 ], [ %2249, %2226 ]
  %2232 = sub i64 %2214, %2227
  %2233 = getelementptr inbounds i32, ptr %9, i64 %2232
  %2234 = getelementptr inbounds i32, ptr %2233, i64 -7
  %2235 = load <8 x i32>, ptr %2234, align 4, !tbaa !6
  %2236 = shufflevector <8 x i32> %2235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2237 = getelementptr inbounds i32, ptr %2233, i64 -15
  %2238 = load <8 x i32>, ptr %2237, align 4, !tbaa !6
  %2239 = shufflevector <8 x i32> %2238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2240 = getelementptr inbounds i32, ptr %2233, i64 -23
  %2241 = load <8 x i32>, ptr %2240, align 4, !tbaa !6
  %2242 = shufflevector <8 x i32> %2241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2243 = getelementptr inbounds i32, ptr %2233, i64 -31
  %2244 = load <8 x i32>, ptr %2243, align 4, !tbaa !6
  %2245 = shufflevector <8 x i32> %2244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2246 = mul <8 x i32> %2236, %2228
  %2247 = mul <8 x i32> %2239, %2229
  %2248 = mul <8 x i32> %2242, %2230
  %2249 = mul <8 x i32> %2245, %2231
  %2250 = add nuw i64 %2227, 32
  %2251 = icmp eq i64 %2250, %2224
  br i1 %2251, label %2252, label %2226, !llvm.loop !655

2252:                                             ; preds = %2226
  %2253 = mul <8 x i32> %2247, %2246
  %2254 = mul <8 x i32> %2248, %2253
  %2255 = mul <8 x i32> %2249, %2254
  %2256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2255)
  %2257 = icmp eq i64 %2220, %2224
  br i1 %2257, label %2270, label %2258

2258:                                             ; preds = %2211, %2252
  %2259 = phi i64 [ %2214, %2211 ], [ %2225, %2252 ]
  %2260 = phi i32 [ 1, %2211 ], [ %2256, %2252 ]
  br label %2261

2261:                                             ; preds = %2258, %2261
  %2262 = phi i64 [ %2267, %2261 ], [ %2259, %2258 ]
  %2263 = phi i32 [ %2266, %2261 ], [ %2260, %2258 ]
  %2264 = getelementptr inbounds i32, ptr %9, i64 %2262
  %2265 = load i32, ptr %2264, align 4, !tbaa !6
  %2266 = mul nsw i32 %2265, %2263
  %2267 = add nsw i64 %2262, -1
  %2268 = trunc i64 %2262 to i32
  %2269 = icmp sgt i32 %2268, 0
  br i1 %2269, label %2261, label %2270, !llvm.loop !656

2270:                                             ; preds = %2261, %2252
  %2271 = phi i32 [ %2256, %2252 ], [ %2266, %2261 ]
  %2272 = and i64 %2221, 4294967295
  %2273 = getelementptr inbounds i32, ptr %6, i64 %2272
  %2274 = load i32, ptr %2273, align 4, !tbaa !6
  %2275 = mul nsw i32 %2274, %2271
  %2276 = add nsw i32 %2275, %2215
  %2277 = icmp sgt i64 %2213, 2
  %2278 = add nsw i64 %2214, -1
  %2279 = add i32 %2212, 1
  br i1 %2277, label %2211, label %2280, !llvm.loop !657

2280:                                             ; preds = %2270, %2206
  %2281 = phi i32 [ %2210, %2206 ], [ %2276, %2270 ]
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds i32, ptr %1866, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !6
  %2285 = mul i32 %2284, %2284
  %2286 = mul i32 %2285, %2285
  %2287 = trunc i32 %2286 to i16
  %2288 = add i16 %2207, %2287
  %2289 = fadd fast double %2209, 1.000000e+00
  %2290 = add nuw nsw i32 %2208, 1
  br i1 %2200, label %2291, label %2338

2291:                                             ; preds = %2280
  %2292 = load i32, ptr %4, align 4, !tbaa !6
  %2293 = load i32, ptr %12, align 4, !tbaa !6
  %2294 = add nsw i32 %2293, -1
  %2295 = icmp slt i32 %2292, %2294
  br i1 %2295, label %2315, label %2296

2296:                                             ; preds = %2291
  %2297 = icmp eq i32 %2292, %2294
  br i1 %2297, label %2298, label %2331

2298:                                             ; preds = %2296
  store i32 0, ptr %4, align 4, !tbaa !6
  %2299 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2299, ptr %6, align 4, !tbaa !6
  br i1 %2205, label %2338, label %2300

2300:                                             ; preds = %2298, %2325
  %2301 = phi i64 [ %2329, %2325 ], [ 1, %2298 ]
  %2302 = getelementptr inbounds i32, ptr %4, i64 %2301
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %12, i64 %2301
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = add nsw i32 %2305, -1
  %2307 = icmp slt i32 %2303, %2306
  br i1 %2307, label %2308, label %2323

2308:                                             ; preds = %2300
  br i1 %2295, label %2315, label %2309

2309:                                             ; preds = %2308
  %2310 = getelementptr inbounds i32, ptr %7, i64 %2301
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2301
  %2313 = load i32, ptr %2312, align 4, !tbaa !6
  %2314 = add nsw i32 %2313, %2311
  store i32 %2314, ptr %2312, align 4, !tbaa !6
  br label %2333

2315:                                             ; preds = %2291, %2308
  %2316 = phi i32 [ %2303, %2308 ], [ %2292, %2291 ]
  %2317 = phi ptr [ %2302, %2308 ], [ %4, %2291 ]
  %2318 = phi i64 [ %2301, %2308 ], [ 0, %2291 ]
  %2319 = add nsw i32 %2316, 1
  store i32 %2319, ptr %2317, align 4, !tbaa !6
  %2320 = getelementptr inbounds i32, ptr %7, i64 %2318
  %2321 = load i32, ptr %2320, align 4, !tbaa !6
  %2322 = getelementptr inbounds i32, ptr %6, i64 %2318
  br label %2333

2323:                                             ; preds = %2300
  %2324 = icmp eq i32 %2303, %2306
  br i1 %2324, label %2325, label %2331

2325:                                             ; preds = %2323
  store i32 0, ptr %2302, align 4, !tbaa !6
  %2326 = getelementptr inbounds i32, ptr %8, i64 %2301
  %2327 = load i32, ptr %2326, align 4, !tbaa !6
  %2328 = getelementptr inbounds i32, ptr %6, i64 %2301
  store i32 %2327, ptr %2328, align 4, !tbaa !6
  %2329 = add nuw nsw i64 %2301, 1
  %2330 = icmp eq i64 %2329, %2203
  br i1 %2330, label %2338, label %2300, !llvm.loop !658

2331:                                             ; preds = %2296, %2323
  store i16 %2288, ptr %1868, align 2, !tbaa !79
  %2332 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2333:                                             ; preds = %2309, %2315
  %2334 = phi ptr [ %2322, %2315 ], [ %2302, %2309 ]
  %2335 = phi i32 [ %2321, %2315 ], [ 1, %2309 ]
  %2336 = load i32, ptr %2334, align 4, !tbaa !6
  %2337 = add nsw i32 %2336, %2335
  store i32 %2337, ptr %2334, align 4, !tbaa !6
  br label %2338

2338:                                             ; preds = %2325, %2333, %2298, %2280
  %2339 = icmp eq i32 %2290, %5
  br i1 %2339, label %5538, label %2206, !llvm.loop !659

2340:                                             ; preds = %2189, %2477
  %2341 = phi i16 [ 0, %2189 ], [ %2425, %2477 ]
  %2342 = phi i32 [ 0, %2189 ], [ %2426, %2477 ]
  %2343 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2190, label %2344, label %2413

2344:                                             ; preds = %2340, %2403
  %2345 = phi i32 [ %2412, %2403 ], [ 0, %2340 ]
  %2346 = phi i64 [ %2354, %2403 ], [ %2194, %2340 ]
  %2347 = phi i64 [ %2411, %2403 ], [ %2193, %2340 ]
  %2348 = phi i32 [ %2409, %2403 ], [ %2343, %2340 ]
  %2349 = sub i32 %2192, %2345
  %2350 = tail call i32 @llvm.smin.i32(i32 %2349, i32 0)
  %2351 = sub i32 %2349, %2350
  %2352 = zext i32 %2351 to i64
  %2353 = add nuw nsw i64 %2352, 1
  %2354 = add nsw i64 %2346, -1
  %2355 = icmp ult i32 %2351, 31
  br i1 %2355, label %2391, label %2356

2356:                                             ; preds = %2344
  %2357 = and i64 %2353, 8589934560
  %2358 = sub i64 %2347, %2357
  br label %2359

2359:                                             ; preds = %2359, %2356
  %2360 = phi i64 [ 0, %2356 ], [ %2383, %2359 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2379, %2359 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2380, %2359 ]
  %2363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2381, %2359 ]
  %2364 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2356 ], [ %2382, %2359 ]
  %2365 = sub i64 %2347, %2360
  %2366 = getelementptr inbounds i32, ptr %11, i64 %2365
  %2367 = getelementptr inbounds i32, ptr %2366, i64 -7
  %2368 = load <8 x i32>, ptr %2367, align 4, !tbaa !6
  %2369 = shufflevector <8 x i32> %2368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2370 = getelementptr inbounds i32, ptr %2366, i64 -15
  %2371 = load <8 x i32>, ptr %2370, align 4, !tbaa !6
  %2372 = shufflevector <8 x i32> %2371, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2373 = getelementptr inbounds i32, ptr %2366, i64 -23
  %2374 = load <8 x i32>, ptr %2373, align 4, !tbaa !6
  %2375 = shufflevector <8 x i32> %2374, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2376 = getelementptr inbounds i32, ptr %2366, i64 -31
  %2377 = load <8 x i32>, ptr %2376, align 4, !tbaa !6
  %2378 = shufflevector <8 x i32> %2377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2379 = mul <8 x i32> %2369, %2361
  %2380 = mul <8 x i32> %2372, %2362
  %2381 = mul <8 x i32> %2375, %2363
  %2382 = mul <8 x i32> %2378, %2364
  %2383 = add nuw i64 %2360, 32
  %2384 = icmp eq i64 %2383, %2357
  br i1 %2384, label %2385, label %2359, !llvm.loop !660

2385:                                             ; preds = %2359
  %2386 = mul <8 x i32> %2380, %2379
  %2387 = mul <8 x i32> %2381, %2386
  %2388 = mul <8 x i32> %2382, %2387
  %2389 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2388)
  %2390 = icmp eq i64 %2353, %2357
  br i1 %2390, label %2403, label %2391

2391:                                             ; preds = %2344, %2385
  %2392 = phi i64 [ %2347, %2344 ], [ %2358, %2385 ]
  %2393 = phi i32 [ 1, %2344 ], [ %2389, %2385 ]
  br label %2394

2394:                                             ; preds = %2391, %2394
  %2395 = phi i64 [ %2400, %2394 ], [ %2392, %2391 ]
  %2396 = phi i32 [ %2399, %2394 ], [ %2393, %2391 ]
  %2397 = getelementptr inbounds i32, ptr %11, i64 %2395
  %2398 = load i32, ptr %2397, align 4, !tbaa !6
  %2399 = mul nsw i32 %2398, %2396
  %2400 = add nsw i64 %2395, -1
  %2401 = trunc i64 %2395 to i32
  %2402 = icmp sgt i32 %2401, 0
  br i1 %2402, label %2394, label %2403, !llvm.loop !661

2403:                                             ; preds = %2394, %2385
  %2404 = phi i32 [ %2389, %2385 ], [ %2399, %2394 ]
  %2405 = and i64 %2354, 4294967295
  %2406 = getelementptr inbounds i32, ptr %6, i64 %2405
  %2407 = load i32, ptr %2406, align 4, !tbaa !6
  %2408 = mul nsw i32 %2407, %2404
  %2409 = add nsw i32 %2408, %2348
  %2410 = icmp sgt i64 %2346, 2
  %2411 = add nsw i64 %2347, -1
  %2412 = add i32 %2345, 1
  br i1 %2410, label %2344, label %2413, !llvm.loop !662

2413:                                             ; preds = %2403, %2340
  %2414 = phi i32 [ %2343, %2340 ], [ %2409, %2403 ]
  %2415 = icmp slt i32 %2414, %5
  br i1 %2415, label %2418, label %2416

2416:                                             ; preds = %2413
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2418:                                             ; preds = %2413
  %2419 = sext i32 %2414 to i64
  %2420 = getelementptr inbounds i32, ptr %1866, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !6
  %2422 = mul i32 %2421, %2421
  %2423 = mul i32 %2422, %2422
  %2424 = trunc i32 %2423 to i16
  %2425 = add i16 %2341, %2424
  store i16 %2425, ptr %1868, align 2, !tbaa !79
  %2426 = add nuw nsw i32 %2342, 1
  br i1 %2191, label %2427, label %2477

2427:                                             ; preds = %2418
  %2428 = load i32, ptr %4, align 4, !tbaa !6
  %2429 = load i32, ptr %12, align 4, !tbaa !6
  %2430 = add nsw i32 %2429, -1
  %2431 = icmp slt i32 %2428, %2430
  br i1 %2431, label %2454, label %2432

2432:                                             ; preds = %2427
  %2433 = icmp eq i32 %2428, %2430
  br i1 %2433, label %2434, label %2470

2434:                                             ; preds = %2432
  store i32 0, ptr %4, align 4, !tbaa !6
  %2435 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2435, ptr %6, align 4, !tbaa !6
  br i1 %2196, label %2477, label %2436

2436:                                             ; preds = %2434, %2464
  %2437 = phi i64 [ %2468, %2464 ], [ 1, %2434 ]
  %2438 = getelementptr inbounds i32, ptr %4, i64 %2437
  %2439 = load i32, ptr %2438, align 4, !tbaa !6
  %2440 = getelementptr inbounds i32, ptr %12, i64 %2437
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = add nsw i32 %2441, -1
  %2443 = icmp slt i32 %2439, %2442
  br i1 %2443, label %2444, label %2462

2444:                                             ; preds = %2436
  br i1 %2431, label %2454, label %2445

2445:                                             ; preds = %2444
  %2446 = shl i64 %2437, 32
  %2447 = add i64 %2446, -4294967296
  %2448 = ashr exact i64 %2447, 32
  %2449 = getelementptr inbounds i32, ptr %7, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = getelementptr inbounds i32, ptr %6, i64 %2437
  %2452 = load i32, ptr %2451, align 4, !tbaa !6
  %2453 = add nsw i32 %2452, %2450
  store i32 %2453, ptr %2451, align 4, !tbaa !6
  br label %2472

2454:                                             ; preds = %2427, %2444
  %2455 = phi i32 [ %2439, %2444 ], [ %2428, %2427 ]
  %2456 = phi ptr [ %2438, %2444 ], [ %4, %2427 ]
  %2457 = phi i64 [ %2437, %2444 ], [ 0, %2427 ]
  %2458 = add nsw i32 %2455, 1
  store i32 %2458, ptr %2456, align 4, !tbaa !6
  %2459 = getelementptr inbounds i32, ptr %7, i64 %2457
  %2460 = load i32, ptr %2459, align 4, !tbaa !6
  %2461 = getelementptr inbounds i32, ptr %6, i64 %2457
  br label %2472

2462:                                             ; preds = %2436
  %2463 = icmp eq i32 %2439, %2442
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2462
  store i32 0, ptr %2438, align 4, !tbaa !6
  %2465 = getelementptr inbounds i32, ptr %8, i64 %2437
  %2466 = load i32, ptr %2465, align 4, !tbaa !6
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2437
  store i32 %2466, ptr %2467, align 4, !tbaa !6
  %2468 = add nuw nsw i64 %2437, 1
  %2469 = icmp eq i64 %2468, %2194
  br i1 %2469, label %2477, label %2436, !llvm.loop !663

2470:                                             ; preds = %2432, %2462
  %2471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2472:                                             ; preds = %2445, %2454
  %2473 = phi ptr [ %2461, %2454 ], [ %2438, %2445 ]
  %2474 = phi i32 [ %2460, %2454 ], [ 1, %2445 ]
  %2475 = load i32, ptr %2473, align 4, !tbaa !6
  %2476 = add nsw i32 %2475, %2474
  store i32 %2476, ptr %2473, align 4, !tbaa !6
  br label %2477

2477:                                             ; preds = %2464, %2472, %2434, %2418
  %2478 = icmp eq i32 %2426, %5
  br i1 %2478, label %5545, label %2340, !llvm.loop !664

2479:                                             ; preds = %1875
  %2480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

2481:                                             ; preds = %18
  %2482 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2483 = load ptr, ptr %2482, align 8, !tbaa !10
  %2484 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2485 = load ptr, ptr %2484, align 8, !tbaa !10
  store i32 0, ptr %2485, align 4, !tbaa !6
  %2486 = icmp eq i32 %13, 0
  br i1 %2486, label %2487, label %2491

2487:                                             ; preds = %2481
  %2488 = load i32, ptr %2483, align 4, !tbaa !6
  %2489 = mul i32 %2488, %2488
  %2490 = mul i32 %2489, %2489
  store i32 %2490, ptr %2485, align 4, !tbaa !6
  br label %5545

2491:                                             ; preds = %2481
  switch i32 %1, label %3089 [
    i32 1, label %2492
    i32 0, label %2795
  ]

2492:                                             ; preds = %2491
  %2493 = getelementptr inbounds i32, ptr %3, i64 %19
  %2494 = load i32, ptr %2493, align 4, !tbaa !6
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp sgt i32 %5, 0
  br i1 %2495, label %2506, label %2497

2497:                                             ; preds = %2492
  br i1 %2496, label %2498, label %5545

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2654

2506:                                             ; preds = %2492
  br i1 %2496, label %2507, label %5545

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2515

2515:                                             ; preds = %2507, %2652
  %2516 = phi i32 [ 0, %2507 ], [ %2604, %2652 ]
  %2517 = phi double [ 0.000000e+00, %2507 ], [ %2603, %2652 ]
  %2518 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2519, label %2588

2519:                                             ; preds = %2515, %2578
  %2520 = phi i32 [ %2587, %2578 ], [ 0, %2515 ]
  %2521 = phi i64 [ %2529, %2578 ], [ %2512, %2515 ]
  %2522 = phi i64 [ %2586, %2578 ], [ %2511, %2515 ]
  %2523 = phi i32 [ %2584, %2578 ], [ %2518, %2515 ]
  %2524 = sub i32 %2510, %2520
  %2525 = tail call i32 @llvm.smin.i32(i32 %2524, i32 0)
  %2526 = sub i32 %2524, %2525
  %2527 = zext i32 %2526 to i64
  %2528 = add nuw nsw i64 %2527, 1
  %2529 = add nsw i64 %2521, -1
  %2530 = icmp ult i32 %2526, 31
  br i1 %2530, label %2566, label %2531

2531:                                             ; preds = %2519
  %2532 = and i64 %2528, 8589934560
  %2533 = sub i64 %2522, %2532
  br label %2534

2534:                                             ; preds = %2534, %2531
  %2535 = phi i64 [ 0, %2531 ], [ %2558, %2534 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2554, %2534 ]
  %2537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2555, %2534 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2556, %2534 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2557, %2534 ]
  %2540 = sub i64 %2522, %2535
  %2541 = getelementptr inbounds i32, ptr %9, i64 %2540
  %2542 = getelementptr inbounds i32, ptr %2541, i64 -7
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2541, i64 -15
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2541, i64 -23
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = getelementptr inbounds i32, ptr %2541, i64 -31
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = mul <8 x i32> %2544, %2536
  %2555 = mul <8 x i32> %2547, %2537
  %2556 = mul <8 x i32> %2550, %2538
  %2557 = mul <8 x i32> %2553, %2539
  %2558 = add nuw i64 %2535, 32
  %2559 = icmp eq i64 %2558, %2532
  br i1 %2559, label %2560, label %2534, !llvm.loop !665

2560:                                             ; preds = %2534
  %2561 = mul <8 x i32> %2555, %2554
  %2562 = mul <8 x i32> %2556, %2561
  %2563 = mul <8 x i32> %2557, %2562
  %2564 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2563)
  %2565 = icmp eq i64 %2528, %2532
  br i1 %2565, label %2578, label %2566

2566:                                             ; preds = %2519, %2560
  %2567 = phi i64 [ %2522, %2519 ], [ %2533, %2560 ]
  %2568 = phi i32 [ 1, %2519 ], [ %2564, %2560 ]
  br label %2569

2569:                                             ; preds = %2566, %2569
  %2570 = phi i64 [ %2575, %2569 ], [ %2567, %2566 ]
  %2571 = phi i32 [ %2574, %2569 ], [ %2568, %2566 ]
  %2572 = getelementptr inbounds i32, ptr %9, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2571
  %2575 = add nsw i64 %2570, -1
  %2576 = trunc i64 %2570 to i32
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2569, label %2578, !llvm.loop !666

2578:                                             ; preds = %2569, %2560
  %2579 = phi i32 [ %2564, %2560 ], [ %2574, %2569 ]
  %2580 = and i64 %2529, 4294967295
  %2581 = getelementptr inbounds i32, ptr %6, i64 %2580
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2579
  %2584 = add nsw i32 %2583, %2523
  %2585 = icmp sgt i64 %2521, 2
  %2586 = add nsw i64 %2522, -1
  %2587 = add i32 %2520, 1
  br i1 %2585, label %2519, label %2588, !llvm.loop !667

2588:                                             ; preds = %2578, %2515
  %2589 = phi i32 [ %2518, %2515 ], [ %2584, %2578 ]
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds double, ptr %2, i64 %2590
  %2592 = load double, ptr %2591, align 8, !tbaa !19
  %2593 = getelementptr inbounds i32, ptr %2483, i64 %2590
  %2594 = load i32, ptr %2593, align 4, !tbaa !6
  %2595 = load i32, ptr %2485, align 4, !tbaa !6
  %2596 = sitofp i32 %2595 to double
  %2597 = sitofp i32 %2594 to double
  %2598 = fmul fast double %2592, %2597
  %2599 = fmul fast double %2598, %2598
  %2600 = fmul fast double %2599, %2599
  %2601 = fadd fast double %2600, %2596
  %2602 = fptosi double %2601 to i32
  store i32 %2602, ptr %2485, align 4, !tbaa !6
  %2603 = fadd fast double %2592, %2517
  %2604 = add nuw nsw i32 %2516, 1
  br i1 %2509, label %2605, label %2652

2605:                                             ; preds = %2588
  %2606 = load i32, ptr %4, align 4, !tbaa !6
  %2607 = load i32, ptr %12, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, -1
  %2609 = icmp slt i32 %2606, %2608
  br i1 %2609, label %2629, label %2610

2610:                                             ; preds = %2605
  %2611 = icmp eq i32 %2606, %2608
  br i1 %2611, label %2612, label %2645

2612:                                             ; preds = %2610
  store i32 0, ptr %4, align 4, !tbaa !6
  %2613 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2613, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2652, label %2614

2614:                                             ; preds = %2612, %2639
  %2615 = phi i64 [ %2643, %2639 ], [ 1, %2612 ]
  %2616 = getelementptr inbounds i32, ptr %4, i64 %2615
  %2617 = load i32, ptr %2616, align 4, !tbaa !6
  %2618 = getelementptr inbounds i32, ptr %12, i64 %2615
  %2619 = load i32, ptr %2618, align 4, !tbaa !6
  %2620 = add nsw i32 %2619, -1
  %2621 = icmp slt i32 %2617, %2620
  br i1 %2621, label %2622, label %2637

2622:                                             ; preds = %2614
  br i1 %2609, label %2629, label %2623

2623:                                             ; preds = %2622
  %2624 = getelementptr inbounds i32, ptr %7, i64 %2615
  %2625 = load i32, ptr %2624, align 4, !tbaa !6
  %2626 = getelementptr inbounds i32, ptr %6, i64 %2615
  %2627 = load i32, ptr %2626, align 4, !tbaa !6
  %2628 = add nsw i32 %2627, %2625
  store i32 %2628, ptr %2626, align 4, !tbaa !6
  br label %2647

2629:                                             ; preds = %2605, %2622
  %2630 = phi i32 [ %2617, %2622 ], [ %2606, %2605 ]
  %2631 = phi ptr [ %2616, %2622 ], [ %4, %2605 ]
  %2632 = phi i64 [ %2615, %2622 ], [ 0, %2605 ]
  %2633 = add nsw i32 %2630, 1
  store i32 %2633, ptr %2631, align 4, !tbaa !6
  %2634 = getelementptr inbounds i32, ptr %7, i64 %2632
  %2635 = load i32, ptr %2634, align 4, !tbaa !6
  %2636 = getelementptr inbounds i32, ptr %6, i64 %2632
  br label %2647

2637:                                             ; preds = %2614
  %2638 = icmp eq i32 %2617, %2620
  br i1 %2638, label %2639, label %2645

2639:                                             ; preds = %2637
  store i32 0, ptr %2616, align 4, !tbaa !6
  %2640 = getelementptr inbounds i32, ptr %8, i64 %2615
  %2641 = load i32, ptr %2640, align 4, !tbaa !6
  %2642 = getelementptr inbounds i32, ptr %6, i64 %2615
  store i32 %2641, ptr %2642, align 4, !tbaa !6
  %2643 = add nuw nsw i64 %2615, 1
  %2644 = icmp eq i64 %2643, %2512
  br i1 %2644, label %2652, label %2614, !llvm.loop !668

2645:                                             ; preds = %2610, %2637
  %2646 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2647:                                             ; preds = %2623, %2629
  %2648 = phi ptr [ %2636, %2629 ], [ %2616, %2623 ]
  %2649 = phi i32 [ %2635, %2629 ], [ 1, %2623 ]
  %2650 = load i32, ptr %2648, align 4, !tbaa !6
  %2651 = add nsw i32 %2650, %2649
  store i32 %2651, ptr %2648, align 4, !tbaa !6
  br label %2652

2652:                                             ; preds = %2639, %2647, %2612, %2588
  %2653 = icmp eq i32 %2604, %5
  br i1 %2653, label %5545, label %2515, !llvm.loop !669

2654:                                             ; preds = %2498, %2793
  %2655 = phi i32 [ 0, %2498 ], [ %2742, %2793 ]
  %2656 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2657, label %2726

2657:                                             ; preds = %2654, %2716
  %2658 = phi i32 [ %2725, %2716 ], [ 0, %2654 ]
  %2659 = phi i64 [ %2667, %2716 ], [ %2503, %2654 ]
  %2660 = phi i64 [ %2724, %2716 ], [ %2502, %2654 ]
  %2661 = phi i32 [ %2722, %2716 ], [ %2656, %2654 ]
  %2662 = sub i32 %2501, %2658
  %2663 = tail call i32 @llvm.smin.i32(i32 %2662, i32 0)
  %2664 = sub i32 %2662, %2663
  %2665 = zext i32 %2664 to i64
  %2666 = add nuw nsw i64 %2665, 1
  %2667 = add nsw i64 %2659, -1
  %2668 = icmp ult i32 %2664, 31
  br i1 %2668, label %2704, label %2669

2669:                                             ; preds = %2657
  %2670 = and i64 %2666, 8589934560
  %2671 = sub i64 %2660, %2670
  br label %2672

2672:                                             ; preds = %2672, %2669
  %2673 = phi i64 [ 0, %2669 ], [ %2696, %2672 ]
  %2674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2692, %2672 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2693, %2672 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2694, %2672 ]
  %2677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2669 ], [ %2695, %2672 ]
  %2678 = sub i64 %2660, %2673
  %2679 = getelementptr inbounds i32, ptr %11, i64 %2678
  %2680 = getelementptr inbounds i32, ptr %2679, i64 -7
  %2681 = load <8 x i32>, ptr %2680, align 4, !tbaa !6
  %2682 = shufflevector <8 x i32> %2681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2683 = getelementptr inbounds i32, ptr %2679, i64 -15
  %2684 = load <8 x i32>, ptr %2683, align 4, !tbaa !6
  %2685 = shufflevector <8 x i32> %2684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2686 = getelementptr inbounds i32, ptr %2679, i64 -23
  %2687 = load <8 x i32>, ptr %2686, align 4, !tbaa !6
  %2688 = shufflevector <8 x i32> %2687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2689 = getelementptr inbounds i32, ptr %2679, i64 -31
  %2690 = load <8 x i32>, ptr %2689, align 4, !tbaa !6
  %2691 = shufflevector <8 x i32> %2690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2692 = mul <8 x i32> %2682, %2674
  %2693 = mul <8 x i32> %2685, %2675
  %2694 = mul <8 x i32> %2688, %2676
  %2695 = mul <8 x i32> %2691, %2677
  %2696 = add nuw i64 %2673, 32
  %2697 = icmp eq i64 %2696, %2670
  br i1 %2697, label %2698, label %2672, !llvm.loop !670

2698:                                             ; preds = %2672
  %2699 = mul <8 x i32> %2693, %2692
  %2700 = mul <8 x i32> %2694, %2699
  %2701 = mul <8 x i32> %2695, %2700
  %2702 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2701)
  %2703 = icmp eq i64 %2666, %2670
  br i1 %2703, label %2716, label %2704

2704:                                             ; preds = %2657, %2698
  %2705 = phi i64 [ %2660, %2657 ], [ %2671, %2698 ]
  %2706 = phi i32 [ 1, %2657 ], [ %2702, %2698 ]
  br label %2707

2707:                                             ; preds = %2704, %2707
  %2708 = phi i64 [ %2713, %2707 ], [ %2705, %2704 ]
  %2709 = phi i32 [ %2712, %2707 ], [ %2706, %2704 ]
  %2710 = getelementptr inbounds i32, ptr %11, i64 %2708
  %2711 = load i32, ptr %2710, align 4, !tbaa !6
  %2712 = mul nsw i32 %2711, %2709
  %2713 = add nsw i64 %2708, -1
  %2714 = trunc i64 %2708 to i32
  %2715 = icmp sgt i32 %2714, 0
  br i1 %2715, label %2707, label %2716, !llvm.loop !671

2716:                                             ; preds = %2707, %2698
  %2717 = phi i32 [ %2702, %2698 ], [ %2712, %2707 ]
  %2718 = and i64 %2667, 4294967295
  %2719 = getelementptr inbounds i32, ptr %6, i64 %2718
  %2720 = load i32, ptr %2719, align 4, !tbaa !6
  %2721 = mul nsw i32 %2720, %2717
  %2722 = add nsw i32 %2721, %2661
  %2723 = icmp sgt i64 %2659, 2
  %2724 = add nsw i64 %2660, -1
  %2725 = add i32 %2658, 1
  br i1 %2723, label %2657, label %2726, !llvm.loop !672

2726:                                             ; preds = %2716, %2654
  %2727 = phi i32 [ %2656, %2654 ], [ %2722, %2716 ]
  %2728 = icmp slt i32 %2727, %5
  br i1 %2728, label %2731, label %2729

2729:                                             ; preds = %2726
  %2730 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2731:                                             ; preds = %2726
  %2732 = sext i32 %2727 to i64
  %2733 = getelementptr inbounds i32, ptr %2483, i64 %2732
  %2734 = load i32, ptr %2733, align 4, !tbaa !6
  %2735 = load i32, ptr %2485, align 4, !tbaa !6
  %2736 = sitofp i32 %2735 to double
  %2737 = sitofp i32 %2734 to double
  %2738 = fmul fast double %2737, %2737
  %2739 = fmul fast double %2738, %2738
  %2740 = fadd fast double %2739, %2736
  %2741 = fptosi double %2740 to i32
  store i32 %2741, ptr %2485, align 4, !tbaa !6
  %2742 = add nuw nsw i32 %2655, 1
  br i1 %2500, label %2743, label %2793

2743:                                             ; preds = %2731
  %2744 = load i32, ptr %4, align 4, !tbaa !6
  %2745 = load i32, ptr %12, align 4, !tbaa !6
  %2746 = add nsw i32 %2745, -1
  %2747 = icmp slt i32 %2744, %2746
  br i1 %2747, label %2770, label %2748

2748:                                             ; preds = %2743
  %2749 = icmp eq i32 %2744, %2746
  br i1 %2749, label %2750, label %2786

2750:                                             ; preds = %2748
  store i32 0, ptr %4, align 4, !tbaa !6
  %2751 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2751, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2793, label %2752

2752:                                             ; preds = %2750, %2780
  %2753 = phi i64 [ %2784, %2780 ], [ 1, %2750 ]
  %2754 = getelementptr inbounds i32, ptr %4, i64 %2753
  %2755 = load i32, ptr %2754, align 4, !tbaa !6
  %2756 = getelementptr inbounds i32, ptr %12, i64 %2753
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = add nsw i32 %2757, -1
  %2759 = icmp slt i32 %2755, %2758
  br i1 %2759, label %2760, label %2778

2760:                                             ; preds = %2752
  br i1 %2747, label %2770, label %2761

2761:                                             ; preds = %2760
  %2762 = shl i64 %2753, 32
  %2763 = add i64 %2762, -4294967296
  %2764 = ashr exact i64 %2763, 32
  %2765 = getelementptr inbounds i32, ptr %7, i64 %2764
  %2766 = load i32, ptr %2765, align 4, !tbaa !6
  %2767 = getelementptr inbounds i32, ptr %6, i64 %2753
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, %2766
  store i32 %2769, ptr %2767, align 4, !tbaa !6
  br label %2788

2770:                                             ; preds = %2743, %2760
  %2771 = phi i32 [ %2755, %2760 ], [ %2744, %2743 ]
  %2772 = phi ptr [ %2754, %2760 ], [ %4, %2743 ]
  %2773 = phi i64 [ %2753, %2760 ], [ 0, %2743 ]
  %2774 = add nsw i32 %2771, 1
  store i32 %2774, ptr %2772, align 4, !tbaa !6
  %2775 = getelementptr inbounds i32, ptr %7, i64 %2773
  %2776 = load i32, ptr %2775, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %6, i64 %2773
  br label %2788

2778:                                             ; preds = %2752
  %2779 = icmp eq i32 %2755, %2758
  br i1 %2779, label %2780, label %2786

2780:                                             ; preds = %2778
  store i32 0, ptr %2754, align 4, !tbaa !6
  %2781 = getelementptr inbounds i32, ptr %8, i64 %2753
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = getelementptr inbounds i32, ptr %6, i64 %2753
  store i32 %2782, ptr %2783, align 4, !tbaa !6
  %2784 = add nuw nsw i64 %2753, 1
  %2785 = icmp eq i64 %2784, %2503
  br i1 %2785, label %2793, label %2752, !llvm.loop !673

2786:                                             ; preds = %2748, %2778
  %2787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2788:                                             ; preds = %2761, %2770
  %2789 = phi ptr [ %2777, %2770 ], [ %2754, %2761 ]
  %2790 = phi i32 [ %2776, %2770 ], [ 1, %2761 ]
  %2791 = load i32, ptr %2789, align 4, !tbaa !6
  %2792 = add nsw i32 %2791, %2790
  store i32 %2792, ptr %2789, align 4, !tbaa !6
  br label %2793

2793:                                             ; preds = %2780, %2788, %2750, %2731
  %2794 = icmp eq i32 %2742, %5
  br i1 %2794, label %5545, label %2654, !llvm.loop !674

2795:                                             ; preds = %2491
  %2796 = getelementptr inbounds i32, ptr %3, i64 %19
  %2797 = load i32, ptr %2796, align 4, !tbaa !6
  %2798 = icmp eq i32 %2797, 0
  %2799 = icmp sgt i32 %5, 0
  br i1 %2798, label %2809, label %2800

2800:                                             ; preds = %2795
  br i1 %2799, label %2801, label %5545

2801:                                             ; preds = %2800
  %2802 = icmp sgt i32 %13, 1
  %2803 = icmp sgt i32 %13, 0
  %2804 = add i32 %13, -2
  %2805 = zext i32 %2804 to i64
  %2806 = zext i32 %13 to i64
  %2807 = add nuw i32 %5, 1
  %2808 = icmp eq i32 %13, 1
  br label %2951

2809:                                             ; preds = %2795
  br i1 %2799, label %2810, label %5545

2810:                                             ; preds = %2809
  %2811 = icmp sgt i32 %13, 1
  %2812 = icmp sgt i32 %13, 0
  %2813 = add i32 %13, -2
  %2814 = zext i32 %2813 to i64
  %2815 = zext i32 %13 to i64
  %2816 = add nuw i32 %5, 1
  %2817 = icmp eq i32 %13, 1
  br label %2818

2818:                                             ; preds = %2810, %2949
  %2819 = phi i32 [ 0, %2810 ], [ %2901, %2949 ]
  %2820 = phi double [ 0.000000e+00, %2810 ], [ %2900, %2949 ]
  %2821 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2811, label %2822, label %2891

2822:                                             ; preds = %2818, %2881
  %2823 = phi i32 [ %2890, %2881 ], [ 0, %2818 ]
  %2824 = phi i64 [ %2832, %2881 ], [ %2815, %2818 ]
  %2825 = phi i64 [ %2889, %2881 ], [ %2814, %2818 ]
  %2826 = phi i32 [ %2887, %2881 ], [ %2821, %2818 ]
  %2827 = sub i32 %2813, %2823
  %2828 = tail call i32 @llvm.smin.i32(i32 %2827, i32 0)
  %2829 = sub i32 %2827, %2828
  %2830 = zext i32 %2829 to i64
  %2831 = add nuw nsw i64 %2830, 1
  %2832 = add nsw i64 %2824, -1
  %2833 = icmp ult i32 %2829, 31
  br i1 %2833, label %2869, label %2834

2834:                                             ; preds = %2822
  %2835 = and i64 %2831, 8589934560
  %2836 = sub i64 %2825, %2835
  br label %2837

2837:                                             ; preds = %2837, %2834
  %2838 = phi i64 [ 0, %2834 ], [ %2861, %2837 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2857, %2837 ]
  %2840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2858, %2837 ]
  %2841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2859, %2837 ]
  %2842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2834 ], [ %2860, %2837 ]
  %2843 = sub i64 %2825, %2838
  %2844 = getelementptr inbounds i32, ptr %9, i64 %2843
  %2845 = getelementptr inbounds i32, ptr %2844, i64 -7
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2844, i64 -15
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2844, i64 -23
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = getelementptr inbounds i32, ptr %2844, i64 -31
  %2855 = load <8 x i32>, ptr %2854, align 4, !tbaa !6
  %2856 = shufflevector <8 x i32> %2855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2857 = mul <8 x i32> %2847, %2839
  %2858 = mul <8 x i32> %2850, %2840
  %2859 = mul <8 x i32> %2853, %2841
  %2860 = mul <8 x i32> %2856, %2842
  %2861 = add nuw i64 %2838, 32
  %2862 = icmp eq i64 %2861, %2835
  br i1 %2862, label %2863, label %2837, !llvm.loop !675

2863:                                             ; preds = %2837
  %2864 = mul <8 x i32> %2858, %2857
  %2865 = mul <8 x i32> %2859, %2864
  %2866 = mul <8 x i32> %2860, %2865
  %2867 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2866)
  %2868 = icmp eq i64 %2831, %2835
  br i1 %2868, label %2881, label %2869

2869:                                             ; preds = %2822, %2863
  %2870 = phi i64 [ %2825, %2822 ], [ %2836, %2863 ]
  %2871 = phi i32 [ 1, %2822 ], [ %2867, %2863 ]
  br label %2872

2872:                                             ; preds = %2869, %2872
  %2873 = phi i64 [ %2878, %2872 ], [ %2870, %2869 ]
  %2874 = phi i32 [ %2877, %2872 ], [ %2871, %2869 ]
  %2875 = getelementptr inbounds i32, ptr %9, i64 %2873
  %2876 = load i32, ptr %2875, align 4, !tbaa !6
  %2877 = mul nsw i32 %2876, %2874
  %2878 = add nsw i64 %2873, -1
  %2879 = trunc i64 %2873 to i32
  %2880 = icmp sgt i32 %2879, 0
  br i1 %2880, label %2872, label %2881, !llvm.loop !676

2881:                                             ; preds = %2872, %2863
  %2882 = phi i32 [ %2867, %2863 ], [ %2877, %2872 ]
  %2883 = and i64 %2832, 4294967295
  %2884 = getelementptr inbounds i32, ptr %6, i64 %2883
  %2885 = load i32, ptr %2884, align 4, !tbaa !6
  %2886 = mul nsw i32 %2885, %2882
  %2887 = add nsw i32 %2886, %2826
  %2888 = icmp sgt i64 %2824, 2
  %2889 = add nsw i64 %2825, -1
  %2890 = add i32 %2823, 1
  br i1 %2888, label %2822, label %2891, !llvm.loop !677

2891:                                             ; preds = %2881, %2818
  %2892 = phi i32 [ %2821, %2818 ], [ %2887, %2881 ]
  %2893 = sext i32 %2892 to i64
  %2894 = getelementptr inbounds i32, ptr %2483, i64 %2893
  %2895 = load i32, ptr %2894, align 4, !tbaa !6
  %2896 = load i32, ptr %2485, align 4, !tbaa !6
  %2897 = mul i32 %2895, %2895
  %2898 = mul i32 %2897, %2897
  %2899 = add nsw i32 %2898, %2896
  store i32 %2899, ptr %2485, align 4, !tbaa !6
  %2900 = fadd fast double %2820, 1.000000e+00
  %2901 = add nuw nsw i32 %2819, 1
  br i1 %2812, label %2902, label %2949

2902:                                             ; preds = %2891
  %2903 = load i32, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %12, align 4, !tbaa !6
  %2905 = add nsw i32 %2904, -1
  %2906 = icmp slt i32 %2903, %2905
  br i1 %2906, label %2926, label %2907

2907:                                             ; preds = %2902
  %2908 = icmp eq i32 %2903, %2905
  br i1 %2908, label %2909, label %2942

2909:                                             ; preds = %2907
  store i32 0, ptr %4, align 4, !tbaa !6
  %2910 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2910, ptr %6, align 4, !tbaa !6
  br i1 %2817, label %2949, label %2911

2911:                                             ; preds = %2909, %2936
  %2912 = phi i64 [ %2940, %2936 ], [ 1, %2909 ]
  %2913 = getelementptr inbounds i32, ptr %4, i64 %2912
  %2914 = load i32, ptr %2913, align 4, !tbaa !6
  %2915 = getelementptr inbounds i32, ptr %12, i64 %2912
  %2916 = load i32, ptr %2915, align 4, !tbaa !6
  %2917 = add nsw i32 %2916, -1
  %2918 = icmp slt i32 %2914, %2917
  br i1 %2918, label %2919, label %2934

2919:                                             ; preds = %2911
  br i1 %2906, label %2926, label %2920

2920:                                             ; preds = %2919
  %2921 = getelementptr inbounds i32, ptr %7, i64 %2912
  %2922 = load i32, ptr %2921, align 4, !tbaa !6
  %2923 = getelementptr inbounds i32, ptr %6, i64 %2912
  %2924 = load i32, ptr %2923, align 4, !tbaa !6
  %2925 = add nsw i32 %2924, %2922
  store i32 %2925, ptr %2923, align 4, !tbaa !6
  br label %2944

2926:                                             ; preds = %2902, %2919
  %2927 = phi i32 [ %2914, %2919 ], [ %2903, %2902 ]
  %2928 = phi ptr [ %2913, %2919 ], [ %4, %2902 ]
  %2929 = phi i64 [ %2912, %2919 ], [ 0, %2902 ]
  %2930 = add nsw i32 %2927, 1
  store i32 %2930, ptr %2928, align 4, !tbaa !6
  %2931 = getelementptr inbounds i32, ptr %7, i64 %2929
  %2932 = load i32, ptr %2931, align 4, !tbaa !6
  %2933 = getelementptr inbounds i32, ptr %6, i64 %2929
  br label %2944

2934:                                             ; preds = %2911
  %2935 = icmp eq i32 %2914, %2917
  br i1 %2935, label %2936, label %2942

2936:                                             ; preds = %2934
  store i32 0, ptr %2913, align 4, !tbaa !6
  %2937 = getelementptr inbounds i32, ptr %8, i64 %2912
  %2938 = load i32, ptr %2937, align 4, !tbaa !6
  %2939 = getelementptr inbounds i32, ptr %6, i64 %2912
  store i32 %2938, ptr %2939, align 4, !tbaa !6
  %2940 = add nuw nsw i64 %2912, 1
  %2941 = icmp eq i64 %2940, %2815
  br i1 %2941, label %2949, label %2911, !llvm.loop !678

2942:                                             ; preds = %2907, %2934
  %2943 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2944:                                             ; preds = %2920, %2926
  %2945 = phi ptr [ %2933, %2926 ], [ %2913, %2920 ]
  %2946 = phi i32 [ %2932, %2926 ], [ 1, %2920 ]
  %2947 = load i32, ptr %2945, align 4, !tbaa !6
  %2948 = add nsw i32 %2947, %2946
  store i32 %2948, ptr %2945, align 4, !tbaa !6
  br label %2949

2949:                                             ; preds = %2936, %2944, %2909, %2891
  %2950 = icmp eq i32 %2901, %5
  br i1 %2950, label %5545, label %2818, !llvm.loop !679

2951:                                             ; preds = %2801, %3087
  %2952 = phi i32 [ 0, %2801 ], [ %3036, %3087 ]
  %2953 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2802, label %2954, label %3023

2954:                                             ; preds = %2951, %3013
  %2955 = phi i32 [ %3022, %3013 ], [ 0, %2951 ]
  %2956 = phi i64 [ %2964, %3013 ], [ %2806, %2951 ]
  %2957 = phi i64 [ %3021, %3013 ], [ %2805, %2951 ]
  %2958 = phi i32 [ %3019, %3013 ], [ %2953, %2951 ]
  %2959 = sub i32 %2804, %2955
  %2960 = tail call i32 @llvm.smin.i32(i32 %2959, i32 0)
  %2961 = sub i32 %2959, %2960
  %2962 = zext i32 %2961 to i64
  %2963 = add nuw nsw i64 %2962, 1
  %2964 = add nsw i64 %2956, -1
  %2965 = icmp ult i32 %2961, 31
  br i1 %2965, label %3001, label %2966

2966:                                             ; preds = %2954
  %2967 = and i64 %2963, 8589934560
  %2968 = sub i64 %2957, %2967
  br label %2969

2969:                                             ; preds = %2969, %2966
  %2970 = phi i64 [ 0, %2966 ], [ %2993, %2969 ]
  %2971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2989, %2969 ]
  %2972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2990, %2969 ]
  %2973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2991, %2969 ]
  %2974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2966 ], [ %2992, %2969 ]
  %2975 = sub i64 %2957, %2970
  %2976 = getelementptr inbounds i32, ptr %11, i64 %2975
  %2977 = getelementptr inbounds i32, ptr %2976, i64 -7
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !6
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = getelementptr inbounds i32, ptr %2976, i64 -15
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !6
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = getelementptr inbounds i32, ptr %2976, i64 -23
  %2984 = load <8 x i32>, ptr %2983, align 4, !tbaa !6
  %2985 = shufflevector <8 x i32> %2984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2986 = getelementptr inbounds i32, ptr %2976, i64 -31
  %2987 = load <8 x i32>, ptr %2986, align 4, !tbaa !6
  %2988 = shufflevector <8 x i32> %2987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2989 = mul <8 x i32> %2979, %2971
  %2990 = mul <8 x i32> %2982, %2972
  %2991 = mul <8 x i32> %2985, %2973
  %2992 = mul <8 x i32> %2988, %2974
  %2993 = add nuw i64 %2970, 32
  %2994 = icmp eq i64 %2993, %2967
  br i1 %2994, label %2995, label %2969, !llvm.loop !680

2995:                                             ; preds = %2969
  %2996 = mul <8 x i32> %2990, %2989
  %2997 = mul <8 x i32> %2991, %2996
  %2998 = mul <8 x i32> %2992, %2997
  %2999 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2998)
  %3000 = icmp eq i64 %2963, %2967
  br i1 %3000, label %3013, label %3001

3001:                                             ; preds = %2954, %2995
  %3002 = phi i64 [ %2957, %2954 ], [ %2968, %2995 ]
  %3003 = phi i32 [ 1, %2954 ], [ %2999, %2995 ]
  br label %3004

3004:                                             ; preds = %3001, %3004
  %3005 = phi i64 [ %3010, %3004 ], [ %3002, %3001 ]
  %3006 = phi i32 [ %3009, %3004 ], [ %3003, %3001 ]
  %3007 = getelementptr inbounds i32, ptr %11, i64 %3005
  %3008 = load i32, ptr %3007, align 4, !tbaa !6
  %3009 = mul nsw i32 %3008, %3006
  %3010 = add nsw i64 %3005, -1
  %3011 = trunc i64 %3005 to i32
  %3012 = icmp sgt i32 %3011, 0
  br i1 %3012, label %3004, label %3013, !llvm.loop !681

3013:                                             ; preds = %3004, %2995
  %3014 = phi i32 [ %2999, %2995 ], [ %3009, %3004 ]
  %3015 = and i64 %2964, 4294967295
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3015
  %3017 = load i32, ptr %3016, align 4, !tbaa !6
  %3018 = mul nsw i32 %3017, %3014
  %3019 = add nsw i32 %3018, %2958
  %3020 = icmp sgt i64 %2956, 2
  %3021 = add nsw i64 %2957, -1
  %3022 = add i32 %2955, 1
  br i1 %3020, label %2954, label %3023, !llvm.loop !682

3023:                                             ; preds = %3013, %2951
  %3024 = phi i32 [ %2953, %2951 ], [ %3019, %3013 ]
  %3025 = icmp slt i32 %3024, %5
  br i1 %3025, label %3028, label %3026

3026:                                             ; preds = %3023
  %3027 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3028:                                             ; preds = %3023
  %3029 = sext i32 %3024 to i64
  %3030 = getelementptr inbounds i32, ptr %2483, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = load i32, ptr %2485, align 4, !tbaa !6
  %3033 = mul i32 %3031, %3031
  %3034 = mul i32 %3033, %3033
  %3035 = add nsw i32 %3034, %3032
  store i32 %3035, ptr %2485, align 4, !tbaa !6
  %3036 = add nuw nsw i32 %2952, 1
  br i1 %2803, label %3037, label %3087

3037:                                             ; preds = %3028
  %3038 = load i32, ptr %4, align 4, !tbaa !6
  %3039 = load i32, ptr %12, align 4, !tbaa !6
  %3040 = add nsw i32 %3039, -1
  %3041 = icmp slt i32 %3038, %3040
  br i1 %3041, label %3064, label %3042

3042:                                             ; preds = %3037
  %3043 = icmp eq i32 %3038, %3040
  br i1 %3043, label %3044, label %3080

3044:                                             ; preds = %3042
  store i32 0, ptr %4, align 4, !tbaa !6
  %3045 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3045, ptr %6, align 4, !tbaa !6
  br i1 %2808, label %3087, label %3046

3046:                                             ; preds = %3044, %3074
  %3047 = phi i64 [ %3078, %3074 ], [ 1, %3044 ]
  %3048 = getelementptr inbounds i32, ptr %4, i64 %3047
  %3049 = load i32, ptr %3048, align 4, !tbaa !6
  %3050 = getelementptr inbounds i32, ptr %12, i64 %3047
  %3051 = load i32, ptr %3050, align 4, !tbaa !6
  %3052 = add nsw i32 %3051, -1
  %3053 = icmp slt i32 %3049, %3052
  br i1 %3053, label %3054, label %3072

3054:                                             ; preds = %3046
  br i1 %3041, label %3064, label %3055

3055:                                             ; preds = %3054
  %3056 = shl i64 %3047, 32
  %3057 = add i64 %3056, -4294967296
  %3058 = ashr exact i64 %3057, 32
  %3059 = getelementptr inbounds i32, ptr %7, i64 %3058
  %3060 = load i32, ptr %3059, align 4, !tbaa !6
  %3061 = getelementptr inbounds i32, ptr %6, i64 %3047
  %3062 = load i32, ptr %3061, align 4, !tbaa !6
  %3063 = add nsw i32 %3062, %3060
  store i32 %3063, ptr %3061, align 4, !tbaa !6
  br label %3082

3064:                                             ; preds = %3037, %3054
  %3065 = phi i32 [ %3049, %3054 ], [ %3038, %3037 ]
  %3066 = phi ptr [ %3048, %3054 ], [ %4, %3037 ]
  %3067 = phi i64 [ %3047, %3054 ], [ 0, %3037 ]
  %3068 = add nsw i32 %3065, 1
  store i32 %3068, ptr %3066, align 4, !tbaa !6
  %3069 = getelementptr inbounds i32, ptr %7, i64 %3067
  %3070 = load i32, ptr %3069, align 4, !tbaa !6
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3067
  br label %3082

3072:                                             ; preds = %3046
  %3073 = icmp eq i32 %3049, %3052
  br i1 %3073, label %3074, label %3080

3074:                                             ; preds = %3072
  store i32 0, ptr %3048, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %8, i64 %3047
  %3076 = load i32, ptr %3075, align 4, !tbaa !6
  %3077 = getelementptr inbounds i32, ptr %6, i64 %3047
  store i32 %3076, ptr %3077, align 4, !tbaa !6
  %3078 = add nuw nsw i64 %3047, 1
  %3079 = icmp eq i64 %3078, %2806
  br i1 %3079, label %3087, label %3046, !llvm.loop !683

3080:                                             ; preds = %3042, %3072
  %3081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3082:                                             ; preds = %3055, %3064
  %3083 = phi ptr [ %3071, %3064 ], [ %3048, %3055 ]
  %3084 = phi i32 [ %3070, %3064 ], [ 1, %3055 ]
  %3085 = load i32, ptr %3083, align 4, !tbaa !6
  %3086 = add nsw i32 %3085, %3084
  store i32 %3086, ptr %3083, align 4, !tbaa !6
  br label %3087

3087:                                             ; preds = %3074, %3082, %3044, %3028
  %3088 = icmp eq i32 %3036, %5
  br i1 %3088, label %5545, label %2951, !llvm.loop !684

3089:                                             ; preds = %2491
  %3090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3091:                                             ; preds = %18
  %3092 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3093 = load ptr, ptr %3092, align 8, !tbaa !10
  %3094 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3095 = load ptr, ptr %3094, align 8, !tbaa !10
  store i64 0, ptr %3095, align 8, !tbaa !121
  %3096 = icmp eq i32 %13, 0
  br i1 %3096, label %3097, label %3102

3097:                                             ; preds = %3091
  %3098 = load i32, ptr %3093, align 4, !tbaa !6
  %3099 = sext i32 %3098 to i64
  %3100 = mul nsw i64 %3099, %3099
  %3101 = mul i64 %3100, %3100
  store i64 %3101, ptr %3095, align 8, !tbaa !121
  br label %5545

3102:                                             ; preds = %3091
  switch i32 %1, label %3702 [
    i32 1, label %3103
    i32 0, label %3406
  ]

3103:                                             ; preds = %3102
  %3104 = getelementptr inbounds i32, ptr %3, i64 %19
  %3105 = load i32, ptr %3104, align 4, !tbaa !6
  %3106 = icmp eq i32 %3105, 0
  %3107 = icmp sgt i32 %5, 0
  br i1 %3106, label %3117, label %3108

3108:                                             ; preds = %3103
  br i1 %3107, label %3109, label %5545

3109:                                             ; preds = %3108
  %3110 = icmp sgt i32 %13, 1
  %3111 = icmp sgt i32 %13, 0
  %3112 = add i32 %13, -2
  %3113 = zext i32 %3112 to i64
  %3114 = zext i32 %13 to i64
  %3115 = add nuw i32 %5, 1
  %3116 = icmp eq i32 %13, 1
  br label %3265

3117:                                             ; preds = %3103
  br i1 %3107, label %3118, label %5545

3118:                                             ; preds = %3117
  %3119 = icmp sgt i32 %13, 1
  %3120 = icmp sgt i32 %13, 0
  %3121 = add i32 %13, -2
  %3122 = zext i32 %3121 to i64
  %3123 = zext i32 %13 to i64
  %3124 = add nuw i32 %5, 1
  %3125 = icmp eq i32 %13, 1
  br label %3126

3126:                                             ; preds = %3118, %3263
  %3127 = phi i64 [ 0, %3118 ], [ %3213, %3263 ]
  %3128 = phi i32 [ 0, %3118 ], [ %3215, %3263 ]
  %3129 = phi double [ 0.000000e+00, %3118 ], [ %3214, %3263 ]
  %3130 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3119, label %3131, label %3200

3131:                                             ; preds = %3126, %3190
  %3132 = phi i32 [ %3199, %3190 ], [ 0, %3126 ]
  %3133 = phi i64 [ %3141, %3190 ], [ %3123, %3126 ]
  %3134 = phi i64 [ %3198, %3190 ], [ %3122, %3126 ]
  %3135 = phi i32 [ %3196, %3190 ], [ %3130, %3126 ]
  %3136 = sub i32 %3121, %3132
  %3137 = tail call i32 @llvm.smin.i32(i32 %3136, i32 0)
  %3138 = sub i32 %3136, %3137
  %3139 = zext i32 %3138 to i64
  %3140 = add nuw nsw i64 %3139, 1
  %3141 = add nsw i64 %3133, -1
  %3142 = icmp ult i32 %3138, 31
  br i1 %3142, label %3178, label %3143

3143:                                             ; preds = %3131
  %3144 = and i64 %3140, 8589934560
  %3145 = sub i64 %3134, %3144
  br label %3146

3146:                                             ; preds = %3146, %3143
  %3147 = phi i64 [ 0, %3143 ], [ %3170, %3146 ]
  %3148 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3166, %3146 ]
  %3149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3167, %3146 ]
  %3150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3168, %3146 ]
  %3151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3143 ], [ %3169, %3146 ]
  %3152 = sub i64 %3134, %3147
  %3153 = getelementptr inbounds i32, ptr %9, i64 %3152
  %3154 = getelementptr inbounds i32, ptr %3153, i64 -7
  %3155 = load <8 x i32>, ptr %3154, align 4, !tbaa !6
  %3156 = shufflevector <8 x i32> %3155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3157 = getelementptr inbounds i32, ptr %3153, i64 -15
  %3158 = load <8 x i32>, ptr %3157, align 4, !tbaa !6
  %3159 = shufflevector <8 x i32> %3158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3160 = getelementptr inbounds i32, ptr %3153, i64 -23
  %3161 = load <8 x i32>, ptr %3160, align 4, !tbaa !6
  %3162 = shufflevector <8 x i32> %3161, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3163 = getelementptr inbounds i32, ptr %3153, i64 -31
  %3164 = load <8 x i32>, ptr %3163, align 4, !tbaa !6
  %3165 = shufflevector <8 x i32> %3164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3166 = mul <8 x i32> %3156, %3148
  %3167 = mul <8 x i32> %3159, %3149
  %3168 = mul <8 x i32> %3162, %3150
  %3169 = mul <8 x i32> %3165, %3151
  %3170 = add nuw i64 %3147, 32
  %3171 = icmp eq i64 %3170, %3144
  br i1 %3171, label %3172, label %3146, !llvm.loop !685

3172:                                             ; preds = %3146
  %3173 = mul <8 x i32> %3167, %3166
  %3174 = mul <8 x i32> %3168, %3173
  %3175 = mul <8 x i32> %3169, %3174
  %3176 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3175)
  %3177 = icmp eq i64 %3140, %3144
  br i1 %3177, label %3190, label %3178

3178:                                             ; preds = %3131, %3172
  %3179 = phi i64 [ %3134, %3131 ], [ %3145, %3172 ]
  %3180 = phi i32 [ 1, %3131 ], [ %3176, %3172 ]
  br label %3181

3181:                                             ; preds = %3178, %3181
  %3182 = phi i64 [ %3187, %3181 ], [ %3179, %3178 ]
  %3183 = phi i32 [ %3186, %3181 ], [ %3180, %3178 ]
  %3184 = getelementptr inbounds i32, ptr %9, i64 %3182
  %3185 = load i32, ptr %3184, align 4, !tbaa !6
  %3186 = mul nsw i32 %3185, %3183
  %3187 = add nsw i64 %3182, -1
  %3188 = trunc i64 %3182 to i32
  %3189 = icmp sgt i32 %3188, 0
  br i1 %3189, label %3181, label %3190, !llvm.loop !686

3190:                                             ; preds = %3181, %3172
  %3191 = phi i32 [ %3176, %3172 ], [ %3186, %3181 ]
  %3192 = and i64 %3141, 4294967295
  %3193 = getelementptr inbounds i32, ptr %6, i64 %3192
  %3194 = load i32, ptr %3193, align 4, !tbaa !6
  %3195 = mul nsw i32 %3194, %3191
  %3196 = add nsw i32 %3195, %3135
  %3197 = icmp sgt i64 %3133, 2
  %3198 = add nsw i64 %3134, -1
  %3199 = add i32 %3132, 1
  br i1 %3197, label %3131, label %3200, !llvm.loop !687

3200:                                             ; preds = %3190, %3126
  %3201 = phi i32 [ %3130, %3126 ], [ %3196, %3190 ]
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds double, ptr %2, i64 %3202
  %3204 = load double, ptr %3203, align 8, !tbaa !19
  %3205 = getelementptr inbounds i32, ptr %3093, i64 %3202
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = sitofp i64 %3127 to double
  %3208 = sitofp i32 %3206 to double
  %3209 = fmul fast double %3204, %3208
  %3210 = fmul fast double %3209, %3209
  %3211 = fmul fast double %3210, %3210
  %3212 = fadd fast double %3211, %3207
  %3213 = fptosi double %3212 to i64
  %3214 = fadd fast double %3204, %3129
  %3215 = add nuw nsw i32 %3128, 1
  br i1 %3120, label %3216, label %3263

3216:                                             ; preds = %3200
  %3217 = load i32, ptr %4, align 4, !tbaa !6
  %3218 = load i32, ptr %12, align 4, !tbaa !6
  %3219 = add nsw i32 %3218, -1
  %3220 = icmp slt i32 %3217, %3219
  br i1 %3220, label %3240, label %3221

3221:                                             ; preds = %3216
  %3222 = icmp eq i32 %3217, %3219
  br i1 %3222, label %3223, label %3256

3223:                                             ; preds = %3221
  store i32 0, ptr %4, align 4, !tbaa !6
  %3224 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3224, ptr %6, align 4, !tbaa !6
  br i1 %3125, label %3263, label %3225

3225:                                             ; preds = %3223, %3250
  %3226 = phi i64 [ %3254, %3250 ], [ 1, %3223 ]
  %3227 = getelementptr inbounds i32, ptr %4, i64 %3226
  %3228 = load i32, ptr %3227, align 4, !tbaa !6
  %3229 = getelementptr inbounds i32, ptr %12, i64 %3226
  %3230 = load i32, ptr %3229, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, -1
  %3232 = icmp slt i32 %3228, %3231
  br i1 %3232, label %3233, label %3248

3233:                                             ; preds = %3225
  br i1 %3220, label %3240, label %3234

3234:                                             ; preds = %3233
  %3235 = getelementptr inbounds i32, ptr %7, i64 %3226
  %3236 = load i32, ptr %3235, align 4, !tbaa !6
  %3237 = getelementptr inbounds i32, ptr %6, i64 %3226
  %3238 = load i32, ptr %3237, align 4, !tbaa !6
  %3239 = add nsw i32 %3238, %3236
  store i32 %3239, ptr %3237, align 4, !tbaa !6
  br label %3258

3240:                                             ; preds = %3216, %3233
  %3241 = phi i32 [ %3228, %3233 ], [ %3217, %3216 ]
  %3242 = phi ptr [ %3227, %3233 ], [ %4, %3216 ]
  %3243 = phi i64 [ %3226, %3233 ], [ 0, %3216 ]
  %3244 = add nsw i32 %3241, 1
  store i32 %3244, ptr %3242, align 4, !tbaa !6
  %3245 = getelementptr inbounds i32, ptr %7, i64 %3243
  %3246 = load i32, ptr %3245, align 4, !tbaa !6
  %3247 = getelementptr inbounds i32, ptr %6, i64 %3243
  br label %3258

3248:                                             ; preds = %3225
  %3249 = icmp eq i32 %3228, %3231
  br i1 %3249, label %3250, label %3256

3250:                                             ; preds = %3248
  store i32 0, ptr %3227, align 4, !tbaa !6
  %3251 = getelementptr inbounds i32, ptr %8, i64 %3226
  %3252 = load i32, ptr %3251, align 4, !tbaa !6
  %3253 = getelementptr inbounds i32, ptr %6, i64 %3226
  store i32 %3252, ptr %3253, align 4, !tbaa !6
  %3254 = add nuw nsw i64 %3226, 1
  %3255 = icmp eq i64 %3254, %3123
  br i1 %3255, label %3263, label %3225, !llvm.loop !688

3256:                                             ; preds = %3221, %3248
  store i64 %3213, ptr %3095, align 8, !tbaa !121
  %3257 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3258:                                             ; preds = %3234, %3240
  %3259 = phi ptr [ %3247, %3240 ], [ %3227, %3234 ]
  %3260 = phi i32 [ %3246, %3240 ], [ 1, %3234 ]
  %3261 = load i32, ptr %3259, align 4, !tbaa !6
  %3262 = add nsw i32 %3261, %3260
  store i32 %3262, ptr %3259, align 4, !tbaa !6
  br label %3263

3263:                                             ; preds = %3250, %3258, %3223, %3200
  %3264 = icmp eq i32 %3215, %5
  br i1 %3264, label %5539, label %3126, !llvm.loop !689

3265:                                             ; preds = %3109, %3404
  %3266 = phi i64 [ 0, %3109 ], [ %3352, %3404 ]
  %3267 = phi i32 [ 0, %3109 ], [ %3353, %3404 ]
  %3268 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3110, label %3269, label %3338

3269:                                             ; preds = %3265, %3328
  %3270 = phi i32 [ %3337, %3328 ], [ 0, %3265 ]
  %3271 = phi i64 [ %3279, %3328 ], [ %3114, %3265 ]
  %3272 = phi i64 [ %3336, %3328 ], [ %3113, %3265 ]
  %3273 = phi i32 [ %3334, %3328 ], [ %3268, %3265 ]
  %3274 = sub i32 %3112, %3270
  %3275 = tail call i32 @llvm.smin.i32(i32 %3274, i32 0)
  %3276 = sub i32 %3274, %3275
  %3277 = zext i32 %3276 to i64
  %3278 = add nuw nsw i64 %3277, 1
  %3279 = add nsw i64 %3271, -1
  %3280 = icmp ult i32 %3276, 31
  br i1 %3280, label %3316, label %3281

3281:                                             ; preds = %3269
  %3282 = and i64 %3278, 8589934560
  %3283 = sub i64 %3272, %3282
  br label %3284

3284:                                             ; preds = %3284, %3281
  %3285 = phi i64 [ 0, %3281 ], [ %3308, %3284 ]
  %3286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3304, %3284 ]
  %3287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3305, %3284 ]
  %3288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3306, %3284 ]
  %3289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3281 ], [ %3307, %3284 ]
  %3290 = sub i64 %3272, %3285
  %3291 = getelementptr inbounds i32, ptr %11, i64 %3290
  %3292 = getelementptr inbounds i32, ptr %3291, i64 -7
  %3293 = load <8 x i32>, ptr %3292, align 4, !tbaa !6
  %3294 = shufflevector <8 x i32> %3293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3295 = getelementptr inbounds i32, ptr %3291, i64 -15
  %3296 = load <8 x i32>, ptr %3295, align 4, !tbaa !6
  %3297 = shufflevector <8 x i32> %3296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3298 = getelementptr inbounds i32, ptr %3291, i64 -23
  %3299 = load <8 x i32>, ptr %3298, align 4, !tbaa !6
  %3300 = shufflevector <8 x i32> %3299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3301 = getelementptr inbounds i32, ptr %3291, i64 -31
  %3302 = load <8 x i32>, ptr %3301, align 4, !tbaa !6
  %3303 = shufflevector <8 x i32> %3302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3304 = mul <8 x i32> %3294, %3286
  %3305 = mul <8 x i32> %3297, %3287
  %3306 = mul <8 x i32> %3300, %3288
  %3307 = mul <8 x i32> %3303, %3289
  %3308 = add nuw i64 %3285, 32
  %3309 = icmp eq i64 %3308, %3282
  br i1 %3309, label %3310, label %3284, !llvm.loop !690

3310:                                             ; preds = %3284
  %3311 = mul <8 x i32> %3305, %3304
  %3312 = mul <8 x i32> %3306, %3311
  %3313 = mul <8 x i32> %3307, %3312
  %3314 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3313)
  %3315 = icmp eq i64 %3278, %3282
  br i1 %3315, label %3328, label %3316

3316:                                             ; preds = %3269, %3310
  %3317 = phi i64 [ %3272, %3269 ], [ %3283, %3310 ]
  %3318 = phi i32 [ 1, %3269 ], [ %3314, %3310 ]
  br label %3319

3319:                                             ; preds = %3316, %3319
  %3320 = phi i64 [ %3325, %3319 ], [ %3317, %3316 ]
  %3321 = phi i32 [ %3324, %3319 ], [ %3318, %3316 ]
  %3322 = getelementptr inbounds i32, ptr %11, i64 %3320
  %3323 = load i32, ptr %3322, align 4, !tbaa !6
  %3324 = mul nsw i32 %3323, %3321
  %3325 = add nsw i64 %3320, -1
  %3326 = trunc i64 %3320 to i32
  %3327 = icmp sgt i32 %3326, 0
  br i1 %3327, label %3319, label %3328, !llvm.loop !691

3328:                                             ; preds = %3319, %3310
  %3329 = phi i32 [ %3314, %3310 ], [ %3324, %3319 ]
  %3330 = and i64 %3279, 4294967295
  %3331 = getelementptr inbounds i32, ptr %6, i64 %3330
  %3332 = load i32, ptr %3331, align 4, !tbaa !6
  %3333 = mul nsw i32 %3332, %3329
  %3334 = add nsw i32 %3333, %3273
  %3335 = icmp sgt i64 %3271, 2
  %3336 = add nsw i64 %3272, -1
  %3337 = add i32 %3270, 1
  br i1 %3335, label %3269, label %3338, !llvm.loop !692

3338:                                             ; preds = %3328, %3265
  %3339 = phi i32 [ %3268, %3265 ], [ %3334, %3328 ]
  %3340 = icmp slt i32 %3339, %5
  br i1 %3340, label %3343, label %3341

3341:                                             ; preds = %3338
  %3342 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3343:                                             ; preds = %3338
  %3344 = sext i32 %3339 to i64
  %3345 = getelementptr inbounds i32, ptr %3093, i64 %3344
  %3346 = load i32, ptr %3345, align 4, !tbaa !6
  %3347 = sitofp i64 %3266 to double
  %3348 = sitofp i32 %3346 to double
  %3349 = fmul fast double %3348, %3348
  %3350 = fmul fast double %3349, %3349
  %3351 = fadd fast double %3350, %3347
  %3352 = fptosi double %3351 to i64
  store i64 %3352, ptr %3095, align 8, !tbaa !121
  %3353 = add nuw nsw i32 %3267, 1
  br i1 %3111, label %3354, label %3404

3354:                                             ; preds = %3343
  %3355 = load i32, ptr %4, align 4, !tbaa !6
  %3356 = load i32, ptr %12, align 4, !tbaa !6
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3355, %3357
  br i1 %3358, label %3381, label %3359

3359:                                             ; preds = %3354
  %3360 = icmp eq i32 %3355, %3357
  br i1 %3360, label %3361, label %3397

3361:                                             ; preds = %3359
  store i32 0, ptr %4, align 4, !tbaa !6
  %3362 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3362, ptr %6, align 4, !tbaa !6
  br i1 %3116, label %3404, label %3363

3363:                                             ; preds = %3361, %3391
  %3364 = phi i64 [ %3395, %3391 ], [ 1, %3361 ]
  %3365 = getelementptr inbounds i32, ptr %4, i64 %3364
  %3366 = load i32, ptr %3365, align 4, !tbaa !6
  %3367 = getelementptr inbounds i32, ptr %12, i64 %3364
  %3368 = load i32, ptr %3367, align 4, !tbaa !6
  %3369 = add nsw i32 %3368, -1
  %3370 = icmp slt i32 %3366, %3369
  br i1 %3370, label %3371, label %3389

3371:                                             ; preds = %3363
  br i1 %3358, label %3381, label %3372

3372:                                             ; preds = %3371
  %3373 = shl i64 %3364, 32
  %3374 = add i64 %3373, -4294967296
  %3375 = ashr exact i64 %3374, 32
  %3376 = getelementptr inbounds i32, ptr %7, i64 %3375
  %3377 = load i32, ptr %3376, align 4, !tbaa !6
  %3378 = getelementptr inbounds i32, ptr %6, i64 %3364
  %3379 = load i32, ptr %3378, align 4, !tbaa !6
  %3380 = add nsw i32 %3379, %3377
  store i32 %3380, ptr %3378, align 4, !tbaa !6
  br label %3399

3381:                                             ; preds = %3354, %3371
  %3382 = phi i32 [ %3366, %3371 ], [ %3355, %3354 ]
  %3383 = phi ptr [ %3365, %3371 ], [ %4, %3354 ]
  %3384 = phi i64 [ %3364, %3371 ], [ 0, %3354 ]
  %3385 = add nsw i32 %3382, 1
  store i32 %3385, ptr %3383, align 4, !tbaa !6
  %3386 = getelementptr inbounds i32, ptr %7, i64 %3384
  %3387 = load i32, ptr %3386, align 4, !tbaa !6
  %3388 = getelementptr inbounds i32, ptr %6, i64 %3384
  br label %3399

3389:                                             ; preds = %3363
  %3390 = icmp eq i32 %3366, %3369
  br i1 %3390, label %3391, label %3397

3391:                                             ; preds = %3389
  store i32 0, ptr %3365, align 4, !tbaa !6
  %3392 = getelementptr inbounds i32, ptr %8, i64 %3364
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3364
  store i32 %3393, ptr %3394, align 4, !tbaa !6
  %3395 = add nuw nsw i64 %3364, 1
  %3396 = icmp eq i64 %3395, %3114
  br i1 %3396, label %3404, label %3363, !llvm.loop !693

3397:                                             ; preds = %3359, %3389
  %3398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3399:                                             ; preds = %3372, %3381
  %3400 = phi ptr [ %3388, %3381 ], [ %3365, %3372 ]
  %3401 = phi i32 [ %3387, %3381 ], [ 1, %3372 ]
  %3402 = load i32, ptr %3400, align 4, !tbaa !6
  %3403 = add nsw i32 %3402, %3401
  store i32 %3403, ptr %3400, align 4, !tbaa !6
  br label %3404

3404:                                             ; preds = %3391, %3399, %3361, %3343
  %3405 = icmp eq i32 %3353, %5
  br i1 %3405, label %5545, label %3265, !llvm.loop !694

3406:                                             ; preds = %3102
  %3407 = getelementptr inbounds i32, ptr %3, i64 %19
  %3408 = load i32, ptr %3407, align 4, !tbaa !6
  %3409 = icmp eq i32 %3408, 0
  %3410 = icmp sgt i32 %5, 0
  br i1 %3409, label %3420, label %3411

3411:                                             ; preds = %3406
  br i1 %3410, label %3412, label %5545

3412:                                             ; preds = %3411
  %3413 = icmp sgt i32 %13, 1
  %3414 = icmp sgt i32 %13, 0
  %3415 = add i32 %13, -2
  %3416 = zext i32 %3415 to i64
  %3417 = zext i32 %13 to i64
  %3418 = add nuw i32 %5, 1
  %3419 = icmp eq i32 %13, 1
  br label %3563

3420:                                             ; preds = %3406
  br i1 %3410, label %3421, label %5545

3421:                                             ; preds = %3420
  %3422 = icmp sgt i32 %13, 1
  %3423 = icmp sgt i32 %13, 0
  %3424 = add i32 %13, -2
  %3425 = zext i32 %3424 to i64
  %3426 = zext i32 %13 to i64
  %3427 = add nuw i32 %5, 1
  %3428 = icmp eq i32 %13, 1
  br label %3429

3429:                                             ; preds = %3421, %3561
  %3430 = phi i64 [ 0, %3421 ], [ %3511, %3561 ]
  %3431 = phi i32 [ 0, %3421 ], [ %3513, %3561 ]
  %3432 = phi double [ 0.000000e+00, %3421 ], [ %3512, %3561 ]
  %3433 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3422, label %3434, label %3503

3434:                                             ; preds = %3429, %3493
  %3435 = phi i32 [ %3502, %3493 ], [ 0, %3429 ]
  %3436 = phi i64 [ %3444, %3493 ], [ %3426, %3429 ]
  %3437 = phi i64 [ %3501, %3493 ], [ %3425, %3429 ]
  %3438 = phi i32 [ %3499, %3493 ], [ %3433, %3429 ]
  %3439 = sub i32 %3424, %3435
  %3440 = tail call i32 @llvm.smin.i32(i32 %3439, i32 0)
  %3441 = sub i32 %3439, %3440
  %3442 = zext i32 %3441 to i64
  %3443 = add nuw nsw i64 %3442, 1
  %3444 = add nsw i64 %3436, -1
  %3445 = icmp ult i32 %3441, 31
  br i1 %3445, label %3481, label %3446

3446:                                             ; preds = %3434
  %3447 = and i64 %3443, 8589934560
  %3448 = sub i64 %3437, %3447
  br label %3449

3449:                                             ; preds = %3449, %3446
  %3450 = phi i64 [ 0, %3446 ], [ %3473, %3449 ]
  %3451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3469, %3449 ]
  %3452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3470, %3449 ]
  %3453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3471, %3449 ]
  %3454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3446 ], [ %3472, %3449 ]
  %3455 = sub i64 %3437, %3450
  %3456 = getelementptr inbounds i32, ptr %9, i64 %3455
  %3457 = getelementptr inbounds i32, ptr %3456, i64 -7
  %3458 = load <8 x i32>, ptr %3457, align 4, !tbaa !6
  %3459 = shufflevector <8 x i32> %3458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3460 = getelementptr inbounds i32, ptr %3456, i64 -15
  %3461 = load <8 x i32>, ptr %3460, align 4, !tbaa !6
  %3462 = shufflevector <8 x i32> %3461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3463 = getelementptr inbounds i32, ptr %3456, i64 -23
  %3464 = load <8 x i32>, ptr %3463, align 4, !tbaa !6
  %3465 = shufflevector <8 x i32> %3464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3466 = getelementptr inbounds i32, ptr %3456, i64 -31
  %3467 = load <8 x i32>, ptr %3466, align 4, !tbaa !6
  %3468 = shufflevector <8 x i32> %3467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3469 = mul <8 x i32> %3459, %3451
  %3470 = mul <8 x i32> %3462, %3452
  %3471 = mul <8 x i32> %3465, %3453
  %3472 = mul <8 x i32> %3468, %3454
  %3473 = add nuw i64 %3450, 32
  %3474 = icmp eq i64 %3473, %3447
  br i1 %3474, label %3475, label %3449, !llvm.loop !695

3475:                                             ; preds = %3449
  %3476 = mul <8 x i32> %3470, %3469
  %3477 = mul <8 x i32> %3471, %3476
  %3478 = mul <8 x i32> %3472, %3477
  %3479 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3478)
  %3480 = icmp eq i64 %3443, %3447
  br i1 %3480, label %3493, label %3481

3481:                                             ; preds = %3434, %3475
  %3482 = phi i64 [ %3437, %3434 ], [ %3448, %3475 ]
  %3483 = phi i32 [ 1, %3434 ], [ %3479, %3475 ]
  br label %3484

3484:                                             ; preds = %3481, %3484
  %3485 = phi i64 [ %3490, %3484 ], [ %3482, %3481 ]
  %3486 = phi i32 [ %3489, %3484 ], [ %3483, %3481 ]
  %3487 = getelementptr inbounds i32, ptr %9, i64 %3485
  %3488 = load i32, ptr %3487, align 4, !tbaa !6
  %3489 = mul nsw i32 %3488, %3486
  %3490 = add nsw i64 %3485, -1
  %3491 = trunc i64 %3485 to i32
  %3492 = icmp sgt i32 %3491, 0
  br i1 %3492, label %3484, label %3493, !llvm.loop !696

3493:                                             ; preds = %3484, %3475
  %3494 = phi i32 [ %3479, %3475 ], [ %3489, %3484 ]
  %3495 = and i64 %3444, 4294967295
  %3496 = getelementptr inbounds i32, ptr %6, i64 %3495
  %3497 = load i32, ptr %3496, align 4, !tbaa !6
  %3498 = mul nsw i32 %3497, %3494
  %3499 = add nsw i32 %3498, %3438
  %3500 = icmp sgt i64 %3436, 2
  %3501 = add nsw i64 %3437, -1
  %3502 = add i32 %3435, 1
  br i1 %3500, label %3434, label %3503, !llvm.loop !697

3503:                                             ; preds = %3493, %3429
  %3504 = phi i32 [ %3433, %3429 ], [ %3499, %3493 ]
  %3505 = sext i32 %3504 to i64
  %3506 = getelementptr inbounds i32, ptr %3093, i64 %3505
  %3507 = load i32, ptr %3506, align 4, !tbaa !6
  %3508 = sext i32 %3507 to i64
  %3509 = mul nsw i64 %3508, %3508
  %3510 = mul i64 %3509, %3509
  %3511 = add nsw i64 %3510, %3430
  %3512 = fadd fast double %3432, 1.000000e+00
  %3513 = add nuw nsw i32 %3431, 1
  br i1 %3423, label %3514, label %3561

3514:                                             ; preds = %3503
  %3515 = load i32, ptr %4, align 4, !tbaa !6
  %3516 = load i32, ptr %12, align 4, !tbaa !6
  %3517 = add nsw i32 %3516, -1
  %3518 = icmp slt i32 %3515, %3517
  br i1 %3518, label %3538, label %3519

3519:                                             ; preds = %3514
  %3520 = icmp eq i32 %3515, %3517
  br i1 %3520, label %3521, label %3554

3521:                                             ; preds = %3519
  store i32 0, ptr %4, align 4, !tbaa !6
  %3522 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3522, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3561, label %3523

3523:                                             ; preds = %3521, %3548
  %3524 = phi i64 [ %3552, %3548 ], [ 1, %3521 ]
  %3525 = getelementptr inbounds i32, ptr %4, i64 %3524
  %3526 = load i32, ptr %3525, align 4, !tbaa !6
  %3527 = getelementptr inbounds i32, ptr %12, i64 %3524
  %3528 = load i32, ptr %3527, align 4, !tbaa !6
  %3529 = add nsw i32 %3528, -1
  %3530 = icmp slt i32 %3526, %3529
  br i1 %3530, label %3531, label %3546

3531:                                             ; preds = %3523
  br i1 %3518, label %3538, label %3532

3532:                                             ; preds = %3531
  %3533 = getelementptr inbounds i32, ptr %7, i64 %3524
  %3534 = load i32, ptr %3533, align 4, !tbaa !6
  %3535 = getelementptr inbounds i32, ptr %6, i64 %3524
  %3536 = load i32, ptr %3535, align 4, !tbaa !6
  %3537 = add nsw i32 %3536, %3534
  store i32 %3537, ptr %3535, align 4, !tbaa !6
  br label %3556

3538:                                             ; preds = %3514, %3531
  %3539 = phi i32 [ %3526, %3531 ], [ %3515, %3514 ]
  %3540 = phi ptr [ %3525, %3531 ], [ %4, %3514 ]
  %3541 = phi i64 [ %3524, %3531 ], [ 0, %3514 ]
  %3542 = add nsw i32 %3539, 1
  store i32 %3542, ptr %3540, align 4, !tbaa !6
  %3543 = getelementptr inbounds i32, ptr %7, i64 %3541
  %3544 = load i32, ptr %3543, align 4, !tbaa !6
  %3545 = getelementptr inbounds i32, ptr %6, i64 %3541
  br label %3556

3546:                                             ; preds = %3523
  %3547 = icmp eq i32 %3526, %3529
  br i1 %3547, label %3548, label %3554

3548:                                             ; preds = %3546
  store i32 0, ptr %3525, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %8, i64 %3524
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3524
  store i32 %3550, ptr %3551, align 4, !tbaa !6
  %3552 = add nuw nsw i64 %3524, 1
  %3553 = icmp eq i64 %3552, %3426
  br i1 %3553, label %3561, label %3523, !llvm.loop !698

3554:                                             ; preds = %3519, %3546
  store i64 %3511, ptr %3095, align 8, !tbaa !121
  %3555 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3556:                                             ; preds = %3532, %3538
  %3557 = phi ptr [ %3545, %3538 ], [ %3525, %3532 ]
  %3558 = phi i32 [ %3544, %3538 ], [ 1, %3532 ]
  %3559 = load i32, ptr %3557, align 4, !tbaa !6
  %3560 = add nsw i32 %3559, %3558
  store i32 %3560, ptr %3557, align 4, !tbaa !6
  br label %3561

3561:                                             ; preds = %3548, %3556, %3521, %3503
  %3562 = icmp eq i32 %3513, %5
  br i1 %3562, label %5540, label %3429, !llvm.loop !699

3563:                                             ; preds = %3412, %3700
  %3564 = phi i64 [ 0, %3412 ], [ %3648, %3700 ]
  %3565 = phi i32 [ 0, %3412 ], [ %3649, %3700 ]
  %3566 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3413, label %3567, label %3636

3567:                                             ; preds = %3563, %3626
  %3568 = phi i32 [ %3635, %3626 ], [ 0, %3563 ]
  %3569 = phi i64 [ %3577, %3626 ], [ %3417, %3563 ]
  %3570 = phi i64 [ %3634, %3626 ], [ %3416, %3563 ]
  %3571 = phi i32 [ %3632, %3626 ], [ %3566, %3563 ]
  %3572 = sub i32 %3415, %3568
  %3573 = tail call i32 @llvm.smin.i32(i32 %3572, i32 0)
  %3574 = sub i32 %3572, %3573
  %3575 = zext i32 %3574 to i64
  %3576 = add nuw nsw i64 %3575, 1
  %3577 = add nsw i64 %3569, -1
  %3578 = icmp ult i32 %3574, 31
  br i1 %3578, label %3614, label %3579

3579:                                             ; preds = %3567
  %3580 = and i64 %3576, 8589934560
  %3581 = sub i64 %3570, %3580
  br label %3582

3582:                                             ; preds = %3582, %3579
  %3583 = phi i64 [ 0, %3579 ], [ %3606, %3582 ]
  %3584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3602, %3582 ]
  %3585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3603, %3582 ]
  %3586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3604, %3582 ]
  %3587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3579 ], [ %3605, %3582 ]
  %3588 = sub i64 %3570, %3583
  %3589 = getelementptr inbounds i32, ptr %11, i64 %3588
  %3590 = getelementptr inbounds i32, ptr %3589, i64 -7
  %3591 = load <8 x i32>, ptr %3590, align 4, !tbaa !6
  %3592 = shufflevector <8 x i32> %3591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3593 = getelementptr inbounds i32, ptr %3589, i64 -15
  %3594 = load <8 x i32>, ptr %3593, align 4, !tbaa !6
  %3595 = shufflevector <8 x i32> %3594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3596 = getelementptr inbounds i32, ptr %3589, i64 -23
  %3597 = load <8 x i32>, ptr %3596, align 4, !tbaa !6
  %3598 = shufflevector <8 x i32> %3597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3599 = getelementptr inbounds i32, ptr %3589, i64 -31
  %3600 = load <8 x i32>, ptr %3599, align 4, !tbaa !6
  %3601 = shufflevector <8 x i32> %3600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3602 = mul <8 x i32> %3592, %3584
  %3603 = mul <8 x i32> %3595, %3585
  %3604 = mul <8 x i32> %3598, %3586
  %3605 = mul <8 x i32> %3601, %3587
  %3606 = add nuw i64 %3583, 32
  %3607 = icmp eq i64 %3606, %3580
  br i1 %3607, label %3608, label %3582, !llvm.loop !700

3608:                                             ; preds = %3582
  %3609 = mul <8 x i32> %3603, %3602
  %3610 = mul <8 x i32> %3604, %3609
  %3611 = mul <8 x i32> %3605, %3610
  %3612 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3611)
  %3613 = icmp eq i64 %3576, %3580
  br i1 %3613, label %3626, label %3614

3614:                                             ; preds = %3567, %3608
  %3615 = phi i64 [ %3570, %3567 ], [ %3581, %3608 ]
  %3616 = phi i32 [ 1, %3567 ], [ %3612, %3608 ]
  br label %3617

3617:                                             ; preds = %3614, %3617
  %3618 = phi i64 [ %3623, %3617 ], [ %3615, %3614 ]
  %3619 = phi i32 [ %3622, %3617 ], [ %3616, %3614 ]
  %3620 = getelementptr inbounds i32, ptr %11, i64 %3618
  %3621 = load i32, ptr %3620, align 4, !tbaa !6
  %3622 = mul nsw i32 %3621, %3619
  %3623 = add nsw i64 %3618, -1
  %3624 = trunc i64 %3618 to i32
  %3625 = icmp sgt i32 %3624, 0
  br i1 %3625, label %3617, label %3626, !llvm.loop !701

3626:                                             ; preds = %3617, %3608
  %3627 = phi i32 [ %3612, %3608 ], [ %3622, %3617 ]
  %3628 = and i64 %3577, 4294967295
  %3629 = getelementptr inbounds i32, ptr %6, i64 %3628
  %3630 = load i32, ptr %3629, align 4, !tbaa !6
  %3631 = mul nsw i32 %3630, %3627
  %3632 = add nsw i32 %3631, %3571
  %3633 = icmp sgt i64 %3569, 2
  %3634 = add nsw i64 %3570, -1
  %3635 = add i32 %3568, 1
  br i1 %3633, label %3567, label %3636, !llvm.loop !702

3636:                                             ; preds = %3626, %3563
  %3637 = phi i32 [ %3566, %3563 ], [ %3632, %3626 ]
  %3638 = icmp slt i32 %3637, %5
  br i1 %3638, label %3641, label %3639

3639:                                             ; preds = %3636
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3641:                                             ; preds = %3636
  %3642 = sext i32 %3637 to i64
  %3643 = getelementptr inbounds i32, ptr %3093, i64 %3642
  %3644 = load i32, ptr %3643, align 4, !tbaa !6
  %3645 = sext i32 %3644 to i64
  %3646 = mul nsw i64 %3645, %3645
  %3647 = mul i64 %3646, %3646
  %3648 = add nsw i64 %3647, %3564
  store i64 %3648, ptr %3095, align 8, !tbaa !121
  %3649 = add nuw nsw i32 %3565, 1
  br i1 %3414, label %3650, label %3700

3650:                                             ; preds = %3641
  %3651 = load i32, ptr %4, align 4, !tbaa !6
  %3652 = load i32, ptr %12, align 4, !tbaa !6
  %3653 = add nsw i32 %3652, -1
  %3654 = icmp slt i32 %3651, %3653
  br i1 %3654, label %3677, label %3655

3655:                                             ; preds = %3650
  %3656 = icmp eq i32 %3651, %3653
  br i1 %3656, label %3657, label %3693

3657:                                             ; preds = %3655
  store i32 0, ptr %4, align 4, !tbaa !6
  %3658 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3658, ptr %6, align 4, !tbaa !6
  br i1 %3419, label %3700, label %3659

3659:                                             ; preds = %3657, %3687
  %3660 = phi i64 [ %3691, %3687 ], [ 1, %3657 ]
  %3661 = getelementptr inbounds i32, ptr %4, i64 %3660
  %3662 = load i32, ptr %3661, align 4, !tbaa !6
  %3663 = getelementptr inbounds i32, ptr %12, i64 %3660
  %3664 = load i32, ptr %3663, align 4, !tbaa !6
  %3665 = add nsw i32 %3664, -1
  %3666 = icmp slt i32 %3662, %3665
  br i1 %3666, label %3667, label %3685

3667:                                             ; preds = %3659
  br i1 %3654, label %3677, label %3668

3668:                                             ; preds = %3667
  %3669 = shl i64 %3660, 32
  %3670 = add i64 %3669, -4294967296
  %3671 = ashr exact i64 %3670, 32
  %3672 = getelementptr inbounds i32, ptr %7, i64 %3671
  %3673 = load i32, ptr %3672, align 4, !tbaa !6
  %3674 = getelementptr inbounds i32, ptr %6, i64 %3660
  %3675 = load i32, ptr %3674, align 4, !tbaa !6
  %3676 = add nsw i32 %3675, %3673
  store i32 %3676, ptr %3674, align 4, !tbaa !6
  br label %3695

3677:                                             ; preds = %3650, %3667
  %3678 = phi i32 [ %3662, %3667 ], [ %3651, %3650 ]
  %3679 = phi ptr [ %3661, %3667 ], [ %4, %3650 ]
  %3680 = phi i64 [ %3660, %3667 ], [ 0, %3650 ]
  %3681 = add nsw i32 %3678, 1
  store i32 %3681, ptr %3679, align 4, !tbaa !6
  %3682 = getelementptr inbounds i32, ptr %7, i64 %3680
  %3683 = load i32, ptr %3682, align 4, !tbaa !6
  %3684 = getelementptr inbounds i32, ptr %6, i64 %3680
  br label %3695

3685:                                             ; preds = %3659
  %3686 = icmp eq i32 %3662, %3665
  br i1 %3686, label %3687, label %3693

3687:                                             ; preds = %3685
  store i32 0, ptr %3661, align 4, !tbaa !6
  %3688 = getelementptr inbounds i32, ptr %8, i64 %3660
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3660
  store i32 %3689, ptr %3690, align 4, !tbaa !6
  %3691 = add nuw nsw i64 %3660, 1
  %3692 = icmp eq i64 %3691, %3417
  br i1 %3692, label %3700, label %3659, !llvm.loop !703

3693:                                             ; preds = %3655, %3685
  %3694 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3695:                                             ; preds = %3668, %3677
  %3696 = phi ptr [ %3684, %3677 ], [ %3661, %3668 ]
  %3697 = phi i32 [ %3683, %3677 ], [ 1, %3668 ]
  %3698 = load i32, ptr %3696, align 4, !tbaa !6
  %3699 = add nsw i32 %3698, %3697
  store i32 %3699, ptr %3696, align 4, !tbaa !6
  br label %3700

3700:                                             ; preds = %3687, %3695, %3657, %3641
  %3701 = icmp eq i32 %3649, %5
  br i1 %3701, label %5545, label %3563, !llvm.loop !704

3702:                                             ; preds = %3102
  %3703 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3704:                                             ; preds = %18
  %3705 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3706 = load ptr, ptr %3705, align 8, !tbaa !10
  %3707 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3708 = load ptr, ptr %3707, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3708, align 8, !tbaa !19
  %3709 = icmp eq i32 %13, 0
  br i1 %3709, label %3710, label %3715

3710:                                             ; preds = %3704
  %3711 = load i32, ptr %3706, align 4, !tbaa !6
  %3712 = sitofp i32 %3711 to double
  %3713 = fmul fast double %3712, %3712
  %3714 = fmul fast double %3713, %3713
  store double %3714, ptr %3708, align 8, !tbaa !19
  br label %5545

3715:                                             ; preds = %3704
  switch i32 %1, label %4311 [
    i32 1, label %3716
    i32 0, label %4015
  ]

3716:                                             ; preds = %3715
  %3717 = getelementptr inbounds i32, ptr %3, i64 %19
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = icmp eq i32 %3718, 0
  %3720 = icmp sgt i32 %5, 0
  br i1 %3719, label %3730, label %3721

3721:                                             ; preds = %3716
  br i1 %3720, label %3722, label %5545

3722:                                             ; preds = %3721
  %3723 = icmp sgt i32 %13, 1
  %3724 = icmp sgt i32 %13, 0
  %3725 = add i32 %13, -2
  %3726 = zext i32 %3725 to i64
  %3727 = zext i32 %13 to i64
  %3728 = add nuw i32 %5, 1
  %3729 = icmp eq i32 %13, 1
  br label %3876

3730:                                             ; preds = %3716
  br i1 %3720, label %3731, label %5545

3731:                                             ; preds = %3730
  %3732 = icmp sgt i32 %13, 1
  %3733 = icmp sgt i32 %13, 0
  %3734 = add i32 %13, -2
  %3735 = zext i32 %3734 to i64
  %3736 = zext i32 %13 to i64
  %3737 = add nuw i32 %5, 1
  %3738 = icmp eq i32 %13, 1
  br label %3739

3739:                                             ; preds = %3731, %3874
  %3740 = phi double [ 0.000000e+00, %3731 ], [ %3824, %3874 ]
  %3741 = phi i32 [ 0, %3731 ], [ %3826, %3874 ]
  %3742 = phi double [ 0.000000e+00, %3731 ], [ %3825, %3874 ]
  %3743 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3732, label %3744, label %3813

3744:                                             ; preds = %3739, %3803
  %3745 = phi i32 [ %3812, %3803 ], [ 0, %3739 ]
  %3746 = phi i64 [ %3754, %3803 ], [ %3736, %3739 ]
  %3747 = phi i64 [ %3811, %3803 ], [ %3735, %3739 ]
  %3748 = phi i32 [ %3809, %3803 ], [ %3743, %3739 ]
  %3749 = sub i32 %3734, %3745
  %3750 = tail call i32 @llvm.smin.i32(i32 %3749, i32 0)
  %3751 = sub i32 %3749, %3750
  %3752 = zext i32 %3751 to i64
  %3753 = add nuw nsw i64 %3752, 1
  %3754 = add nsw i64 %3746, -1
  %3755 = icmp ult i32 %3751, 31
  br i1 %3755, label %3791, label %3756

3756:                                             ; preds = %3744
  %3757 = and i64 %3753, 8589934560
  %3758 = sub i64 %3747, %3757
  br label %3759

3759:                                             ; preds = %3759, %3756
  %3760 = phi i64 [ 0, %3756 ], [ %3783, %3759 ]
  %3761 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3779, %3759 ]
  %3762 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3780, %3759 ]
  %3763 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3781, %3759 ]
  %3764 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3756 ], [ %3782, %3759 ]
  %3765 = sub i64 %3747, %3760
  %3766 = getelementptr inbounds i32, ptr %9, i64 %3765
  %3767 = getelementptr inbounds i32, ptr %3766, i64 -7
  %3768 = load <8 x i32>, ptr %3767, align 4, !tbaa !6
  %3769 = shufflevector <8 x i32> %3768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3770 = getelementptr inbounds i32, ptr %3766, i64 -15
  %3771 = load <8 x i32>, ptr %3770, align 4, !tbaa !6
  %3772 = shufflevector <8 x i32> %3771, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3773 = getelementptr inbounds i32, ptr %3766, i64 -23
  %3774 = load <8 x i32>, ptr %3773, align 4, !tbaa !6
  %3775 = shufflevector <8 x i32> %3774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3776 = getelementptr inbounds i32, ptr %3766, i64 -31
  %3777 = load <8 x i32>, ptr %3776, align 4, !tbaa !6
  %3778 = shufflevector <8 x i32> %3777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3779 = mul <8 x i32> %3769, %3761
  %3780 = mul <8 x i32> %3772, %3762
  %3781 = mul <8 x i32> %3775, %3763
  %3782 = mul <8 x i32> %3778, %3764
  %3783 = add nuw i64 %3760, 32
  %3784 = icmp eq i64 %3783, %3757
  br i1 %3784, label %3785, label %3759, !llvm.loop !705

3785:                                             ; preds = %3759
  %3786 = mul <8 x i32> %3780, %3779
  %3787 = mul <8 x i32> %3781, %3786
  %3788 = mul <8 x i32> %3782, %3787
  %3789 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3788)
  %3790 = icmp eq i64 %3753, %3757
  br i1 %3790, label %3803, label %3791

3791:                                             ; preds = %3744, %3785
  %3792 = phi i64 [ %3747, %3744 ], [ %3758, %3785 ]
  %3793 = phi i32 [ 1, %3744 ], [ %3789, %3785 ]
  br label %3794

3794:                                             ; preds = %3791, %3794
  %3795 = phi i64 [ %3800, %3794 ], [ %3792, %3791 ]
  %3796 = phi i32 [ %3799, %3794 ], [ %3793, %3791 ]
  %3797 = getelementptr inbounds i32, ptr %9, i64 %3795
  %3798 = load i32, ptr %3797, align 4, !tbaa !6
  %3799 = mul nsw i32 %3798, %3796
  %3800 = add nsw i64 %3795, -1
  %3801 = trunc i64 %3795 to i32
  %3802 = icmp sgt i32 %3801, 0
  br i1 %3802, label %3794, label %3803, !llvm.loop !706

3803:                                             ; preds = %3794, %3785
  %3804 = phi i32 [ %3789, %3785 ], [ %3799, %3794 ]
  %3805 = and i64 %3754, 4294967295
  %3806 = getelementptr inbounds i32, ptr %6, i64 %3805
  %3807 = load i32, ptr %3806, align 4, !tbaa !6
  %3808 = mul nsw i32 %3807, %3804
  %3809 = add nsw i32 %3808, %3748
  %3810 = icmp sgt i64 %3746, 2
  %3811 = add nsw i64 %3747, -1
  %3812 = add i32 %3745, 1
  br i1 %3810, label %3744, label %3813, !llvm.loop !707

3813:                                             ; preds = %3803, %3739
  %3814 = phi i32 [ %3743, %3739 ], [ %3809, %3803 ]
  %3815 = sext i32 %3814 to i64
  %3816 = getelementptr inbounds double, ptr %2, i64 %3815
  %3817 = load double, ptr %3816, align 8, !tbaa !19
  %3818 = getelementptr inbounds i32, ptr %3706, i64 %3815
  %3819 = load i32, ptr %3818, align 4, !tbaa !6
  %3820 = sitofp i32 %3819 to double
  %3821 = fmul fast double %3817, %3820
  %3822 = fmul fast double %3821, %3821
  %3823 = fmul fast double %3822, %3822
  %3824 = fadd fast double %3823, %3740
  store double %3824, ptr %3708, align 8, !tbaa !19
  %3825 = fadd fast double %3817, %3742
  %3826 = add nuw nsw i32 %3741, 1
  br i1 %3733, label %3827, label %3874

3827:                                             ; preds = %3813
  %3828 = load i32, ptr %4, align 4, !tbaa !6
  %3829 = load i32, ptr %12, align 4, !tbaa !6
  %3830 = add nsw i32 %3829, -1
  %3831 = icmp slt i32 %3828, %3830
  br i1 %3831, label %3851, label %3832

3832:                                             ; preds = %3827
  %3833 = icmp eq i32 %3828, %3830
  br i1 %3833, label %3834, label %3867

3834:                                             ; preds = %3832
  store i32 0, ptr %4, align 4, !tbaa !6
  %3835 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3835, ptr %6, align 4, !tbaa !6
  br i1 %3738, label %3874, label %3836

3836:                                             ; preds = %3834, %3861
  %3837 = phi i64 [ %3865, %3861 ], [ 1, %3834 ]
  %3838 = getelementptr inbounds i32, ptr %4, i64 %3837
  %3839 = load i32, ptr %3838, align 4, !tbaa !6
  %3840 = getelementptr inbounds i32, ptr %12, i64 %3837
  %3841 = load i32, ptr %3840, align 4, !tbaa !6
  %3842 = add nsw i32 %3841, -1
  %3843 = icmp slt i32 %3839, %3842
  br i1 %3843, label %3844, label %3859

3844:                                             ; preds = %3836
  br i1 %3831, label %3851, label %3845

3845:                                             ; preds = %3844
  %3846 = getelementptr inbounds i32, ptr %7, i64 %3837
  %3847 = load i32, ptr %3846, align 4, !tbaa !6
  %3848 = getelementptr inbounds i32, ptr %6, i64 %3837
  %3849 = load i32, ptr %3848, align 4, !tbaa !6
  %3850 = add nsw i32 %3849, %3847
  store i32 %3850, ptr %3848, align 4, !tbaa !6
  br label %3869

3851:                                             ; preds = %3827, %3844
  %3852 = phi i32 [ %3839, %3844 ], [ %3828, %3827 ]
  %3853 = phi ptr [ %3838, %3844 ], [ %4, %3827 ]
  %3854 = phi i64 [ %3837, %3844 ], [ 0, %3827 ]
  %3855 = add nsw i32 %3852, 1
  store i32 %3855, ptr %3853, align 4, !tbaa !6
  %3856 = getelementptr inbounds i32, ptr %7, i64 %3854
  %3857 = load i32, ptr %3856, align 4, !tbaa !6
  %3858 = getelementptr inbounds i32, ptr %6, i64 %3854
  br label %3869

3859:                                             ; preds = %3836
  %3860 = icmp eq i32 %3839, %3842
  br i1 %3860, label %3861, label %3867

3861:                                             ; preds = %3859
  store i32 0, ptr %3838, align 4, !tbaa !6
  %3862 = getelementptr inbounds i32, ptr %8, i64 %3837
  %3863 = load i32, ptr %3862, align 4, !tbaa !6
  %3864 = getelementptr inbounds i32, ptr %6, i64 %3837
  store i32 %3863, ptr %3864, align 4, !tbaa !6
  %3865 = add nuw nsw i64 %3837, 1
  %3866 = icmp eq i64 %3865, %3736
  br i1 %3866, label %3874, label %3836, !llvm.loop !708

3867:                                             ; preds = %3832, %3859
  %3868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3869:                                             ; preds = %3845, %3851
  %3870 = phi ptr [ %3858, %3851 ], [ %3838, %3845 ]
  %3871 = phi i32 [ %3857, %3851 ], [ 1, %3845 ]
  %3872 = load i32, ptr %3870, align 4, !tbaa !6
  %3873 = add nsw i32 %3872, %3871
  store i32 %3873, ptr %3870, align 4, !tbaa !6
  br label %3874

3874:                                             ; preds = %3861, %3869, %3834, %3813
  %3875 = icmp eq i32 %3826, %5
  br i1 %3875, label %5545, label %3739, !llvm.loop !709

3876:                                             ; preds = %3722, %4013
  %3877 = phi double [ 0.000000e+00, %3722 ], [ %3961, %4013 ]
  %3878 = phi i32 [ 0, %3722 ], [ %3962, %4013 ]
  %3879 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3723, label %3880, label %3949

3880:                                             ; preds = %3876, %3939
  %3881 = phi i32 [ %3948, %3939 ], [ 0, %3876 ]
  %3882 = phi i64 [ %3890, %3939 ], [ %3727, %3876 ]
  %3883 = phi i64 [ %3947, %3939 ], [ %3726, %3876 ]
  %3884 = phi i32 [ %3945, %3939 ], [ %3879, %3876 ]
  %3885 = sub i32 %3725, %3881
  %3886 = tail call i32 @llvm.smin.i32(i32 %3885, i32 0)
  %3887 = sub i32 %3885, %3886
  %3888 = zext i32 %3887 to i64
  %3889 = add nuw nsw i64 %3888, 1
  %3890 = add nsw i64 %3882, -1
  %3891 = icmp ult i32 %3887, 31
  br i1 %3891, label %3927, label %3892

3892:                                             ; preds = %3880
  %3893 = and i64 %3889, 8589934560
  %3894 = sub i64 %3883, %3893
  br label %3895

3895:                                             ; preds = %3895, %3892
  %3896 = phi i64 [ 0, %3892 ], [ %3919, %3895 ]
  %3897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3915, %3895 ]
  %3898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3916, %3895 ]
  %3899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3917, %3895 ]
  %3900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3892 ], [ %3918, %3895 ]
  %3901 = sub i64 %3883, %3896
  %3902 = getelementptr inbounds i32, ptr %11, i64 %3901
  %3903 = getelementptr inbounds i32, ptr %3902, i64 -7
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !6
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = getelementptr inbounds i32, ptr %3902, i64 -15
  %3907 = load <8 x i32>, ptr %3906, align 4, !tbaa !6
  %3908 = shufflevector <8 x i32> %3907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3909 = getelementptr inbounds i32, ptr %3902, i64 -23
  %3910 = load <8 x i32>, ptr %3909, align 4, !tbaa !6
  %3911 = shufflevector <8 x i32> %3910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3912 = getelementptr inbounds i32, ptr %3902, i64 -31
  %3913 = load <8 x i32>, ptr %3912, align 4, !tbaa !6
  %3914 = shufflevector <8 x i32> %3913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3915 = mul <8 x i32> %3905, %3897
  %3916 = mul <8 x i32> %3908, %3898
  %3917 = mul <8 x i32> %3911, %3899
  %3918 = mul <8 x i32> %3914, %3900
  %3919 = add nuw i64 %3896, 32
  %3920 = icmp eq i64 %3919, %3893
  br i1 %3920, label %3921, label %3895, !llvm.loop !710

3921:                                             ; preds = %3895
  %3922 = mul <8 x i32> %3916, %3915
  %3923 = mul <8 x i32> %3917, %3922
  %3924 = mul <8 x i32> %3918, %3923
  %3925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3924)
  %3926 = icmp eq i64 %3889, %3893
  br i1 %3926, label %3939, label %3927

3927:                                             ; preds = %3880, %3921
  %3928 = phi i64 [ %3883, %3880 ], [ %3894, %3921 ]
  %3929 = phi i32 [ 1, %3880 ], [ %3925, %3921 ]
  br label %3930

3930:                                             ; preds = %3927, %3930
  %3931 = phi i64 [ %3936, %3930 ], [ %3928, %3927 ]
  %3932 = phi i32 [ %3935, %3930 ], [ %3929, %3927 ]
  %3933 = getelementptr inbounds i32, ptr %11, i64 %3931
  %3934 = load i32, ptr %3933, align 4, !tbaa !6
  %3935 = mul nsw i32 %3934, %3932
  %3936 = add nsw i64 %3931, -1
  %3937 = trunc i64 %3931 to i32
  %3938 = icmp sgt i32 %3937, 0
  br i1 %3938, label %3930, label %3939, !llvm.loop !711

3939:                                             ; preds = %3930, %3921
  %3940 = phi i32 [ %3925, %3921 ], [ %3935, %3930 ]
  %3941 = and i64 %3890, 4294967295
  %3942 = getelementptr inbounds i32, ptr %6, i64 %3941
  %3943 = load i32, ptr %3942, align 4, !tbaa !6
  %3944 = mul nsw i32 %3943, %3940
  %3945 = add nsw i32 %3944, %3884
  %3946 = icmp sgt i64 %3882, 2
  %3947 = add nsw i64 %3883, -1
  %3948 = add i32 %3881, 1
  br i1 %3946, label %3880, label %3949, !llvm.loop !712

3949:                                             ; preds = %3939, %3876
  %3950 = phi i32 [ %3879, %3876 ], [ %3945, %3939 ]
  %3951 = icmp slt i32 %3950, %5
  br i1 %3951, label %3954, label %3952

3952:                                             ; preds = %3949
  %3953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3954:                                             ; preds = %3949
  %3955 = sext i32 %3950 to i64
  %3956 = getelementptr inbounds i32, ptr %3706, i64 %3955
  %3957 = load i32, ptr %3956, align 4, !tbaa !6
  %3958 = sitofp i32 %3957 to double
  %3959 = fmul fast double %3958, %3958
  %3960 = fmul fast double %3959, %3959
  %3961 = fadd fast double %3960, %3877
  store double %3961, ptr %3708, align 8, !tbaa !19
  %3962 = add nuw nsw i32 %3878, 1
  br i1 %3724, label %3963, label %4013

3963:                                             ; preds = %3954
  %3964 = load i32, ptr %4, align 4, !tbaa !6
  %3965 = load i32, ptr %12, align 4, !tbaa !6
  %3966 = add nsw i32 %3965, -1
  %3967 = icmp slt i32 %3964, %3966
  br i1 %3967, label %3990, label %3968

3968:                                             ; preds = %3963
  %3969 = icmp eq i32 %3964, %3966
  br i1 %3969, label %3970, label %4006

3970:                                             ; preds = %3968
  store i32 0, ptr %4, align 4, !tbaa !6
  %3971 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3971, ptr %6, align 4, !tbaa !6
  br i1 %3729, label %4013, label %3972

3972:                                             ; preds = %3970, %4000
  %3973 = phi i64 [ %4004, %4000 ], [ 1, %3970 ]
  %3974 = getelementptr inbounds i32, ptr %4, i64 %3973
  %3975 = load i32, ptr %3974, align 4, !tbaa !6
  %3976 = getelementptr inbounds i32, ptr %12, i64 %3973
  %3977 = load i32, ptr %3976, align 4, !tbaa !6
  %3978 = add nsw i32 %3977, -1
  %3979 = icmp slt i32 %3975, %3978
  br i1 %3979, label %3980, label %3998

3980:                                             ; preds = %3972
  br i1 %3967, label %3990, label %3981

3981:                                             ; preds = %3980
  %3982 = shl i64 %3973, 32
  %3983 = add i64 %3982, -4294967296
  %3984 = ashr exact i64 %3983, 32
  %3985 = getelementptr inbounds i32, ptr %7, i64 %3984
  %3986 = load i32, ptr %3985, align 4, !tbaa !6
  %3987 = getelementptr inbounds i32, ptr %6, i64 %3973
  %3988 = load i32, ptr %3987, align 4, !tbaa !6
  %3989 = add nsw i32 %3988, %3986
  store i32 %3989, ptr %3987, align 4, !tbaa !6
  br label %4008

3990:                                             ; preds = %3963, %3980
  %3991 = phi i32 [ %3975, %3980 ], [ %3964, %3963 ]
  %3992 = phi ptr [ %3974, %3980 ], [ %4, %3963 ]
  %3993 = phi i64 [ %3973, %3980 ], [ 0, %3963 ]
  %3994 = add nsw i32 %3991, 1
  store i32 %3994, ptr %3992, align 4, !tbaa !6
  %3995 = getelementptr inbounds i32, ptr %7, i64 %3993
  %3996 = load i32, ptr %3995, align 4, !tbaa !6
  %3997 = getelementptr inbounds i32, ptr %6, i64 %3993
  br label %4008

3998:                                             ; preds = %3972
  %3999 = icmp eq i32 %3975, %3978
  br i1 %3999, label %4000, label %4006

4000:                                             ; preds = %3998
  store i32 0, ptr %3974, align 4, !tbaa !6
  %4001 = getelementptr inbounds i32, ptr %8, i64 %3973
  %4002 = load i32, ptr %4001, align 4, !tbaa !6
  %4003 = getelementptr inbounds i32, ptr %6, i64 %3973
  store i32 %4002, ptr %4003, align 4, !tbaa !6
  %4004 = add nuw nsw i64 %3973, 1
  %4005 = icmp eq i64 %4004, %3727
  br i1 %4005, label %4013, label %3972, !llvm.loop !713

4006:                                             ; preds = %3968, %3998
  %4007 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4008:                                             ; preds = %3981, %3990
  %4009 = phi ptr [ %3997, %3990 ], [ %3974, %3981 ]
  %4010 = phi i32 [ %3996, %3990 ], [ 1, %3981 ]
  %4011 = load i32, ptr %4009, align 4, !tbaa !6
  %4012 = add nsw i32 %4011, %4010
  store i32 %4012, ptr %4009, align 4, !tbaa !6
  br label %4013

4013:                                             ; preds = %4000, %4008, %3970, %3954
  %4014 = icmp eq i32 %3962, %5
  br i1 %4014, label %5545, label %3876, !llvm.loop !714

4015:                                             ; preds = %3715
  %4016 = getelementptr inbounds i32, ptr %3, i64 %19
  %4017 = load i32, ptr %4016, align 4, !tbaa !6
  %4018 = icmp eq i32 %4017, 0
  %4019 = icmp sgt i32 %5, 0
  br i1 %4018, label %4029, label %4020

4020:                                             ; preds = %4015
  br i1 %4019, label %4021, label %5545

4021:                                             ; preds = %4020
  %4022 = icmp sgt i32 %13, 1
  %4023 = icmp sgt i32 %13, 0
  %4024 = add i32 %13, -2
  %4025 = zext i32 %4024 to i64
  %4026 = zext i32 %13 to i64
  %4027 = add nuw i32 %5, 1
  %4028 = icmp eq i32 %13, 1
  br label %4172

4029:                                             ; preds = %4015
  br i1 %4019, label %4030, label %5545

4030:                                             ; preds = %4029
  %4031 = icmp sgt i32 %13, 1
  %4032 = icmp sgt i32 %13, 0
  %4033 = add i32 %13, -2
  %4034 = zext i32 %4033 to i64
  %4035 = zext i32 %13 to i64
  %4036 = add nuw i32 %5, 1
  %4037 = icmp eq i32 %13, 1
  br label %4038

4038:                                             ; preds = %4030, %4170
  %4039 = phi double [ 0.000000e+00, %4030 ], [ %4120, %4170 ]
  %4040 = phi i32 [ 0, %4030 ], [ %4122, %4170 ]
  %4041 = phi double [ 0.000000e+00, %4030 ], [ %4121, %4170 ]
  %4042 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4031, label %4043, label %4112

4043:                                             ; preds = %4038, %4102
  %4044 = phi i32 [ %4111, %4102 ], [ 0, %4038 ]
  %4045 = phi i64 [ %4053, %4102 ], [ %4035, %4038 ]
  %4046 = phi i64 [ %4110, %4102 ], [ %4034, %4038 ]
  %4047 = phi i32 [ %4108, %4102 ], [ %4042, %4038 ]
  %4048 = sub i32 %4033, %4044
  %4049 = tail call i32 @llvm.smin.i32(i32 %4048, i32 0)
  %4050 = sub i32 %4048, %4049
  %4051 = zext i32 %4050 to i64
  %4052 = add nuw nsw i64 %4051, 1
  %4053 = add nsw i64 %4045, -1
  %4054 = icmp ult i32 %4050, 31
  br i1 %4054, label %4090, label %4055

4055:                                             ; preds = %4043
  %4056 = and i64 %4052, 8589934560
  %4057 = sub i64 %4046, %4056
  br label %4058

4058:                                             ; preds = %4058, %4055
  %4059 = phi i64 [ 0, %4055 ], [ %4082, %4058 ]
  %4060 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4078, %4058 ]
  %4061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4079, %4058 ]
  %4062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4080, %4058 ]
  %4063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4055 ], [ %4081, %4058 ]
  %4064 = sub i64 %4046, %4059
  %4065 = getelementptr inbounds i32, ptr %9, i64 %4064
  %4066 = getelementptr inbounds i32, ptr %4065, i64 -7
  %4067 = load <8 x i32>, ptr %4066, align 4, !tbaa !6
  %4068 = shufflevector <8 x i32> %4067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4069 = getelementptr inbounds i32, ptr %4065, i64 -15
  %4070 = load <8 x i32>, ptr %4069, align 4, !tbaa !6
  %4071 = shufflevector <8 x i32> %4070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4072 = getelementptr inbounds i32, ptr %4065, i64 -23
  %4073 = load <8 x i32>, ptr %4072, align 4, !tbaa !6
  %4074 = shufflevector <8 x i32> %4073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4075 = getelementptr inbounds i32, ptr %4065, i64 -31
  %4076 = load <8 x i32>, ptr %4075, align 4, !tbaa !6
  %4077 = shufflevector <8 x i32> %4076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4078 = mul <8 x i32> %4068, %4060
  %4079 = mul <8 x i32> %4071, %4061
  %4080 = mul <8 x i32> %4074, %4062
  %4081 = mul <8 x i32> %4077, %4063
  %4082 = add nuw i64 %4059, 32
  %4083 = icmp eq i64 %4082, %4056
  br i1 %4083, label %4084, label %4058, !llvm.loop !715

4084:                                             ; preds = %4058
  %4085 = mul <8 x i32> %4079, %4078
  %4086 = mul <8 x i32> %4080, %4085
  %4087 = mul <8 x i32> %4081, %4086
  %4088 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4087)
  %4089 = icmp eq i64 %4052, %4056
  br i1 %4089, label %4102, label %4090

4090:                                             ; preds = %4043, %4084
  %4091 = phi i64 [ %4046, %4043 ], [ %4057, %4084 ]
  %4092 = phi i32 [ 1, %4043 ], [ %4088, %4084 ]
  br label %4093

4093:                                             ; preds = %4090, %4093
  %4094 = phi i64 [ %4099, %4093 ], [ %4091, %4090 ]
  %4095 = phi i32 [ %4098, %4093 ], [ %4092, %4090 ]
  %4096 = getelementptr inbounds i32, ptr %9, i64 %4094
  %4097 = load i32, ptr %4096, align 4, !tbaa !6
  %4098 = mul nsw i32 %4097, %4095
  %4099 = add nsw i64 %4094, -1
  %4100 = trunc i64 %4094 to i32
  %4101 = icmp sgt i32 %4100, 0
  br i1 %4101, label %4093, label %4102, !llvm.loop !716

4102:                                             ; preds = %4093, %4084
  %4103 = phi i32 [ %4088, %4084 ], [ %4098, %4093 ]
  %4104 = and i64 %4053, 4294967295
  %4105 = getelementptr inbounds i32, ptr %6, i64 %4104
  %4106 = load i32, ptr %4105, align 4, !tbaa !6
  %4107 = mul nsw i32 %4106, %4103
  %4108 = add nsw i32 %4107, %4047
  %4109 = icmp sgt i64 %4045, 2
  %4110 = add nsw i64 %4046, -1
  %4111 = add i32 %4044, 1
  br i1 %4109, label %4043, label %4112, !llvm.loop !717

4112:                                             ; preds = %4102, %4038
  %4113 = phi i32 [ %4042, %4038 ], [ %4108, %4102 ]
  %4114 = sext i32 %4113 to i64
  %4115 = getelementptr inbounds i32, ptr %3706, i64 %4114
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = sitofp i32 %4116 to double
  %4118 = fmul fast double %4117, %4117
  %4119 = fmul fast double %4118, %4118
  %4120 = fadd fast double %4119, %4039
  %4121 = fadd fast double %4041, 1.000000e+00
  %4122 = add nuw nsw i32 %4040, 1
  br i1 %4032, label %4123, label %4170

4123:                                             ; preds = %4112
  %4124 = load i32, ptr %4, align 4, !tbaa !6
  %4125 = load i32, ptr %12, align 4, !tbaa !6
  %4126 = add nsw i32 %4125, -1
  %4127 = icmp slt i32 %4124, %4126
  br i1 %4127, label %4147, label %4128

4128:                                             ; preds = %4123
  %4129 = icmp eq i32 %4124, %4126
  br i1 %4129, label %4130, label %4163

4130:                                             ; preds = %4128
  store i32 0, ptr %4, align 4, !tbaa !6
  %4131 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4131, ptr %6, align 4, !tbaa !6
  br i1 %4037, label %4170, label %4132

4132:                                             ; preds = %4130, %4157
  %4133 = phi i64 [ %4161, %4157 ], [ 1, %4130 ]
  %4134 = getelementptr inbounds i32, ptr %4, i64 %4133
  %4135 = load i32, ptr %4134, align 4, !tbaa !6
  %4136 = getelementptr inbounds i32, ptr %12, i64 %4133
  %4137 = load i32, ptr %4136, align 4, !tbaa !6
  %4138 = add nsw i32 %4137, -1
  %4139 = icmp slt i32 %4135, %4138
  br i1 %4139, label %4140, label %4155

4140:                                             ; preds = %4132
  br i1 %4127, label %4147, label %4141

4141:                                             ; preds = %4140
  %4142 = getelementptr inbounds i32, ptr %7, i64 %4133
  %4143 = load i32, ptr %4142, align 4, !tbaa !6
  %4144 = getelementptr inbounds i32, ptr %6, i64 %4133
  %4145 = load i32, ptr %4144, align 4, !tbaa !6
  %4146 = add nsw i32 %4145, %4143
  store i32 %4146, ptr %4144, align 4, !tbaa !6
  br label %4165

4147:                                             ; preds = %4123, %4140
  %4148 = phi i32 [ %4135, %4140 ], [ %4124, %4123 ]
  %4149 = phi ptr [ %4134, %4140 ], [ %4, %4123 ]
  %4150 = phi i64 [ %4133, %4140 ], [ 0, %4123 ]
  %4151 = add nsw i32 %4148, 1
  store i32 %4151, ptr %4149, align 4, !tbaa !6
  %4152 = getelementptr inbounds i32, ptr %7, i64 %4150
  %4153 = load i32, ptr %4152, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %6, i64 %4150
  br label %4165

4155:                                             ; preds = %4132
  %4156 = icmp eq i32 %4135, %4138
  br i1 %4156, label %4157, label %4163

4157:                                             ; preds = %4155
  store i32 0, ptr %4134, align 4, !tbaa !6
  %4158 = getelementptr inbounds i32, ptr %8, i64 %4133
  %4159 = load i32, ptr %4158, align 4, !tbaa !6
  %4160 = getelementptr inbounds i32, ptr %6, i64 %4133
  store i32 %4159, ptr %4160, align 4, !tbaa !6
  %4161 = add nuw nsw i64 %4133, 1
  %4162 = icmp eq i64 %4161, %4035
  br i1 %4162, label %4170, label %4132, !llvm.loop !718

4163:                                             ; preds = %4128, %4155
  store double %4120, ptr %3708, align 8, !tbaa !19
  %4164 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4165:                                             ; preds = %4141, %4147
  %4166 = phi ptr [ %4154, %4147 ], [ %4134, %4141 ]
  %4167 = phi i32 [ %4153, %4147 ], [ 1, %4141 ]
  %4168 = load i32, ptr %4166, align 4, !tbaa !6
  %4169 = add nsw i32 %4168, %4167
  store i32 %4169, ptr %4166, align 4, !tbaa !6
  br label %4170

4170:                                             ; preds = %4157, %4165, %4130, %4112
  %4171 = icmp eq i32 %4122, %5
  br i1 %4171, label %5541, label %4038, !llvm.loop !719

4172:                                             ; preds = %4021, %4309
  %4173 = phi double [ 0.000000e+00, %4021 ], [ %4257, %4309 ]
  %4174 = phi i32 [ 0, %4021 ], [ %4258, %4309 ]
  %4175 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4022, label %4176, label %4245

4176:                                             ; preds = %4172, %4235
  %4177 = phi i32 [ %4244, %4235 ], [ 0, %4172 ]
  %4178 = phi i64 [ %4186, %4235 ], [ %4026, %4172 ]
  %4179 = phi i64 [ %4243, %4235 ], [ %4025, %4172 ]
  %4180 = phi i32 [ %4241, %4235 ], [ %4175, %4172 ]
  %4181 = sub i32 %4024, %4177
  %4182 = tail call i32 @llvm.smin.i32(i32 %4181, i32 0)
  %4183 = sub i32 %4181, %4182
  %4184 = zext i32 %4183 to i64
  %4185 = add nuw nsw i64 %4184, 1
  %4186 = add nsw i64 %4178, -1
  %4187 = icmp ult i32 %4183, 31
  br i1 %4187, label %4223, label %4188

4188:                                             ; preds = %4176
  %4189 = and i64 %4185, 8589934560
  %4190 = sub i64 %4179, %4189
  br label %4191

4191:                                             ; preds = %4191, %4188
  %4192 = phi i64 [ 0, %4188 ], [ %4215, %4191 ]
  %4193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4211, %4191 ]
  %4194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4212, %4191 ]
  %4195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4213, %4191 ]
  %4196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4188 ], [ %4214, %4191 ]
  %4197 = sub i64 %4179, %4192
  %4198 = getelementptr inbounds i32, ptr %11, i64 %4197
  %4199 = getelementptr inbounds i32, ptr %4198, i64 -7
  %4200 = load <8 x i32>, ptr %4199, align 4, !tbaa !6
  %4201 = shufflevector <8 x i32> %4200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4202 = getelementptr inbounds i32, ptr %4198, i64 -15
  %4203 = load <8 x i32>, ptr %4202, align 4, !tbaa !6
  %4204 = shufflevector <8 x i32> %4203, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4205 = getelementptr inbounds i32, ptr %4198, i64 -23
  %4206 = load <8 x i32>, ptr %4205, align 4, !tbaa !6
  %4207 = shufflevector <8 x i32> %4206, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4208 = getelementptr inbounds i32, ptr %4198, i64 -31
  %4209 = load <8 x i32>, ptr %4208, align 4, !tbaa !6
  %4210 = shufflevector <8 x i32> %4209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4211 = mul <8 x i32> %4201, %4193
  %4212 = mul <8 x i32> %4204, %4194
  %4213 = mul <8 x i32> %4207, %4195
  %4214 = mul <8 x i32> %4210, %4196
  %4215 = add nuw i64 %4192, 32
  %4216 = icmp eq i64 %4215, %4189
  br i1 %4216, label %4217, label %4191, !llvm.loop !720

4217:                                             ; preds = %4191
  %4218 = mul <8 x i32> %4212, %4211
  %4219 = mul <8 x i32> %4213, %4218
  %4220 = mul <8 x i32> %4214, %4219
  %4221 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4220)
  %4222 = icmp eq i64 %4185, %4189
  br i1 %4222, label %4235, label %4223

4223:                                             ; preds = %4176, %4217
  %4224 = phi i64 [ %4179, %4176 ], [ %4190, %4217 ]
  %4225 = phi i32 [ 1, %4176 ], [ %4221, %4217 ]
  br label %4226

4226:                                             ; preds = %4223, %4226
  %4227 = phi i64 [ %4232, %4226 ], [ %4224, %4223 ]
  %4228 = phi i32 [ %4231, %4226 ], [ %4225, %4223 ]
  %4229 = getelementptr inbounds i32, ptr %11, i64 %4227
  %4230 = load i32, ptr %4229, align 4, !tbaa !6
  %4231 = mul nsw i32 %4230, %4228
  %4232 = add nsw i64 %4227, -1
  %4233 = trunc i64 %4227 to i32
  %4234 = icmp sgt i32 %4233, 0
  br i1 %4234, label %4226, label %4235, !llvm.loop !721

4235:                                             ; preds = %4226, %4217
  %4236 = phi i32 [ %4221, %4217 ], [ %4231, %4226 ]
  %4237 = and i64 %4186, 4294967295
  %4238 = getelementptr inbounds i32, ptr %6, i64 %4237
  %4239 = load i32, ptr %4238, align 4, !tbaa !6
  %4240 = mul nsw i32 %4239, %4236
  %4241 = add nsw i32 %4240, %4180
  %4242 = icmp sgt i64 %4178, 2
  %4243 = add nsw i64 %4179, -1
  %4244 = add i32 %4177, 1
  br i1 %4242, label %4176, label %4245, !llvm.loop !722

4245:                                             ; preds = %4235, %4172
  %4246 = phi i32 [ %4175, %4172 ], [ %4241, %4235 ]
  %4247 = icmp slt i32 %4246, %5
  br i1 %4247, label %4250, label %4248

4248:                                             ; preds = %4245
  %4249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4250:                                             ; preds = %4245
  %4251 = sext i32 %4246 to i64
  %4252 = getelementptr inbounds i32, ptr %3706, i64 %4251
  %4253 = load i32, ptr %4252, align 4, !tbaa !6
  %4254 = sitofp i32 %4253 to double
  %4255 = fmul fast double %4254, %4254
  %4256 = fmul fast double %4255, %4255
  %4257 = fadd fast double %4256, %4173
  store double %4257, ptr %3708, align 8, !tbaa !19
  %4258 = add nuw nsw i32 %4174, 1
  br i1 %4023, label %4259, label %4309

4259:                                             ; preds = %4250
  %4260 = load i32, ptr %4, align 4, !tbaa !6
  %4261 = load i32, ptr %12, align 4, !tbaa !6
  %4262 = add nsw i32 %4261, -1
  %4263 = icmp slt i32 %4260, %4262
  br i1 %4263, label %4286, label %4264

4264:                                             ; preds = %4259
  %4265 = icmp eq i32 %4260, %4262
  br i1 %4265, label %4266, label %4302

4266:                                             ; preds = %4264
  store i32 0, ptr %4, align 4, !tbaa !6
  %4267 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4267, ptr %6, align 4, !tbaa !6
  br i1 %4028, label %4309, label %4268

4268:                                             ; preds = %4266, %4296
  %4269 = phi i64 [ %4300, %4296 ], [ 1, %4266 ]
  %4270 = getelementptr inbounds i32, ptr %4, i64 %4269
  %4271 = load i32, ptr %4270, align 4, !tbaa !6
  %4272 = getelementptr inbounds i32, ptr %12, i64 %4269
  %4273 = load i32, ptr %4272, align 4, !tbaa !6
  %4274 = add nsw i32 %4273, -1
  %4275 = icmp slt i32 %4271, %4274
  br i1 %4275, label %4276, label %4294

4276:                                             ; preds = %4268
  br i1 %4263, label %4286, label %4277

4277:                                             ; preds = %4276
  %4278 = shl i64 %4269, 32
  %4279 = add i64 %4278, -4294967296
  %4280 = ashr exact i64 %4279, 32
  %4281 = getelementptr inbounds i32, ptr %7, i64 %4280
  %4282 = load i32, ptr %4281, align 4, !tbaa !6
  %4283 = getelementptr inbounds i32, ptr %6, i64 %4269
  %4284 = load i32, ptr %4283, align 4, !tbaa !6
  %4285 = add nsw i32 %4284, %4282
  store i32 %4285, ptr %4283, align 4, !tbaa !6
  br label %4304

4286:                                             ; preds = %4259, %4276
  %4287 = phi i32 [ %4271, %4276 ], [ %4260, %4259 ]
  %4288 = phi ptr [ %4270, %4276 ], [ %4, %4259 ]
  %4289 = phi i64 [ %4269, %4276 ], [ 0, %4259 ]
  %4290 = add nsw i32 %4287, 1
  store i32 %4290, ptr %4288, align 4, !tbaa !6
  %4291 = getelementptr inbounds i32, ptr %7, i64 %4289
  %4292 = load i32, ptr %4291, align 4, !tbaa !6
  %4293 = getelementptr inbounds i32, ptr %6, i64 %4289
  br label %4304

4294:                                             ; preds = %4268
  %4295 = icmp eq i32 %4271, %4274
  br i1 %4295, label %4296, label %4302

4296:                                             ; preds = %4294
  store i32 0, ptr %4270, align 4, !tbaa !6
  %4297 = getelementptr inbounds i32, ptr %8, i64 %4269
  %4298 = load i32, ptr %4297, align 4, !tbaa !6
  %4299 = getelementptr inbounds i32, ptr %6, i64 %4269
  store i32 %4298, ptr %4299, align 4, !tbaa !6
  %4300 = add nuw nsw i64 %4269, 1
  %4301 = icmp eq i64 %4300, %4026
  br i1 %4301, label %4309, label %4268, !llvm.loop !723

4302:                                             ; preds = %4264, %4294
  %4303 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4304:                                             ; preds = %4277, %4286
  %4305 = phi ptr [ %4293, %4286 ], [ %4270, %4277 ]
  %4306 = phi i32 [ %4292, %4286 ], [ 1, %4277 ]
  %4307 = load i32, ptr %4305, align 4, !tbaa !6
  %4308 = add nsw i32 %4307, %4306
  store i32 %4308, ptr %4305, align 4, !tbaa !6
  br label %4309

4309:                                             ; preds = %4296, %4304, %4266, %4250
  %4310 = icmp eq i32 %4258, %5
  br i1 %4310, label %5545, label %4172, !llvm.loop !724

4311:                                             ; preds = %3715
  %4312 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4313:                                             ; preds = %18
  %4314 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4315 = load ptr, ptr %4314, align 8, !tbaa !10
  %4316 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4317 = load ptr, ptr %4316, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4317, align 4, !tbaa !163
  %4318 = icmp eq i32 %13, 0
  br i1 %4318, label %4319, label %4324

4319:                                             ; preds = %4313
  %4320 = load i32, ptr %4315, align 4, !tbaa !6
  %4321 = sitofp i32 %4320 to float
  %4322 = fmul fast float %4321, %4321
  %4323 = fmul fast float %4322, %4322
  store float %4323, ptr %4317, align 4, !tbaa !163
  br label %5545

4324:                                             ; preds = %4313
  switch i32 %1, label %4926 [
    i32 1, label %4325
    i32 0, label %4630
  ]

4325:                                             ; preds = %4324
  %4326 = getelementptr inbounds i32, ptr %3, i64 %19
  %4327 = load i32, ptr %4326, align 4, !tbaa !6
  %4328 = icmp eq i32 %4327, 0
  %4329 = icmp sgt i32 %5, 0
  br i1 %4328, label %4339, label %4330

4330:                                             ; preds = %4325
  br i1 %4329, label %4331, label %5545

4331:                                             ; preds = %4330
  %4332 = icmp sgt i32 %13, 1
  %4333 = icmp sgt i32 %13, 0
  %4334 = add i32 %13, -2
  %4335 = zext i32 %4334 to i64
  %4336 = zext i32 %13 to i64
  %4337 = add nuw i32 %5, 1
  %4338 = icmp eq i32 %13, 1
  br label %4488

4339:                                             ; preds = %4325
  br i1 %4329, label %4340, label %5545

4340:                                             ; preds = %4339
  %4341 = icmp sgt i32 %13, 1
  %4342 = icmp sgt i32 %13, 0
  %4343 = add i32 %13, -2
  %4344 = zext i32 %4343 to i64
  %4345 = zext i32 %13 to i64
  %4346 = add nuw i32 %5, 1
  %4347 = icmp eq i32 %13, 1
  br label %4348

4348:                                             ; preds = %4340, %4486
  %4349 = phi float [ 0.000000e+00, %4340 ], [ %4436, %4486 ]
  %4350 = phi i32 [ 0, %4340 ], [ %4438, %4486 ]
  %4351 = phi double [ 0.000000e+00, %4340 ], [ %4437, %4486 ]
  %4352 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4341, label %4353, label %4422

4353:                                             ; preds = %4348, %4412
  %4354 = phi i32 [ %4421, %4412 ], [ 0, %4348 ]
  %4355 = phi i64 [ %4363, %4412 ], [ %4345, %4348 ]
  %4356 = phi i64 [ %4420, %4412 ], [ %4344, %4348 ]
  %4357 = phi i32 [ %4418, %4412 ], [ %4352, %4348 ]
  %4358 = sub i32 %4343, %4354
  %4359 = tail call i32 @llvm.smin.i32(i32 %4358, i32 0)
  %4360 = sub i32 %4358, %4359
  %4361 = zext i32 %4360 to i64
  %4362 = add nuw nsw i64 %4361, 1
  %4363 = add nsw i64 %4355, -1
  %4364 = icmp ult i32 %4360, 31
  br i1 %4364, label %4400, label %4365

4365:                                             ; preds = %4353
  %4366 = and i64 %4362, 8589934560
  %4367 = sub i64 %4356, %4366
  br label %4368

4368:                                             ; preds = %4368, %4365
  %4369 = phi i64 [ 0, %4365 ], [ %4392, %4368 ]
  %4370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4388, %4368 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4389, %4368 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4390, %4368 ]
  %4373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4365 ], [ %4391, %4368 ]
  %4374 = sub i64 %4356, %4369
  %4375 = getelementptr inbounds i32, ptr %9, i64 %4374
  %4376 = getelementptr inbounds i32, ptr %4375, i64 -7
  %4377 = load <8 x i32>, ptr %4376, align 4, !tbaa !6
  %4378 = shufflevector <8 x i32> %4377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4379 = getelementptr inbounds i32, ptr %4375, i64 -15
  %4380 = load <8 x i32>, ptr %4379, align 4, !tbaa !6
  %4381 = shufflevector <8 x i32> %4380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4382 = getelementptr inbounds i32, ptr %4375, i64 -23
  %4383 = load <8 x i32>, ptr %4382, align 4, !tbaa !6
  %4384 = shufflevector <8 x i32> %4383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4385 = getelementptr inbounds i32, ptr %4375, i64 -31
  %4386 = load <8 x i32>, ptr %4385, align 4, !tbaa !6
  %4387 = shufflevector <8 x i32> %4386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4388 = mul <8 x i32> %4378, %4370
  %4389 = mul <8 x i32> %4381, %4371
  %4390 = mul <8 x i32> %4384, %4372
  %4391 = mul <8 x i32> %4387, %4373
  %4392 = add nuw i64 %4369, 32
  %4393 = icmp eq i64 %4392, %4366
  br i1 %4393, label %4394, label %4368, !llvm.loop !725

4394:                                             ; preds = %4368
  %4395 = mul <8 x i32> %4389, %4388
  %4396 = mul <8 x i32> %4390, %4395
  %4397 = mul <8 x i32> %4391, %4396
  %4398 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4397)
  %4399 = icmp eq i64 %4362, %4366
  br i1 %4399, label %4412, label %4400

4400:                                             ; preds = %4353, %4394
  %4401 = phi i64 [ %4356, %4353 ], [ %4367, %4394 ]
  %4402 = phi i32 [ 1, %4353 ], [ %4398, %4394 ]
  br label %4403

4403:                                             ; preds = %4400, %4403
  %4404 = phi i64 [ %4409, %4403 ], [ %4401, %4400 ]
  %4405 = phi i32 [ %4408, %4403 ], [ %4402, %4400 ]
  %4406 = getelementptr inbounds i32, ptr %9, i64 %4404
  %4407 = load i32, ptr %4406, align 4, !tbaa !6
  %4408 = mul nsw i32 %4407, %4405
  %4409 = add nsw i64 %4404, -1
  %4410 = trunc i64 %4404 to i32
  %4411 = icmp sgt i32 %4410, 0
  br i1 %4411, label %4403, label %4412, !llvm.loop !726

4412:                                             ; preds = %4403, %4394
  %4413 = phi i32 [ %4398, %4394 ], [ %4408, %4403 ]
  %4414 = and i64 %4363, 4294967295
  %4415 = getelementptr inbounds i32, ptr %6, i64 %4414
  %4416 = load i32, ptr %4415, align 4, !tbaa !6
  %4417 = mul nsw i32 %4416, %4413
  %4418 = add nsw i32 %4417, %4357
  %4419 = icmp sgt i64 %4355, 2
  %4420 = add nsw i64 %4356, -1
  %4421 = add i32 %4354, 1
  br i1 %4419, label %4353, label %4422, !llvm.loop !727

4422:                                             ; preds = %4412, %4348
  %4423 = phi i32 [ %4352, %4348 ], [ %4418, %4412 ]
  %4424 = sext i32 %4423 to i64
  %4425 = getelementptr inbounds double, ptr %2, i64 %4424
  %4426 = load double, ptr %4425, align 8, !tbaa !19
  %4427 = getelementptr inbounds i32, ptr %4315, i64 %4424
  %4428 = load i32, ptr %4427, align 4, !tbaa !6
  %4429 = sitofp i32 %4428 to float
  %4430 = fpext float %4349 to double
  %4431 = fpext float %4429 to double
  %4432 = fmul fast double %4426, %4431
  %4433 = fmul fast double %4432, %4432
  %4434 = fmul fast double %4433, %4433
  %4435 = fadd fast double %4434, %4430
  %4436 = fptrunc double %4435 to float
  %4437 = fadd fast double %4426, %4351
  %4438 = add nuw nsw i32 %4350, 1
  br i1 %4342, label %4439, label %4486

4439:                                             ; preds = %4422
  %4440 = load i32, ptr %4, align 4, !tbaa !6
  %4441 = load i32, ptr %12, align 4, !tbaa !6
  %4442 = add nsw i32 %4441, -1
  %4443 = icmp slt i32 %4440, %4442
  br i1 %4443, label %4463, label %4444

4444:                                             ; preds = %4439
  %4445 = icmp eq i32 %4440, %4442
  br i1 %4445, label %4446, label %4479

4446:                                             ; preds = %4444
  store i32 0, ptr %4, align 4, !tbaa !6
  %4447 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4447, ptr %6, align 4, !tbaa !6
  br i1 %4347, label %4486, label %4448

4448:                                             ; preds = %4446, %4473
  %4449 = phi i64 [ %4477, %4473 ], [ 1, %4446 ]
  %4450 = getelementptr inbounds i32, ptr %4, i64 %4449
  %4451 = load i32, ptr %4450, align 4, !tbaa !6
  %4452 = getelementptr inbounds i32, ptr %12, i64 %4449
  %4453 = load i32, ptr %4452, align 4, !tbaa !6
  %4454 = add nsw i32 %4453, -1
  %4455 = icmp slt i32 %4451, %4454
  br i1 %4455, label %4456, label %4471

4456:                                             ; preds = %4448
  br i1 %4443, label %4463, label %4457

4457:                                             ; preds = %4456
  %4458 = getelementptr inbounds i32, ptr %7, i64 %4449
  %4459 = load i32, ptr %4458, align 4, !tbaa !6
  %4460 = getelementptr inbounds i32, ptr %6, i64 %4449
  %4461 = load i32, ptr %4460, align 4, !tbaa !6
  %4462 = add nsw i32 %4461, %4459
  store i32 %4462, ptr %4460, align 4, !tbaa !6
  br label %4481

4463:                                             ; preds = %4439, %4456
  %4464 = phi i32 [ %4451, %4456 ], [ %4440, %4439 ]
  %4465 = phi ptr [ %4450, %4456 ], [ %4, %4439 ]
  %4466 = phi i64 [ %4449, %4456 ], [ 0, %4439 ]
  %4467 = add nsw i32 %4464, 1
  store i32 %4467, ptr %4465, align 4, !tbaa !6
  %4468 = getelementptr inbounds i32, ptr %7, i64 %4466
  %4469 = load i32, ptr %4468, align 4, !tbaa !6
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4466
  br label %4481

4471:                                             ; preds = %4448
  %4472 = icmp eq i32 %4451, %4454
  br i1 %4472, label %4473, label %4479

4473:                                             ; preds = %4471
  store i32 0, ptr %4450, align 4, !tbaa !6
  %4474 = getelementptr inbounds i32, ptr %8, i64 %4449
  %4475 = load i32, ptr %4474, align 4, !tbaa !6
  %4476 = getelementptr inbounds i32, ptr %6, i64 %4449
  store i32 %4475, ptr %4476, align 4, !tbaa !6
  %4477 = add nuw nsw i64 %4449, 1
  %4478 = icmp eq i64 %4477, %4345
  br i1 %4478, label %4486, label %4448, !llvm.loop !728

4479:                                             ; preds = %4444, %4471
  store float %4436, ptr %4317, align 4, !tbaa !163
  %4480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4481:                                             ; preds = %4457, %4463
  %4482 = phi ptr [ %4470, %4463 ], [ %4450, %4457 ]
  %4483 = phi i32 [ %4469, %4463 ], [ 1, %4457 ]
  %4484 = load i32, ptr %4482, align 4, !tbaa !6
  %4485 = add nsw i32 %4484, %4483
  store i32 %4485, ptr %4482, align 4, !tbaa !6
  br label %4486

4486:                                             ; preds = %4473, %4481, %4446, %4422
  %4487 = icmp eq i32 %4438, %5
  br i1 %4487, label %5542, label %4348, !llvm.loop !729

4488:                                             ; preds = %4331, %4628
  %4489 = phi float [ 0.000000e+00, %4331 ], [ %4576, %4628 ]
  %4490 = phi i32 [ 0, %4331 ], [ %4577, %4628 ]
  %4491 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4332, label %4492, label %4561

4492:                                             ; preds = %4488, %4551
  %4493 = phi i32 [ %4560, %4551 ], [ 0, %4488 ]
  %4494 = phi i64 [ %4502, %4551 ], [ %4336, %4488 ]
  %4495 = phi i64 [ %4559, %4551 ], [ %4335, %4488 ]
  %4496 = phi i32 [ %4557, %4551 ], [ %4491, %4488 ]
  %4497 = sub i32 %4334, %4493
  %4498 = tail call i32 @llvm.smin.i32(i32 %4497, i32 0)
  %4499 = sub i32 %4497, %4498
  %4500 = zext i32 %4499 to i64
  %4501 = add nuw nsw i64 %4500, 1
  %4502 = add nsw i64 %4494, -1
  %4503 = icmp ult i32 %4499, 31
  br i1 %4503, label %4539, label %4504

4504:                                             ; preds = %4492
  %4505 = and i64 %4501, 8589934560
  %4506 = sub i64 %4495, %4505
  br label %4507

4507:                                             ; preds = %4507, %4504
  %4508 = phi i64 [ 0, %4504 ], [ %4531, %4507 ]
  %4509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4527, %4507 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4528, %4507 ]
  %4511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4529, %4507 ]
  %4512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4504 ], [ %4530, %4507 ]
  %4513 = sub i64 %4495, %4508
  %4514 = getelementptr inbounds i32, ptr %11, i64 %4513
  %4515 = getelementptr inbounds i32, ptr %4514, i64 -7
  %4516 = load <8 x i32>, ptr %4515, align 4, !tbaa !6
  %4517 = shufflevector <8 x i32> %4516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4518 = getelementptr inbounds i32, ptr %4514, i64 -15
  %4519 = load <8 x i32>, ptr %4518, align 4, !tbaa !6
  %4520 = shufflevector <8 x i32> %4519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4521 = getelementptr inbounds i32, ptr %4514, i64 -23
  %4522 = load <8 x i32>, ptr %4521, align 4, !tbaa !6
  %4523 = shufflevector <8 x i32> %4522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4524 = getelementptr inbounds i32, ptr %4514, i64 -31
  %4525 = load <8 x i32>, ptr %4524, align 4, !tbaa !6
  %4526 = shufflevector <8 x i32> %4525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4527 = mul <8 x i32> %4517, %4509
  %4528 = mul <8 x i32> %4520, %4510
  %4529 = mul <8 x i32> %4523, %4511
  %4530 = mul <8 x i32> %4526, %4512
  %4531 = add nuw i64 %4508, 32
  %4532 = icmp eq i64 %4531, %4505
  br i1 %4532, label %4533, label %4507, !llvm.loop !730

4533:                                             ; preds = %4507
  %4534 = mul <8 x i32> %4528, %4527
  %4535 = mul <8 x i32> %4529, %4534
  %4536 = mul <8 x i32> %4530, %4535
  %4537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4536)
  %4538 = icmp eq i64 %4501, %4505
  br i1 %4538, label %4551, label %4539

4539:                                             ; preds = %4492, %4533
  %4540 = phi i64 [ %4495, %4492 ], [ %4506, %4533 ]
  %4541 = phi i32 [ 1, %4492 ], [ %4537, %4533 ]
  br label %4542

4542:                                             ; preds = %4539, %4542
  %4543 = phi i64 [ %4548, %4542 ], [ %4540, %4539 ]
  %4544 = phi i32 [ %4547, %4542 ], [ %4541, %4539 ]
  %4545 = getelementptr inbounds i32, ptr %11, i64 %4543
  %4546 = load i32, ptr %4545, align 4, !tbaa !6
  %4547 = mul nsw i32 %4546, %4544
  %4548 = add nsw i64 %4543, -1
  %4549 = trunc i64 %4543 to i32
  %4550 = icmp sgt i32 %4549, 0
  br i1 %4550, label %4542, label %4551, !llvm.loop !731

4551:                                             ; preds = %4542, %4533
  %4552 = phi i32 [ %4537, %4533 ], [ %4547, %4542 ]
  %4553 = and i64 %4502, 4294967295
  %4554 = getelementptr inbounds i32, ptr %6, i64 %4553
  %4555 = load i32, ptr %4554, align 4, !tbaa !6
  %4556 = mul nsw i32 %4555, %4552
  %4557 = add nsw i32 %4556, %4496
  %4558 = icmp sgt i64 %4494, 2
  %4559 = add nsw i64 %4495, -1
  %4560 = add i32 %4493, 1
  br i1 %4558, label %4492, label %4561, !llvm.loop !732

4561:                                             ; preds = %4551, %4488
  %4562 = phi i32 [ %4491, %4488 ], [ %4557, %4551 ]
  %4563 = icmp slt i32 %4562, %5
  br i1 %4563, label %4566, label %4564

4564:                                             ; preds = %4561
  %4565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4566:                                             ; preds = %4561
  %4567 = sext i32 %4562 to i64
  %4568 = getelementptr inbounds i32, ptr %4315, i64 %4567
  %4569 = load i32, ptr %4568, align 4, !tbaa !6
  %4570 = sitofp i32 %4569 to float
  %4571 = fpext float %4489 to double
  %4572 = fpext float %4570 to double
  %4573 = fmul fast double %4572, %4572
  %4574 = fmul fast double %4573, %4573
  %4575 = fadd fast double %4574, %4571
  %4576 = fptrunc double %4575 to float
  store float %4576, ptr %4317, align 4, !tbaa !163
  %4577 = add nuw nsw i32 %4490, 1
  br i1 %4333, label %4578, label %4628

4578:                                             ; preds = %4566
  %4579 = load i32, ptr %4, align 4, !tbaa !6
  %4580 = load i32, ptr %12, align 4, !tbaa !6
  %4581 = add nsw i32 %4580, -1
  %4582 = icmp slt i32 %4579, %4581
  br i1 %4582, label %4605, label %4583

4583:                                             ; preds = %4578
  %4584 = icmp eq i32 %4579, %4581
  br i1 %4584, label %4585, label %4621

4585:                                             ; preds = %4583
  store i32 0, ptr %4, align 4, !tbaa !6
  %4586 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4586, ptr %6, align 4, !tbaa !6
  br i1 %4338, label %4628, label %4587

4587:                                             ; preds = %4585, %4615
  %4588 = phi i64 [ %4619, %4615 ], [ 1, %4585 ]
  %4589 = getelementptr inbounds i32, ptr %4, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %12, i64 %4588
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = add nsw i32 %4592, -1
  %4594 = icmp slt i32 %4590, %4593
  br i1 %4594, label %4595, label %4613

4595:                                             ; preds = %4587
  br i1 %4582, label %4605, label %4596

4596:                                             ; preds = %4595
  %4597 = shl i64 %4588, 32
  %4598 = add i64 %4597, -4294967296
  %4599 = ashr exact i64 %4598, 32
  %4600 = getelementptr inbounds i32, ptr %7, i64 %4599
  %4601 = load i32, ptr %4600, align 4, !tbaa !6
  %4602 = getelementptr inbounds i32, ptr %6, i64 %4588
  %4603 = load i32, ptr %4602, align 4, !tbaa !6
  %4604 = add nsw i32 %4603, %4601
  store i32 %4604, ptr %4602, align 4, !tbaa !6
  br label %4623

4605:                                             ; preds = %4578, %4595
  %4606 = phi i32 [ %4590, %4595 ], [ %4579, %4578 ]
  %4607 = phi ptr [ %4589, %4595 ], [ %4, %4578 ]
  %4608 = phi i64 [ %4588, %4595 ], [ 0, %4578 ]
  %4609 = add nsw i32 %4606, 1
  store i32 %4609, ptr %4607, align 4, !tbaa !6
  %4610 = getelementptr inbounds i32, ptr %7, i64 %4608
  %4611 = load i32, ptr %4610, align 4, !tbaa !6
  %4612 = getelementptr inbounds i32, ptr %6, i64 %4608
  br label %4623

4613:                                             ; preds = %4587
  %4614 = icmp eq i32 %4590, %4593
  br i1 %4614, label %4615, label %4621

4615:                                             ; preds = %4613
  store i32 0, ptr %4589, align 4, !tbaa !6
  %4616 = getelementptr inbounds i32, ptr %8, i64 %4588
  %4617 = load i32, ptr %4616, align 4, !tbaa !6
  %4618 = getelementptr inbounds i32, ptr %6, i64 %4588
  store i32 %4617, ptr %4618, align 4, !tbaa !6
  %4619 = add nuw nsw i64 %4588, 1
  %4620 = icmp eq i64 %4619, %4336
  br i1 %4620, label %4628, label %4587, !llvm.loop !733

4621:                                             ; preds = %4583, %4613
  %4622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4623:                                             ; preds = %4596, %4605
  %4624 = phi ptr [ %4612, %4605 ], [ %4589, %4596 ]
  %4625 = phi i32 [ %4611, %4605 ], [ 1, %4596 ]
  %4626 = load i32, ptr %4624, align 4, !tbaa !6
  %4627 = add nsw i32 %4626, %4625
  store i32 %4627, ptr %4624, align 4, !tbaa !6
  br label %4628

4628:                                             ; preds = %4615, %4623, %4585, %4566
  %4629 = icmp eq i32 %4577, %5
  br i1 %4629, label %5545, label %4488, !llvm.loop !734

4630:                                             ; preds = %4324
  %4631 = getelementptr inbounds i32, ptr %3, i64 %19
  %4632 = load i32, ptr %4631, align 4, !tbaa !6
  %4633 = icmp eq i32 %4632, 0
  %4634 = icmp sgt i32 %5, 0
  br i1 %4633, label %4644, label %4635

4635:                                             ; preds = %4630
  br i1 %4634, label %4636, label %5545

4636:                                             ; preds = %4635
  %4637 = icmp sgt i32 %13, 1
  %4638 = icmp sgt i32 %13, 0
  %4639 = add i32 %13, -2
  %4640 = zext i32 %4639 to i64
  %4641 = zext i32 %13 to i64
  %4642 = add nuw i32 %5, 1
  %4643 = icmp eq i32 %13, 1
  br label %4787

4644:                                             ; preds = %4630
  br i1 %4634, label %4645, label %5545

4645:                                             ; preds = %4644
  %4646 = icmp sgt i32 %13, 1
  %4647 = icmp sgt i32 %13, 0
  %4648 = add i32 %13, -2
  %4649 = zext i32 %4648 to i64
  %4650 = zext i32 %13 to i64
  %4651 = add nuw i32 %5, 1
  %4652 = icmp eq i32 %13, 1
  br label %4653

4653:                                             ; preds = %4645, %4785
  %4654 = phi float [ 0.000000e+00, %4645 ], [ %4735, %4785 ]
  %4655 = phi i32 [ 0, %4645 ], [ %4737, %4785 ]
  %4656 = phi double [ 0.000000e+00, %4645 ], [ %4736, %4785 ]
  %4657 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4646, label %4658, label %4727

4658:                                             ; preds = %4653, %4717
  %4659 = phi i32 [ %4726, %4717 ], [ 0, %4653 ]
  %4660 = phi i64 [ %4668, %4717 ], [ %4650, %4653 ]
  %4661 = phi i64 [ %4725, %4717 ], [ %4649, %4653 ]
  %4662 = phi i32 [ %4723, %4717 ], [ %4657, %4653 ]
  %4663 = sub i32 %4648, %4659
  %4664 = tail call i32 @llvm.smin.i32(i32 %4663, i32 0)
  %4665 = sub i32 %4663, %4664
  %4666 = zext i32 %4665 to i64
  %4667 = add nuw nsw i64 %4666, 1
  %4668 = add nsw i64 %4660, -1
  %4669 = icmp ult i32 %4665, 31
  br i1 %4669, label %4705, label %4670

4670:                                             ; preds = %4658
  %4671 = and i64 %4667, 8589934560
  %4672 = sub i64 %4661, %4671
  br label %4673

4673:                                             ; preds = %4673, %4670
  %4674 = phi i64 [ 0, %4670 ], [ %4697, %4673 ]
  %4675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4693, %4673 ]
  %4676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4694, %4673 ]
  %4677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4695, %4673 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4670 ], [ %4696, %4673 ]
  %4679 = sub i64 %4661, %4674
  %4680 = getelementptr inbounds i32, ptr %9, i64 %4679
  %4681 = getelementptr inbounds i32, ptr %4680, i64 -7
  %4682 = load <8 x i32>, ptr %4681, align 4, !tbaa !6
  %4683 = shufflevector <8 x i32> %4682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4684 = getelementptr inbounds i32, ptr %4680, i64 -15
  %4685 = load <8 x i32>, ptr %4684, align 4, !tbaa !6
  %4686 = shufflevector <8 x i32> %4685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4687 = getelementptr inbounds i32, ptr %4680, i64 -23
  %4688 = load <8 x i32>, ptr %4687, align 4, !tbaa !6
  %4689 = shufflevector <8 x i32> %4688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4690 = getelementptr inbounds i32, ptr %4680, i64 -31
  %4691 = load <8 x i32>, ptr %4690, align 4, !tbaa !6
  %4692 = shufflevector <8 x i32> %4691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4693 = mul <8 x i32> %4683, %4675
  %4694 = mul <8 x i32> %4686, %4676
  %4695 = mul <8 x i32> %4689, %4677
  %4696 = mul <8 x i32> %4692, %4678
  %4697 = add nuw i64 %4674, 32
  %4698 = icmp eq i64 %4697, %4671
  br i1 %4698, label %4699, label %4673, !llvm.loop !735

4699:                                             ; preds = %4673
  %4700 = mul <8 x i32> %4694, %4693
  %4701 = mul <8 x i32> %4695, %4700
  %4702 = mul <8 x i32> %4696, %4701
  %4703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4702)
  %4704 = icmp eq i64 %4667, %4671
  br i1 %4704, label %4717, label %4705

4705:                                             ; preds = %4658, %4699
  %4706 = phi i64 [ %4661, %4658 ], [ %4672, %4699 ]
  %4707 = phi i32 [ 1, %4658 ], [ %4703, %4699 ]
  br label %4708

4708:                                             ; preds = %4705, %4708
  %4709 = phi i64 [ %4714, %4708 ], [ %4706, %4705 ]
  %4710 = phi i32 [ %4713, %4708 ], [ %4707, %4705 ]
  %4711 = getelementptr inbounds i32, ptr %9, i64 %4709
  %4712 = load i32, ptr %4711, align 4, !tbaa !6
  %4713 = mul nsw i32 %4712, %4710
  %4714 = add nsw i64 %4709, -1
  %4715 = trunc i64 %4709 to i32
  %4716 = icmp sgt i32 %4715, 0
  br i1 %4716, label %4708, label %4717, !llvm.loop !736

4717:                                             ; preds = %4708, %4699
  %4718 = phi i32 [ %4703, %4699 ], [ %4713, %4708 ]
  %4719 = and i64 %4668, 4294967295
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4719
  %4721 = load i32, ptr %4720, align 4, !tbaa !6
  %4722 = mul nsw i32 %4721, %4718
  %4723 = add nsw i32 %4722, %4662
  %4724 = icmp sgt i64 %4660, 2
  %4725 = add nsw i64 %4661, -1
  %4726 = add i32 %4659, 1
  br i1 %4724, label %4658, label %4727, !llvm.loop !737

4727:                                             ; preds = %4717, %4653
  %4728 = phi i32 [ %4657, %4653 ], [ %4723, %4717 ]
  %4729 = sext i32 %4728 to i64
  %4730 = getelementptr inbounds i32, ptr %4315, i64 %4729
  %4731 = load i32, ptr %4730, align 4, !tbaa !6
  %4732 = sitofp i32 %4731 to float
  %4733 = fmul fast float %4732, %4732
  %4734 = fmul fast float %4733, %4733
  %4735 = fadd fast float %4734, %4654
  %4736 = fadd fast double %4656, 1.000000e+00
  %4737 = add nuw nsw i32 %4655, 1
  br i1 %4647, label %4738, label %4785

4738:                                             ; preds = %4727
  %4739 = load i32, ptr %4, align 4, !tbaa !6
  %4740 = load i32, ptr %12, align 4, !tbaa !6
  %4741 = add nsw i32 %4740, -1
  %4742 = icmp slt i32 %4739, %4741
  br i1 %4742, label %4762, label %4743

4743:                                             ; preds = %4738
  %4744 = icmp eq i32 %4739, %4741
  br i1 %4744, label %4745, label %4778

4745:                                             ; preds = %4743
  store i32 0, ptr %4, align 4, !tbaa !6
  %4746 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4746, ptr %6, align 4, !tbaa !6
  br i1 %4652, label %4785, label %4747

4747:                                             ; preds = %4745, %4772
  %4748 = phi i64 [ %4776, %4772 ], [ 1, %4745 ]
  %4749 = getelementptr inbounds i32, ptr %4, i64 %4748
  %4750 = load i32, ptr %4749, align 4, !tbaa !6
  %4751 = getelementptr inbounds i32, ptr %12, i64 %4748
  %4752 = load i32, ptr %4751, align 4, !tbaa !6
  %4753 = add nsw i32 %4752, -1
  %4754 = icmp slt i32 %4750, %4753
  br i1 %4754, label %4755, label %4770

4755:                                             ; preds = %4747
  br i1 %4742, label %4762, label %4756

4756:                                             ; preds = %4755
  %4757 = getelementptr inbounds i32, ptr %7, i64 %4748
  %4758 = load i32, ptr %4757, align 4, !tbaa !6
  %4759 = getelementptr inbounds i32, ptr %6, i64 %4748
  %4760 = load i32, ptr %4759, align 4, !tbaa !6
  %4761 = add nsw i32 %4760, %4758
  store i32 %4761, ptr %4759, align 4, !tbaa !6
  br label %4780

4762:                                             ; preds = %4738, %4755
  %4763 = phi i32 [ %4750, %4755 ], [ %4739, %4738 ]
  %4764 = phi ptr [ %4749, %4755 ], [ %4, %4738 ]
  %4765 = phi i64 [ %4748, %4755 ], [ 0, %4738 ]
  %4766 = add nsw i32 %4763, 1
  store i32 %4766, ptr %4764, align 4, !tbaa !6
  %4767 = getelementptr inbounds i32, ptr %7, i64 %4765
  %4768 = load i32, ptr %4767, align 4, !tbaa !6
  %4769 = getelementptr inbounds i32, ptr %6, i64 %4765
  br label %4780

4770:                                             ; preds = %4747
  %4771 = icmp eq i32 %4750, %4753
  br i1 %4771, label %4772, label %4778

4772:                                             ; preds = %4770
  store i32 0, ptr %4749, align 4, !tbaa !6
  %4773 = getelementptr inbounds i32, ptr %8, i64 %4748
  %4774 = load i32, ptr %4773, align 4, !tbaa !6
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4748
  store i32 %4774, ptr %4775, align 4, !tbaa !6
  %4776 = add nuw nsw i64 %4748, 1
  %4777 = icmp eq i64 %4776, %4650
  br i1 %4777, label %4785, label %4747, !llvm.loop !738

4778:                                             ; preds = %4743, %4770
  store float %4735, ptr %4317, align 4, !tbaa !163
  %4779 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4780:                                             ; preds = %4756, %4762
  %4781 = phi ptr [ %4769, %4762 ], [ %4749, %4756 ]
  %4782 = phi i32 [ %4768, %4762 ], [ 1, %4756 ]
  %4783 = load i32, ptr %4781, align 4, !tbaa !6
  %4784 = add nsw i32 %4783, %4782
  store i32 %4784, ptr %4781, align 4, !tbaa !6
  br label %4785

4785:                                             ; preds = %4772, %4780, %4745, %4727
  %4786 = icmp eq i32 %4737, %5
  br i1 %4786, label %5543, label %4653, !llvm.loop !739

4787:                                             ; preds = %4636, %4924
  %4788 = phi float [ 0.000000e+00, %4636 ], [ %4872, %4924 ]
  %4789 = phi i32 [ 0, %4636 ], [ %4873, %4924 ]
  %4790 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4637, label %4791, label %4860

4791:                                             ; preds = %4787, %4850
  %4792 = phi i32 [ %4859, %4850 ], [ 0, %4787 ]
  %4793 = phi i64 [ %4801, %4850 ], [ %4641, %4787 ]
  %4794 = phi i64 [ %4858, %4850 ], [ %4640, %4787 ]
  %4795 = phi i32 [ %4856, %4850 ], [ %4790, %4787 ]
  %4796 = sub i32 %4639, %4792
  %4797 = tail call i32 @llvm.smin.i32(i32 %4796, i32 0)
  %4798 = sub i32 %4796, %4797
  %4799 = zext i32 %4798 to i64
  %4800 = add nuw nsw i64 %4799, 1
  %4801 = add nsw i64 %4793, -1
  %4802 = icmp ult i32 %4798, 31
  br i1 %4802, label %4838, label %4803

4803:                                             ; preds = %4791
  %4804 = and i64 %4800, 8589934560
  %4805 = sub i64 %4794, %4804
  br label %4806

4806:                                             ; preds = %4806, %4803
  %4807 = phi i64 [ 0, %4803 ], [ %4830, %4806 ]
  %4808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4826, %4806 ]
  %4809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4827, %4806 ]
  %4810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4828, %4806 ]
  %4811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4803 ], [ %4829, %4806 ]
  %4812 = sub i64 %4794, %4807
  %4813 = getelementptr inbounds i32, ptr %11, i64 %4812
  %4814 = getelementptr inbounds i32, ptr %4813, i64 -7
  %4815 = load <8 x i32>, ptr %4814, align 4, !tbaa !6
  %4816 = shufflevector <8 x i32> %4815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4817 = getelementptr inbounds i32, ptr %4813, i64 -15
  %4818 = load <8 x i32>, ptr %4817, align 4, !tbaa !6
  %4819 = shufflevector <8 x i32> %4818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4820 = getelementptr inbounds i32, ptr %4813, i64 -23
  %4821 = load <8 x i32>, ptr %4820, align 4, !tbaa !6
  %4822 = shufflevector <8 x i32> %4821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4823 = getelementptr inbounds i32, ptr %4813, i64 -31
  %4824 = load <8 x i32>, ptr %4823, align 4, !tbaa !6
  %4825 = shufflevector <8 x i32> %4824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4826 = mul <8 x i32> %4816, %4808
  %4827 = mul <8 x i32> %4819, %4809
  %4828 = mul <8 x i32> %4822, %4810
  %4829 = mul <8 x i32> %4825, %4811
  %4830 = add nuw i64 %4807, 32
  %4831 = icmp eq i64 %4830, %4804
  br i1 %4831, label %4832, label %4806, !llvm.loop !740

4832:                                             ; preds = %4806
  %4833 = mul <8 x i32> %4827, %4826
  %4834 = mul <8 x i32> %4828, %4833
  %4835 = mul <8 x i32> %4829, %4834
  %4836 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4835)
  %4837 = icmp eq i64 %4800, %4804
  br i1 %4837, label %4850, label %4838

4838:                                             ; preds = %4791, %4832
  %4839 = phi i64 [ %4794, %4791 ], [ %4805, %4832 ]
  %4840 = phi i32 [ 1, %4791 ], [ %4836, %4832 ]
  br label %4841

4841:                                             ; preds = %4838, %4841
  %4842 = phi i64 [ %4847, %4841 ], [ %4839, %4838 ]
  %4843 = phi i32 [ %4846, %4841 ], [ %4840, %4838 ]
  %4844 = getelementptr inbounds i32, ptr %11, i64 %4842
  %4845 = load i32, ptr %4844, align 4, !tbaa !6
  %4846 = mul nsw i32 %4845, %4843
  %4847 = add nsw i64 %4842, -1
  %4848 = trunc i64 %4842 to i32
  %4849 = icmp sgt i32 %4848, 0
  br i1 %4849, label %4841, label %4850, !llvm.loop !741

4850:                                             ; preds = %4841, %4832
  %4851 = phi i32 [ %4836, %4832 ], [ %4846, %4841 ]
  %4852 = and i64 %4801, 4294967295
  %4853 = getelementptr inbounds i32, ptr %6, i64 %4852
  %4854 = load i32, ptr %4853, align 4, !tbaa !6
  %4855 = mul nsw i32 %4854, %4851
  %4856 = add nsw i32 %4855, %4795
  %4857 = icmp sgt i64 %4793, 2
  %4858 = add nsw i64 %4794, -1
  %4859 = add i32 %4792, 1
  br i1 %4857, label %4791, label %4860, !llvm.loop !742

4860:                                             ; preds = %4850, %4787
  %4861 = phi i32 [ %4790, %4787 ], [ %4856, %4850 ]
  %4862 = icmp slt i32 %4861, %5
  br i1 %4862, label %4865, label %4863

4863:                                             ; preds = %4860
  %4864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4865:                                             ; preds = %4860
  %4866 = sext i32 %4861 to i64
  %4867 = getelementptr inbounds i32, ptr %4315, i64 %4866
  %4868 = load i32, ptr %4867, align 4, !tbaa !6
  %4869 = sitofp i32 %4868 to float
  %4870 = fmul fast float %4869, %4869
  %4871 = fmul fast float %4870, %4870
  %4872 = fadd fast float %4871, %4788
  store float %4872, ptr %4317, align 4, !tbaa !163
  %4873 = add nuw nsw i32 %4789, 1
  br i1 %4638, label %4874, label %4924

4874:                                             ; preds = %4865
  %4875 = load i32, ptr %4, align 4, !tbaa !6
  %4876 = load i32, ptr %12, align 4, !tbaa !6
  %4877 = add nsw i32 %4876, -1
  %4878 = icmp slt i32 %4875, %4877
  br i1 %4878, label %4901, label %4879

4879:                                             ; preds = %4874
  %4880 = icmp eq i32 %4875, %4877
  br i1 %4880, label %4881, label %4917

4881:                                             ; preds = %4879
  store i32 0, ptr %4, align 4, !tbaa !6
  %4882 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4882, ptr %6, align 4, !tbaa !6
  br i1 %4643, label %4924, label %4883

4883:                                             ; preds = %4881, %4911
  %4884 = phi i64 [ %4915, %4911 ], [ 1, %4881 ]
  %4885 = getelementptr inbounds i32, ptr %4, i64 %4884
  %4886 = load i32, ptr %4885, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %12, i64 %4884
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = add nsw i32 %4888, -1
  %4890 = icmp slt i32 %4886, %4889
  br i1 %4890, label %4891, label %4909

4891:                                             ; preds = %4883
  br i1 %4878, label %4901, label %4892

4892:                                             ; preds = %4891
  %4893 = shl i64 %4884, 32
  %4894 = add i64 %4893, -4294967296
  %4895 = ashr exact i64 %4894, 32
  %4896 = getelementptr inbounds i32, ptr %7, i64 %4895
  %4897 = load i32, ptr %4896, align 4, !tbaa !6
  %4898 = getelementptr inbounds i32, ptr %6, i64 %4884
  %4899 = load i32, ptr %4898, align 4, !tbaa !6
  %4900 = add nsw i32 %4899, %4897
  store i32 %4900, ptr %4898, align 4, !tbaa !6
  br label %4919

4901:                                             ; preds = %4874, %4891
  %4902 = phi i32 [ %4886, %4891 ], [ %4875, %4874 ]
  %4903 = phi ptr [ %4885, %4891 ], [ %4, %4874 ]
  %4904 = phi i64 [ %4884, %4891 ], [ 0, %4874 ]
  %4905 = add nsw i32 %4902, 1
  store i32 %4905, ptr %4903, align 4, !tbaa !6
  %4906 = getelementptr inbounds i32, ptr %7, i64 %4904
  %4907 = load i32, ptr %4906, align 4, !tbaa !6
  %4908 = getelementptr inbounds i32, ptr %6, i64 %4904
  br label %4919

4909:                                             ; preds = %4883
  %4910 = icmp eq i32 %4886, %4889
  br i1 %4910, label %4911, label %4917

4911:                                             ; preds = %4909
  store i32 0, ptr %4885, align 4, !tbaa !6
  %4912 = getelementptr inbounds i32, ptr %8, i64 %4884
  %4913 = load i32, ptr %4912, align 4, !tbaa !6
  %4914 = getelementptr inbounds i32, ptr %6, i64 %4884
  store i32 %4913, ptr %4914, align 4, !tbaa !6
  %4915 = add nuw nsw i64 %4884, 1
  %4916 = icmp eq i64 %4915, %4641
  br i1 %4916, label %4924, label %4883, !llvm.loop !743

4917:                                             ; preds = %4879, %4909
  %4918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4919:                                             ; preds = %4892, %4901
  %4920 = phi ptr [ %4908, %4901 ], [ %4885, %4892 ]
  %4921 = phi i32 [ %4907, %4901 ], [ 1, %4892 ]
  %4922 = load i32, ptr %4920, align 4, !tbaa !6
  %4923 = add nsw i32 %4922, %4921
  store i32 %4923, ptr %4920, align 4, !tbaa !6
  br label %4924

4924:                                             ; preds = %4911, %4919, %4881, %4865
  %4925 = icmp eq i32 %4873, %5
  br i1 %4925, label %5545, label %4787, !llvm.loop !744

4926:                                             ; preds = %4324
  %4927 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4928:                                             ; preds = %18
  %4929 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4930 = load ptr, ptr %4929, align 8, !tbaa !10
  %4931 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4932 = load ptr, ptr %4931, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4932, align 8, !tbaa !19
  %4933 = icmp eq i32 %13, 0
  br i1 %4933, label %4934, label %4939

4934:                                             ; preds = %4928
  %4935 = load i32, ptr %4930, align 4, !tbaa !6
  %4936 = sitofp i32 %4935 to double
  %4937 = fmul fast double %4936, %4936
  %4938 = fmul fast double %4937, %4937
  store double %4938, ptr %4932, align 8, !tbaa !19
  br label %5545

4939:                                             ; preds = %4928
  switch i32 %1, label %5535 [
    i32 1, label %4940
    i32 0, label %5239
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !6
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5545

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5100

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5545

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5098
  %4964 = phi double [ 0.000000e+00, %4955 ], [ %5048, %5098 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5050, %5098 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5049, %5098 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !6
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !6
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !6
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !6
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !745

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !6
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !746

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !6
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !747

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !19
  %5042 = getelementptr inbounds i32, ptr %4930, i64 %5039
  %5043 = load i32, ptr %5042, align 4, !tbaa !6
  %5044 = sitofp i32 %5043 to double
  %5045 = fmul fast double %5041, %5044
  %5046 = fmul fast double %5045, %5045
  %5047 = fmul fast double %5046, %5046
  %5048 = fadd fast double %5047, %4964
  store double %5048, ptr %4932, align 8, !tbaa !19
  %5049 = fadd fast double %5041, %4966
  %5050 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5051, label %5098

5051:                                             ; preds = %5037
  %5052 = load i32, ptr %4, align 4, !tbaa !6
  %5053 = load i32, ptr %12, align 4, !tbaa !6
  %5054 = add nsw i32 %5053, -1
  %5055 = icmp slt i32 %5052, %5054
  br i1 %5055, label %5075, label %5056

5056:                                             ; preds = %5051
  %5057 = icmp eq i32 %5052, %5054
  br i1 %5057, label %5058, label %5091

5058:                                             ; preds = %5056
  store i32 0, ptr %4, align 4, !tbaa !6
  %5059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5059, ptr %6, align 4, !tbaa !6
  br i1 %4962, label %5098, label %5060

5060:                                             ; preds = %5058, %5085
  %5061 = phi i64 [ %5089, %5085 ], [ 1, %5058 ]
  %5062 = getelementptr inbounds i32, ptr %4, i64 %5061
  %5063 = load i32, ptr %5062, align 4, !tbaa !6
  %5064 = getelementptr inbounds i32, ptr %12, i64 %5061
  %5065 = load i32, ptr %5064, align 4, !tbaa !6
  %5066 = add nsw i32 %5065, -1
  %5067 = icmp slt i32 %5063, %5066
  br i1 %5067, label %5068, label %5083

5068:                                             ; preds = %5060
  br i1 %5055, label %5075, label %5069

5069:                                             ; preds = %5068
  %5070 = getelementptr inbounds i32, ptr %7, i64 %5061
  %5071 = load i32, ptr %5070, align 4, !tbaa !6
  %5072 = getelementptr inbounds i32, ptr %6, i64 %5061
  %5073 = load i32, ptr %5072, align 4, !tbaa !6
  %5074 = add nsw i32 %5073, %5071
  store i32 %5074, ptr %5072, align 4, !tbaa !6
  br label %5093

5075:                                             ; preds = %5051, %5068
  %5076 = phi i32 [ %5063, %5068 ], [ %5052, %5051 ]
  %5077 = phi ptr [ %5062, %5068 ], [ %4, %5051 ]
  %5078 = phi i64 [ %5061, %5068 ], [ 0, %5051 ]
  %5079 = add nsw i32 %5076, 1
  store i32 %5079, ptr %5077, align 4, !tbaa !6
  %5080 = getelementptr inbounds i32, ptr %7, i64 %5078
  %5081 = load i32, ptr %5080, align 4, !tbaa !6
  %5082 = getelementptr inbounds i32, ptr %6, i64 %5078
  br label %5093

5083:                                             ; preds = %5060
  %5084 = icmp eq i32 %5063, %5066
  br i1 %5084, label %5085, label %5091

5085:                                             ; preds = %5083
  store i32 0, ptr %5062, align 4, !tbaa !6
  %5086 = getelementptr inbounds i32, ptr %8, i64 %5061
  %5087 = load i32, ptr %5086, align 4, !tbaa !6
  %5088 = getelementptr inbounds i32, ptr %6, i64 %5061
  store i32 %5087, ptr %5088, align 4, !tbaa !6
  %5089 = add nuw nsw i64 %5061, 1
  %5090 = icmp eq i64 %5089, %4960
  br i1 %5090, label %5098, label %5060, !llvm.loop !748

5091:                                             ; preds = %5056, %5083
  %5092 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5093:                                             ; preds = %5069, %5075
  %5094 = phi ptr [ %5082, %5075 ], [ %5062, %5069 ]
  %5095 = phi i32 [ %5081, %5075 ], [ 1, %5069 ]
  %5096 = load i32, ptr %5094, align 4, !tbaa !6
  %5097 = add nsw i32 %5096, %5095
  store i32 %5097, ptr %5094, align 4, !tbaa !6
  br label %5098

5098:                                             ; preds = %5085, %5093, %5058, %5037
  %5099 = icmp eq i32 %5050, %5
  br i1 %5099, label %5545, label %4963, !llvm.loop !749

5100:                                             ; preds = %4946, %5237
  %5101 = phi double [ 0.000000e+00, %4946 ], [ %5185, %5237 ]
  %5102 = phi i32 [ 0, %4946 ], [ %5186, %5237 ]
  %5103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5104, label %5173

5104:                                             ; preds = %5100, %5163
  %5105 = phi i32 [ %5172, %5163 ], [ 0, %5100 ]
  %5106 = phi i64 [ %5114, %5163 ], [ %4951, %5100 ]
  %5107 = phi i64 [ %5171, %5163 ], [ %4950, %5100 ]
  %5108 = phi i32 [ %5169, %5163 ], [ %5103, %5100 ]
  %5109 = sub i32 %4949, %5105
  %5110 = tail call i32 @llvm.smin.i32(i32 %5109, i32 0)
  %5111 = sub i32 %5109, %5110
  %5112 = zext i32 %5111 to i64
  %5113 = add nuw nsw i64 %5112, 1
  %5114 = add nsw i64 %5106, -1
  %5115 = icmp ult i32 %5111, 31
  br i1 %5115, label %5151, label %5116

5116:                                             ; preds = %5104
  %5117 = and i64 %5113, 8589934560
  %5118 = sub i64 %5107, %5117
  br label %5119

5119:                                             ; preds = %5119, %5116
  %5120 = phi i64 [ 0, %5116 ], [ %5143, %5119 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5139, %5119 ]
  %5122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5140, %5119 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5141, %5119 ]
  %5124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5116 ], [ %5142, %5119 ]
  %5125 = sub i64 %5107, %5120
  %5126 = getelementptr inbounds i32, ptr %11, i64 %5125
  %5127 = getelementptr inbounds i32, ptr %5126, i64 -7
  %5128 = load <8 x i32>, ptr %5127, align 4, !tbaa !6
  %5129 = shufflevector <8 x i32> %5128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5130 = getelementptr inbounds i32, ptr %5126, i64 -15
  %5131 = load <8 x i32>, ptr %5130, align 4, !tbaa !6
  %5132 = shufflevector <8 x i32> %5131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5133 = getelementptr inbounds i32, ptr %5126, i64 -23
  %5134 = load <8 x i32>, ptr %5133, align 4, !tbaa !6
  %5135 = shufflevector <8 x i32> %5134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5136 = getelementptr inbounds i32, ptr %5126, i64 -31
  %5137 = load <8 x i32>, ptr %5136, align 4, !tbaa !6
  %5138 = shufflevector <8 x i32> %5137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5139 = mul <8 x i32> %5129, %5121
  %5140 = mul <8 x i32> %5132, %5122
  %5141 = mul <8 x i32> %5135, %5123
  %5142 = mul <8 x i32> %5138, %5124
  %5143 = add nuw i64 %5120, 32
  %5144 = icmp eq i64 %5143, %5117
  br i1 %5144, label %5145, label %5119, !llvm.loop !750

5145:                                             ; preds = %5119
  %5146 = mul <8 x i32> %5140, %5139
  %5147 = mul <8 x i32> %5141, %5146
  %5148 = mul <8 x i32> %5142, %5147
  %5149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5148)
  %5150 = icmp eq i64 %5113, %5117
  br i1 %5150, label %5163, label %5151

5151:                                             ; preds = %5104, %5145
  %5152 = phi i64 [ %5107, %5104 ], [ %5118, %5145 ]
  %5153 = phi i32 [ 1, %5104 ], [ %5149, %5145 ]
  br label %5154

5154:                                             ; preds = %5151, %5154
  %5155 = phi i64 [ %5160, %5154 ], [ %5152, %5151 ]
  %5156 = phi i32 [ %5159, %5154 ], [ %5153, %5151 ]
  %5157 = getelementptr inbounds i32, ptr %11, i64 %5155
  %5158 = load i32, ptr %5157, align 4, !tbaa !6
  %5159 = mul nsw i32 %5158, %5156
  %5160 = add nsw i64 %5155, -1
  %5161 = trunc i64 %5155 to i32
  %5162 = icmp sgt i32 %5161, 0
  br i1 %5162, label %5154, label %5163, !llvm.loop !751

5163:                                             ; preds = %5154, %5145
  %5164 = phi i32 [ %5149, %5145 ], [ %5159, %5154 ]
  %5165 = and i64 %5114, 4294967295
  %5166 = getelementptr inbounds i32, ptr %6, i64 %5165
  %5167 = load i32, ptr %5166, align 4, !tbaa !6
  %5168 = mul nsw i32 %5167, %5164
  %5169 = add nsw i32 %5168, %5108
  %5170 = icmp sgt i64 %5106, 2
  %5171 = add nsw i64 %5107, -1
  %5172 = add i32 %5105, 1
  br i1 %5170, label %5104, label %5173, !llvm.loop !752

5173:                                             ; preds = %5163, %5100
  %5174 = phi i32 [ %5103, %5100 ], [ %5169, %5163 ]
  %5175 = icmp slt i32 %5174, %5
  br i1 %5175, label %5178, label %5176

5176:                                             ; preds = %5173
  %5177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5178:                                             ; preds = %5173
  %5179 = sext i32 %5174 to i64
  %5180 = getelementptr inbounds i32, ptr %4930, i64 %5179
  %5181 = load i32, ptr %5180, align 4, !tbaa !6
  %5182 = sitofp i32 %5181 to double
  %5183 = fmul fast double %5182, %5182
  %5184 = fmul fast double %5183, %5183
  %5185 = fadd fast double %5184, %5101
  store double %5185, ptr %4932, align 8, !tbaa !19
  %5186 = add nuw nsw i32 %5102, 1
  br i1 %4948, label %5187, label %5237

5187:                                             ; preds = %5178
  %5188 = load i32, ptr %4, align 4, !tbaa !6
  %5189 = load i32, ptr %12, align 4, !tbaa !6
  %5190 = add nsw i32 %5189, -1
  %5191 = icmp slt i32 %5188, %5190
  br i1 %5191, label %5214, label %5192

5192:                                             ; preds = %5187
  %5193 = icmp eq i32 %5188, %5190
  br i1 %5193, label %5194, label %5230

5194:                                             ; preds = %5192
  store i32 0, ptr %4, align 4, !tbaa !6
  %5195 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5195, ptr %6, align 4, !tbaa !6
  br i1 %4953, label %5237, label %5196

5196:                                             ; preds = %5194, %5224
  %5197 = phi i64 [ %5228, %5224 ], [ 1, %5194 ]
  %5198 = getelementptr inbounds i32, ptr %4, i64 %5197
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %12, i64 %5197
  %5201 = load i32, ptr %5200, align 4, !tbaa !6
  %5202 = add nsw i32 %5201, -1
  %5203 = icmp slt i32 %5199, %5202
  br i1 %5203, label %5204, label %5222

5204:                                             ; preds = %5196
  br i1 %5191, label %5214, label %5205

5205:                                             ; preds = %5204
  %5206 = shl i64 %5197, 32
  %5207 = add i64 %5206, -4294967296
  %5208 = ashr exact i64 %5207, 32
  %5209 = getelementptr inbounds i32, ptr %7, i64 %5208
  %5210 = load i32, ptr %5209, align 4, !tbaa !6
  %5211 = getelementptr inbounds i32, ptr %6, i64 %5197
  %5212 = load i32, ptr %5211, align 4, !tbaa !6
  %5213 = add nsw i32 %5212, %5210
  store i32 %5213, ptr %5211, align 4, !tbaa !6
  br label %5232

5214:                                             ; preds = %5187, %5204
  %5215 = phi i32 [ %5199, %5204 ], [ %5188, %5187 ]
  %5216 = phi ptr [ %5198, %5204 ], [ %4, %5187 ]
  %5217 = phi i64 [ %5197, %5204 ], [ 0, %5187 ]
  %5218 = add nsw i32 %5215, 1
  store i32 %5218, ptr %5216, align 4, !tbaa !6
  %5219 = getelementptr inbounds i32, ptr %7, i64 %5217
  %5220 = load i32, ptr %5219, align 4, !tbaa !6
  %5221 = getelementptr inbounds i32, ptr %6, i64 %5217
  br label %5232

5222:                                             ; preds = %5196
  %5223 = icmp eq i32 %5199, %5202
  br i1 %5223, label %5224, label %5230

5224:                                             ; preds = %5222
  store i32 0, ptr %5198, align 4, !tbaa !6
  %5225 = getelementptr inbounds i32, ptr %8, i64 %5197
  %5226 = load i32, ptr %5225, align 4, !tbaa !6
  %5227 = getelementptr inbounds i32, ptr %6, i64 %5197
  store i32 %5226, ptr %5227, align 4, !tbaa !6
  %5228 = add nuw nsw i64 %5197, 1
  %5229 = icmp eq i64 %5228, %4951
  br i1 %5229, label %5237, label %5196, !llvm.loop !753

5230:                                             ; preds = %5192, %5222
  %5231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5232:                                             ; preds = %5205, %5214
  %5233 = phi ptr [ %5221, %5214 ], [ %5198, %5205 ]
  %5234 = phi i32 [ %5220, %5214 ], [ 1, %5205 ]
  %5235 = load i32, ptr %5233, align 4, !tbaa !6
  %5236 = add nsw i32 %5235, %5234
  store i32 %5236, ptr %5233, align 4, !tbaa !6
  br label %5237

5237:                                             ; preds = %5224, %5232, %5194, %5178
  %5238 = icmp eq i32 %5186, %5
  br i1 %5238, label %5545, label %5100, !llvm.loop !754

5239:                                             ; preds = %4939
  %5240 = getelementptr inbounds i32, ptr %3, i64 %19
  %5241 = load i32, ptr %5240, align 4, !tbaa !6
  %5242 = icmp eq i32 %5241, 0
  %5243 = icmp sgt i32 %5, 0
  br i1 %5242, label %5253, label %5244

5244:                                             ; preds = %5239
  br i1 %5243, label %5245, label %5545

5245:                                             ; preds = %5244
  %5246 = icmp sgt i32 %13, 1
  %5247 = icmp sgt i32 %13, 0
  %5248 = add i32 %13, -2
  %5249 = zext i32 %5248 to i64
  %5250 = zext i32 %13 to i64
  %5251 = add nuw i32 %5, 1
  %5252 = icmp eq i32 %13, 1
  br label %5396

5253:                                             ; preds = %5239
  br i1 %5243, label %5254, label %5545

5254:                                             ; preds = %5253
  %5255 = icmp sgt i32 %13, 1
  %5256 = icmp sgt i32 %13, 0
  %5257 = add i32 %13, -2
  %5258 = zext i32 %5257 to i64
  %5259 = zext i32 %13 to i64
  %5260 = add nuw i32 %5, 1
  %5261 = icmp eq i32 %13, 1
  br label %5262

5262:                                             ; preds = %5254, %5394
  %5263 = phi double [ 0.000000e+00, %5254 ], [ %5344, %5394 ]
  %5264 = phi i32 [ 0, %5254 ], [ %5346, %5394 ]
  %5265 = phi double [ 0.000000e+00, %5254 ], [ %5345, %5394 ]
  %5266 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5255, label %5267, label %5336

5267:                                             ; preds = %5262, %5326
  %5268 = phi i32 [ %5335, %5326 ], [ 0, %5262 ]
  %5269 = phi i64 [ %5277, %5326 ], [ %5259, %5262 ]
  %5270 = phi i64 [ %5334, %5326 ], [ %5258, %5262 ]
  %5271 = phi i32 [ %5332, %5326 ], [ %5266, %5262 ]
  %5272 = sub i32 %5257, %5268
  %5273 = tail call i32 @llvm.smin.i32(i32 %5272, i32 0)
  %5274 = sub i32 %5272, %5273
  %5275 = zext i32 %5274 to i64
  %5276 = add nuw nsw i64 %5275, 1
  %5277 = add nsw i64 %5269, -1
  %5278 = icmp ult i32 %5274, 31
  br i1 %5278, label %5314, label %5279

5279:                                             ; preds = %5267
  %5280 = and i64 %5276, 8589934560
  %5281 = sub i64 %5270, %5280
  br label %5282

5282:                                             ; preds = %5282, %5279
  %5283 = phi i64 [ 0, %5279 ], [ %5306, %5282 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5302, %5282 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5303, %5282 ]
  %5286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5304, %5282 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5279 ], [ %5305, %5282 ]
  %5288 = sub i64 %5270, %5283
  %5289 = getelementptr inbounds i32, ptr %9, i64 %5288
  %5290 = getelementptr inbounds i32, ptr %5289, i64 -7
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !6
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5289, i64 -15
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !6
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = getelementptr inbounds i32, ptr %5289, i64 -23
  %5297 = load <8 x i32>, ptr %5296, align 4, !tbaa !6
  %5298 = shufflevector <8 x i32> %5297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5299 = getelementptr inbounds i32, ptr %5289, i64 -31
  %5300 = load <8 x i32>, ptr %5299, align 4, !tbaa !6
  %5301 = shufflevector <8 x i32> %5300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5302 = mul <8 x i32> %5292, %5284
  %5303 = mul <8 x i32> %5295, %5285
  %5304 = mul <8 x i32> %5298, %5286
  %5305 = mul <8 x i32> %5301, %5287
  %5306 = add nuw i64 %5283, 32
  %5307 = icmp eq i64 %5306, %5280
  br i1 %5307, label %5308, label %5282, !llvm.loop !755

5308:                                             ; preds = %5282
  %5309 = mul <8 x i32> %5303, %5302
  %5310 = mul <8 x i32> %5304, %5309
  %5311 = mul <8 x i32> %5305, %5310
  %5312 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5311)
  %5313 = icmp eq i64 %5276, %5280
  br i1 %5313, label %5326, label %5314

5314:                                             ; preds = %5267, %5308
  %5315 = phi i64 [ %5270, %5267 ], [ %5281, %5308 ]
  %5316 = phi i32 [ 1, %5267 ], [ %5312, %5308 ]
  br label %5317

5317:                                             ; preds = %5314, %5317
  %5318 = phi i64 [ %5323, %5317 ], [ %5315, %5314 ]
  %5319 = phi i32 [ %5322, %5317 ], [ %5316, %5314 ]
  %5320 = getelementptr inbounds i32, ptr %9, i64 %5318
  %5321 = load i32, ptr %5320, align 4, !tbaa !6
  %5322 = mul nsw i32 %5321, %5319
  %5323 = add nsw i64 %5318, -1
  %5324 = trunc i64 %5318 to i32
  %5325 = icmp sgt i32 %5324, 0
  br i1 %5325, label %5317, label %5326, !llvm.loop !756

5326:                                             ; preds = %5317, %5308
  %5327 = phi i32 [ %5312, %5308 ], [ %5322, %5317 ]
  %5328 = and i64 %5277, 4294967295
  %5329 = getelementptr inbounds i32, ptr %6, i64 %5328
  %5330 = load i32, ptr %5329, align 4, !tbaa !6
  %5331 = mul nsw i32 %5330, %5327
  %5332 = add nsw i32 %5331, %5271
  %5333 = icmp sgt i64 %5269, 2
  %5334 = add nsw i64 %5270, -1
  %5335 = add i32 %5268, 1
  br i1 %5333, label %5267, label %5336, !llvm.loop !757

5336:                                             ; preds = %5326, %5262
  %5337 = phi i32 [ %5266, %5262 ], [ %5332, %5326 ]
  %5338 = sext i32 %5337 to i64
  %5339 = getelementptr inbounds i32, ptr %4930, i64 %5338
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = sitofp i32 %5340 to double
  %5342 = fmul fast double %5341, %5341
  %5343 = fmul fast double %5342, %5342
  %5344 = fadd fast double %5343, %5263
  %5345 = fadd fast double %5265, 1.000000e+00
  %5346 = add nuw nsw i32 %5264, 1
  br i1 %5256, label %5347, label %5394

5347:                                             ; preds = %5336
  %5348 = load i32, ptr %4, align 4, !tbaa !6
  %5349 = load i32, ptr %12, align 4, !tbaa !6
  %5350 = add nsw i32 %5349, -1
  %5351 = icmp slt i32 %5348, %5350
  br i1 %5351, label %5371, label %5352

5352:                                             ; preds = %5347
  %5353 = icmp eq i32 %5348, %5350
  br i1 %5353, label %5354, label %5387

5354:                                             ; preds = %5352
  store i32 0, ptr %4, align 4, !tbaa !6
  %5355 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5355, ptr %6, align 4, !tbaa !6
  br i1 %5261, label %5394, label %5356

5356:                                             ; preds = %5354, %5381
  %5357 = phi i64 [ %5385, %5381 ], [ 1, %5354 ]
  %5358 = getelementptr inbounds i32, ptr %4, i64 %5357
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %12, i64 %5357
  %5361 = load i32, ptr %5360, align 4, !tbaa !6
  %5362 = add nsw i32 %5361, -1
  %5363 = icmp slt i32 %5359, %5362
  br i1 %5363, label %5364, label %5379

5364:                                             ; preds = %5356
  br i1 %5351, label %5371, label %5365

5365:                                             ; preds = %5364
  %5366 = getelementptr inbounds i32, ptr %7, i64 %5357
  %5367 = load i32, ptr %5366, align 4, !tbaa !6
  %5368 = getelementptr inbounds i32, ptr %6, i64 %5357
  %5369 = load i32, ptr %5368, align 4, !tbaa !6
  %5370 = add nsw i32 %5369, %5367
  store i32 %5370, ptr %5368, align 4, !tbaa !6
  br label %5389

5371:                                             ; preds = %5347, %5364
  %5372 = phi i32 [ %5359, %5364 ], [ %5348, %5347 ]
  %5373 = phi ptr [ %5358, %5364 ], [ %4, %5347 ]
  %5374 = phi i64 [ %5357, %5364 ], [ 0, %5347 ]
  %5375 = add nsw i32 %5372, 1
  store i32 %5375, ptr %5373, align 4, !tbaa !6
  %5376 = getelementptr inbounds i32, ptr %7, i64 %5374
  %5377 = load i32, ptr %5376, align 4, !tbaa !6
  %5378 = getelementptr inbounds i32, ptr %6, i64 %5374
  br label %5389

5379:                                             ; preds = %5356
  %5380 = icmp eq i32 %5359, %5362
  br i1 %5380, label %5381, label %5387

5381:                                             ; preds = %5379
  store i32 0, ptr %5358, align 4, !tbaa !6
  %5382 = getelementptr inbounds i32, ptr %8, i64 %5357
  %5383 = load i32, ptr %5382, align 4, !tbaa !6
  %5384 = getelementptr inbounds i32, ptr %6, i64 %5357
  store i32 %5383, ptr %5384, align 4, !tbaa !6
  %5385 = add nuw nsw i64 %5357, 1
  %5386 = icmp eq i64 %5385, %5259
  br i1 %5386, label %5394, label %5356, !llvm.loop !758

5387:                                             ; preds = %5352, %5379
  store double %5344, ptr %4932, align 8, !tbaa !19
  %5388 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5389:                                             ; preds = %5365, %5371
  %5390 = phi ptr [ %5378, %5371 ], [ %5358, %5365 ]
  %5391 = phi i32 [ %5377, %5371 ], [ 1, %5365 ]
  %5392 = load i32, ptr %5390, align 4, !tbaa !6
  %5393 = add nsw i32 %5392, %5391
  store i32 %5393, ptr %5390, align 4, !tbaa !6
  br label %5394

5394:                                             ; preds = %5381, %5389, %5354, %5336
  %5395 = icmp eq i32 %5346, %5
  br i1 %5395, label %5544, label %5262, !llvm.loop !759

5396:                                             ; preds = %5245, %5533
  %5397 = phi double [ 0.000000e+00, %5245 ], [ %5481, %5533 ]
  %5398 = phi i32 [ 0, %5245 ], [ %5482, %5533 ]
  %5399 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5246, label %5400, label %5469

5400:                                             ; preds = %5396, %5459
  %5401 = phi i32 [ %5468, %5459 ], [ 0, %5396 ]
  %5402 = phi i64 [ %5410, %5459 ], [ %5250, %5396 ]
  %5403 = phi i64 [ %5467, %5459 ], [ %5249, %5396 ]
  %5404 = phi i32 [ %5465, %5459 ], [ %5399, %5396 ]
  %5405 = sub i32 %5248, %5401
  %5406 = tail call i32 @llvm.smin.i32(i32 %5405, i32 0)
  %5407 = sub i32 %5405, %5406
  %5408 = zext i32 %5407 to i64
  %5409 = add nuw nsw i64 %5408, 1
  %5410 = add nsw i64 %5402, -1
  %5411 = icmp ult i32 %5407, 31
  br i1 %5411, label %5447, label %5412

5412:                                             ; preds = %5400
  %5413 = and i64 %5409, 8589934560
  %5414 = sub i64 %5403, %5413
  br label %5415

5415:                                             ; preds = %5415, %5412
  %5416 = phi i64 [ 0, %5412 ], [ %5439, %5415 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5435, %5415 ]
  %5418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5436, %5415 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5437, %5415 ]
  %5420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5412 ], [ %5438, %5415 ]
  %5421 = sub i64 %5403, %5416
  %5422 = getelementptr inbounds i32, ptr %11, i64 %5421
  %5423 = getelementptr inbounds i32, ptr %5422, i64 -7
  %5424 = load <8 x i32>, ptr %5423, align 4, !tbaa !6
  %5425 = shufflevector <8 x i32> %5424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5426 = getelementptr inbounds i32, ptr %5422, i64 -15
  %5427 = load <8 x i32>, ptr %5426, align 4, !tbaa !6
  %5428 = shufflevector <8 x i32> %5427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5429 = getelementptr inbounds i32, ptr %5422, i64 -23
  %5430 = load <8 x i32>, ptr %5429, align 4, !tbaa !6
  %5431 = shufflevector <8 x i32> %5430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5432 = getelementptr inbounds i32, ptr %5422, i64 -31
  %5433 = load <8 x i32>, ptr %5432, align 4, !tbaa !6
  %5434 = shufflevector <8 x i32> %5433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5435 = mul <8 x i32> %5425, %5417
  %5436 = mul <8 x i32> %5428, %5418
  %5437 = mul <8 x i32> %5431, %5419
  %5438 = mul <8 x i32> %5434, %5420
  %5439 = add nuw i64 %5416, 32
  %5440 = icmp eq i64 %5439, %5413
  br i1 %5440, label %5441, label %5415, !llvm.loop !760

5441:                                             ; preds = %5415
  %5442 = mul <8 x i32> %5436, %5435
  %5443 = mul <8 x i32> %5437, %5442
  %5444 = mul <8 x i32> %5438, %5443
  %5445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5444)
  %5446 = icmp eq i64 %5409, %5413
  br i1 %5446, label %5459, label %5447

5447:                                             ; preds = %5400, %5441
  %5448 = phi i64 [ %5403, %5400 ], [ %5414, %5441 ]
  %5449 = phi i32 [ 1, %5400 ], [ %5445, %5441 ]
  br label %5450

5450:                                             ; preds = %5447, %5450
  %5451 = phi i64 [ %5456, %5450 ], [ %5448, %5447 ]
  %5452 = phi i32 [ %5455, %5450 ], [ %5449, %5447 ]
  %5453 = getelementptr inbounds i32, ptr %11, i64 %5451
  %5454 = load i32, ptr %5453, align 4, !tbaa !6
  %5455 = mul nsw i32 %5454, %5452
  %5456 = add nsw i64 %5451, -1
  %5457 = trunc i64 %5451 to i32
  %5458 = icmp sgt i32 %5457, 0
  br i1 %5458, label %5450, label %5459, !llvm.loop !761

5459:                                             ; preds = %5450, %5441
  %5460 = phi i32 [ %5445, %5441 ], [ %5455, %5450 ]
  %5461 = and i64 %5410, 4294967295
  %5462 = getelementptr inbounds i32, ptr %6, i64 %5461
  %5463 = load i32, ptr %5462, align 4, !tbaa !6
  %5464 = mul nsw i32 %5463, %5460
  %5465 = add nsw i32 %5464, %5404
  %5466 = icmp sgt i64 %5402, 2
  %5467 = add nsw i64 %5403, -1
  %5468 = add i32 %5401, 1
  br i1 %5466, label %5400, label %5469, !llvm.loop !762

5469:                                             ; preds = %5459, %5396
  %5470 = phi i32 [ %5399, %5396 ], [ %5465, %5459 ]
  %5471 = icmp slt i32 %5470, %5
  br i1 %5471, label %5474, label %5472

5472:                                             ; preds = %5469
  %5473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5474:                                             ; preds = %5469
  %5475 = sext i32 %5470 to i64
  %5476 = getelementptr inbounds i32, ptr %4930, i64 %5475
  %5477 = load i32, ptr %5476, align 4, !tbaa !6
  %5478 = sitofp i32 %5477 to double
  %5479 = fmul fast double %5478, %5478
  %5480 = fmul fast double %5479, %5479
  %5481 = fadd fast double %5480, %5397
  store double %5481, ptr %4932, align 8, !tbaa !19
  %5482 = add nuw nsw i32 %5398, 1
  br i1 %5247, label %5483, label %5533

5483:                                             ; preds = %5474
  %5484 = load i32, ptr %4, align 4, !tbaa !6
  %5485 = load i32, ptr %12, align 4, !tbaa !6
  %5486 = add nsw i32 %5485, -1
  %5487 = icmp slt i32 %5484, %5486
  br i1 %5487, label %5510, label %5488

5488:                                             ; preds = %5483
  %5489 = icmp eq i32 %5484, %5486
  br i1 %5489, label %5490, label %5526

5490:                                             ; preds = %5488
  store i32 0, ptr %4, align 4, !tbaa !6
  %5491 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5491, ptr %6, align 4, !tbaa !6
  br i1 %5252, label %5533, label %5492

5492:                                             ; preds = %5490, %5520
  %5493 = phi i64 [ %5524, %5520 ], [ 1, %5490 ]
  %5494 = getelementptr inbounds i32, ptr %4, i64 %5493
  %5495 = load i32, ptr %5494, align 4, !tbaa !6
  %5496 = getelementptr inbounds i32, ptr %12, i64 %5493
  %5497 = load i32, ptr %5496, align 4, !tbaa !6
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5495, %5498
  br i1 %5499, label %5500, label %5518

5500:                                             ; preds = %5492
  br i1 %5487, label %5510, label %5501

5501:                                             ; preds = %5500
  %5502 = shl i64 %5493, 32
  %5503 = add i64 %5502, -4294967296
  %5504 = ashr exact i64 %5503, 32
  %5505 = getelementptr inbounds i32, ptr %7, i64 %5504
  %5506 = load i32, ptr %5505, align 4, !tbaa !6
  %5507 = getelementptr inbounds i32, ptr %6, i64 %5493
  %5508 = load i32, ptr %5507, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, %5506
  store i32 %5509, ptr %5507, align 4, !tbaa !6
  br label %5528

5510:                                             ; preds = %5483, %5500
  %5511 = phi i32 [ %5495, %5500 ], [ %5484, %5483 ]
  %5512 = phi ptr [ %5494, %5500 ], [ %4, %5483 ]
  %5513 = phi i64 [ %5493, %5500 ], [ 0, %5483 ]
  %5514 = add nsw i32 %5511, 1
  store i32 %5514, ptr %5512, align 4, !tbaa !6
  %5515 = getelementptr inbounds i32, ptr %7, i64 %5513
  %5516 = load i32, ptr %5515, align 4, !tbaa !6
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5513
  br label %5528

5518:                                             ; preds = %5492
  %5519 = icmp eq i32 %5495, %5498
  br i1 %5519, label %5520, label %5526

5520:                                             ; preds = %5518
  store i32 0, ptr %5494, align 4, !tbaa !6
  %5521 = getelementptr inbounds i32, ptr %8, i64 %5493
  %5522 = load i32, ptr %5521, align 4, !tbaa !6
  %5523 = getelementptr inbounds i32, ptr %6, i64 %5493
  store i32 %5522, ptr %5523, align 4, !tbaa !6
  %5524 = add nuw nsw i64 %5493, 1
  %5525 = icmp eq i64 %5524, %5250
  br i1 %5525, label %5533, label %5492, !llvm.loop !763

5526:                                             ; preds = %5488, %5518
  %5527 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5528:                                             ; preds = %5501, %5510
  %5529 = phi ptr [ %5517, %5510 ], [ %5494, %5501 ]
  %5530 = phi i32 [ %5516, %5510 ], [ 1, %5501 ]
  %5531 = load i32, ptr %5529, align 4, !tbaa !6
  %5532 = add nsw i32 %5531, %5530
  store i32 %5532, ptr %5529, align 4, !tbaa !6
  br label %5533

5533:                                             ; preds = %5520, %5528, %5490, %5474
  %5534 = icmp eq i32 %5482, %5
  br i1 %5534, label %5545, label %5396, !llvm.loop !764

5535:                                             ; preds = %4939
  %5536 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

5537:                                             ; preds = %2038
  store i16 %1988, ptr %1868, align 2, !tbaa !79
  br label %5545

5538:                                             ; preds = %2338
  store i16 %2288, ptr %1868, align 2, !tbaa !79
  br label %5545

5539:                                             ; preds = %3263
  store i64 %3213, ptr %3095, align 8, !tbaa !121
  br label %5545

5540:                                             ; preds = %3561
  store i64 %3511, ptr %3095, align 8, !tbaa !121
  br label %5545

5541:                                             ; preds = %4170
  store double %4120, ptr %3708, align 8, !tbaa !19
  br label %5545

5542:                                             ; preds = %4486
  store float %4436, ptr %4317, align 4, !tbaa !163
  br label %5545

5543:                                             ; preds = %4785
  store float %4735, ptr %4317, align 4, !tbaa !163
  br label %5545

5544:                                             ; preds = %5394
  store double %5344, ptr %4932, align 8, !tbaa !19
  br label %5545

5545:                                             ; preds = %5533, %5237, %5098, %4924, %4628, %4309, %4013, %3874, %3700, %3404, %3087, %2949, %2793, %2652, %2477, %2181, %1860, %1721, %1564, %1421, %1243, %1105, %949, %808, %633, %494, %337, %195, %5244, %5253, %5544, %4945, %4954, %4635, %4644, %5543, %4330, %4339, %5542, %4020, %4029, %5541, %3721, %3730, %3411, %3420, %5540, %3108, %3117, %5539, %2800, %2809, %2497, %2506, %2188, %2197, %5538, %1881, %1890, %5537, %1571, %1580, %1264, %1273, %956, %965, %653, %662, %344, %353, %39, %48, %4934, %5535, %4319, %4926, %3710, %4311, %3097, %3702, %2487, %3089, %1870, %2479, %1253, %1862, %643, %1245, %28, %635, %18
  %5546 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1862 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %2479 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %3089 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %3702 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %4311 ], [ 0.000000e+00, %3710 ], [ 0.000000e+00, %4926 ], [ 0.000000e+00, %4319 ], [ 0.000000e+00, %5535 ], [ 0.000000e+00, %4934 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %965 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %1273 ], [ 0.000000e+00, %1264 ], [ 0.000000e+00, %1580 ], [ 0.000000e+00, %1571 ], [ %1989, %5537 ], [ 0.000000e+00, %1890 ], [ 0.000000e+00, %1881 ], [ %2289, %5538 ], [ 0.000000e+00, %2197 ], [ 0.000000e+00, %2188 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2809 ], [ 0.000000e+00, %2800 ], [ %3214, %5539 ], [ 0.000000e+00, %3117 ], [ 0.000000e+00, %3108 ], [ %3512, %5540 ], [ 0.000000e+00, %3420 ], [ 0.000000e+00, %3411 ], [ 0.000000e+00, %3730 ], [ 0.000000e+00, %3721 ], [ %4121, %5541 ], [ 0.000000e+00, %4029 ], [ 0.000000e+00, %4020 ], [ %4437, %5542 ], [ 0.000000e+00, %4339 ], [ 0.000000e+00, %4330 ], [ %4736, %5543 ], [ 0.000000e+00, %4644 ], [ 0.000000e+00, %4635 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ %5345, %5544 ], [ 0.000000e+00, %5253 ], [ 0.000000e+00, %5244 ], [ %146, %195 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %759, %808 ], [ 0.000000e+00, %949 ], [ %1056, %1105 ], [ 0.000000e+00, %1243 ], [ %1372, %1421 ], [ 0.000000e+00, %1564 ], [ %1672, %1721 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2477 ], [ %2603, %2652 ], [ 0.000000e+00, %2793 ], [ %2900, %2949 ], [ 0.000000e+00, %3087 ], [ 0.000000e+00, %3404 ], [ 0.000000e+00, %3700 ], [ %3825, %3874 ], [ 0.000000e+00, %4013 ], [ 0.000000e+00, %4309 ], [ 0.000000e+00, %4628 ], [ 0.000000e+00, %4924 ], [ %5049, %5098 ], [ 0.000000e+00, %5237 ], [ 0.000000e+00, %5533 ]
  %5547 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1245 ], [ 1, %643 ], [ 1, %1862 ], [ 1, %1253 ], [ 1, %2479 ], [ 1, %1870 ], [ 1, %3089 ], [ 1, %2487 ], [ 1, %3702 ], [ 1, %3097 ], [ 1, %4311 ], [ 1, %3710 ], [ 1, %4926 ], [ 1, %4319 ], [ 1, %5535 ], [ 1, %4934 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %662 ], [ 1, %653 ], [ 1, %965 ], [ 1, %956 ], [ 1, %1273 ], [ 1, %1264 ], [ 1, %1580 ], [ 1, %1571 ], [ %1897, %5537 ], [ 1, %1890 ], [ 1, %1881 ], [ %2204, %5538 ], [ 1, %2197 ], [ 1, %2188 ], [ 1, %2506 ], [ 1, %2497 ], [ 1, %2809 ], [ 1, %2800 ], [ %3124, %5539 ], [ 1, %3117 ], [ 1, %3108 ], [ %3427, %5540 ], [ 1, %3420 ], [ 1, %3411 ], [ 1, %3730 ], [ 1, %3721 ], [ %4036, %5541 ], [ 1, %4029 ], [ 1, %4020 ], [ %4346, %5542 ], [ 1, %4339 ], [ 1, %4330 ], [ %4651, %5543 ], [ 1, %4644 ], [ 1, %4635 ], [ 1, %4954 ], [ 1, %4945 ], [ %5260, %5544 ], [ 1, %5253 ], [ 1, %5244 ], [ %55, %195 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %669, %808 ], [ %660, %949 ], [ %972, %1105 ], [ %963, %1243 ], [ %1280, %1421 ], [ %1271, %1564 ], [ %1587, %1721 ], [ %1578, %1860 ], [ %1888, %2181 ], [ %2195, %2477 ], [ %2513, %2652 ], [ %2504, %2793 ], [ %2816, %2949 ], [ %2807, %3087 ], [ %3115, %3404 ], [ %3418, %3700 ], [ %3737, %3874 ], [ %3728, %4013 ], [ %4027, %4309 ], [ %4337, %4628 ], [ %4642, %4924 ], [ %4961, %5098 ], [ %4952, %5237 ], [ %5251, %5533 ]
  %5548 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5547, ptr noundef nonnull @.str.5) #3
  %5549 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5546, ptr noundef nonnull @.str.6) #3
  br label %5550

5550:                                             ; preds = %5091, %5176, %5230, %5387, %5472, %5526, %4479, %4564, %4621, %4778, %4863, %4917, %3867, %3952, %4006, %4163, %4248, %4302, %3256, %3341, %3397, %3554, %3639, %3693, %2645, %2729, %2786, %2942, %3026, %3080, %2031, %2116, %2174, %2331, %2416, %2470, %1414, %1498, %1557, %1714, %1798, %1853, %801, %885, %942, %1098, %1182, %1236, %188, %272, %330, %487, %571, %626, %5545
  %5551 = phi i32 [ 0, %5545 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1236 ], [ -1, %1182 ], [ -1, %1098 ], [ -1, %942 ], [ -1, %885 ], [ -1, %801 ], [ -1, %1853 ], [ -1, %1798 ], [ -1, %1714 ], [ -1, %1557 ], [ -1, %1498 ], [ -1, %1414 ], [ -1, %2470 ], [ -1, %2416 ], [ -1, %2331 ], [ -1, %2174 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3080 ], [ -1, %3026 ], [ -1, %2942 ], [ -1, %2786 ], [ -1, %2729 ], [ -1, %2645 ], [ -1, %3693 ], [ -1, %3639 ], [ -1, %3554 ], [ -1, %3397 ], [ -1, %3341 ], [ -1, %3256 ], [ -1, %4302 ], [ -1, %4248 ], [ -1, %4163 ], [ -1, %4006 ], [ -1, %3952 ], [ -1, %3867 ], [ -1, %4917 ], [ -1, %4863 ], [ -1, %4778 ], [ -1, %4621 ], [ -1, %4564 ], [ -1, %4479 ], [ -1, %5526 ], [ -1, %5472 ], [ -1, %5387 ], [ -1, %5230 ], [ -1, %5176 ], [ -1, %5091 ]
  ret i32 %5551
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5556 [
    i32 101, label %22
    i32 102, label %639
    i32 103, label %1254
    i32 104, label %1873
    i32 105, label %2492
    i32 106, label %3107
    i32 107, label %3717
    i32 108, label %4326
    i32 109, label %4941
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !121
  %30 = trunc i64 %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %31
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5556

33:                                               ; preds = %22
  switch i32 %1, label %637 [
    i32 1, label %34
    i32 0, label %341
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5556

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %198

48:                                               ; preds = %34
  br i1 %38, label %49, label %5556

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %196
  %58 = phi i32 [ 0, %49 ], [ %148, %196 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %147, %196 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !765

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !766

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !767

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i64, ptr %24, i64 %132
  %136 = load i64, ptr %135, align 8, !tbaa !121
  %137 = trunc i64 %136 to i32
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = and i32 %137, 255
  %141 = sitofp i32 %140 to double
  %142 = fmul fast double %134, %141
  %143 = fmul fast double %142, %142
  %144 = fmul fast double %143, %143
  %145 = fadd fast double %144, %139
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !12
  %147 = fadd fast double %134, %59
  %148 = add nuw nsw i32 %58, 1
  br i1 %51, label %149, label %196

149:                                              ; preds = %130
  %150 = load i32, ptr %4, align 4, !tbaa !6
  %151 = load i32, ptr %12, align 4, !tbaa !6
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !6
  %157 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %157, ptr %6, align 4, !tbaa !6
  br i1 %56, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !6
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !6
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !6
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !6
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !6
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !6
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %54
  br i1 %188, label %196, label %158, !llvm.loop !768

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !6
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !6
  br label %196

196:                                              ; preds = %183, %191, %156, %130
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %5556, label %57, !llvm.loop !769

198:                                              ; preds = %40, %339
  %199 = phi i32 [ 0, %40 ], [ %288, %339 ]
  %200 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %45, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %44, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %43, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !6
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !770

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !6
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !771

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !6
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !772

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

275:                                              ; preds = %270
  %276 = sext i32 %271 to i64
  %277 = getelementptr inbounds i64, ptr %24, i64 %276
  %278 = load i64, ptr %277, align 8, !tbaa !121
  %279 = trunc i64 %278 to i32
  %280 = load i8, ptr %26, align 1, !tbaa !12
  %281 = uitofp i8 %280 to double
  %282 = and i32 %279, 255
  %283 = sitofp i32 %282 to double
  %284 = fmul fast double %283, %283
  %285 = fmul fast double %284, %284
  %286 = fadd fast double %285, %281
  %287 = fptoui double %286 to i8
  store i8 %287, ptr %26, align 1, !tbaa !12
  %288 = add nuw nsw i32 %199, 1
  br i1 %42, label %289, label %339

289:                                              ; preds = %275
  %290 = load i32, ptr %4, align 4, !tbaa !6
  %291 = load i32, ptr %12, align 4, !tbaa !6
  %292 = add nsw i32 %291, -1
  %293 = icmp slt i32 %290, %292
  br i1 %293, label %316, label %294

294:                                              ; preds = %289
  %295 = icmp eq i32 %290, %292
  br i1 %295, label %296, label %332

296:                                              ; preds = %294
  store i32 0, ptr %4, align 4, !tbaa !6
  %297 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %297, ptr %6, align 4, !tbaa !6
  br i1 %47, label %339, label %298

298:                                              ; preds = %296, %326
  %299 = phi i64 [ %330, %326 ], [ 1, %296 ]
  %300 = getelementptr inbounds i32, ptr %4, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = getelementptr inbounds i32, ptr %12, i64 %299
  %303 = load i32, ptr %302, align 4, !tbaa !6
  %304 = add nsw i32 %303, -1
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %324

306:                                              ; preds = %298
  br i1 %293, label %316, label %307

307:                                              ; preds = %306
  %308 = shl i64 %299, 32
  %309 = add i64 %308, -4294967296
  %310 = ashr exact i64 %309, 32
  %311 = getelementptr inbounds i32, ptr %7, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = getelementptr inbounds i32, ptr %6, i64 %299
  %314 = load i32, ptr %313, align 4, !tbaa !6
  %315 = add nsw i32 %314, %312
  store i32 %315, ptr %313, align 4, !tbaa !6
  br label %334

316:                                              ; preds = %289, %306
  %317 = phi i32 [ %301, %306 ], [ %290, %289 ]
  %318 = phi ptr [ %300, %306 ], [ %4, %289 ]
  %319 = phi i64 [ %299, %306 ], [ 0, %289 ]
  %320 = add nsw i32 %317, 1
  store i32 %320, ptr %318, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %7, i64 %319
  %322 = load i32, ptr %321, align 4, !tbaa !6
  %323 = getelementptr inbounds i32, ptr %6, i64 %319
  br label %334

324:                                              ; preds = %298
  %325 = icmp eq i32 %301, %304
  br i1 %325, label %326, label %332

326:                                              ; preds = %324
  store i32 0, ptr %300, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %8, i64 %299
  %328 = load i32, ptr %327, align 4, !tbaa !6
  %329 = getelementptr inbounds i32, ptr %6, i64 %299
  store i32 %328, ptr %329, align 4, !tbaa !6
  %330 = add nuw nsw i64 %299, 1
  %331 = icmp eq i64 %330, %45
  br i1 %331, label %339, label %298, !llvm.loop !773

332:                                              ; preds = %294, %324
  %333 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

334:                                              ; preds = %307, %316
  %335 = phi ptr [ %323, %316 ], [ %300, %307 ]
  %336 = phi i32 [ %322, %316 ], [ 1, %307 ]
  %337 = load i32, ptr %335, align 4, !tbaa !6
  %338 = add nsw i32 %337, %336
  store i32 %338, ptr %335, align 4, !tbaa !6
  br label %339

339:                                              ; preds = %326, %334, %296, %275
  %340 = icmp eq i32 %288, %5
  br i1 %340, label %5556, label %198, !llvm.loop !774

341:                                              ; preds = %33
  %342 = getelementptr inbounds i32, ptr %3, i64 %19
  %343 = load i32, ptr %342, align 4, !tbaa !6
  %344 = icmp eq i32 %343, 0
  %345 = icmp sgt i32 %5, 0
  br i1 %344, label %355, label %346

346:                                              ; preds = %341
  br i1 %345, label %347, label %5556

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %498

355:                                              ; preds = %341
  br i1 %345, label %356, label %5556

356:                                              ; preds = %355
  %357 = icmp sgt i32 %13, 1
  %358 = icmp sgt i32 %13, 0
  %359 = add i32 %13, -2
  %360 = zext i32 %359 to i64
  %361 = zext i32 %13 to i64
  %362 = add nuw i32 %5, 1
  %363 = icmp eq i32 %13, 1
  br label %364

364:                                              ; preds = %356, %496
  %365 = phi i32 [ 0, %356 ], [ %448, %496 ]
  %366 = phi double [ 0.000000e+00, %356 ], [ %447, %496 ]
  %367 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %357, label %368, label %437

368:                                              ; preds = %364, %427
  %369 = phi i32 [ %436, %427 ], [ 0, %364 ]
  %370 = phi i64 [ %378, %427 ], [ %361, %364 ]
  %371 = phi i64 [ %435, %427 ], [ %360, %364 ]
  %372 = phi i32 [ %433, %427 ], [ %367, %364 ]
  %373 = sub i32 %359, %369
  %374 = tail call i32 @llvm.smin.i32(i32 %373, i32 0)
  %375 = sub i32 %373, %374
  %376 = zext i32 %375 to i64
  %377 = add nuw nsw i64 %376, 1
  %378 = add nsw i64 %370, -1
  %379 = icmp ult i32 %375, 31
  br i1 %379, label %415, label %380

380:                                              ; preds = %368
  %381 = and i64 %377, 8589934560
  %382 = sub i64 %371, %381
  br label %383

383:                                              ; preds = %383, %380
  %384 = phi i64 [ 0, %380 ], [ %407, %383 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %403, %383 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %404, %383 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %405, %383 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %406, %383 ]
  %389 = sub i64 %371, %384
  %390 = getelementptr inbounds i32, ptr %9, i64 %389
  %391 = getelementptr inbounds i32, ptr %390, i64 -7
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %390, i64 -15
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %390, i64 -23
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !6
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = getelementptr inbounds i32, ptr %390, i64 -31
  %401 = load <8 x i32>, ptr %400, align 4, !tbaa !6
  %402 = shufflevector <8 x i32> %401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %403 = mul <8 x i32> %393, %385
  %404 = mul <8 x i32> %396, %386
  %405 = mul <8 x i32> %399, %387
  %406 = mul <8 x i32> %402, %388
  %407 = add nuw i64 %384, 32
  %408 = icmp eq i64 %407, %381
  br i1 %408, label %409, label %383, !llvm.loop !775

409:                                              ; preds = %383
  %410 = mul <8 x i32> %404, %403
  %411 = mul <8 x i32> %405, %410
  %412 = mul <8 x i32> %406, %411
  %413 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %412)
  %414 = icmp eq i64 %377, %381
  br i1 %414, label %427, label %415

415:                                              ; preds = %368, %409
  %416 = phi i64 [ %371, %368 ], [ %382, %409 ]
  %417 = phi i32 [ 1, %368 ], [ %413, %409 ]
  br label %418

418:                                              ; preds = %415, %418
  %419 = phi i64 [ %424, %418 ], [ %416, %415 ]
  %420 = phi i32 [ %423, %418 ], [ %417, %415 ]
  %421 = getelementptr inbounds i32, ptr %9, i64 %419
  %422 = load i32, ptr %421, align 4, !tbaa !6
  %423 = mul nsw i32 %422, %420
  %424 = add nsw i64 %419, -1
  %425 = trunc i64 %419 to i32
  %426 = icmp sgt i32 %425, 0
  br i1 %426, label %418, label %427, !llvm.loop !776

427:                                              ; preds = %418, %409
  %428 = phi i32 [ %413, %409 ], [ %423, %418 ]
  %429 = and i64 %378, 4294967295
  %430 = getelementptr inbounds i32, ptr %6, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !6
  %432 = mul nsw i32 %431, %428
  %433 = add nsw i32 %432, %372
  %434 = icmp sgt i64 %370, 2
  %435 = add nsw i64 %371, -1
  %436 = add i32 %369, 1
  br i1 %434, label %368, label %437, !llvm.loop !777

437:                                              ; preds = %427, %364
  %438 = phi i32 [ %367, %364 ], [ %433, %427 ]
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i64, ptr %24, i64 %439
  %441 = load i64, ptr %440, align 8, !tbaa !121
  %442 = trunc i64 %441 to i8
  %443 = load i8, ptr %26, align 1, !tbaa !12
  %444 = mul i8 %442, %442
  %445 = mul i8 %444, %444
  %446 = add i8 %445, %443
  store i8 %446, ptr %26, align 1, !tbaa !12
  %447 = fadd fast double %366, 1.000000e+00
  %448 = add nuw nsw i32 %365, 1
  br i1 %358, label %449, label %496

449:                                              ; preds = %437
  %450 = load i32, ptr %4, align 4, !tbaa !6
  %451 = load i32, ptr %12, align 4, !tbaa !6
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %450, %452
  br i1 %453, label %473, label %454

454:                                              ; preds = %449
  %455 = icmp eq i32 %450, %452
  br i1 %455, label %456, label %489

456:                                              ; preds = %454
  store i32 0, ptr %4, align 4, !tbaa !6
  %457 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %457, ptr %6, align 4, !tbaa !6
  br i1 %363, label %496, label %458

458:                                              ; preds = %456, %483
  %459 = phi i64 [ %487, %483 ], [ 1, %456 ]
  %460 = getelementptr inbounds i32, ptr %4, i64 %459
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = getelementptr inbounds i32, ptr %12, i64 %459
  %463 = load i32, ptr %462, align 4, !tbaa !6
  %464 = add nsw i32 %463, -1
  %465 = icmp slt i32 %461, %464
  br i1 %465, label %466, label %481

466:                                              ; preds = %458
  br i1 %453, label %473, label %467

467:                                              ; preds = %466
  %468 = getelementptr inbounds i32, ptr %7, i64 %459
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = getelementptr inbounds i32, ptr %6, i64 %459
  %471 = load i32, ptr %470, align 4, !tbaa !6
  %472 = add nsw i32 %471, %469
  store i32 %472, ptr %470, align 4, !tbaa !6
  br label %491

473:                                              ; preds = %449, %466
  %474 = phi i32 [ %461, %466 ], [ %450, %449 ]
  %475 = phi ptr [ %460, %466 ], [ %4, %449 ]
  %476 = phi i64 [ %459, %466 ], [ 0, %449 ]
  %477 = add nsw i32 %474, 1
  store i32 %477, ptr %475, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %7, i64 %476
  %479 = load i32, ptr %478, align 4, !tbaa !6
  %480 = getelementptr inbounds i32, ptr %6, i64 %476
  br label %491

481:                                              ; preds = %458
  %482 = icmp eq i32 %461, %464
  br i1 %482, label %483, label %489

483:                                              ; preds = %481
  store i32 0, ptr %460, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %8, i64 %459
  %485 = load i32, ptr %484, align 4, !tbaa !6
  %486 = getelementptr inbounds i32, ptr %6, i64 %459
  store i32 %485, ptr %486, align 4, !tbaa !6
  %487 = add nuw nsw i64 %459, 1
  %488 = icmp eq i64 %487, %361
  br i1 %488, label %496, label %458, !llvm.loop !778

489:                                              ; preds = %454, %481
  %490 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

491:                                              ; preds = %467, %473
  %492 = phi ptr [ %480, %473 ], [ %460, %467 ]
  %493 = phi i32 [ %479, %473 ], [ 1, %467 ]
  %494 = load i32, ptr %492, align 4, !tbaa !6
  %495 = add nsw i32 %494, %493
  store i32 %495, ptr %492, align 4, !tbaa !6
  br label %496

496:                                              ; preds = %483, %491, %456, %437
  %497 = icmp eq i32 %448, %5
  br i1 %497, label %5556, label %364, !llvm.loop !779

498:                                              ; preds = %347, %635
  %499 = phi i32 [ 0, %347 ], [ %584, %635 ]
  %500 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %348, label %501, label %570

501:                                              ; preds = %498, %560
  %502 = phi i32 [ %569, %560 ], [ 0, %498 ]
  %503 = phi i64 [ %511, %560 ], [ %352, %498 ]
  %504 = phi i64 [ %568, %560 ], [ %351, %498 ]
  %505 = phi i32 [ %566, %560 ], [ %500, %498 ]
  %506 = sub i32 %350, %502
  %507 = tail call i32 @llvm.smin.i32(i32 %506, i32 0)
  %508 = sub i32 %506, %507
  %509 = zext i32 %508 to i64
  %510 = add nuw nsw i64 %509, 1
  %511 = add nsw i64 %503, -1
  %512 = icmp ult i32 %508, 31
  br i1 %512, label %548, label %513

513:                                              ; preds = %501
  %514 = and i64 %510, 8589934560
  %515 = sub i64 %504, %514
  br label %516

516:                                              ; preds = %516, %513
  %517 = phi i64 [ 0, %513 ], [ %540, %516 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %536, %516 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %537, %516 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %538, %516 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %539, %516 ]
  %522 = sub i64 %504, %517
  %523 = getelementptr inbounds i32, ptr %11, i64 %522
  %524 = getelementptr inbounds i32, ptr %523, i64 -7
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %523, i64 -15
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %523, i64 -23
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %523, i64 -31
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !6
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = mul <8 x i32> %526, %518
  %537 = mul <8 x i32> %529, %519
  %538 = mul <8 x i32> %532, %520
  %539 = mul <8 x i32> %535, %521
  %540 = add nuw i64 %517, 32
  %541 = icmp eq i64 %540, %514
  br i1 %541, label %542, label %516, !llvm.loop !780

542:                                              ; preds = %516
  %543 = mul <8 x i32> %537, %536
  %544 = mul <8 x i32> %538, %543
  %545 = mul <8 x i32> %539, %544
  %546 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %545)
  %547 = icmp eq i64 %510, %514
  br i1 %547, label %560, label %548

548:                                              ; preds = %501, %542
  %549 = phi i64 [ %504, %501 ], [ %515, %542 ]
  %550 = phi i32 [ 1, %501 ], [ %546, %542 ]
  br label %551

551:                                              ; preds = %548, %551
  %552 = phi i64 [ %557, %551 ], [ %549, %548 ]
  %553 = phi i32 [ %556, %551 ], [ %550, %548 ]
  %554 = getelementptr inbounds i32, ptr %11, i64 %552
  %555 = load i32, ptr %554, align 4, !tbaa !6
  %556 = mul nsw i32 %555, %553
  %557 = add nsw i64 %552, -1
  %558 = trunc i64 %552 to i32
  %559 = icmp sgt i32 %558, 0
  br i1 %559, label %551, label %560, !llvm.loop !781

560:                                              ; preds = %551, %542
  %561 = phi i32 [ %546, %542 ], [ %556, %551 ]
  %562 = and i64 %511, 4294967295
  %563 = getelementptr inbounds i32, ptr %6, i64 %562
  %564 = load i32, ptr %563, align 4, !tbaa !6
  %565 = mul nsw i32 %564, %561
  %566 = add nsw i32 %565, %505
  %567 = icmp sgt i64 %503, 2
  %568 = add nsw i64 %504, -1
  %569 = add i32 %502, 1
  br i1 %567, label %501, label %570, !llvm.loop !782

570:                                              ; preds = %560, %498
  %571 = phi i32 [ %500, %498 ], [ %566, %560 ]
  %572 = icmp slt i32 %571, %5
  br i1 %572, label %575, label %573

573:                                              ; preds = %570
  %574 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

575:                                              ; preds = %570
  %576 = sext i32 %571 to i64
  %577 = getelementptr inbounds i64, ptr %24, i64 %576
  %578 = load i64, ptr %577, align 8, !tbaa !121
  %579 = trunc i64 %578 to i8
  %580 = load i8, ptr %26, align 1, !tbaa !12
  %581 = mul i8 %579, %579
  %582 = mul i8 %581, %581
  %583 = add i8 %582, %580
  store i8 %583, ptr %26, align 1, !tbaa !12
  %584 = add nuw nsw i32 %499, 1
  br i1 %349, label %585, label %635

585:                                              ; preds = %575
  %586 = load i32, ptr %4, align 4, !tbaa !6
  %587 = load i32, ptr %12, align 4, !tbaa !6
  %588 = add nsw i32 %587, -1
  %589 = icmp slt i32 %586, %588
  br i1 %589, label %612, label %590

590:                                              ; preds = %585
  %591 = icmp eq i32 %586, %588
  br i1 %591, label %592, label %628

592:                                              ; preds = %590
  store i32 0, ptr %4, align 4, !tbaa !6
  %593 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %593, ptr %6, align 4, !tbaa !6
  br i1 %354, label %635, label %594

594:                                              ; preds = %592, %622
  %595 = phi i64 [ %626, %622 ], [ 1, %592 ]
  %596 = getelementptr inbounds i32, ptr %4, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = getelementptr inbounds i32, ptr %12, i64 %595
  %599 = load i32, ptr %598, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %597, %600
  br i1 %601, label %602, label %620

602:                                              ; preds = %594
  br i1 %589, label %612, label %603

603:                                              ; preds = %602
  %604 = shl i64 %595, 32
  %605 = add i64 %604, -4294967296
  %606 = ashr exact i64 %605, 32
  %607 = getelementptr inbounds i32, ptr %7, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = getelementptr inbounds i32, ptr %6, i64 %595
  %610 = load i32, ptr %609, align 4, !tbaa !6
  %611 = add nsw i32 %610, %608
  store i32 %611, ptr %609, align 4, !tbaa !6
  br label %630

612:                                              ; preds = %585, %602
  %613 = phi i32 [ %597, %602 ], [ %586, %585 ]
  %614 = phi ptr [ %596, %602 ], [ %4, %585 ]
  %615 = phi i64 [ %595, %602 ], [ 0, %585 ]
  %616 = add nsw i32 %613, 1
  store i32 %616, ptr %614, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %7, i64 %615
  %618 = load i32, ptr %617, align 4, !tbaa !6
  %619 = getelementptr inbounds i32, ptr %6, i64 %615
  br label %630

620:                                              ; preds = %594
  %621 = icmp eq i32 %597, %600
  br i1 %621, label %622, label %628

622:                                              ; preds = %620
  store i32 0, ptr %596, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %8, i64 %595
  %624 = load i32, ptr %623, align 4, !tbaa !6
  %625 = getelementptr inbounds i32, ptr %6, i64 %595
  store i32 %624, ptr %625, align 4, !tbaa !6
  %626 = add nuw nsw i64 %595, 1
  %627 = icmp eq i64 %626, %352
  br i1 %627, label %635, label %594, !llvm.loop !783

628:                                              ; preds = %590, %620
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

630:                                              ; preds = %603, %612
  %631 = phi ptr [ %619, %612 ], [ %596, %603 ]
  %632 = phi i32 [ %618, %612 ], [ 1, %603 ]
  %633 = load i32, ptr %631, align 4, !tbaa !6
  %634 = add nsw i32 %633, %632
  store i32 %634, ptr %631, align 4, !tbaa !6
  br label %635

635:                                              ; preds = %622, %630, %592, %575
  %636 = icmp eq i32 %584, %5
  br i1 %636, label %5556, label %498, !llvm.loop !784

637:                                              ; preds = %33
  %638 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1438, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

639:                                              ; preds = %18
  %640 = getelementptr inbounds ptr, ptr %14, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  %642 = getelementptr inbounds ptr, ptr %16, i64 %19
  %643 = load ptr, ptr %642, align 8, !tbaa !10
  store i32 0, ptr %643, align 4, !tbaa !6
  %644 = icmp eq i32 %13, 0
  br i1 %644, label %645, label %650

645:                                              ; preds = %639
  %646 = load i64, ptr %641, align 8, !tbaa !121
  %647 = trunc i64 %646 to i32
  %648 = mul i32 %647, %647
  %649 = mul i32 %648, %648
  store i32 %649, ptr %643, align 4, !tbaa !6
  br label %5556

650:                                              ; preds = %639
  switch i32 %1, label %1252 [
    i32 1, label %651
    i32 0, label %956
  ]

651:                                              ; preds = %650
  %652 = getelementptr inbounds i32, ptr %3, i64 %19
  %653 = load i32, ptr %652, align 4, !tbaa !6
  %654 = icmp eq i32 %653, 0
  %655 = icmp sgt i32 %5, 0
  br i1 %654, label %665, label %656

656:                                              ; preds = %651
  br i1 %655, label %657, label %5556

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %814

665:                                              ; preds = %651
  br i1 %655, label %666, label %5556

666:                                              ; preds = %665
  %667 = icmp sgt i32 %13, 1
  %668 = icmp sgt i32 %13, 0
  %669 = add i32 %13, -2
  %670 = zext i32 %669 to i64
  %671 = zext i32 %13 to i64
  %672 = add nuw i32 %5, 1
  %673 = icmp eq i32 %13, 1
  br label %674

674:                                              ; preds = %666, %812
  %675 = phi i32 [ 0, %666 ], [ %764, %812 ]
  %676 = phi double [ 0.000000e+00, %666 ], [ %763, %812 ]
  %677 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %667, label %678, label %747

678:                                              ; preds = %674, %737
  %679 = phi i32 [ %746, %737 ], [ 0, %674 ]
  %680 = phi i64 [ %688, %737 ], [ %671, %674 ]
  %681 = phi i64 [ %745, %737 ], [ %670, %674 ]
  %682 = phi i32 [ %743, %737 ], [ %677, %674 ]
  %683 = sub i32 %669, %679
  %684 = tail call i32 @llvm.smin.i32(i32 %683, i32 0)
  %685 = sub i32 %683, %684
  %686 = zext i32 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = add nsw i64 %680, -1
  %689 = icmp ult i32 %685, 31
  br i1 %689, label %725, label %690

690:                                              ; preds = %678
  %691 = and i64 %687, 8589934560
  %692 = sub i64 %681, %691
  br label %693

693:                                              ; preds = %693, %690
  %694 = phi i64 [ 0, %690 ], [ %717, %693 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %713, %693 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %714, %693 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %715, %693 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %716, %693 ]
  %699 = sub i64 %681, %694
  %700 = getelementptr inbounds i32, ptr %9, i64 %699
  %701 = getelementptr inbounds i32, ptr %700, i64 -7
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %700, i64 -15
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %700, i64 -23
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %700, i64 -31
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !6
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = mul <8 x i32> %703, %695
  %714 = mul <8 x i32> %706, %696
  %715 = mul <8 x i32> %709, %697
  %716 = mul <8 x i32> %712, %698
  %717 = add nuw i64 %694, 32
  %718 = icmp eq i64 %717, %691
  br i1 %718, label %719, label %693, !llvm.loop !785

719:                                              ; preds = %693
  %720 = mul <8 x i32> %714, %713
  %721 = mul <8 x i32> %715, %720
  %722 = mul <8 x i32> %716, %721
  %723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %722)
  %724 = icmp eq i64 %687, %691
  br i1 %724, label %737, label %725

725:                                              ; preds = %678, %719
  %726 = phi i64 [ %681, %678 ], [ %692, %719 ]
  %727 = phi i32 [ 1, %678 ], [ %723, %719 ]
  br label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %734, %728 ], [ %726, %725 ]
  %730 = phi i32 [ %733, %728 ], [ %727, %725 ]
  %731 = getelementptr inbounds i32, ptr %9, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !6
  %733 = mul nsw i32 %732, %730
  %734 = add nsw i64 %729, -1
  %735 = trunc i64 %729 to i32
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %728, label %737, !llvm.loop !786

737:                                              ; preds = %728, %719
  %738 = phi i32 [ %723, %719 ], [ %733, %728 ]
  %739 = and i64 %688, 4294967295
  %740 = getelementptr inbounds i32, ptr %6, i64 %739
  %741 = load i32, ptr %740, align 4, !tbaa !6
  %742 = mul nsw i32 %741, %738
  %743 = add nsw i32 %742, %682
  %744 = icmp sgt i64 %680, 2
  %745 = add nsw i64 %681, -1
  %746 = add i32 %679, 1
  br i1 %744, label %678, label %747, !llvm.loop !787

747:                                              ; preds = %737, %674
  %748 = phi i32 [ %677, %674 ], [ %743, %737 ]
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %2, i64 %749
  %751 = load double, ptr %750, align 8, !tbaa !19
  %752 = getelementptr inbounds i64, ptr %641, i64 %749
  %753 = load i64, ptr %752, align 8, !tbaa !121
  %754 = trunc i64 %753 to i32
  %755 = load i32, ptr %643, align 4, !tbaa !6
  %756 = sitofp i32 %755 to double
  %757 = sitofp i32 %754 to double
  %758 = fmul fast double %751, %757
  %759 = fmul fast double %758, %758
  %760 = fmul fast double %759, %759
  %761 = fadd fast double %760, %756
  %762 = fptosi double %761 to i32
  store i32 %762, ptr %643, align 4, !tbaa !6
  %763 = fadd fast double %751, %676
  %764 = add nuw nsw i32 %675, 1
  br i1 %668, label %765, label %812

765:                                              ; preds = %747
  %766 = load i32, ptr %4, align 4, !tbaa !6
  %767 = load i32, ptr %12, align 4, !tbaa !6
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %766, %768
  br i1 %769, label %789, label %770

770:                                              ; preds = %765
  %771 = icmp eq i32 %766, %768
  br i1 %771, label %772, label %805

772:                                              ; preds = %770
  store i32 0, ptr %4, align 4, !tbaa !6
  %773 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %773, ptr %6, align 4, !tbaa !6
  br i1 %673, label %812, label %774

774:                                              ; preds = %772, %799
  %775 = phi i64 [ %803, %799 ], [ 1, %772 ]
  %776 = getelementptr inbounds i32, ptr %4, i64 %775
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = getelementptr inbounds i32, ptr %12, i64 %775
  %779 = load i32, ptr %778, align 4, !tbaa !6
  %780 = add nsw i32 %779, -1
  %781 = icmp slt i32 %777, %780
  br i1 %781, label %782, label %797

782:                                              ; preds = %774
  br i1 %769, label %789, label %783

783:                                              ; preds = %782
  %784 = getelementptr inbounds i32, ptr %7, i64 %775
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = getelementptr inbounds i32, ptr %6, i64 %775
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = add nsw i32 %787, %785
  store i32 %788, ptr %786, align 4, !tbaa !6
  br label %807

789:                                              ; preds = %765, %782
  %790 = phi i32 [ %777, %782 ], [ %766, %765 ]
  %791 = phi ptr [ %776, %782 ], [ %4, %765 ]
  %792 = phi i64 [ %775, %782 ], [ 0, %765 ]
  %793 = add nsw i32 %790, 1
  store i32 %793, ptr %791, align 4, !tbaa !6
  %794 = getelementptr inbounds i32, ptr %7, i64 %792
  %795 = load i32, ptr %794, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %6, i64 %792
  br label %807

797:                                              ; preds = %774
  %798 = icmp eq i32 %777, %780
  br i1 %798, label %799, label %805

799:                                              ; preds = %797
  store i32 0, ptr %776, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %8, i64 %775
  %801 = load i32, ptr %800, align 4, !tbaa !6
  %802 = getelementptr inbounds i32, ptr %6, i64 %775
  store i32 %801, ptr %802, align 4, !tbaa !6
  %803 = add nuw nsw i64 %775, 1
  %804 = icmp eq i64 %803, %671
  br i1 %804, label %812, label %774, !llvm.loop !788

805:                                              ; preds = %770, %797
  %806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

807:                                              ; preds = %783, %789
  %808 = phi ptr [ %796, %789 ], [ %776, %783 ]
  %809 = phi i32 [ %795, %789 ], [ 1, %783 ]
  %810 = load i32, ptr %808, align 4, !tbaa !6
  %811 = add nsw i32 %810, %809
  store i32 %811, ptr %808, align 4, !tbaa !6
  br label %812

812:                                              ; preds = %799, %807, %772, %747
  %813 = icmp eq i32 %764, %5
  br i1 %813, label %5556, label %674, !llvm.loop !789

814:                                              ; preds = %657, %954
  %815 = phi i32 [ 0, %657 ], [ %903, %954 ]
  %816 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %658, label %817, label %886

817:                                              ; preds = %814, %876
  %818 = phi i32 [ %885, %876 ], [ 0, %814 ]
  %819 = phi i64 [ %827, %876 ], [ %662, %814 ]
  %820 = phi i64 [ %884, %876 ], [ %661, %814 ]
  %821 = phi i32 [ %882, %876 ], [ %816, %814 ]
  %822 = sub i32 %660, %818
  %823 = tail call i32 @llvm.smin.i32(i32 %822, i32 0)
  %824 = sub i32 %822, %823
  %825 = zext i32 %824 to i64
  %826 = add nuw nsw i64 %825, 1
  %827 = add nsw i64 %819, -1
  %828 = icmp ult i32 %824, 31
  br i1 %828, label %864, label %829

829:                                              ; preds = %817
  %830 = and i64 %826, 8589934560
  %831 = sub i64 %820, %830
  br label %832

832:                                              ; preds = %832, %829
  %833 = phi i64 [ 0, %829 ], [ %856, %832 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %852, %832 ]
  %835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %853, %832 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %854, %832 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %855, %832 ]
  %838 = sub i64 %820, %833
  %839 = getelementptr inbounds i32, ptr %11, i64 %838
  %840 = getelementptr inbounds i32, ptr %839, i64 -7
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %839, i64 -15
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %839, i64 -23
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = getelementptr inbounds i32, ptr %839, i64 -31
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !6
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = mul <8 x i32> %842, %834
  %853 = mul <8 x i32> %845, %835
  %854 = mul <8 x i32> %848, %836
  %855 = mul <8 x i32> %851, %837
  %856 = add nuw i64 %833, 32
  %857 = icmp eq i64 %856, %830
  br i1 %857, label %858, label %832, !llvm.loop !790

858:                                              ; preds = %832
  %859 = mul <8 x i32> %853, %852
  %860 = mul <8 x i32> %854, %859
  %861 = mul <8 x i32> %855, %860
  %862 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %861)
  %863 = icmp eq i64 %826, %830
  br i1 %863, label %876, label %864

864:                                              ; preds = %817, %858
  %865 = phi i64 [ %820, %817 ], [ %831, %858 ]
  %866 = phi i32 [ 1, %817 ], [ %862, %858 ]
  br label %867

867:                                              ; preds = %864, %867
  %868 = phi i64 [ %873, %867 ], [ %865, %864 ]
  %869 = phi i32 [ %872, %867 ], [ %866, %864 ]
  %870 = getelementptr inbounds i32, ptr %11, i64 %868
  %871 = load i32, ptr %870, align 4, !tbaa !6
  %872 = mul nsw i32 %871, %869
  %873 = add nsw i64 %868, -1
  %874 = trunc i64 %868 to i32
  %875 = icmp sgt i32 %874, 0
  br i1 %875, label %867, label %876, !llvm.loop !791

876:                                              ; preds = %867, %858
  %877 = phi i32 [ %862, %858 ], [ %872, %867 ]
  %878 = and i64 %827, 4294967295
  %879 = getelementptr inbounds i32, ptr %6, i64 %878
  %880 = load i32, ptr %879, align 4, !tbaa !6
  %881 = mul nsw i32 %880, %877
  %882 = add nsw i32 %881, %821
  %883 = icmp sgt i64 %819, 2
  %884 = add nsw i64 %820, -1
  %885 = add i32 %818, 1
  br i1 %883, label %817, label %886, !llvm.loop !792

886:                                              ; preds = %876, %814
  %887 = phi i32 [ %816, %814 ], [ %882, %876 ]
  %888 = icmp slt i32 %887, %5
  br i1 %888, label %891, label %889

889:                                              ; preds = %886
  %890 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

891:                                              ; preds = %886
  %892 = sext i32 %887 to i64
  %893 = getelementptr inbounds i64, ptr %641, i64 %892
  %894 = load i64, ptr %893, align 8, !tbaa !121
  %895 = trunc i64 %894 to i32
  %896 = load i32, ptr %643, align 4, !tbaa !6
  %897 = sitofp i32 %896 to double
  %898 = sitofp i32 %895 to double
  %899 = fmul fast double %898, %898
  %900 = fmul fast double %899, %899
  %901 = fadd fast double %900, %897
  %902 = fptosi double %901 to i32
  store i32 %902, ptr %643, align 4, !tbaa !6
  %903 = add nuw nsw i32 %815, 1
  br i1 %659, label %904, label %954

904:                                              ; preds = %891
  %905 = load i32, ptr %4, align 4, !tbaa !6
  %906 = load i32, ptr %12, align 4, !tbaa !6
  %907 = add nsw i32 %906, -1
  %908 = icmp slt i32 %905, %907
  br i1 %908, label %931, label %909

909:                                              ; preds = %904
  %910 = icmp eq i32 %905, %907
  br i1 %910, label %911, label %947

911:                                              ; preds = %909
  store i32 0, ptr %4, align 4, !tbaa !6
  %912 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %912, ptr %6, align 4, !tbaa !6
  br i1 %664, label %954, label %913

913:                                              ; preds = %911, %941
  %914 = phi i64 [ %945, %941 ], [ 1, %911 ]
  %915 = getelementptr inbounds i32, ptr %4, i64 %914
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = getelementptr inbounds i32, ptr %12, i64 %914
  %918 = load i32, ptr %917, align 4, !tbaa !6
  %919 = add nsw i32 %918, -1
  %920 = icmp slt i32 %916, %919
  br i1 %920, label %921, label %939

921:                                              ; preds = %913
  br i1 %908, label %931, label %922

922:                                              ; preds = %921
  %923 = shl i64 %914, 32
  %924 = add i64 %923, -4294967296
  %925 = ashr exact i64 %924, 32
  %926 = getelementptr inbounds i32, ptr %7, i64 %925
  %927 = load i32, ptr %926, align 4, !tbaa !6
  %928 = getelementptr inbounds i32, ptr %6, i64 %914
  %929 = load i32, ptr %928, align 4, !tbaa !6
  %930 = add nsw i32 %929, %927
  store i32 %930, ptr %928, align 4, !tbaa !6
  br label %949

931:                                              ; preds = %904, %921
  %932 = phi i32 [ %916, %921 ], [ %905, %904 ]
  %933 = phi ptr [ %915, %921 ], [ %4, %904 ]
  %934 = phi i64 [ %914, %921 ], [ 0, %904 ]
  %935 = add nsw i32 %932, 1
  store i32 %935, ptr %933, align 4, !tbaa !6
  %936 = getelementptr inbounds i32, ptr %7, i64 %934
  %937 = load i32, ptr %936, align 4, !tbaa !6
  %938 = getelementptr inbounds i32, ptr %6, i64 %934
  br label %949

939:                                              ; preds = %913
  %940 = icmp eq i32 %916, %919
  br i1 %940, label %941, label %947

941:                                              ; preds = %939
  store i32 0, ptr %915, align 4, !tbaa !6
  %942 = getelementptr inbounds i32, ptr %8, i64 %914
  %943 = load i32, ptr %942, align 4, !tbaa !6
  %944 = getelementptr inbounds i32, ptr %6, i64 %914
  store i32 %943, ptr %944, align 4, !tbaa !6
  %945 = add nuw nsw i64 %914, 1
  %946 = icmp eq i64 %945, %662
  br i1 %946, label %954, label %913, !llvm.loop !793

947:                                              ; preds = %909, %939
  %948 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

949:                                              ; preds = %922, %931
  %950 = phi ptr [ %938, %931 ], [ %915, %922 ]
  %951 = phi i32 [ %937, %931 ], [ 1, %922 ]
  %952 = load i32, ptr %950, align 4, !tbaa !6
  %953 = add nsw i32 %952, %951
  store i32 %953, ptr %950, align 4, !tbaa !6
  br label %954

954:                                              ; preds = %941, %949, %911, %891
  %955 = icmp eq i32 %903, %5
  br i1 %955, label %5556, label %814, !llvm.loop !794

956:                                              ; preds = %650
  %957 = getelementptr inbounds i32, ptr %3, i64 %19
  %958 = load i32, ptr %957, align 4, !tbaa !6
  %959 = icmp eq i32 %958, 0
  %960 = icmp sgt i32 %5, 0
  br i1 %959, label %970, label %961

961:                                              ; preds = %956
  br i1 %960, label %962, label %5556

962:                                              ; preds = %961
  %963 = icmp sgt i32 %13, 1
  %964 = icmp sgt i32 %13, 0
  %965 = add i32 %13, -2
  %966 = zext i32 %965 to i64
  %967 = zext i32 %13 to i64
  %968 = add nuw i32 %5, 1
  %969 = icmp eq i32 %13, 1
  br label %1113

970:                                              ; preds = %956
  br i1 %960, label %971, label %5556

971:                                              ; preds = %970
  %972 = icmp sgt i32 %13, 1
  %973 = icmp sgt i32 %13, 0
  %974 = add i32 %13, -2
  %975 = zext i32 %974 to i64
  %976 = zext i32 %13 to i64
  %977 = add nuw i32 %5, 1
  %978 = icmp eq i32 %13, 1
  br label %979

979:                                              ; preds = %971, %1111
  %980 = phi i32 [ 0, %971 ], [ %1063, %1111 ]
  %981 = phi double [ 0.000000e+00, %971 ], [ %1062, %1111 ]
  %982 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %972, label %983, label %1052

983:                                              ; preds = %979, %1042
  %984 = phi i32 [ %1051, %1042 ], [ 0, %979 ]
  %985 = phi i64 [ %993, %1042 ], [ %976, %979 ]
  %986 = phi i64 [ %1050, %1042 ], [ %975, %979 ]
  %987 = phi i32 [ %1048, %1042 ], [ %982, %979 ]
  %988 = sub i32 %974, %984
  %989 = tail call i32 @llvm.smin.i32(i32 %988, i32 0)
  %990 = sub i32 %988, %989
  %991 = zext i32 %990 to i64
  %992 = add nuw nsw i64 %991, 1
  %993 = add nsw i64 %985, -1
  %994 = icmp ult i32 %990, 31
  br i1 %994, label %1030, label %995

995:                                              ; preds = %983
  %996 = and i64 %992, 8589934560
  %997 = sub i64 %986, %996
  br label %998

998:                                              ; preds = %998, %995
  %999 = phi i64 [ 0, %995 ], [ %1022, %998 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1018, %998 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1019, %998 ]
  %1002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1020, %998 ]
  %1003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1021, %998 ]
  %1004 = sub i64 %986, %999
  %1005 = getelementptr inbounds i32, ptr %9, i64 %1004
  %1006 = getelementptr inbounds i32, ptr %1005, i64 -7
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1005, i64 -15
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1005, i64 -23
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = getelementptr inbounds i32, ptr %1005, i64 -31
  %1016 = load <8 x i32>, ptr %1015, align 4, !tbaa !6
  %1017 = shufflevector <8 x i32> %1016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1018 = mul <8 x i32> %1008, %1000
  %1019 = mul <8 x i32> %1011, %1001
  %1020 = mul <8 x i32> %1014, %1002
  %1021 = mul <8 x i32> %1017, %1003
  %1022 = add nuw i64 %999, 32
  %1023 = icmp eq i64 %1022, %996
  br i1 %1023, label %1024, label %998, !llvm.loop !795

1024:                                             ; preds = %998
  %1025 = mul <8 x i32> %1019, %1018
  %1026 = mul <8 x i32> %1020, %1025
  %1027 = mul <8 x i32> %1021, %1026
  %1028 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1027)
  %1029 = icmp eq i64 %992, %996
  br i1 %1029, label %1042, label %1030

1030:                                             ; preds = %983, %1024
  %1031 = phi i64 [ %986, %983 ], [ %997, %1024 ]
  %1032 = phi i32 [ 1, %983 ], [ %1028, %1024 ]
  br label %1033

1033:                                             ; preds = %1030, %1033
  %1034 = phi i64 [ %1039, %1033 ], [ %1031, %1030 ]
  %1035 = phi i32 [ %1038, %1033 ], [ %1032, %1030 ]
  %1036 = getelementptr inbounds i32, ptr %9, i64 %1034
  %1037 = load i32, ptr %1036, align 4, !tbaa !6
  %1038 = mul nsw i32 %1037, %1035
  %1039 = add nsw i64 %1034, -1
  %1040 = trunc i64 %1034 to i32
  %1041 = icmp sgt i32 %1040, 0
  br i1 %1041, label %1033, label %1042, !llvm.loop !796

1042:                                             ; preds = %1033, %1024
  %1043 = phi i32 [ %1028, %1024 ], [ %1038, %1033 ]
  %1044 = and i64 %993, 4294967295
  %1045 = getelementptr inbounds i32, ptr %6, i64 %1044
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = mul nsw i32 %1046, %1043
  %1048 = add nsw i32 %1047, %987
  %1049 = icmp sgt i64 %985, 2
  %1050 = add nsw i64 %986, -1
  %1051 = add i32 %984, 1
  br i1 %1049, label %983, label %1052, !llvm.loop !797

1052:                                             ; preds = %1042, %979
  %1053 = phi i32 [ %982, %979 ], [ %1048, %1042 ]
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds i64, ptr %641, i64 %1054
  %1056 = load i64, ptr %1055, align 8, !tbaa !121
  %1057 = trunc i64 %1056 to i32
  %1058 = load i32, ptr %643, align 4, !tbaa !6
  %1059 = mul i32 %1057, %1057
  %1060 = mul i32 %1059, %1059
  %1061 = add nsw i32 %1060, %1058
  store i32 %1061, ptr %643, align 4, !tbaa !6
  %1062 = fadd fast double %981, 1.000000e+00
  %1063 = add nuw nsw i32 %980, 1
  br i1 %973, label %1064, label %1111

1064:                                             ; preds = %1052
  %1065 = load i32, ptr %4, align 4, !tbaa !6
  %1066 = load i32, ptr %12, align 4, !tbaa !6
  %1067 = add nsw i32 %1066, -1
  %1068 = icmp slt i32 %1065, %1067
  br i1 %1068, label %1088, label %1069

1069:                                             ; preds = %1064
  %1070 = icmp eq i32 %1065, %1067
  br i1 %1070, label %1071, label %1104

1071:                                             ; preds = %1069
  store i32 0, ptr %4, align 4, !tbaa !6
  %1072 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1072, ptr %6, align 4, !tbaa !6
  br i1 %978, label %1111, label %1073

1073:                                             ; preds = %1071, %1098
  %1074 = phi i64 [ %1102, %1098 ], [ 1, %1071 ]
  %1075 = getelementptr inbounds i32, ptr %4, i64 %1074
  %1076 = load i32, ptr %1075, align 4, !tbaa !6
  %1077 = getelementptr inbounds i32, ptr %12, i64 %1074
  %1078 = load i32, ptr %1077, align 4, !tbaa !6
  %1079 = add nsw i32 %1078, -1
  %1080 = icmp slt i32 %1076, %1079
  br i1 %1080, label %1081, label %1096

1081:                                             ; preds = %1073
  br i1 %1068, label %1088, label %1082

1082:                                             ; preds = %1081
  %1083 = getelementptr inbounds i32, ptr %7, i64 %1074
  %1084 = load i32, ptr %1083, align 4, !tbaa !6
  %1085 = getelementptr inbounds i32, ptr %6, i64 %1074
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = add nsw i32 %1086, %1084
  store i32 %1087, ptr %1085, align 4, !tbaa !6
  br label %1106

1088:                                             ; preds = %1064, %1081
  %1089 = phi i32 [ %1076, %1081 ], [ %1065, %1064 ]
  %1090 = phi ptr [ %1075, %1081 ], [ %4, %1064 ]
  %1091 = phi i64 [ %1074, %1081 ], [ 0, %1064 ]
  %1092 = add nsw i32 %1089, 1
  store i32 %1092, ptr %1090, align 4, !tbaa !6
  %1093 = getelementptr inbounds i32, ptr %7, i64 %1091
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1091
  br label %1106

1096:                                             ; preds = %1073
  %1097 = icmp eq i32 %1076, %1079
  br i1 %1097, label %1098, label %1104

1098:                                             ; preds = %1096
  store i32 0, ptr %1075, align 4, !tbaa !6
  %1099 = getelementptr inbounds i32, ptr %8, i64 %1074
  %1100 = load i32, ptr %1099, align 4, !tbaa !6
  %1101 = getelementptr inbounds i32, ptr %6, i64 %1074
  store i32 %1100, ptr %1101, align 4, !tbaa !6
  %1102 = add nuw nsw i64 %1074, 1
  %1103 = icmp eq i64 %1102, %976
  br i1 %1103, label %1111, label %1073, !llvm.loop !798

1104:                                             ; preds = %1069, %1096
  %1105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1106:                                             ; preds = %1082, %1088
  %1107 = phi ptr [ %1095, %1088 ], [ %1075, %1082 ]
  %1108 = phi i32 [ %1094, %1088 ], [ 1, %1082 ]
  %1109 = load i32, ptr %1107, align 4, !tbaa !6
  %1110 = add nsw i32 %1109, %1108
  store i32 %1110, ptr %1107, align 4, !tbaa !6
  br label %1111

1111:                                             ; preds = %1098, %1106, %1071, %1052
  %1112 = icmp eq i32 %1063, %5
  br i1 %1112, label %5556, label %979, !llvm.loop !799

1113:                                             ; preds = %962, %1250
  %1114 = phi i32 [ 0, %962 ], [ %1199, %1250 ]
  %1115 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %963, label %1116, label %1185

1116:                                             ; preds = %1113, %1175
  %1117 = phi i32 [ %1184, %1175 ], [ 0, %1113 ]
  %1118 = phi i64 [ %1126, %1175 ], [ %967, %1113 ]
  %1119 = phi i64 [ %1183, %1175 ], [ %966, %1113 ]
  %1120 = phi i32 [ %1181, %1175 ], [ %1115, %1113 ]
  %1121 = sub i32 %965, %1117
  %1122 = tail call i32 @llvm.smin.i32(i32 %1121, i32 0)
  %1123 = sub i32 %1121, %1122
  %1124 = zext i32 %1123 to i64
  %1125 = add nuw nsw i64 %1124, 1
  %1126 = add nsw i64 %1118, -1
  %1127 = icmp ult i32 %1123, 31
  br i1 %1127, label %1163, label %1128

1128:                                             ; preds = %1116
  %1129 = and i64 %1125, 8589934560
  %1130 = sub i64 %1119, %1129
  br label %1131

1131:                                             ; preds = %1131, %1128
  %1132 = phi i64 [ 0, %1128 ], [ %1155, %1131 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1128 ], [ %1151, %1131 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1128 ], [ %1152, %1131 ]
  %1135 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1128 ], [ %1153, %1131 ]
  %1136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1128 ], [ %1154, %1131 ]
  %1137 = sub i64 %1119, %1132
  %1138 = getelementptr inbounds i32, ptr %11, i64 %1137
  %1139 = getelementptr inbounds i32, ptr %1138, i64 -7
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1138, i64 -15
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1138, i64 -23
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = getelementptr inbounds i32, ptr %1138, i64 -31
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !6
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = mul <8 x i32> %1141, %1133
  %1152 = mul <8 x i32> %1144, %1134
  %1153 = mul <8 x i32> %1147, %1135
  %1154 = mul <8 x i32> %1150, %1136
  %1155 = add nuw i64 %1132, 32
  %1156 = icmp eq i64 %1155, %1129
  br i1 %1156, label %1157, label %1131, !llvm.loop !800

1157:                                             ; preds = %1131
  %1158 = mul <8 x i32> %1152, %1151
  %1159 = mul <8 x i32> %1153, %1158
  %1160 = mul <8 x i32> %1154, %1159
  %1161 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1160)
  %1162 = icmp eq i64 %1125, %1129
  br i1 %1162, label %1175, label %1163

1163:                                             ; preds = %1116, %1157
  %1164 = phi i64 [ %1119, %1116 ], [ %1130, %1157 ]
  %1165 = phi i32 [ 1, %1116 ], [ %1161, %1157 ]
  br label %1166

1166:                                             ; preds = %1163, %1166
  %1167 = phi i64 [ %1172, %1166 ], [ %1164, %1163 ]
  %1168 = phi i32 [ %1171, %1166 ], [ %1165, %1163 ]
  %1169 = getelementptr inbounds i32, ptr %11, i64 %1167
  %1170 = load i32, ptr %1169, align 4, !tbaa !6
  %1171 = mul nsw i32 %1170, %1168
  %1172 = add nsw i64 %1167, -1
  %1173 = trunc i64 %1167 to i32
  %1174 = icmp sgt i32 %1173, 0
  br i1 %1174, label %1166, label %1175, !llvm.loop !801

1175:                                             ; preds = %1166, %1157
  %1176 = phi i32 [ %1161, %1157 ], [ %1171, %1166 ]
  %1177 = and i64 %1126, 4294967295
  %1178 = getelementptr inbounds i32, ptr %6, i64 %1177
  %1179 = load i32, ptr %1178, align 4, !tbaa !6
  %1180 = mul nsw i32 %1179, %1176
  %1181 = add nsw i32 %1180, %1120
  %1182 = icmp sgt i64 %1118, 2
  %1183 = add nsw i64 %1119, -1
  %1184 = add i32 %1117, 1
  br i1 %1182, label %1116, label %1185, !llvm.loop !802

1185:                                             ; preds = %1175, %1113
  %1186 = phi i32 [ %1115, %1113 ], [ %1181, %1175 ]
  %1187 = icmp slt i32 %1186, %5
  br i1 %1187, label %1190, label %1188

1188:                                             ; preds = %1185
  %1189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

1190:                                             ; preds = %1185
  %1191 = sext i32 %1186 to i64
  %1192 = getelementptr inbounds i64, ptr %641, i64 %1191
  %1193 = load i64, ptr %1192, align 8, !tbaa !121
  %1194 = trunc i64 %1193 to i32
  %1195 = load i32, ptr %643, align 4, !tbaa !6
  %1196 = mul i32 %1194, %1194
  %1197 = mul i32 %1196, %1196
  %1198 = add nsw i32 %1197, %1195
  store i32 %1198, ptr %643, align 4, !tbaa !6
  %1199 = add nuw nsw i32 %1114, 1
  br i1 %964, label %1200, label %1250

1200:                                             ; preds = %1190
  %1201 = load i32, ptr %4, align 4, !tbaa !6
  %1202 = load i32, ptr %12, align 4, !tbaa !6
  %1203 = add nsw i32 %1202, -1
  %1204 = icmp slt i32 %1201, %1203
  br i1 %1204, label %1227, label %1205

1205:                                             ; preds = %1200
  %1206 = icmp eq i32 %1201, %1203
  br i1 %1206, label %1207, label %1243

1207:                                             ; preds = %1205
  store i32 0, ptr %4, align 4, !tbaa !6
  %1208 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1208, ptr %6, align 4, !tbaa !6
  br i1 %969, label %1250, label %1209

1209:                                             ; preds = %1207, %1237
  %1210 = phi i64 [ %1241, %1237 ], [ 1, %1207 ]
  %1211 = getelementptr inbounds i32, ptr %4, i64 %1210
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = getelementptr inbounds i32, ptr %12, i64 %1210
  %1214 = load i32, ptr %1213, align 4, !tbaa !6
  %1215 = add nsw i32 %1214, -1
  %1216 = icmp slt i32 %1212, %1215
  br i1 %1216, label %1217, label %1235

1217:                                             ; preds = %1209
  br i1 %1204, label %1227, label %1218

1218:                                             ; preds = %1217
  %1219 = shl i64 %1210, 32
  %1220 = add i64 %1219, -4294967296
  %1221 = ashr exact i64 %1220, 32
  %1222 = getelementptr inbounds i32, ptr %7, i64 %1221
  %1223 = load i32, ptr %1222, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %6, i64 %1210
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = add nsw i32 %1225, %1223
  store i32 %1226, ptr %1224, align 4, !tbaa !6
  br label %1245

1227:                                             ; preds = %1200, %1217
  %1228 = phi i32 [ %1212, %1217 ], [ %1201, %1200 ]
  %1229 = phi ptr [ %1211, %1217 ], [ %4, %1200 ]
  %1230 = phi i64 [ %1210, %1217 ], [ 0, %1200 ]
  %1231 = add nsw i32 %1228, 1
  store i32 %1231, ptr %1229, align 4, !tbaa !6
  %1232 = getelementptr inbounds i32, ptr %7, i64 %1230
  %1233 = load i32, ptr %1232, align 4, !tbaa !6
  %1234 = getelementptr inbounds i32, ptr %6, i64 %1230
  br label %1245

1235:                                             ; preds = %1209
  %1236 = icmp eq i32 %1212, %1215
  br i1 %1236, label %1237, label %1243

1237:                                             ; preds = %1235
  store i32 0, ptr %1211, align 4, !tbaa !6
  %1238 = getelementptr inbounds i32, ptr %8, i64 %1210
  %1239 = load i32, ptr %1238, align 4, !tbaa !6
  %1240 = getelementptr inbounds i32, ptr %6, i64 %1210
  store i32 %1239, ptr %1240, align 4, !tbaa !6
  %1241 = add nuw nsw i64 %1210, 1
  %1242 = icmp eq i64 %1241, %967
  br i1 %1242, label %1250, label %1209, !llvm.loop !803

1243:                                             ; preds = %1205, %1235
  %1244 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1245:                                             ; preds = %1218, %1227
  %1246 = phi ptr [ %1234, %1227 ], [ %1211, %1218 ]
  %1247 = phi i32 [ %1233, %1227 ], [ 1, %1218 ]
  %1248 = load i32, ptr %1246, align 4, !tbaa !6
  %1249 = add nsw i32 %1248, %1247
  store i32 %1249, ptr %1246, align 4, !tbaa !6
  br label %1250

1250:                                             ; preds = %1237, %1245, %1207, %1190
  %1251 = icmp eq i32 %1199, %5
  br i1 %1251, label %5556, label %1113, !llvm.loop !804

1252:                                             ; preds = %650
  %1253 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1441, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

1254:                                             ; preds = %18
  %1255 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1256 = load ptr, ptr %1255, align 8, !tbaa !10
  %1257 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1258 = load ptr, ptr %1257, align 8, !tbaa !10
  store i8 0, ptr %1258, align 1, !tbaa !12
  %1259 = icmp eq i32 %13, 0
  br i1 %1259, label %1260, label %1265

1260:                                             ; preds = %1254
  %1261 = load i64, ptr %1256, align 8, !tbaa !121
  %1262 = trunc i64 %1261 to i8
  %1263 = mul i8 %1262, %1262
  %1264 = mul i8 %1263, %1263
  store i8 %1264, ptr %1258, align 1, !tbaa !12
  br label %5556

1265:                                             ; preds = %1254
  switch i32 %1, label %1871 [
    i32 1, label %1266
    i32 0, label %1575
  ]

1266:                                             ; preds = %1265
  %1267 = getelementptr inbounds i32, ptr %3, i64 %19
  %1268 = load i32, ptr %1267, align 4, !tbaa !6
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp sgt i32 %5, 0
  br i1 %1269, label %1280, label %1271

1271:                                             ; preds = %1266
  br i1 %1270, label %1272, label %5556

1272:                                             ; preds = %1271
  %1273 = icmp sgt i32 %13, 1
  %1274 = icmp sgt i32 %13, 0
  %1275 = add i32 %13, -2
  %1276 = zext i32 %1275 to i64
  %1277 = zext i32 %13 to i64
  %1278 = add nuw i32 %5, 1
  %1279 = icmp eq i32 %13, 1
  br label %1431

1280:                                             ; preds = %1266
  br i1 %1270, label %1281, label %5556

1281:                                             ; preds = %1280
  %1282 = icmp sgt i32 %13, 1
  %1283 = icmp sgt i32 %13, 0
  %1284 = add i32 %13, -2
  %1285 = zext i32 %1284 to i64
  %1286 = zext i32 %13 to i64
  %1287 = add nuw i32 %5, 1
  %1288 = icmp eq i32 %13, 1
  br label %1289

1289:                                             ; preds = %1281, %1429
  %1290 = phi i32 [ 0, %1281 ], [ %1381, %1429 ]
  %1291 = phi double [ 0.000000e+00, %1281 ], [ %1380, %1429 ]
  %1292 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1282, label %1293, label %1362

1293:                                             ; preds = %1289, %1352
  %1294 = phi i32 [ %1361, %1352 ], [ 0, %1289 ]
  %1295 = phi i64 [ %1303, %1352 ], [ %1286, %1289 ]
  %1296 = phi i64 [ %1360, %1352 ], [ %1285, %1289 ]
  %1297 = phi i32 [ %1358, %1352 ], [ %1292, %1289 ]
  %1298 = sub i32 %1284, %1294
  %1299 = tail call i32 @llvm.smin.i32(i32 %1298, i32 0)
  %1300 = sub i32 %1298, %1299
  %1301 = zext i32 %1300 to i64
  %1302 = add nuw nsw i64 %1301, 1
  %1303 = add nsw i64 %1295, -1
  %1304 = icmp ult i32 %1300, 31
  br i1 %1304, label %1340, label %1305

1305:                                             ; preds = %1293
  %1306 = and i64 %1302, 8589934560
  %1307 = sub i64 %1296, %1306
  br label %1308

1308:                                             ; preds = %1308, %1305
  %1309 = phi i64 [ 0, %1305 ], [ %1332, %1308 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1328, %1308 ]
  %1311 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1329, %1308 ]
  %1312 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1330, %1308 ]
  %1313 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1331, %1308 ]
  %1314 = sub i64 %1296, %1309
  %1315 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1316 = getelementptr inbounds i32, ptr %1315, i64 -7
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1315, i64 -15
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1315, i64 -23
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = getelementptr inbounds i32, ptr %1315, i64 -31
  %1326 = load <8 x i32>, ptr %1325, align 4, !tbaa !6
  %1327 = shufflevector <8 x i32> %1326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1328 = mul <8 x i32> %1318, %1310
  %1329 = mul <8 x i32> %1321, %1311
  %1330 = mul <8 x i32> %1324, %1312
  %1331 = mul <8 x i32> %1327, %1313
  %1332 = add nuw i64 %1309, 32
  %1333 = icmp eq i64 %1332, %1306
  br i1 %1333, label %1334, label %1308, !llvm.loop !805

1334:                                             ; preds = %1308
  %1335 = mul <8 x i32> %1329, %1328
  %1336 = mul <8 x i32> %1330, %1335
  %1337 = mul <8 x i32> %1331, %1336
  %1338 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1337)
  %1339 = icmp eq i64 %1302, %1306
  br i1 %1339, label %1352, label %1340

1340:                                             ; preds = %1293, %1334
  %1341 = phi i64 [ %1296, %1293 ], [ %1307, %1334 ]
  %1342 = phi i32 [ 1, %1293 ], [ %1338, %1334 ]
  br label %1343

1343:                                             ; preds = %1340, %1343
  %1344 = phi i64 [ %1349, %1343 ], [ %1341, %1340 ]
  %1345 = phi i32 [ %1348, %1343 ], [ %1342, %1340 ]
  %1346 = getelementptr inbounds i32, ptr %9, i64 %1344
  %1347 = load i32, ptr %1346, align 4, !tbaa !6
  %1348 = mul nsw i32 %1347, %1345
  %1349 = add nsw i64 %1344, -1
  %1350 = trunc i64 %1344 to i32
  %1351 = icmp sgt i32 %1350, 0
  br i1 %1351, label %1343, label %1352, !llvm.loop !806

1352:                                             ; preds = %1343, %1334
  %1353 = phi i32 [ %1338, %1334 ], [ %1348, %1343 ]
  %1354 = and i64 %1303, 4294967295
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !6
  %1357 = mul nsw i32 %1356, %1353
  %1358 = add nsw i32 %1357, %1297
  %1359 = icmp sgt i64 %1295, 2
  %1360 = add nsw i64 %1296, -1
  %1361 = add i32 %1294, 1
  br i1 %1359, label %1293, label %1362, !llvm.loop !807

1362:                                             ; preds = %1352, %1289
  %1363 = phi i32 [ %1292, %1289 ], [ %1358, %1352 ]
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds double, ptr %2, i64 %1364
  %1366 = load double, ptr %1365, align 8, !tbaa !19
  %1367 = getelementptr inbounds i64, ptr %1256, i64 %1364
  %1368 = load i64, ptr %1367, align 8, !tbaa !121
  %1369 = trunc i64 %1368 to i32
  %1370 = load i8, ptr %1258, align 1, !tbaa !12
  %1371 = sitofp i8 %1370 to double
  %1372 = shl i32 %1369, 24
  %1373 = ashr exact i32 %1372, 24
  %1374 = sitofp i32 %1373 to double
  %1375 = fmul fast double %1366, %1374
  %1376 = fmul fast double %1375, %1375
  %1377 = fmul fast double %1376, %1376
  %1378 = fadd fast double %1377, %1371
  %1379 = fptosi double %1378 to i8
  store i8 %1379, ptr %1258, align 1, !tbaa !12
  %1380 = fadd fast double %1366, %1291
  %1381 = add nuw nsw i32 %1290, 1
  br i1 %1283, label %1382, label %1429

1382:                                             ; preds = %1362
  %1383 = load i32, ptr %4, align 4, !tbaa !6
  %1384 = load i32, ptr %12, align 4, !tbaa !6
  %1385 = add nsw i32 %1384, -1
  %1386 = icmp slt i32 %1383, %1385
  br i1 %1386, label %1406, label %1387

1387:                                             ; preds = %1382
  %1388 = icmp eq i32 %1383, %1385
  br i1 %1388, label %1389, label %1422

1389:                                             ; preds = %1387
  store i32 0, ptr %4, align 4, !tbaa !6
  %1390 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1390, ptr %6, align 4, !tbaa !6
  br i1 %1288, label %1429, label %1391

1391:                                             ; preds = %1389, %1416
  %1392 = phi i64 [ %1420, %1416 ], [ 1, %1389 ]
  %1393 = getelementptr inbounds i32, ptr %4, i64 %1392
  %1394 = load i32, ptr %1393, align 4, !tbaa !6
  %1395 = getelementptr inbounds i32, ptr %12, i64 %1392
  %1396 = load i32, ptr %1395, align 4, !tbaa !6
  %1397 = add nsw i32 %1396, -1
  %1398 = icmp slt i32 %1394, %1397
  br i1 %1398, label %1399, label %1414

1399:                                             ; preds = %1391
  br i1 %1386, label %1406, label %1400

1400:                                             ; preds = %1399
  %1401 = getelementptr inbounds i32, ptr %7, i64 %1392
  %1402 = load i32, ptr %1401, align 4, !tbaa !6
  %1403 = getelementptr inbounds i32, ptr %6, i64 %1392
  %1404 = load i32, ptr %1403, align 4, !tbaa !6
  %1405 = add nsw i32 %1404, %1402
  store i32 %1405, ptr %1403, align 4, !tbaa !6
  br label %1424

1406:                                             ; preds = %1382, %1399
  %1407 = phi i32 [ %1394, %1399 ], [ %1383, %1382 ]
  %1408 = phi ptr [ %1393, %1399 ], [ %4, %1382 ]
  %1409 = phi i64 [ %1392, %1399 ], [ 0, %1382 ]
  %1410 = add nsw i32 %1407, 1
  store i32 %1410, ptr %1408, align 4, !tbaa !6
  %1411 = getelementptr inbounds i32, ptr %7, i64 %1409
  %1412 = load i32, ptr %1411, align 4, !tbaa !6
  %1413 = getelementptr inbounds i32, ptr %6, i64 %1409
  br label %1424

1414:                                             ; preds = %1391
  %1415 = icmp eq i32 %1394, %1397
  br i1 %1415, label %1416, label %1422

1416:                                             ; preds = %1414
  store i32 0, ptr %1393, align 4, !tbaa !6
  %1417 = getelementptr inbounds i32, ptr %8, i64 %1392
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = getelementptr inbounds i32, ptr %6, i64 %1392
  store i32 %1418, ptr %1419, align 4, !tbaa !6
  %1420 = add nuw nsw i64 %1392, 1
  %1421 = icmp eq i64 %1420, %1286
  br i1 %1421, label %1429, label %1391, !llvm.loop !808

1422:                                             ; preds = %1387, %1414
  %1423 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1424:                                             ; preds = %1400, %1406
  %1425 = phi ptr [ %1413, %1406 ], [ %1393, %1400 ]
  %1426 = phi i32 [ %1412, %1406 ], [ 1, %1400 ]
  %1427 = load i32, ptr %1425, align 4, !tbaa !6
  %1428 = add nsw i32 %1427, %1426
  store i32 %1428, ptr %1425, align 4, !tbaa !6
  br label %1429

1429:                                             ; preds = %1416, %1424, %1389, %1362
  %1430 = icmp eq i32 %1381, %5
  br i1 %1430, label %5556, label %1289, !llvm.loop !809

1431:                                             ; preds = %1272, %1573
  %1432 = phi i32 [ 0, %1272 ], [ %1522, %1573 ]
  %1433 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1273, label %1434, label %1503

1434:                                             ; preds = %1431, %1493
  %1435 = phi i32 [ %1502, %1493 ], [ 0, %1431 ]
  %1436 = phi i64 [ %1444, %1493 ], [ %1277, %1431 ]
  %1437 = phi i64 [ %1501, %1493 ], [ %1276, %1431 ]
  %1438 = phi i32 [ %1499, %1493 ], [ %1433, %1431 ]
  %1439 = sub i32 %1275, %1435
  %1440 = tail call i32 @llvm.smin.i32(i32 %1439, i32 0)
  %1441 = sub i32 %1439, %1440
  %1442 = zext i32 %1441 to i64
  %1443 = add nuw nsw i64 %1442, 1
  %1444 = add nsw i64 %1436, -1
  %1445 = icmp ult i32 %1441, 31
  br i1 %1445, label %1481, label %1446

1446:                                             ; preds = %1434
  %1447 = and i64 %1443, 8589934560
  %1448 = sub i64 %1437, %1447
  br label %1449

1449:                                             ; preds = %1449, %1446
  %1450 = phi i64 [ 0, %1446 ], [ %1473, %1449 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1446 ], [ %1469, %1449 ]
  %1452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1446 ], [ %1470, %1449 ]
  %1453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1446 ], [ %1471, %1449 ]
  %1454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1446 ], [ %1472, %1449 ]
  %1455 = sub i64 %1437, %1450
  %1456 = getelementptr inbounds i32, ptr %11, i64 %1455
  %1457 = getelementptr inbounds i32, ptr %1456, i64 -7
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !6
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = getelementptr inbounds i32, ptr %1456, i64 -15
  %1461 = load <8 x i32>, ptr %1460, align 4, !tbaa !6
  %1462 = shufflevector <8 x i32> %1461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1463 = getelementptr inbounds i32, ptr %1456, i64 -23
  %1464 = load <8 x i32>, ptr %1463, align 4, !tbaa !6
  %1465 = shufflevector <8 x i32> %1464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1466 = getelementptr inbounds i32, ptr %1456, i64 -31
  %1467 = load <8 x i32>, ptr %1466, align 4, !tbaa !6
  %1468 = shufflevector <8 x i32> %1467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1469 = mul <8 x i32> %1459, %1451
  %1470 = mul <8 x i32> %1462, %1452
  %1471 = mul <8 x i32> %1465, %1453
  %1472 = mul <8 x i32> %1468, %1454
  %1473 = add nuw i64 %1450, 32
  %1474 = icmp eq i64 %1473, %1447
  br i1 %1474, label %1475, label %1449, !llvm.loop !810

1475:                                             ; preds = %1449
  %1476 = mul <8 x i32> %1470, %1469
  %1477 = mul <8 x i32> %1471, %1476
  %1478 = mul <8 x i32> %1472, %1477
  %1479 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1478)
  %1480 = icmp eq i64 %1443, %1447
  br i1 %1480, label %1493, label %1481

1481:                                             ; preds = %1434, %1475
  %1482 = phi i64 [ %1437, %1434 ], [ %1448, %1475 ]
  %1483 = phi i32 [ 1, %1434 ], [ %1479, %1475 ]
  br label %1484

1484:                                             ; preds = %1481, %1484
  %1485 = phi i64 [ %1490, %1484 ], [ %1482, %1481 ]
  %1486 = phi i32 [ %1489, %1484 ], [ %1483, %1481 ]
  %1487 = getelementptr inbounds i32, ptr %11, i64 %1485
  %1488 = load i32, ptr %1487, align 4, !tbaa !6
  %1489 = mul nsw i32 %1488, %1486
  %1490 = add nsw i64 %1485, -1
  %1491 = trunc i64 %1485 to i32
  %1492 = icmp sgt i32 %1491, 0
  br i1 %1492, label %1484, label %1493, !llvm.loop !811

1493:                                             ; preds = %1484, %1475
  %1494 = phi i32 [ %1479, %1475 ], [ %1489, %1484 ]
  %1495 = and i64 %1444, 4294967295
  %1496 = getelementptr inbounds i32, ptr %6, i64 %1495
  %1497 = load i32, ptr %1496, align 4, !tbaa !6
  %1498 = mul nsw i32 %1497, %1494
  %1499 = add nsw i32 %1498, %1438
  %1500 = icmp sgt i64 %1436, 2
  %1501 = add nsw i64 %1437, -1
  %1502 = add i32 %1435, 1
  br i1 %1500, label %1434, label %1503, !llvm.loop !812

1503:                                             ; preds = %1493, %1431
  %1504 = phi i32 [ %1433, %1431 ], [ %1499, %1493 ]
  %1505 = icmp slt i32 %1504, %5
  br i1 %1505, label %1508, label %1506

1506:                                             ; preds = %1503
  %1507 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

1508:                                             ; preds = %1503
  %1509 = sext i32 %1504 to i64
  %1510 = getelementptr inbounds i64, ptr %1256, i64 %1509
  %1511 = load i64, ptr %1510, align 8, !tbaa !121
  %1512 = trunc i64 %1511 to i32
  %1513 = load i8, ptr %1258, align 1, !tbaa !12
  %1514 = sitofp i8 %1513 to double
  %1515 = shl i32 %1512, 24
  %1516 = ashr exact i32 %1515, 24
  %1517 = sitofp i32 %1516 to double
  %1518 = fmul fast double %1517, %1517
  %1519 = fmul fast double %1518, %1518
  %1520 = fadd fast double %1519, %1514
  %1521 = fptosi double %1520 to i8
  store i8 %1521, ptr %1258, align 1, !tbaa !12
  %1522 = add nuw nsw i32 %1432, 1
  br i1 %1274, label %1523, label %1573

1523:                                             ; preds = %1508
  %1524 = load i32, ptr %4, align 4, !tbaa !6
  %1525 = load i32, ptr %12, align 4, !tbaa !6
  %1526 = add nsw i32 %1525, -1
  %1527 = icmp slt i32 %1524, %1526
  br i1 %1527, label %1550, label %1528

1528:                                             ; preds = %1523
  %1529 = icmp eq i32 %1524, %1526
  br i1 %1529, label %1530, label %1566

1530:                                             ; preds = %1528
  store i32 0, ptr %4, align 4, !tbaa !6
  %1531 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1531, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1573, label %1532

1532:                                             ; preds = %1530, %1560
  %1533 = phi i64 [ %1564, %1560 ], [ 1, %1530 ]
  %1534 = getelementptr inbounds i32, ptr %4, i64 %1533
  %1535 = load i32, ptr %1534, align 4, !tbaa !6
  %1536 = getelementptr inbounds i32, ptr %12, i64 %1533
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = add nsw i32 %1537, -1
  %1539 = icmp slt i32 %1535, %1538
  br i1 %1539, label %1540, label %1558

1540:                                             ; preds = %1532
  br i1 %1527, label %1550, label %1541

1541:                                             ; preds = %1540
  %1542 = shl i64 %1533, 32
  %1543 = add i64 %1542, -4294967296
  %1544 = ashr exact i64 %1543, 32
  %1545 = getelementptr inbounds i32, ptr %7, i64 %1544
  %1546 = load i32, ptr %1545, align 4, !tbaa !6
  %1547 = getelementptr inbounds i32, ptr %6, i64 %1533
  %1548 = load i32, ptr %1547, align 4, !tbaa !6
  %1549 = add nsw i32 %1548, %1546
  store i32 %1549, ptr %1547, align 4, !tbaa !6
  br label %1568

1550:                                             ; preds = %1523, %1540
  %1551 = phi i32 [ %1535, %1540 ], [ %1524, %1523 ]
  %1552 = phi ptr [ %1534, %1540 ], [ %4, %1523 ]
  %1553 = phi i64 [ %1533, %1540 ], [ 0, %1523 ]
  %1554 = add nsw i32 %1551, 1
  store i32 %1554, ptr %1552, align 4, !tbaa !6
  %1555 = getelementptr inbounds i32, ptr %7, i64 %1553
  %1556 = load i32, ptr %1555, align 4, !tbaa !6
  %1557 = getelementptr inbounds i32, ptr %6, i64 %1553
  br label %1568

1558:                                             ; preds = %1532
  %1559 = icmp eq i32 %1535, %1538
  br i1 %1559, label %1560, label %1566

1560:                                             ; preds = %1558
  store i32 0, ptr %1534, align 4, !tbaa !6
  %1561 = getelementptr inbounds i32, ptr %8, i64 %1533
  %1562 = load i32, ptr %1561, align 4, !tbaa !6
  %1563 = getelementptr inbounds i32, ptr %6, i64 %1533
  store i32 %1562, ptr %1563, align 4, !tbaa !6
  %1564 = add nuw nsw i64 %1533, 1
  %1565 = icmp eq i64 %1564, %1277
  br i1 %1565, label %1573, label %1532, !llvm.loop !813

1566:                                             ; preds = %1528, %1558
  %1567 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1568:                                             ; preds = %1541, %1550
  %1569 = phi ptr [ %1557, %1550 ], [ %1534, %1541 ]
  %1570 = phi i32 [ %1556, %1550 ], [ 1, %1541 ]
  %1571 = load i32, ptr %1569, align 4, !tbaa !6
  %1572 = add nsw i32 %1571, %1570
  store i32 %1572, ptr %1569, align 4, !tbaa !6
  br label %1573

1573:                                             ; preds = %1560, %1568, %1530, %1508
  %1574 = icmp eq i32 %1522, %5
  br i1 %1574, label %5556, label %1431, !llvm.loop !814

1575:                                             ; preds = %1265
  %1576 = getelementptr inbounds i32, ptr %3, i64 %19
  %1577 = load i32, ptr %1576, align 4, !tbaa !6
  %1578 = icmp eq i32 %1577, 0
  %1579 = icmp sgt i32 %5, 0
  br i1 %1578, label %1589, label %1580

1580:                                             ; preds = %1575
  br i1 %1579, label %1581, label %5556

1581:                                             ; preds = %1580
  %1582 = icmp sgt i32 %13, 1
  %1583 = icmp sgt i32 %13, 0
  %1584 = add i32 %13, -2
  %1585 = zext i32 %1584 to i64
  %1586 = zext i32 %13 to i64
  %1587 = add nuw i32 %5, 1
  %1588 = icmp eq i32 %13, 1
  br label %1732

1589:                                             ; preds = %1575
  br i1 %1579, label %1590, label %5556

1590:                                             ; preds = %1589
  %1591 = icmp sgt i32 %13, 1
  %1592 = icmp sgt i32 %13, 0
  %1593 = add i32 %13, -2
  %1594 = zext i32 %1593 to i64
  %1595 = zext i32 %13 to i64
  %1596 = add nuw i32 %5, 1
  %1597 = icmp eq i32 %13, 1
  br label %1598

1598:                                             ; preds = %1590, %1730
  %1599 = phi i32 [ 0, %1590 ], [ %1682, %1730 ]
  %1600 = phi double [ 0.000000e+00, %1590 ], [ %1681, %1730 ]
  %1601 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1591, label %1602, label %1671

1602:                                             ; preds = %1598, %1661
  %1603 = phi i32 [ %1670, %1661 ], [ 0, %1598 ]
  %1604 = phi i64 [ %1612, %1661 ], [ %1595, %1598 ]
  %1605 = phi i64 [ %1669, %1661 ], [ %1594, %1598 ]
  %1606 = phi i32 [ %1667, %1661 ], [ %1601, %1598 ]
  %1607 = sub i32 %1593, %1603
  %1608 = tail call i32 @llvm.smin.i32(i32 %1607, i32 0)
  %1609 = sub i32 %1607, %1608
  %1610 = zext i32 %1609 to i64
  %1611 = add nuw nsw i64 %1610, 1
  %1612 = add nsw i64 %1604, -1
  %1613 = icmp ult i32 %1609, 31
  br i1 %1613, label %1649, label %1614

1614:                                             ; preds = %1602
  %1615 = and i64 %1611, 8589934560
  %1616 = sub i64 %1605, %1615
  br label %1617

1617:                                             ; preds = %1617, %1614
  %1618 = phi i64 [ 0, %1614 ], [ %1641, %1617 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1614 ], [ %1637, %1617 ]
  %1620 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1614 ], [ %1638, %1617 ]
  %1621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1614 ], [ %1639, %1617 ]
  %1622 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1614 ], [ %1640, %1617 ]
  %1623 = sub i64 %1605, %1618
  %1624 = getelementptr inbounds i32, ptr %9, i64 %1623
  %1625 = getelementptr inbounds i32, ptr %1624, i64 -7
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !6
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1624, i64 -15
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !6
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1624, i64 -23
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !6
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = getelementptr inbounds i32, ptr %1624, i64 -31
  %1635 = load <8 x i32>, ptr %1634, align 4, !tbaa !6
  %1636 = shufflevector <8 x i32> %1635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1637 = mul <8 x i32> %1627, %1619
  %1638 = mul <8 x i32> %1630, %1620
  %1639 = mul <8 x i32> %1633, %1621
  %1640 = mul <8 x i32> %1636, %1622
  %1641 = add nuw i64 %1618, 32
  %1642 = icmp eq i64 %1641, %1615
  br i1 %1642, label %1643, label %1617, !llvm.loop !815

1643:                                             ; preds = %1617
  %1644 = mul <8 x i32> %1638, %1637
  %1645 = mul <8 x i32> %1639, %1644
  %1646 = mul <8 x i32> %1640, %1645
  %1647 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1646)
  %1648 = icmp eq i64 %1611, %1615
  br i1 %1648, label %1661, label %1649

1649:                                             ; preds = %1602, %1643
  %1650 = phi i64 [ %1605, %1602 ], [ %1616, %1643 ]
  %1651 = phi i32 [ 1, %1602 ], [ %1647, %1643 ]
  br label %1652

1652:                                             ; preds = %1649, %1652
  %1653 = phi i64 [ %1658, %1652 ], [ %1650, %1649 ]
  %1654 = phi i32 [ %1657, %1652 ], [ %1651, %1649 ]
  %1655 = getelementptr inbounds i32, ptr %9, i64 %1653
  %1656 = load i32, ptr %1655, align 4, !tbaa !6
  %1657 = mul nsw i32 %1656, %1654
  %1658 = add nsw i64 %1653, -1
  %1659 = trunc i64 %1653 to i32
  %1660 = icmp sgt i32 %1659, 0
  br i1 %1660, label %1652, label %1661, !llvm.loop !816

1661:                                             ; preds = %1652, %1643
  %1662 = phi i32 [ %1647, %1643 ], [ %1657, %1652 ]
  %1663 = and i64 %1612, 4294967295
  %1664 = getelementptr inbounds i32, ptr %6, i64 %1663
  %1665 = load i32, ptr %1664, align 4, !tbaa !6
  %1666 = mul nsw i32 %1665, %1662
  %1667 = add nsw i32 %1666, %1606
  %1668 = icmp sgt i64 %1604, 2
  %1669 = add nsw i64 %1605, -1
  %1670 = add i32 %1603, 1
  br i1 %1668, label %1602, label %1671, !llvm.loop !817

1671:                                             ; preds = %1661, %1598
  %1672 = phi i32 [ %1601, %1598 ], [ %1667, %1661 ]
  %1673 = sext i32 %1672 to i64
  %1674 = getelementptr inbounds i64, ptr %1256, i64 %1673
  %1675 = load i64, ptr %1674, align 8, !tbaa !121
  %1676 = trunc i64 %1675 to i8
  %1677 = load i8, ptr %1258, align 1, !tbaa !12
  %1678 = mul i8 %1676, %1676
  %1679 = mul i8 %1678, %1678
  %1680 = add i8 %1679, %1677
  store i8 %1680, ptr %1258, align 1, !tbaa !12
  %1681 = fadd fast double %1600, 1.000000e+00
  %1682 = add nuw nsw i32 %1599, 1
  br i1 %1592, label %1683, label %1730

1683:                                             ; preds = %1671
  %1684 = load i32, ptr %4, align 4, !tbaa !6
  %1685 = load i32, ptr %12, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1684, %1686
  br i1 %1687, label %1707, label %1688

1688:                                             ; preds = %1683
  %1689 = icmp eq i32 %1684, %1686
  br i1 %1689, label %1690, label %1723

1690:                                             ; preds = %1688
  store i32 0, ptr %4, align 4, !tbaa !6
  %1691 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1691, ptr %6, align 4, !tbaa !6
  br i1 %1597, label %1730, label %1692

1692:                                             ; preds = %1690, %1717
  %1693 = phi i64 [ %1721, %1717 ], [ 1, %1690 ]
  %1694 = getelementptr inbounds i32, ptr %4, i64 %1693
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %12, i64 %1693
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, -1
  %1699 = icmp slt i32 %1695, %1698
  br i1 %1699, label %1700, label %1715

1700:                                             ; preds = %1692
  br i1 %1687, label %1707, label %1701

1701:                                             ; preds = %1700
  %1702 = getelementptr inbounds i32, ptr %7, i64 %1693
  %1703 = load i32, ptr %1702, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %6, i64 %1693
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = add nsw i32 %1705, %1703
  store i32 %1706, ptr %1704, align 4, !tbaa !6
  br label %1725

1707:                                             ; preds = %1683, %1700
  %1708 = phi i32 [ %1695, %1700 ], [ %1684, %1683 ]
  %1709 = phi ptr [ %1694, %1700 ], [ %4, %1683 ]
  %1710 = phi i64 [ %1693, %1700 ], [ 0, %1683 ]
  %1711 = add nsw i32 %1708, 1
  store i32 %1711, ptr %1709, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %7, i64 %1710
  %1713 = load i32, ptr %1712, align 4, !tbaa !6
  %1714 = getelementptr inbounds i32, ptr %6, i64 %1710
  br label %1725

1715:                                             ; preds = %1692
  %1716 = icmp eq i32 %1695, %1698
  br i1 %1716, label %1717, label %1723

1717:                                             ; preds = %1715
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1718 = getelementptr inbounds i32, ptr %8, i64 %1693
  %1719 = load i32, ptr %1718, align 4, !tbaa !6
  %1720 = getelementptr inbounds i32, ptr %6, i64 %1693
  store i32 %1719, ptr %1720, align 4, !tbaa !6
  %1721 = add nuw nsw i64 %1693, 1
  %1722 = icmp eq i64 %1721, %1595
  br i1 %1722, label %1730, label %1692, !llvm.loop !818

1723:                                             ; preds = %1688, %1715
  %1724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1725:                                             ; preds = %1701, %1707
  %1726 = phi ptr [ %1714, %1707 ], [ %1694, %1701 ]
  %1727 = phi i32 [ %1713, %1707 ], [ 1, %1701 ]
  %1728 = load i32, ptr %1726, align 4, !tbaa !6
  %1729 = add nsw i32 %1728, %1727
  store i32 %1729, ptr %1726, align 4, !tbaa !6
  br label %1730

1730:                                             ; preds = %1717, %1725, %1690, %1671
  %1731 = icmp eq i32 %1682, %5
  br i1 %1731, label %5556, label %1598, !llvm.loop !819

1732:                                             ; preds = %1581, %1869
  %1733 = phi i32 [ 0, %1581 ], [ %1818, %1869 ]
  %1734 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1582, label %1735, label %1804

1735:                                             ; preds = %1732, %1794
  %1736 = phi i32 [ %1803, %1794 ], [ 0, %1732 ]
  %1737 = phi i64 [ %1745, %1794 ], [ %1586, %1732 ]
  %1738 = phi i64 [ %1802, %1794 ], [ %1585, %1732 ]
  %1739 = phi i32 [ %1800, %1794 ], [ %1734, %1732 ]
  %1740 = sub i32 %1584, %1736
  %1741 = tail call i32 @llvm.smin.i32(i32 %1740, i32 0)
  %1742 = sub i32 %1740, %1741
  %1743 = zext i32 %1742 to i64
  %1744 = add nuw nsw i64 %1743, 1
  %1745 = add nsw i64 %1737, -1
  %1746 = icmp ult i32 %1742, 31
  br i1 %1746, label %1782, label %1747

1747:                                             ; preds = %1735
  %1748 = and i64 %1744, 8589934560
  %1749 = sub i64 %1738, %1748
  br label %1750

1750:                                             ; preds = %1750, %1747
  %1751 = phi i64 [ 0, %1747 ], [ %1774, %1750 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1770, %1750 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1771, %1750 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1772, %1750 ]
  %1755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1773, %1750 ]
  %1756 = sub i64 %1738, %1751
  %1757 = getelementptr inbounds i32, ptr %11, i64 %1756
  %1758 = getelementptr inbounds i32, ptr %1757, i64 -7
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = getelementptr inbounds i32, ptr %1757, i64 -15
  %1762 = load <8 x i32>, ptr %1761, align 4, !tbaa !6
  %1763 = shufflevector <8 x i32> %1762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1764 = getelementptr inbounds i32, ptr %1757, i64 -23
  %1765 = load <8 x i32>, ptr %1764, align 4, !tbaa !6
  %1766 = shufflevector <8 x i32> %1765, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1767 = getelementptr inbounds i32, ptr %1757, i64 -31
  %1768 = load <8 x i32>, ptr %1767, align 4, !tbaa !6
  %1769 = shufflevector <8 x i32> %1768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1770 = mul <8 x i32> %1760, %1752
  %1771 = mul <8 x i32> %1763, %1753
  %1772 = mul <8 x i32> %1766, %1754
  %1773 = mul <8 x i32> %1769, %1755
  %1774 = add nuw i64 %1751, 32
  %1775 = icmp eq i64 %1774, %1748
  br i1 %1775, label %1776, label %1750, !llvm.loop !820

1776:                                             ; preds = %1750
  %1777 = mul <8 x i32> %1771, %1770
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = mul <8 x i32> %1773, %1778
  %1780 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1779)
  %1781 = icmp eq i64 %1744, %1748
  br i1 %1781, label %1794, label %1782

1782:                                             ; preds = %1735, %1776
  %1783 = phi i64 [ %1738, %1735 ], [ %1749, %1776 ]
  %1784 = phi i32 [ 1, %1735 ], [ %1780, %1776 ]
  br label %1785

1785:                                             ; preds = %1782, %1785
  %1786 = phi i64 [ %1791, %1785 ], [ %1783, %1782 ]
  %1787 = phi i32 [ %1790, %1785 ], [ %1784, %1782 ]
  %1788 = getelementptr inbounds i32, ptr %11, i64 %1786
  %1789 = load i32, ptr %1788, align 4, !tbaa !6
  %1790 = mul nsw i32 %1789, %1787
  %1791 = add nsw i64 %1786, -1
  %1792 = trunc i64 %1786 to i32
  %1793 = icmp sgt i32 %1792, 0
  br i1 %1793, label %1785, label %1794, !llvm.loop !821

1794:                                             ; preds = %1785, %1776
  %1795 = phi i32 [ %1780, %1776 ], [ %1790, %1785 ]
  %1796 = and i64 %1745, 4294967295
  %1797 = getelementptr inbounds i32, ptr %6, i64 %1796
  %1798 = load i32, ptr %1797, align 4, !tbaa !6
  %1799 = mul nsw i32 %1798, %1795
  %1800 = add nsw i32 %1799, %1739
  %1801 = icmp sgt i64 %1737, 2
  %1802 = add nsw i64 %1738, -1
  %1803 = add i32 %1736, 1
  br i1 %1801, label %1735, label %1804, !llvm.loop !822

1804:                                             ; preds = %1794, %1732
  %1805 = phi i32 [ %1734, %1732 ], [ %1800, %1794 ]
  %1806 = icmp slt i32 %1805, %5
  br i1 %1806, label %1809, label %1807

1807:                                             ; preds = %1804
  %1808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

1809:                                             ; preds = %1804
  %1810 = sext i32 %1805 to i64
  %1811 = getelementptr inbounds i64, ptr %1256, i64 %1810
  %1812 = load i64, ptr %1811, align 8, !tbaa !121
  %1813 = trunc i64 %1812 to i8
  %1814 = load i8, ptr %1258, align 1, !tbaa !12
  %1815 = mul i8 %1813, %1813
  %1816 = mul i8 %1815, %1815
  %1817 = add i8 %1816, %1814
  store i8 %1817, ptr %1258, align 1, !tbaa !12
  %1818 = add nuw nsw i32 %1733, 1
  br i1 %1583, label %1819, label %1869

1819:                                             ; preds = %1809
  %1820 = load i32, ptr %4, align 4, !tbaa !6
  %1821 = load i32, ptr %12, align 4, !tbaa !6
  %1822 = add nsw i32 %1821, -1
  %1823 = icmp slt i32 %1820, %1822
  br i1 %1823, label %1846, label %1824

1824:                                             ; preds = %1819
  %1825 = icmp eq i32 %1820, %1822
  br i1 %1825, label %1826, label %1862

1826:                                             ; preds = %1824
  store i32 0, ptr %4, align 4, !tbaa !6
  %1827 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1827, ptr %6, align 4, !tbaa !6
  br i1 %1588, label %1869, label %1828

1828:                                             ; preds = %1826, %1856
  %1829 = phi i64 [ %1860, %1856 ], [ 1, %1826 ]
  %1830 = getelementptr inbounds i32, ptr %4, i64 %1829
  %1831 = load i32, ptr %1830, align 4, !tbaa !6
  %1832 = getelementptr inbounds i32, ptr %12, i64 %1829
  %1833 = load i32, ptr %1832, align 4, !tbaa !6
  %1834 = add nsw i32 %1833, -1
  %1835 = icmp slt i32 %1831, %1834
  br i1 %1835, label %1836, label %1854

1836:                                             ; preds = %1828
  br i1 %1823, label %1846, label %1837

1837:                                             ; preds = %1836
  %1838 = shl i64 %1829, 32
  %1839 = add i64 %1838, -4294967296
  %1840 = ashr exact i64 %1839, 32
  %1841 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1842 = load i32, ptr %1841, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %6, i64 %1829
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = add nsw i32 %1844, %1842
  store i32 %1845, ptr %1843, align 4, !tbaa !6
  br label %1864

1846:                                             ; preds = %1819, %1836
  %1847 = phi i32 [ %1831, %1836 ], [ %1820, %1819 ]
  %1848 = phi ptr [ %1830, %1836 ], [ %4, %1819 ]
  %1849 = phi i64 [ %1829, %1836 ], [ 0, %1819 ]
  %1850 = add nsw i32 %1847, 1
  store i32 %1850, ptr %1848, align 4, !tbaa !6
  %1851 = getelementptr inbounds i32, ptr %7, i64 %1849
  %1852 = load i32, ptr %1851, align 4, !tbaa !6
  %1853 = getelementptr inbounds i32, ptr %6, i64 %1849
  br label %1864

1854:                                             ; preds = %1828
  %1855 = icmp eq i32 %1831, %1834
  br i1 %1855, label %1856, label %1862

1856:                                             ; preds = %1854
  store i32 0, ptr %1830, align 4, !tbaa !6
  %1857 = getelementptr inbounds i32, ptr %8, i64 %1829
  %1858 = load i32, ptr %1857, align 4, !tbaa !6
  %1859 = getelementptr inbounds i32, ptr %6, i64 %1829
  store i32 %1858, ptr %1859, align 4, !tbaa !6
  %1860 = add nuw nsw i64 %1829, 1
  %1861 = icmp eq i64 %1860, %1586
  br i1 %1861, label %1869, label %1828, !llvm.loop !823

1862:                                             ; preds = %1824, %1854
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

1864:                                             ; preds = %1837, %1846
  %1865 = phi ptr [ %1853, %1846 ], [ %1830, %1837 ]
  %1866 = phi i32 [ %1852, %1846 ], [ 1, %1837 ]
  %1867 = load i32, ptr %1865, align 4, !tbaa !6
  %1868 = add nsw i32 %1867, %1866
  store i32 %1868, ptr %1865, align 4, !tbaa !6
  br label %1869

1869:                                             ; preds = %1856, %1864, %1826, %1809
  %1870 = icmp eq i32 %1818, %5
  br i1 %1870, label %5556, label %1732, !llvm.loop !824

1871:                                             ; preds = %1265
  %1872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1445, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

1873:                                             ; preds = %18
  %1874 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1875 = load ptr, ptr %1874, align 8, !tbaa !10
  %1876 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1877 = load ptr, ptr %1876, align 8, !tbaa !10
  store i16 0, ptr %1877, align 2, !tbaa !79
  %1878 = icmp eq i32 %13, 0
  br i1 %1878, label %1879, label %1884

1879:                                             ; preds = %1873
  %1880 = load i64, ptr %1875, align 8, !tbaa !121
  %1881 = trunc i64 %1880 to i16
  %1882 = mul i16 %1881, %1881
  %1883 = mul i16 %1882, %1882
  store i16 %1883, ptr %1877, align 2, !tbaa !79
  br label %5556

1884:                                             ; preds = %1873
  switch i32 %1, label %2490 [
    i32 1, label %1885
    i32 0, label %2194
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !6
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5556

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2050

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5556

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2048
  %1909 = phi i16 [ 0, %1900 ], [ %1998, %2048 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2000, %2048 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %1999, %2048 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !6
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !6
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !6
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !6
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !825

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !6
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !826

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !6
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !827

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !19
  %1987 = getelementptr inbounds i64, ptr %1875, i64 %1984
  %1988 = load i64, ptr %1987, align 8, !tbaa !121
  %1989 = trunc i64 %1988 to i32
  %1990 = sitofp i16 %1909 to double
  %1991 = shl i32 %1989, 16
  %1992 = ashr exact i32 %1991, 16
  %1993 = sitofp i32 %1992 to double
  %1994 = fmul fast double %1986, %1993
  %1995 = fmul fast double %1994, %1994
  %1996 = fmul fast double %1995, %1995
  %1997 = fadd fast double %1996, %1990
  %1998 = fptosi double %1997 to i16
  %1999 = fadd fast double %1986, %1911
  %2000 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2001, label %2048

2001:                                             ; preds = %1982
  %2002 = load i32, ptr %4, align 4, !tbaa !6
  %2003 = load i32, ptr %12, align 4, !tbaa !6
  %2004 = add nsw i32 %2003, -1
  %2005 = icmp slt i32 %2002, %2004
  br i1 %2005, label %2025, label %2006

2006:                                             ; preds = %2001
  %2007 = icmp eq i32 %2002, %2004
  br i1 %2007, label %2008, label %2041

2008:                                             ; preds = %2006
  store i32 0, ptr %4, align 4, !tbaa !6
  %2009 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2009, ptr %6, align 4, !tbaa !6
  br i1 %1907, label %2048, label %2010

2010:                                             ; preds = %2008, %2035
  %2011 = phi i64 [ %2039, %2035 ], [ 1, %2008 ]
  %2012 = getelementptr inbounds i32, ptr %4, i64 %2011
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %12, i64 %2011
  %2015 = load i32, ptr %2014, align 4, !tbaa !6
  %2016 = add nsw i32 %2015, -1
  %2017 = icmp slt i32 %2013, %2016
  br i1 %2017, label %2018, label %2033

2018:                                             ; preds = %2010
  br i1 %2005, label %2025, label %2019

2019:                                             ; preds = %2018
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2011
  %2023 = load i32, ptr %2022, align 4, !tbaa !6
  %2024 = add nsw i32 %2023, %2021
  store i32 %2024, ptr %2022, align 4, !tbaa !6
  br label %2043

2025:                                             ; preds = %2001, %2018
  %2026 = phi i32 [ %2013, %2018 ], [ %2002, %2001 ]
  %2027 = phi ptr [ %2012, %2018 ], [ %4, %2001 ]
  %2028 = phi i64 [ %2011, %2018 ], [ 0, %2001 ]
  %2029 = add nsw i32 %2026, 1
  store i32 %2029, ptr %2027, align 4, !tbaa !6
  %2030 = getelementptr inbounds i32, ptr %7, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !6
  %2032 = getelementptr inbounds i32, ptr %6, i64 %2028
  br label %2043

2033:                                             ; preds = %2010
  %2034 = icmp eq i32 %2013, %2016
  br i1 %2034, label %2035, label %2041

2035:                                             ; preds = %2033
  store i32 0, ptr %2012, align 4, !tbaa !6
  %2036 = getelementptr inbounds i32, ptr %8, i64 %2011
  %2037 = load i32, ptr %2036, align 4, !tbaa !6
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2011
  store i32 %2037, ptr %2038, align 4, !tbaa !6
  %2039 = add nuw nsw i64 %2011, 1
  %2040 = icmp eq i64 %2039, %1905
  br i1 %2040, label %2048, label %2010, !llvm.loop !828

2041:                                             ; preds = %2006, %2033
  store i16 %1998, ptr %1877, align 2, !tbaa !79
  %2042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2043:                                             ; preds = %2019, %2025
  %2044 = phi ptr [ %2032, %2025 ], [ %2012, %2019 ]
  %2045 = phi i32 [ %2031, %2025 ], [ 1, %2019 ]
  %2046 = load i32, ptr %2044, align 4, !tbaa !6
  %2047 = add nsw i32 %2046, %2045
  store i32 %2047, ptr %2044, align 4, !tbaa !6
  br label %2048

2048:                                             ; preds = %2035, %2043, %2008, %1982
  %2049 = icmp eq i32 %2000, %5
  br i1 %2049, label %5550, label %1908, !llvm.loop !829

2050:                                             ; preds = %1891, %2192
  %2051 = phi i16 [ 0, %1891 ], [ %2140, %2192 ]
  %2052 = phi i32 [ 0, %1891 ], [ %2141, %2192 ]
  %2053 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %2054, label %2123

2054:                                             ; preds = %2050, %2113
  %2055 = phi i32 [ %2122, %2113 ], [ 0, %2050 ]
  %2056 = phi i64 [ %2064, %2113 ], [ %1896, %2050 ]
  %2057 = phi i64 [ %2121, %2113 ], [ %1895, %2050 ]
  %2058 = phi i32 [ %2119, %2113 ], [ %2053, %2050 ]
  %2059 = sub i32 %1894, %2055
  %2060 = tail call i32 @llvm.smin.i32(i32 %2059, i32 0)
  %2061 = sub i32 %2059, %2060
  %2062 = zext i32 %2061 to i64
  %2063 = add nuw nsw i64 %2062, 1
  %2064 = add nsw i64 %2056, -1
  %2065 = icmp ult i32 %2061, 31
  br i1 %2065, label %2101, label %2066

2066:                                             ; preds = %2054
  %2067 = and i64 %2063, 8589934560
  %2068 = sub i64 %2057, %2067
  br label %2069

2069:                                             ; preds = %2069, %2066
  %2070 = phi i64 [ 0, %2066 ], [ %2093, %2069 ]
  %2071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2089, %2069 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2090, %2069 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2091, %2069 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2092, %2069 ]
  %2075 = sub i64 %2057, %2070
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2075
  %2077 = getelementptr inbounds i32, ptr %2076, i64 -7
  %2078 = load <8 x i32>, ptr %2077, align 4, !tbaa !6
  %2079 = shufflevector <8 x i32> %2078, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2080 = getelementptr inbounds i32, ptr %2076, i64 -15
  %2081 = load <8 x i32>, ptr %2080, align 4, !tbaa !6
  %2082 = shufflevector <8 x i32> %2081, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2083 = getelementptr inbounds i32, ptr %2076, i64 -23
  %2084 = load <8 x i32>, ptr %2083, align 4, !tbaa !6
  %2085 = shufflevector <8 x i32> %2084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2086 = getelementptr inbounds i32, ptr %2076, i64 -31
  %2087 = load <8 x i32>, ptr %2086, align 4, !tbaa !6
  %2088 = shufflevector <8 x i32> %2087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2089 = mul <8 x i32> %2079, %2071
  %2090 = mul <8 x i32> %2082, %2072
  %2091 = mul <8 x i32> %2085, %2073
  %2092 = mul <8 x i32> %2088, %2074
  %2093 = add nuw i64 %2070, 32
  %2094 = icmp eq i64 %2093, %2067
  br i1 %2094, label %2095, label %2069, !llvm.loop !830

2095:                                             ; preds = %2069
  %2096 = mul <8 x i32> %2090, %2089
  %2097 = mul <8 x i32> %2091, %2096
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2098)
  %2100 = icmp eq i64 %2063, %2067
  br i1 %2100, label %2113, label %2101

2101:                                             ; preds = %2054, %2095
  %2102 = phi i64 [ %2057, %2054 ], [ %2068, %2095 ]
  %2103 = phi i32 [ 1, %2054 ], [ %2099, %2095 ]
  br label %2104

2104:                                             ; preds = %2101, %2104
  %2105 = phi i64 [ %2110, %2104 ], [ %2102, %2101 ]
  %2106 = phi i32 [ %2109, %2104 ], [ %2103, %2101 ]
  %2107 = getelementptr inbounds i32, ptr %11, i64 %2105
  %2108 = load i32, ptr %2107, align 4, !tbaa !6
  %2109 = mul nsw i32 %2108, %2106
  %2110 = add nsw i64 %2105, -1
  %2111 = trunc i64 %2105 to i32
  %2112 = icmp sgt i32 %2111, 0
  br i1 %2112, label %2104, label %2113, !llvm.loop !831

2113:                                             ; preds = %2104, %2095
  %2114 = phi i32 [ %2099, %2095 ], [ %2109, %2104 ]
  %2115 = and i64 %2064, 4294967295
  %2116 = getelementptr inbounds i32, ptr %6, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !6
  %2118 = mul nsw i32 %2117, %2114
  %2119 = add nsw i32 %2118, %2058
  %2120 = icmp sgt i64 %2056, 2
  %2121 = add nsw i64 %2057, -1
  %2122 = add i32 %2055, 1
  br i1 %2120, label %2054, label %2123, !llvm.loop !832

2123:                                             ; preds = %2113, %2050
  %2124 = phi i32 [ %2053, %2050 ], [ %2119, %2113 ]
  %2125 = icmp slt i32 %2124, %5
  br i1 %2125, label %2128, label %2126

2126:                                             ; preds = %2123
  %2127 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

2128:                                             ; preds = %2123
  %2129 = sext i32 %2124 to i64
  %2130 = getelementptr inbounds i64, ptr %1875, i64 %2129
  %2131 = load i64, ptr %2130, align 8, !tbaa !121
  %2132 = trunc i64 %2131 to i32
  %2133 = sitofp i16 %2051 to double
  %2134 = shl i32 %2132, 16
  %2135 = ashr exact i32 %2134, 16
  %2136 = sitofp i32 %2135 to double
  %2137 = fmul fast double %2136, %2136
  %2138 = fmul fast double %2137, %2137
  %2139 = fadd fast double %2138, %2133
  %2140 = fptosi double %2139 to i16
  store i16 %2140, ptr %1877, align 2, !tbaa !79
  %2141 = add nuw nsw i32 %2052, 1
  br i1 %1893, label %2142, label %2192

2142:                                             ; preds = %2128
  %2143 = load i32, ptr %4, align 4, !tbaa !6
  %2144 = load i32, ptr %12, align 4, !tbaa !6
  %2145 = add nsw i32 %2144, -1
  %2146 = icmp slt i32 %2143, %2145
  br i1 %2146, label %2169, label %2147

2147:                                             ; preds = %2142
  %2148 = icmp eq i32 %2143, %2145
  br i1 %2148, label %2149, label %2185

2149:                                             ; preds = %2147
  store i32 0, ptr %4, align 4, !tbaa !6
  %2150 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2150, ptr %6, align 4, !tbaa !6
  br i1 %1898, label %2192, label %2151

2151:                                             ; preds = %2149, %2179
  %2152 = phi i64 [ %2183, %2179 ], [ 1, %2149 ]
  %2153 = getelementptr inbounds i32, ptr %4, i64 %2152
  %2154 = load i32, ptr %2153, align 4, !tbaa !6
  %2155 = getelementptr inbounds i32, ptr %12, i64 %2152
  %2156 = load i32, ptr %2155, align 4, !tbaa !6
  %2157 = add nsw i32 %2156, -1
  %2158 = icmp slt i32 %2154, %2157
  br i1 %2158, label %2159, label %2177

2159:                                             ; preds = %2151
  br i1 %2146, label %2169, label %2160

2160:                                             ; preds = %2159
  %2161 = shl i64 %2152, 32
  %2162 = add i64 %2161, -4294967296
  %2163 = ashr exact i64 %2162, 32
  %2164 = getelementptr inbounds i32, ptr %7, i64 %2163
  %2165 = load i32, ptr %2164, align 4, !tbaa !6
  %2166 = getelementptr inbounds i32, ptr %6, i64 %2152
  %2167 = load i32, ptr %2166, align 4, !tbaa !6
  %2168 = add nsw i32 %2167, %2165
  store i32 %2168, ptr %2166, align 4, !tbaa !6
  br label %2187

2169:                                             ; preds = %2142, %2159
  %2170 = phi i32 [ %2154, %2159 ], [ %2143, %2142 ]
  %2171 = phi ptr [ %2153, %2159 ], [ %4, %2142 ]
  %2172 = phi i64 [ %2152, %2159 ], [ 0, %2142 ]
  %2173 = add nsw i32 %2170, 1
  store i32 %2173, ptr %2171, align 4, !tbaa !6
  %2174 = getelementptr inbounds i32, ptr %7, i64 %2172
  %2175 = load i32, ptr %2174, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %6, i64 %2172
  br label %2187

2177:                                             ; preds = %2151
  %2178 = icmp eq i32 %2154, %2157
  br i1 %2178, label %2179, label %2185

2179:                                             ; preds = %2177
  store i32 0, ptr %2153, align 4, !tbaa !6
  %2180 = getelementptr inbounds i32, ptr %8, i64 %2152
  %2181 = load i32, ptr %2180, align 4, !tbaa !6
  %2182 = getelementptr inbounds i32, ptr %6, i64 %2152
  store i32 %2181, ptr %2182, align 4, !tbaa !6
  %2183 = add nuw nsw i64 %2152, 1
  %2184 = icmp eq i64 %2183, %1896
  br i1 %2184, label %2192, label %2151, !llvm.loop !833

2185:                                             ; preds = %2147, %2177
  %2186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2187:                                             ; preds = %2160, %2169
  %2188 = phi ptr [ %2176, %2169 ], [ %2153, %2160 ]
  %2189 = phi i32 [ %2175, %2169 ], [ 1, %2160 ]
  %2190 = load i32, ptr %2188, align 4, !tbaa !6
  %2191 = add nsw i32 %2190, %2189
  store i32 %2191, ptr %2188, align 4, !tbaa !6
  br label %2192

2192:                                             ; preds = %2179, %2187, %2149, %2128
  %2193 = icmp eq i32 %2141, %5
  br i1 %2193, label %5556, label %2050, !llvm.loop !834

2194:                                             ; preds = %1884
  %2195 = getelementptr inbounds i32, ptr %3, i64 %19
  %2196 = load i32, ptr %2195, align 4, !tbaa !6
  %2197 = icmp eq i32 %2196, 0
  %2198 = icmp sgt i32 %5, 0
  br i1 %2197, label %2208, label %2199

2199:                                             ; preds = %2194
  br i1 %2198, label %2200, label %5556

2200:                                             ; preds = %2199
  %2201 = icmp sgt i32 %13, 1
  %2202 = icmp sgt i32 %13, 0
  %2203 = add i32 %13, -2
  %2204 = zext i32 %2203 to i64
  %2205 = zext i32 %13 to i64
  %2206 = add nuw i32 %5, 1
  %2207 = icmp eq i32 %13, 1
  br label %2351

2208:                                             ; preds = %2194
  br i1 %2198, label %2209, label %5556

2209:                                             ; preds = %2208
  %2210 = icmp sgt i32 %13, 1
  %2211 = icmp sgt i32 %13, 0
  %2212 = add i32 %13, -2
  %2213 = zext i32 %2212 to i64
  %2214 = zext i32 %13 to i64
  %2215 = add nuw i32 %5, 1
  %2216 = icmp eq i32 %13, 1
  br label %2217

2217:                                             ; preds = %2209, %2349
  %2218 = phi i16 [ 0, %2209 ], [ %2299, %2349 ]
  %2219 = phi i32 [ 0, %2209 ], [ %2301, %2349 ]
  %2220 = phi double [ 0.000000e+00, %2209 ], [ %2300, %2349 ]
  %2221 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2210, label %2222, label %2291

2222:                                             ; preds = %2217, %2281
  %2223 = phi i32 [ %2290, %2281 ], [ 0, %2217 ]
  %2224 = phi i64 [ %2232, %2281 ], [ %2214, %2217 ]
  %2225 = phi i64 [ %2289, %2281 ], [ %2213, %2217 ]
  %2226 = phi i32 [ %2287, %2281 ], [ %2221, %2217 ]
  %2227 = sub i32 %2212, %2223
  %2228 = tail call i32 @llvm.smin.i32(i32 %2227, i32 0)
  %2229 = sub i32 %2227, %2228
  %2230 = zext i32 %2229 to i64
  %2231 = add nuw nsw i64 %2230, 1
  %2232 = add nsw i64 %2224, -1
  %2233 = icmp ult i32 %2229, 31
  br i1 %2233, label %2269, label %2234

2234:                                             ; preds = %2222
  %2235 = and i64 %2231, 8589934560
  %2236 = sub i64 %2225, %2235
  br label %2237

2237:                                             ; preds = %2237, %2234
  %2238 = phi i64 [ 0, %2234 ], [ %2261, %2237 ]
  %2239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2234 ], [ %2257, %2237 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2234 ], [ %2258, %2237 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2234 ], [ %2259, %2237 ]
  %2242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2234 ], [ %2260, %2237 ]
  %2243 = sub i64 %2225, %2238
  %2244 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2245 = getelementptr inbounds i32, ptr %2244, i64 -7
  %2246 = load <8 x i32>, ptr %2245, align 4, !tbaa !6
  %2247 = shufflevector <8 x i32> %2246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2248 = getelementptr inbounds i32, ptr %2244, i64 -15
  %2249 = load <8 x i32>, ptr %2248, align 4, !tbaa !6
  %2250 = shufflevector <8 x i32> %2249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2251 = getelementptr inbounds i32, ptr %2244, i64 -23
  %2252 = load <8 x i32>, ptr %2251, align 4, !tbaa !6
  %2253 = shufflevector <8 x i32> %2252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2254 = getelementptr inbounds i32, ptr %2244, i64 -31
  %2255 = load <8 x i32>, ptr %2254, align 4, !tbaa !6
  %2256 = shufflevector <8 x i32> %2255, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2257 = mul <8 x i32> %2247, %2239
  %2258 = mul <8 x i32> %2250, %2240
  %2259 = mul <8 x i32> %2253, %2241
  %2260 = mul <8 x i32> %2256, %2242
  %2261 = add nuw i64 %2238, 32
  %2262 = icmp eq i64 %2261, %2235
  br i1 %2262, label %2263, label %2237, !llvm.loop !835

2263:                                             ; preds = %2237
  %2264 = mul <8 x i32> %2258, %2257
  %2265 = mul <8 x i32> %2259, %2264
  %2266 = mul <8 x i32> %2260, %2265
  %2267 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2266)
  %2268 = icmp eq i64 %2231, %2235
  br i1 %2268, label %2281, label %2269

2269:                                             ; preds = %2222, %2263
  %2270 = phi i64 [ %2225, %2222 ], [ %2236, %2263 ]
  %2271 = phi i32 [ 1, %2222 ], [ %2267, %2263 ]
  br label %2272

2272:                                             ; preds = %2269, %2272
  %2273 = phi i64 [ %2278, %2272 ], [ %2270, %2269 ]
  %2274 = phi i32 [ %2277, %2272 ], [ %2271, %2269 ]
  %2275 = getelementptr inbounds i32, ptr %9, i64 %2273
  %2276 = load i32, ptr %2275, align 4, !tbaa !6
  %2277 = mul nsw i32 %2276, %2274
  %2278 = add nsw i64 %2273, -1
  %2279 = trunc i64 %2273 to i32
  %2280 = icmp sgt i32 %2279, 0
  br i1 %2280, label %2272, label %2281, !llvm.loop !836

2281:                                             ; preds = %2272, %2263
  %2282 = phi i32 [ %2267, %2263 ], [ %2277, %2272 ]
  %2283 = and i64 %2232, 4294967295
  %2284 = getelementptr inbounds i32, ptr %6, i64 %2283
  %2285 = load i32, ptr %2284, align 4, !tbaa !6
  %2286 = mul nsw i32 %2285, %2282
  %2287 = add nsw i32 %2286, %2226
  %2288 = icmp sgt i64 %2224, 2
  %2289 = add nsw i64 %2225, -1
  %2290 = add i32 %2223, 1
  br i1 %2288, label %2222, label %2291, !llvm.loop !837

2291:                                             ; preds = %2281, %2217
  %2292 = phi i32 [ %2221, %2217 ], [ %2287, %2281 ]
  %2293 = sext i32 %2292 to i64
  %2294 = getelementptr inbounds i64, ptr %1875, i64 %2293
  %2295 = load i64, ptr %2294, align 8, !tbaa !121
  %2296 = trunc i64 %2295 to i16
  %2297 = mul i16 %2296, %2296
  %2298 = mul i16 %2297, %2297
  %2299 = add i16 %2298, %2218
  %2300 = fadd fast double %2220, 1.000000e+00
  %2301 = add nuw nsw i32 %2219, 1
  br i1 %2211, label %2302, label %2349

2302:                                             ; preds = %2291
  %2303 = load i32, ptr %4, align 4, !tbaa !6
  %2304 = load i32, ptr %12, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, -1
  %2306 = icmp slt i32 %2303, %2305
  br i1 %2306, label %2326, label %2307

2307:                                             ; preds = %2302
  %2308 = icmp eq i32 %2303, %2305
  br i1 %2308, label %2309, label %2342

2309:                                             ; preds = %2307
  store i32 0, ptr %4, align 4, !tbaa !6
  %2310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2310, ptr %6, align 4, !tbaa !6
  br i1 %2216, label %2349, label %2311

2311:                                             ; preds = %2309, %2336
  %2312 = phi i64 [ %2340, %2336 ], [ 1, %2309 ]
  %2313 = getelementptr inbounds i32, ptr %4, i64 %2312
  %2314 = load i32, ptr %2313, align 4, !tbaa !6
  %2315 = getelementptr inbounds i32, ptr %12, i64 %2312
  %2316 = load i32, ptr %2315, align 4, !tbaa !6
  %2317 = add nsw i32 %2316, -1
  %2318 = icmp slt i32 %2314, %2317
  br i1 %2318, label %2319, label %2334

2319:                                             ; preds = %2311
  br i1 %2306, label %2326, label %2320

2320:                                             ; preds = %2319
  %2321 = getelementptr inbounds i32, ptr %7, i64 %2312
  %2322 = load i32, ptr %2321, align 4, !tbaa !6
  %2323 = getelementptr inbounds i32, ptr %6, i64 %2312
  %2324 = load i32, ptr %2323, align 4, !tbaa !6
  %2325 = add nsw i32 %2324, %2322
  store i32 %2325, ptr %2323, align 4, !tbaa !6
  br label %2344

2326:                                             ; preds = %2302, %2319
  %2327 = phi i32 [ %2314, %2319 ], [ %2303, %2302 ]
  %2328 = phi ptr [ %2313, %2319 ], [ %4, %2302 ]
  %2329 = phi i64 [ %2312, %2319 ], [ 0, %2302 ]
  %2330 = add nsw i32 %2327, 1
  store i32 %2330, ptr %2328, align 4, !tbaa !6
  %2331 = getelementptr inbounds i32, ptr %7, i64 %2329
  %2332 = load i32, ptr %2331, align 4, !tbaa !6
  %2333 = getelementptr inbounds i32, ptr %6, i64 %2329
  br label %2344

2334:                                             ; preds = %2311
  %2335 = icmp eq i32 %2314, %2317
  br i1 %2335, label %2336, label %2342

2336:                                             ; preds = %2334
  store i32 0, ptr %2313, align 4, !tbaa !6
  %2337 = getelementptr inbounds i32, ptr %8, i64 %2312
  %2338 = load i32, ptr %2337, align 4, !tbaa !6
  %2339 = getelementptr inbounds i32, ptr %6, i64 %2312
  store i32 %2338, ptr %2339, align 4, !tbaa !6
  %2340 = add nuw nsw i64 %2312, 1
  %2341 = icmp eq i64 %2340, %2214
  br i1 %2341, label %2349, label %2311, !llvm.loop !838

2342:                                             ; preds = %2307, %2334
  store i16 %2299, ptr %1877, align 2, !tbaa !79
  %2343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2344:                                             ; preds = %2320, %2326
  %2345 = phi ptr [ %2333, %2326 ], [ %2313, %2320 ]
  %2346 = phi i32 [ %2332, %2326 ], [ 1, %2320 ]
  %2347 = load i32, ptr %2345, align 4, !tbaa !6
  %2348 = add nsw i32 %2347, %2346
  store i32 %2348, ptr %2345, align 4, !tbaa !6
  br label %2349

2349:                                             ; preds = %2336, %2344, %2309, %2291
  %2350 = icmp eq i32 %2301, %5
  br i1 %2350, label %5551, label %2217, !llvm.loop !839

2351:                                             ; preds = %2200, %2488
  %2352 = phi i16 [ 0, %2200 ], [ %2436, %2488 ]
  %2353 = phi i32 [ 0, %2200 ], [ %2437, %2488 ]
  %2354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2201, label %2355, label %2424

2355:                                             ; preds = %2351, %2414
  %2356 = phi i32 [ %2423, %2414 ], [ 0, %2351 ]
  %2357 = phi i64 [ %2365, %2414 ], [ %2205, %2351 ]
  %2358 = phi i64 [ %2422, %2414 ], [ %2204, %2351 ]
  %2359 = phi i32 [ %2420, %2414 ], [ %2354, %2351 ]
  %2360 = sub i32 %2203, %2356
  %2361 = tail call i32 @llvm.smin.i32(i32 %2360, i32 0)
  %2362 = sub i32 %2360, %2361
  %2363 = zext i32 %2362 to i64
  %2364 = add nuw nsw i64 %2363, 1
  %2365 = add nsw i64 %2357, -1
  %2366 = icmp ult i32 %2362, 31
  br i1 %2366, label %2402, label %2367

2367:                                             ; preds = %2355
  %2368 = and i64 %2364, 8589934560
  %2369 = sub i64 %2358, %2368
  br label %2370

2370:                                             ; preds = %2370, %2367
  %2371 = phi i64 [ 0, %2367 ], [ %2394, %2370 ]
  %2372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2367 ], [ %2390, %2370 ]
  %2373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2367 ], [ %2391, %2370 ]
  %2374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2367 ], [ %2392, %2370 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2367 ], [ %2393, %2370 ]
  %2376 = sub i64 %2358, %2371
  %2377 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2378 = getelementptr inbounds i32, ptr %2377, i64 -7
  %2379 = load <8 x i32>, ptr %2378, align 4, !tbaa !6
  %2380 = shufflevector <8 x i32> %2379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2381 = getelementptr inbounds i32, ptr %2377, i64 -15
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !6
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2377, i64 -23
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !6
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2377, i64 -31
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !6
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = mul <8 x i32> %2380, %2372
  %2391 = mul <8 x i32> %2383, %2373
  %2392 = mul <8 x i32> %2386, %2374
  %2393 = mul <8 x i32> %2389, %2375
  %2394 = add nuw i64 %2371, 32
  %2395 = icmp eq i64 %2394, %2368
  br i1 %2395, label %2396, label %2370, !llvm.loop !840

2396:                                             ; preds = %2370
  %2397 = mul <8 x i32> %2391, %2390
  %2398 = mul <8 x i32> %2392, %2397
  %2399 = mul <8 x i32> %2393, %2398
  %2400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2399)
  %2401 = icmp eq i64 %2364, %2368
  br i1 %2401, label %2414, label %2402

2402:                                             ; preds = %2355, %2396
  %2403 = phi i64 [ %2358, %2355 ], [ %2369, %2396 ]
  %2404 = phi i32 [ 1, %2355 ], [ %2400, %2396 ]
  br label %2405

2405:                                             ; preds = %2402, %2405
  %2406 = phi i64 [ %2411, %2405 ], [ %2403, %2402 ]
  %2407 = phi i32 [ %2410, %2405 ], [ %2404, %2402 ]
  %2408 = getelementptr inbounds i32, ptr %11, i64 %2406
  %2409 = load i32, ptr %2408, align 4, !tbaa !6
  %2410 = mul nsw i32 %2409, %2407
  %2411 = add nsw i64 %2406, -1
  %2412 = trunc i64 %2406 to i32
  %2413 = icmp sgt i32 %2412, 0
  br i1 %2413, label %2405, label %2414, !llvm.loop !841

2414:                                             ; preds = %2405, %2396
  %2415 = phi i32 [ %2400, %2396 ], [ %2410, %2405 ]
  %2416 = and i64 %2365, 4294967295
  %2417 = getelementptr inbounds i32, ptr %6, i64 %2416
  %2418 = load i32, ptr %2417, align 4, !tbaa !6
  %2419 = mul nsw i32 %2418, %2415
  %2420 = add nsw i32 %2419, %2359
  %2421 = icmp sgt i64 %2357, 2
  %2422 = add nsw i64 %2358, -1
  %2423 = add i32 %2356, 1
  br i1 %2421, label %2355, label %2424, !llvm.loop !842

2424:                                             ; preds = %2414, %2351
  %2425 = phi i32 [ %2354, %2351 ], [ %2420, %2414 ]
  %2426 = icmp slt i32 %2425, %5
  br i1 %2426, label %2429, label %2427

2427:                                             ; preds = %2424
  %2428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

2429:                                             ; preds = %2424
  %2430 = sext i32 %2425 to i64
  %2431 = getelementptr inbounds i64, ptr %1875, i64 %2430
  %2432 = load i64, ptr %2431, align 8, !tbaa !121
  %2433 = trunc i64 %2432 to i16
  %2434 = mul i16 %2433, %2433
  %2435 = mul i16 %2434, %2434
  %2436 = add i16 %2435, %2352
  store i16 %2436, ptr %1877, align 2, !tbaa !79
  %2437 = add nuw nsw i32 %2353, 1
  br i1 %2202, label %2438, label %2488

2438:                                             ; preds = %2429
  %2439 = load i32, ptr %4, align 4, !tbaa !6
  %2440 = load i32, ptr %12, align 4, !tbaa !6
  %2441 = add nsw i32 %2440, -1
  %2442 = icmp slt i32 %2439, %2441
  br i1 %2442, label %2465, label %2443

2443:                                             ; preds = %2438
  %2444 = icmp eq i32 %2439, %2441
  br i1 %2444, label %2445, label %2481

2445:                                             ; preds = %2443
  store i32 0, ptr %4, align 4, !tbaa !6
  %2446 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2446, ptr %6, align 4, !tbaa !6
  br i1 %2207, label %2488, label %2447

2447:                                             ; preds = %2445, %2475
  %2448 = phi i64 [ %2479, %2475 ], [ 1, %2445 ]
  %2449 = getelementptr inbounds i32, ptr %4, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = getelementptr inbounds i32, ptr %12, i64 %2448
  %2452 = load i32, ptr %2451, align 4, !tbaa !6
  %2453 = add nsw i32 %2452, -1
  %2454 = icmp slt i32 %2450, %2453
  br i1 %2454, label %2455, label %2473

2455:                                             ; preds = %2447
  br i1 %2442, label %2465, label %2456

2456:                                             ; preds = %2455
  %2457 = shl i64 %2448, 32
  %2458 = add i64 %2457, -4294967296
  %2459 = ashr exact i64 %2458, 32
  %2460 = getelementptr inbounds i32, ptr %7, i64 %2459
  %2461 = load i32, ptr %2460, align 4, !tbaa !6
  %2462 = getelementptr inbounds i32, ptr %6, i64 %2448
  %2463 = load i32, ptr %2462, align 4, !tbaa !6
  %2464 = add nsw i32 %2463, %2461
  store i32 %2464, ptr %2462, align 4, !tbaa !6
  br label %2483

2465:                                             ; preds = %2438, %2455
  %2466 = phi i32 [ %2450, %2455 ], [ %2439, %2438 ]
  %2467 = phi ptr [ %2449, %2455 ], [ %4, %2438 ]
  %2468 = phi i64 [ %2448, %2455 ], [ 0, %2438 ]
  %2469 = add nsw i32 %2466, 1
  store i32 %2469, ptr %2467, align 4, !tbaa !6
  %2470 = getelementptr inbounds i32, ptr %7, i64 %2468
  %2471 = load i32, ptr %2470, align 4, !tbaa !6
  %2472 = getelementptr inbounds i32, ptr %6, i64 %2468
  br label %2483

2473:                                             ; preds = %2447
  %2474 = icmp eq i32 %2450, %2453
  br i1 %2474, label %2475, label %2481

2475:                                             ; preds = %2473
  store i32 0, ptr %2449, align 4, !tbaa !6
  %2476 = getelementptr inbounds i32, ptr %8, i64 %2448
  %2477 = load i32, ptr %2476, align 4, !tbaa !6
  %2478 = getelementptr inbounds i32, ptr %6, i64 %2448
  store i32 %2477, ptr %2478, align 4, !tbaa !6
  %2479 = add nuw nsw i64 %2448, 1
  %2480 = icmp eq i64 %2479, %2205
  br i1 %2480, label %2488, label %2447, !llvm.loop !843

2481:                                             ; preds = %2443, %2473
  %2482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2483:                                             ; preds = %2456, %2465
  %2484 = phi ptr [ %2472, %2465 ], [ %2449, %2456 ]
  %2485 = phi i32 [ %2471, %2465 ], [ 1, %2456 ]
  %2486 = load i32, ptr %2484, align 4, !tbaa !6
  %2487 = add nsw i32 %2486, %2485
  store i32 %2487, ptr %2484, align 4, !tbaa !6
  br label %2488

2488:                                             ; preds = %2475, %2483, %2445, %2429
  %2489 = icmp eq i32 %2437, %5
  br i1 %2489, label %5556, label %2351, !llvm.loop !844

2490:                                             ; preds = %1884
  %2491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

2492:                                             ; preds = %18
  %2493 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2494 = load ptr, ptr %2493, align 8, !tbaa !10
  %2495 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2496 = load ptr, ptr %2495, align 8, !tbaa !10
  store i32 0, ptr %2496, align 4, !tbaa !6
  %2497 = icmp eq i32 %13, 0
  br i1 %2497, label %2498, label %2503

2498:                                             ; preds = %2492
  %2499 = load i64, ptr %2494, align 8, !tbaa !121
  %2500 = trunc i64 %2499 to i32
  %2501 = mul i32 %2500, %2500
  %2502 = mul i32 %2501, %2501
  store i32 %2502, ptr %2496, align 4, !tbaa !6
  br label %5556

2503:                                             ; preds = %2492
  switch i32 %1, label %3105 [
    i32 1, label %2504
    i32 0, label %2809
  ]

2504:                                             ; preds = %2503
  %2505 = getelementptr inbounds i32, ptr %3, i64 %19
  %2506 = load i32, ptr %2505, align 4, !tbaa !6
  %2507 = icmp eq i32 %2506, 0
  %2508 = icmp sgt i32 %5, 0
  br i1 %2507, label %2518, label %2509

2509:                                             ; preds = %2504
  br i1 %2508, label %2510, label %5556

2510:                                             ; preds = %2509
  %2511 = icmp sgt i32 %13, 1
  %2512 = icmp sgt i32 %13, 0
  %2513 = add i32 %13, -2
  %2514 = zext i32 %2513 to i64
  %2515 = zext i32 %13 to i64
  %2516 = add nuw i32 %5, 1
  %2517 = icmp eq i32 %13, 1
  br label %2667

2518:                                             ; preds = %2504
  br i1 %2508, label %2519, label %5556

2519:                                             ; preds = %2518
  %2520 = icmp sgt i32 %13, 1
  %2521 = icmp sgt i32 %13, 0
  %2522 = add i32 %13, -2
  %2523 = zext i32 %2522 to i64
  %2524 = zext i32 %13 to i64
  %2525 = add nuw i32 %5, 1
  %2526 = icmp eq i32 %13, 1
  br label %2527

2527:                                             ; preds = %2519, %2665
  %2528 = phi i32 [ 0, %2519 ], [ %2617, %2665 ]
  %2529 = phi double [ 0.000000e+00, %2519 ], [ %2616, %2665 ]
  %2530 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2520, label %2531, label %2600

2531:                                             ; preds = %2527, %2590
  %2532 = phi i32 [ %2599, %2590 ], [ 0, %2527 ]
  %2533 = phi i64 [ %2541, %2590 ], [ %2524, %2527 ]
  %2534 = phi i64 [ %2598, %2590 ], [ %2523, %2527 ]
  %2535 = phi i32 [ %2596, %2590 ], [ %2530, %2527 ]
  %2536 = sub i32 %2522, %2532
  %2537 = tail call i32 @llvm.smin.i32(i32 %2536, i32 0)
  %2538 = sub i32 %2536, %2537
  %2539 = zext i32 %2538 to i64
  %2540 = add nuw nsw i64 %2539, 1
  %2541 = add nsw i64 %2533, -1
  %2542 = icmp ult i32 %2538, 31
  br i1 %2542, label %2578, label %2543

2543:                                             ; preds = %2531
  %2544 = and i64 %2540, 8589934560
  %2545 = sub i64 %2534, %2544
  br label %2546

2546:                                             ; preds = %2546, %2543
  %2547 = phi i64 [ 0, %2543 ], [ %2570, %2546 ]
  %2548 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2543 ], [ %2566, %2546 ]
  %2549 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2543 ], [ %2567, %2546 ]
  %2550 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2543 ], [ %2568, %2546 ]
  %2551 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2543 ], [ %2569, %2546 ]
  %2552 = sub i64 %2534, %2547
  %2553 = getelementptr inbounds i32, ptr %9, i64 %2552
  %2554 = getelementptr inbounds i32, ptr %2553, i64 -7
  %2555 = load <8 x i32>, ptr %2554, align 4, !tbaa !6
  %2556 = shufflevector <8 x i32> %2555, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2557 = getelementptr inbounds i32, ptr %2553, i64 -15
  %2558 = load <8 x i32>, ptr %2557, align 4, !tbaa !6
  %2559 = shufflevector <8 x i32> %2558, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2560 = getelementptr inbounds i32, ptr %2553, i64 -23
  %2561 = load <8 x i32>, ptr %2560, align 4, !tbaa !6
  %2562 = shufflevector <8 x i32> %2561, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2563 = getelementptr inbounds i32, ptr %2553, i64 -31
  %2564 = load <8 x i32>, ptr %2563, align 4, !tbaa !6
  %2565 = shufflevector <8 x i32> %2564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2566 = mul <8 x i32> %2556, %2548
  %2567 = mul <8 x i32> %2559, %2549
  %2568 = mul <8 x i32> %2562, %2550
  %2569 = mul <8 x i32> %2565, %2551
  %2570 = add nuw i64 %2547, 32
  %2571 = icmp eq i64 %2570, %2544
  br i1 %2571, label %2572, label %2546, !llvm.loop !845

2572:                                             ; preds = %2546
  %2573 = mul <8 x i32> %2567, %2566
  %2574 = mul <8 x i32> %2568, %2573
  %2575 = mul <8 x i32> %2569, %2574
  %2576 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2575)
  %2577 = icmp eq i64 %2540, %2544
  br i1 %2577, label %2590, label %2578

2578:                                             ; preds = %2531, %2572
  %2579 = phi i64 [ %2534, %2531 ], [ %2545, %2572 ]
  %2580 = phi i32 [ 1, %2531 ], [ %2576, %2572 ]
  br label %2581

2581:                                             ; preds = %2578, %2581
  %2582 = phi i64 [ %2587, %2581 ], [ %2579, %2578 ]
  %2583 = phi i32 [ %2586, %2581 ], [ %2580, %2578 ]
  %2584 = getelementptr inbounds i32, ptr %9, i64 %2582
  %2585 = load i32, ptr %2584, align 4, !tbaa !6
  %2586 = mul nsw i32 %2585, %2583
  %2587 = add nsw i64 %2582, -1
  %2588 = trunc i64 %2582 to i32
  %2589 = icmp sgt i32 %2588, 0
  br i1 %2589, label %2581, label %2590, !llvm.loop !846

2590:                                             ; preds = %2581, %2572
  %2591 = phi i32 [ %2576, %2572 ], [ %2586, %2581 ]
  %2592 = and i64 %2541, 4294967295
  %2593 = getelementptr inbounds i32, ptr %6, i64 %2592
  %2594 = load i32, ptr %2593, align 4, !tbaa !6
  %2595 = mul nsw i32 %2594, %2591
  %2596 = add nsw i32 %2595, %2535
  %2597 = icmp sgt i64 %2533, 2
  %2598 = add nsw i64 %2534, -1
  %2599 = add i32 %2532, 1
  br i1 %2597, label %2531, label %2600, !llvm.loop !847

2600:                                             ; preds = %2590, %2527
  %2601 = phi i32 [ %2530, %2527 ], [ %2596, %2590 ]
  %2602 = sext i32 %2601 to i64
  %2603 = getelementptr inbounds double, ptr %2, i64 %2602
  %2604 = load double, ptr %2603, align 8, !tbaa !19
  %2605 = getelementptr inbounds i64, ptr %2494, i64 %2602
  %2606 = load i64, ptr %2605, align 8, !tbaa !121
  %2607 = trunc i64 %2606 to i32
  %2608 = load i32, ptr %2496, align 4, !tbaa !6
  %2609 = sitofp i32 %2608 to double
  %2610 = sitofp i32 %2607 to double
  %2611 = fmul fast double %2604, %2610
  %2612 = fmul fast double %2611, %2611
  %2613 = fmul fast double %2612, %2612
  %2614 = fadd fast double %2613, %2609
  %2615 = fptosi double %2614 to i32
  store i32 %2615, ptr %2496, align 4, !tbaa !6
  %2616 = fadd fast double %2604, %2529
  %2617 = add nuw nsw i32 %2528, 1
  br i1 %2521, label %2618, label %2665

2618:                                             ; preds = %2600
  %2619 = load i32, ptr %4, align 4, !tbaa !6
  %2620 = load i32, ptr %12, align 4, !tbaa !6
  %2621 = add nsw i32 %2620, -1
  %2622 = icmp slt i32 %2619, %2621
  br i1 %2622, label %2642, label %2623

2623:                                             ; preds = %2618
  %2624 = icmp eq i32 %2619, %2621
  br i1 %2624, label %2625, label %2658

2625:                                             ; preds = %2623
  store i32 0, ptr %4, align 4, !tbaa !6
  %2626 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2626, ptr %6, align 4, !tbaa !6
  br i1 %2526, label %2665, label %2627

2627:                                             ; preds = %2625, %2652
  %2628 = phi i64 [ %2656, %2652 ], [ 1, %2625 ]
  %2629 = getelementptr inbounds i32, ptr %4, i64 %2628
  %2630 = load i32, ptr %2629, align 4, !tbaa !6
  %2631 = getelementptr inbounds i32, ptr %12, i64 %2628
  %2632 = load i32, ptr %2631, align 4, !tbaa !6
  %2633 = add nsw i32 %2632, -1
  %2634 = icmp slt i32 %2630, %2633
  br i1 %2634, label %2635, label %2650

2635:                                             ; preds = %2627
  br i1 %2622, label %2642, label %2636

2636:                                             ; preds = %2635
  %2637 = getelementptr inbounds i32, ptr %7, i64 %2628
  %2638 = load i32, ptr %2637, align 4, !tbaa !6
  %2639 = getelementptr inbounds i32, ptr %6, i64 %2628
  %2640 = load i32, ptr %2639, align 4, !tbaa !6
  %2641 = add nsw i32 %2640, %2638
  store i32 %2641, ptr %2639, align 4, !tbaa !6
  br label %2660

2642:                                             ; preds = %2618, %2635
  %2643 = phi i32 [ %2630, %2635 ], [ %2619, %2618 ]
  %2644 = phi ptr [ %2629, %2635 ], [ %4, %2618 ]
  %2645 = phi i64 [ %2628, %2635 ], [ 0, %2618 ]
  %2646 = add nsw i32 %2643, 1
  store i32 %2646, ptr %2644, align 4, !tbaa !6
  %2647 = getelementptr inbounds i32, ptr %7, i64 %2645
  %2648 = load i32, ptr %2647, align 4, !tbaa !6
  %2649 = getelementptr inbounds i32, ptr %6, i64 %2645
  br label %2660

2650:                                             ; preds = %2627
  %2651 = icmp eq i32 %2630, %2633
  br i1 %2651, label %2652, label %2658

2652:                                             ; preds = %2650
  store i32 0, ptr %2629, align 4, !tbaa !6
  %2653 = getelementptr inbounds i32, ptr %8, i64 %2628
  %2654 = load i32, ptr %2653, align 4, !tbaa !6
  %2655 = getelementptr inbounds i32, ptr %6, i64 %2628
  store i32 %2654, ptr %2655, align 4, !tbaa !6
  %2656 = add nuw nsw i64 %2628, 1
  %2657 = icmp eq i64 %2656, %2524
  br i1 %2657, label %2665, label %2627, !llvm.loop !848

2658:                                             ; preds = %2623, %2650
  %2659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2660:                                             ; preds = %2636, %2642
  %2661 = phi ptr [ %2649, %2642 ], [ %2629, %2636 ]
  %2662 = phi i32 [ %2648, %2642 ], [ 1, %2636 ]
  %2663 = load i32, ptr %2661, align 4, !tbaa !6
  %2664 = add nsw i32 %2663, %2662
  store i32 %2664, ptr %2661, align 4, !tbaa !6
  br label %2665

2665:                                             ; preds = %2652, %2660, %2625, %2600
  %2666 = icmp eq i32 %2617, %5
  br i1 %2666, label %5556, label %2527, !llvm.loop !849

2667:                                             ; preds = %2510, %2807
  %2668 = phi i32 [ 0, %2510 ], [ %2756, %2807 ]
  %2669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2511, label %2670, label %2739

2670:                                             ; preds = %2667, %2729
  %2671 = phi i32 [ %2738, %2729 ], [ 0, %2667 ]
  %2672 = phi i64 [ %2680, %2729 ], [ %2515, %2667 ]
  %2673 = phi i64 [ %2737, %2729 ], [ %2514, %2667 ]
  %2674 = phi i32 [ %2735, %2729 ], [ %2669, %2667 ]
  %2675 = sub i32 %2513, %2671
  %2676 = tail call i32 @llvm.smin.i32(i32 %2675, i32 0)
  %2677 = sub i32 %2675, %2676
  %2678 = zext i32 %2677 to i64
  %2679 = add nuw nsw i64 %2678, 1
  %2680 = add nsw i64 %2672, -1
  %2681 = icmp ult i32 %2677, 31
  br i1 %2681, label %2717, label %2682

2682:                                             ; preds = %2670
  %2683 = and i64 %2679, 8589934560
  %2684 = sub i64 %2673, %2683
  br label %2685

2685:                                             ; preds = %2685, %2682
  %2686 = phi i64 [ 0, %2682 ], [ %2709, %2685 ]
  %2687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2682 ], [ %2705, %2685 ]
  %2688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2682 ], [ %2706, %2685 ]
  %2689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2682 ], [ %2707, %2685 ]
  %2690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2682 ], [ %2708, %2685 ]
  %2691 = sub i64 %2673, %2686
  %2692 = getelementptr inbounds i32, ptr %11, i64 %2691
  %2693 = getelementptr inbounds i32, ptr %2692, i64 -7
  %2694 = load <8 x i32>, ptr %2693, align 4, !tbaa !6
  %2695 = shufflevector <8 x i32> %2694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2696 = getelementptr inbounds i32, ptr %2692, i64 -15
  %2697 = load <8 x i32>, ptr %2696, align 4, !tbaa !6
  %2698 = shufflevector <8 x i32> %2697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2699 = getelementptr inbounds i32, ptr %2692, i64 -23
  %2700 = load <8 x i32>, ptr %2699, align 4, !tbaa !6
  %2701 = shufflevector <8 x i32> %2700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2702 = getelementptr inbounds i32, ptr %2692, i64 -31
  %2703 = load <8 x i32>, ptr %2702, align 4, !tbaa !6
  %2704 = shufflevector <8 x i32> %2703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2705 = mul <8 x i32> %2695, %2687
  %2706 = mul <8 x i32> %2698, %2688
  %2707 = mul <8 x i32> %2701, %2689
  %2708 = mul <8 x i32> %2704, %2690
  %2709 = add nuw i64 %2686, 32
  %2710 = icmp eq i64 %2709, %2683
  br i1 %2710, label %2711, label %2685, !llvm.loop !850

2711:                                             ; preds = %2685
  %2712 = mul <8 x i32> %2706, %2705
  %2713 = mul <8 x i32> %2707, %2712
  %2714 = mul <8 x i32> %2708, %2713
  %2715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2714)
  %2716 = icmp eq i64 %2679, %2683
  br i1 %2716, label %2729, label %2717

2717:                                             ; preds = %2670, %2711
  %2718 = phi i64 [ %2673, %2670 ], [ %2684, %2711 ]
  %2719 = phi i32 [ 1, %2670 ], [ %2715, %2711 ]
  br label %2720

2720:                                             ; preds = %2717, %2720
  %2721 = phi i64 [ %2726, %2720 ], [ %2718, %2717 ]
  %2722 = phi i32 [ %2725, %2720 ], [ %2719, %2717 ]
  %2723 = getelementptr inbounds i32, ptr %11, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = mul nsw i32 %2724, %2722
  %2726 = add nsw i64 %2721, -1
  %2727 = trunc i64 %2721 to i32
  %2728 = icmp sgt i32 %2727, 0
  br i1 %2728, label %2720, label %2729, !llvm.loop !851

2729:                                             ; preds = %2720, %2711
  %2730 = phi i32 [ %2715, %2711 ], [ %2725, %2720 ]
  %2731 = and i64 %2680, 4294967295
  %2732 = getelementptr inbounds i32, ptr %6, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !6
  %2734 = mul nsw i32 %2733, %2730
  %2735 = add nsw i32 %2734, %2674
  %2736 = icmp sgt i64 %2672, 2
  %2737 = add nsw i64 %2673, -1
  %2738 = add i32 %2671, 1
  br i1 %2736, label %2670, label %2739, !llvm.loop !852

2739:                                             ; preds = %2729, %2667
  %2740 = phi i32 [ %2669, %2667 ], [ %2735, %2729 ]
  %2741 = icmp slt i32 %2740, %5
  br i1 %2741, label %2744, label %2742

2742:                                             ; preds = %2739
  %2743 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

2744:                                             ; preds = %2739
  %2745 = sext i32 %2740 to i64
  %2746 = getelementptr inbounds i64, ptr %2494, i64 %2745
  %2747 = load i64, ptr %2746, align 8, !tbaa !121
  %2748 = trunc i64 %2747 to i32
  %2749 = load i32, ptr %2496, align 4, !tbaa !6
  %2750 = sitofp i32 %2749 to double
  %2751 = sitofp i32 %2748 to double
  %2752 = fmul fast double %2751, %2751
  %2753 = fmul fast double %2752, %2752
  %2754 = fadd fast double %2753, %2750
  %2755 = fptosi double %2754 to i32
  store i32 %2755, ptr %2496, align 4, !tbaa !6
  %2756 = add nuw nsw i32 %2668, 1
  br i1 %2512, label %2757, label %2807

2757:                                             ; preds = %2744
  %2758 = load i32, ptr %4, align 4, !tbaa !6
  %2759 = load i32, ptr %12, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2758, %2760
  br i1 %2761, label %2784, label %2762

2762:                                             ; preds = %2757
  %2763 = icmp eq i32 %2758, %2760
  br i1 %2763, label %2764, label %2800

2764:                                             ; preds = %2762
  store i32 0, ptr %4, align 4, !tbaa !6
  %2765 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2765, ptr %6, align 4, !tbaa !6
  br i1 %2517, label %2807, label %2766

2766:                                             ; preds = %2764, %2794
  %2767 = phi i64 [ %2798, %2794 ], [ 1, %2764 ]
  %2768 = getelementptr inbounds i32, ptr %4, i64 %2767
  %2769 = load i32, ptr %2768, align 4, !tbaa !6
  %2770 = getelementptr inbounds i32, ptr %12, i64 %2767
  %2771 = load i32, ptr %2770, align 4, !tbaa !6
  %2772 = add nsw i32 %2771, -1
  %2773 = icmp slt i32 %2769, %2772
  br i1 %2773, label %2774, label %2792

2774:                                             ; preds = %2766
  br i1 %2761, label %2784, label %2775

2775:                                             ; preds = %2774
  %2776 = shl i64 %2767, 32
  %2777 = add i64 %2776, -4294967296
  %2778 = ashr exact i64 %2777, 32
  %2779 = getelementptr inbounds i32, ptr %7, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = getelementptr inbounds i32, ptr %6, i64 %2767
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = add nsw i32 %2782, %2780
  store i32 %2783, ptr %2781, align 4, !tbaa !6
  br label %2802

2784:                                             ; preds = %2757, %2774
  %2785 = phi i32 [ %2769, %2774 ], [ %2758, %2757 ]
  %2786 = phi ptr [ %2768, %2774 ], [ %4, %2757 ]
  %2787 = phi i64 [ %2767, %2774 ], [ 0, %2757 ]
  %2788 = add nsw i32 %2785, 1
  store i32 %2788, ptr %2786, align 4, !tbaa !6
  %2789 = getelementptr inbounds i32, ptr %7, i64 %2787
  %2790 = load i32, ptr %2789, align 4, !tbaa !6
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2787
  br label %2802

2792:                                             ; preds = %2766
  %2793 = icmp eq i32 %2769, %2772
  br i1 %2793, label %2794, label %2800

2794:                                             ; preds = %2792
  store i32 0, ptr %2768, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %8, i64 %2767
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2767
  store i32 %2796, ptr %2797, align 4, !tbaa !6
  %2798 = add nuw nsw i64 %2767, 1
  %2799 = icmp eq i64 %2798, %2515
  br i1 %2799, label %2807, label %2766, !llvm.loop !853

2800:                                             ; preds = %2762, %2792
  %2801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2802:                                             ; preds = %2775, %2784
  %2803 = phi ptr [ %2791, %2784 ], [ %2768, %2775 ]
  %2804 = phi i32 [ %2790, %2784 ], [ 1, %2775 ]
  %2805 = load i32, ptr %2803, align 4, !tbaa !6
  %2806 = add nsw i32 %2805, %2804
  store i32 %2806, ptr %2803, align 4, !tbaa !6
  br label %2807

2807:                                             ; preds = %2794, %2802, %2764, %2744
  %2808 = icmp eq i32 %2756, %5
  br i1 %2808, label %5556, label %2667, !llvm.loop !854

2809:                                             ; preds = %2503
  %2810 = getelementptr inbounds i32, ptr %3, i64 %19
  %2811 = load i32, ptr %2810, align 4, !tbaa !6
  %2812 = icmp eq i32 %2811, 0
  %2813 = icmp sgt i32 %5, 0
  br i1 %2812, label %2823, label %2814

2814:                                             ; preds = %2809
  br i1 %2813, label %2815, label %5556

2815:                                             ; preds = %2814
  %2816 = icmp sgt i32 %13, 1
  %2817 = icmp sgt i32 %13, 0
  %2818 = add i32 %13, -2
  %2819 = zext i32 %2818 to i64
  %2820 = zext i32 %13 to i64
  %2821 = add nuw i32 %5, 1
  %2822 = icmp eq i32 %13, 1
  br label %2966

2823:                                             ; preds = %2809
  br i1 %2813, label %2824, label %5556

2824:                                             ; preds = %2823
  %2825 = icmp sgt i32 %13, 1
  %2826 = icmp sgt i32 %13, 0
  %2827 = add i32 %13, -2
  %2828 = zext i32 %2827 to i64
  %2829 = zext i32 %13 to i64
  %2830 = add nuw i32 %5, 1
  %2831 = icmp eq i32 %13, 1
  br label %2832

2832:                                             ; preds = %2824, %2964
  %2833 = phi i32 [ 0, %2824 ], [ %2916, %2964 ]
  %2834 = phi double [ 0.000000e+00, %2824 ], [ %2915, %2964 ]
  %2835 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2825, label %2836, label %2905

2836:                                             ; preds = %2832, %2895
  %2837 = phi i32 [ %2904, %2895 ], [ 0, %2832 ]
  %2838 = phi i64 [ %2846, %2895 ], [ %2829, %2832 ]
  %2839 = phi i64 [ %2903, %2895 ], [ %2828, %2832 ]
  %2840 = phi i32 [ %2901, %2895 ], [ %2835, %2832 ]
  %2841 = sub i32 %2827, %2837
  %2842 = tail call i32 @llvm.smin.i32(i32 %2841, i32 0)
  %2843 = sub i32 %2841, %2842
  %2844 = zext i32 %2843 to i64
  %2845 = add nuw nsw i64 %2844, 1
  %2846 = add nsw i64 %2838, -1
  %2847 = icmp ult i32 %2843, 31
  br i1 %2847, label %2883, label %2848

2848:                                             ; preds = %2836
  %2849 = and i64 %2845, 8589934560
  %2850 = sub i64 %2839, %2849
  br label %2851

2851:                                             ; preds = %2851, %2848
  %2852 = phi i64 [ 0, %2848 ], [ %2875, %2851 ]
  %2853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2871, %2851 ]
  %2854 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2872, %2851 ]
  %2855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2873, %2851 ]
  %2856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2874, %2851 ]
  %2857 = sub i64 %2839, %2852
  %2858 = getelementptr inbounds i32, ptr %9, i64 %2857
  %2859 = getelementptr inbounds i32, ptr %2858, i64 -7
  %2860 = load <8 x i32>, ptr %2859, align 4, !tbaa !6
  %2861 = shufflevector <8 x i32> %2860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2862 = getelementptr inbounds i32, ptr %2858, i64 -15
  %2863 = load <8 x i32>, ptr %2862, align 4, !tbaa !6
  %2864 = shufflevector <8 x i32> %2863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2865 = getelementptr inbounds i32, ptr %2858, i64 -23
  %2866 = load <8 x i32>, ptr %2865, align 4, !tbaa !6
  %2867 = shufflevector <8 x i32> %2866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2868 = getelementptr inbounds i32, ptr %2858, i64 -31
  %2869 = load <8 x i32>, ptr %2868, align 4, !tbaa !6
  %2870 = shufflevector <8 x i32> %2869, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2871 = mul <8 x i32> %2861, %2853
  %2872 = mul <8 x i32> %2864, %2854
  %2873 = mul <8 x i32> %2867, %2855
  %2874 = mul <8 x i32> %2870, %2856
  %2875 = add nuw i64 %2852, 32
  %2876 = icmp eq i64 %2875, %2849
  br i1 %2876, label %2877, label %2851, !llvm.loop !855

2877:                                             ; preds = %2851
  %2878 = mul <8 x i32> %2872, %2871
  %2879 = mul <8 x i32> %2873, %2878
  %2880 = mul <8 x i32> %2874, %2879
  %2881 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2880)
  %2882 = icmp eq i64 %2845, %2849
  br i1 %2882, label %2895, label %2883

2883:                                             ; preds = %2836, %2877
  %2884 = phi i64 [ %2839, %2836 ], [ %2850, %2877 ]
  %2885 = phi i32 [ 1, %2836 ], [ %2881, %2877 ]
  br label %2886

2886:                                             ; preds = %2883, %2886
  %2887 = phi i64 [ %2892, %2886 ], [ %2884, %2883 ]
  %2888 = phi i32 [ %2891, %2886 ], [ %2885, %2883 ]
  %2889 = getelementptr inbounds i32, ptr %9, i64 %2887
  %2890 = load i32, ptr %2889, align 4, !tbaa !6
  %2891 = mul nsw i32 %2890, %2888
  %2892 = add nsw i64 %2887, -1
  %2893 = trunc i64 %2887 to i32
  %2894 = icmp sgt i32 %2893, 0
  br i1 %2894, label %2886, label %2895, !llvm.loop !856

2895:                                             ; preds = %2886, %2877
  %2896 = phi i32 [ %2881, %2877 ], [ %2891, %2886 ]
  %2897 = and i64 %2846, 4294967295
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2897
  %2899 = load i32, ptr %2898, align 4, !tbaa !6
  %2900 = mul nsw i32 %2899, %2896
  %2901 = add nsw i32 %2900, %2840
  %2902 = icmp sgt i64 %2838, 2
  %2903 = add nsw i64 %2839, -1
  %2904 = add i32 %2837, 1
  br i1 %2902, label %2836, label %2905, !llvm.loop !857

2905:                                             ; preds = %2895, %2832
  %2906 = phi i32 [ %2835, %2832 ], [ %2901, %2895 ]
  %2907 = sext i32 %2906 to i64
  %2908 = getelementptr inbounds i64, ptr %2494, i64 %2907
  %2909 = load i64, ptr %2908, align 8, !tbaa !121
  %2910 = trunc i64 %2909 to i32
  %2911 = load i32, ptr %2496, align 4, !tbaa !6
  %2912 = mul i32 %2910, %2910
  %2913 = mul i32 %2912, %2912
  %2914 = add nsw i32 %2913, %2911
  store i32 %2914, ptr %2496, align 4, !tbaa !6
  %2915 = fadd fast double %2834, 1.000000e+00
  %2916 = add nuw nsw i32 %2833, 1
  br i1 %2826, label %2917, label %2964

2917:                                             ; preds = %2905
  %2918 = load i32, ptr %4, align 4, !tbaa !6
  %2919 = load i32, ptr %12, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, -1
  %2921 = icmp slt i32 %2918, %2920
  br i1 %2921, label %2941, label %2922

2922:                                             ; preds = %2917
  %2923 = icmp eq i32 %2918, %2920
  br i1 %2923, label %2924, label %2957

2924:                                             ; preds = %2922
  store i32 0, ptr %4, align 4, !tbaa !6
  %2925 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2925, ptr %6, align 4, !tbaa !6
  br i1 %2831, label %2964, label %2926

2926:                                             ; preds = %2924, %2951
  %2927 = phi i64 [ %2955, %2951 ], [ 1, %2924 ]
  %2928 = getelementptr inbounds i32, ptr %4, i64 %2927
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %12, i64 %2927
  %2931 = load i32, ptr %2930, align 4, !tbaa !6
  %2932 = add nsw i32 %2931, -1
  %2933 = icmp slt i32 %2929, %2932
  br i1 %2933, label %2934, label %2949

2934:                                             ; preds = %2926
  br i1 %2921, label %2941, label %2935

2935:                                             ; preds = %2934
  %2936 = getelementptr inbounds i32, ptr %7, i64 %2927
  %2937 = load i32, ptr %2936, align 4, !tbaa !6
  %2938 = getelementptr inbounds i32, ptr %6, i64 %2927
  %2939 = load i32, ptr %2938, align 4, !tbaa !6
  %2940 = add nsw i32 %2939, %2937
  store i32 %2940, ptr %2938, align 4, !tbaa !6
  br label %2959

2941:                                             ; preds = %2917, %2934
  %2942 = phi i32 [ %2929, %2934 ], [ %2918, %2917 ]
  %2943 = phi ptr [ %2928, %2934 ], [ %4, %2917 ]
  %2944 = phi i64 [ %2927, %2934 ], [ 0, %2917 ]
  %2945 = add nsw i32 %2942, 1
  store i32 %2945, ptr %2943, align 4, !tbaa !6
  %2946 = getelementptr inbounds i32, ptr %7, i64 %2944
  %2947 = load i32, ptr %2946, align 4, !tbaa !6
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2944
  br label %2959

2949:                                             ; preds = %2926
  %2950 = icmp eq i32 %2929, %2932
  br i1 %2950, label %2951, label %2957

2951:                                             ; preds = %2949
  store i32 0, ptr %2928, align 4, !tbaa !6
  %2952 = getelementptr inbounds i32, ptr %8, i64 %2927
  %2953 = load i32, ptr %2952, align 4, !tbaa !6
  %2954 = getelementptr inbounds i32, ptr %6, i64 %2927
  store i32 %2953, ptr %2954, align 4, !tbaa !6
  %2955 = add nuw nsw i64 %2927, 1
  %2956 = icmp eq i64 %2955, %2829
  br i1 %2956, label %2964, label %2926, !llvm.loop !858

2957:                                             ; preds = %2922, %2949
  %2958 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

2959:                                             ; preds = %2935, %2941
  %2960 = phi ptr [ %2948, %2941 ], [ %2928, %2935 ]
  %2961 = phi i32 [ %2947, %2941 ], [ 1, %2935 ]
  %2962 = load i32, ptr %2960, align 4, !tbaa !6
  %2963 = add nsw i32 %2962, %2961
  store i32 %2963, ptr %2960, align 4, !tbaa !6
  br label %2964

2964:                                             ; preds = %2951, %2959, %2924, %2905
  %2965 = icmp eq i32 %2916, %5
  br i1 %2965, label %5556, label %2832, !llvm.loop !859

2966:                                             ; preds = %2815, %3103
  %2967 = phi i32 [ 0, %2815 ], [ %3052, %3103 ]
  %2968 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2816, label %2969, label %3038

2969:                                             ; preds = %2966, %3028
  %2970 = phi i32 [ %3037, %3028 ], [ 0, %2966 ]
  %2971 = phi i64 [ %2979, %3028 ], [ %2820, %2966 ]
  %2972 = phi i64 [ %3036, %3028 ], [ %2819, %2966 ]
  %2973 = phi i32 [ %3034, %3028 ], [ %2968, %2966 ]
  %2974 = sub i32 %2818, %2970
  %2975 = tail call i32 @llvm.smin.i32(i32 %2974, i32 0)
  %2976 = sub i32 %2974, %2975
  %2977 = zext i32 %2976 to i64
  %2978 = add nuw nsw i64 %2977, 1
  %2979 = add nsw i64 %2971, -1
  %2980 = icmp ult i32 %2976, 31
  br i1 %2980, label %3016, label %2981

2981:                                             ; preds = %2969
  %2982 = and i64 %2978, 8589934560
  %2983 = sub i64 %2972, %2982
  br label %2984

2984:                                             ; preds = %2984, %2981
  %2985 = phi i64 [ 0, %2981 ], [ %3008, %2984 ]
  %2986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2981 ], [ %3004, %2984 ]
  %2987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2981 ], [ %3005, %2984 ]
  %2988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2981 ], [ %3006, %2984 ]
  %2989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2981 ], [ %3007, %2984 ]
  %2990 = sub i64 %2972, %2985
  %2991 = getelementptr inbounds i32, ptr %11, i64 %2990
  %2992 = getelementptr inbounds i32, ptr %2991, i64 -7
  %2993 = load <8 x i32>, ptr %2992, align 4, !tbaa !6
  %2994 = shufflevector <8 x i32> %2993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2995 = getelementptr inbounds i32, ptr %2991, i64 -15
  %2996 = load <8 x i32>, ptr %2995, align 4, !tbaa !6
  %2997 = shufflevector <8 x i32> %2996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2998 = getelementptr inbounds i32, ptr %2991, i64 -23
  %2999 = load <8 x i32>, ptr %2998, align 4, !tbaa !6
  %3000 = shufflevector <8 x i32> %2999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3001 = getelementptr inbounds i32, ptr %2991, i64 -31
  %3002 = load <8 x i32>, ptr %3001, align 4, !tbaa !6
  %3003 = shufflevector <8 x i32> %3002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3004 = mul <8 x i32> %2994, %2986
  %3005 = mul <8 x i32> %2997, %2987
  %3006 = mul <8 x i32> %3000, %2988
  %3007 = mul <8 x i32> %3003, %2989
  %3008 = add nuw i64 %2985, 32
  %3009 = icmp eq i64 %3008, %2982
  br i1 %3009, label %3010, label %2984, !llvm.loop !860

3010:                                             ; preds = %2984
  %3011 = mul <8 x i32> %3005, %3004
  %3012 = mul <8 x i32> %3006, %3011
  %3013 = mul <8 x i32> %3007, %3012
  %3014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3013)
  %3015 = icmp eq i64 %2978, %2982
  br i1 %3015, label %3028, label %3016

3016:                                             ; preds = %2969, %3010
  %3017 = phi i64 [ %2972, %2969 ], [ %2983, %3010 ]
  %3018 = phi i32 [ 1, %2969 ], [ %3014, %3010 ]
  br label %3019

3019:                                             ; preds = %3016, %3019
  %3020 = phi i64 [ %3025, %3019 ], [ %3017, %3016 ]
  %3021 = phi i32 [ %3024, %3019 ], [ %3018, %3016 ]
  %3022 = getelementptr inbounds i32, ptr %11, i64 %3020
  %3023 = load i32, ptr %3022, align 4, !tbaa !6
  %3024 = mul nsw i32 %3023, %3021
  %3025 = add nsw i64 %3020, -1
  %3026 = trunc i64 %3020 to i32
  %3027 = icmp sgt i32 %3026, 0
  br i1 %3027, label %3019, label %3028, !llvm.loop !861

3028:                                             ; preds = %3019, %3010
  %3029 = phi i32 [ %3014, %3010 ], [ %3024, %3019 ]
  %3030 = and i64 %2979, 4294967295
  %3031 = getelementptr inbounds i32, ptr %6, i64 %3030
  %3032 = load i32, ptr %3031, align 4, !tbaa !6
  %3033 = mul nsw i32 %3032, %3029
  %3034 = add nsw i32 %3033, %2973
  %3035 = icmp sgt i64 %2971, 2
  %3036 = add nsw i64 %2972, -1
  %3037 = add i32 %2970, 1
  br i1 %3035, label %2969, label %3038, !llvm.loop !862

3038:                                             ; preds = %3028, %2966
  %3039 = phi i32 [ %2968, %2966 ], [ %3034, %3028 ]
  %3040 = icmp slt i32 %3039, %5
  br i1 %3040, label %3043, label %3041

3041:                                             ; preds = %3038
  %3042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

3043:                                             ; preds = %3038
  %3044 = sext i32 %3039 to i64
  %3045 = getelementptr inbounds i64, ptr %2494, i64 %3044
  %3046 = load i64, ptr %3045, align 8, !tbaa !121
  %3047 = trunc i64 %3046 to i32
  %3048 = load i32, ptr %2496, align 4, !tbaa !6
  %3049 = mul i32 %3047, %3047
  %3050 = mul i32 %3049, %3049
  %3051 = add nsw i32 %3050, %3048
  store i32 %3051, ptr %2496, align 4, !tbaa !6
  %3052 = add nuw nsw i32 %2967, 1
  br i1 %2817, label %3053, label %3103

3053:                                             ; preds = %3043
  %3054 = load i32, ptr %4, align 4, !tbaa !6
  %3055 = load i32, ptr %12, align 4, !tbaa !6
  %3056 = add nsw i32 %3055, -1
  %3057 = icmp slt i32 %3054, %3056
  br i1 %3057, label %3080, label %3058

3058:                                             ; preds = %3053
  %3059 = icmp eq i32 %3054, %3056
  br i1 %3059, label %3060, label %3096

3060:                                             ; preds = %3058
  store i32 0, ptr %4, align 4, !tbaa !6
  %3061 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3061, ptr %6, align 4, !tbaa !6
  br i1 %2822, label %3103, label %3062

3062:                                             ; preds = %3060, %3090
  %3063 = phi i64 [ %3094, %3090 ], [ 1, %3060 ]
  %3064 = getelementptr inbounds i32, ptr %4, i64 %3063
  %3065 = load i32, ptr %3064, align 4, !tbaa !6
  %3066 = getelementptr inbounds i32, ptr %12, i64 %3063
  %3067 = load i32, ptr %3066, align 4, !tbaa !6
  %3068 = add nsw i32 %3067, -1
  %3069 = icmp slt i32 %3065, %3068
  br i1 %3069, label %3070, label %3088

3070:                                             ; preds = %3062
  br i1 %3057, label %3080, label %3071

3071:                                             ; preds = %3070
  %3072 = shl i64 %3063, 32
  %3073 = add i64 %3072, -4294967296
  %3074 = ashr exact i64 %3073, 32
  %3075 = getelementptr inbounds i32, ptr %7, i64 %3074
  %3076 = load i32, ptr %3075, align 4, !tbaa !6
  %3077 = getelementptr inbounds i32, ptr %6, i64 %3063
  %3078 = load i32, ptr %3077, align 4, !tbaa !6
  %3079 = add nsw i32 %3078, %3076
  store i32 %3079, ptr %3077, align 4, !tbaa !6
  br label %3098

3080:                                             ; preds = %3053, %3070
  %3081 = phi i32 [ %3065, %3070 ], [ %3054, %3053 ]
  %3082 = phi ptr [ %3064, %3070 ], [ %4, %3053 ]
  %3083 = phi i64 [ %3063, %3070 ], [ 0, %3053 ]
  %3084 = add nsw i32 %3081, 1
  store i32 %3084, ptr %3082, align 4, !tbaa !6
  %3085 = getelementptr inbounds i32, ptr %7, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = getelementptr inbounds i32, ptr %6, i64 %3083
  br label %3098

3088:                                             ; preds = %3062
  %3089 = icmp eq i32 %3065, %3068
  br i1 %3089, label %3090, label %3096

3090:                                             ; preds = %3088
  store i32 0, ptr %3064, align 4, !tbaa !6
  %3091 = getelementptr inbounds i32, ptr %8, i64 %3063
  %3092 = load i32, ptr %3091, align 4, !tbaa !6
  %3093 = getelementptr inbounds i32, ptr %6, i64 %3063
  store i32 %3092, ptr %3093, align 4, !tbaa !6
  %3094 = add nuw nsw i64 %3063, 1
  %3095 = icmp eq i64 %3094, %2820
  br i1 %3095, label %3103, label %3062, !llvm.loop !863

3096:                                             ; preds = %3058, %3088
  %3097 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3098:                                             ; preds = %3071, %3080
  %3099 = phi ptr [ %3087, %3080 ], [ %3064, %3071 ]
  %3100 = phi i32 [ %3086, %3080 ], [ 1, %3071 ]
  %3101 = load i32, ptr %3099, align 4, !tbaa !6
  %3102 = add nsw i32 %3101, %3100
  store i32 %3102, ptr %3099, align 4, !tbaa !6
  br label %3103

3103:                                             ; preds = %3090, %3098, %3060, %3043
  %3104 = icmp eq i32 %3052, %5
  br i1 %3104, label %5556, label %2966, !llvm.loop !864

3105:                                             ; preds = %2503
  %3106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

3107:                                             ; preds = %18
  %3108 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3109 = load ptr, ptr %3108, align 8, !tbaa !10
  %3110 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3111 = load ptr, ptr %3110, align 8, !tbaa !10
  store i64 0, ptr %3111, align 8, !tbaa !121
  %3112 = icmp eq i32 %13, 0
  br i1 %3112, label %3113, label %3117

3113:                                             ; preds = %3107
  %3114 = load i64, ptr %3109, align 8, !tbaa !121
  %3115 = mul i64 %3114, %3114
  %3116 = mul i64 %3115, %3115
  store i64 %3116, ptr %3111, align 8, !tbaa !121
  br label %5556

3117:                                             ; preds = %3107
  switch i32 %1, label %3715 [
    i32 1, label %3118
    i32 0, label %3421
  ]

3118:                                             ; preds = %3117
  %3119 = getelementptr inbounds i32, ptr %3, i64 %19
  %3120 = load i32, ptr %3119, align 4, !tbaa !6
  %3121 = icmp eq i32 %3120, 0
  %3122 = icmp sgt i32 %5, 0
  br i1 %3121, label %3132, label %3123

3123:                                             ; preds = %3118
  br i1 %3122, label %3124, label %5556

3124:                                             ; preds = %3123
  %3125 = icmp sgt i32 %13, 1
  %3126 = icmp sgt i32 %13, 0
  %3127 = add i32 %13, -2
  %3128 = zext i32 %3127 to i64
  %3129 = zext i32 %13 to i64
  %3130 = add nuw i32 %5, 1
  %3131 = icmp eq i32 %13, 1
  br label %3280

3132:                                             ; preds = %3118
  br i1 %3122, label %3133, label %5556

3133:                                             ; preds = %3132
  %3134 = icmp sgt i32 %13, 1
  %3135 = icmp sgt i32 %13, 0
  %3136 = add i32 %13, -2
  %3137 = zext i32 %3136 to i64
  %3138 = zext i32 %13 to i64
  %3139 = add nuw i32 %5, 1
  %3140 = icmp eq i32 %13, 1
  br label %3141

3141:                                             ; preds = %3133, %3278
  %3142 = phi i64 [ 0, %3133 ], [ %3228, %3278 ]
  %3143 = phi i32 [ 0, %3133 ], [ %3230, %3278 ]
  %3144 = phi double [ 0.000000e+00, %3133 ], [ %3229, %3278 ]
  %3145 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3134, label %3146, label %3215

3146:                                             ; preds = %3141, %3205
  %3147 = phi i32 [ %3214, %3205 ], [ 0, %3141 ]
  %3148 = phi i64 [ %3156, %3205 ], [ %3138, %3141 ]
  %3149 = phi i64 [ %3213, %3205 ], [ %3137, %3141 ]
  %3150 = phi i32 [ %3211, %3205 ], [ %3145, %3141 ]
  %3151 = sub i32 %3136, %3147
  %3152 = tail call i32 @llvm.smin.i32(i32 %3151, i32 0)
  %3153 = sub i32 %3151, %3152
  %3154 = zext i32 %3153 to i64
  %3155 = add nuw nsw i64 %3154, 1
  %3156 = add nsw i64 %3148, -1
  %3157 = icmp ult i32 %3153, 31
  br i1 %3157, label %3193, label %3158

3158:                                             ; preds = %3146
  %3159 = and i64 %3155, 8589934560
  %3160 = sub i64 %3149, %3159
  br label %3161

3161:                                             ; preds = %3161, %3158
  %3162 = phi i64 [ 0, %3158 ], [ %3185, %3161 ]
  %3163 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3158 ], [ %3181, %3161 ]
  %3164 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3158 ], [ %3182, %3161 ]
  %3165 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3158 ], [ %3183, %3161 ]
  %3166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3158 ], [ %3184, %3161 ]
  %3167 = sub i64 %3149, %3162
  %3168 = getelementptr inbounds i32, ptr %9, i64 %3167
  %3169 = getelementptr inbounds i32, ptr %3168, i64 -7
  %3170 = load <8 x i32>, ptr %3169, align 4, !tbaa !6
  %3171 = shufflevector <8 x i32> %3170, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3172 = getelementptr inbounds i32, ptr %3168, i64 -15
  %3173 = load <8 x i32>, ptr %3172, align 4, !tbaa !6
  %3174 = shufflevector <8 x i32> %3173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3175 = getelementptr inbounds i32, ptr %3168, i64 -23
  %3176 = load <8 x i32>, ptr %3175, align 4, !tbaa !6
  %3177 = shufflevector <8 x i32> %3176, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3178 = getelementptr inbounds i32, ptr %3168, i64 -31
  %3179 = load <8 x i32>, ptr %3178, align 4, !tbaa !6
  %3180 = shufflevector <8 x i32> %3179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3181 = mul <8 x i32> %3171, %3163
  %3182 = mul <8 x i32> %3174, %3164
  %3183 = mul <8 x i32> %3177, %3165
  %3184 = mul <8 x i32> %3180, %3166
  %3185 = add nuw i64 %3162, 32
  %3186 = icmp eq i64 %3185, %3159
  br i1 %3186, label %3187, label %3161, !llvm.loop !865

3187:                                             ; preds = %3161
  %3188 = mul <8 x i32> %3182, %3181
  %3189 = mul <8 x i32> %3183, %3188
  %3190 = mul <8 x i32> %3184, %3189
  %3191 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3190)
  %3192 = icmp eq i64 %3155, %3159
  br i1 %3192, label %3205, label %3193

3193:                                             ; preds = %3146, %3187
  %3194 = phi i64 [ %3149, %3146 ], [ %3160, %3187 ]
  %3195 = phi i32 [ 1, %3146 ], [ %3191, %3187 ]
  br label %3196

3196:                                             ; preds = %3193, %3196
  %3197 = phi i64 [ %3202, %3196 ], [ %3194, %3193 ]
  %3198 = phi i32 [ %3201, %3196 ], [ %3195, %3193 ]
  %3199 = getelementptr inbounds i32, ptr %9, i64 %3197
  %3200 = load i32, ptr %3199, align 4, !tbaa !6
  %3201 = mul nsw i32 %3200, %3198
  %3202 = add nsw i64 %3197, -1
  %3203 = trunc i64 %3197 to i32
  %3204 = icmp sgt i32 %3203, 0
  br i1 %3204, label %3196, label %3205, !llvm.loop !866

3205:                                             ; preds = %3196, %3187
  %3206 = phi i32 [ %3191, %3187 ], [ %3201, %3196 ]
  %3207 = and i64 %3156, 4294967295
  %3208 = getelementptr inbounds i32, ptr %6, i64 %3207
  %3209 = load i32, ptr %3208, align 4, !tbaa !6
  %3210 = mul nsw i32 %3209, %3206
  %3211 = add nsw i32 %3210, %3150
  %3212 = icmp sgt i64 %3148, 2
  %3213 = add nsw i64 %3149, -1
  %3214 = add i32 %3147, 1
  br i1 %3212, label %3146, label %3215, !llvm.loop !867

3215:                                             ; preds = %3205, %3141
  %3216 = phi i32 [ %3145, %3141 ], [ %3211, %3205 ]
  %3217 = sext i32 %3216 to i64
  %3218 = getelementptr inbounds double, ptr %2, i64 %3217
  %3219 = load double, ptr %3218, align 8, !tbaa !19
  %3220 = getelementptr inbounds i64, ptr %3109, i64 %3217
  %3221 = load i64, ptr %3220, align 8, !tbaa !121
  %3222 = sitofp i64 %3142 to double
  %3223 = sitofp i64 %3221 to double
  %3224 = fmul fast double %3219, %3223
  %3225 = fmul fast double %3224, %3224
  %3226 = fmul fast double %3225, %3225
  %3227 = fadd fast double %3226, %3222
  %3228 = fptosi double %3227 to i64
  store i64 %3228, ptr %3111, align 8, !tbaa !121
  %3229 = fadd fast double %3219, %3144
  %3230 = add nuw nsw i32 %3143, 1
  br i1 %3135, label %3231, label %3278

3231:                                             ; preds = %3215
  %3232 = load i32, ptr %4, align 4, !tbaa !6
  %3233 = load i32, ptr %12, align 4, !tbaa !6
  %3234 = add nsw i32 %3233, -1
  %3235 = icmp slt i32 %3232, %3234
  br i1 %3235, label %3255, label %3236

3236:                                             ; preds = %3231
  %3237 = icmp eq i32 %3232, %3234
  br i1 %3237, label %3238, label %3271

3238:                                             ; preds = %3236
  store i32 0, ptr %4, align 4, !tbaa !6
  %3239 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3239, ptr %6, align 4, !tbaa !6
  br i1 %3140, label %3278, label %3240

3240:                                             ; preds = %3238, %3265
  %3241 = phi i64 [ %3269, %3265 ], [ 1, %3238 ]
  %3242 = getelementptr inbounds i32, ptr %4, i64 %3241
  %3243 = load i32, ptr %3242, align 4, !tbaa !6
  %3244 = getelementptr inbounds i32, ptr %12, i64 %3241
  %3245 = load i32, ptr %3244, align 4, !tbaa !6
  %3246 = add nsw i32 %3245, -1
  %3247 = icmp slt i32 %3243, %3246
  br i1 %3247, label %3248, label %3263

3248:                                             ; preds = %3240
  br i1 %3235, label %3255, label %3249

3249:                                             ; preds = %3248
  %3250 = getelementptr inbounds i32, ptr %7, i64 %3241
  %3251 = load i32, ptr %3250, align 4, !tbaa !6
  %3252 = getelementptr inbounds i32, ptr %6, i64 %3241
  %3253 = load i32, ptr %3252, align 4, !tbaa !6
  %3254 = add nsw i32 %3253, %3251
  store i32 %3254, ptr %3252, align 4, !tbaa !6
  br label %3273

3255:                                             ; preds = %3231, %3248
  %3256 = phi i32 [ %3243, %3248 ], [ %3232, %3231 ]
  %3257 = phi ptr [ %3242, %3248 ], [ %4, %3231 ]
  %3258 = phi i64 [ %3241, %3248 ], [ 0, %3231 ]
  %3259 = add nsw i32 %3256, 1
  store i32 %3259, ptr %3257, align 4, !tbaa !6
  %3260 = getelementptr inbounds i32, ptr %7, i64 %3258
  %3261 = load i32, ptr %3260, align 4, !tbaa !6
  %3262 = getelementptr inbounds i32, ptr %6, i64 %3258
  br label %3273

3263:                                             ; preds = %3240
  %3264 = icmp eq i32 %3243, %3246
  br i1 %3264, label %3265, label %3271

3265:                                             ; preds = %3263
  store i32 0, ptr %3242, align 4, !tbaa !6
  %3266 = getelementptr inbounds i32, ptr %8, i64 %3241
  %3267 = load i32, ptr %3266, align 4, !tbaa !6
  %3268 = getelementptr inbounds i32, ptr %6, i64 %3241
  store i32 %3267, ptr %3268, align 4, !tbaa !6
  %3269 = add nuw nsw i64 %3241, 1
  %3270 = icmp eq i64 %3269, %3138
  br i1 %3270, label %3278, label %3240, !llvm.loop !868

3271:                                             ; preds = %3236, %3263
  %3272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3273:                                             ; preds = %3249, %3255
  %3274 = phi ptr [ %3262, %3255 ], [ %3242, %3249 ]
  %3275 = phi i32 [ %3261, %3255 ], [ 1, %3249 ]
  %3276 = load i32, ptr %3274, align 4, !tbaa !6
  %3277 = add nsw i32 %3276, %3275
  store i32 %3277, ptr %3274, align 4, !tbaa !6
  br label %3278

3278:                                             ; preds = %3265, %3273, %3238, %3215
  %3279 = icmp eq i32 %3230, %5
  br i1 %3279, label %5556, label %3141, !llvm.loop !869

3280:                                             ; preds = %3124, %3419
  %3281 = phi i64 [ 0, %3124 ], [ %3367, %3419 ]
  %3282 = phi i32 [ 0, %3124 ], [ %3368, %3419 ]
  %3283 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3125, label %3284, label %3353

3284:                                             ; preds = %3280, %3343
  %3285 = phi i32 [ %3352, %3343 ], [ 0, %3280 ]
  %3286 = phi i64 [ %3294, %3343 ], [ %3129, %3280 ]
  %3287 = phi i64 [ %3351, %3343 ], [ %3128, %3280 ]
  %3288 = phi i32 [ %3349, %3343 ], [ %3283, %3280 ]
  %3289 = sub i32 %3127, %3285
  %3290 = tail call i32 @llvm.smin.i32(i32 %3289, i32 0)
  %3291 = sub i32 %3289, %3290
  %3292 = zext i32 %3291 to i64
  %3293 = add nuw nsw i64 %3292, 1
  %3294 = add nsw i64 %3286, -1
  %3295 = icmp ult i32 %3291, 31
  br i1 %3295, label %3331, label %3296

3296:                                             ; preds = %3284
  %3297 = and i64 %3293, 8589934560
  %3298 = sub i64 %3287, %3297
  br label %3299

3299:                                             ; preds = %3299, %3296
  %3300 = phi i64 [ 0, %3296 ], [ %3323, %3299 ]
  %3301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3296 ], [ %3319, %3299 ]
  %3302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3296 ], [ %3320, %3299 ]
  %3303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3296 ], [ %3321, %3299 ]
  %3304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3296 ], [ %3322, %3299 ]
  %3305 = sub i64 %3287, %3300
  %3306 = getelementptr inbounds i32, ptr %11, i64 %3305
  %3307 = getelementptr inbounds i32, ptr %3306, i64 -7
  %3308 = load <8 x i32>, ptr %3307, align 4, !tbaa !6
  %3309 = shufflevector <8 x i32> %3308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3310 = getelementptr inbounds i32, ptr %3306, i64 -15
  %3311 = load <8 x i32>, ptr %3310, align 4, !tbaa !6
  %3312 = shufflevector <8 x i32> %3311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3313 = getelementptr inbounds i32, ptr %3306, i64 -23
  %3314 = load <8 x i32>, ptr %3313, align 4, !tbaa !6
  %3315 = shufflevector <8 x i32> %3314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3316 = getelementptr inbounds i32, ptr %3306, i64 -31
  %3317 = load <8 x i32>, ptr %3316, align 4, !tbaa !6
  %3318 = shufflevector <8 x i32> %3317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3319 = mul <8 x i32> %3309, %3301
  %3320 = mul <8 x i32> %3312, %3302
  %3321 = mul <8 x i32> %3315, %3303
  %3322 = mul <8 x i32> %3318, %3304
  %3323 = add nuw i64 %3300, 32
  %3324 = icmp eq i64 %3323, %3297
  br i1 %3324, label %3325, label %3299, !llvm.loop !870

3325:                                             ; preds = %3299
  %3326 = mul <8 x i32> %3320, %3319
  %3327 = mul <8 x i32> %3321, %3326
  %3328 = mul <8 x i32> %3322, %3327
  %3329 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3328)
  %3330 = icmp eq i64 %3293, %3297
  br i1 %3330, label %3343, label %3331

3331:                                             ; preds = %3284, %3325
  %3332 = phi i64 [ %3287, %3284 ], [ %3298, %3325 ]
  %3333 = phi i32 [ 1, %3284 ], [ %3329, %3325 ]
  br label %3334

3334:                                             ; preds = %3331, %3334
  %3335 = phi i64 [ %3340, %3334 ], [ %3332, %3331 ]
  %3336 = phi i32 [ %3339, %3334 ], [ %3333, %3331 ]
  %3337 = getelementptr inbounds i32, ptr %11, i64 %3335
  %3338 = load i32, ptr %3337, align 4, !tbaa !6
  %3339 = mul nsw i32 %3338, %3336
  %3340 = add nsw i64 %3335, -1
  %3341 = trunc i64 %3335 to i32
  %3342 = icmp sgt i32 %3341, 0
  br i1 %3342, label %3334, label %3343, !llvm.loop !871

3343:                                             ; preds = %3334, %3325
  %3344 = phi i32 [ %3329, %3325 ], [ %3339, %3334 ]
  %3345 = and i64 %3294, 4294967295
  %3346 = getelementptr inbounds i32, ptr %6, i64 %3345
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = mul nsw i32 %3347, %3344
  %3349 = add nsw i32 %3348, %3288
  %3350 = icmp sgt i64 %3286, 2
  %3351 = add nsw i64 %3287, -1
  %3352 = add i32 %3285, 1
  br i1 %3350, label %3284, label %3353, !llvm.loop !872

3353:                                             ; preds = %3343, %3280
  %3354 = phi i32 [ %3283, %3280 ], [ %3349, %3343 ]
  %3355 = icmp slt i32 %3354, %5
  br i1 %3355, label %3358, label %3356

3356:                                             ; preds = %3353
  %3357 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

3358:                                             ; preds = %3353
  %3359 = sext i32 %3354 to i64
  %3360 = getelementptr inbounds i64, ptr %3109, i64 %3359
  %3361 = load i64, ptr %3360, align 8, !tbaa !121
  %3362 = sitofp i64 %3281 to double
  %3363 = sitofp i64 %3361 to double
  %3364 = fmul fast double %3363, %3363
  %3365 = fmul fast double %3364, %3364
  %3366 = fadd fast double %3365, %3362
  %3367 = fptosi double %3366 to i64
  store i64 %3367, ptr %3111, align 8, !tbaa !121
  %3368 = add nuw nsw i32 %3282, 1
  br i1 %3126, label %3369, label %3419

3369:                                             ; preds = %3358
  %3370 = load i32, ptr %4, align 4, !tbaa !6
  %3371 = load i32, ptr %12, align 4, !tbaa !6
  %3372 = add nsw i32 %3371, -1
  %3373 = icmp slt i32 %3370, %3372
  br i1 %3373, label %3396, label %3374

3374:                                             ; preds = %3369
  %3375 = icmp eq i32 %3370, %3372
  br i1 %3375, label %3376, label %3412

3376:                                             ; preds = %3374
  store i32 0, ptr %4, align 4, !tbaa !6
  %3377 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3377, ptr %6, align 4, !tbaa !6
  br i1 %3131, label %3419, label %3378

3378:                                             ; preds = %3376, %3406
  %3379 = phi i64 [ %3410, %3406 ], [ 1, %3376 ]
  %3380 = getelementptr inbounds i32, ptr %4, i64 %3379
  %3381 = load i32, ptr %3380, align 4, !tbaa !6
  %3382 = getelementptr inbounds i32, ptr %12, i64 %3379
  %3383 = load i32, ptr %3382, align 4, !tbaa !6
  %3384 = add nsw i32 %3383, -1
  %3385 = icmp slt i32 %3381, %3384
  br i1 %3385, label %3386, label %3404

3386:                                             ; preds = %3378
  br i1 %3373, label %3396, label %3387

3387:                                             ; preds = %3386
  %3388 = shl i64 %3379, 32
  %3389 = add i64 %3388, -4294967296
  %3390 = ashr exact i64 %3389, 32
  %3391 = getelementptr inbounds i32, ptr %7, i64 %3390
  %3392 = load i32, ptr %3391, align 4, !tbaa !6
  %3393 = getelementptr inbounds i32, ptr %6, i64 %3379
  %3394 = load i32, ptr %3393, align 4, !tbaa !6
  %3395 = add nsw i32 %3394, %3392
  store i32 %3395, ptr %3393, align 4, !tbaa !6
  br label %3414

3396:                                             ; preds = %3369, %3386
  %3397 = phi i32 [ %3381, %3386 ], [ %3370, %3369 ]
  %3398 = phi ptr [ %3380, %3386 ], [ %4, %3369 ]
  %3399 = phi i64 [ %3379, %3386 ], [ 0, %3369 ]
  %3400 = add nsw i32 %3397, 1
  store i32 %3400, ptr %3398, align 4, !tbaa !6
  %3401 = getelementptr inbounds i32, ptr %7, i64 %3399
  %3402 = load i32, ptr %3401, align 4, !tbaa !6
  %3403 = getelementptr inbounds i32, ptr %6, i64 %3399
  br label %3414

3404:                                             ; preds = %3378
  %3405 = icmp eq i32 %3381, %3384
  br i1 %3405, label %3406, label %3412

3406:                                             ; preds = %3404
  store i32 0, ptr %3380, align 4, !tbaa !6
  %3407 = getelementptr inbounds i32, ptr %8, i64 %3379
  %3408 = load i32, ptr %3407, align 4, !tbaa !6
  %3409 = getelementptr inbounds i32, ptr %6, i64 %3379
  store i32 %3408, ptr %3409, align 4, !tbaa !6
  %3410 = add nuw nsw i64 %3379, 1
  %3411 = icmp eq i64 %3410, %3129
  br i1 %3411, label %3419, label %3378, !llvm.loop !873

3412:                                             ; preds = %3374, %3404
  %3413 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3414:                                             ; preds = %3387, %3396
  %3415 = phi ptr [ %3403, %3396 ], [ %3380, %3387 ]
  %3416 = phi i32 [ %3402, %3396 ], [ 1, %3387 ]
  %3417 = load i32, ptr %3415, align 4, !tbaa !6
  %3418 = add nsw i32 %3417, %3416
  store i32 %3418, ptr %3415, align 4, !tbaa !6
  br label %3419

3419:                                             ; preds = %3406, %3414, %3376, %3358
  %3420 = icmp eq i32 %3368, %5
  br i1 %3420, label %5556, label %3280, !llvm.loop !874

3421:                                             ; preds = %3117
  %3422 = getelementptr inbounds i32, ptr %3, i64 %19
  %3423 = load i32, ptr %3422, align 4, !tbaa !6
  %3424 = icmp eq i32 %3423, 0
  %3425 = icmp sgt i32 %5, 0
  br i1 %3424, label %3435, label %3426

3426:                                             ; preds = %3421
  br i1 %3425, label %3427, label %5556

3427:                                             ; preds = %3426
  %3428 = icmp sgt i32 %13, 1
  %3429 = icmp sgt i32 %13, 0
  %3430 = add i32 %13, -2
  %3431 = zext i32 %3430 to i64
  %3432 = zext i32 %13 to i64
  %3433 = add nuw i32 %5, 1
  %3434 = icmp eq i32 %13, 1
  br label %3577

3435:                                             ; preds = %3421
  br i1 %3425, label %3436, label %5556

3436:                                             ; preds = %3435
  %3437 = icmp sgt i32 %13, 1
  %3438 = icmp sgt i32 %13, 0
  %3439 = add i32 %13, -2
  %3440 = zext i32 %3439 to i64
  %3441 = zext i32 %13 to i64
  %3442 = add nuw i32 %5, 1
  %3443 = icmp eq i32 %13, 1
  br label %3444

3444:                                             ; preds = %3436, %3575
  %3445 = phi i64 [ 0, %3436 ], [ %3525, %3575 ]
  %3446 = phi i32 [ 0, %3436 ], [ %3527, %3575 ]
  %3447 = phi double [ 0.000000e+00, %3436 ], [ %3526, %3575 ]
  %3448 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3437, label %3449, label %3518

3449:                                             ; preds = %3444, %3508
  %3450 = phi i32 [ %3517, %3508 ], [ 0, %3444 ]
  %3451 = phi i64 [ %3459, %3508 ], [ %3441, %3444 ]
  %3452 = phi i64 [ %3516, %3508 ], [ %3440, %3444 ]
  %3453 = phi i32 [ %3514, %3508 ], [ %3448, %3444 ]
  %3454 = sub i32 %3439, %3450
  %3455 = tail call i32 @llvm.smin.i32(i32 %3454, i32 0)
  %3456 = sub i32 %3454, %3455
  %3457 = zext i32 %3456 to i64
  %3458 = add nuw nsw i64 %3457, 1
  %3459 = add nsw i64 %3451, -1
  %3460 = icmp ult i32 %3456, 31
  br i1 %3460, label %3496, label %3461

3461:                                             ; preds = %3449
  %3462 = and i64 %3458, 8589934560
  %3463 = sub i64 %3452, %3462
  br label %3464

3464:                                             ; preds = %3464, %3461
  %3465 = phi i64 [ 0, %3461 ], [ %3488, %3464 ]
  %3466 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3461 ], [ %3484, %3464 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3461 ], [ %3485, %3464 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3461 ], [ %3486, %3464 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3461 ], [ %3487, %3464 ]
  %3470 = sub i64 %3452, %3465
  %3471 = getelementptr inbounds i32, ptr %9, i64 %3470
  %3472 = getelementptr inbounds i32, ptr %3471, i64 -7
  %3473 = load <8 x i32>, ptr %3472, align 4, !tbaa !6
  %3474 = shufflevector <8 x i32> %3473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3475 = getelementptr inbounds i32, ptr %3471, i64 -15
  %3476 = load <8 x i32>, ptr %3475, align 4, !tbaa !6
  %3477 = shufflevector <8 x i32> %3476, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3478 = getelementptr inbounds i32, ptr %3471, i64 -23
  %3479 = load <8 x i32>, ptr %3478, align 4, !tbaa !6
  %3480 = shufflevector <8 x i32> %3479, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3481 = getelementptr inbounds i32, ptr %3471, i64 -31
  %3482 = load <8 x i32>, ptr %3481, align 4, !tbaa !6
  %3483 = shufflevector <8 x i32> %3482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3484 = mul <8 x i32> %3474, %3466
  %3485 = mul <8 x i32> %3477, %3467
  %3486 = mul <8 x i32> %3480, %3468
  %3487 = mul <8 x i32> %3483, %3469
  %3488 = add nuw i64 %3465, 32
  %3489 = icmp eq i64 %3488, %3462
  br i1 %3489, label %3490, label %3464, !llvm.loop !875

3490:                                             ; preds = %3464
  %3491 = mul <8 x i32> %3485, %3484
  %3492 = mul <8 x i32> %3486, %3491
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3493)
  %3495 = icmp eq i64 %3458, %3462
  br i1 %3495, label %3508, label %3496

3496:                                             ; preds = %3449, %3490
  %3497 = phi i64 [ %3452, %3449 ], [ %3463, %3490 ]
  %3498 = phi i32 [ 1, %3449 ], [ %3494, %3490 ]
  br label %3499

3499:                                             ; preds = %3496, %3499
  %3500 = phi i64 [ %3505, %3499 ], [ %3497, %3496 ]
  %3501 = phi i32 [ %3504, %3499 ], [ %3498, %3496 ]
  %3502 = getelementptr inbounds i32, ptr %9, i64 %3500
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = mul nsw i32 %3503, %3501
  %3505 = add nsw i64 %3500, -1
  %3506 = trunc i64 %3500 to i32
  %3507 = icmp sgt i32 %3506, 0
  br i1 %3507, label %3499, label %3508, !llvm.loop !876

3508:                                             ; preds = %3499, %3490
  %3509 = phi i32 [ %3494, %3490 ], [ %3504, %3499 ]
  %3510 = and i64 %3459, 4294967295
  %3511 = getelementptr inbounds i32, ptr %6, i64 %3510
  %3512 = load i32, ptr %3511, align 4, !tbaa !6
  %3513 = mul nsw i32 %3512, %3509
  %3514 = add nsw i32 %3513, %3453
  %3515 = icmp sgt i64 %3451, 2
  %3516 = add nsw i64 %3452, -1
  %3517 = add i32 %3450, 1
  br i1 %3515, label %3449, label %3518, !llvm.loop !877

3518:                                             ; preds = %3508, %3444
  %3519 = phi i32 [ %3448, %3444 ], [ %3514, %3508 ]
  %3520 = sext i32 %3519 to i64
  %3521 = getelementptr inbounds i64, ptr %3109, i64 %3520
  %3522 = load i64, ptr %3521, align 8, !tbaa !121
  %3523 = mul i64 %3522, %3522
  %3524 = mul i64 %3523, %3523
  %3525 = add nsw i64 %3524, %3445
  store i64 %3525, ptr %3111, align 8, !tbaa !121
  %3526 = fadd fast double %3447, 1.000000e+00
  %3527 = add nuw nsw i32 %3446, 1
  br i1 %3438, label %3528, label %3575

3528:                                             ; preds = %3518
  %3529 = load i32, ptr %4, align 4, !tbaa !6
  %3530 = load i32, ptr %12, align 4, !tbaa !6
  %3531 = add nsw i32 %3530, -1
  %3532 = icmp slt i32 %3529, %3531
  br i1 %3532, label %3552, label %3533

3533:                                             ; preds = %3528
  %3534 = icmp eq i32 %3529, %3531
  br i1 %3534, label %3535, label %3568

3535:                                             ; preds = %3533
  store i32 0, ptr %4, align 4, !tbaa !6
  %3536 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3536, ptr %6, align 4, !tbaa !6
  br i1 %3443, label %3575, label %3537

3537:                                             ; preds = %3535, %3562
  %3538 = phi i64 [ %3566, %3562 ], [ 1, %3535 ]
  %3539 = getelementptr inbounds i32, ptr %4, i64 %3538
  %3540 = load i32, ptr %3539, align 4, !tbaa !6
  %3541 = getelementptr inbounds i32, ptr %12, i64 %3538
  %3542 = load i32, ptr %3541, align 4, !tbaa !6
  %3543 = add nsw i32 %3542, -1
  %3544 = icmp slt i32 %3540, %3543
  br i1 %3544, label %3545, label %3560

3545:                                             ; preds = %3537
  br i1 %3532, label %3552, label %3546

3546:                                             ; preds = %3545
  %3547 = getelementptr inbounds i32, ptr %7, i64 %3538
  %3548 = load i32, ptr %3547, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %6, i64 %3538
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = add nsw i32 %3550, %3548
  store i32 %3551, ptr %3549, align 4, !tbaa !6
  br label %3570

3552:                                             ; preds = %3528, %3545
  %3553 = phi i32 [ %3540, %3545 ], [ %3529, %3528 ]
  %3554 = phi ptr [ %3539, %3545 ], [ %4, %3528 ]
  %3555 = phi i64 [ %3538, %3545 ], [ 0, %3528 ]
  %3556 = add nsw i32 %3553, 1
  store i32 %3556, ptr %3554, align 4, !tbaa !6
  %3557 = getelementptr inbounds i32, ptr %7, i64 %3555
  %3558 = load i32, ptr %3557, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %6, i64 %3555
  br label %3570

3560:                                             ; preds = %3537
  %3561 = icmp eq i32 %3540, %3543
  br i1 %3561, label %3562, label %3568

3562:                                             ; preds = %3560
  store i32 0, ptr %3539, align 4, !tbaa !6
  %3563 = getelementptr inbounds i32, ptr %8, i64 %3538
  %3564 = load i32, ptr %3563, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %6, i64 %3538
  store i32 %3564, ptr %3565, align 4, !tbaa !6
  %3566 = add nuw nsw i64 %3538, 1
  %3567 = icmp eq i64 %3566, %3441
  br i1 %3567, label %3575, label %3537, !llvm.loop !878

3568:                                             ; preds = %3533, %3560
  %3569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3570:                                             ; preds = %3546, %3552
  %3571 = phi ptr [ %3559, %3552 ], [ %3539, %3546 ]
  %3572 = phi i32 [ %3558, %3552 ], [ 1, %3546 ]
  %3573 = load i32, ptr %3571, align 4, !tbaa !6
  %3574 = add nsw i32 %3573, %3572
  store i32 %3574, ptr %3571, align 4, !tbaa !6
  br label %3575

3575:                                             ; preds = %3562, %3570, %3535, %3518
  %3576 = icmp eq i32 %3527, %5
  br i1 %3576, label %5556, label %3444, !llvm.loop !879

3577:                                             ; preds = %3427, %3713
  %3578 = phi i64 [ 0, %3427 ], [ %3661, %3713 ]
  %3579 = phi i32 [ 0, %3427 ], [ %3662, %3713 ]
  %3580 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3581, label %3650

3581:                                             ; preds = %3577, %3640
  %3582 = phi i32 [ %3649, %3640 ], [ 0, %3577 ]
  %3583 = phi i64 [ %3591, %3640 ], [ %3432, %3577 ]
  %3584 = phi i64 [ %3648, %3640 ], [ %3431, %3577 ]
  %3585 = phi i32 [ %3646, %3640 ], [ %3580, %3577 ]
  %3586 = sub i32 %3430, %3582
  %3587 = tail call i32 @llvm.smin.i32(i32 %3586, i32 0)
  %3588 = sub i32 %3586, %3587
  %3589 = zext i32 %3588 to i64
  %3590 = add nuw nsw i64 %3589, 1
  %3591 = add nsw i64 %3583, -1
  %3592 = icmp ult i32 %3588, 31
  br i1 %3592, label %3628, label %3593

3593:                                             ; preds = %3581
  %3594 = and i64 %3590, 8589934560
  %3595 = sub i64 %3584, %3594
  br label %3596

3596:                                             ; preds = %3596, %3593
  %3597 = phi i64 [ 0, %3593 ], [ %3620, %3596 ]
  %3598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3593 ], [ %3616, %3596 ]
  %3599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3593 ], [ %3617, %3596 ]
  %3600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3593 ], [ %3618, %3596 ]
  %3601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3593 ], [ %3619, %3596 ]
  %3602 = sub i64 %3584, %3597
  %3603 = getelementptr inbounds i32, ptr %11, i64 %3602
  %3604 = getelementptr inbounds i32, ptr %3603, i64 -7
  %3605 = load <8 x i32>, ptr %3604, align 4, !tbaa !6
  %3606 = shufflevector <8 x i32> %3605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3607 = getelementptr inbounds i32, ptr %3603, i64 -15
  %3608 = load <8 x i32>, ptr %3607, align 4, !tbaa !6
  %3609 = shufflevector <8 x i32> %3608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3610 = getelementptr inbounds i32, ptr %3603, i64 -23
  %3611 = load <8 x i32>, ptr %3610, align 4, !tbaa !6
  %3612 = shufflevector <8 x i32> %3611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3613 = getelementptr inbounds i32, ptr %3603, i64 -31
  %3614 = load <8 x i32>, ptr %3613, align 4, !tbaa !6
  %3615 = shufflevector <8 x i32> %3614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3616 = mul <8 x i32> %3606, %3598
  %3617 = mul <8 x i32> %3609, %3599
  %3618 = mul <8 x i32> %3612, %3600
  %3619 = mul <8 x i32> %3615, %3601
  %3620 = add nuw i64 %3597, 32
  %3621 = icmp eq i64 %3620, %3594
  br i1 %3621, label %3622, label %3596, !llvm.loop !880

3622:                                             ; preds = %3596
  %3623 = mul <8 x i32> %3617, %3616
  %3624 = mul <8 x i32> %3618, %3623
  %3625 = mul <8 x i32> %3619, %3624
  %3626 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3625)
  %3627 = icmp eq i64 %3590, %3594
  br i1 %3627, label %3640, label %3628

3628:                                             ; preds = %3581, %3622
  %3629 = phi i64 [ %3584, %3581 ], [ %3595, %3622 ]
  %3630 = phi i32 [ 1, %3581 ], [ %3626, %3622 ]
  br label %3631

3631:                                             ; preds = %3628, %3631
  %3632 = phi i64 [ %3637, %3631 ], [ %3629, %3628 ]
  %3633 = phi i32 [ %3636, %3631 ], [ %3630, %3628 ]
  %3634 = getelementptr inbounds i32, ptr %11, i64 %3632
  %3635 = load i32, ptr %3634, align 4, !tbaa !6
  %3636 = mul nsw i32 %3635, %3633
  %3637 = add nsw i64 %3632, -1
  %3638 = trunc i64 %3632 to i32
  %3639 = icmp sgt i32 %3638, 0
  br i1 %3639, label %3631, label %3640, !llvm.loop !881

3640:                                             ; preds = %3631, %3622
  %3641 = phi i32 [ %3626, %3622 ], [ %3636, %3631 ]
  %3642 = and i64 %3591, 4294967295
  %3643 = getelementptr inbounds i32, ptr %6, i64 %3642
  %3644 = load i32, ptr %3643, align 4, !tbaa !6
  %3645 = mul nsw i32 %3644, %3641
  %3646 = add nsw i32 %3645, %3585
  %3647 = icmp sgt i64 %3583, 2
  %3648 = add nsw i64 %3584, -1
  %3649 = add i32 %3582, 1
  br i1 %3647, label %3581, label %3650, !llvm.loop !882

3650:                                             ; preds = %3640, %3577
  %3651 = phi i32 [ %3580, %3577 ], [ %3646, %3640 ]
  %3652 = icmp slt i32 %3651, %5
  br i1 %3652, label %3655, label %3653

3653:                                             ; preds = %3650
  %3654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

3655:                                             ; preds = %3650
  %3656 = sext i32 %3651 to i64
  %3657 = getelementptr inbounds i64, ptr %3109, i64 %3656
  %3658 = load i64, ptr %3657, align 8, !tbaa !121
  %3659 = mul i64 %3658, %3658
  %3660 = mul i64 %3659, %3659
  %3661 = add nsw i64 %3660, %3578
  store i64 %3661, ptr %3111, align 8, !tbaa !121
  %3662 = add nuw nsw i32 %3579, 1
  br i1 %3429, label %3663, label %3713

3663:                                             ; preds = %3655
  %3664 = load i32, ptr %4, align 4, !tbaa !6
  %3665 = load i32, ptr %12, align 4, !tbaa !6
  %3666 = add nsw i32 %3665, -1
  %3667 = icmp slt i32 %3664, %3666
  br i1 %3667, label %3690, label %3668

3668:                                             ; preds = %3663
  %3669 = icmp eq i32 %3664, %3666
  br i1 %3669, label %3670, label %3706

3670:                                             ; preds = %3668
  store i32 0, ptr %4, align 4, !tbaa !6
  %3671 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3671, ptr %6, align 4, !tbaa !6
  br i1 %3434, label %3713, label %3672

3672:                                             ; preds = %3670, %3700
  %3673 = phi i64 [ %3704, %3700 ], [ 1, %3670 ]
  %3674 = getelementptr inbounds i32, ptr %4, i64 %3673
  %3675 = load i32, ptr %3674, align 4, !tbaa !6
  %3676 = getelementptr inbounds i32, ptr %12, i64 %3673
  %3677 = load i32, ptr %3676, align 4, !tbaa !6
  %3678 = add nsw i32 %3677, -1
  %3679 = icmp slt i32 %3675, %3678
  br i1 %3679, label %3680, label %3698

3680:                                             ; preds = %3672
  br i1 %3667, label %3690, label %3681

3681:                                             ; preds = %3680
  %3682 = shl i64 %3673, 32
  %3683 = add i64 %3682, -4294967296
  %3684 = ashr exact i64 %3683, 32
  %3685 = getelementptr inbounds i32, ptr %7, i64 %3684
  %3686 = load i32, ptr %3685, align 4, !tbaa !6
  %3687 = getelementptr inbounds i32, ptr %6, i64 %3673
  %3688 = load i32, ptr %3687, align 4, !tbaa !6
  %3689 = add nsw i32 %3688, %3686
  store i32 %3689, ptr %3687, align 4, !tbaa !6
  br label %3708

3690:                                             ; preds = %3663, %3680
  %3691 = phi i32 [ %3675, %3680 ], [ %3664, %3663 ]
  %3692 = phi ptr [ %3674, %3680 ], [ %4, %3663 ]
  %3693 = phi i64 [ %3673, %3680 ], [ 0, %3663 ]
  %3694 = add nsw i32 %3691, 1
  store i32 %3694, ptr %3692, align 4, !tbaa !6
  %3695 = getelementptr inbounds i32, ptr %7, i64 %3693
  %3696 = load i32, ptr %3695, align 4, !tbaa !6
  %3697 = getelementptr inbounds i32, ptr %6, i64 %3693
  br label %3708

3698:                                             ; preds = %3672
  %3699 = icmp eq i32 %3675, %3678
  br i1 %3699, label %3700, label %3706

3700:                                             ; preds = %3698
  store i32 0, ptr %3674, align 4, !tbaa !6
  %3701 = getelementptr inbounds i32, ptr %8, i64 %3673
  %3702 = load i32, ptr %3701, align 4, !tbaa !6
  %3703 = getelementptr inbounds i32, ptr %6, i64 %3673
  store i32 %3702, ptr %3703, align 4, !tbaa !6
  %3704 = add nuw nsw i64 %3673, 1
  %3705 = icmp eq i64 %3704, %3432
  br i1 %3705, label %3713, label %3672, !llvm.loop !883

3706:                                             ; preds = %3668, %3698
  %3707 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3708:                                             ; preds = %3681, %3690
  %3709 = phi ptr [ %3697, %3690 ], [ %3674, %3681 ]
  %3710 = phi i32 [ %3696, %3690 ], [ 1, %3681 ]
  %3711 = load i32, ptr %3709, align 4, !tbaa !6
  %3712 = add nsw i32 %3711, %3710
  store i32 %3712, ptr %3709, align 4, !tbaa !6
  br label %3713

3713:                                             ; preds = %3700, %3708, %3670, %3655
  %3714 = icmp eq i32 %3662, %5
  br i1 %3714, label %5556, label %3577, !llvm.loop !884

3715:                                             ; preds = %3117
  %3716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

3717:                                             ; preds = %18
  %3718 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3719 = load ptr, ptr %3718, align 8, !tbaa !10
  %3720 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3721 = load ptr, ptr %3720, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3721, align 8, !tbaa !19
  %3722 = icmp eq i32 %13, 0
  br i1 %3722, label %3723, label %3728

3723:                                             ; preds = %3717
  %3724 = load i64, ptr %3719, align 8, !tbaa !121
  %3725 = sitofp i64 %3724 to double
  %3726 = fmul fast double %3725, %3725
  %3727 = fmul fast double %3726, %3726
  store double %3727, ptr %3721, align 8, !tbaa !19
  br label %5556

3728:                                             ; preds = %3717
  switch i32 %1, label %4324 [
    i32 1, label %3729
    i32 0, label %4028
  ]

3729:                                             ; preds = %3728
  %3730 = getelementptr inbounds i32, ptr %3, i64 %19
  %3731 = load i32, ptr %3730, align 4, !tbaa !6
  %3732 = icmp eq i32 %3731, 0
  %3733 = icmp sgt i32 %5, 0
  br i1 %3732, label %3743, label %3734

3734:                                             ; preds = %3729
  br i1 %3733, label %3735, label %5556

3735:                                             ; preds = %3734
  %3736 = icmp sgt i32 %13, 1
  %3737 = icmp sgt i32 %13, 0
  %3738 = add i32 %13, -2
  %3739 = zext i32 %3738 to i64
  %3740 = zext i32 %13 to i64
  %3741 = add nuw i32 %5, 1
  %3742 = icmp eq i32 %13, 1
  br label %3889

3743:                                             ; preds = %3729
  br i1 %3733, label %3744, label %5556

3744:                                             ; preds = %3743
  %3745 = icmp sgt i32 %13, 1
  %3746 = icmp sgt i32 %13, 0
  %3747 = add i32 %13, -2
  %3748 = zext i32 %3747 to i64
  %3749 = zext i32 %13 to i64
  %3750 = add nuw i32 %5, 1
  %3751 = icmp eq i32 %13, 1
  br label %3752

3752:                                             ; preds = %3744, %3887
  %3753 = phi double [ 0.000000e+00, %3744 ], [ %3837, %3887 ]
  %3754 = phi i32 [ 0, %3744 ], [ %3839, %3887 ]
  %3755 = phi double [ 0.000000e+00, %3744 ], [ %3838, %3887 ]
  %3756 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3745, label %3757, label %3826

3757:                                             ; preds = %3752, %3816
  %3758 = phi i32 [ %3825, %3816 ], [ 0, %3752 ]
  %3759 = phi i64 [ %3767, %3816 ], [ %3749, %3752 ]
  %3760 = phi i64 [ %3824, %3816 ], [ %3748, %3752 ]
  %3761 = phi i32 [ %3822, %3816 ], [ %3756, %3752 ]
  %3762 = sub i32 %3747, %3758
  %3763 = tail call i32 @llvm.smin.i32(i32 %3762, i32 0)
  %3764 = sub i32 %3762, %3763
  %3765 = zext i32 %3764 to i64
  %3766 = add nuw nsw i64 %3765, 1
  %3767 = add nsw i64 %3759, -1
  %3768 = icmp ult i32 %3764, 31
  br i1 %3768, label %3804, label %3769

3769:                                             ; preds = %3757
  %3770 = and i64 %3766, 8589934560
  %3771 = sub i64 %3760, %3770
  br label %3772

3772:                                             ; preds = %3772, %3769
  %3773 = phi i64 [ 0, %3769 ], [ %3796, %3772 ]
  %3774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3769 ], [ %3792, %3772 ]
  %3775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3769 ], [ %3793, %3772 ]
  %3776 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3769 ], [ %3794, %3772 ]
  %3777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3769 ], [ %3795, %3772 ]
  %3778 = sub i64 %3760, %3773
  %3779 = getelementptr inbounds i32, ptr %9, i64 %3778
  %3780 = getelementptr inbounds i32, ptr %3779, i64 -7
  %3781 = load <8 x i32>, ptr %3780, align 4, !tbaa !6
  %3782 = shufflevector <8 x i32> %3781, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3783 = getelementptr inbounds i32, ptr %3779, i64 -15
  %3784 = load <8 x i32>, ptr %3783, align 4, !tbaa !6
  %3785 = shufflevector <8 x i32> %3784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3786 = getelementptr inbounds i32, ptr %3779, i64 -23
  %3787 = load <8 x i32>, ptr %3786, align 4, !tbaa !6
  %3788 = shufflevector <8 x i32> %3787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3789 = getelementptr inbounds i32, ptr %3779, i64 -31
  %3790 = load <8 x i32>, ptr %3789, align 4, !tbaa !6
  %3791 = shufflevector <8 x i32> %3790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3792 = mul <8 x i32> %3782, %3774
  %3793 = mul <8 x i32> %3785, %3775
  %3794 = mul <8 x i32> %3788, %3776
  %3795 = mul <8 x i32> %3791, %3777
  %3796 = add nuw i64 %3773, 32
  %3797 = icmp eq i64 %3796, %3770
  br i1 %3797, label %3798, label %3772, !llvm.loop !885

3798:                                             ; preds = %3772
  %3799 = mul <8 x i32> %3793, %3792
  %3800 = mul <8 x i32> %3794, %3799
  %3801 = mul <8 x i32> %3795, %3800
  %3802 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3801)
  %3803 = icmp eq i64 %3766, %3770
  br i1 %3803, label %3816, label %3804

3804:                                             ; preds = %3757, %3798
  %3805 = phi i64 [ %3760, %3757 ], [ %3771, %3798 ]
  %3806 = phi i32 [ 1, %3757 ], [ %3802, %3798 ]
  br label %3807

3807:                                             ; preds = %3804, %3807
  %3808 = phi i64 [ %3813, %3807 ], [ %3805, %3804 ]
  %3809 = phi i32 [ %3812, %3807 ], [ %3806, %3804 ]
  %3810 = getelementptr inbounds i32, ptr %9, i64 %3808
  %3811 = load i32, ptr %3810, align 4, !tbaa !6
  %3812 = mul nsw i32 %3811, %3809
  %3813 = add nsw i64 %3808, -1
  %3814 = trunc i64 %3808 to i32
  %3815 = icmp sgt i32 %3814, 0
  br i1 %3815, label %3807, label %3816, !llvm.loop !886

3816:                                             ; preds = %3807, %3798
  %3817 = phi i32 [ %3802, %3798 ], [ %3812, %3807 ]
  %3818 = and i64 %3767, 4294967295
  %3819 = getelementptr inbounds i32, ptr %6, i64 %3818
  %3820 = load i32, ptr %3819, align 4, !tbaa !6
  %3821 = mul nsw i32 %3820, %3817
  %3822 = add nsw i32 %3821, %3761
  %3823 = icmp sgt i64 %3759, 2
  %3824 = add nsw i64 %3760, -1
  %3825 = add i32 %3758, 1
  br i1 %3823, label %3757, label %3826, !llvm.loop !887

3826:                                             ; preds = %3816, %3752
  %3827 = phi i32 [ %3756, %3752 ], [ %3822, %3816 ]
  %3828 = sext i32 %3827 to i64
  %3829 = getelementptr inbounds double, ptr %2, i64 %3828
  %3830 = load double, ptr %3829, align 8, !tbaa !19
  %3831 = getelementptr inbounds i64, ptr %3719, i64 %3828
  %3832 = load i64, ptr %3831, align 8, !tbaa !121
  %3833 = sitofp i64 %3832 to double
  %3834 = fmul fast double %3830, %3833
  %3835 = fmul fast double %3834, %3834
  %3836 = fmul fast double %3835, %3835
  %3837 = fadd fast double %3836, %3753
  store double %3837, ptr %3721, align 8, !tbaa !19
  %3838 = fadd fast double %3830, %3755
  %3839 = add nuw nsw i32 %3754, 1
  br i1 %3746, label %3840, label %3887

3840:                                             ; preds = %3826
  %3841 = load i32, ptr %4, align 4, !tbaa !6
  %3842 = load i32, ptr %12, align 4, !tbaa !6
  %3843 = add nsw i32 %3842, -1
  %3844 = icmp slt i32 %3841, %3843
  br i1 %3844, label %3864, label %3845

3845:                                             ; preds = %3840
  %3846 = icmp eq i32 %3841, %3843
  br i1 %3846, label %3847, label %3880

3847:                                             ; preds = %3845
  store i32 0, ptr %4, align 4, !tbaa !6
  %3848 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3848, ptr %6, align 4, !tbaa !6
  br i1 %3751, label %3887, label %3849

3849:                                             ; preds = %3847, %3874
  %3850 = phi i64 [ %3878, %3874 ], [ 1, %3847 ]
  %3851 = getelementptr inbounds i32, ptr %4, i64 %3850
  %3852 = load i32, ptr %3851, align 4, !tbaa !6
  %3853 = getelementptr inbounds i32, ptr %12, i64 %3850
  %3854 = load i32, ptr %3853, align 4, !tbaa !6
  %3855 = add nsw i32 %3854, -1
  %3856 = icmp slt i32 %3852, %3855
  br i1 %3856, label %3857, label %3872

3857:                                             ; preds = %3849
  br i1 %3844, label %3864, label %3858

3858:                                             ; preds = %3857
  %3859 = getelementptr inbounds i32, ptr %7, i64 %3850
  %3860 = load i32, ptr %3859, align 4, !tbaa !6
  %3861 = getelementptr inbounds i32, ptr %6, i64 %3850
  %3862 = load i32, ptr %3861, align 4, !tbaa !6
  %3863 = add nsw i32 %3862, %3860
  store i32 %3863, ptr %3861, align 4, !tbaa !6
  br label %3882

3864:                                             ; preds = %3840, %3857
  %3865 = phi i32 [ %3852, %3857 ], [ %3841, %3840 ]
  %3866 = phi ptr [ %3851, %3857 ], [ %4, %3840 ]
  %3867 = phi i64 [ %3850, %3857 ], [ 0, %3840 ]
  %3868 = add nsw i32 %3865, 1
  store i32 %3868, ptr %3866, align 4, !tbaa !6
  %3869 = getelementptr inbounds i32, ptr %7, i64 %3867
  %3870 = load i32, ptr %3869, align 4, !tbaa !6
  %3871 = getelementptr inbounds i32, ptr %6, i64 %3867
  br label %3882

3872:                                             ; preds = %3849
  %3873 = icmp eq i32 %3852, %3855
  br i1 %3873, label %3874, label %3880

3874:                                             ; preds = %3872
  store i32 0, ptr %3851, align 4, !tbaa !6
  %3875 = getelementptr inbounds i32, ptr %8, i64 %3850
  %3876 = load i32, ptr %3875, align 4, !tbaa !6
  %3877 = getelementptr inbounds i32, ptr %6, i64 %3850
  store i32 %3876, ptr %3877, align 4, !tbaa !6
  %3878 = add nuw nsw i64 %3850, 1
  %3879 = icmp eq i64 %3878, %3749
  br i1 %3879, label %3887, label %3849, !llvm.loop !888

3880:                                             ; preds = %3845, %3872
  %3881 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

3882:                                             ; preds = %3858, %3864
  %3883 = phi ptr [ %3871, %3864 ], [ %3851, %3858 ]
  %3884 = phi i32 [ %3870, %3864 ], [ 1, %3858 ]
  %3885 = load i32, ptr %3883, align 4, !tbaa !6
  %3886 = add nsw i32 %3885, %3884
  store i32 %3886, ptr %3883, align 4, !tbaa !6
  br label %3887

3887:                                             ; preds = %3874, %3882, %3847, %3826
  %3888 = icmp eq i32 %3839, %5
  br i1 %3888, label %5556, label %3752, !llvm.loop !889

3889:                                             ; preds = %3735, %4026
  %3890 = phi double [ 0.000000e+00, %3735 ], [ %3974, %4026 ]
  %3891 = phi i32 [ 0, %3735 ], [ %3975, %4026 ]
  %3892 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3736, label %3893, label %3962

3893:                                             ; preds = %3889, %3952
  %3894 = phi i32 [ %3961, %3952 ], [ 0, %3889 ]
  %3895 = phi i64 [ %3903, %3952 ], [ %3740, %3889 ]
  %3896 = phi i64 [ %3960, %3952 ], [ %3739, %3889 ]
  %3897 = phi i32 [ %3958, %3952 ], [ %3892, %3889 ]
  %3898 = sub i32 %3738, %3894
  %3899 = tail call i32 @llvm.smin.i32(i32 %3898, i32 0)
  %3900 = sub i32 %3898, %3899
  %3901 = zext i32 %3900 to i64
  %3902 = add nuw nsw i64 %3901, 1
  %3903 = add nsw i64 %3895, -1
  %3904 = icmp ult i32 %3900, 31
  br i1 %3904, label %3940, label %3905

3905:                                             ; preds = %3893
  %3906 = and i64 %3902, 8589934560
  %3907 = sub i64 %3896, %3906
  br label %3908

3908:                                             ; preds = %3908, %3905
  %3909 = phi i64 [ 0, %3905 ], [ %3932, %3908 ]
  %3910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3905 ], [ %3928, %3908 ]
  %3911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3905 ], [ %3929, %3908 ]
  %3912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3905 ], [ %3930, %3908 ]
  %3913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3905 ], [ %3931, %3908 ]
  %3914 = sub i64 %3896, %3909
  %3915 = getelementptr inbounds i32, ptr %11, i64 %3914
  %3916 = getelementptr inbounds i32, ptr %3915, i64 -7
  %3917 = load <8 x i32>, ptr %3916, align 4, !tbaa !6
  %3918 = shufflevector <8 x i32> %3917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3919 = getelementptr inbounds i32, ptr %3915, i64 -15
  %3920 = load <8 x i32>, ptr %3919, align 4, !tbaa !6
  %3921 = shufflevector <8 x i32> %3920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3922 = getelementptr inbounds i32, ptr %3915, i64 -23
  %3923 = load <8 x i32>, ptr %3922, align 4, !tbaa !6
  %3924 = shufflevector <8 x i32> %3923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3925 = getelementptr inbounds i32, ptr %3915, i64 -31
  %3926 = load <8 x i32>, ptr %3925, align 4, !tbaa !6
  %3927 = shufflevector <8 x i32> %3926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3928 = mul <8 x i32> %3918, %3910
  %3929 = mul <8 x i32> %3921, %3911
  %3930 = mul <8 x i32> %3924, %3912
  %3931 = mul <8 x i32> %3927, %3913
  %3932 = add nuw i64 %3909, 32
  %3933 = icmp eq i64 %3932, %3906
  br i1 %3933, label %3934, label %3908, !llvm.loop !890

3934:                                             ; preds = %3908
  %3935 = mul <8 x i32> %3929, %3928
  %3936 = mul <8 x i32> %3930, %3935
  %3937 = mul <8 x i32> %3931, %3936
  %3938 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3937)
  %3939 = icmp eq i64 %3902, %3906
  br i1 %3939, label %3952, label %3940

3940:                                             ; preds = %3893, %3934
  %3941 = phi i64 [ %3896, %3893 ], [ %3907, %3934 ]
  %3942 = phi i32 [ 1, %3893 ], [ %3938, %3934 ]
  br label %3943

3943:                                             ; preds = %3940, %3943
  %3944 = phi i64 [ %3949, %3943 ], [ %3941, %3940 ]
  %3945 = phi i32 [ %3948, %3943 ], [ %3942, %3940 ]
  %3946 = getelementptr inbounds i32, ptr %11, i64 %3944
  %3947 = load i32, ptr %3946, align 4, !tbaa !6
  %3948 = mul nsw i32 %3947, %3945
  %3949 = add nsw i64 %3944, -1
  %3950 = trunc i64 %3944 to i32
  %3951 = icmp sgt i32 %3950, 0
  br i1 %3951, label %3943, label %3952, !llvm.loop !891

3952:                                             ; preds = %3943, %3934
  %3953 = phi i32 [ %3938, %3934 ], [ %3948, %3943 ]
  %3954 = and i64 %3903, 4294967295
  %3955 = getelementptr inbounds i32, ptr %6, i64 %3954
  %3956 = load i32, ptr %3955, align 4, !tbaa !6
  %3957 = mul nsw i32 %3956, %3953
  %3958 = add nsw i32 %3957, %3897
  %3959 = icmp sgt i64 %3895, 2
  %3960 = add nsw i64 %3896, -1
  %3961 = add i32 %3894, 1
  br i1 %3959, label %3893, label %3962, !llvm.loop !892

3962:                                             ; preds = %3952, %3889
  %3963 = phi i32 [ %3892, %3889 ], [ %3958, %3952 ]
  %3964 = icmp slt i32 %3963, %5
  br i1 %3964, label %3967, label %3965

3965:                                             ; preds = %3962
  %3966 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

3967:                                             ; preds = %3962
  %3968 = sext i32 %3963 to i64
  %3969 = getelementptr inbounds i64, ptr %3719, i64 %3968
  %3970 = load i64, ptr %3969, align 8, !tbaa !121
  %3971 = sitofp i64 %3970 to double
  %3972 = fmul fast double %3971, %3971
  %3973 = fmul fast double %3972, %3972
  %3974 = fadd fast double %3973, %3890
  store double %3974, ptr %3721, align 8, !tbaa !19
  %3975 = add nuw nsw i32 %3891, 1
  br i1 %3737, label %3976, label %4026

3976:                                             ; preds = %3967
  %3977 = load i32, ptr %4, align 4, !tbaa !6
  %3978 = load i32, ptr %12, align 4, !tbaa !6
  %3979 = add nsw i32 %3978, -1
  %3980 = icmp slt i32 %3977, %3979
  br i1 %3980, label %4003, label %3981

3981:                                             ; preds = %3976
  %3982 = icmp eq i32 %3977, %3979
  br i1 %3982, label %3983, label %4019

3983:                                             ; preds = %3981
  store i32 0, ptr %4, align 4, !tbaa !6
  %3984 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3984, ptr %6, align 4, !tbaa !6
  br i1 %3742, label %4026, label %3985

3985:                                             ; preds = %3983, %4013
  %3986 = phi i64 [ %4017, %4013 ], [ 1, %3983 ]
  %3987 = getelementptr inbounds i32, ptr %4, i64 %3986
  %3988 = load i32, ptr %3987, align 4, !tbaa !6
  %3989 = getelementptr inbounds i32, ptr %12, i64 %3986
  %3990 = load i32, ptr %3989, align 4, !tbaa !6
  %3991 = add nsw i32 %3990, -1
  %3992 = icmp slt i32 %3988, %3991
  br i1 %3992, label %3993, label %4011

3993:                                             ; preds = %3985
  br i1 %3980, label %4003, label %3994

3994:                                             ; preds = %3993
  %3995 = shl i64 %3986, 32
  %3996 = add i64 %3995, -4294967296
  %3997 = ashr exact i64 %3996, 32
  %3998 = getelementptr inbounds i32, ptr %7, i64 %3997
  %3999 = load i32, ptr %3998, align 4, !tbaa !6
  %4000 = getelementptr inbounds i32, ptr %6, i64 %3986
  %4001 = load i32, ptr %4000, align 4, !tbaa !6
  %4002 = add nsw i32 %4001, %3999
  store i32 %4002, ptr %4000, align 4, !tbaa !6
  br label %4021

4003:                                             ; preds = %3976, %3993
  %4004 = phi i32 [ %3988, %3993 ], [ %3977, %3976 ]
  %4005 = phi ptr [ %3987, %3993 ], [ %4, %3976 ]
  %4006 = phi i64 [ %3986, %3993 ], [ 0, %3976 ]
  %4007 = add nsw i32 %4004, 1
  store i32 %4007, ptr %4005, align 4, !tbaa !6
  %4008 = getelementptr inbounds i32, ptr %7, i64 %4006
  %4009 = load i32, ptr %4008, align 4, !tbaa !6
  %4010 = getelementptr inbounds i32, ptr %6, i64 %4006
  br label %4021

4011:                                             ; preds = %3985
  %4012 = icmp eq i32 %3988, %3991
  br i1 %4012, label %4013, label %4019

4013:                                             ; preds = %4011
  store i32 0, ptr %3987, align 4, !tbaa !6
  %4014 = getelementptr inbounds i32, ptr %8, i64 %3986
  %4015 = load i32, ptr %4014, align 4, !tbaa !6
  %4016 = getelementptr inbounds i32, ptr %6, i64 %3986
  store i32 %4015, ptr %4016, align 4, !tbaa !6
  %4017 = add nuw nsw i64 %3986, 1
  %4018 = icmp eq i64 %4017, %3740
  br i1 %4018, label %4026, label %3985, !llvm.loop !893

4019:                                             ; preds = %3981, %4011
  %4020 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4021:                                             ; preds = %3994, %4003
  %4022 = phi ptr [ %4010, %4003 ], [ %3987, %3994 ]
  %4023 = phi i32 [ %4009, %4003 ], [ 1, %3994 ]
  %4024 = load i32, ptr %4022, align 4, !tbaa !6
  %4025 = add nsw i32 %4024, %4023
  store i32 %4025, ptr %4022, align 4, !tbaa !6
  br label %4026

4026:                                             ; preds = %4013, %4021, %3983, %3967
  %4027 = icmp eq i32 %3975, %5
  br i1 %4027, label %5556, label %3889, !llvm.loop !894

4028:                                             ; preds = %3728
  %4029 = getelementptr inbounds i32, ptr %3, i64 %19
  %4030 = load i32, ptr %4029, align 4, !tbaa !6
  %4031 = icmp eq i32 %4030, 0
  %4032 = icmp sgt i32 %5, 0
  br i1 %4031, label %4042, label %4033

4033:                                             ; preds = %4028
  br i1 %4032, label %4034, label %5556

4034:                                             ; preds = %4033
  %4035 = icmp sgt i32 %13, 1
  %4036 = icmp sgt i32 %13, 0
  %4037 = add i32 %13, -2
  %4038 = zext i32 %4037 to i64
  %4039 = zext i32 %13 to i64
  %4040 = add nuw i32 %5, 1
  %4041 = icmp eq i32 %13, 1
  br label %4185

4042:                                             ; preds = %4028
  br i1 %4032, label %4043, label %5556

4043:                                             ; preds = %4042
  %4044 = icmp sgt i32 %13, 1
  %4045 = icmp sgt i32 %13, 0
  %4046 = add i32 %13, -2
  %4047 = zext i32 %4046 to i64
  %4048 = zext i32 %13 to i64
  %4049 = add nuw i32 %5, 1
  %4050 = icmp eq i32 %13, 1
  br label %4051

4051:                                             ; preds = %4043, %4183
  %4052 = phi double [ 0.000000e+00, %4043 ], [ %4133, %4183 ]
  %4053 = phi i32 [ 0, %4043 ], [ %4135, %4183 ]
  %4054 = phi double [ 0.000000e+00, %4043 ], [ %4134, %4183 ]
  %4055 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4044, label %4056, label %4125

4056:                                             ; preds = %4051, %4115
  %4057 = phi i32 [ %4124, %4115 ], [ 0, %4051 ]
  %4058 = phi i64 [ %4066, %4115 ], [ %4048, %4051 ]
  %4059 = phi i64 [ %4123, %4115 ], [ %4047, %4051 ]
  %4060 = phi i32 [ %4121, %4115 ], [ %4055, %4051 ]
  %4061 = sub i32 %4046, %4057
  %4062 = tail call i32 @llvm.smin.i32(i32 %4061, i32 0)
  %4063 = sub i32 %4061, %4062
  %4064 = zext i32 %4063 to i64
  %4065 = add nuw nsw i64 %4064, 1
  %4066 = add nsw i64 %4058, -1
  %4067 = icmp ult i32 %4063, 31
  br i1 %4067, label %4103, label %4068

4068:                                             ; preds = %4056
  %4069 = and i64 %4065, 8589934560
  %4070 = sub i64 %4059, %4069
  br label %4071

4071:                                             ; preds = %4071, %4068
  %4072 = phi i64 [ 0, %4068 ], [ %4095, %4071 ]
  %4073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4068 ], [ %4091, %4071 ]
  %4074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4068 ], [ %4092, %4071 ]
  %4075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4068 ], [ %4093, %4071 ]
  %4076 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4068 ], [ %4094, %4071 ]
  %4077 = sub i64 %4059, %4072
  %4078 = getelementptr inbounds i32, ptr %9, i64 %4077
  %4079 = getelementptr inbounds i32, ptr %4078, i64 -7
  %4080 = load <8 x i32>, ptr %4079, align 4, !tbaa !6
  %4081 = shufflevector <8 x i32> %4080, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4082 = getelementptr inbounds i32, ptr %4078, i64 -15
  %4083 = load <8 x i32>, ptr %4082, align 4, !tbaa !6
  %4084 = shufflevector <8 x i32> %4083, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4085 = getelementptr inbounds i32, ptr %4078, i64 -23
  %4086 = load <8 x i32>, ptr %4085, align 4, !tbaa !6
  %4087 = shufflevector <8 x i32> %4086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4088 = getelementptr inbounds i32, ptr %4078, i64 -31
  %4089 = load <8 x i32>, ptr %4088, align 4, !tbaa !6
  %4090 = shufflevector <8 x i32> %4089, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4091 = mul <8 x i32> %4081, %4073
  %4092 = mul <8 x i32> %4084, %4074
  %4093 = mul <8 x i32> %4087, %4075
  %4094 = mul <8 x i32> %4090, %4076
  %4095 = add nuw i64 %4072, 32
  %4096 = icmp eq i64 %4095, %4069
  br i1 %4096, label %4097, label %4071, !llvm.loop !895

4097:                                             ; preds = %4071
  %4098 = mul <8 x i32> %4092, %4091
  %4099 = mul <8 x i32> %4093, %4098
  %4100 = mul <8 x i32> %4094, %4099
  %4101 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4100)
  %4102 = icmp eq i64 %4065, %4069
  br i1 %4102, label %4115, label %4103

4103:                                             ; preds = %4056, %4097
  %4104 = phi i64 [ %4059, %4056 ], [ %4070, %4097 ]
  %4105 = phi i32 [ 1, %4056 ], [ %4101, %4097 ]
  br label %4106

4106:                                             ; preds = %4103, %4106
  %4107 = phi i64 [ %4112, %4106 ], [ %4104, %4103 ]
  %4108 = phi i32 [ %4111, %4106 ], [ %4105, %4103 ]
  %4109 = getelementptr inbounds i32, ptr %9, i64 %4107
  %4110 = load i32, ptr %4109, align 4, !tbaa !6
  %4111 = mul nsw i32 %4110, %4108
  %4112 = add nsw i64 %4107, -1
  %4113 = trunc i64 %4107 to i32
  %4114 = icmp sgt i32 %4113, 0
  br i1 %4114, label %4106, label %4115, !llvm.loop !896

4115:                                             ; preds = %4106, %4097
  %4116 = phi i32 [ %4101, %4097 ], [ %4111, %4106 ]
  %4117 = and i64 %4066, 4294967295
  %4118 = getelementptr inbounds i32, ptr %6, i64 %4117
  %4119 = load i32, ptr %4118, align 4, !tbaa !6
  %4120 = mul nsw i32 %4119, %4116
  %4121 = add nsw i32 %4120, %4060
  %4122 = icmp sgt i64 %4058, 2
  %4123 = add nsw i64 %4059, -1
  %4124 = add i32 %4057, 1
  br i1 %4122, label %4056, label %4125, !llvm.loop !897

4125:                                             ; preds = %4115, %4051
  %4126 = phi i32 [ %4055, %4051 ], [ %4121, %4115 ]
  %4127 = sext i32 %4126 to i64
  %4128 = getelementptr inbounds i64, ptr %3719, i64 %4127
  %4129 = load i64, ptr %4128, align 8, !tbaa !121
  %4130 = sitofp i64 %4129 to double
  %4131 = fmul fast double %4130, %4130
  %4132 = fmul fast double %4131, %4131
  %4133 = fadd fast double %4132, %4052
  %4134 = fadd fast double %4054, 1.000000e+00
  %4135 = add nuw nsw i32 %4053, 1
  br i1 %4045, label %4136, label %4183

4136:                                             ; preds = %4125
  %4137 = load i32, ptr %4, align 4, !tbaa !6
  %4138 = load i32, ptr %12, align 4, !tbaa !6
  %4139 = add nsw i32 %4138, -1
  %4140 = icmp slt i32 %4137, %4139
  br i1 %4140, label %4160, label %4141

4141:                                             ; preds = %4136
  %4142 = icmp eq i32 %4137, %4139
  br i1 %4142, label %4143, label %4176

4143:                                             ; preds = %4141
  store i32 0, ptr %4, align 4, !tbaa !6
  %4144 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4144, ptr %6, align 4, !tbaa !6
  br i1 %4050, label %4183, label %4145

4145:                                             ; preds = %4143, %4170
  %4146 = phi i64 [ %4174, %4170 ], [ 1, %4143 ]
  %4147 = getelementptr inbounds i32, ptr %4, i64 %4146
  %4148 = load i32, ptr %4147, align 4, !tbaa !6
  %4149 = getelementptr inbounds i32, ptr %12, i64 %4146
  %4150 = load i32, ptr %4149, align 4, !tbaa !6
  %4151 = add nsw i32 %4150, -1
  %4152 = icmp slt i32 %4148, %4151
  br i1 %4152, label %4153, label %4168

4153:                                             ; preds = %4145
  br i1 %4140, label %4160, label %4154

4154:                                             ; preds = %4153
  %4155 = getelementptr inbounds i32, ptr %7, i64 %4146
  %4156 = load i32, ptr %4155, align 4, !tbaa !6
  %4157 = getelementptr inbounds i32, ptr %6, i64 %4146
  %4158 = load i32, ptr %4157, align 4, !tbaa !6
  %4159 = add nsw i32 %4158, %4156
  store i32 %4159, ptr %4157, align 4, !tbaa !6
  br label %4178

4160:                                             ; preds = %4136, %4153
  %4161 = phi i32 [ %4148, %4153 ], [ %4137, %4136 ]
  %4162 = phi ptr [ %4147, %4153 ], [ %4, %4136 ]
  %4163 = phi i64 [ %4146, %4153 ], [ 0, %4136 ]
  %4164 = add nsw i32 %4161, 1
  store i32 %4164, ptr %4162, align 4, !tbaa !6
  %4165 = getelementptr inbounds i32, ptr %7, i64 %4163
  %4166 = load i32, ptr %4165, align 4, !tbaa !6
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4163
  br label %4178

4168:                                             ; preds = %4145
  %4169 = icmp eq i32 %4148, %4151
  br i1 %4169, label %4170, label %4176

4170:                                             ; preds = %4168
  store i32 0, ptr %4147, align 4, !tbaa !6
  %4171 = getelementptr inbounds i32, ptr %8, i64 %4146
  %4172 = load i32, ptr %4171, align 4, !tbaa !6
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4146
  store i32 %4172, ptr %4173, align 4, !tbaa !6
  %4174 = add nuw nsw i64 %4146, 1
  %4175 = icmp eq i64 %4174, %4048
  br i1 %4175, label %4183, label %4145, !llvm.loop !898

4176:                                             ; preds = %4141, %4168
  store double %4133, ptr %3721, align 8, !tbaa !19
  %4177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4178:                                             ; preds = %4154, %4160
  %4179 = phi ptr [ %4167, %4160 ], [ %4147, %4154 ]
  %4180 = phi i32 [ %4166, %4160 ], [ 1, %4154 ]
  %4181 = load i32, ptr %4179, align 4, !tbaa !6
  %4182 = add nsw i32 %4181, %4180
  store i32 %4182, ptr %4179, align 4, !tbaa !6
  br label %4183

4183:                                             ; preds = %4170, %4178, %4143, %4125
  %4184 = icmp eq i32 %4135, %5
  br i1 %4184, label %5552, label %4051, !llvm.loop !899

4185:                                             ; preds = %4034, %4322
  %4186 = phi double [ 0.000000e+00, %4034 ], [ %4270, %4322 ]
  %4187 = phi i32 [ 0, %4034 ], [ %4271, %4322 ]
  %4188 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4035, label %4189, label %4258

4189:                                             ; preds = %4185, %4248
  %4190 = phi i32 [ %4257, %4248 ], [ 0, %4185 ]
  %4191 = phi i64 [ %4199, %4248 ], [ %4039, %4185 ]
  %4192 = phi i64 [ %4256, %4248 ], [ %4038, %4185 ]
  %4193 = phi i32 [ %4254, %4248 ], [ %4188, %4185 ]
  %4194 = sub i32 %4037, %4190
  %4195 = tail call i32 @llvm.smin.i32(i32 %4194, i32 0)
  %4196 = sub i32 %4194, %4195
  %4197 = zext i32 %4196 to i64
  %4198 = add nuw nsw i64 %4197, 1
  %4199 = add nsw i64 %4191, -1
  %4200 = icmp ult i32 %4196, 31
  br i1 %4200, label %4236, label %4201

4201:                                             ; preds = %4189
  %4202 = and i64 %4198, 8589934560
  %4203 = sub i64 %4192, %4202
  br label %4204

4204:                                             ; preds = %4204, %4201
  %4205 = phi i64 [ 0, %4201 ], [ %4228, %4204 ]
  %4206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4224, %4204 ]
  %4207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4225, %4204 ]
  %4208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4226, %4204 ]
  %4209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4227, %4204 ]
  %4210 = sub i64 %4192, %4205
  %4211 = getelementptr inbounds i32, ptr %11, i64 %4210
  %4212 = getelementptr inbounds i32, ptr %4211, i64 -7
  %4213 = load <8 x i32>, ptr %4212, align 4, !tbaa !6
  %4214 = shufflevector <8 x i32> %4213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4215 = getelementptr inbounds i32, ptr %4211, i64 -15
  %4216 = load <8 x i32>, ptr %4215, align 4, !tbaa !6
  %4217 = shufflevector <8 x i32> %4216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4218 = getelementptr inbounds i32, ptr %4211, i64 -23
  %4219 = load <8 x i32>, ptr %4218, align 4, !tbaa !6
  %4220 = shufflevector <8 x i32> %4219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4221 = getelementptr inbounds i32, ptr %4211, i64 -31
  %4222 = load <8 x i32>, ptr %4221, align 4, !tbaa !6
  %4223 = shufflevector <8 x i32> %4222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4224 = mul <8 x i32> %4214, %4206
  %4225 = mul <8 x i32> %4217, %4207
  %4226 = mul <8 x i32> %4220, %4208
  %4227 = mul <8 x i32> %4223, %4209
  %4228 = add nuw i64 %4205, 32
  %4229 = icmp eq i64 %4228, %4202
  br i1 %4229, label %4230, label %4204, !llvm.loop !900

4230:                                             ; preds = %4204
  %4231 = mul <8 x i32> %4225, %4224
  %4232 = mul <8 x i32> %4226, %4231
  %4233 = mul <8 x i32> %4227, %4232
  %4234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4233)
  %4235 = icmp eq i64 %4198, %4202
  br i1 %4235, label %4248, label %4236

4236:                                             ; preds = %4189, %4230
  %4237 = phi i64 [ %4192, %4189 ], [ %4203, %4230 ]
  %4238 = phi i32 [ 1, %4189 ], [ %4234, %4230 ]
  br label %4239

4239:                                             ; preds = %4236, %4239
  %4240 = phi i64 [ %4245, %4239 ], [ %4237, %4236 ]
  %4241 = phi i32 [ %4244, %4239 ], [ %4238, %4236 ]
  %4242 = getelementptr inbounds i32, ptr %11, i64 %4240
  %4243 = load i32, ptr %4242, align 4, !tbaa !6
  %4244 = mul nsw i32 %4243, %4241
  %4245 = add nsw i64 %4240, -1
  %4246 = trunc i64 %4240 to i32
  %4247 = icmp sgt i32 %4246, 0
  br i1 %4247, label %4239, label %4248, !llvm.loop !901

4248:                                             ; preds = %4239, %4230
  %4249 = phi i32 [ %4234, %4230 ], [ %4244, %4239 ]
  %4250 = and i64 %4199, 4294967295
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4250
  %4252 = load i32, ptr %4251, align 4, !tbaa !6
  %4253 = mul nsw i32 %4252, %4249
  %4254 = add nsw i32 %4253, %4193
  %4255 = icmp sgt i64 %4191, 2
  %4256 = add nsw i64 %4192, -1
  %4257 = add i32 %4190, 1
  br i1 %4255, label %4189, label %4258, !llvm.loop !902

4258:                                             ; preds = %4248, %4185
  %4259 = phi i32 [ %4188, %4185 ], [ %4254, %4248 ]
  %4260 = icmp slt i32 %4259, %5
  br i1 %4260, label %4263, label %4261

4261:                                             ; preds = %4258
  %4262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

4263:                                             ; preds = %4258
  %4264 = sext i32 %4259 to i64
  %4265 = getelementptr inbounds i64, ptr %3719, i64 %4264
  %4266 = load i64, ptr %4265, align 8, !tbaa !121
  %4267 = sitofp i64 %4266 to double
  %4268 = fmul fast double %4267, %4267
  %4269 = fmul fast double %4268, %4268
  %4270 = fadd fast double %4269, %4186
  store double %4270, ptr %3721, align 8, !tbaa !19
  %4271 = add nuw nsw i32 %4187, 1
  br i1 %4036, label %4272, label %4322

4272:                                             ; preds = %4263
  %4273 = load i32, ptr %4, align 4, !tbaa !6
  %4274 = load i32, ptr %12, align 4, !tbaa !6
  %4275 = add nsw i32 %4274, -1
  %4276 = icmp slt i32 %4273, %4275
  br i1 %4276, label %4299, label %4277

4277:                                             ; preds = %4272
  %4278 = icmp eq i32 %4273, %4275
  br i1 %4278, label %4279, label %4315

4279:                                             ; preds = %4277
  store i32 0, ptr %4, align 4, !tbaa !6
  %4280 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4280, ptr %6, align 4, !tbaa !6
  br i1 %4041, label %4322, label %4281

4281:                                             ; preds = %4279, %4309
  %4282 = phi i64 [ %4313, %4309 ], [ 1, %4279 ]
  %4283 = getelementptr inbounds i32, ptr %4, i64 %4282
  %4284 = load i32, ptr %4283, align 4, !tbaa !6
  %4285 = getelementptr inbounds i32, ptr %12, i64 %4282
  %4286 = load i32, ptr %4285, align 4, !tbaa !6
  %4287 = add nsw i32 %4286, -1
  %4288 = icmp slt i32 %4284, %4287
  br i1 %4288, label %4289, label %4307

4289:                                             ; preds = %4281
  br i1 %4276, label %4299, label %4290

4290:                                             ; preds = %4289
  %4291 = shl i64 %4282, 32
  %4292 = add i64 %4291, -4294967296
  %4293 = ashr exact i64 %4292, 32
  %4294 = getelementptr inbounds i32, ptr %7, i64 %4293
  %4295 = load i32, ptr %4294, align 4, !tbaa !6
  %4296 = getelementptr inbounds i32, ptr %6, i64 %4282
  %4297 = load i32, ptr %4296, align 4, !tbaa !6
  %4298 = add nsw i32 %4297, %4295
  store i32 %4298, ptr %4296, align 4, !tbaa !6
  br label %4317

4299:                                             ; preds = %4272, %4289
  %4300 = phi i32 [ %4284, %4289 ], [ %4273, %4272 ]
  %4301 = phi ptr [ %4283, %4289 ], [ %4, %4272 ]
  %4302 = phi i64 [ %4282, %4289 ], [ 0, %4272 ]
  %4303 = add nsw i32 %4300, 1
  store i32 %4303, ptr %4301, align 4, !tbaa !6
  %4304 = getelementptr inbounds i32, ptr %7, i64 %4302
  %4305 = load i32, ptr %4304, align 4, !tbaa !6
  %4306 = getelementptr inbounds i32, ptr %6, i64 %4302
  br label %4317

4307:                                             ; preds = %4281
  %4308 = icmp eq i32 %4284, %4287
  br i1 %4308, label %4309, label %4315

4309:                                             ; preds = %4307
  store i32 0, ptr %4283, align 4, !tbaa !6
  %4310 = getelementptr inbounds i32, ptr %8, i64 %4282
  %4311 = load i32, ptr %4310, align 4, !tbaa !6
  %4312 = getelementptr inbounds i32, ptr %6, i64 %4282
  store i32 %4311, ptr %4312, align 4, !tbaa !6
  %4313 = add nuw nsw i64 %4282, 1
  %4314 = icmp eq i64 %4313, %4039
  br i1 %4314, label %4322, label %4281, !llvm.loop !903

4315:                                             ; preds = %4277, %4307
  %4316 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4317:                                             ; preds = %4290, %4299
  %4318 = phi ptr [ %4306, %4299 ], [ %4283, %4290 ]
  %4319 = phi i32 [ %4305, %4299 ], [ 1, %4290 ]
  %4320 = load i32, ptr %4318, align 4, !tbaa !6
  %4321 = add nsw i32 %4320, %4319
  store i32 %4321, ptr %4318, align 4, !tbaa !6
  br label %4322

4322:                                             ; preds = %4309, %4317, %4279, %4263
  %4323 = icmp eq i32 %4271, %5
  br i1 %4323, label %5556, label %4185, !llvm.loop !904

4324:                                             ; preds = %3728
  %4325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1464, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

4326:                                             ; preds = %18
  %4327 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4328 = load ptr, ptr %4327, align 8, !tbaa !10
  %4329 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4330 = load ptr, ptr %4329, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4330, align 4, !tbaa !163
  %4331 = icmp eq i32 %13, 0
  br i1 %4331, label %4332, label %4337

4332:                                             ; preds = %4326
  %4333 = load i64, ptr %4328, align 8, !tbaa !121
  %4334 = sitofp i64 %4333 to float
  %4335 = fmul fast float %4334, %4334
  %4336 = fmul fast float %4335, %4335
  store float %4336, ptr %4330, align 4, !tbaa !163
  br label %5556

4337:                                             ; preds = %4326
  switch i32 %1, label %4939 [
    i32 1, label %4338
    i32 0, label %4643
  ]

4338:                                             ; preds = %4337
  %4339 = getelementptr inbounds i32, ptr %3, i64 %19
  %4340 = load i32, ptr %4339, align 4, !tbaa !6
  %4341 = icmp eq i32 %4340, 0
  %4342 = icmp sgt i32 %5, 0
  br i1 %4341, label %4352, label %4343

4343:                                             ; preds = %4338
  br i1 %4342, label %4344, label %5556

4344:                                             ; preds = %4343
  %4345 = icmp sgt i32 %13, 1
  %4346 = icmp sgt i32 %13, 0
  %4347 = add i32 %13, -2
  %4348 = zext i32 %4347 to i64
  %4349 = zext i32 %13 to i64
  %4350 = add nuw i32 %5, 1
  %4351 = icmp eq i32 %13, 1
  br label %4501

4352:                                             ; preds = %4338
  br i1 %4342, label %4353, label %5556

4353:                                             ; preds = %4352
  %4354 = icmp sgt i32 %13, 1
  %4355 = icmp sgt i32 %13, 0
  %4356 = add i32 %13, -2
  %4357 = zext i32 %4356 to i64
  %4358 = zext i32 %13 to i64
  %4359 = add nuw i32 %5, 1
  %4360 = icmp eq i32 %13, 1
  br label %4361

4361:                                             ; preds = %4353, %4499
  %4362 = phi float [ 0.000000e+00, %4353 ], [ %4449, %4499 ]
  %4363 = phi i32 [ 0, %4353 ], [ %4451, %4499 ]
  %4364 = phi double [ 0.000000e+00, %4353 ], [ %4450, %4499 ]
  %4365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4354, label %4366, label %4435

4366:                                             ; preds = %4361, %4425
  %4367 = phi i32 [ %4434, %4425 ], [ 0, %4361 ]
  %4368 = phi i64 [ %4376, %4425 ], [ %4358, %4361 ]
  %4369 = phi i64 [ %4433, %4425 ], [ %4357, %4361 ]
  %4370 = phi i32 [ %4431, %4425 ], [ %4365, %4361 ]
  %4371 = sub i32 %4356, %4367
  %4372 = tail call i32 @llvm.smin.i32(i32 %4371, i32 0)
  %4373 = sub i32 %4371, %4372
  %4374 = zext i32 %4373 to i64
  %4375 = add nuw nsw i64 %4374, 1
  %4376 = add nsw i64 %4368, -1
  %4377 = icmp ult i32 %4373, 31
  br i1 %4377, label %4413, label %4378

4378:                                             ; preds = %4366
  %4379 = and i64 %4375, 8589934560
  %4380 = sub i64 %4369, %4379
  br label %4381

4381:                                             ; preds = %4381, %4378
  %4382 = phi i64 [ 0, %4378 ], [ %4405, %4381 ]
  %4383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4378 ], [ %4401, %4381 ]
  %4384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4378 ], [ %4402, %4381 ]
  %4385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4378 ], [ %4403, %4381 ]
  %4386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4378 ], [ %4404, %4381 ]
  %4387 = sub i64 %4369, %4382
  %4388 = getelementptr inbounds i32, ptr %9, i64 %4387
  %4389 = getelementptr inbounds i32, ptr %4388, i64 -7
  %4390 = load <8 x i32>, ptr %4389, align 4, !tbaa !6
  %4391 = shufflevector <8 x i32> %4390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4392 = getelementptr inbounds i32, ptr %4388, i64 -15
  %4393 = load <8 x i32>, ptr %4392, align 4, !tbaa !6
  %4394 = shufflevector <8 x i32> %4393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4395 = getelementptr inbounds i32, ptr %4388, i64 -23
  %4396 = load <8 x i32>, ptr %4395, align 4, !tbaa !6
  %4397 = shufflevector <8 x i32> %4396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4398 = getelementptr inbounds i32, ptr %4388, i64 -31
  %4399 = load <8 x i32>, ptr %4398, align 4, !tbaa !6
  %4400 = shufflevector <8 x i32> %4399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4401 = mul <8 x i32> %4391, %4383
  %4402 = mul <8 x i32> %4394, %4384
  %4403 = mul <8 x i32> %4397, %4385
  %4404 = mul <8 x i32> %4400, %4386
  %4405 = add nuw i64 %4382, 32
  %4406 = icmp eq i64 %4405, %4379
  br i1 %4406, label %4407, label %4381, !llvm.loop !905

4407:                                             ; preds = %4381
  %4408 = mul <8 x i32> %4402, %4401
  %4409 = mul <8 x i32> %4403, %4408
  %4410 = mul <8 x i32> %4404, %4409
  %4411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4410)
  %4412 = icmp eq i64 %4375, %4379
  br i1 %4412, label %4425, label %4413

4413:                                             ; preds = %4366, %4407
  %4414 = phi i64 [ %4369, %4366 ], [ %4380, %4407 ]
  %4415 = phi i32 [ 1, %4366 ], [ %4411, %4407 ]
  br label %4416

4416:                                             ; preds = %4413, %4416
  %4417 = phi i64 [ %4422, %4416 ], [ %4414, %4413 ]
  %4418 = phi i32 [ %4421, %4416 ], [ %4415, %4413 ]
  %4419 = getelementptr inbounds i32, ptr %9, i64 %4417
  %4420 = load i32, ptr %4419, align 4, !tbaa !6
  %4421 = mul nsw i32 %4420, %4418
  %4422 = add nsw i64 %4417, -1
  %4423 = trunc i64 %4417 to i32
  %4424 = icmp sgt i32 %4423, 0
  br i1 %4424, label %4416, label %4425, !llvm.loop !906

4425:                                             ; preds = %4416, %4407
  %4426 = phi i32 [ %4411, %4407 ], [ %4421, %4416 ]
  %4427 = and i64 %4376, 4294967295
  %4428 = getelementptr inbounds i32, ptr %6, i64 %4427
  %4429 = load i32, ptr %4428, align 4, !tbaa !6
  %4430 = mul nsw i32 %4429, %4426
  %4431 = add nsw i32 %4430, %4370
  %4432 = icmp sgt i64 %4368, 2
  %4433 = add nsw i64 %4369, -1
  %4434 = add i32 %4367, 1
  br i1 %4432, label %4366, label %4435, !llvm.loop !907

4435:                                             ; preds = %4425, %4361
  %4436 = phi i32 [ %4365, %4361 ], [ %4431, %4425 ]
  %4437 = sext i32 %4436 to i64
  %4438 = getelementptr inbounds double, ptr %2, i64 %4437
  %4439 = load double, ptr %4438, align 8, !tbaa !19
  %4440 = getelementptr inbounds i64, ptr %4328, i64 %4437
  %4441 = load i64, ptr %4440, align 8, !tbaa !121
  %4442 = sitofp i64 %4441 to float
  %4443 = fpext float %4362 to double
  %4444 = fpext float %4442 to double
  %4445 = fmul fast double %4439, %4444
  %4446 = fmul fast double %4445, %4445
  %4447 = fmul fast double %4446, %4446
  %4448 = fadd fast double %4447, %4443
  %4449 = fptrunc double %4448 to float
  %4450 = fadd fast double %4439, %4364
  %4451 = add nuw nsw i32 %4363, 1
  br i1 %4355, label %4452, label %4499

4452:                                             ; preds = %4435
  %4453 = load i32, ptr %4, align 4, !tbaa !6
  %4454 = load i32, ptr %12, align 4, !tbaa !6
  %4455 = add nsw i32 %4454, -1
  %4456 = icmp slt i32 %4453, %4455
  br i1 %4456, label %4476, label %4457

4457:                                             ; preds = %4452
  %4458 = icmp eq i32 %4453, %4455
  br i1 %4458, label %4459, label %4492

4459:                                             ; preds = %4457
  store i32 0, ptr %4, align 4, !tbaa !6
  %4460 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4460, ptr %6, align 4, !tbaa !6
  br i1 %4360, label %4499, label %4461

4461:                                             ; preds = %4459, %4486
  %4462 = phi i64 [ %4490, %4486 ], [ 1, %4459 ]
  %4463 = getelementptr inbounds i32, ptr %4, i64 %4462
  %4464 = load i32, ptr %4463, align 4, !tbaa !6
  %4465 = getelementptr inbounds i32, ptr %12, i64 %4462
  %4466 = load i32, ptr %4465, align 4, !tbaa !6
  %4467 = add nsw i32 %4466, -1
  %4468 = icmp slt i32 %4464, %4467
  br i1 %4468, label %4469, label %4484

4469:                                             ; preds = %4461
  br i1 %4456, label %4476, label %4470

4470:                                             ; preds = %4469
  %4471 = getelementptr inbounds i32, ptr %7, i64 %4462
  %4472 = load i32, ptr %4471, align 4, !tbaa !6
  %4473 = getelementptr inbounds i32, ptr %6, i64 %4462
  %4474 = load i32, ptr %4473, align 4, !tbaa !6
  %4475 = add nsw i32 %4474, %4472
  store i32 %4475, ptr %4473, align 4, !tbaa !6
  br label %4494

4476:                                             ; preds = %4452, %4469
  %4477 = phi i32 [ %4464, %4469 ], [ %4453, %4452 ]
  %4478 = phi ptr [ %4463, %4469 ], [ %4, %4452 ]
  %4479 = phi i64 [ %4462, %4469 ], [ 0, %4452 ]
  %4480 = add nsw i32 %4477, 1
  store i32 %4480, ptr %4478, align 4, !tbaa !6
  %4481 = getelementptr inbounds i32, ptr %7, i64 %4479
  %4482 = load i32, ptr %4481, align 4, !tbaa !6
  %4483 = getelementptr inbounds i32, ptr %6, i64 %4479
  br label %4494

4484:                                             ; preds = %4461
  %4485 = icmp eq i32 %4464, %4467
  br i1 %4485, label %4486, label %4492

4486:                                             ; preds = %4484
  store i32 0, ptr %4463, align 4, !tbaa !6
  %4487 = getelementptr inbounds i32, ptr %8, i64 %4462
  %4488 = load i32, ptr %4487, align 4, !tbaa !6
  %4489 = getelementptr inbounds i32, ptr %6, i64 %4462
  store i32 %4488, ptr %4489, align 4, !tbaa !6
  %4490 = add nuw nsw i64 %4462, 1
  %4491 = icmp eq i64 %4490, %4358
  br i1 %4491, label %4499, label %4461, !llvm.loop !908

4492:                                             ; preds = %4457, %4484
  store float %4449, ptr %4330, align 4, !tbaa !163
  %4493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4494:                                             ; preds = %4470, %4476
  %4495 = phi ptr [ %4483, %4476 ], [ %4463, %4470 ]
  %4496 = phi i32 [ %4482, %4476 ], [ 1, %4470 ]
  %4497 = load i32, ptr %4495, align 4, !tbaa !6
  %4498 = add nsw i32 %4497, %4496
  store i32 %4498, ptr %4495, align 4, !tbaa !6
  br label %4499

4499:                                             ; preds = %4486, %4494, %4459, %4435
  %4500 = icmp eq i32 %4451, %5
  br i1 %4500, label %5553, label %4361, !llvm.loop !909

4501:                                             ; preds = %4344, %4641
  %4502 = phi float [ 0.000000e+00, %4344 ], [ %4589, %4641 ]
  %4503 = phi i32 [ 0, %4344 ], [ %4590, %4641 ]
  %4504 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4345, label %4505, label %4574

4505:                                             ; preds = %4501, %4564
  %4506 = phi i32 [ %4573, %4564 ], [ 0, %4501 ]
  %4507 = phi i64 [ %4515, %4564 ], [ %4349, %4501 ]
  %4508 = phi i64 [ %4572, %4564 ], [ %4348, %4501 ]
  %4509 = phi i32 [ %4570, %4564 ], [ %4504, %4501 ]
  %4510 = sub i32 %4347, %4506
  %4511 = tail call i32 @llvm.smin.i32(i32 %4510, i32 0)
  %4512 = sub i32 %4510, %4511
  %4513 = zext i32 %4512 to i64
  %4514 = add nuw nsw i64 %4513, 1
  %4515 = add nsw i64 %4507, -1
  %4516 = icmp ult i32 %4512, 31
  br i1 %4516, label %4552, label %4517

4517:                                             ; preds = %4505
  %4518 = and i64 %4514, 8589934560
  %4519 = sub i64 %4508, %4518
  br label %4520

4520:                                             ; preds = %4520, %4517
  %4521 = phi i64 [ 0, %4517 ], [ %4544, %4520 ]
  %4522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4517 ], [ %4540, %4520 ]
  %4523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4517 ], [ %4541, %4520 ]
  %4524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4517 ], [ %4542, %4520 ]
  %4525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4517 ], [ %4543, %4520 ]
  %4526 = sub i64 %4508, %4521
  %4527 = getelementptr inbounds i32, ptr %11, i64 %4526
  %4528 = getelementptr inbounds i32, ptr %4527, i64 -7
  %4529 = load <8 x i32>, ptr %4528, align 4, !tbaa !6
  %4530 = shufflevector <8 x i32> %4529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4531 = getelementptr inbounds i32, ptr %4527, i64 -15
  %4532 = load <8 x i32>, ptr %4531, align 4, !tbaa !6
  %4533 = shufflevector <8 x i32> %4532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4534 = getelementptr inbounds i32, ptr %4527, i64 -23
  %4535 = load <8 x i32>, ptr %4534, align 4, !tbaa !6
  %4536 = shufflevector <8 x i32> %4535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4537 = getelementptr inbounds i32, ptr %4527, i64 -31
  %4538 = load <8 x i32>, ptr %4537, align 4, !tbaa !6
  %4539 = shufflevector <8 x i32> %4538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4540 = mul <8 x i32> %4530, %4522
  %4541 = mul <8 x i32> %4533, %4523
  %4542 = mul <8 x i32> %4536, %4524
  %4543 = mul <8 x i32> %4539, %4525
  %4544 = add nuw i64 %4521, 32
  %4545 = icmp eq i64 %4544, %4518
  br i1 %4545, label %4546, label %4520, !llvm.loop !910

4546:                                             ; preds = %4520
  %4547 = mul <8 x i32> %4541, %4540
  %4548 = mul <8 x i32> %4542, %4547
  %4549 = mul <8 x i32> %4543, %4548
  %4550 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4549)
  %4551 = icmp eq i64 %4514, %4518
  br i1 %4551, label %4564, label %4552

4552:                                             ; preds = %4505, %4546
  %4553 = phi i64 [ %4508, %4505 ], [ %4519, %4546 ]
  %4554 = phi i32 [ 1, %4505 ], [ %4550, %4546 ]
  br label %4555

4555:                                             ; preds = %4552, %4555
  %4556 = phi i64 [ %4561, %4555 ], [ %4553, %4552 ]
  %4557 = phi i32 [ %4560, %4555 ], [ %4554, %4552 ]
  %4558 = getelementptr inbounds i32, ptr %11, i64 %4556
  %4559 = load i32, ptr %4558, align 4, !tbaa !6
  %4560 = mul nsw i32 %4559, %4557
  %4561 = add nsw i64 %4556, -1
  %4562 = trunc i64 %4556 to i32
  %4563 = icmp sgt i32 %4562, 0
  br i1 %4563, label %4555, label %4564, !llvm.loop !911

4564:                                             ; preds = %4555, %4546
  %4565 = phi i32 [ %4550, %4546 ], [ %4560, %4555 ]
  %4566 = and i64 %4515, 4294967295
  %4567 = getelementptr inbounds i32, ptr %6, i64 %4566
  %4568 = load i32, ptr %4567, align 4, !tbaa !6
  %4569 = mul nsw i32 %4568, %4565
  %4570 = add nsw i32 %4569, %4509
  %4571 = icmp sgt i64 %4507, 2
  %4572 = add nsw i64 %4508, -1
  %4573 = add i32 %4506, 1
  br i1 %4571, label %4505, label %4574, !llvm.loop !912

4574:                                             ; preds = %4564, %4501
  %4575 = phi i32 [ %4504, %4501 ], [ %4570, %4564 ]
  %4576 = icmp slt i32 %4575, %5
  br i1 %4576, label %4579, label %4577

4577:                                             ; preds = %4574
  %4578 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

4579:                                             ; preds = %4574
  %4580 = sext i32 %4575 to i64
  %4581 = getelementptr inbounds i64, ptr %4328, i64 %4580
  %4582 = load i64, ptr %4581, align 8, !tbaa !121
  %4583 = sitofp i64 %4582 to float
  %4584 = fpext float %4502 to double
  %4585 = fpext float %4583 to double
  %4586 = fmul fast double %4585, %4585
  %4587 = fmul fast double %4586, %4586
  %4588 = fadd fast double %4587, %4584
  %4589 = fptrunc double %4588 to float
  store float %4589, ptr %4330, align 4, !tbaa !163
  %4590 = add nuw nsw i32 %4503, 1
  br i1 %4346, label %4591, label %4641

4591:                                             ; preds = %4579
  %4592 = load i32, ptr %4, align 4, !tbaa !6
  %4593 = load i32, ptr %12, align 4, !tbaa !6
  %4594 = add nsw i32 %4593, -1
  %4595 = icmp slt i32 %4592, %4594
  br i1 %4595, label %4618, label %4596

4596:                                             ; preds = %4591
  %4597 = icmp eq i32 %4592, %4594
  br i1 %4597, label %4598, label %4634

4598:                                             ; preds = %4596
  store i32 0, ptr %4, align 4, !tbaa !6
  %4599 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4599, ptr %6, align 4, !tbaa !6
  br i1 %4351, label %4641, label %4600

4600:                                             ; preds = %4598, %4628
  %4601 = phi i64 [ %4632, %4628 ], [ 1, %4598 ]
  %4602 = getelementptr inbounds i32, ptr %4, i64 %4601
  %4603 = load i32, ptr %4602, align 4, !tbaa !6
  %4604 = getelementptr inbounds i32, ptr %12, i64 %4601
  %4605 = load i32, ptr %4604, align 4, !tbaa !6
  %4606 = add nsw i32 %4605, -1
  %4607 = icmp slt i32 %4603, %4606
  br i1 %4607, label %4608, label %4626

4608:                                             ; preds = %4600
  br i1 %4595, label %4618, label %4609

4609:                                             ; preds = %4608
  %4610 = shl i64 %4601, 32
  %4611 = add i64 %4610, -4294967296
  %4612 = ashr exact i64 %4611, 32
  %4613 = getelementptr inbounds i32, ptr %7, i64 %4612
  %4614 = load i32, ptr %4613, align 4, !tbaa !6
  %4615 = getelementptr inbounds i32, ptr %6, i64 %4601
  %4616 = load i32, ptr %4615, align 4, !tbaa !6
  %4617 = add nsw i32 %4616, %4614
  store i32 %4617, ptr %4615, align 4, !tbaa !6
  br label %4636

4618:                                             ; preds = %4591, %4608
  %4619 = phi i32 [ %4603, %4608 ], [ %4592, %4591 ]
  %4620 = phi ptr [ %4602, %4608 ], [ %4, %4591 ]
  %4621 = phi i64 [ %4601, %4608 ], [ 0, %4591 ]
  %4622 = add nsw i32 %4619, 1
  store i32 %4622, ptr %4620, align 4, !tbaa !6
  %4623 = getelementptr inbounds i32, ptr %7, i64 %4621
  %4624 = load i32, ptr %4623, align 4, !tbaa !6
  %4625 = getelementptr inbounds i32, ptr %6, i64 %4621
  br label %4636

4626:                                             ; preds = %4600
  %4627 = icmp eq i32 %4603, %4606
  br i1 %4627, label %4628, label %4634

4628:                                             ; preds = %4626
  store i32 0, ptr %4602, align 4, !tbaa !6
  %4629 = getelementptr inbounds i32, ptr %8, i64 %4601
  %4630 = load i32, ptr %4629, align 4, !tbaa !6
  %4631 = getelementptr inbounds i32, ptr %6, i64 %4601
  store i32 %4630, ptr %4631, align 4, !tbaa !6
  %4632 = add nuw nsw i64 %4601, 1
  %4633 = icmp eq i64 %4632, %4349
  br i1 %4633, label %4641, label %4600, !llvm.loop !913

4634:                                             ; preds = %4596, %4626
  %4635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4636:                                             ; preds = %4609, %4618
  %4637 = phi ptr [ %4625, %4618 ], [ %4602, %4609 ]
  %4638 = phi i32 [ %4624, %4618 ], [ 1, %4609 ]
  %4639 = load i32, ptr %4637, align 4, !tbaa !6
  %4640 = add nsw i32 %4639, %4638
  store i32 %4640, ptr %4637, align 4, !tbaa !6
  br label %4641

4641:                                             ; preds = %4628, %4636, %4598, %4579
  %4642 = icmp eq i32 %4590, %5
  br i1 %4642, label %5556, label %4501, !llvm.loop !914

4643:                                             ; preds = %4337
  %4644 = getelementptr inbounds i32, ptr %3, i64 %19
  %4645 = load i32, ptr %4644, align 4, !tbaa !6
  %4646 = icmp eq i32 %4645, 0
  %4647 = icmp sgt i32 %5, 0
  br i1 %4646, label %4657, label %4648

4648:                                             ; preds = %4643
  br i1 %4647, label %4649, label %5556

4649:                                             ; preds = %4648
  %4650 = icmp sgt i32 %13, 1
  %4651 = icmp sgt i32 %13, 0
  %4652 = add i32 %13, -2
  %4653 = zext i32 %4652 to i64
  %4654 = zext i32 %13 to i64
  %4655 = add nuw i32 %5, 1
  %4656 = icmp eq i32 %13, 1
  br label %4800

4657:                                             ; preds = %4643
  br i1 %4647, label %4658, label %5556

4658:                                             ; preds = %4657
  %4659 = icmp sgt i32 %13, 1
  %4660 = icmp sgt i32 %13, 0
  %4661 = add i32 %13, -2
  %4662 = zext i32 %4661 to i64
  %4663 = zext i32 %13 to i64
  %4664 = add nuw i32 %5, 1
  %4665 = icmp eq i32 %13, 1
  br label %4666

4666:                                             ; preds = %4658, %4798
  %4667 = phi float [ 0.000000e+00, %4658 ], [ %4748, %4798 ]
  %4668 = phi i32 [ 0, %4658 ], [ %4750, %4798 ]
  %4669 = phi double [ 0.000000e+00, %4658 ], [ %4749, %4798 ]
  %4670 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4659, label %4671, label %4740

4671:                                             ; preds = %4666, %4730
  %4672 = phi i32 [ %4739, %4730 ], [ 0, %4666 ]
  %4673 = phi i64 [ %4681, %4730 ], [ %4663, %4666 ]
  %4674 = phi i64 [ %4738, %4730 ], [ %4662, %4666 ]
  %4675 = phi i32 [ %4736, %4730 ], [ %4670, %4666 ]
  %4676 = sub i32 %4661, %4672
  %4677 = tail call i32 @llvm.smin.i32(i32 %4676, i32 0)
  %4678 = sub i32 %4676, %4677
  %4679 = zext i32 %4678 to i64
  %4680 = add nuw nsw i64 %4679, 1
  %4681 = add nsw i64 %4673, -1
  %4682 = icmp ult i32 %4678, 31
  br i1 %4682, label %4718, label %4683

4683:                                             ; preds = %4671
  %4684 = and i64 %4680, 8589934560
  %4685 = sub i64 %4674, %4684
  br label %4686

4686:                                             ; preds = %4686, %4683
  %4687 = phi i64 [ 0, %4683 ], [ %4710, %4686 ]
  %4688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4706, %4686 ]
  %4689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4707, %4686 ]
  %4690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4708, %4686 ]
  %4691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4709, %4686 ]
  %4692 = sub i64 %4674, %4687
  %4693 = getelementptr inbounds i32, ptr %9, i64 %4692
  %4694 = getelementptr inbounds i32, ptr %4693, i64 -7
  %4695 = load <8 x i32>, ptr %4694, align 4, !tbaa !6
  %4696 = shufflevector <8 x i32> %4695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4697 = getelementptr inbounds i32, ptr %4693, i64 -15
  %4698 = load <8 x i32>, ptr %4697, align 4, !tbaa !6
  %4699 = shufflevector <8 x i32> %4698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4700 = getelementptr inbounds i32, ptr %4693, i64 -23
  %4701 = load <8 x i32>, ptr %4700, align 4, !tbaa !6
  %4702 = shufflevector <8 x i32> %4701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4703 = getelementptr inbounds i32, ptr %4693, i64 -31
  %4704 = load <8 x i32>, ptr %4703, align 4, !tbaa !6
  %4705 = shufflevector <8 x i32> %4704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4706 = mul <8 x i32> %4696, %4688
  %4707 = mul <8 x i32> %4699, %4689
  %4708 = mul <8 x i32> %4702, %4690
  %4709 = mul <8 x i32> %4705, %4691
  %4710 = add nuw i64 %4687, 32
  %4711 = icmp eq i64 %4710, %4684
  br i1 %4711, label %4712, label %4686, !llvm.loop !915

4712:                                             ; preds = %4686
  %4713 = mul <8 x i32> %4707, %4706
  %4714 = mul <8 x i32> %4708, %4713
  %4715 = mul <8 x i32> %4709, %4714
  %4716 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4715)
  %4717 = icmp eq i64 %4680, %4684
  br i1 %4717, label %4730, label %4718

4718:                                             ; preds = %4671, %4712
  %4719 = phi i64 [ %4674, %4671 ], [ %4685, %4712 ]
  %4720 = phi i32 [ 1, %4671 ], [ %4716, %4712 ]
  br label %4721

4721:                                             ; preds = %4718, %4721
  %4722 = phi i64 [ %4727, %4721 ], [ %4719, %4718 ]
  %4723 = phi i32 [ %4726, %4721 ], [ %4720, %4718 ]
  %4724 = getelementptr inbounds i32, ptr %9, i64 %4722
  %4725 = load i32, ptr %4724, align 4, !tbaa !6
  %4726 = mul nsw i32 %4725, %4723
  %4727 = add nsw i64 %4722, -1
  %4728 = trunc i64 %4722 to i32
  %4729 = icmp sgt i32 %4728, 0
  br i1 %4729, label %4721, label %4730, !llvm.loop !916

4730:                                             ; preds = %4721, %4712
  %4731 = phi i32 [ %4716, %4712 ], [ %4726, %4721 ]
  %4732 = and i64 %4681, 4294967295
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4732
  %4734 = load i32, ptr %4733, align 4, !tbaa !6
  %4735 = mul nsw i32 %4734, %4731
  %4736 = add nsw i32 %4735, %4675
  %4737 = icmp sgt i64 %4673, 2
  %4738 = add nsw i64 %4674, -1
  %4739 = add i32 %4672, 1
  br i1 %4737, label %4671, label %4740, !llvm.loop !917

4740:                                             ; preds = %4730, %4666
  %4741 = phi i32 [ %4670, %4666 ], [ %4736, %4730 ]
  %4742 = sext i32 %4741 to i64
  %4743 = getelementptr inbounds i64, ptr %4328, i64 %4742
  %4744 = load i64, ptr %4743, align 8, !tbaa !121
  %4745 = sitofp i64 %4744 to float
  %4746 = fmul fast float %4745, %4745
  %4747 = fmul fast float %4746, %4746
  %4748 = fadd fast float %4747, %4667
  %4749 = fadd fast double %4669, 1.000000e+00
  %4750 = add nuw nsw i32 %4668, 1
  br i1 %4660, label %4751, label %4798

4751:                                             ; preds = %4740
  %4752 = load i32, ptr %4, align 4, !tbaa !6
  %4753 = load i32, ptr %12, align 4, !tbaa !6
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4752, %4754
  br i1 %4755, label %4775, label %4756

4756:                                             ; preds = %4751
  %4757 = icmp eq i32 %4752, %4754
  br i1 %4757, label %4758, label %4791

4758:                                             ; preds = %4756
  store i32 0, ptr %4, align 4, !tbaa !6
  %4759 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4759, ptr %6, align 4, !tbaa !6
  br i1 %4665, label %4798, label %4760

4760:                                             ; preds = %4758, %4785
  %4761 = phi i64 [ %4789, %4785 ], [ 1, %4758 ]
  %4762 = getelementptr inbounds i32, ptr %4, i64 %4761
  %4763 = load i32, ptr %4762, align 4, !tbaa !6
  %4764 = getelementptr inbounds i32, ptr %12, i64 %4761
  %4765 = load i32, ptr %4764, align 4, !tbaa !6
  %4766 = add nsw i32 %4765, -1
  %4767 = icmp slt i32 %4763, %4766
  br i1 %4767, label %4768, label %4783

4768:                                             ; preds = %4760
  br i1 %4755, label %4775, label %4769

4769:                                             ; preds = %4768
  %4770 = getelementptr inbounds i32, ptr %7, i64 %4761
  %4771 = load i32, ptr %4770, align 4, !tbaa !6
  %4772 = getelementptr inbounds i32, ptr %6, i64 %4761
  %4773 = load i32, ptr %4772, align 4, !tbaa !6
  %4774 = add nsw i32 %4773, %4771
  store i32 %4774, ptr %4772, align 4, !tbaa !6
  br label %4793

4775:                                             ; preds = %4751, %4768
  %4776 = phi i32 [ %4763, %4768 ], [ %4752, %4751 ]
  %4777 = phi ptr [ %4762, %4768 ], [ %4, %4751 ]
  %4778 = phi i64 [ %4761, %4768 ], [ 0, %4751 ]
  %4779 = add nsw i32 %4776, 1
  store i32 %4779, ptr %4777, align 4, !tbaa !6
  %4780 = getelementptr inbounds i32, ptr %7, i64 %4778
  %4781 = load i32, ptr %4780, align 4, !tbaa !6
  %4782 = getelementptr inbounds i32, ptr %6, i64 %4778
  br label %4793

4783:                                             ; preds = %4760
  %4784 = icmp eq i32 %4763, %4766
  br i1 %4784, label %4785, label %4791

4785:                                             ; preds = %4783
  store i32 0, ptr %4762, align 4, !tbaa !6
  %4786 = getelementptr inbounds i32, ptr %8, i64 %4761
  %4787 = load i32, ptr %4786, align 4, !tbaa !6
  %4788 = getelementptr inbounds i32, ptr %6, i64 %4761
  store i32 %4787, ptr %4788, align 4, !tbaa !6
  %4789 = add nuw nsw i64 %4761, 1
  %4790 = icmp eq i64 %4789, %4663
  br i1 %4790, label %4798, label %4760, !llvm.loop !918

4791:                                             ; preds = %4756, %4783
  store float %4748, ptr %4330, align 4, !tbaa !163
  %4792 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4793:                                             ; preds = %4769, %4775
  %4794 = phi ptr [ %4782, %4775 ], [ %4762, %4769 ]
  %4795 = phi i32 [ %4781, %4775 ], [ 1, %4769 ]
  %4796 = load i32, ptr %4794, align 4, !tbaa !6
  %4797 = add nsw i32 %4796, %4795
  store i32 %4797, ptr %4794, align 4, !tbaa !6
  br label %4798

4798:                                             ; preds = %4785, %4793, %4758, %4740
  %4799 = icmp eq i32 %4750, %5
  br i1 %4799, label %5554, label %4666, !llvm.loop !919

4800:                                             ; preds = %4649, %4937
  %4801 = phi float [ 0.000000e+00, %4649 ], [ %4885, %4937 ]
  %4802 = phi i32 [ 0, %4649 ], [ %4886, %4937 ]
  %4803 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4650, label %4804, label %4873

4804:                                             ; preds = %4800, %4863
  %4805 = phi i32 [ %4872, %4863 ], [ 0, %4800 ]
  %4806 = phi i64 [ %4814, %4863 ], [ %4654, %4800 ]
  %4807 = phi i64 [ %4871, %4863 ], [ %4653, %4800 ]
  %4808 = phi i32 [ %4869, %4863 ], [ %4803, %4800 ]
  %4809 = sub i32 %4652, %4805
  %4810 = tail call i32 @llvm.smin.i32(i32 %4809, i32 0)
  %4811 = sub i32 %4809, %4810
  %4812 = zext i32 %4811 to i64
  %4813 = add nuw nsw i64 %4812, 1
  %4814 = add nsw i64 %4806, -1
  %4815 = icmp ult i32 %4811, 31
  br i1 %4815, label %4851, label %4816

4816:                                             ; preds = %4804
  %4817 = and i64 %4813, 8589934560
  %4818 = sub i64 %4807, %4817
  br label %4819

4819:                                             ; preds = %4819, %4816
  %4820 = phi i64 [ 0, %4816 ], [ %4843, %4819 ]
  %4821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4816 ], [ %4839, %4819 ]
  %4822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4816 ], [ %4840, %4819 ]
  %4823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4816 ], [ %4841, %4819 ]
  %4824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4816 ], [ %4842, %4819 ]
  %4825 = sub i64 %4807, %4820
  %4826 = getelementptr inbounds i32, ptr %11, i64 %4825
  %4827 = getelementptr inbounds i32, ptr %4826, i64 -7
  %4828 = load <8 x i32>, ptr %4827, align 4, !tbaa !6
  %4829 = shufflevector <8 x i32> %4828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4830 = getelementptr inbounds i32, ptr %4826, i64 -15
  %4831 = load <8 x i32>, ptr %4830, align 4, !tbaa !6
  %4832 = shufflevector <8 x i32> %4831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4833 = getelementptr inbounds i32, ptr %4826, i64 -23
  %4834 = load <8 x i32>, ptr %4833, align 4, !tbaa !6
  %4835 = shufflevector <8 x i32> %4834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4836 = getelementptr inbounds i32, ptr %4826, i64 -31
  %4837 = load <8 x i32>, ptr %4836, align 4, !tbaa !6
  %4838 = shufflevector <8 x i32> %4837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4839 = mul <8 x i32> %4829, %4821
  %4840 = mul <8 x i32> %4832, %4822
  %4841 = mul <8 x i32> %4835, %4823
  %4842 = mul <8 x i32> %4838, %4824
  %4843 = add nuw i64 %4820, 32
  %4844 = icmp eq i64 %4843, %4817
  br i1 %4844, label %4845, label %4819, !llvm.loop !920

4845:                                             ; preds = %4819
  %4846 = mul <8 x i32> %4840, %4839
  %4847 = mul <8 x i32> %4841, %4846
  %4848 = mul <8 x i32> %4842, %4847
  %4849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4848)
  %4850 = icmp eq i64 %4813, %4817
  br i1 %4850, label %4863, label %4851

4851:                                             ; preds = %4804, %4845
  %4852 = phi i64 [ %4807, %4804 ], [ %4818, %4845 ]
  %4853 = phi i32 [ 1, %4804 ], [ %4849, %4845 ]
  br label %4854

4854:                                             ; preds = %4851, %4854
  %4855 = phi i64 [ %4860, %4854 ], [ %4852, %4851 ]
  %4856 = phi i32 [ %4859, %4854 ], [ %4853, %4851 ]
  %4857 = getelementptr inbounds i32, ptr %11, i64 %4855
  %4858 = load i32, ptr %4857, align 4, !tbaa !6
  %4859 = mul nsw i32 %4858, %4856
  %4860 = add nsw i64 %4855, -1
  %4861 = trunc i64 %4855 to i32
  %4862 = icmp sgt i32 %4861, 0
  br i1 %4862, label %4854, label %4863, !llvm.loop !921

4863:                                             ; preds = %4854, %4845
  %4864 = phi i32 [ %4849, %4845 ], [ %4859, %4854 ]
  %4865 = and i64 %4814, 4294967295
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4865
  %4867 = load i32, ptr %4866, align 4, !tbaa !6
  %4868 = mul nsw i32 %4867, %4864
  %4869 = add nsw i32 %4868, %4808
  %4870 = icmp sgt i64 %4806, 2
  %4871 = add nsw i64 %4807, -1
  %4872 = add i32 %4805, 1
  br i1 %4870, label %4804, label %4873, !llvm.loop !922

4873:                                             ; preds = %4863, %4800
  %4874 = phi i32 [ %4803, %4800 ], [ %4869, %4863 ]
  %4875 = icmp slt i32 %4874, %5
  br i1 %4875, label %4878, label %4876

4876:                                             ; preds = %4873
  %4877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

4878:                                             ; preds = %4873
  %4879 = sext i32 %4874 to i64
  %4880 = getelementptr inbounds i64, ptr %4328, i64 %4879
  %4881 = load i64, ptr %4880, align 8, !tbaa !121
  %4882 = sitofp i64 %4881 to float
  %4883 = fmul fast float %4882, %4882
  %4884 = fmul fast float %4883, %4883
  %4885 = fadd fast float %4884, %4801
  store float %4885, ptr %4330, align 4, !tbaa !163
  %4886 = add nuw nsw i32 %4802, 1
  br i1 %4651, label %4887, label %4937

4887:                                             ; preds = %4878
  %4888 = load i32, ptr %4, align 4, !tbaa !6
  %4889 = load i32, ptr %12, align 4, !tbaa !6
  %4890 = add nsw i32 %4889, -1
  %4891 = icmp slt i32 %4888, %4890
  br i1 %4891, label %4914, label %4892

4892:                                             ; preds = %4887
  %4893 = icmp eq i32 %4888, %4890
  br i1 %4893, label %4894, label %4930

4894:                                             ; preds = %4892
  store i32 0, ptr %4, align 4, !tbaa !6
  %4895 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4895, ptr %6, align 4, !tbaa !6
  br i1 %4656, label %4937, label %4896

4896:                                             ; preds = %4894, %4924
  %4897 = phi i64 [ %4928, %4924 ], [ 1, %4894 ]
  %4898 = getelementptr inbounds i32, ptr %4, i64 %4897
  %4899 = load i32, ptr %4898, align 4, !tbaa !6
  %4900 = getelementptr inbounds i32, ptr %12, i64 %4897
  %4901 = load i32, ptr %4900, align 4, !tbaa !6
  %4902 = add nsw i32 %4901, -1
  %4903 = icmp slt i32 %4899, %4902
  br i1 %4903, label %4904, label %4922

4904:                                             ; preds = %4896
  br i1 %4891, label %4914, label %4905

4905:                                             ; preds = %4904
  %4906 = shl i64 %4897, 32
  %4907 = add i64 %4906, -4294967296
  %4908 = ashr exact i64 %4907, 32
  %4909 = getelementptr inbounds i32, ptr %7, i64 %4908
  %4910 = load i32, ptr %4909, align 4, !tbaa !6
  %4911 = getelementptr inbounds i32, ptr %6, i64 %4897
  %4912 = load i32, ptr %4911, align 4, !tbaa !6
  %4913 = add nsw i32 %4912, %4910
  store i32 %4913, ptr %4911, align 4, !tbaa !6
  br label %4932

4914:                                             ; preds = %4887, %4904
  %4915 = phi i32 [ %4899, %4904 ], [ %4888, %4887 ]
  %4916 = phi ptr [ %4898, %4904 ], [ %4, %4887 ]
  %4917 = phi i64 [ %4897, %4904 ], [ 0, %4887 ]
  %4918 = add nsw i32 %4915, 1
  store i32 %4918, ptr %4916, align 4, !tbaa !6
  %4919 = getelementptr inbounds i32, ptr %7, i64 %4917
  %4920 = load i32, ptr %4919, align 4, !tbaa !6
  %4921 = getelementptr inbounds i32, ptr %6, i64 %4917
  br label %4932

4922:                                             ; preds = %4896
  %4923 = icmp eq i32 %4899, %4902
  br i1 %4923, label %4924, label %4930

4924:                                             ; preds = %4922
  store i32 0, ptr %4898, align 4, !tbaa !6
  %4925 = getelementptr inbounds i32, ptr %8, i64 %4897
  %4926 = load i32, ptr %4925, align 4, !tbaa !6
  %4927 = getelementptr inbounds i32, ptr %6, i64 %4897
  store i32 %4926, ptr %4927, align 4, !tbaa !6
  %4928 = add nuw nsw i64 %4897, 1
  %4929 = icmp eq i64 %4928, %4654
  br i1 %4929, label %4937, label %4896, !llvm.loop !923

4930:                                             ; preds = %4892, %4922
  %4931 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

4932:                                             ; preds = %4905, %4914
  %4933 = phi ptr [ %4921, %4914 ], [ %4898, %4905 ]
  %4934 = phi i32 [ %4920, %4914 ], [ 1, %4905 ]
  %4935 = load i32, ptr %4933, align 4, !tbaa !6
  %4936 = add nsw i32 %4935, %4934
  store i32 %4936, ptr %4933, align 4, !tbaa !6
  br label %4937

4937:                                             ; preds = %4924, %4932, %4894, %4878
  %4938 = icmp eq i32 %4886, %5
  br i1 %4938, label %5556, label %4800, !llvm.loop !924

4939:                                             ; preds = %4337
  %4940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1468, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

4941:                                             ; preds = %18
  %4942 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4943 = load ptr, ptr %4942, align 8, !tbaa !10
  %4944 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4945 = load ptr, ptr %4944, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4945, align 8, !tbaa !19
  %4946 = icmp eq i32 %13, 0
  br i1 %4946, label %4947, label %4952

4947:                                             ; preds = %4941
  %4948 = load i64, ptr %4943, align 8, !tbaa !121
  %4949 = sitofp i64 %4948 to double
  %4950 = fmul fast double %4949, %4949
  %4951 = fmul fast double %4950, %4950
  store double %4951, ptr %4945, align 8, !tbaa !19
  br label %5556

4952:                                             ; preds = %4941
  switch i32 %1, label %5548 [
    i32 1, label %4953
    i32 0, label %5252
  ]

4953:                                             ; preds = %4952
  %4954 = getelementptr inbounds i32, ptr %3, i64 %19
  %4955 = load i32, ptr %4954, align 4, !tbaa !6
  %4956 = icmp eq i32 %4955, 0
  %4957 = icmp sgt i32 %5, 0
  br i1 %4956, label %4967, label %4958

4958:                                             ; preds = %4953
  br i1 %4957, label %4959, label %5556

4959:                                             ; preds = %4958
  %4960 = icmp sgt i32 %13, 1
  %4961 = icmp sgt i32 %13, 0
  %4962 = add i32 %13, -2
  %4963 = zext i32 %4962 to i64
  %4964 = zext i32 %13 to i64
  %4965 = add nuw i32 %5, 1
  %4966 = icmp eq i32 %13, 1
  br label %5113

4967:                                             ; preds = %4953
  br i1 %4957, label %4968, label %5556

4968:                                             ; preds = %4967
  %4969 = icmp sgt i32 %13, 1
  %4970 = icmp sgt i32 %13, 0
  %4971 = add i32 %13, -2
  %4972 = zext i32 %4971 to i64
  %4973 = zext i32 %13 to i64
  %4974 = add nuw i32 %5, 1
  %4975 = icmp eq i32 %13, 1
  br label %4976

4976:                                             ; preds = %4968, %5111
  %4977 = phi double [ 0.000000e+00, %4968 ], [ %5061, %5111 ]
  %4978 = phi i32 [ 0, %4968 ], [ %5063, %5111 ]
  %4979 = phi double [ 0.000000e+00, %4968 ], [ %5062, %5111 ]
  %4980 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4969, label %4981, label %5050

4981:                                             ; preds = %4976, %5040
  %4982 = phi i32 [ %5049, %5040 ], [ 0, %4976 ]
  %4983 = phi i64 [ %4991, %5040 ], [ %4973, %4976 ]
  %4984 = phi i64 [ %5048, %5040 ], [ %4972, %4976 ]
  %4985 = phi i32 [ %5046, %5040 ], [ %4980, %4976 ]
  %4986 = sub i32 %4971, %4982
  %4987 = tail call i32 @llvm.smin.i32(i32 %4986, i32 0)
  %4988 = sub i32 %4986, %4987
  %4989 = zext i32 %4988 to i64
  %4990 = add nuw nsw i64 %4989, 1
  %4991 = add nsw i64 %4983, -1
  %4992 = icmp ult i32 %4988, 31
  br i1 %4992, label %5028, label %4993

4993:                                             ; preds = %4981
  %4994 = and i64 %4990, 8589934560
  %4995 = sub i64 %4984, %4994
  br label %4996

4996:                                             ; preds = %4996, %4993
  %4997 = phi i64 [ 0, %4993 ], [ %5020, %4996 ]
  %4998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4993 ], [ %5016, %4996 ]
  %4999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4993 ], [ %5017, %4996 ]
  %5000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4993 ], [ %5018, %4996 ]
  %5001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4993 ], [ %5019, %4996 ]
  %5002 = sub i64 %4984, %4997
  %5003 = getelementptr inbounds i32, ptr %9, i64 %5002
  %5004 = getelementptr inbounds i32, ptr %5003, i64 -7
  %5005 = load <8 x i32>, ptr %5004, align 4, !tbaa !6
  %5006 = shufflevector <8 x i32> %5005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5007 = getelementptr inbounds i32, ptr %5003, i64 -15
  %5008 = load <8 x i32>, ptr %5007, align 4, !tbaa !6
  %5009 = shufflevector <8 x i32> %5008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5010 = getelementptr inbounds i32, ptr %5003, i64 -23
  %5011 = load <8 x i32>, ptr %5010, align 4, !tbaa !6
  %5012 = shufflevector <8 x i32> %5011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5013 = getelementptr inbounds i32, ptr %5003, i64 -31
  %5014 = load <8 x i32>, ptr %5013, align 4, !tbaa !6
  %5015 = shufflevector <8 x i32> %5014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5016 = mul <8 x i32> %5006, %4998
  %5017 = mul <8 x i32> %5009, %4999
  %5018 = mul <8 x i32> %5012, %5000
  %5019 = mul <8 x i32> %5015, %5001
  %5020 = add nuw i64 %4997, 32
  %5021 = icmp eq i64 %5020, %4994
  br i1 %5021, label %5022, label %4996, !llvm.loop !925

5022:                                             ; preds = %4996
  %5023 = mul <8 x i32> %5017, %5016
  %5024 = mul <8 x i32> %5018, %5023
  %5025 = mul <8 x i32> %5019, %5024
  %5026 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5025)
  %5027 = icmp eq i64 %4990, %4994
  br i1 %5027, label %5040, label %5028

5028:                                             ; preds = %4981, %5022
  %5029 = phi i64 [ %4984, %4981 ], [ %4995, %5022 ]
  %5030 = phi i32 [ 1, %4981 ], [ %5026, %5022 ]
  br label %5031

5031:                                             ; preds = %5028, %5031
  %5032 = phi i64 [ %5037, %5031 ], [ %5029, %5028 ]
  %5033 = phi i32 [ %5036, %5031 ], [ %5030, %5028 ]
  %5034 = getelementptr inbounds i32, ptr %9, i64 %5032
  %5035 = load i32, ptr %5034, align 4, !tbaa !6
  %5036 = mul nsw i32 %5035, %5033
  %5037 = add nsw i64 %5032, -1
  %5038 = trunc i64 %5032 to i32
  %5039 = icmp sgt i32 %5038, 0
  br i1 %5039, label %5031, label %5040, !llvm.loop !926

5040:                                             ; preds = %5031, %5022
  %5041 = phi i32 [ %5026, %5022 ], [ %5036, %5031 ]
  %5042 = and i64 %4991, 4294967295
  %5043 = getelementptr inbounds i32, ptr %6, i64 %5042
  %5044 = load i32, ptr %5043, align 4, !tbaa !6
  %5045 = mul nsw i32 %5044, %5041
  %5046 = add nsw i32 %5045, %4985
  %5047 = icmp sgt i64 %4983, 2
  %5048 = add nsw i64 %4984, -1
  %5049 = add i32 %4982, 1
  br i1 %5047, label %4981, label %5050, !llvm.loop !927

5050:                                             ; preds = %5040, %4976
  %5051 = phi i32 [ %4980, %4976 ], [ %5046, %5040 ]
  %5052 = sext i32 %5051 to i64
  %5053 = getelementptr inbounds double, ptr %2, i64 %5052
  %5054 = load double, ptr %5053, align 8, !tbaa !19
  %5055 = getelementptr inbounds i64, ptr %4943, i64 %5052
  %5056 = load i64, ptr %5055, align 8, !tbaa !121
  %5057 = sitofp i64 %5056 to double
  %5058 = fmul fast double %5054, %5057
  %5059 = fmul fast double %5058, %5058
  %5060 = fmul fast double %5059, %5059
  %5061 = fadd fast double %5060, %4977
  store double %5061, ptr %4945, align 8, !tbaa !19
  %5062 = fadd fast double %5054, %4979
  %5063 = add nuw nsw i32 %4978, 1
  br i1 %4970, label %5064, label %5111

5064:                                             ; preds = %5050
  %5065 = load i32, ptr %4, align 4, !tbaa !6
  %5066 = load i32, ptr %12, align 4, !tbaa !6
  %5067 = add nsw i32 %5066, -1
  %5068 = icmp slt i32 %5065, %5067
  br i1 %5068, label %5088, label %5069

5069:                                             ; preds = %5064
  %5070 = icmp eq i32 %5065, %5067
  br i1 %5070, label %5071, label %5104

5071:                                             ; preds = %5069
  store i32 0, ptr %4, align 4, !tbaa !6
  %5072 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5072, ptr %6, align 4, !tbaa !6
  br i1 %4975, label %5111, label %5073

5073:                                             ; preds = %5071, %5098
  %5074 = phi i64 [ %5102, %5098 ], [ 1, %5071 ]
  %5075 = getelementptr inbounds i32, ptr %4, i64 %5074
  %5076 = load i32, ptr %5075, align 4, !tbaa !6
  %5077 = getelementptr inbounds i32, ptr %12, i64 %5074
  %5078 = load i32, ptr %5077, align 4, !tbaa !6
  %5079 = add nsw i32 %5078, -1
  %5080 = icmp slt i32 %5076, %5079
  br i1 %5080, label %5081, label %5096

5081:                                             ; preds = %5073
  br i1 %5068, label %5088, label %5082

5082:                                             ; preds = %5081
  %5083 = getelementptr inbounds i32, ptr %7, i64 %5074
  %5084 = load i32, ptr %5083, align 4, !tbaa !6
  %5085 = getelementptr inbounds i32, ptr %6, i64 %5074
  %5086 = load i32, ptr %5085, align 4, !tbaa !6
  %5087 = add nsw i32 %5086, %5084
  store i32 %5087, ptr %5085, align 4, !tbaa !6
  br label %5106

5088:                                             ; preds = %5064, %5081
  %5089 = phi i32 [ %5076, %5081 ], [ %5065, %5064 ]
  %5090 = phi ptr [ %5075, %5081 ], [ %4, %5064 ]
  %5091 = phi i64 [ %5074, %5081 ], [ 0, %5064 ]
  %5092 = add nsw i32 %5089, 1
  store i32 %5092, ptr %5090, align 4, !tbaa !6
  %5093 = getelementptr inbounds i32, ptr %7, i64 %5091
  %5094 = load i32, ptr %5093, align 4, !tbaa !6
  %5095 = getelementptr inbounds i32, ptr %6, i64 %5091
  br label %5106

5096:                                             ; preds = %5073
  %5097 = icmp eq i32 %5076, %5079
  br i1 %5097, label %5098, label %5104

5098:                                             ; preds = %5096
  store i32 0, ptr %5075, align 4, !tbaa !6
  %5099 = getelementptr inbounds i32, ptr %8, i64 %5074
  %5100 = load i32, ptr %5099, align 4, !tbaa !6
  %5101 = getelementptr inbounds i32, ptr %6, i64 %5074
  store i32 %5100, ptr %5101, align 4, !tbaa !6
  %5102 = add nuw nsw i64 %5074, 1
  %5103 = icmp eq i64 %5102, %4973
  br i1 %5103, label %5111, label %5073, !llvm.loop !928

5104:                                             ; preds = %5069, %5096
  %5105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

5106:                                             ; preds = %5082, %5088
  %5107 = phi ptr [ %5095, %5088 ], [ %5075, %5082 ]
  %5108 = phi i32 [ %5094, %5088 ], [ 1, %5082 ]
  %5109 = load i32, ptr %5107, align 4, !tbaa !6
  %5110 = add nsw i32 %5109, %5108
  store i32 %5110, ptr %5107, align 4, !tbaa !6
  br label %5111

5111:                                             ; preds = %5098, %5106, %5071, %5050
  %5112 = icmp eq i32 %5063, %5
  br i1 %5112, label %5556, label %4976, !llvm.loop !929

5113:                                             ; preds = %4959, %5250
  %5114 = phi double [ 0.000000e+00, %4959 ], [ %5198, %5250 ]
  %5115 = phi i32 [ 0, %4959 ], [ %5199, %5250 ]
  %5116 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4960, label %5117, label %5186

5117:                                             ; preds = %5113, %5176
  %5118 = phi i32 [ %5185, %5176 ], [ 0, %5113 ]
  %5119 = phi i64 [ %5127, %5176 ], [ %4964, %5113 ]
  %5120 = phi i64 [ %5184, %5176 ], [ %4963, %5113 ]
  %5121 = phi i32 [ %5182, %5176 ], [ %5116, %5113 ]
  %5122 = sub i32 %4962, %5118
  %5123 = tail call i32 @llvm.smin.i32(i32 %5122, i32 0)
  %5124 = sub i32 %5122, %5123
  %5125 = zext i32 %5124 to i64
  %5126 = add nuw nsw i64 %5125, 1
  %5127 = add nsw i64 %5119, -1
  %5128 = icmp ult i32 %5124, 31
  br i1 %5128, label %5164, label %5129

5129:                                             ; preds = %5117
  %5130 = and i64 %5126, 8589934560
  %5131 = sub i64 %5120, %5130
  br label %5132

5132:                                             ; preds = %5132, %5129
  %5133 = phi i64 [ 0, %5129 ], [ %5156, %5132 ]
  %5134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5129 ], [ %5152, %5132 ]
  %5135 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5129 ], [ %5153, %5132 ]
  %5136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5129 ], [ %5154, %5132 ]
  %5137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5129 ], [ %5155, %5132 ]
  %5138 = sub i64 %5120, %5133
  %5139 = getelementptr inbounds i32, ptr %11, i64 %5138
  %5140 = getelementptr inbounds i32, ptr %5139, i64 -7
  %5141 = load <8 x i32>, ptr %5140, align 4, !tbaa !6
  %5142 = shufflevector <8 x i32> %5141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5143 = getelementptr inbounds i32, ptr %5139, i64 -15
  %5144 = load <8 x i32>, ptr %5143, align 4, !tbaa !6
  %5145 = shufflevector <8 x i32> %5144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5146 = getelementptr inbounds i32, ptr %5139, i64 -23
  %5147 = load <8 x i32>, ptr %5146, align 4, !tbaa !6
  %5148 = shufflevector <8 x i32> %5147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5149 = getelementptr inbounds i32, ptr %5139, i64 -31
  %5150 = load <8 x i32>, ptr %5149, align 4, !tbaa !6
  %5151 = shufflevector <8 x i32> %5150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5152 = mul <8 x i32> %5142, %5134
  %5153 = mul <8 x i32> %5145, %5135
  %5154 = mul <8 x i32> %5148, %5136
  %5155 = mul <8 x i32> %5151, %5137
  %5156 = add nuw i64 %5133, 32
  %5157 = icmp eq i64 %5156, %5130
  br i1 %5157, label %5158, label %5132, !llvm.loop !930

5158:                                             ; preds = %5132
  %5159 = mul <8 x i32> %5153, %5152
  %5160 = mul <8 x i32> %5154, %5159
  %5161 = mul <8 x i32> %5155, %5160
  %5162 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5161)
  %5163 = icmp eq i64 %5126, %5130
  br i1 %5163, label %5176, label %5164

5164:                                             ; preds = %5117, %5158
  %5165 = phi i64 [ %5120, %5117 ], [ %5131, %5158 ]
  %5166 = phi i32 [ 1, %5117 ], [ %5162, %5158 ]
  br label %5167

5167:                                             ; preds = %5164, %5167
  %5168 = phi i64 [ %5173, %5167 ], [ %5165, %5164 ]
  %5169 = phi i32 [ %5172, %5167 ], [ %5166, %5164 ]
  %5170 = getelementptr inbounds i32, ptr %11, i64 %5168
  %5171 = load i32, ptr %5170, align 4, !tbaa !6
  %5172 = mul nsw i32 %5171, %5169
  %5173 = add nsw i64 %5168, -1
  %5174 = trunc i64 %5168 to i32
  %5175 = icmp sgt i32 %5174, 0
  br i1 %5175, label %5167, label %5176, !llvm.loop !931

5176:                                             ; preds = %5167, %5158
  %5177 = phi i32 [ %5162, %5158 ], [ %5172, %5167 ]
  %5178 = and i64 %5127, 4294967295
  %5179 = getelementptr inbounds i32, ptr %6, i64 %5178
  %5180 = load i32, ptr %5179, align 4, !tbaa !6
  %5181 = mul nsw i32 %5180, %5177
  %5182 = add nsw i32 %5181, %5121
  %5183 = icmp sgt i64 %5119, 2
  %5184 = add nsw i64 %5120, -1
  %5185 = add i32 %5118, 1
  br i1 %5183, label %5117, label %5186, !llvm.loop !932

5186:                                             ; preds = %5176, %5113
  %5187 = phi i32 [ %5116, %5113 ], [ %5182, %5176 ]
  %5188 = icmp slt i32 %5187, %5
  br i1 %5188, label %5191, label %5189

5189:                                             ; preds = %5186
  %5190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

5191:                                             ; preds = %5186
  %5192 = sext i32 %5187 to i64
  %5193 = getelementptr inbounds i64, ptr %4943, i64 %5192
  %5194 = load i64, ptr %5193, align 8, !tbaa !121
  %5195 = sitofp i64 %5194 to double
  %5196 = fmul fast double %5195, %5195
  %5197 = fmul fast double %5196, %5196
  %5198 = fadd fast double %5197, %5114
  store double %5198, ptr %4945, align 8, !tbaa !19
  %5199 = add nuw nsw i32 %5115, 1
  br i1 %4961, label %5200, label %5250

5200:                                             ; preds = %5191
  %5201 = load i32, ptr %4, align 4, !tbaa !6
  %5202 = load i32, ptr %12, align 4, !tbaa !6
  %5203 = add nsw i32 %5202, -1
  %5204 = icmp slt i32 %5201, %5203
  br i1 %5204, label %5227, label %5205

5205:                                             ; preds = %5200
  %5206 = icmp eq i32 %5201, %5203
  br i1 %5206, label %5207, label %5243

5207:                                             ; preds = %5205
  store i32 0, ptr %4, align 4, !tbaa !6
  %5208 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5208, ptr %6, align 4, !tbaa !6
  br i1 %4966, label %5250, label %5209

5209:                                             ; preds = %5207, %5237
  %5210 = phi i64 [ %5241, %5237 ], [ 1, %5207 ]
  %5211 = getelementptr inbounds i32, ptr %4, i64 %5210
  %5212 = load i32, ptr %5211, align 4, !tbaa !6
  %5213 = getelementptr inbounds i32, ptr %12, i64 %5210
  %5214 = load i32, ptr %5213, align 4, !tbaa !6
  %5215 = add nsw i32 %5214, -1
  %5216 = icmp slt i32 %5212, %5215
  br i1 %5216, label %5217, label %5235

5217:                                             ; preds = %5209
  br i1 %5204, label %5227, label %5218

5218:                                             ; preds = %5217
  %5219 = shl i64 %5210, 32
  %5220 = add i64 %5219, -4294967296
  %5221 = ashr exact i64 %5220, 32
  %5222 = getelementptr inbounds i32, ptr %7, i64 %5221
  %5223 = load i32, ptr %5222, align 4, !tbaa !6
  %5224 = getelementptr inbounds i32, ptr %6, i64 %5210
  %5225 = load i32, ptr %5224, align 4, !tbaa !6
  %5226 = add nsw i32 %5225, %5223
  store i32 %5226, ptr %5224, align 4, !tbaa !6
  br label %5245

5227:                                             ; preds = %5200, %5217
  %5228 = phi i32 [ %5212, %5217 ], [ %5201, %5200 ]
  %5229 = phi ptr [ %5211, %5217 ], [ %4, %5200 ]
  %5230 = phi i64 [ %5210, %5217 ], [ 0, %5200 ]
  %5231 = add nsw i32 %5228, 1
  store i32 %5231, ptr %5229, align 4, !tbaa !6
  %5232 = getelementptr inbounds i32, ptr %7, i64 %5230
  %5233 = load i32, ptr %5232, align 4, !tbaa !6
  %5234 = getelementptr inbounds i32, ptr %6, i64 %5230
  br label %5245

5235:                                             ; preds = %5209
  %5236 = icmp eq i32 %5212, %5215
  br i1 %5236, label %5237, label %5243

5237:                                             ; preds = %5235
  store i32 0, ptr %5211, align 4, !tbaa !6
  %5238 = getelementptr inbounds i32, ptr %8, i64 %5210
  %5239 = load i32, ptr %5238, align 4, !tbaa !6
  %5240 = getelementptr inbounds i32, ptr %6, i64 %5210
  store i32 %5239, ptr %5240, align 4, !tbaa !6
  %5241 = add nuw nsw i64 %5210, 1
  %5242 = icmp eq i64 %5241, %4964
  br i1 %5242, label %5250, label %5209, !llvm.loop !933

5243:                                             ; preds = %5205, %5235
  %5244 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

5245:                                             ; preds = %5218, %5227
  %5246 = phi ptr [ %5234, %5227 ], [ %5211, %5218 ]
  %5247 = phi i32 [ %5233, %5227 ], [ 1, %5218 ]
  %5248 = load i32, ptr %5246, align 4, !tbaa !6
  %5249 = add nsw i32 %5248, %5247
  store i32 %5249, ptr %5246, align 4, !tbaa !6
  br label %5250

5250:                                             ; preds = %5237, %5245, %5207, %5191
  %5251 = icmp eq i32 %5199, %5
  br i1 %5251, label %5556, label %5113, !llvm.loop !934

5252:                                             ; preds = %4952
  %5253 = getelementptr inbounds i32, ptr %3, i64 %19
  %5254 = load i32, ptr %5253, align 4, !tbaa !6
  %5255 = icmp eq i32 %5254, 0
  %5256 = icmp sgt i32 %5, 0
  br i1 %5255, label %5266, label %5257

5257:                                             ; preds = %5252
  br i1 %5256, label %5258, label %5556

5258:                                             ; preds = %5257
  %5259 = icmp sgt i32 %13, 1
  %5260 = icmp sgt i32 %13, 0
  %5261 = add i32 %13, -2
  %5262 = zext i32 %5261 to i64
  %5263 = zext i32 %13 to i64
  %5264 = add nuw i32 %5, 1
  %5265 = icmp eq i32 %13, 1
  br label %5409

5266:                                             ; preds = %5252
  br i1 %5256, label %5267, label %5556

5267:                                             ; preds = %5266
  %5268 = icmp sgt i32 %13, 1
  %5269 = icmp sgt i32 %13, 0
  %5270 = add i32 %13, -2
  %5271 = zext i32 %5270 to i64
  %5272 = zext i32 %13 to i64
  %5273 = add nuw i32 %5, 1
  %5274 = icmp eq i32 %13, 1
  br label %5275

5275:                                             ; preds = %5267, %5407
  %5276 = phi double [ 0.000000e+00, %5267 ], [ %5357, %5407 ]
  %5277 = phi i32 [ 0, %5267 ], [ %5359, %5407 ]
  %5278 = phi double [ 0.000000e+00, %5267 ], [ %5358, %5407 ]
  %5279 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5268, label %5280, label %5349

5280:                                             ; preds = %5275, %5339
  %5281 = phi i32 [ %5348, %5339 ], [ 0, %5275 ]
  %5282 = phi i64 [ %5290, %5339 ], [ %5272, %5275 ]
  %5283 = phi i64 [ %5347, %5339 ], [ %5271, %5275 ]
  %5284 = phi i32 [ %5345, %5339 ], [ %5279, %5275 ]
  %5285 = sub i32 %5270, %5281
  %5286 = tail call i32 @llvm.smin.i32(i32 %5285, i32 0)
  %5287 = sub i32 %5285, %5286
  %5288 = zext i32 %5287 to i64
  %5289 = add nuw nsw i64 %5288, 1
  %5290 = add nsw i64 %5282, -1
  %5291 = icmp ult i32 %5287, 31
  br i1 %5291, label %5327, label %5292

5292:                                             ; preds = %5280
  %5293 = and i64 %5289, 8589934560
  %5294 = sub i64 %5283, %5293
  br label %5295

5295:                                             ; preds = %5295, %5292
  %5296 = phi i64 [ 0, %5292 ], [ %5319, %5295 ]
  %5297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5292 ], [ %5315, %5295 ]
  %5298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5292 ], [ %5316, %5295 ]
  %5299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5292 ], [ %5317, %5295 ]
  %5300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5292 ], [ %5318, %5295 ]
  %5301 = sub i64 %5283, %5296
  %5302 = getelementptr inbounds i32, ptr %9, i64 %5301
  %5303 = getelementptr inbounds i32, ptr %5302, i64 -7
  %5304 = load <8 x i32>, ptr %5303, align 4, !tbaa !6
  %5305 = shufflevector <8 x i32> %5304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5306 = getelementptr inbounds i32, ptr %5302, i64 -15
  %5307 = load <8 x i32>, ptr %5306, align 4, !tbaa !6
  %5308 = shufflevector <8 x i32> %5307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5309 = getelementptr inbounds i32, ptr %5302, i64 -23
  %5310 = load <8 x i32>, ptr %5309, align 4, !tbaa !6
  %5311 = shufflevector <8 x i32> %5310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5312 = getelementptr inbounds i32, ptr %5302, i64 -31
  %5313 = load <8 x i32>, ptr %5312, align 4, !tbaa !6
  %5314 = shufflevector <8 x i32> %5313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5315 = mul <8 x i32> %5305, %5297
  %5316 = mul <8 x i32> %5308, %5298
  %5317 = mul <8 x i32> %5311, %5299
  %5318 = mul <8 x i32> %5314, %5300
  %5319 = add nuw i64 %5296, 32
  %5320 = icmp eq i64 %5319, %5293
  br i1 %5320, label %5321, label %5295, !llvm.loop !935

5321:                                             ; preds = %5295
  %5322 = mul <8 x i32> %5316, %5315
  %5323 = mul <8 x i32> %5317, %5322
  %5324 = mul <8 x i32> %5318, %5323
  %5325 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5324)
  %5326 = icmp eq i64 %5289, %5293
  br i1 %5326, label %5339, label %5327

5327:                                             ; preds = %5280, %5321
  %5328 = phi i64 [ %5283, %5280 ], [ %5294, %5321 ]
  %5329 = phi i32 [ 1, %5280 ], [ %5325, %5321 ]
  br label %5330

5330:                                             ; preds = %5327, %5330
  %5331 = phi i64 [ %5336, %5330 ], [ %5328, %5327 ]
  %5332 = phi i32 [ %5335, %5330 ], [ %5329, %5327 ]
  %5333 = getelementptr inbounds i32, ptr %9, i64 %5331
  %5334 = load i32, ptr %5333, align 4, !tbaa !6
  %5335 = mul nsw i32 %5334, %5332
  %5336 = add nsw i64 %5331, -1
  %5337 = trunc i64 %5331 to i32
  %5338 = icmp sgt i32 %5337, 0
  br i1 %5338, label %5330, label %5339, !llvm.loop !936

5339:                                             ; preds = %5330, %5321
  %5340 = phi i32 [ %5325, %5321 ], [ %5335, %5330 ]
  %5341 = and i64 %5290, 4294967295
  %5342 = getelementptr inbounds i32, ptr %6, i64 %5341
  %5343 = load i32, ptr %5342, align 4, !tbaa !6
  %5344 = mul nsw i32 %5343, %5340
  %5345 = add nsw i32 %5344, %5284
  %5346 = icmp sgt i64 %5282, 2
  %5347 = add nsw i64 %5283, -1
  %5348 = add i32 %5281, 1
  br i1 %5346, label %5280, label %5349, !llvm.loop !937

5349:                                             ; preds = %5339, %5275
  %5350 = phi i32 [ %5279, %5275 ], [ %5345, %5339 ]
  %5351 = sext i32 %5350 to i64
  %5352 = getelementptr inbounds i64, ptr %4943, i64 %5351
  %5353 = load i64, ptr %5352, align 8, !tbaa !121
  %5354 = sitofp i64 %5353 to double
  %5355 = fmul fast double %5354, %5354
  %5356 = fmul fast double %5355, %5355
  %5357 = fadd fast double %5356, %5276
  %5358 = fadd fast double %5278, 1.000000e+00
  %5359 = add nuw nsw i32 %5277, 1
  br i1 %5269, label %5360, label %5407

5360:                                             ; preds = %5349
  %5361 = load i32, ptr %4, align 4, !tbaa !6
  %5362 = load i32, ptr %12, align 4, !tbaa !6
  %5363 = add nsw i32 %5362, -1
  %5364 = icmp slt i32 %5361, %5363
  br i1 %5364, label %5384, label %5365

5365:                                             ; preds = %5360
  %5366 = icmp eq i32 %5361, %5363
  br i1 %5366, label %5367, label %5400

5367:                                             ; preds = %5365
  store i32 0, ptr %4, align 4, !tbaa !6
  %5368 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5368, ptr %6, align 4, !tbaa !6
  br i1 %5274, label %5407, label %5369

5369:                                             ; preds = %5367, %5394
  %5370 = phi i64 [ %5398, %5394 ], [ 1, %5367 ]
  %5371 = getelementptr inbounds i32, ptr %4, i64 %5370
  %5372 = load i32, ptr %5371, align 4, !tbaa !6
  %5373 = getelementptr inbounds i32, ptr %12, i64 %5370
  %5374 = load i32, ptr %5373, align 4, !tbaa !6
  %5375 = add nsw i32 %5374, -1
  %5376 = icmp slt i32 %5372, %5375
  br i1 %5376, label %5377, label %5392

5377:                                             ; preds = %5369
  br i1 %5364, label %5384, label %5378

5378:                                             ; preds = %5377
  %5379 = getelementptr inbounds i32, ptr %7, i64 %5370
  %5380 = load i32, ptr %5379, align 4, !tbaa !6
  %5381 = getelementptr inbounds i32, ptr %6, i64 %5370
  %5382 = load i32, ptr %5381, align 4, !tbaa !6
  %5383 = add nsw i32 %5382, %5380
  store i32 %5383, ptr %5381, align 4, !tbaa !6
  br label %5402

5384:                                             ; preds = %5360, %5377
  %5385 = phi i32 [ %5372, %5377 ], [ %5361, %5360 ]
  %5386 = phi ptr [ %5371, %5377 ], [ %4, %5360 ]
  %5387 = phi i64 [ %5370, %5377 ], [ 0, %5360 ]
  %5388 = add nsw i32 %5385, 1
  store i32 %5388, ptr %5386, align 4, !tbaa !6
  %5389 = getelementptr inbounds i32, ptr %7, i64 %5387
  %5390 = load i32, ptr %5389, align 4, !tbaa !6
  %5391 = getelementptr inbounds i32, ptr %6, i64 %5387
  br label %5402

5392:                                             ; preds = %5369
  %5393 = icmp eq i32 %5372, %5375
  br i1 %5393, label %5394, label %5400

5394:                                             ; preds = %5392
  store i32 0, ptr %5371, align 4, !tbaa !6
  %5395 = getelementptr inbounds i32, ptr %8, i64 %5370
  %5396 = load i32, ptr %5395, align 4, !tbaa !6
  %5397 = getelementptr inbounds i32, ptr %6, i64 %5370
  store i32 %5396, ptr %5397, align 4, !tbaa !6
  %5398 = add nuw nsw i64 %5370, 1
  %5399 = icmp eq i64 %5398, %5272
  br i1 %5399, label %5407, label %5369, !llvm.loop !938

5400:                                             ; preds = %5365, %5392
  store double %5357, ptr %4945, align 8, !tbaa !19
  %5401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

5402:                                             ; preds = %5378, %5384
  %5403 = phi ptr [ %5391, %5384 ], [ %5371, %5378 ]
  %5404 = phi i32 [ %5390, %5384 ], [ 1, %5378 ]
  %5405 = load i32, ptr %5403, align 4, !tbaa !6
  %5406 = add nsw i32 %5405, %5404
  store i32 %5406, ptr %5403, align 4, !tbaa !6
  br label %5407

5407:                                             ; preds = %5394, %5402, %5367, %5349
  %5408 = icmp eq i32 %5359, %5
  br i1 %5408, label %5555, label %5275, !llvm.loop !939

5409:                                             ; preds = %5258, %5546
  %5410 = phi double [ 0.000000e+00, %5258 ], [ %5494, %5546 ]
  %5411 = phi i32 [ 0, %5258 ], [ %5495, %5546 ]
  %5412 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5259, label %5413, label %5482

5413:                                             ; preds = %5409, %5472
  %5414 = phi i32 [ %5481, %5472 ], [ 0, %5409 ]
  %5415 = phi i64 [ %5423, %5472 ], [ %5263, %5409 ]
  %5416 = phi i64 [ %5480, %5472 ], [ %5262, %5409 ]
  %5417 = phi i32 [ %5478, %5472 ], [ %5412, %5409 ]
  %5418 = sub i32 %5261, %5414
  %5419 = tail call i32 @llvm.smin.i32(i32 %5418, i32 0)
  %5420 = sub i32 %5418, %5419
  %5421 = zext i32 %5420 to i64
  %5422 = add nuw nsw i64 %5421, 1
  %5423 = add nsw i64 %5415, -1
  %5424 = icmp ult i32 %5420, 31
  br i1 %5424, label %5460, label %5425

5425:                                             ; preds = %5413
  %5426 = and i64 %5422, 8589934560
  %5427 = sub i64 %5416, %5426
  br label %5428

5428:                                             ; preds = %5428, %5425
  %5429 = phi i64 [ 0, %5425 ], [ %5452, %5428 ]
  %5430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5425 ], [ %5448, %5428 ]
  %5431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5425 ], [ %5449, %5428 ]
  %5432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5425 ], [ %5450, %5428 ]
  %5433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5425 ], [ %5451, %5428 ]
  %5434 = sub i64 %5416, %5429
  %5435 = getelementptr inbounds i32, ptr %11, i64 %5434
  %5436 = getelementptr inbounds i32, ptr %5435, i64 -7
  %5437 = load <8 x i32>, ptr %5436, align 4, !tbaa !6
  %5438 = shufflevector <8 x i32> %5437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5439 = getelementptr inbounds i32, ptr %5435, i64 -15
  %5440 = load <8 x i32>, ptr %5439, align 4, !tbaa !6
  %5441 = shufflevector <8 x i32> %5440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5442 = getelementptr inbounds i32, ptr %5435, i64 -23
  %5443 = load <8 x i32>, ptr %5442, align 4, !tbaa !6
  %5444 = shufflevector <8 x i32> %5443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5445 = getelementptr inbounds i32, ptr %5435, i64 -31
  %5446 = load <8 x i32>, ptr %5445, align 4, !tbaa !6
  %5447 = shufflevector <8 x i32> %5446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5448 = mul <8 x i32> %5438, %5430
  %5449 = mul <8 x i32> %5441, %5431
  %5450 = mul <8 x i32> %5444, %5432
  %5451 = mul <8 x i32> %5447, %5433
  %5452 = add nuw i64 %5429, 32
  %5453 = icmp eq i64 %5452, %5426
  br i1 %5453, label %5454, label %5428, !llvm.loop !940

5454:                                             ; preds = %5428
  %5455 = mul <8 x i32> %5449, %5448
  %5456 = mul <8 x i32> %5450, %5455
  %5457 = mul <8 x i32> %5451, %5456
  %5458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5457)
  %5459 = icmp eq i64 %5422, %5426
  br i1 %5459, label %5472, label %5460

5460:                                             ; preds = %5413, %5454
  %5461 = phi i64 [ %5416, %5413 ], [ %5427, %5454 ]
  %5462 = phi i32 [ 1, %5413 ], [ %5458, %5454 ]
  br label %5463

5463:                                             ; preds = %5460, %5463
  %5464 = phi i64 [ %5469, %5463 ], [ %5461, %5460 ]
  %5465 = phi i32 [ %5468, %5463 ], [ %5462, %5460 ]
  %5466 = getelementptr inbounds i32, ptr %11, i64 %5464
  %5467 = load i32, ptr %5466, align 4, !tbaa !6
  %5468 = mul nsw i32 %5467, %5465
  %5469 = add nsw i64 %5464, -1
  %5470 = trunc i64 %5464 to i32
  %5471 = icmp sgt i32 %5470, 0
  br i1 %5471, label %5463, label %5472, !llvm.loop !941

5472:                                             ; preds = %5463, %5454
  %5473 = phi i32 [ %5458, %5454 ], [ %5468, %5463 ]
  %5474 = and i64 %5423, 4294967295
  %5475 = getelementptr inbounds i32, ptr %6, i64 %5474
  %5476 = load i32, ptr %5475, align 4, !tbaa !6
  %5477 = mul nsw i32 %5476, %5473
  %5478 = add nsw i32 %5477, %5417
  %5479 = icmp sgt i64 %5415, 2
  %5480 = add nsw i64 %5416, -1
  %5481 = add i32 %5414, 1
  br i1 %5479, label %5413, label %5482, !llvm.loop !942

5482:                                             ; preds = %5472, %5409
  %5483 = phi i32 [ %5412, %5409 ], [ %5478, %5472 ]
  %5484 = icmp slt i32 %5483, %5
  br i1 %5484, label %5487, label %5485

5485:                                             ; preds = %5482
  %5486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5561

5487:                                             ; preds = %5482
  %5488 = sext i32 %5483 to i64
  %5489 = getelementptr inbounds i64, ptr %4943, i64 %5488
  %5490 = load i64, ptr %5489, align 8, !tbaa !121
  %5491 = sitofp i64 %5490 to double
  %5492 = fmul fast double %5491, %5491
  %5493 = fmul fast double %5492, %5492
  %5494 = fadd fast double %5493, %5410
  store double %5494, ptr %4945, align 8, !tbaa !19
  %5495 = add nuw nsw i32 %5411, 1
  br i1 %5260, label %5496, label %5546

5496:                                             ; preds = %5487
  %5497 = load i32, ptr %4, align 4, !tbaa !6
  %5498 = load i32, ptr %12, align 4, !tbaa !6
  %5499 = add nsw i32 %5498, -1
  %5500 = icmp slt i32 %5497, %5499
  br i1 %5500, label %5523, label %5501

5501:                                             ; preds = %5496
  %5502 = icmp eq i32 %5497, %5499
  br i1 %5502, label %5503, label %5539

5503:                                             ; preds = %5501
  store i32 0, ptr %4, align 4, !tbaa !6
  %5504 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5504, ptr %6, align 4, !tbaa !6
  br i1 %5265, label %5546, label %5505

5505:                                             ; preds = %5503, %5533
  %5506 = phi i64 [ %5537, %5533 ], [ 1, %5503 ]
  %5507 = getelementptr inbounds i32, ptr %4, i64 %5506
  %5508 = load i32, ptr %5507, align 4, !tbaa !6
  %5509 = getelementptr inbounds i32, ptr %12, i64 %5506
  %5510 = load i32, ptr %5509, align 4, !tbaa !6
  %5511 = add nsw i32 %5510, -1
  %5512 = icmp slt i32 %5508, %5511
  br i1 %5512, label %5513, label %5531

5513:                                             ; preds = %5505
  br i1 %5500, label %5523, label %5514

5514:                                             ; preds = %5513
  %5515 = shl i64 %5506, 32
  %5516 = add i64 %5515, -4294967296
  %5517 = ashr exact i64 %5516, 32
  %5518 = getelementptr inbounds i32, ptr %7, i64 %5517
  %5519 = load i32, ptr %5518, align 4, !tbaa !6
  %5520 = getelementptr inbounds i32, ptr %6, i64 %5506
  %5521 = load i32, ptr %5520, align 4, !tbaa !6
  %5522 = add nsw i32 %5521, %5519
  store i32 %5522, ptr %5520, align 4, !tbaa !6
  br label %5541

5523:                                             ; preds = %5496, %5513
  %5524 = phi i32 [ %5508, %5513 ], [ %5497, %5496 ]
  %5525 = phi ptr [ %5507, %5513 ], [ %4, %5496 ]
  %5526 = phi i64 [ %5506, %5513 ], [ 0, %5496 ]
  %5527 = add nsw i32 %5524, 1
  store i32 %5527, ptr %5525, align 4, !tbaa !6
  %5528 = getelementptr inbounds i32, ptr %7, i64 %5526
  %5529 = load i32, ptr %5528, align 4, !tbaa !6
  %5530 = getelementptr inbounds i32, ptr %6, i64 %5526
  br label %5541

5531:                                             ; preds = %5505
  %5532 = icmp eq i32 %5508, %5511
  br i1 %5532, label %5533, label %5539

5533:                                             ; preds = %5531
  store i32 0, ptr %5507, align 4, !tbaa !6
  %5534 = getelementptr inbounds i32, ptr %8, i64 %5506
  %5535 = load i32, ptr %5534, align 4, !tbaa !6
  %5536 = getelementptr inbounds i32, ptr %6, i64 %5506
  store i32 %5535, ptr %5536, align 4, !tbaa !6
  %5537 = add nuw nsw i64 %5506, 1
  %5538 = icmp eq i64 %5537, %5263
  br i1 %5538, label %5546, label %5505, !llvm.loop !943

5539:                                             ; preds = %5501, %5531
  %5540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5561

5541:                                             ; preds = %5514, %5523
  %5542 = phi ptr [ %5530, %5523 ], [ %5507, %5514 ]
  %5543 = phi i32 [ %5529, %5523 ], [ 1, %5514 ]
  %5544 = load i32, ptr %5542, align 4, !tbaa !6
  %5545 = add nsw i32 %5544, %5543
  store i32 %5545, ptr %5542, align 4, !tbaa !6
  br label %5546

5546:                                             ; preds = %5533, %5541, %5503, %5487
  %5547 = icmp eq i32 %5495, %5
  br i1 %5547, label %5556, label %5409, !llvm.loop !944

5548:                                             ; preds = %4952
  %5549 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5556

5550:                                             ; preds = %2048
  store i16 %1998, ptr %1877, align 2, !tbaa !79
  br label %5556

5551:                                             ; preds = %2349
  store i16 %2299, ptr %1877, align 2, !tbaa !79
  br label %5556

5552:                                             ; preds = %4183
  store double %4133, ptr %3721, align 8, !tbaa !19
  br label %5556

5553:                                             ; preds = %4499
  store float %4449, ptr %4330, align 4, !tbaa !163
  br label %5556

5554:                                             ; preds = %4798
  store float %4748, ptr %4330, align 4, !tbaa !163
  br label %5556

5555:                                             ; preds = %5407
  store double %5357, ptr %4945, align 8, !tbaa !19
  br label %5556

5556:                                             ; preds = %5546, %5250, %5111, %4937, %4641, %4322, %4026, %3887, %3713, %3575, %3419, %3278, %3103, %2964, %2807, %2665, %2488, %2192, %1869, %1730, %1573, %1429, %1250, %1111, %954, %812, %635, %496, %339, %196, %5257, %5266, %5555, %4958, %4967, %4648, %4657, %5554, %4343, %4352, %5553, %4033, %4042, %5552, %3734, %3743, %3426, %3435, %3123, %3132, %2814, %2823, %2509, %2518, %2199, %2208, %5551, %1890, %1899, %5550, %1580, %1589, %1271, %1280, %961, %970, %656, %665, %346, %355, %39, %48, %4947, %5548, %4332, %4939, %3723, %4324, %3113, %3715, %2498, %3105, %1879, %2490, %1260, %1871, %645, %1252, %28, %637, %18
  %5557 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %637 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1252 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %2490 ], [ 0.000000e+00, %1879 ], [ 0.000000e+00, %3105 ], [ 0.000000e+00, %2498 ], [ 0.000000e+00, %3715 ], [ 0.000000e+00, %3113 ], [ 0.000000e+00, %4324 ], [ 0.000000e+00, %3723 ], [ 0.000000e+00, %4939 ], [ 0.000000e+00, %4332 ], [ 0.000000e+00, %5548 ], [ 0.000000e+00, %4947 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %355 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %665 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %970 ], [ 0.000000e+00, %961 ], [ 0.000000e+00, %1280 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %1589 ], [ 0.000000e+00, %1580 ], [ %1999, %5550 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ %2300, %5551 ], [ 0.000000e+00, %2208 ], [ 0.000000e+00, %2199 ], [ 0.000000e+00, %2518 ], [ 0.000000e+00, %2509 ], [ 0.000000e+00, %2823 ], [ 0.000000e+00, %2814 ], [ 0.000000e+00, %3132 ], [ 0.000000e+00, %3123 ], [ 0.000000e+00, %3435 ], [ 0.000000e+00, %3426 ], [ 0.000000e+00, %3743 ], [ 0.000000e+00, %3734 ], [ %4134, %5552 ], [ 0.000000e+00, %4042 ], [ 0.000000e+00, %4033 ], [ %4450, %5553 ], [ 0.000000e+00, %4352 ], [ 0.000000e+00, %4343 ], [ %4749, %5554 ], [ 0.000000e+00, %4657 ], [ 0.000000e+00, %4648 ], [ 0.000000e+00, %4967 ], [ 0.000000e+00, %4958 ], [ %5358, %5555 ], [ 0.000000e+00, %5266 ], [ 0.000000e+00, %5257 ], [ %147, %196 ], [ 0.000000e+00, %339 ], [ %447, %496 ], [ 0.000000e+00, %635 ], [ %763, %812 ], [ 0.000000e+00, %954 ], [ %1062, %1111 ], [ 0.000000e+00, %1250 ], [ %1380, %1429 ], [ 0.000000e+00, %1573 ], [ %1681, %1730 ], [ 0.000000e+00, %1869 ], [ 0.000000e+00, %2192 ], [ 0.000000e+00, %2488 ], [ %2616, %2665 ], [ 0.000000e+00, %2807 ], [ %2915, %2964 ], [ 0.000000e+00, %3103 ], [ %3229, %3278 ], [ 0.000000e+00, %3419 ], [ %3526, %3575 ], [ 0.000000e+00, %3713 ], [ %3838, %3887 ], [ 0.000000e+00, %4026 ], [ 0.000000e+00, %4322 ], [ 0.000000e+00, %4641 ], [ 0.000000e+00, %4937 ], [ %5062, %5111 ], [ 0.000000e+00, %5250 ], [ 0.000000e+00, %5546 ]
  %5558 = phi i32 [ %10, %18 ], [ 1, %637 ], [ 1, %28 ], [ 1, %1252 ], [ 1, %645 ], [ 1, %1871 ], [ 1, %1260 ], [ 1, %2490 ], [ 1, %1879 ], [ 1, %3105 ], [ 1, %2498 ], [ 1, %3715 ], [ 1, %3113 ], [ 1, %4324 ], [ 1, %3723 ], [ 1, %4939 ], [ 1, %4332 ], [ 1, %5548 ], [ 1, %4947 ], [ 1, %48 ], [ 1, %39 ], [ 1, %355 ], [ 1, %346 ], [ 1, %665 ], [ 1, %656 ], [ 1, %970 ], [ 1, %961 ], [ 1, %1280 ], [ 1, %1271 ], [ 1, %1589 ], [ 1, %1580 ], [ %1906, %5550 ], [ 1, %1899 ], [ 1, %1890 ], [ %2215, %5551 ], [ 1, %2208 ], [ 1, %2199 ], [ 1, %2518 ], [ 1, %2509 ], [ 1, %2823 ], [ 1, %2814 ], [ 1, %3132 ], [ 1, %3123 ], [ 1, %3435 ], [ 1, %3426 ], [ 1, %3743 ], [ 1, %3734 ], [ %4049, %5552 ], [ 1, %4042 ], [ 1, %4033 ], [ %4359, %5553 ], [ 1, %4352 ], [ 1, %4343 ], [ %4664, %5554 ], [ 1, %4657 ], [ 1, %4648 ], [ 1, %4967 ], [ 1, %4958 ], [ %5273, %5555 ], [ 1, %5266 ], [ 1, %5257 ], [ %55, %196 ], [ %46, %339 ], [ %362, %496 ], [ %353, %635 ], [ %672, %812 ], [ %663, %954 ], [ %977, %1111 ], [ %968, %1250 ], [ %1287, %1429 ], [ %1278, %1573 ], [ %1596, %1730 ], [ %1587, %1869 ], [ %1897, %2192 ], [ %2206, %2488 ], [ %2525, %2665 ], [ %2516, %2807 ], [ %2830, %2964 ], [ %2821, %3103 ], [ %3139, %3278 ], [ %3130, %3419 ], [ %3442, %3575 ], [ %3433, %3713 ], [ %3750, %3887 ], [ %3741, %4026 ], [ %4040, %4322 ], [ %4350, %4641 ], [ %4655, %4937 ], [ %4974, %5111 ], [ %4965, %5250 ], [ %5264, %5546 ]
  %5559 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5558, ptr noundef nonnull @.str.5) #3
  %5560 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5557, ptr noundef nonnull @.str.6) #3
  br label %5561

5561:                                             ; preds = %5104, %5189, %5243, %5400, %5485, %5539, %4492, %4577, %4634, %4791, %4876, %4930, %3880, %3965, %4019, %4176, %4261, %4315, %3271, %3356, %3412, %3568, %3653, %3706, %2658, %2742, %2800, %2957, %3041, %3096, %2041, %2126, %2185, %2342, %2427, %2481, %1422, %1506, %1566, %1723, %1807, %1862, %805, %889, %947, %1104, %1188, %1243, %189, %273, %332, %489, %573, %628, %5556
  %5562 = phi i32 [ 0, %5556 ], [ -1, %628 ], [ -1, %573 ], [ -1, %489 ], [ -1, %332 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1243 ], [ -1, %1188 ], [ -1, %1104 ], [ -1, %947 ], [ -1, %889 ], [ -1, %805 ], [ -1, %1862 ], [ -1, %1807 ], [ -1, %1723 ], [ -1, %1566 ], [ -1, %1506 ], [ -1, %1422 ], [ -1, %2481 ], [ -1, %2427 ], [ -1, %2342 ], [ -1, %2185 ], [ -1, %2126 ], [ -1, %2041 ], [ -1, %3096 ], [ -1, %3041 ], [ -1, %2957 ], [ -1, %2800 ], [ -1, %2742 ], [ -1, %2658 ], [ -1, %3706 ], [ -1, %3653 ], [ -1, %3568 ], [ -1, %3412 ], [ -1, %3356 ], [ -1, %3271 ], [ -1, %4315 ], [ -1, %4261 ], [ -1, %4176 ], [ -1, %4019 ], [ -1, %3965 ], [ -1, %3880 ], [ -1, %4930 ], [ -1, %4876 ], [ -1, %4791 ], [ -1, %4634 ], [ -1, %4577 ], [ -1, %4492 ], [ -1, %5539 ], [ -1, %5485 ], [ -1, %5400 ], [ -1, %5243 ], [ -1, %5189 ], [ -1, %5104 ]
  ret i32 %5562
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5539 [
    i32 101, label %22
    i32 102, label %636
    i32 103, label %1251
    i32 104, label %1865
    i32 105, label %2480
    i32 106, label %3095
    i32 107, label %3710
    i32 108, label %4314
    i32 109, label %4929
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !19
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %31
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5539

33:                                               ; preds = %22
  switch i32 %1, label %634 [
    i32 1, label %34
    i32 0, label %338
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5539

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %5539

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !945

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !946

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !947

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds double, ptr %24, i64 %132
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = fptoui double %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %139
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !948

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5539, label %57, !llvm.loop !949

197:                                              ; preds = %40, %336
  %198 = phi i32 [ 0, %40 ], [ %285, %336 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !950

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !951

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !952

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds double, ptr %24, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !19
  %278 = fptoui double %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = zext i8 %278 to i64
  %281 = mul nuw nsw i64 %280, %280
  %282 = mul nuw nsw i64 %281, %281
  %283 = trunc i64 %282 to i8
  %284 = add i8 %279, %283
  store i8 %284, ptr %26, align 1, !tbaa !12
  %285 = add nuw nsw i32 %198, 1
  br i1 %42, label %286, label %336

286:                                              ; preds = %274
  %287 = load i32, ptr %4, align 4, !tbaa !6
  %288 = load i32, ptr %12, align 4, !tbaa !6
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !6
  %294 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %294, ptr %6, align 4, !tbaa !6
  br i1 %47, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !6
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !6
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !6
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !6
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !6
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %45
  br i1 %328, label %336, label %295, !llvm.loop !953

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !6
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !6
  br label %336

336:                                              ; preds = %323, %331, %293, %274
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5539, label %197, !llvm.loop !954

338:                                              ; preds = %33
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !6
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5539

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %495

352:                                              ; preds = %338
  br i1 %342, label %353, label %5539

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %493
  %362 = phi i32 [ 0, %353 ], [ %445, %493 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %444, %493 ]
  %364 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !6
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !955

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !956

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !6
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !957

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds double, ptr %24, i64 %436
  %438 = load double, ptr %437, align 8, !tbaa !19
  %439 = fptoui double %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i8 %439, %439
  %442 = mul i8 %441, %441
  %443 = add i8 %442, %440
  store i8 %443, ptr %26, align 1, !tbaa !12
  %444 = fadd fast double %363, 1.000000e+00
  %445 = add nuw nsw i32 %362, 1
  br i1 %355, label %446, label %493

446:                                              ; preds = %434
  %447 = load i32, ptr %4, align 4, !tbaa !6
  %448 = load i32, ptr %12, align 4, !tbaa !6
  %449 = add nsw i32 %448, -1
  %450 = icmp slt i32 %447, %449
  br i1 %450, label %470, label %451

451:                                              ; preds = %446
  %452 = icmp eq i32 %447, %449
  br i1 %452, label %453, label %486

453:                                              ; preds = %451
  store i32 0, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %454, ptr %6, align 4, !tbaa !6
  br i1 %360, label %493, label %455

455:                                              ; preds = %453, %480
  %456 = phi i64 [ %484, %480 ], [ 1, %453 ]
  %457 = getelementptr inbounds i32, ptr %4, i64 %456
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = getelementptr inbounds i32, ptr %12, i64 %456
  %460 = load i32, ptr %459, align 4, !tbaa !6
  %461 = add nsw i32 %460, -1
  %462 = icmp slt i32 %458, %461
  br i1 %462, label %463, label %478

463:                                              ; preds = %455
  br i1 %450, label %470, label %464

464:                                              ; preds = %463
  %465 = getelementptr inbounds i32, ptr %7, i64 %456
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = getelementptr inbounds i32, ptr %6, i64 %456
  %468 = load i32, ptr %467, align 4, !tbaa !6
  %469 = add nsw i32 %468, %466
  store i32 %469, ptr %467, align 4, !tbaa !6
  br label %488

470:                                              ; preds = %446, %463
  %471 = phi i32 [ %458, %463 ], [ %447, %446 ]
  %472 = phi ptr [ %457, %463 ], [ %4, %446 ]
  %473 = phi i64 [ %456, %463 ], [ 0, %446 ]
  %474 = add nsw i32 %471, 1
  store i32 %474, ptr %472, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %7, i64 %473
  %476 = load i32, ptr %475, align 4, !tbaa !6
  %477 = getelementptr inbounds i32, ptr %6, i64 %473
  br label %488

478:                                              ; preds = %455
  %479 = icmp eq i32 %458, %461
  br i1 %479, label %480, label %486

480:                                              ; preds = %478
  store i32 0, ptr %457, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %8, i64 %456
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %456
  store i32 %482, ptr %483, align 4, !tbaa !6
  %484 = add nuw nsw i64 %456, 1
  %485 = icmp eq i64 %484, %358
  br i1 %485, label %493, label %455, !llvm.loop !958

486:                                              ; preds = %451, %478
  %487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

488:                                              ; preds = %464, %470
  %489 = phi ptr [ %477, %470 ], [ %457, %464 ]
  %490 = phi i32 [ %476, %470 ], [ 1, %464 ]
  %491 = load i32, ptr %489, align 4, !tbaa !6
  %492 = add nsw i32 %491, %490
  store i32 %492, ptr %489, align 4, !tbaa !6
  br label %493

493:                                              ; preds = %480, %488, %453, %434
  %494 = icmp eq i32 %445, %5
  br i1 %494, label %5539, label %361, !llvm.loop !959

495:                                              ; preds = %344, %632
  %496 = phi i32 [ 0, %344 ], [ %581, %632 ]
  %497 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %345, label %498, label %567

498:                                              ; preds = %495, %557
  %499 = phi i32 [ %566, %557 ], [ 0, %495 ]
  %500 = phi i64 [ %508, %557 ], [ %349, %495 ]
  %501 = phi i64 [ %565, %557 ], [ %348, %495 ]
  %502 = phi i32 [ %563, %557 ], [ %497, %495 ]
  %503 = sub i32 %347, %499
  %504 = tail call i32 @llvm.smin.i32(i32 %503, i32 0)
  %505 = sub i32 %503, %504
  %506 = zext i32 %505 to i64
  %507 = add nuw nsw i64 %506, 1
  %508 = add nsw i64 %500, -1
  %509 = icmp ult i32 %505, 31
  br i1 %509, label %545, label %510

510:                                              ; preds = %498
  %511 = and i64 %507, 8589934560
  %512 = sub i64 %501, %511
  br label %513

513:                                              ; preds = %513, %510
  %514 = phi i64 [ 0, %510 ], [ %537, %513 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %533, %513 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %534, %513 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %535, %513 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %536, %513 ]
  %519 = sub i64 %501, %514
  %520 = getelementptr inbounds i32, ptr %11, i64 %519
  %521 = getelementptr inbounds i32, ptr %520, i64 -7
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !6
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %520, i64 -15
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %520, i64 -23
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %520, i64 -31
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = mul <8 x i32> %523, %515
  %534 = mul <8 x i32> %526, %516
  %535 = mul <8 x i32> %529, %517
  %536 = mul <8 x i32> %532, %518
  %537 = add nuw i64 %514, 32
  %538 = icmp eq i64 %537, %511
  br i1 %538, label %539, label %513, !llvm.loop !960

539:                                              ; preds = %513
  %540 = mul <8 x i32> %534, %533
  %541 = mul <8 x i32> %535, %540
  %542 = mul <8 x i32> %536, %541
  %543 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %542)
  %544 = icmp eq i64 %507, %511
  br i1 %544, label %557, label %545

545:                                              ; preds = %498, %539
  %546 = phi i64 [ %501, %498 ], [ %512, %539 ]
  %547 = phi i32 [ 1, %498 ], [ %543, %539 ]
  br label %548

548:                                              ; preds = %545, %548
  %549 = phi i64 [ %554, %548 ], [ %546, %545 ]
  %550 = phi i32 [ %553, %548 ], [ %547, %545 ]
  %551 = getelementptr inbounds i32, ptr %11, i64 %549
  %552 = load i32, ptr %551, align 4, !tbaa !6
  %553 = mul nsw i32 %552, %550
  %554 = add nsw i64 %549, -1
  %555 = trunc i64 %549 to i32
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %548, label %557, !llvm.loop !961

557:                                              ; preds = %548, %539
  %558 = phi i32 [ %543, %539 ], [ %553, %548 ]
  %559 = and i64 %508, 4294967295
  %560 = getelementptr inbounds i32, ptr %6, i64 %559
  %561 = load i32, ptr %560, align 4, !tbaa !6
  %562 = mul nsw i32 %561, %558
  %563 = add nsw i32 %562, %502
  %564 = icmp sgt i64 %500, 2
  %565 = add nsw i64 %501, -1
  %566 = add i32 %499, 1
  br i1 %564, label %498, label %567, !llvm.loop !962

567:                                              ; preds = %557, %495
  %568 = phi i32 [ %497, %495 ], [ %563, %557 ]
  %569 = icmp slt i32 %568, %5
  br i1 %569, label %572, label %570

570:                                              ; preds = %567
  %571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

572:                                              ; preds = %567
  %573 = sext i32 %568 to i64
  %574 = getelementptr inbounds double, ptr %24, i64 %573
  %575 = load double, ptr %574, align 8, !tbaa !19
  %576 = fptoui double %575 to i8
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i8 %576, %576
  %579 = mul i8 %578, %578
  %580 = add i8 %579, %577
  store i8 %580, ptr %26, align 1, !tbaa !12
  %581 = add nuw nsw i32 %496, 1
  br i1 %346, label %582, label %632

582:                                              ; preds = %572
  %583 = load i32, ptr %4, align 4, !tbaa !6
  %584 = load i32, ptr %12, align 4, !tbaa !6
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %583, %585
  br i1 %586, label %609, label %587

587:                                              ; preds = %582
  %588 = icmp eq i32 %583, %585
  br i1 %588, label %589, label %625

589:                                              ; preds = %587
  store i32 0, ptr %4, align 4, !tbaa !6
  %590 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %590, ptr %6, align 4, !tbaa !6
  br i1 %351, label %632, label %591

591:                                              ; preds = %589, %619
  %592 = phi i64 [ %623, %619 ], [ 1, %589 ]
  %593 = getelementptr inbounds i32, ptr %4, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = getelementptr inbounds i32, ptr %12, i64 %592
  %596 = load i32, ptr %595, align 4, !tbaa !6
  %597 = add nsw i32 %596, -1
  %598 = icmp slt i32 %594, %597
  br i1 %598, label %599, label %617

599:                                              ; preds = %591
  br i1 %586, label %609, label %600

600:                                              ; preds = %599
  %601 = shl i64 %592, 32
  %602 = add i64 %601, -4294967296
  %603 = ashr exact i64 %602, 32
  %604 = getelementptr inbounds i32, ptr %7, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = getelementptr inbounds i32, ptr %6, i64 %592
  %607 = load i32, ptr %606, align 4, !tbaa !6
  %608 = add nsw i32 %607, %605
  store i32 %608, ptr %606, align 4, !tbaa !6
  br label %627

609:                                              ; preds = %582, %599
  %610 = phi i32 [ %594, %599 ], [ %583, %582 ]
  %611 = phi ptr [ %593, %599 ], [ %4, %582 ]
  %612 = phi i64 [ %592, %599 ], [ 0, %582 ]
  %613 = add nsw i32 %610, 1
  store i32 %613, ptr %611, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %7, i64 %612
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = getelementptr inbounds i32, ptr %6, i64 %612
  br label %627

617:                                              ; preds = %591
  %618 = icmp eq i32 %594, %597
  br i1 %618, label %619, label %625

619:                                              ; preds = %617
  store i32 0, ptr %593, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %8, i64 %592
  %621 = load i32, ptr %620, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %6, i64 %592
  store i32 %621, ptr %622, align 4, !tbaa !6
  %623 = add nuw nsw i64 %592, 1
  %624 = icmp eq i64 %623, %349
  br i1 %624, label %632, label %591, !llvm.loop !963

625:                                              ; preds = %587, %617
  %626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

627:                                              ; preds = %600, %609
  %628 = phi ptr [ %616, %609 ], [ %593, %600 ]
  %629 = phi i32 [ %615, %609 ], [ 1, %600 ]
  %630 = load i32, ptr %628, align 4, !tbaa !6
  %631 = add nsw i32 %630, %629
  store i32 %631, ptr %628, align 4, !tbaa !6
  br label %632

632:                                              ; preds = %619, %627, %589, %572
  %633 = icmp eq i32 %581, %5
  br i1 %633, label %5539, label %495, !llvm.loop !964

634:                                              ; preds = %33
  %635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1714, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

636:                                              ; preds = %18
  %637 = getelementptr inbounds ptr, ptr %14, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = getelementptr inbounds ptr, ptr %16, i64 %19
  %640 = load ptr, ptr %639, align 8, !tbaa !10
  store i32 0, ptr %640, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %642, label %647

642:                                              ; preds = %636
  %643 = load double, ptr %638, align 8, !tbaa !19
  %644 = fptosi double %643 to i32
  %645 = mul i32 %644, %644
  %646 = mul i32 %645, %645
  store i32 %646, ptr %640, align 4, !tbaa !6
  br label %5539

647:                                              ; preds = %636
  switch i32 %1, label %1249 [
    i32 1, label %648
    i32 0, label %953
  ]

648:                                              ; preds = %647
  %649 = getelementptr inbounds i32, ptr %3, i64 %19
  %650 = load i32, ptr %649, align 4, !tbaa !6
  %651 = icmp eq i32 %650, 0
  %652 = icmp sgt i32 %5, 0
  br i1 %651, label %662, label %653

653:                                              ; preds = %648
  br i1 %652, label %654, label %5539

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %811

662:                                              ; preds = %648
  br i1 %652, label %663, label %5539

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %671

671:                                              ; preds = %663, %809
  %672 = phi i32 [ 0, %663 ], [ %761, %809 ]
  %673 = phi double [ 0.000000e+00, %663 ], [ %760, %809 ]
  %674 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %675, label %744

675:                                              ; preds = %671, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %671 ]
  %677 = phi i64 [ %685, %734 ], [ %668, %671 ]
  %678 = phi i64 [ %742, %734 ], [ %667, %671 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %671 ]
  %680 = sub i32 %666, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !965

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !6
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !966

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !967

744:                                              ; preds = %734, %671
  %745 = phi i32 [ %674, %671 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !19
  %749 = getelementptr inbounds double, ptr %638, i64 %746
  %750 = load double, ptr %749, align 8, !tbaa !19
  %751 = fptosi double %750 to i32
  %752 = load i32, ptr %640, align 4, !tbaa !6
  %753 = sitofp i32 %752 to double
  %754 = sitofp i32 %751 to double
  %755 = fmul fast double %748, %754
  %756 = fmul fast double %755, %755
  %757 = fmul fast double %756, %756
  %758 = fadd fast double %757, %753
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %640, align 4, !tbaa !6
  %760 = fadd fast double %748, %673
  %761 = add nuw nsw i32 %672, 1
  br i1 %665, label %762, label %809

762:                                              ; preds = %744
  %763 = load i32, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %12, align 4, !tbaa !6
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !6
  %770 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %770, ptr %6, align 4, !tbaa !6
  br i1 %670, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !6
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !6
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %668
  br i1 %801, label %809, label %771, !llvm.loop !968

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !6
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !6
  br label %809

809:                                              ; preds = %796, %804, %769, %744
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5539, label %671, !llvm.loop !969

811:                                              ; preds = %654, %951
  %812 = phi i32 [ 0, %654 ], [ %900, %951 ]
  %813 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %655, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %659, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %658, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %657, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !970

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !6
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !971

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !6
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !972

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds double, ptr %638, i64 %889
  %891 = load double, ptr %890, align 8, !tbaa !19
  %892 = fptosi double %891 to i32
  %893 = load i32, ptr %640, align 4, !tbaa !6
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = fmul fast double %895, %895
  %897 = fmul fast double %896, %896
  %898 = fadd fast double %897, %894
  %899 = fptosi double %898 to i32
  store i32 %899, ptr %640, align 4, !tbaa !6
  %900 = add nuw nsw i32 %812, 1
  br i1 %656, label %901, label %951

901:                                              ; preds = %888
  %902 = load i32, ptr %4, align 4, !tbaa !6
  %903 = load i32, ptr %12, align 4, !tbaa !6
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %902, %904
  br i1 %905, label %928, label %906

906:                                              ; preds = %901
  %907 = icmp eq i32 %902, %904
  br i1 %907, label %908, label %944

908:                                              ; preds = %906
  store i32 0, ptr %4, align 4, !tbaa !6
  %909 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %909, ptr %6, align 4, !tbaa !6
  br i1 %661, label %951, label %910

910:                                              ; preds = %908, %938
  %911 = phi i64 [ %942, %938 ], [ 1, %908 ]
  %912 = getelementptr inbounds i32, ptr %4, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %12, i64 %911
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, -1
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %936

918:                                              ; preds = %910
  br i1 %905, label %928, label %919

919:                                              ; preds = %918
  %920 = shl i64 %911, 32
  %921 = add i64 %920, -4294967296
  %922 = ashr exact i64 %921, 32
  %923 = getelementptr inbounds i32, ptr %7, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %911
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = add nsw i32 %926, %924
  store i32 %927, ptr %925, align 4, !tbaa !6
  br label %946

928:                                              ; preds = %901, %918
  %929 = phi i32 [ %913, %918 ], [ %902, %901 ]
  %930 = phi ptr [ %912, %918 ], [ %4, %901 ]
  %931 = phi i64 [ %911, %918 ], [ 0, %901 ]
  %932 = add nsw i32 %929, 1
  store i32 %932, ptr %930, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %7, i64 %931
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %931
  br label %946

936:                                              ; preds = %910
  %937 = icmp eq i32 %913, %916
  br i1 %937, label %938, label %944

938:                                              ; preds = %936
  store i32 0, ptr %912, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %8, i64 %911
  %940 = load i32, ptr %939, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %6, i64 %911
  store i32 %940, ptr %941, align 4, !tbaa !6
  %942 = add nuw nsw i64 %911, 1
  %943 = icmp eq i64 %942, %659
  br i1 %943, label %951, label %910, !llvm.loop !973

944:                                              ; preds = %906, %936
  %945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

946:                                              ; preds = %919, %928
  %947 = phi ptr [ %935, %928 ], [ %912, %919 ]
  %948 = phi i32 [ %934, %928 ], [ 1, %919 ]
  %949 = load i32, ptr %947, align 4, !tbaa !6
  %950 = add nsw i32 %949, %948
  store i32 %950, ptr %947, align 4, !tbaa !6
  br label %951

951:                                              ; preds = %938, %946, %908, %888
  %952 = icmp eq i32 %900, %5
  br i1 %952, label %5539, label %811, !llvm.loop !974

953:                                              ; preds = %647
  %954 = getelementptr inbounds i32, ptr %3, i64 %19
  %955 = load i32, ptr %954, align 4, !tbaa !6
  %956 = icmp eq i32 %955, 0
  %957 = icmp sgt i32 %5, 0
  br i1 %956, label %967, label %958

958:                                              ; preds = %953
  br i1 %957, label %959, label %5539

959:                                              ; preds = %958
  %960 = icmp sgt i32 %13, 1
  %961 = icmp sgt i32 %13, 0
  %962 = add i32 %13, -2
  %963 = zext i32 %962 to i64
  %964 = zext i32 %13 to i64
  %965 = add nuw i32 %5, 1
  %966 = icmp eq i32 %13, 1
  br label %1110

967:                                              ; preds = %953
  br i1 %957, label %968, label %5539

968:                                              ; preds = %967
  %969 = icmp sgt i32 %13, 1
  %970 = icmp sgt i32 %13, 0
  %971 = add i32 %13, -2
  %972 = zext i32 %971 to i64
  %973 = zext i32 %13 to i64
  %974 = add nuw i32 %5, 1
  %975 = icmp eq i32 %13, 1
  br label %976

976:                                              ; preds = %968, %1108
  %977 = phi i32 [ 0, %968 ], [ %1060, %1108 ]
  %978 = phi double [ 0.000000e+00, %968 ], [ %1059, %1108 ]
  %979 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %969, label %980, label %1049

980:                                              ; preds = %976, %1039
  %981 = phi i32 [ %1048, %1039 ], [ 0, %976 ]
  %982 = phi i64 [ %990, %1039 ], [ %973, %976 ]
  %983 = phi i64 [ %1047, %1039 ], [ %972, %976 ]
  %984 = phi i32 [ %1045, %1039 ], [ %979, %976 ]
  %985 = sub i32 %971, %981
  %986 = tail call i32 @llvm.smin.i32(i32 %985, i32 0)
  %987 = sub i32 %985, %986
  %988 = zext i32 %987 to i64
  %989 = add nuw nsw i64 %988, 1
  %990 = add nsw i64 %982, -1
  %991 = icmp ult i32 %987, 31
  br i1 %991, label %1027, label %992

992:                                              ; preds = %980
  %993 = and i64 %989, 8589934560
  %994 = sub i64 %983, %993
  br label %995

995:                                              ; preds = %995, %992
  %996 = phi i64 [ 0, %992 ], [ %1019, %995 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1015, %995 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1016, %995 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1017, %995 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1018, %995 ]
  %1001 = sub i64 %983, %996
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1001
  %1003 = getelementptr inbounds i32, ptr %1002, i64 -7
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !6
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %1002, i64 -15
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1002, i64 -23
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1002, i64 -31
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = mul <8 x i32> %1005, %997
  %1016 = mul <8 x i32> %1008, %998
  %1017 = mul <8 x i32> %1011, %999
  %1018 = mul <8 x i32> %1014, %1000
  %1019 = add nuw i64 %996, 32
  %1020 = icmp eq i64 %1019, %993
  br i1 %1020, label %1021, label %995, !llvm.loop !975

1021:                                             ; preds = %995
  %1022 = mul <8 x i32> %1016, %1015
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1024)
  %1026 = icmp eq i64 %989, %993
  br i1 %1026, label %1039, label %1027

1027:                                             ; preds = %980, %1021
  %1028 = phi i64 [ %983, %980 ], [ %994, %1021 ]
  %1029 = phi i32 [ 1, %980 ], [ %1025, %1021 ]
  br label %1030

1030:                                             ; preds = %1027, %1030
  %1031 = phi i64 [ %1036, %1030 ], [ %1028, %1027 ]
  %1032 = phi i32 [ %1035, %1030 ], [ %1029, %1027 ]
  %1033 = getelementptr inbounds i32, ptr %9, i64 %1031
  %1034 = load i32, ptr %1033, align 4, !tbaa !6
  %1035 = mul nsw i32 %1034, %1032
  %1036 = add nsw i64 %1031, -1
  %1037 = trunc i64 %1031 to i32
  %1038 = icmp sgt i32 %1037, 0
  br i1 %1038, label %1030, label %1039, !llvm.loop !976

1039:                                             ; preds = %1030, %1021
  %1040 = phi i32 [ %1025, %1021 ], [ %1035, %1030 ]
  %1041 = and i64 %990, 4294967295
  %1042 = getelementptr inbounds i32, ptr %6, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !6
  %1044 = mul nsw i32 %1043, %1040
  %1045 = add nsw i32 %1044, %984
  %1046 = icmp sgt i64 %982, 2
  %1047 = add nsw i64 %983, -1
  %1048 = add i32 %981, 1
  br i1 %1046, label %980, label %1049, !llvm.loop !977

1049:                                             ; preds = %1039, %976
  %1050 = phi i32 [ %979, %976 ], [ %1045, %1039 ]
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds double, ptr %638, i64 %1051
  %1053 = load double, ptr %1052, align 8, !tbaa !19
  %1054 = fptosi double %1053 to i32
  %1055 = load i32, ptr %640, align 4, !tbaa !6
  %1056 = mul i32 %1054, %1054
  %1057 = mul i32 %1056, %1056
  %1058 = add nsw i32 %1057, %1055
  store i32 %1058, ptr %640, align 4, !tbaa !6
  %1059 = fadd fast double %978, 1.000000e+00
  %1060 = add nuw nsw i32 %977, 1
  br i1 %970, label %1061, label %1108

1061:                                             ; preds = %1049
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %975, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %973
  br i1 %1100, label %1108, label %1070, !llvm.loop !978

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1049
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %5539, label %976, !llvm.loop !979

1110:                                             ; preds = %959, %1247
  %1111 = phi i32 [ 0, %959 ], [ %1196, %1247 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %960, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %964, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %963, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %962, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !980

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !981

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !982

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds double, ptr %638, i64 %1188
  %1190 = load double, ptr %1189, align 8, !tbaa !19
  %1191 = fptosi double %1190 to i32
  %1192 = load i32, ptr %640, align 4, !tbaa !6
  %1193 = mul i32 %1191, %1191
  %1194 = mul i32 %1193, %1193
  %1195 = add nsw i32 %1194, %1192
  store i32 %1195, ptr %640, align 4, !tbaa !6
  %1196 = add nuw nsw i32 %1111, 1
  br i1 %961, label %1197, label %1247

1197:                                             ; preds = %1187
  %1198 = load i32, ptr %4, align 4, !tbaa !6
  %1199 = load i32, ptr %12, align 4, !tbaa !6
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !6
  %1205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1205, ptr %6, align 4, !tbaa !6
  br i1 %966, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !6
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !6
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %964
  br i1 %1239, label %1247, label %1206, !llvm.loop !983

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !6
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !6
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1187
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5539, label %1110, !llvm.loop !984

1249:                                             ; preds = %647
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1717, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !10
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !10
  store i8 0, ptr %1255, align 1, !tbaa !12
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1262

1257:                                             ; preds = %1251
  %1258 = load double, ptr %1253, align 8, !tbaa !19
  %1259 = fptosi double %1258 to i8
  %1260 = mul i8 %1259, %1259
  %1261 = mul i8 %1260, %1260
  store i8 %1261, ptr %1255, align 1, !tbaa !12
  br label %5539

1262:                                             ; preds = %1251
  switch i32 %1, label %1863 [
    i32 1, label %1263
    i32 0, label %1567
  ]

1263:                                             ; preds = %1262
  %1264 = getelementptr inbounds i32, ptr %3, i64 %19
  %1265 = load i32, ptr %1264, align 4, !tbaa !6
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp sgt i32 %5, 0
  br i1 %1266, label %1277, label %1268

1268:                                             ; preds = %1263
  br i1 %1267, label %1269, label %5539

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1426

1277:                                             ; preds = %1263
  br i1 %1267, label %1278, label %5539

1278:                                             ; preds = %1277
  %1279 = icmp sgt i32 %13, 1
  %1280 = icmp sgt i32 %13, 0
  %1281 = add i32 %13, -2
  %1282 = zext i32 %1281 to i64
  %1283 = zext i32 %13 to i64
  %1284 = add nuw i32 %5, 1
  %1285 = icmp eq i32 %13, 1
  br label %1286

1286:                                             ; preds = %1278, %1424
  %1287 = phi i32 [ 0, %1278 ], [ %1376, %1424 ]
  %1288 = phi double [ 0.000000e+00, %1278 ], [ %1375, %1424 ]
  %1289 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1290, label %1359

1290:                                             ; preds = %1286, %1349
  %1291 = phi i32 [ %1358, %1349 ], [ 0, %1286 ]
  %1292 = phi i64 [ %1300, %1349 ], [ %1283, %1286 ]
  %1293 = phi i64 [ %1357, %1349 ], [ %1282, %1286 ]
  %1294 = phi i32 [ %1355, %1349 ], [ %1289, %1286 ]
  %1295 = sub i32 %1281, %1291
  %1296 = tail call i32 @llvm.smin.i32(i32 %1295, i32 0)
  %1297 = sub i32 %1295, %1296
  %1298 = zext i32 %1297 to i64
  %1299 = add nuw nsw i64 %1298, 1
  %1300 = add nsw i64 %1292, -1
  %1301 = icmp ult i32 %1297, 31
  br i1 %1301, label %1337, label %1302

1302:                                             ; preds = %1290
  %1303 = and i64 %1299, 8589934560
  %1304 = sub i64 %1293, %1303
  br label %1305

1305:                                             ; preds = %1305, %1302
  %1306 = phi i64 [ 0, %1302 ], [ %1329, %1305 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1325, %1305 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1326, %1305 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1327, %1305 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1328, %1305 ]
  %1311 = sub i64 %1293, %1306
  %1312 = getelementptr inbounds i32, ptr %9, i64 %1311
  %1313 = getelementptr inbounds i32, ptr %1312, i64 -7
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !6
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1312, i64 -15
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1312, i64 -23
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1312, i64 -31
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = mul <8 x i32> %1315, %1307
  %1326 = mul <8 x i32> %1318, %1308
  %1327 = mul <8 x i32> %1321, %1309
  %1328 = mul <8 x i32> %1324, %1310
  %1329 = add nuw i64 %1306, 32
  %1330 = icmp eq i64 %1329, %1303
  br i1 %1330, label %1331, label %1305, !llvm.loop !985

1331:                                             ; preds = %1305
  %1332 = mul <8 x i32> %1326, %1325
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = mul <8 x i32> %1328, %1333
  %1335 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1334)
  %1336 = icmp eq i64 %1299, %1303
  br i1 %1336, label %1349, label %1337

1337:                                             ; preds = %1290, %1331
  %1338 = phi i64 [ %1293, %1290 ], [ %1304, %1331 ]
  %1339 = phi i32 [ 1, %1290 ], [ %1335, %1331 ]
  br label %1340

1340:                                             ; preds = %1337, %1340
  %1341 = phi i64 [ %1346, %1340 ], [ %1338, %1337 ]
  %1342 = phi i32 [ %1345, %1340 ], [ %1339, %1337 ]
  %1343 = getelementptr inbounds i32, ptr %9, i64 %1341
  %1344 = load i32, ptr %1343, align 4, !tbaa !6
  %1345 = mul nsw i32 %1344, %1342
  %1346 = add nsw i64 %1341, -1
  %1347 = trunc i64 %1341 to i32
  %1348 = icmp sgt i32 %1347, 0
  br i1 %1348, label %1340, label %1349, !llvm.loop !986

1349:                                             ; preds = %1340, %1331
  %1350 = phi i32 [ %1335, %1331 ], [ %1345, %1340 ]
  %1351 = and i64 %1300, 4294967295
  %1352 = getelementptr inbounds i32, ptr %6, i64 %1351
  %1353 = load i32, ptr %1352, align 4, !tbaa !6
  %1354 = mul nsw i32 %1353, %1350
  %1355 = add nsw i32 %1354, %1294
  %1356 = icmp sgt i64 %1292, 2
  %1357 = add nsw i64 %1293, -1
  %1358 = add i32 %1291, 1
  br i1 %1356, label %1290, label %1359, !llvm.loop !987

1359:                                             ; preds = %1349, %1286
  %1360 = phi i32 [ %1289, %1286 ], [ %1355, %1349 ]
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds double, ptr %2, i64 %1361
  %1363 = load double, ptr %1362, align 8, !tbaa !19
  %1364 = getelementptr inbounds double, ptr %1253, i64 %1361
  %1365 = load double, ptr %1364, align 8, !tbaa !19
  %1366 = fptosi double %1365 to i8
  %1367 = load i8, ptr %1255, align 1, !tbaa !12
  %1368 = sitofp i8 %1367 to double
  %1369 = sitofp i8 %1366 to double
  %1370 = fmul fast double %1363, %1369
  %1371 = fmul fast double %1370, %1370
  %1372 = fmul fast double %1371, %1371
  %1373 = fadd fast double %1372, %1368
  %1374 = fptosi double %1373 to i8
  store i8 %1374, ptr %1255, align 1, !tbaa !12
  %1375 = fadd fast double %1363, %1288
  %1376 = add nuw nsw i32 %1287, 1
  br i1 %1280, label %1377, label %1424

1377:                                             ; preds = %1359
  %1378 = load i32, ptr %4, align 4, !tbaa !6
  %1379 = load i32, ptr %12, align 4, !tbaa !6
  %1380 = add nsw i32 %1379, -1
  %1381 = icmp slt i32 %1378, %1380
  br i1 %1381, label %1401, label %1382

1382:                                             ; preds = %1377
  %1383 = icmp eq i32 %1378, %1380
  br i1 %1383, label %1384, label %1417

1384:                                             ; preds = %1382
  store i32 0, ptr %4, align 4, !tbaa !6
  %1385 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1385, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1424, label %1386

1386:                                             ; preds = %1384, %1411
  %1387 = phi i64 [ %1415, %1411 ], [ 1, %1384 ]
  %1388 = getelementptr inbounds i32, ptr %4, i64 %1387
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = getelementptr inbounds i32, ptr %12, i64 %1387
  %1391 = load i32, ptr %1390, align 4, !tbaa !6
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1389, %1392
  br i1 %1393, label %1394, label %1409

1394:                                             ; preds = %1386
  br i1 %1381, label %1401, label %1395

1395:                                             ; preds = %1394
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1387
  %1399 = load i32, ptr %1398, align 4, !tbaa !6
  %1400 = add nsw i32 %1399, %1397
  store i32 %1400, ptr %1398, align 4, !tbaa !6
  br label %1419

1401:                                             ; preds = %1377, %1394
  %1402 = phi i32 [ %1389, %1394 ], [ %1378, %1377 ]
  %1403 = phi ptr [ %1388, %1394 ], [ %4, %1377 ]
  %1404 = phi i64 [ %1387, %1394 ], [ 0, %1377 ]
  %1405 = add nsw i32 %1402, 1
  store i32 %1405, ptr %1403, align 4, !tbaa !6
  %1406 = getelementptr inbounds i32, ptr %7, i64 %1404
  %1407 = load i32, ptr %1406, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1404
  br label %1419

1409:                                             ; preds = %1386
  %1410 = icmp eq i32 %1389, %1392
  br i1 %1410, label %1411, label %1417

1411:                                             ; preds = %1409
  store i32 0, ptr %1388, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %8, i64 %1387
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %6, i64 %1387
  store i32 %1413, ptr %1414, align 4, !tbaa !6
  %1415 = add nuw nsw i64 %1387, 1
  %1416 = icmp eq i64 %1415, %1283
  br i1 %1416, label %1424, label %1386, !llvm.loop !988

1417:                                             ; preds = %1382, %1409
  %1418 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1419:                                             ; preds = %1395, %1401
  %1420 = phi ptr [ %1408, %1401 ], [ %1388, %1395 ]
  %1421 = phi i32 [ %1407, %1401 ], [ 1, %1395 ]
  %1422 = load i32, ptr %1420, align 4, !tbaa !6
  %1423 = add nsw i32 %1422, %1421
  store i32 %1423, ptr %1420, align 4, !tbaa !6
  br label %1424

1424:                                             ; preds = %1411, %1419, %1384, %1359
  %1425 = icmp eq i32 %1376, %5
  br i1 %1425, label %5539, label %1286, !llvm.loop !989

1426:                                             ; preds = %1269, %1565
  %1427 = phi i32 [ 0, %1269 ], [ %1514, %1565 ]
  %1428 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1270, label %1429, label %1498

1429:                                             ; preds = %1426, %1488
  %1430 = phi i32 [ %1497, %1488 ], [ 0, %1426 ]
  %1431 = phi i64 [ %1439, %1488 ], [ %1274, %1426 ]
  %1432 = phi i64 [ %1496, %1488 ], [ %1273, %1426 ]
  %1433 = phi i32 [ %1494, %1488 ], [ %1428, %1426 ]
  %1434 = sub i32 %1272, %1430
  %1435 = tail call i32 @llvm.smin.i32(i32 %1434, i32 0)
  %1436 = sub i32 %1434, %1435
  %1437 = zext i32 %1436 to i64
  %1438 = add nuw nsw i64 %1437, 1
  %1439 = add nsw i64 %1431, -1
  %1440 = icmp ult i32 %1436, 31
  br i1 %1440, label %1476, label %1441

1441:                                             ; preds = %1429
  %1442 = and i64 %1438, 8589934560
  %1443 = sub i64 %1432, %1442
  br label %1444

1444:                                             ; preds = %1444, %1441
  %1445 = phi i64 [ 0, %1441 ], [ %1468, %1444 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1464, %1444 ]
  %1447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1465, %1444 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1466, %1444 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1467, %1444 ]
  %1450 = sub i64 %1432, %1445
  %1451 = getelementptr inbounds i32, ptr %11, i64 %1450
  %1452 = getelementptr inbounds i32, ptr %1451, i64 -7
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1451, i64 -15
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1451, i64 -23
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = getelementptr inbounds i32, ptr %1451, i64 -31
  %1462 = load <8 x i32>, ptr %1461, align 4, !tbaa !6
  %1463 = shufflevector <8 x i32> %1462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1464 = mul <8 x i32> %1454, %1446
  %1465 = mul <8 x i32> %1457, %1447
  %1466 = mul <8 x i32> %1460, %1448
  %1467 = mul <8 x i32> %1463, %1449
  %1468 = add nuw i64 %1445, 32
  %1469 = icmp eq i64 %1468, %1442
  br i1 %1469, label %1470, label %1444, !llvm.loop !990

1470:                                             ; preds = %1444
  %1471 = mul <8 x i32> %1465, %1464
  %1472 = mul <8 x i32> %1466, %1471
  %1473 = mul <8 x i32> %1467, %1472
  %1474 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1473)
  %1475 = icmp eq i64 %1438, %1442
  br i1 %1475, label %1488, label %1476

1476:                                             ; preds = %1429, %1470
  %1477 = phi i64 [ %1432, %1429 ], [ %1443, %1470 ]
  %1478 = phi i32 [ 1, %1429 ], [ %1474, %1470 ]
  br label %1479

1479:                                             ; preds = %1476, %1479
  %1480 = phi i64 [ %1485, %1479 ], [ %1477, %1476 ]
  %1481 = phi i32 [ %1484, %1479 ], [ %1478, %1476 ]
  %1482 = getelementptr inbounds i32, ptr %11, i64 %1480
  %1483 = load i32, ptr %1482, align 4, !tbaa !6
  %1484 = mul nsw i32 %1483, %1481
  %1485 = add nsw i64 %1480, -1
  %1486 = trunc i64 %1480 to i32
  %1487 = icmp sgt i32 %1486, 0
  br i1 %1487, label %1479, label %1488, !llvm.loop !991

1488:                                             ; preds = %1479, %1470
  %1489 = phi i32 [ %1474, %1470 ], [ %1484, %1479 ]
  %1490 = and i64 %1439, 4294967295
  %1491 = getelementptr inbounds i32, ptr %6, i64 %1490
  %1492 = load i32, ptr %1491, align 4, !tbaa !6
  %1493 = mul nsw i32 %1492, %1489
  %1494 = add nsw i32 %1493, %1433
  %1495 = icmp sgt i64 %1431, 2
  %1496 = add nsw i64 %1432, -1
  %1497 = add i32 %1430, 1
  br i1 %1495, label %1429, label %1498, !llvm.loop !992

1498:                                             ; preds = %1488, %1426
  %1499 = phi i32 [ %1428, %1426 ], [ %1494, %1488 ]
  %1500 = icmp slt i32 %1499, %5
  br i1 %1500, label %1503, label %1501

1501:                                             ; preds = %1498
  %1502 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1503:                                             ; preds = %1498
  %1504 = sext i32 %1499 to i64
  %1505 = getelementptr inbounds double, ptr %1253, i64 %1504
  %1506 = load double, ptr %1505, align 8, !tbaa !19
  %1507 = fptosi double %1506 to i8
  %1508 = load i8, ptr %1255, align 1, !tbaa !12
  %1509 = sext i8 %1507 to i32
  %1510 = mul nsw i32 %1509, %1509
  %1511 = mul nsw i32 %1510, %1510
  %1512 = trunc i32 %1511 to i8
  %1513 = add i8 %1508, %1512
  store i8 %1513, ptr %1255, align 1, !tbaa !12
  %1514 = add nuw nsw i32 %1427, 1
  br i1 %1271, label %1515, label %1565

1515:                                             ; preds = %1503
  %1516 = load i32, ptr %4, align 4, !tbaa !6
  %1517 = load i32, ptr %12, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1516, %1518
  br i1 %1519, label %1542, label %1520

1520:                                             ; preds = %1515
  %1521 = icmp eq i32 %1516, %1518
  br i1 %1521, label %1522, label %1558

1522:                                             ; preds = %1520
  store i32 0, ptr %4, align 4, !tbaa !6
  %1523 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1523, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1565, label %1524

1524:                                             ; preds = %1522, %1552
  %1525 = phi i64 [ %1556, %1552 ], [ 1, %1522 ]
  %1526 = getelementptr inbounds i32, ptr %4, i64 %1525
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = getelementptr inbounds i32, ptr %12, i64 %1525
  %1529 = load i32, ptr %1528, align 4, !tbaa !6
  %1530 = add nsw i32 %1529, -1
  %1531 = icmp slt i32 %1527, %1530
  br i1 %1531, label %1532, label %1550

1532:                                             ; preds = %1524
  br i1 %1519, label %1542, label %1533

1533:                                             ; preds = %1532
  %1534 = shl i64 %1525, 32
  %1535 = add i64 %1534, -4294967296
  %1536 = ashr exact i64 %1535, 32
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1536
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1525
  %1540 = load i32, ptr %1539, align 4, !tbaa !6
  %1541 = add nsw i32 %1540, %1538
  store i32 %1541, ptr %1539, align 4, !tbaa !6
  br label %1560

1542:                                             ; preds = %1515, %1532
  %1543 = phi i32 [ %1527, %1532 ], [ %1516, %1515 ]
  %1544 = phi ptr [ %1526, %1532 ], [ %4, %1515 ]
  %1545 = phi i64 [ %1525, %1532 ], [ 0, %1515 ]
  %1546 = add nsw i32 %1543, 1
  store i32 %1546, ptr %1544, align 4, !tbaa !6
  %1547 = getelementptr inbounds i32, ptr %7, i64 %1545
  %1548 = load i32, ptr %1547, align 4, !tbaa !6
  %1549 = getelementptr inbounds i32, ptr %6, i64 %1545
  br label %1560

1550:                                             ; preds = %1524
  %1551 = icmp eq i32 %1527, %1530
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1550
  store i32 0, ptr %1526, align 4, !tbaa !6
  %1553 = getelementptr inbounds i32, ptr %8, i64 %1525
  %1554 = load i32, ptr %1553, align 4, !tbaa !6
  %1555 = getelementptr inbounds i32, ptr %6, i64 %1525
  store i32 %1554, ptr %1555, align 4, !tbaa !6
  %1556 = add nuw nsw i64 %1525, 1
  %1557 = icmp eq i64 %1556, %1274
  br i1 %1557, label %1565, label %1524, !llvm.loop !993

1558:                                             ; preds = %1520, %1550
  %1559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1560:                                             ; preds = %1533, %1542
  %1561 = phi ptr [ %1549, %1542 ], [ %1526, %1533 ]
  %1562 = phi i32 [ %1548, %1542 ], [ 1, %1533 ]
  %1563 = load i32, ptr %1561, align 4, !tbaa !6
  %1564 = add nsw i32 %1563, %1562
  store i32 %1564, ptr %1561, align 4, !tbaa !6
  br label %1565

1565:                                             ; preds = %1552, %1560, %1522, %1503
  %1566 = icmp eq i32 %1514, %5
  br i1 %1566, label %5539, label %1426, !llvm.loop !994

1567:                                             ; preds = %1262
  %1568 = getelementptr inbounds i32, ptr %3, i64 %19
  %1569 = load i32, ptr %1568, align 4, !tbaa !6
  %1570 = icmp eq i32 %1569, 0
  %1571 = icmp sgt i32 %5, 0
  br i1 %1570, label %1581, label %1572

1572:                                             ; preds = %1567
  br i1 %1571, label %1573, label %5539

1573:                                             ; preds = %1572
  %1574 = icmp sgt i32 %13, 1
  %1575 = icmp sgt i32 %13, 0
  %1576 = add i32 %13, -2
  %1577 = zext i32 %1576 to i64
  %1578 = zext i32 %13 to i64
  %1579 = add nuw i32 %5, 1
  %1580 = icmp eq i32 %13, 1
  br label %1724

1581:                                             ; preds = %1567
  br i1 %1571, label %1582, label %5539

1582:                                             ; preds = %1581
  %1583 = icmp sgt i32 %13, 1
  %1584 = icmp sgt i32 %13, 0
  %1585 = add i32 %13, -2
  %1586 = zext i32 %1585 to i64
  %1587 = zext i32 %13 to i64
  %1588 = add nuw i32 %5, 1
  %1589 = icmp eq i32 %13, 1
  br label %1590

1590:                                             ; preds = %1582, %1722
  %1591 = phi i32 [ 0, %1582 ], [ %1674, %1722 ]
  %1592 = phi double [ 0.000000e+00, %1582 ], [ %1673, %1722 ]
  %1593 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1583, label %1594, label %1663

1594:                                             ; preds = %1590, %1653
  %1595 = phi i32 [ %1662, %1653 ], [ 0, %1590 ]
  %1596 = phi i64 [ %1604, %1653 ], [ %1587, %1590 ]
  %1597 = phi i64 [ %1661, %1653 ], [ %1586, %1590 ]
  %1598 = phi i32 [ %1659, %1653 ], [ %1593, %1590 ]
  %1599 = sub i32 %1585, %1595
  %1600 = tail call i32 @llvm.smin.i32(i32 %1599, i32 0)
  %1601 = sub i32 %1599, %1600
  %1602 = zext i32 %1601 to i64
  %1603 = add nuw nsw i64 %1602, 1
  %1604 = add nsw i64 %1596, -1
  %1605 = icmp ult i32 %1601, 31
  br i1 %1605, label %1641, label %1606

1606:                                             ; preds = %1594
  %1607 = and i64 %1603, 8589934560
  %1608 = sub i64 %1597, %1607
  br label %1609

1609:                                             ; preds = %1609, %1606
  %1610 = phi i64 [ 0, %1606 ], [ %1633, %1609 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1629, %1609 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1630, %1609 ]
  %1613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1631, %1609 ]
  %1614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1632, %1609 ]
  %1615 = sub i64 %1597, %1610
  %1616 = getelementptr inbounds i32, ptr %9, i64 %1615
  %1617 = getelementptr inbounds i32, ptr %1616, i64 -7
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !6
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = getelementptr inbounds i32, ptr %1616, i64 -15
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !6
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = getelementptr inbounds i32, ptr %1616, i64 -23
  %1624 = load <8 x i32>, ptr %1623, align 4, !tbaa !6
  %1625 = shufflevector <8 x i32> %1624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1626 = getelementptr inbounds i32, ptr %1616, i64 -31
  %1627 = load <8 x i32>, ptr %1626, align 4, !tbaa !6
  %1628 = shufflevector <8 x i32> %1627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1629 = mul <8 x i32> %1619, %1611
  %1630 = mul <8 x i32> %1622, %1612
  %1631 = mul <8 x i32> %1625, %1613
  %1632 = mul <8 x i32> %1628, %1614
  %1633 = add nuw i64 %1610, 32
  %1634 = icmp eq i64 %1633, %1607
  br i1 %1634, label %1635, label %1609, !llvm.loop !995

1635:                                             ; preds = %1609
  %1636 = mul <8 x i32> %1630, %1629
  %1637 = mul <8 x i32> %1631, %1636
  %1638 = mul <8 x i32> %1632, %1637
  %1639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1638)
  %1640 = icmp eq i64 %1603, %1607
  br i1 %1640, label %1653, label %1641

1641:                                             ; preds = %1594, %1635
  %1642 = phi i64 [ %1597, %1594 ], [ %1608, %1635 ]
  %1643 = phi i32 [ 1, %1594 ], [ %1639, %1635 ]
  br label %1644

1644:                                             ; preds = %1641, %1644
  %1645 = phi i64 [ %1650, %1644 ], [ %1642, %1641 ]
  %1646 = phi i32 [ %1649, %1644 ], [ %1643, %1641 ]
  %1647 = getelementptr inbounds i32, ptr %9, i64 %1645
  %1648 = load i32, ptr %1647, align 4, !tbaa !6
  %1649 = mul nsw i32 %1648, %1646
  %1650 = add nsw i64 %1645, -1
  %1651 = trunc i64 %1645 to i32
  %1652 = icmp sgt i32 %1651, 0
  br i1 %1652, label %1644, label %1653, !llvm.loop !996

1653:                                             ; preds = %1644, %1635
  %1654 = phi i32 [ %1639, %1635 ], [ %1649, %1644 ]
  %1655 = and i64 %1604, 4294967295
  %1656 = getelementptr inbounds i32, ptr %6, i64 %1655
  %1657 = load i32, ptr %1656, align 4, !tbaa !6
  %1658 = mul nsw i32 %1657, %1654
  %1659 = add nsw i32 %1658, %1598
  %1660 = icmp sgt i64 %1596, 2
  %1661 = add nsw i64 %1597, -1
  %1662 = add i32 %1595, 1
  br i1 %1660, label %1594, label %1663, !llvm.loop !997

1663:                                             ; preds = %1653, %1590
  %1664 = phi i32 [ %1593, %1590 ], [ %1659, %1653 ]
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds double, ptr %1253, i64 %1665
  %1667 = load double, ptr %1666, align 8, !tbaa !19
  %1668 = fptosi double %1667 to i8
  %1669 = load i8, ptr %1255, align 1, !tbaa !12
  %1670 = mul i8 %1668, %1668
  %1671 = mul i8 %1670, %1670
  %1672 = add i8 %1671, %1669
  store i8 %1672, ptr %1255, align 1, !tbaa !12
  %1673 = fadd fast double %1592, 1.000000e+00
  %1674 = add nuw nsw i32 %1591, 1
  br i1 %1584, label %1675, label %1722

1675:                                             ; preds = %1663
  %1676 = load i32, ptr %4, align 4, !tbaa !6
  %1677 = load i32, ptr %12, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1676, %1678
  br i1 %1679, label %1699, label %1680

1680:                                             ; preds = %1675
  %1681 = icmp eq i32 %1676, %1678
  br i1 %1681, label %1682, label %1715

1682:                                             ; preds = %1680
  store i32 0, ptr %4, align 4, !tbaa !6
  %1683 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1683, ptr %6, align 4, !tbaa !6
  br i1 %1589, label %1722, label %1684

1684:                                             ; preds = %1682, %1709
  %1685 = phi i64 [ %1713, %1709 ], [ 1, %1682 ]
  %1686 = getelementptr inbounds i32, ptr %4, i64 %1685
  %1687 = load i32, ptr %1686, align 4, !tbaa !6
  %1688 = getelementptr inbounds i32, ptr %12, i64 %1685
  %1689 = load i32, ptr %1688, align 4, !tbaa !6
  %1690 = add nsw i32 %1689, -1
  %1691 = icmp slt i32 %1687, %1690
  br i1 %1691, label %1692, label %1707

1692:                                             ; preds = %1684
  br i1 %1679, label %1699, label %1693

1693:                                             ; preds = %1692
  %1694 = getelementptr inbounds i32, ptr %7, i64 %1685
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1685
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, %1695
  store i32 %1698, ptr %1696, align 4, !tbaa !6
  br label %1717

1699:                                             ; preds = %1675, %1692
  %1700 = phi i32 [ %1687, %1692 ], [ %1676, %1675 ]
  %1701 = phi ptr [ %1686, %1692 ], [ %4, %1675 ]
  %1702 = phi i64 [ %1685, %1692 ], [ 0, %1675 ]
  %1703 = add nsw i32 %1700, 1
  store i32 %1703, ptr %1701, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %7, i64 %1702
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = getelementptr inbounds i32, ptr %6, i64 %1702
  br label %1717

1707:                                             ; preds = %1684
  %1708 = icmp eq i32 %1687, %1690
  br i1 %1708, label %1709, label %1715

1709:                                             ; preds = %1707
  store i32 0, ptr %1686, align 4, !tbaa !6
  %1710 = getelementptr inbounds i32, ptr %8, i64 %1685
  %1711 = load i32, ptr %1710, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %6, i64 %1685
  store i32 %1711, ptr %1712, align 4, !tbaa !6
  %1713 = add nuw nsw i64 %1685, 1
  %1714 = icmp eq i64 %1713, %1587
  br i1 %1714, label %1722, label %1684, !llvm.loop !998

1715:                                             ; preds = %1680, %1707
  %1716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1717:                                             ; preds = %1693, %1699
  %1718 = phi ptr [ %1706, %1699 ], [ %1686, %1693 ]
  %1719 = phi i32 [ %1705, %1699 ], [ 1, %1693 ]
  %1720 = load i32, ptr %1718, align 4, !tbaa !6
  %1721 = add nsw i32 %1720, %1719
  store i32 %1721, ptr %1718, align 4, !tbaa !6
  br label %1722

1722:                                             ; preds = %1709, %1717, %1682, %1663
  %1723 = icmp eq i32 %1674, %5
  br i1 %1723, label %5539, label %1590, !llvm.loop !999

1724:                                             ; preds = %1573, %1861
  %1725 = phi i32 [ 0, %1573 ], [ %1810, %1861 ]
  %1726 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1574, label %1727, label %1796

1727:                                             ; preds = %1724, %1786
  %1728 = phi i32 [ %1795, %1786 ], [ 0, %1724 ]
  %1729 = phi i64 [ %1737, %1786 ], [ %1578, %1724 ]
  %1730 = phi i64 [ %1794, %1786 ], [ %1577, %1724 ]
  %1731 = phi i32 [ %1792, %1786 ], [ %1726, %1724 ]
  %1732 = sub i32 %1576, %1728
  %1733 = tail call i32 @llvm.smin.i32(i32 %1732, i32 0)
  %1734 = sub i32 %1732, %1733
  %1735 = zext i32 %1734 to i64
  %1736 = add nuw nsw i64 %1735, 1
  %1737 = add nsw i64 %1729, -1
  %1738 = icmp ult i32 %1734, 31
  br i1 %1738, label %1774, label %1739

1739:                                             ; preds = %1727
  %1740 = and i64 %1736, 8589934560
  %1741 = sub i64 %1730, %1740
  br label %1742

1742:                                             ; preds = %1742, %1739
  %1743 = phi i64 [ 0, %1739 ], [ %1766, %1742 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1762, %1742 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1763, %1742 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1764, %1742 ]
  %1747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1765, %1742 ]
  %1748 = sub i64 %1730, %1743
  %1749 = getelementptr inbounds i32, ptr %11, i64 %1748
  %1750 = getelementptr inbounds i32, ptr %1749, i64 -7
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !6
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = getelementptr inbounds i32, ptr %1749, i64 -15
  %1754 = load <8 x i32>, ptr %1753, align 4, !tbaa !6
  %1755 = shufflevector <8 x i32> %1754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1756 = getelementptr inbounds i32, ptr %1749, i64 -23
  %1757 = load <8 x i32>, ptr %1756, align 4, !tbaa !6
  %1758 = shufflevector <8 x i32> %1757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1759 = getelementptr inbounds i32, ptr %1749, i64 -31
  %1760 = load <8 x i32>, ptr %1759, align 4, !tbaa !6
  %1761 = shufflevector <8 x i32> %1760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1762 = mul <8 x i32> %1752, %1744
  %1763 = mul <8 x i32> %1755, %1745
  %1764 = mul <8 x i32> %1758, %1746
  %1765 = mul <8 x i32> %1761, %1747
  %1766 = add nuw i64 %1743, 32
  %1767 = icmp eq i64 %1766, %1740
  br i1 %1767, label %1768, label %1742, !llvm.loop !1000

1768:                                             ; preds = %1742
  %1769 = mul <8 x i32> %1763, %1762
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = mul <8 x i32> %1765, %1770
  %1772 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1771)
  %1773 = icmp eq i64 %1736, %1740
  br i1 %1773, label %1786, label %1774

1774:                                             ; preds = %1727, %1768
  %1775 = phi i64 [ %1730, %1727 ], [ %1741, %1768 ]
  %1776 = phi i32 [ 1, %1727 ], [ %1772, %1768 ]
  br label %1777

1777:                                             ; preds = %1774, %1777
  %1778 = phi i64 [ %1783, %1777 ], [ %1775, %1774 ]
  %1779 = phi i32 [ %1782, %1777 ], [ %1776, %1774 ]
  %1780 = getelementptr inbounds i32, ptr %11, i64 %1778
  %1781 = load i32, ptr %1780, align 4, !tbaa !6
  %1782 = mul nsw i32 %1781, %1779
  %1783 = add nsw i64 %1778, -1
  %1784 = trunc i64 %1778 to i32
  %1785 = icmp sgt i32 %1784, 0
  br i1 %1785, label %1777, label %1786, !llvm.loop !1001

1786:                                             ; preds = %1777, %1768
  %1787 = phi i32 [ %1772, %1768 ], [ %1782, %1777 ]
  %1788 = and i64 %1737, 4294967295
  %1789 = getelementptr inbounds i32, ptr %6, i64 %1788
  %1790 = load i32, ptr %1789, align 4, !tbaa !6
  %1791 = mul nsw i32 %1790, %1787
  %1792 = add nsw i32 %1791, %1731
  %1793 = icmp sgt i64 %1729, 2
  %1794 = add nsw i64 %1730, -1
  %1795 = add i32 %1728, 1
  br i1 %1793, label %1727, label %1796, !llvm.loop !1002

1796:                                             ; preds = %1786, %1724
  %1797 = phi i32 [ %1726, %1724 ], [ %1792, %1786 ]
  %1798 = icmp slt i32 %1797, %5
  br i1 %1798, label %1801, label %1799

1799:                                             ; preds = %1796
  %1800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1801:                                             ; preds = %1796
  %1802 = sext i32 %1797 to i64
  %1803 = getelementptr inbounds double, ptr %1253, i64 %1802
  %1804 = load double, ptr %1803, align 8, !tbaa !19
  %1805 = fptosi double %1804 to i8
  %1806 = load i8, ptr %1255, align 1, !tbaa !12
  %1807 = mul i8 %1805, %1805
  %1808 = mul i8 %1807, %1807
  %1809 = add i8 %1808, %1806
  store i8 %1809, ptr %1255, align 1, !tbaa !12
  %1810 = add nuw nsw i32 %1725, 1
  br i1 %1575, label %1811, label %1861

1811:                                             ; preds = %1801
  %1812 = load i32, ptr %4, align 4, !tbaa !6
  %1813 = load i32, ptr %12, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1812, %1814
  br i1 %1815, label %1838, label %1816

1816:                                             ; preds = %1811
  %1817 = icmp eq i32 %1812, %1814
  br i1 %1817, label %1818, label %1854

1818:                                             ; preds = %1816
  store i32 0, ptr %4, align 4, !tbaa !6
  %1819 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1819, ptr %6, align 4, !tbaa !6
  br i1 %1580, label %1861, label %1820

1820:                                             ; preds = %1818, %1848
  %1821 = phi i64 [ %1852, %1848 ], [ 1, %1818 ]
  %1822 = getelementptr inbounds i32, ptr %4, i64 %1821
  %1823 = load i32, ptr %1822, align 4, !tbaa !6
  %1824 = getelementptr inbounds i32, ptr %12, i64 %1821
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = add nsw i32 %1825, -1
  %1827 = icmp slt i32 %1823, %1826
  br i1 %1827, label %1828, label %1846

1828:                                             ; preds = %1820
  br i1 %1815, label %1838, label %1829

1829:                                             ; preds = %1828
  %1830 = shl i64 %1821, 32
  %1831 = add i64 %1830, -4294967296
  %1832 = ashr exact i64 %1831, 32
  %1833 = getelementptr inbounds i32, ptr %7, i64 %1832
  %1834 = load i32, ptr %1833, align 4, !tbaa !6
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1821
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = add nsw i32 %1836, %1834
  store i32 %1837, ptr %1835, align 4, !tbaa !6
  br label %1856

1838:                                             ; preds = %1811, %1828
  %1839 = phi i32 [ %1823, %1828 ], [ %1812, %1811 ]
  %1840 = phi ptr [ %1822, %1828 ], [ %4, %1811 ]
  %1841 = phi i64 [ %1821, %1828 ], [ 0, %1811 ]
  %1842 = add nsw i32 %1839, 1
  store i32 %1842, ptr %1840, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = getelementptr inbounds i32, ptr %6, i64 %1841
  br label %1856

1846:                                             ; preds = %1820
  %1847 = icmp eq i32 %1823, %1826
  br i1 %1847, label %1848, label %1854

1848:                                             ; preds = %1846
  store i32 0, ptr %1822, align 4, !tbaa !6
  %1849 = getelementptr inbounds i32, ptr %8, i64 %1821
  %1850 = load i32, ptr %1849, align 4, !tbaa !6
  %1851 = getelementptr inbounds i32, ptr %6, i64 %1821
  store i32 %1850, ptr %1851, align 4, !tbaa !6
  %1852 = add nuw nsw i64 %1821, 1
  %1853 = icmp eq i64 %1852, %1578
  br i1 %1853, label %1861, label %1820, !llvm.loop !1003

1854:                                             ; preds = %1816, %1846
  %1855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1856:                                             ; preds = %1829, %1838
  %1857 = phi ptr [ %1845, %1838 ], [ %1822, %1829 ]
  %1858 = phi i32 [ %1844, %1838 ], [ 1, %1829 ]
  %1859 = load i32, ptr %1857, align 4, !tbaa !6
  %1860 = add nsw i32 %1859, %1858
  store i32 %1860, ptr %1857, align 4, !tbaa !6
  br label %1861

1861:                                             ; preds = %1848, %1856, %1818, %1801
  %1862 = icmp eq i32 %1810, %5
  br i1 %1862, label %5539, label %1724, !llvm.loop !1004

1863:                                             ; preds = %1262
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

1865:                                             ; preds = %18
  %1866 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1867 = load ptr, ptr %1866, align 8, !tbaa !10
  %1868 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1869 = load ptr, ptr %1868, align 8, !tbaa !10
  store i16 0, ptr %1869, align 2, !tbaa !79
  %1870 = icmp eq i32 %13, 0
  br i1 %1870, label %1871, label %1876

1871:                                             ; preds = %1865
  %1872 = load double, ptr %1867, align 8, !tbaa !19
  %1873 = fptosi double %1872 to i16
  %1874 = mul i16 %1873, %1873
  %1875 = mul i16 %1874, %1874
  store i16 %1875, ptr %1869, align 2, !tbaa !79
  br label %5539

1876:                                             ; preds = %1865
  switch i32 %1, label %2478 [
    i32 1, label %1877
    i32 0, label %2182
  ]

1877:                                             ; preds = %1876
  %1878 = getelementptr inbounds i32, ptr %3, i64 %19
  %1879 = load i32, ptr %1878, align 4, !tbaa !6
  %1880 = icmp eq i32 %1879, 0
  %1881 = icmp sgt i32 %5, 0
  br i1 %1880, label %1891, label %1882

1882:                                             ; preds = %1877
  br i1 %1881, label %1883, label %5539

1883:                                             ; preds = %1882
  %1884 = icmp sgt i32 %13, 1
  %1885 = icmp sgt i32 %13, 0
  %1886 = add i32 %13, -2
  %1887 = zext i32 %1886 to i64
  %1888 = zext i32 %13 to i64
  %1889 = add nuw i32 %5, 1
  %1890 = icmp eq i32 %13, 1
  br label %2040

1891:                                             ; preds = %1877
  br i1 %1881, label %1892, label %5539

1892:                                             ; preds = %1891
  %1893 = icmp sgt i32 %13, 1
  %1894 = icmp sgt i32 %13, 0
  %1895 = add i32 %13, -2
  %1896 = zext i32 %1895 to i64
  %1897 = zext i32 %13 to i64
  %1898 = add nuw i32 %5, 1
  %1899 = icmp eq i32 %13, 1
  br label %1900

1900:                                             ; preds = %1892, %2038
  %1901 = phi i16 [ 0, %1892 ], [ %1988, %2038 ]
  %1902 = phi i32 [ 0, %1892 ], [ %1990, %2038 ]
  %1903 = phi double [ 0.000000e+00, %1892 ], [ %1989, %2038 ]
  %1904 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1893, label %1905, label %1974

1905:                                             ; preds = %1900, %1964
  %1906 = phi i32 [ %1973, %1964 ], [ 0, %1900 ]
  %1907 = phi i64 [ %1915, %1964 ], [ %1897, %1900 ]
  %1908 = phi i64 [ %1972, %1964 ], [ %1896, %1900 ]
  %1909 = phi i32 [ %1970, %1964 ], [ %1904, %1900 ]
  %1910 = sub i32 %1895, %1906
  %1911 = tail call i32 @llvm.smin.i32(i32 %1910, i32 0)
  %1912 = sub i32 %1910, %1911
  %1913 = zext i32 %1912 to i64
  %1914 = add nuw nsw i64 %1913, 1
  %1915 = add nsw i64 %1907, -1
  %1916 = icmp ult i32 %1912, 31
  br i1 %1916, label %1952, label %1917

1917:                                             ; preds = %1905
  %1918 = and i64 %1914, 8589934560
  %1919 = sub i64 %1908, %1918
  br label %1920

1920:                                             ; preds = %1920, %1917
  %1921 = phi i64 [ 0, %1917 ], [ %1944, %1920 ]
  %1922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1940, %1920 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1941, %1920 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1942, %1920 ]
  %1925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1943, %1920 ]
  %1926 = sub i64 %1908, %1921
  %1927 = getelementptr inbounds i32, ptr %9, i64 %1926
  %1928 = getelementptr inbounds i32, ptr %1927, i64 -7
  %1929 = load <8 x i32>, ptr %1928, align 4, !tbaa !6
  %1930 = shufflevector <8 x i32> %1929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1931 = getelementptr inbounds i32, ptr %1927, i64 -15
  %1932 = load <8 x i32>, ptr %1931, align 4, !tbaa !6
  %1933 = shufflevector <8 x i32> %1932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1934 = getelementptr inbounds i32, ptr %1927, i64 -23
  %1935 = load <8 x i32>, ptr %1934, align 4, !tbaa !6
  %1936 = shufflevector <8 x i32> %1935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1937 = getelementptr inbounds i32, ptr %1927, i64 -31
  %1938 = load <8 x i32>, ptr %1937, align 4, !tbaa !6
  %1939 = shufflevector <8 x i32> %1938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1940 = mul <8 x i32> %1930, %1922
  %1941 = mul <8 x i32> %1933, %1923
  %1942 = mul <8 x i32> %1936, %1924
  %1943 = mul <8 x i32> %1939, %1925
  %1944 = add nuw i64 %1921, 32
  %1945 = icmp eq i64 %1944, %1918
  br i1 %1945, label %1946, label %1920, !llvm.loop !1005

1946:                                             ; preds = %1920
  %1947 = mul <8 x i32> %1941, %1940
  %1948 = mul <8 x i32> %1942, %1947
  %1949 = mul <8 x i32> %1943, %1948
  %1950 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1949)
  %1951 = icmp eq i64 %1914, %1918
  br i1 %1951, label %1964, label %1952

1952:                                             ; preds = %1905, %1946
  %1953 = phi i64 [ %1908, %1905 ], [ %1919, %1946 ]
  %1954 = phi i32 [ 1, %1905 ], [ %1950, %1946 ]
  br label %1955

1955:                                             ; preds = %1952, %1955
  %1956 = phi i64 [ %1961, %1955 ], [ %1953, %1952 ]
  %1957 = phi i32 [ %1960, %1955 ], [ %1954, %1952 ]
  %1958 = getelementptr inbounds i32, ptr %9, i64 %1956
  %1959 = load i32, ptr %1958, align 4, !tbaa !6
  %1960 = mul nsw i32 %1959, %1957
  %1961 = add nsw i64 %1956, -1
  %1962 = trunc i64 %1956 to i32
  %1963 = icmp sgt i32 %1962, 0
  br i1 %1963, label %1955, label %1964, !llvm.loop !1006

1964:                                             ; preds = %1955, %1946
  %1965 = phi i32 [ %1950, %1946 ], [ %1960, %1955 ]
  %1966 = and i64 %1915, 4294967295
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1966
  %1968 = load i32, ptr %1967, align 4, !tbaa !6
  %1969 = mul nsw i32 %1968, %1965
  %1970 = add nsw i32 %1969, %1909
  %1971 = icmp sgt i64 %1907, 2
  %1972 = add nsw i64 %1908, -1
  %1973 = add i32 %1906, 1
  br i1 %1971, label %1905, label %1974, !llvm.loop !1007

1974:                                             ; preds = %1964, %1900
  %1975 = phi i32 [ %1904, %1900 ], [ %1970, %1964 ]
  %1976 = sext i32 %1975 to i64
  %1977 = getelementptr inbounds double, ptr %2, i64 %1976
  %1978 = load double, ptr %1977, align 8, !tbaa !19
  %1979 = getelementptr inbounds double, ptr %1867, i64 %1976
  %1980 = load double, ptr %1979, align 8, !tbaa !19
  %1981 = fptosi double %1980 to i16
  %1982 = sitofp i16 %1901 to double
  %1983 = sitofp i16 %1981 to double
  %1984 = fmul fast double %1978, %1983
  %1985 = fmul fast double %1984, %1984
  %1986 = fmul fast double %1985, %1985
  %1987 = fadd fast double %1986, %1982
  %1988 = fptosi double %1987 to i16
  %1989 = fadd fast double %1978, %1903
  %1990 = add nuw nsw i32 %1902, 1
  br i1 %1894, label %1991, label %2038

1991:                                             ; preds = %1974
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1899, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1897
  br i1 %2030, label %2038, label %2000, !llvm.loop !1008

2031:                                             ; preds = %1996, %2023
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1974
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5533, label %1900, !llvm.loop !1009

2040:                                             ; preds = %1883, %2180
  %2041 = phi i16 [ 0, %1883 ], [ %2128, %2180 ]
  %2042 = phi i32 [ 0, %1883 ], [ %2129, %2180 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1888, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1887, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1886, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !1010

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !1011

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !1012

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds double, ptr %1867, i64 %2119
  %2121 = load double, ptr %2120, align 8, !tbaa !19
  %2122 = fptosi double %2121 to i16
  %2123 = sitofp i16 %2041 to double
  %2124 = sitofp i16 %2122 to double
  %2125 = fmul fast double %2124, %2124
  %2126 = fmul fast double %2125, %2125
  %2127 = fadd fast double %2126, %2123
  %2128 = fptosi double %2127 to i16
  store i16 %2128, ptr %1869, align 2, !tbaa !79
  %2129 = add nuw nsw i32 %2042, 1
  br i1 %1885, label %2130, label %2180

2130:                                             ; preds = %2118
  %2131 = load i32, ptr %4, align 4, !tbaa !6
  %2132 = load i32, ptr %12, align 4, !tbaa !6
  %2133 = add nsw i32 %2132, -1
  %2134 = icmp slt i32 %2131, %2133
  br i1 %2134, label %2157, label %2135

2135:                                             ; preds = %2130
  %2136 = icmp eq i32 %2131, %2133
  br i1 %2136, label %2137, label %2173

2137:                                             ; preds = %2135
  store i32 0, ptr %4, align 4, !tbaa !6
  %2138 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2138, ptr %6, align 4, !tbaa !6
  br i1 %1890, label %2180, label %2139

2139:                                             ; preds = %2137, %2167
  %2140 = phi i64 [ %2171, %2167 ], [ 1, %2137 ]
  %2141 = getelementptr inbounds i32, ptr %4, i64 %2140
  %2142 = load i32, ptr %2141, align 4, !tbaa !6
  %2143 = getelementptr inbounds i32, ptr %12, i64 %2140
  %2144 = load i32, ptr %2143, align 4, !tbaa !6
  %2145 = add nsw i32 %2144, -1
  %2146 = icmp slt i32 %2142, %2145
  br i1 %2146, label %2147, label %2165

2147:                                             ; preds = %2139
  br i1 %2134, label %2157, label %2148

2148:                                             ; preds = %2147
  %2149 = shl i64 %2140, 32
  %2150 = add i64 %2149, -4294967296
  %2151 = ashr exact i64 %2150, 32
  %2152 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %6, i64 %2140
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, %2153
  store i32 %2156, ptr %2154, align 4, !tbaa !6
  br label %2175

2157:                                             ; preds = %2130, %2147
  %2158 = phi i32 [ %2142, %2147 ], [ %2131, %2130 ]
  %2159 = phi ptr [ %2141, %2147 ], [ %4, %2130 ]
  %2160 = phi i64 [ %2140, %2147 ], [ 0, %2130 ]
  %2161 = add nsw i32 %2158, 1
  store i32 %2161, ptr %2159, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %7, i64 %2160
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2160
  br label %2175

2165:                                             ; preds = %2139
  %2166 = icmp eq i32 %2142, %2145
  br i1 %2166, label %2167, label %2173

2167:                                             ; preds = %2165
  store i32 0, ptr %2141, align 4, !tbaa !6
  %2168 = getelementptr inbounds i32, ptr %8, i64 %2140
  %2169 = load i32, ptr %2168, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %6, i64 %2140
  store i32 %2169, ptr %2170, align 4, !tbaa !6
  %2171 = add nuw nsw i64 %2140, 1
  %2172 = icmp eq i64 %2171, %1888
  br i1 %2172, label %2180, label %2139, !llvm.loop !1013

2173:                                             ; preds = %2135, %2165
  %2174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2175:                                             ; preds = %2148, %2157
  %2176 = phi ptr [ %2164, %2157 ], [ %2141, %2148 ]
  %2177 = phi i32 [ %2163, %2157 ], [ 1, %2148 ]
  %2178 = load i32, ptr %2176, align 4, !tbaa !6
  %2179 = add nsw i32 %2178, %2177
  store i32 %2179, ptr %2176, align 4, !tbaa !6
  br label %2180

2180:                                             ; preds = %2167, %2175, %2137, %2118
  %2181 = icmp eq i32 %2129, %5
  br i1 %2181, label %5539, label %2040, !llvm.loop !1014

2182:                                             ; preds = %1876
  %2183 = getelementptr inbounds i32, ptr %3, i64 %19
  %2184 = load i32, ptr %2183, align 4, !tbaa !6
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp sgt i32 %5, 0
  br i1 %2185, label %2196, label %2187

2187:                                             ; preds = %2182
  br i1 %2186, label %2188, label %5539

2188:                                             ; preds = %2187
  %2189 = icmp sgt i32 %13, 1
  %2190 = icmp sgt i32 %13, 0
  %2191 = add i32 %13, -2
  %2192 = zext i32 %2191 to i64
  %2193 = zext i32 %13 to i64
  %2194 = add nuw i32 %5, 1
  %2195 = icmp eq i32 %13, 1
  br label %2339

2196:                                             ; preds = %2182
  br i1 %2186, label %2197, label %5539

2197:                                             ; preds = %2196
  %2198 = icmp sgt i32 %13, 1
  %2199 = icmp sgt i32 %13, 0
  %2200 = add i32 %13, -2
  %2201 = zext i32 %2200 to i64
  %2202 = zext i32 %13 to i64
  %2203 = add nuw i32 %5, 1
  %2204 = icmp eq i32 %13, 1
  br label %2205

2205:                                             ; preds = %2197, %2337
  %2206 = phi i16 [ 0, %2197 ], [ %2287, %2337 ]
  %2207 = phi i32 [ 0, %2197 ], [ %2289, %2337 ]
  %2208 = phi double [ 0.000000e+00, %2197 ], [ %2288, %2337 ]
  %2209 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2198, label %2210, label %2279

2210:                                             ; preds = %2205, %2269
  %2211 = phi i32 [ %2278, %2269 ], [ 0, %2205 ]
  %2212 = phi i64 [ %2220, %2269 ], [ %2202, %2205 ]
  %2213 = phi i64 [ %2277, %2269 ], [ %2201, %2205 ]
  %2214 = phi i32 [ %2275, %2269 ], [ %2209, %2205 ]
  %2215 = sub i32 %2200, %2211
  %2216 = tail call i32 @llvm.smin.i32(i32 %2215, i32 0)
  %2217 = sub i32 %2215, %2216
  %2218 = zext i32 %2217 to i64
  %2219 = add nuw nsw i64 %2218, 1
  %2220 = add nsw i64 %2212, -1
  %2221 = icmp ult i32 %2217, 31
  br i1 %2221, label %2257, label %2222

2222:                                             ; preds = %2210
  %2223 = and i64 %2219, 8589934560
  %2224 = sub i64 %2213, %2223
  br label %2225

2225:                                             ; preds = %2225, %2222
  %2226 = phi i64 [ 0, %2222 ], [ %2249, %2225 ]
  %2227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2245, %2225 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2246, %2225 ]
  %2229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2247, %2225 ]
  %2230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2248, %2225 ]
  %2231 = sub i64 %2213, %2226
  %2232 = getelementptr inbounds i32, ptr %9, i64 %2231
  %2233 = getelementptr inbounds i32, ptr %2232, i64 -7
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !6
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2232, i64 -15
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !6
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = getelementptr inbounds i32, ptr %2232, i64 -23
  %2240 = load <8 x i32>, ptr %2239, align 4, !tbaa !6
  %2241 = shufflevector <8 x i32> %2240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2242 = getelementptr inbounds i32, ptr %2232, i64 -31
  %2243 = load <8 x i32>, ptr %2242, align 4, !tbaa !6
  %2244 = shufflevector <8 x i32> %2243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2245 = mul <8 x i32> %2235, %2227
  %2246 = mul <8 x i32> %2238, %2228
  %2247 = mul <8 x i32> %2241, %2229
  %2248 = mul <8 x i32> %2244, %2230
  %2249 = add nuw i64 %2226, 32
  %2250 = icmp eq i64 %2249, %2223
  br i1 %2250, label %2251, label %2225, !llvm.loop !1015

2251:                                             ; preds = %2225
  %2252 = mul <8 x i32> %2246, %2245
  %2253 = mul <8 x i32> %2247, %2252
  %2254 = mul <8 x i32> %2248, %2253
  %2255 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2254)
  %2256 = icmp eq i64 %2219, %2223
  br i1 %2256, label %2269, label %2257

2257:                                             ; preds = %2210, %2251
  %2258 = phi i64 [ %2213, %2210 ], [ %2224, %2251 ]
  %2259 = phi i32 [ 1, %2210 ], [ %2255, %2251 ]
  br label %2260

2260:                                             ; preds = %2257, %2260
  %2261 = phi i64 [ %2266, %2260 ], [ %2258, %2257 ]
  %2262 = phi i32 [ %2265, %2260 ], [ %2259, %2257 ]
  %2263 = getelementptr inbounds i32, ptr %9, i64 %2261
  %2264 = load i32, ptr %2263, align 4, !tbaa !6
  %2265 = mul nsw i32 %2264, %2262
  %2266 = add nsw i64 %2261, -1
  %2267 = trunc i64 %2261 to i32
  %2268 = icmp sgt i32 %2267, 0
  br i1 %2268, label %2260, label %2269, !llvm.loop !1016

2269:                                             ; preds = %2260, %2251
  %2270 = phi i32 [ %2255, %2251 ], [ %2265, %2260 ]
  %2271 = and i64 %2220, 4294967295
  %2272 = getelementptr inbounds i32, ptr %6, i64 %2271
  %2273 = load i32, ptr %2272, align 4, !tbaa !6
  %2274 = mul nsw i32 %2273, %2270
  %2275 = add nsw i32 %2274, %2214
  %2276 = icmp sgt i64 %2212, 2
  %2277 = add nsw i64 %2213, -1
  %2278 = add i32 %2211, 1
  br i1 %2276, label %2210, label %2279, !llvm.loop !1017

2279:                                             ; preds = %2269, %2205
  %2280 = phi i32 [ %2209, %2205 ], [ %2275, %2269 ]
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds double, ptr %1867, i64 %2281
  %2283 = load double, ptr %2282, align 8, !tbaa !19
  %2284 = fptosi double %2283 to i16
  %2285 = mul i16 %2284, %2284
  %2286 = mul i16 %2285, %2285
  %2287 = add i16 %2286, %2206
  %2288 = fadd fast double %2208, 1.000000e+00
  %2289 = add nuw nsw i32 %2207, 1
  br i1 %2199, label %2290, label %2337

2290:                                             ; preds = %2279
  %2291 = load i32, ptr %4, align 4, !tbaa !6
  %2292 = load i32, ptr %12, align 4, !tbaa !6
  %2293 = add nsw i32 %2292, -1
  %2294 = icmp slt i32 %2291, %2293
  br i1 %2294, label %2314, label %2295

2295:                                             ; preds = %2290
  %2296 = icmp eq i32 %2291, %2293
  br i1 %2296, label %2297, label %2330

2297:                                             ; preds = %2295
  store i32 0, ptr %4, align 4, !tbaa !6
  %2298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2298, ptr %6, align 4, !tbaa !6
  br i1 %2204, label %2337, label %2299

2299:                                             ; preds = %2297, %2324
  %2300 = phi i64 [ %2328, %2324 ], [ 1, %2297 ]
  %2301 = getelementptr inbounds i32, ptr %4, i64 %2300
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %12, i64 %2300
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, -1
  %2306 = icmp slt i32 %2302, %2305
  br i1 %2306, label %2307, label %2322

2307:                                             ; preds = %2299
  br i1 %2294, label %2314, label %2308

2308:                                             ; preds = %2307
  %2309 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2310 = load i32, ptr %2309, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2300
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = add nsw i32 %2312, %2310
  store i32 %2313, ptr %2311, align 4, !tbaa !6
  br label %2332

2314:                                             ; preds = %2290, %2307
  %2315 = phi i32 [ %2302, %2307 ], [ %2291, %2290 ]
  %2316 = phi ptr [ %2301, %2307 ], [ %4, %2290 ]
  %2317 = phi i64 [ %2300, %2307 ], [ 0, %2290 ]
  %2318 = add nsw i32 %2315, 1
  store i32 %2318, ptr %2316, align 4, !tbaa !6
  %2319 = getelementptr inbounds i32, ptr %7, i64 %2317
  %2320 = load i32, ptr %2319, align 4, !tbaa !6
  %2321 = getelementptr inbounds i32, ptr %6, i64 %2317
  br label %2332

2322:                                             ; preds = %2299
  %2323 = icmp eq i32 %2302, %2305
  br i1 %2323, label %2324, label %2330

2324:                                             ; preds = %2322
  store i32 0, ptr %2301, align 4, !tbaa !6
  %2325 = getelementptr inbounds i32, ptr %8, i64 %2300
  %2326 = load i32, ptr %2325, align 4, !tbaa !6
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2300
  store i32 %2326, ptr %2327, align 4, !tbaa !6
  %2328 = add nuw nsw i64 %2300, 1
  %2329 = icmp eq i64 %2328, %2202
  br i1 %2329, label %2337, label %2299, !llvm.loop !1018

2330:                                             ; preds = %2295, %2322
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  %2331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2332:                                             ; preds = %2308, %2314
  %2333 = phi ptr [ %2321, %2314 ], [ %2301, %2308 ]
  %2334 = phi i32 [ %2320, %2314 ], [ 1, %2308 ]
  %2335 = load i32, ptr %2333, align 4, !tbaa !6
  %2336 = add nsw i32 %2335, %2334
  store i32 %2336, ptr %2333, align 4, !tbaa !6
  br label %2337

2337:                                             ; preds = %2324, %2332, %2297, %2279
  %2338 = icmp eq i32 %2289, %5
  br i1 %2338, label %5534, label %2205, !llvm.loop !1019

2339:                                             ; preds = %2188, %2476
  %2340 = phi i16 [ 0, %2188 ], [ %2424, %2476 ]
  %2341 = phi i32 [ 0, %2188 ], [ %2425, %2476 ]
  %2342 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2189, label %2343, label %2412

2343:                                             ; preds = %2339, %2402
  %2344 = phi i32 [ %2411, %2402 ], [ 0, %2339 ]
  %2345 = phi i64 [ %2353, %2402 ], [ %2193, %2339 ]
  %2346 = phi i64 [ %2410, %2402 ], [ %2192, %2339 ]
  %2347 = phi i32 [ %2408, %2402 ], [ %2342, %2339 ]
  %2348 = sub i32 %2191, %2344
  %2349 = tail call i32 @llvm.smin.i32(i32 %2348, i32 0)
  %2350 = sub i32 %2348, %2349
  %2351 = zext i32 %2350 to i64
  %2352 = add nuw nsw i64 %2351, 1
  %2353 = add nsw i64 %2345, -1
  %2354 = icmp ult i32 %2350, 31
  br i1 %2354, label %2390, label %2355

2355:                                             ; preds = %2343
  %2356 = and i64 %2352, 8589934560
  %2357 = sub i64 %2346, %2356
  br label %2358

2358:                                             ; preds = %2358, %2355
  %2359 = phi i64 [ 0, %2355 ], [ %2382, %2358 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2378, %2358 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2379, %2358 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2380, %2358 ]
  %2363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2381, %2358 ]
  %2364 = sub i64 %2346, %2359
  %2365 = getelementptr inbounds i32, ptr %11, i64 %2364
  %2366 = getelementptr inbounds i32, ptr %2365, i64 -7
  %2367 = load <8 x i32>, ptr %2366, align 4, !tbaa !6
  %2368 = shufflevector <8 x i32> %2367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2369 = getelementptr inbounds i32, ptr %2365, i64 -15
  %2370 = load <8 x i32>, ptr %2369, align 4, !tbaa !6
  %2371 = shufflevector <8 x i32> %2370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2372 = getelementptr inbounds i32, ptr %2365, i64 -23
  %2373 = load <8 x i32>, ptr %2372, align 4, !tbaa !6
  %2374 = shufflevector <8 x i32> %2373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2375 = getelementptr inbounds i32, ptr %2365, i64 -31
  %2376 = load <8 x i32>, ptr %2375, align 4, !tbaa !6
  %2377 = shufflevector <8 x i32> %2376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2378 = mul <8 x i32> %2368, %2360
  %2379 = mul <8 x i32> %2371, %2361
  %2380 = mul <8 x i32> %2374, %2362
  %2381 = mul <8 x i32> %2377, %2363
  %2382 = add nuw i64 %2359, 32
  %2383 = icmp eq i64 %2382, %2356
  br i1 %2383, label %2384, label %2358, !llvm.loop !1020

2384:                                             ; preds = %2358
  %2385 = mul <8 x i32> %2379, %2378
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = mul <8 x i32> %2381, %2386
  %2388 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2387)
  %2389 = icmp eq i64 %2352, %2356
  br i1 %2389, label %2402, label %2390

2390:                                             ; preds = %2343, %2384
  %2391 = phi i64 [ %2346, %2343 ], [ %2357, %2384 ]
  %2392 = phi i32 [ 1, %2343 ], [ %2388, %2384 ]
  br label %2393

2393:                                             ; preds = %2390, %2393
  %2394 = phi i64 [ %2399, %2393 ], [ %2391, %2390 ]
  %2395 = phi i32 [ %2398, %2393 ], [ %2392, %2390 ]
  %2396 = getelementptr inbounds i32, ptr %11, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !6
  %2398 = mul nsw i32 %2397, %2395
  %2399 = add nsw i64 %2394, -1
  %2400 = trunc i64 %2394 to i32
  %2401 = icmp sgt i32 %2400, 0
  br i1 %2401, label %2393, label %2402, !llvm.loop !1021

2402:                                             ; preds = %2393, %2384
  %2403 = phi i32 [ %2388, %2384 ], [ %2398, %2393 ]
  %2404 = and i64 %2353, 4294967295
  %2405 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !6
  %2407 = mul nsw i32 %2406, %2403
  %2408 = add nsw i32 %2407, %2347
  %2409 = icmp sgt i64 %2345, 2
  %2410 = add nsw i64 %2346, -1
  %2411 = add i32 %2344, 1
  br i1 %2409, label %2343, label %2412, !llvm.loop !1022

2412:                                             ; preds = %2402, %2339
  %2413 = phi i32 [ %2342, %2339 ], [ %2408, %2402 ]
  %2414 = icmp slt i32 %2413, %5
  br i1 %2414, label %2417, label %2415

2415:                                             ; preds = %2412
  %2416 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2417:                                             ; preds = %2412
  %2418 = sext i32 %2413 to i64
  %2419 = getelementptr inbounds double, ptr %1867, i64 %2418
  %2420 = load double, ptr %2419, align 8, !tbaa !19
  %2421 = fptosi double %2420 to i16
  %2422 = mul i16 %2421, %2421
  %2423 = mul i16 %2422, %2422
  %2424 = add i16 %2423, %2340
  store i16 %2424, ptr %1869, align 2, !tbaa !79
  %2425 = add nuw nsw i32 %2341, 1
  br i1 %2190, label %2426, label %2476

2426:                                             ; preds = %2417
  %2427 = load i32, ptr %4, align 4, !tbaa !6
  %2428 = load i32, ptr %12, align 4, !tbaa !6
  %2429 = add nsw i32 %2428, -1
  %2430 = icmp slt i32 %2427, %2429
  br i1 %2430, label %2453, label %2431

2431:                                             ; preds = %2426
  %2432 = icmp eq i32 %2427, %2429
  br i1 %2432, label %2433, label %2469

2433:                                             ; preds = %2431
  store i32 0, ptr %4, align 4, !tbaa !6
  %2434 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2434, ptr %6, align 4, !tbaa !6
  br i1 %2195, label %2476, label %2435

2435:                                             ; preds = %2433, %2463
  %2436 = phi i64 [ %2467, %2463 ], [ 1, %2433 ]
  %2437 = getelementptr inbounds i32, ptr %4, i64 %2436
  %2438 = load i32, ptr %2437, align 4, !tbaa !6
  %2439 = getelementptr inbounds i32, ptr %12, i64 %2436
  %2440 = load i32, ptr %2439, align 4, !tbaa !6
  %2441 = add nsw i32 %2440, -1
  %2442 = icmp slt i32 %2438, %2441
  br i1 %2442, label %2443, label %2461

2443:                                             ; preds = %2435
  br i1 %2430, label %2453, label %2444

2444:                                             ; preds = %2443
  %2445 = shl i64 %2436, 32
  %2446 = add i64 %2445, -4294967296
  %2447 = ashr exact i64 %2446, 32
  %2448 = getelementptr inbounds i32, ptr %7, i64 %2447
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2436
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = add nsw i32 %2451, %2449
  store i32 %2452, ptr %2450, align 4, !tbaa !6
  br label %2471

2453:                                             ; preds = %2426, %2443
  %2454 = phi i32 [ %2438, %2443 ], [ %2427, %2426 ]
  %2455 = phi ptr [ %2437, %2443 ], [ %4, %2426 ]
  %2456 = phi i64 [ %2436, %2443 ], [ 0, %2426 ]
  %2457 = add nsw i32 %2454, 1
  store i32 %2457, ptr %2455, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %7, i64 %2456
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = getelementptr inbounds i32, ptr %6, i64 %2456
  br label %2471

2461:                                             ; preds = %2435
  %2462 = icmp eq i32 %2438, %2441
  br i1 %2462, label %2463, label %2469

2463:                                             ; preds = %2461
  store i32 0, ptr %2437, align 4, !tbaa !6
  %2464 = getelementptr inbounds i32, ptr %8, i64 %2436
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2436
  store i32 %2465, ptr %2466, align 4, !tbaa !6
  %2467 = add nuw nsw i64 %2436, 1
  %2468 = icmp eq i64 %2467, %2193
  br i1 %2468, label %2476, label %2435, !llvm.loop !1023

2469:                                             ; preds = %2431, %2461
  %2470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2471:                                             ; preds = %2444, %2453
  %2472 = phi ptr [ %2460, %2453 ], [ %2437, %2444 ]
  %2473 = phi i32 [ %2459, %2453 ], [ 1, %2444 ]
  %2474 = load i32, ptr %2472, align 4, !tbaa !6
  %2475 = add nsw i32 %2474, %2473
  store i32 %2475, ptr %2472, align 4, !tbaa !6
  br label %2476

2476:                                             ; preds = %2463, %2471, %2433, %2417
  %2477 = icmp eq i32 %2425, %5
  br i1 %2477, label %5539, label %2339, !llvm.loop !1024

2478:                                             ; preds = %1876
  %2479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

2480:                                             ; preds = %18
  %2481 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !10
  %2483 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2484 = load ptr, ptr %2483, align 8, !tbaa !10
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2485 = icmp eq i32 %13, 0
  br i1 %2485, label %2486, label %2491

2486:                                             ; preds = %2480
  %2487 = load double, ptr %2482, align 8, !tbaa !19
  %2488 = fptosi double %2487 to i32
  %2489 = mul i32 %2488, %2488
  %2490 = mul i32 %2489, %2489
  store i32 %2490, ptr %2484, align 4, !tbaa !6
  br label %5539

2491:                                             ; preds = %2480
  switch i32 %1, label %3093 [
    i32 1, label %2492
    i32 0, label %2797
  ]

2492:                                             ; preds = %2491
  %2493 = getelementptr inbounds i32, ptr %3, i64 %19
  %2494 = load i32, ptr %2493, align 4, !tbaa !6
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp sgt i32 %5, 0
  br i1 %2495, label %2506, label %2497

2497:                                             ; preds = %2492
  br i1 %2496, label %2498, label %5539

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2655

2506:                                             ; preds = %2492
  br i1 %2496, label %2507, label %5539

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2515

2515:                                             ; preds = %2507, %2653
  %2516 = phi i32 [ 0, %2507 ], [ %2605, %2653 ]
  %2517 = phi double [ 0.000000e+00, %2507 ], [ %2604, %2653 ]
  %2518 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2519, label %2588

2519:                                             ; preds = %2515, %2578
  %2520 = phi i32 [ %2587, %2578 ], [ 0, %2515 ]
  %2521 = phi i64 [ %2529, %2578 ], [ %2512, %2515 ]
  %2522 = phi i64 [ %2586, %2578 ], [ %2511, %2515 ]
  %2523 = phi i32 [ %2584, %2578 ], [ %2518, %2515 ]
  %2524 = sub i32 %2510, %2520
  %2525 = tail call i32 @llvm.smin.i32(i32 %2524, i32 0)
  %2526 = sub i32 %2524, %2525
  %2527 = zext i32 %2526 to i64
  %2528 = add nuw nsw i64 %2527, 1
  %2529 = add nsw i64 %2521, -1
  %2530 = icmp ult i32 %2526, 31
  br i1 %2530, label %2566, label %2531

2531:                                             ; preds = %2519
  %2532 = and i64 %2528, 8589934560
  %2533 = sub i64 %2522, %2532
  br label %2534

2534:                                             ; preds = %2534, %2531
  %2535 = phi i64 [ 0, %2531 ], [ %2558, %2534 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2554, %2534 ]
  %2537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2555, %2534 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2556, %2534 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2557, %2534 ]
  %2540 = sub i64 %2522, %2535
  %2541 = getelementptr inbounds i32, ptr %9, i64 %2540
  %2542 = getelementptr inbounds i32, ptr %2541, i64 -7
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2541, i64 -15
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2541, i64 -23
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = getelementptr inbounds i32, ptr %2541, i64 -31
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = mul <8 x i32> %2544, %2536
  %2555 = mul <8 x i32> %2547, %2537
  %2556 = mul <8 x i32> %2550, %2538
  %2557 = mul <8 x i32> %2553, %2539
  %2558 = add nuw i64 %2535, 32
  %2559 = icmp eq i64 %2558, %2532
  br i1 %2559, label %2560, label %2534, !llvm.loop !1025

2560:                                             ; preds = %2534
  %2561 = mul <8 x i32> %2555, %2554
  %2562 = mul <8 x i32> %2556, %2561
  %2563 = mul <8 x i32> %2557, %2562
  %2564 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2563)
  %2565 = icmp eq i64 %2528, %2532
  br i1 %2565, label %2578, label %2566

2566:                                             ; preds = %2519, %2560
  %2567 = phi i64 [ %2522, %2519 ], [ %2533, %2560 ]
  %2568 = phi i32 [ 1, %2519 ], [ %2564, %2560 ]
  br label %2569

2569:                                             ; preds = %2566, %2569
  %2570 = phi i64 [ %2575, %2569 ], [ %2567, %2566 ]
  %2571 = phi i32 [ %2574, %2569 ], [ %2568, %2566 ]
  %2572 = getelementptr inbounds i32, ptr %9, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2571
  %2575 = add nsw i64 %2570, -1
  %2576 = trunc i64 %2570 to i32
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2569, label %2578, !llvm.loop !1026

2578:                                             ; preds = %2569, %2560
  %2579 = phi i32 [ %2564, %2560 ], [ %2574, %2569 ]
  %2580 = and i64 %2529, 4294967295
  %2581 = getelementptr inbounds i32, ptr %6, i64 %2580
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2579
  %2584 = add nsw i32 %2583, %2523
  %2585 = icmp sgt i64 %2521, 2
  %2586 = add nsw i64 %2522, -1
  %2587 = add i32 %2520, 1
  br i1 %2585, label %2519, label %2588, !llvm.loop !1027

2588:                                             ; preds = %2578, %2515
  %2589 = phi i32 [ %2518, %2515 ], [ %2584, %2578 ]
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds double, ptr %2, i64 %2590
  %2592 = load double, ptr %2591, align 8, !tbaa !19
  %2593 = getelementptr inbounds double, ptr %2482, i64 %2590
  %2594 = load double, ptr %2593, align 8, !tbaa !19
  %2595 = fptosi double %2594 to i32
  %2596 = load i32, ptr %2484, align 4, !tbaa !6
  %2597 = sitofp i32 %2596 to double
  %2598 = sitofp i32 %2595 to double
  %2599 = fmul fast double %2592, %2598
  %2600 = fmul fast double %2599, %2599
  %2601 = fmul fast double %2600, %2600
  %2602 = fadd fast double %2601, %2597
  %2603 = fptosi double %2602 to i32
  store i32 %2603, ptr %2484, align 4, !tbaa !6
  %2604 = fadd fast double %2592, %2517
  %2605 = add nuw nsw i32 %2516, 1
  br i1 %2509, label %2606, label %2653

2606:                                             ; preds = %2588
  %2607 = load i32, ptr %4, align 4, !tbaa !6
  %2608 = load i32, ptr %12, align 4, !tbaa !6
  %2609 = add nsw i32 %2608, -1
  %2610 = icmp slt i32 %2607, %2609
  br i1 %2610, label %2630, label %2611

2611:                                             ; preds = %2606
  %2612 = icmp eq i32 %2607, %2609
  br i1 %2612, label %2613, label %2646

2613:                                             ; preds = %2611
  store i32 0, ptr %4, align 4, !tbaa !6
  %2614 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2614, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2653, label %2615

2615:                                             ; preds = %2613, %2640
  %2616 = phi i64 [ %2644, %2640 ], [ 1, %2613 ]
  %2617 = getelementptr inbounds i32, ptr %4, i64 %2616
  %2618 = load i32, ptr %2617, align 4, !tbaa !6
  %2619 = getelementptr inbounds i32, ptr %12, i64 %2616
  %2620 = load i32, ptr %2619, align 4, !tbaa !6
  %2621 = add nsw i32 %2620, -1
  %2622 = icmp slt i32 %2618, %2621
  br i1 %2622, label %2623, label %2638

2623:                                             ; preds = %2615
  br i1 %2610, label %2630, label %2624

2624:                                             ; preds = %2623
  %2625 = getelementptr inbounds i32, ptr %7, i64 %2616
  %2626 = load i32, ptr %2625, align 4, !tbaa !6
  %2627 = getelementptr inbounds i32, ptr %6, i64 %2616
  %2628 = load i32, ptr %2627, align 4, !tbaa !6
  %2629 = add nsw i32 %2628, %2626
  store i32 %2629, ptr %2627, align 4, !tbaa !6
  br label %2648

2630:                                             ; preds = %2606, %2623
  %2631 = phi i32 [ %2618, %2623 ], [ %2607, %2606 ]
  %2632 = phi ptr [ %2617, %2623 ], [ %4, %2606 ]
  %2633 = phi i64 [ %2616, %2623 ], [ 0, %2606 ]
  %2634 = add nsw i32 %2631, 1
  store i32 %2634, ptr %2632, align 4, !tbaa !6
  %2635 = getelementptr inbounds i32, ptr %7, i64 %2633
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2633
  br label %2648

2638:                                             ; preds = %2615
  %2639 = icmp eq i32 %2618, %2621
  br i1 %2639, label %2640, label %2646

2640:                                             ; preds = %2638
  store i32 0, ptr %2617, align 4, !tbaa !6
  %2641 = getelementptr inbounds i32, ptr %8, i64 %2616
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2616
  store i32 %2642, ptr %2643, align 4, !tbaa !6
  %2644 = add nuw nsw i64 %2616, 1
  %2645 = icmp eq i64 %2644, %2512
  br i1 %2645, label %2653, label %2615, !llvm.loop !1028

2646:                                             ; preds = %2611, %2638
  %2647 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2648:                                             ; preds = %2624, %2630
  %2649 = phi ptr [ %2637, %2630 ], [ %2617, %2624 ]
  %2650 = phi i32 [ %2636, %2630 ], [ 1, %2624 ]
  %2651 = load i32, ptr %2649, align 4, !tbaa !6
  %2652 = add nsw i32 %2651, %2650
  store i32 %2652, ptr %2649, align 4, !tbaa !6
  br label %2653

2653:                                             ; preds = %2640, %2648, %2613, %2588
  %2654 = icmp eq i32 %2605, %5
  br i1 %2654, label %5539, label %2515, !llvm.loop !1029

2655:                                             ; preds = %2498, %2795
  %2656 = phi i32 [ 0, %2498 ], [ %2744, %2795 ]
  %2657 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2658, label %2727

2658:                                             ; preds = %2655, %2717
  %2659 = phi i32 [ %2726, %2717 ], [ 0, %2655 ]
  %2660 = phi i64 [ %2668, %2717 ], [ %2503, %2655 ]
  %2661 = phi i64 [ %2725, %2717 ], [ %2502, %2655 ]
  %2662 = phi i32 [ %2723, %2717 ], [ %2657, %2655 ]
  %2663 = sub i32 %2501, %2659
  %2664 = tail call i32 @llvm.smin.i32(i32 %2663, i32 0)
  %2665 = sub i32 %2663, %2664
  %2666 = zext i32 %2665 to i64
  %2667 = add nuw nsw i64 %2666, 1
  %2668 = add nsw i64 %2660, -1
  %2669 = icmp ult i32 %2665, 31
  br i1 %2669, label %2705, label %2670

2670:                                             ; preds = %2658
  %2671 = and i64 %2667, 8589934560
  %2672 = sub i64 %2661, %2671
  br label %2673

2673:                                             ; preds = %2673, %2670
  %2674 = phi i64 [ 0, %2670 ], [ %2697, %2673 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2693, %2673 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2694, %2673 ]
  %2677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2695, %2673 ]
  %2678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2696, %2673 ]
  %2679 = sub i64 %2661, %2674
  %2680 = getelementptr inbounds i32, ptr %11, i64 %2679
  %2681 = getelementptr inbounds i32, ptr %2680, i64 -7
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !6
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2680, i64 -15
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !6
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = getelementptr inbounds i32, ptr %2680, i64 -23
  %2688 = load <8 x i32>, ptr %2687, align 4, !tbaa !6
  %2689 = shufflevector <8 x i32> %2688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2690 = getelementptr inbounds i32, ptr %2680, i64 -31
  %2691 = load <8 x i32>, ptr %2690, align 4, !tbaa !6
  %2692 = shufflevector <8 x i32> %2691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2693 = mul <8 x i32> %2683, %2675
  %2694 = mul <8 x i32> %2686, %2676
  %2695 = mul <8 x i32> %2689, %2677
  %2696 = mul <8 x i32> %2692, %2678
  %2697 = add nuw i64 %2674, 32
  %2698 = icmp eq i64 %2697, %2671
  br i1 %2698, label %2699, label %2673, !llvm.loop !1030

2699:                                             ; preds = %2673
  %2700 = mul <8 x i32> %2694, %2693
  %2701 = mul <8 x i32> %2695, %2700
  %2702 = mul <8 x i32> %2696, %2701
  %2703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2702)
  %2704 = icmp eq i64 %2667, %2671
  br i1 %2704, label %2717, label %2705

2705:                                             ; preds = %2658, %2699
  %2706 = phi i64 [ %2661, %2658 ], [ %2672, %2699 ]
  %2707 = phi i32 [ 1, %2658 ], [ %2703, %2699 ]
  br label %2708

2708:                                             ; preds = %2705, %2708
  %2709 = phi i64 [ %2714, %2708 ], [ %2706, %2705 ]
  %2710 = phi i32 [ %2713, %2708 ], [ %2707, %2705 ]
  %2711 = getelementptr inbounds i32, ptr %11, i64 %2709
  %2712 = load i32, ptr %2711, align 4, !tbaa !6
  %2713 = mul nsw i32 %2712, %2710
  %2714 = add nsw i64 %2709, -1
  %2715 = trunc i64 %2709 to i32
  %2716 = icmp sgt i32 %2715, 0
  br i1 %2716, label %2708, label %2717, !llvm.loop !1031

2717:                                             ; preds = %2708, %2699
  %2718 = phi i32 [ %2703, %2699 ], [ %2713, %2708 ]
  %2719 = and i64 %2668, 4294967295
  %2720 = getelementptr inbounds i32, ptr %6, i64 %2719
  %2721 = load i32, ptr %2720, align 4, !tbaa !6
  %2722 = mul nsw i32 %2721, %2718
  %2723 = add nsw i32 %2722, %2662
  %2724 = icmp sgt i64 %2660, 2
  %2725 = add nsw i64 %2661, -1
  %2726 = add i32 %2659, 1
  br i1 %2724, label %2658, label %2727, !llvm.loop !1032

2727:                                             ; preds = %2717, %2655
  %2728 = phi i32 [ %2657, %2655 ], [ %2723, %2717 ]
  %2729 = icmp slt i32 %2728, %5
  br i1 %2729, label %2732, label %2730

2730:                                             ; preds = %2727
  %2731 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2732:                                             ; preds = %2727
  %2733 = sext i32 %2728 to i64
  %2734 = getelementptr inbounds double, ptr %2482, i64 %2733
  %2735 = load double, ptr %2734, align 8, !tbaa !19
  %2736 = fptosi double %2735 to i32
  %2737 = load i32, ptr %2484, align 4, !tbaa !6
  %2738 = sitofp i32 %2737 to double
  %2739 = sitofp i32 %2736 to double
  %2740 = fmul fast double %2739, %2739
  %2741 = fmul fast double %2740, %2740
  %2742 = fadd fast double %2741, %2738
  %2743 = fptosi double %2742 to i32
  store i32 %2743, ptr %2484, align 4, !tbaa !6
  %2744 = add nuw nsw i32 %2656, 1
  br i1 %2500, label %2745, label %2795

2745:                                             ; preds = %2732
  %2746 = load i32, ptr %4, align 4, !tbaa !6
  %2747 = load i32, ptr %12, align 4, !tbaa !6
  %2748 = add nsw i32 %2747, -1
  %2749 = icmp slt i32 %2746, %2748
  br i1 %2749, label %2772, label %2750

2750:                                             ; preds = %2745
  %2751 = icmp eq i32 %2746, %2748
  br i1 %2751, label %2752, label %2788

2752:                                             ; preds = %2750
  store i32 0, ptr %4, align 4, !tbaa !6
  %2753 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2753, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2795, label %2754

2754:                                             ; preds = %2752, %2782
  %2755 = phi i64 [ %2786, %2782 ], [ 1, %2752 ]
  %2756 = getelementptr inbounds i32, ptr %4, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = getelementptr inbounds i32, ptr %12, i64 %2755
  %2759 = load i32, ptr %2758, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2757, %2760
  br i1 %2761, label %2762, label %2780

2762:                                             ; preds = %2754
  br i1 %2749, label %2772, label %2763

2763:                                             ; preds = %2762
  %2764 = shl i64 %2755, 32
  %2765 = add i64 %2764, -4294967296
  %2766 = ashr exact i64 %2765, 32
  %2767 = getelementptr inbounds i32, ptr %7, i64 %2766
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = getelementptr inbounds i32, ptr %6, i64 %2755
  %2770 = load i32, ptr %2769, align 4, !tbaa !6
  %2771 = add nsw i32 %2770, %2768
  store i32 %2771, ptr %2769, align 4, !tbaa !6
  br label %2790

2772:                                             ; preds = %2745, %2762
  %2773 = phi i32 [ %2757, %2762 ], [ %2746, %2745 ]
  %2774 = phi ptr [ %2756, %2762 ], [ %4, %2745 ]
  %2775 = phi i64 [ %2755, %2762 ], [ 0, %2745 ]
  %2776 = add nsw i32 %2773, 1
  store i32 %2776, ptr %2774, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %7, i64 %2775
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2775
  br label %2790

2780:                                             ; preds = %2754
  %2781 = icmp eq i32 %2757, %2760
  br i1 %2781, label %2782, label %2788

2782:                                             ; preds = %2780
  store i32 0, ptr %2756, align 4, !tbaa !6
  %2783 = getelementptr inbounds i32, ptr %8, i64 %2755
  %2784 = load i32, ptr %2783, align 4, !tbaa !6
  %2785 = getelementptr inbounds i32, ptr %6, i64 %2755
  store i32 %2784, ptr %2785, align 4, !tbaa !6
  %2786 = add nuw nsw i64 %2755, 1
  %2787 = icmp eq i64 %2786, %2503
  br i1 %2787, label %2795, label %2754, !llvm.loop !1033

2788:                                             ; preds = %2750, %2780
  %2789 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2790:                                             ; preds = %2763, %2772
  %2791 = phi ptr [ %2779, %2772 ], [ %2756, %2763 ]
  %2792 = phi i32 [ %2778, %2772 ], [ 1, %2763 ]
  %2793 = load i32, ptr %2791, align 4, !tbaa !6
  %2794 = add nsw i32 %2793, %2792
  store i32 %2794, ptr %2791, align 4, !tbaa !6
  br label %2795

2795:                                             ; preds = %2782, %2790, %2752, %2732
  %2796 = icmp eq i32 %2744, %5
  br i1 %2796, label %5539, label %2655, !llvm.loop !1034

2797:                                             ; preds = %2491
  %2798 = getelementptr inbounds i32, ptr %3, i64 %19
  %2799 = load i32, ptr %2798, align 4, !tbaa !6
  %2800 = icmp eq i32 %2799, 0
  %2801 = icmp sgt i32 %5, 0
  br i1 %2800, label %2811, label %2802

2802:                                             ; preds = %2797
  br i1 %2801, label %2803, label %5539

2803:                                             ; preds = %2802
  %2804 = icmp sgt i32 %13, 1
  %2805 = icmp sgt i32 %13, 0
  %2806 = add i32 %13, -2
  %2807 = zext i32 %2806 to i64
  %2808 = zext i32 %13 to i64
  %2809 = add nuw i32 %5, 1
  %2810 = icmp eq i32 %13, 1
  br label %2954

2811:                                             ; preds = %2797
  br i1 %2801, label %2812, label %5539

2812:                                             ; preds = %2811
  %2813 = icmp sgt i32 %13, 1
  %2814 = icmp sgt i32 %13, 0
  %2815 = add i32 %13, -2
  %2816 = zext i32 %2815 to i64
  %2817 = zext i32 %13 to i64
  %2818 = add nuw i32 %5, 1
  %2819 = icmp eq i32 %13, 1
  br label %2820

2820:                                             ; preds = %2812, %2952
  %2821 = phi i32 [ 0, %2812 ], [ %2904, %2952 ]
  %2822 = phi double [ 0.000000e+00, %2812 ], [ %2903, %2952 ]
  %2823 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2813, label %2824, label %2893

2824:                                             ; preds = %2820, %2883
  %2825 = phi i32 [ %2892, %2883 ], [ 0, %2820 ]
  %2826 = phi i64 [ %2834, %2883 ], [ %2817, %2820 ]
  %2827 = phi i64 [ %2891, %2883 ], [ %2816, %2820 ]
  %2828 = phi i32 [ %2889, %2883 ], [ %2823, %2820 ]
  %2829 = sub i32 %2815, %2825
  %2830 = tail call i32 @llvm.smin.i32(i32 %2829, i32 0)
  %2831 = sub i32 %2829, %2830
  %2832 = zext i32 %2831 to i64
  %2833 = add nuw nsw i64 %2832, 1
  %2834 = add nsw i64 %2826, -1
  %2835 = icmp ult i32 %2831, 31
  br i1 %2835, label %2871, label %2836

2836:                                             ; preds = %2824
  %2837 = and i64 %2833, 8589934560
  %2838 = sub i64 %2827, %2837
  br label %2839

2839:                                             ; preds = %2839, %2836
  %2840 = phi i64 [ 0, %2836 ], [ %2863, %2839 ]
  %2841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2859, %2839 ]
  %2842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2860, %2839 ]
  %2843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2861, %2839 ]
  %2844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2862, %2839 ]
  %2845 = sub i64 %2827, %2840
  %2846 = getelementptr inbounds i32, ptr %9, i64 %2845
  %2847 = getelementptr inbounds i32, ptr %2846, i64 -7
  %2848 = load <8 x i32>, ptr %2847, align 4, !tbaa !6
  %2849 = shufflevector <8 x i32> %2848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2850 = getelementptr inbounds i32, ptr %2846, i64 -15
  %2851 = load <8 x i32>, ptr %2850, align 4, !tbaa !6
  %2852 = shufflevector <8 x i32> %2851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2853 = getelementptr inbounds i32, ptr %2846, i64 -23
  %2854 = load <8 x i32>, ptr %2853, align 4, !tbaa !6
  %2855 = shufflevector <8 x i32> %2854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2856 = getelementptr inbounds i32, ptr %2846, i64 -31
  %2857 = load <8 x i32>, ptr %2856, align 4, !tbaa !6
  %2858 = shufflevector <8 x i32> %2857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2859 = mul <8 x i32> %2849, %2841
  %2860 = mul <8 x i32> %2852, %2842
  %2861 = mul <8 x i32> %2855, %2843
  %2862 = mul <8 x i32> %2858, %2844
  %2863 = add nuw i64 %2840, 32
  %2864 = icmp eq i64 %2863, %2837
  br i1 %2864, label %2865, label %2839, !llvm.loop !1035

2865:                                             ; preds = %2839
  %2866 = mul <8 x i32> %2860, %2859
  %2867 = mul <8 x i32> %2861, %2866
  %2868 = mul <8 x i32> %2862, %2867
  %2869 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2868)
  %2870 = icmp eq i64 %2833, %2837
  br i1 %2870, label %2883, label %2871

2871:                                             ; preds = %2824, %2865
  %2872 = phi i64 [ %2827, %2824 ], [ %2838, %2865 ]
  %2873 = phi i32 [ 1, %2824 ], [ %2869, %2865 ]
  br label %2874

2874:                                             ; preds = %2871, %2874
  %2875 = phi i64 [ %2880, %2874 ], [ %2872, %2871 ]
  %2876 = phi i32 [ %2879, %2874 ], [ %2873, %2871 ]
  %2877 = getelementptr inbounds i32, ptr %9, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !6
  %2879 = mul nsw i32 %2878, %2876
  %2880 = add nsw i64 %2875, -1
  %2881 = trunc i64 %2875 to i32
  %2882 = icmp sgt i32 %2881, 0
  br i1 %2882, label %2874, label %2883, !llvm.loop !1036

2883:                                             ; preds = %2874, %2865
  %2884 = phi i32 [ %2869, %2865 ], [ %2879, %2874 ]
  %2885 = and i64 %2834, 4294967295
  %2886 = getelementptr inbounds i32, ptr %6, i64 %2885
  %2887 = load i32, ptr %2886, align 4, !tbaa !6
  %2888 = mul nsw i32 %2887, %2884
  %2889 = add nsw i32 %2888, %2828
  %2890 = icmp sgt i64 %2826, 2
  %2891 = add nsw i64 %2827, -1
  %2892 = add i32 %2825, 1
  br i1 %2890, label %2824, label %2893, !llvm.loop !1037

2893:                                             ; preds = %2883, %2820
  %2894 = phi i32 [ %2823, %2820 ], [ %2889, %2883 ]
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds double, ptr %2482, i64 %2895
  %2897 = load double, ptr %2896, align 8, !tbaa !19
  %2898 = fptosi double %2897 to i32
  %2899 = load i32, ptr %2484, align 4, !tbaa !6
  %2900 = mul i32 %2898, %2898
  %2901 = mul i32 %2900, %2900
  %2902 = add nsw i32 %2901, %2899
  store i32 %2902, ptr %2484, align 4, !tbaa !6
  %2903 = fadd fast double %2822, 1.000000e+00
  %2904 = add nuw nsw i32 %2821, 1
  br i1 %2814, label %2905, label %2952

2905:                                             ; preds = %2893
  %2906 = load i32, ptr %4, align 4, !tbaa !6
  %2907 = load i32, ptr %12, align 4, !tbaa !6
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2906, %2908
  br i1 %2909, label %2929, label %2910

2910:                                             ; preds = %2905
  %2911 = icmp eq i32 %2906, %2908
  br i1 %2911, label %2912, label %2945

2912:                                             ; preds = %2910
  store i32 0, ptr %4, align 4, !tbaa !6
  %2913 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2913, ptr %6, align 4, !tbaa !6
  br i1 %2819, label %2952, label %2914

2914:                                             ; preds = %2912, %2939
  %2915 = phi i64 [ %2943, %2939 ], [ 1, %2912 ]
  %2916 = getelementptr inbounds i32, ptr %4, i64 %2915
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %12, i64 %2915
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, -1
  %2921 = icmp slt i32 %2917, %2920
  br i1 %2921, label %2922, label %2937

2922:                                             ; preds = %2914
  br i1 %2909, label %2929, label %2923

2923:                                             ; preds = %2922
  %2924 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2925 = load i32, ptr %2924, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %6, i64 %2915
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = add nsw i32 %2927, %2925
  store i32 %2928, ptr %2926, align 4, !tbaa !6
  br label %2947

2929:                                             ; preds = %2905, %2922
  %2930 = phi i32 [ %2917, %2922 ], [ %2906, %2905 ]
  %2931 = phi ptr [ %2916, %2922 ], [ %4, %2905 ]
  %2932 = phi i64 [ %2915, %2922 ], [ 0, %2905 ]
  %2933 = add nsw i32 %2930, 1
  store i32 %2933, ptr %2931, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %7, i64 %2932
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2932
  br label %2947

2937:                                             ; preds = %2914
  %2938 = icmp eq i32 %2917, %2920
  br i1 %2938, label %2939, label %2945

2939:                                             ; preds = %2937
  store i32 0, ptr %2916, align 4, !tbaa !6
  %2940 = getelementptr inbounds i32, ptr %8, i64 %2915
  %2941 = load i32, ptr %2940, align 4, !tbaa !6
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2915
  store i32 %2941, ptr %2942, align 4, !tbaa !6
  %2943 = add nuw nsw i64 %2915, 1
  %2944 = icmp eq i64 %2943, %2817
  br i1 %2944, label %2952, label %2914, !llvm.loop !1038

2945:                                             ; preds = %2910, %2937
  %2946 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2947:                                             ; preds = %2923, %2929
  %2948 = phi ptr [ %2936, %2929 ], [ %2916, %2923 ]
  %2949 = phi i32 [ %2935, %2929 ], [ 1, %2923 ]
  %2950 = load i32, ptr %2948, align 4, !tbaa !6
  %2951 = add nsw i32 %2950, %2949
  store i32 %2951, ptr %2948, align 4, !tbaa !6
  br label %2952

2952:                                             ; preds = %2939, %2947, %2912, %2893
  %2953 = icmp eq i32 %2904, %5
  br i1 %2953, label %5539, label %2820, !llvm.loop !1039

2954:                                             ; preds = %2803, %3091
  %2955 = phi i32 [ 0, %2803 ], [ %3040, %3091 ]
  %2956 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2804, label %2957, label %3026

2957:                                             ; preds = %2954, %3016
  %2958 = phi i32 [ %3025, %3016 ], [ 0, %2954 ]
  %2959 = phi i64 [ %2967, %3016 ], [ %2808, %2954 ]
  %2960 = phi i64 [ %3024, %3016 ], [ %2807, %2954 ]
  %2961 = phi i32 [ %3022, %3016 ], [ %2956, %2954 ]
  %2962 = sub i32 %2806, %2958
  %2963 = tail call i32 @llvm.smin.i32(i32 %2962, i32 0)
  %2964 = sub i32 %2962, %2963
  %2965 = zext i32 %2964 to i64
  %2966 = add nuw nsw i64 %2965, 1
  %2967 = add nsw i64 %2959, -1
  %2968 = icmp ult i32 %2964, 31
  br i1 %2968, label %3004, label %2969

2969:                                             ; preds = %2957
  %2970 = and i64 %2966, 8589934560
  %2971 = sub i64 %2960, %2970
  br label %2972

2972:                                             ; preds = %2972, %2969
  %2973 = phi i64 [ 0, %2969 ], [ %2996, %2972 ]
  %2974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2992, %2972 ]
  %2975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2993, %2972 ]
  %2976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2994, %2972 ]
  %2977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2995, %2972 ]
  %2978 = sub i64 %2960, %2973
  %2979 = getelementptr inbounds i32, ptr %11, i64 %2978
  %2980 = getelementptr inbounds i32, ptr %2979, i64 -7
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !6
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = getelementptr inbounds i32, ptr %2979, i64 -15
  %2984 = load <8 x i32>, ptr %2983, align 4, !tbaa !6
  %2985 = shufflevector <8 x i32> %2984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2986 = getelementptr inbounds i32, ptr %2979, i64 -23
  %2987 = load <8 x i32>, ptr %2986, align 4, !tbaa !6
  %2988 = shufflevector <8 x i32> %2987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2989 = getelementptr inbounds i32, ptr %2979, i64 -31
  %2990 = load <8 x i32>, ptr %2989, align 4, !tbaa !6
  %2991 = shufflevector <8 x i32> %2990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2992 = mul <8 x i32> %2982, %2974
  %2993 = mul <8 x i32> %2985, %2975
  %2994 = mul <8 x i32> %2988, %2976
  %2995 = mul <8 x i32> %2991, %2977
  %2996 = add nuw i64 %2973, 32
  %2997 = icmp eq i64 %2996, %2970
  br i1 %2997, label %2998, label %2972, !llvm.loop !1040

2998:                                             ; preds = %2972
  %2999 = mul <8 x i32> %2993, %2992
  %3000 = mul <8 x i32> %2994, %2999
  %3001 = mul <8 x i32> %2995, %3000
  %3002 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3001)
  %3003 = icmp eq i64 %2966, %2970
  br i1 %3003, label %3016, label %3004

3004:                                             ; preds = %2957, %2998
  %3005 = phi i64 [ %2960, %2957 ], [ %2971, %2998 ]
  %3006 = phi i32 [ 1, %2957 ], [ %3002, %2998 ]
  br label %3007

3007:                                             ; preds = %3004, %3007
  %3008 = phi i64 [ %3013, %3007 ], [ %3005, %3004 ]
  %3009 = phi i32 [ %3012, %3007 ], [ %3006, %3004 ]
  %3010 = getelementptr inbounds i32, ptr %11, i64 %3008
  %3011 = load i32, ptr %3010, align 4, !tbaa !6
  %3012 = mul nsw i32 %3011, %3009
  %3013 = add nsw i64 %3008, -1
  %3014 = trunc i64 %3008 to i32
  %3015 = icmp sgt i32 %3014, 0
  br i1 %3015, label %3007, label %3016, !llvm.loop !1041

3016:                                             ; preds = %3007, %2998
  %3017 = phi i32 [ %3002, %2998 ], [ %3012, %3007 ]
  %3018 = and i64 %2967, 4294967295
  %3019 = getelementptr inbounds i32, ptr %6, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !6
  %3021 = mul nsw i32 %3020, %3017
  %3022 = add nsw i32 %3021, %2961
  %3023 = icmp sgt i64 %2959, 2
  %3024 = add nsw i64 %2960, -1
  %3025 = add i32 %2958, 1
  br i1 %3023, label %2957, label %3026, !llvm.loop !1042

3026:                                             ; preds = %3016, %2954
  %3027 = phi i32 [ %2956, %2954 ], [ %3022, %3016 ]
  %3028 = icmp slt i32 %3027, %5
  br i1 %3028, label %3031, label %3029

3029:                                             ; preds = %3026
  %3030 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3031:                                             ; preds = %3026
  %3032 = sext i32 %3027 to i64
  %3033 = getelementptr inbounds double, ptr %2482, i64 %3032
  %3034 = load double, ptr %3033, align 8, !tbaa !19
  %3035 = fptosi double %3034 to i32
  %3036 = load i32, ptr %2484, align 4, !tbaa !6
  %3037 = mul i32 %3035, %3035
  %3038 = mul i32 %3037, %3037
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %2484, align 4, !tbaa !6
  %3040 = add nuw nsw i32 %2955, 1
  br i1 %2805, label %3041, label %3091

3041:                                             ; preds = %3031
  %3042 = load i32, ptr %4, align 4, !tbaa !6
  %3043 = load i32, ptr %12, align 4, !tbaa !6
  %3044 = add nsw i32 %3043, -1
  %3045 = icmp slt i32 %3042, %3044
  br i1 %3045, label %3068, label %3046

3046:                                             ; preds = %3041
  %3047 = icmp eq i32 %3042, %3044
  br i1 %3047, label %3048, label %3084

3048:                                             ; preds = %3046
  store i32 0, ptr %4, align 4, !tbaa !6
  %3049 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3049, ptr %6, align 4, !tbaa !6
  br i1 %2810, label %3091, label %3050

3050:                                             ; preds = %3048, %3078
  %3051 = phi i64 [ %3082, %3078 ], [ 1, %3048 ]
  %3052 = getelementptr inbounds i32, ptr %4, i64 %3051
  %3053 = load i32, ptr %3052, align 4, !tbaa !6
  %3054 = getelementptr inbounds i32, ptr %12, i64 %3051
  %3055 = load i32, ptr %3054, align 4, !tbaa !6
  %3056 = add nsw i32 %3055, -1
  %3057 = icmp slt i32 %3053, %3056
  br i1 %3057, label %3058, label %3076

3058:                                             ; preds = %3050
  br i1 %3045, label %3068, label %3059

3059:                                             ; preds = %3058
  %3060 = shl i64 %3051, 32
  %3061 = add i64 %3060, -4294967296
  %3062 = ashr exact i64 %3061, 32
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3062
  %3064 = load i32, ptr %3063, align 4, !tbaa !6
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3051
  %3066 = load i32, ptr %3065, align 4, !tbaa !6
  %3067 = add nsw i32 %3066, %3064
  store i32 %3067, ptr %3065, align 4, !tbaa !6
  br label %3086

3068:                                             ; preds = %3041, %3058
  %3069 = phi i32 [ %3053, %3058 ], [ %3042, %3041 ]
  %3070 = phi ptr [ %3052, %3058 ], [ %4, %3041 ]
  %3071 = phi i64 [ %3051, %3058 ], [ 0, %3041 ]
  %3072 = add nsw i32 %3069, 1
  store i32 %3072, ptr %3070, align 4, !tbaa !6
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3071
  %3074 = load i32, ptr %3073, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3071
  br label %3086

3076:                                             ; preds = %3050
  %3077 = icmp eq i32 %3053, %3056
  br i1 %3077, label %3078, label %3084

3078:                                             ; preds = %3076
  store i32 0, ptr %3052, align 4, !tbaa !6
  %3079 = getelementptr inbounds i32, ptr %8, i64 %3051
  %3080 = load i32, ptr %3079, align 4, !tbaa !6
  %3081 = getelementptr inbounds i32, ptr %6, i64 %3051
  store i32 %3080, ptr %3081, align 4, !tbaa !6
  %3082 = add nuw nsw i64 %3051, 1
  %3083 = icmp eq i64 %3082, %2808
  br i1 %3083, label %3091, label %3050, !llvm.loop !1043

3084:                                             ; preds = %3046, %3076
  %3085 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3086:                                             ; preds = %3059, %3068
  %3087 = phi ptr [ %3075, %3068 ], [ %3052, %3059 ]
  %3088 = phi i32 [ %3074, %3068 ], [ 1, %3059 ]
  %3089 = load i32, ptr %3087, align 4, !tbaa !6
  %3090 = add nsw i32 %3089, %3088
  store i32 %3090, ptr %3087, align 4, !tbaa !6
  br label %3091

3091:                                             ; preds = %3078, %3086, %3048, %3031
  %3092 = icmp eq i32 %3040, %5
  br i1 %3092, label %5539, label %2954, !llvm.loop !1044

3093:                                             ; preds = %2491
  %3094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

3095:                                             ; preds = %18
  %3096 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3097 = load ptr, ptr %3096, align 8, !tbaa !10
  %3098 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3099 = load ptr, ptr %3098, align 8, !tbaa !10
  store i64 0, ptr %3099, align 8, !tbaa !121
  %3100 = icmp eq i32 %13, 0
  br i1 %3100, label %3101, label %3106

3101:                                             ; preds = %3095
  %3102 = load double, ptr %3097, align 8, !tbaa !19
  %3103 = fptosi double %3102 to i64
  %3104 = mul i64 %3103, %3103
  %3105 = mul i64 %3104, %3104
  store i64 %3105, ptr %3099, align 8, !tbaa !121
  br label %5539

3106:                                             ; preds = %3095
  switch i32 %1, label %3708 [
    i32 1, label %3107
    i32 0, label %3412
  ]

3107:                                             ; preds = %3106
  %3108 = getelementptr inbounds i32, ptr %3, i64 %19
  %3109 = load i32, ptr %3108, align 4, !tbaa !6
  %3110 = icmp eq i32 %3109, 0
  %3111 = icmp sgt i32 %5, 0
  br i1 %3110, label %3121, label %3112

3112:                                             ; preds = %3107
  br i1 %3111, label %3113, label %5539

3113:                                             ; preds = %3112
  %3114 = icmp sgt i32 %13, 1
  %3115 = icmp sgt i32 %13, 0
  %3116 = add i32 %13, -2
  %3117 = zext i32 %3116 to i64
  %3118 = zext i32 %13 to i64
  %3119 = add nuw i32 %5, 1
  %3120 = icmp eq i32 %13, 1
  br label %3270

3121:                                             ; preds = %3107
  br i1 %3111, label %3122, label %5539

3122:                                             ; preds = %3121
  %3123 = icmp sgt i32 %13, 1
  %3124 = icmp sgt i32 %13, 0
  %3125 = add i32 %13, -2
  %3126 = zext i32 %3125 to i64
  %3127 = zext i32 %13 to i64
  %3128 = add nuw i32 %5, 1
  %3129 = icmp eq i32 %13, 1
  br label %3130

3130:                                             ; preds = %3122, %3268
  %3131 = phi i64 [ 0, %3122 ], [ %3218, %3268 ]
  %3132 = phi i32 [ 0, %3122 ], [ %3220, %3268 ]
  %3133 = phi double [ 0.000000e+00, %3122 ], [ %3219, %3268 ]
  %3134 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3123, label %3135, label %3204

3135:                                             ; preds = %3130, %3194
  %3136 = phi i32 [ %3203, %3194 ], [ 0, %3130 ]
  %3137 = phi i64 [ %3145, %3194 ], [ %3127, %3130 ]
  %3138 = phi i64 [ %3202, %3194 ], [ %3126, %3130 ]
  %3139 = phi i32 [ %3200, %3194 ], [ %3134, %3130 ]
  %3140 = sub i32 %3125, %3136
  %3141 = tail call i32 @llvm.smin.i32(i32 %3140, i32 0)
  %3142 = sub i32 %3140, %3141
  %3143 = zext i32 %3142 to i64
  %3144 = add nuw nsw i64 %3143, 1
  %3145 = add nsw i64 %3137, -1
  %3146 = icmp ult i32 %3142, 31
  br i1 %3146, label %3182, label %3147

3147:                                             ; preds = %3135
  %3148 = and i64 %3144, 8589934560
  %3149 = sub i64 %3138, %3148
  br label %3150

3150:                                             ; preds = %3150, %3147
  %3151 = phi i64 [ 0, %3147 ], [ %3174, %3150 ]
  %3152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3170, %3150 ]
  %3153 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3171, %3150 ]
  %3154 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3172, %3150 ]
  %3155 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3173, %3150 ]
  %3156 = sub i64 %3138, %3151
  %3157 = getelementptr inbounds i32, ptr %9, i64 %3156
  %3158 = getelementptr inbounds i32, ptr %3157, i64 -7
  %3159 = load <8 x i32>, ptr %3158, align 4, !tbaa !6
  %3160 = shufflevector <8 x i32> %3159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3161 = getelementptr inbounds i32, ptr %3157, i64 -15
  %3162 = load <8 x i32>, ptr %3161, align 4, !tbaa !6
  %3163 = shufflevector <8 x i32> %3162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3164 = getelementptr inbounds i32, ptr %3157, i64 -23
  %3165 = load <8 x i32>, ptr %3164, align 4, !tbaa !6
  %3166 = shufflevector <8 x i32> %3165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3167 = getelementptr inbounds i32, ptr %3157, i64 -31
  %3168 = load <8 x i32>, ptr %3167, align 4, !tbaa !6
  %3169 = shufflevector <8 x i32> %3168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3170 = mul <8 x i32> %3160, %3152
  %3171 = mul <8 x i32> %3163, %3153
  %3172 = mul <8 x i32> %3166, %3154
  %3173 = mul <8 x i32> %3169, %3155
  %3174 = add nuw i64 %3151, 32
  %3175 = icmp eq i64 %3174, %3148
  br i1 %3175, label %3176, label %3150, !llvm.loop !1045

3176:                                             ; preds = %3150
  %3177 = mul <8 x i32> %3171, %3170
  %3178 = mul <8 x i32> %3172, %3177
  %3179 = mul <8 x i32> %3173, %3178
  %3180 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3179)
  %3181 = icmp eq i64 %3144, %3148
  br i1 %3181, label %3194, label %3182

3182:                                             ; preds = %3135, %3176
  %3183 = phi i64 [ %3138, %3135 ], [ %3149, %3176 ]
  %3184 = phi i32 [ 1, %3135 ], [ %3180, %3176 ]
  br label %3185

3185:                                             ; preds = %3182, %3185
  %3186 = phi i64 [ %3191, %3185 ], [ %3183, %3182 ]
  %3187 = phi i32 [ %3190, %3185 ], [ %3184, %3182 ]
  %3188 = getelementptr inbounds i32, ptr %9, i64 %3186
  %3189 = load i32, ptr %3188, align 4, !tbaa !6
  %3190 = mul nsw i32 %3189, %3187
  %3191 = add nsw i64 %3186, -1
  %3192 = trunc i64 %3186 to i32
  %3193 = icmp sgt i32 %3192, 0
  br i1 %3193, label %3185, label %3194, !llvm.loop !1046

3194:                                             ; preds = %3185, %3176
  %3195 = phi i32 [ %3180, %3176 ], [ %3190, %3185 ]
  %3196 = and i64 %3145, 4294967295
  %3197 = getelementptr inbounds i32, ptr %6, i64 %3196
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = mul nsw i32 %3198, %3195
  %3200 = add nsw i32 %3199, %3139
  %3201 = icmp sgt i64 %3137, 2
  %3202 = add nsw i64 %3138, -1
  %3203 = add i32 %3136, 1
  br i1 %3201, label %3135, label %3204, !llvm.loop !1047

3204:                                             ; preds = %3194, %3130
  %3205 = phi i32 [ %3134, %3130 ], [ %3200, %3194 ]
  %3206 = sext i32 %3205 to i64
  %3207 = getelementptr inbounds double, ptr %2, i64 %3206
  %3208 = load double, ptr %3207, align 8, !tbaa !19
  %3209 = getelementptr inbounds double, ptr %3097, i64 %3206
  %3210 = load double, ptr %3209, align 8, !tbaa !19
  %3211 = fptosi double %3210 to i64
  %3212 = sitofp i64 %3131 to double
  %3213 = sitofp i64 %3211 to double
  %3214 = fmul fast double %3208, %3213
  %3215 = fmul fast double %3214, %3214
  %3216 = fmul fast double %3215, %3215
  %3217 = fadd fast double %3216, %3212
  %3218 = fptosi double %3217 to i64
  %3219 = fadd fast double %3208, %3133
  %3220 = add nuw nsw i32 %3132, 1
  br i1 %3124, label %3221, label %3268

3221:                                             ; preds = %3204
  %3222 = load i32, ptr %4, align 4, !tbaa !6
  %3223 = load i32, ptr %12, align 4, !tbaa !6
  %3224 = add nsw i32 %3223, -1
  %3225 = icmp slt i32 %3222, %3224
  br i1 %3225, label %3245, label %3226

3226:                                             ; preds = %3221
  %3227 = icmp eq i32 %3222, %3224
  br i1 %3227, label %3228, label %3261

3228:                                             ; preds = %3226
  store i32 0, ptr %4, align 4, !tbaa !6
  %3229 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3229, ptr %6, align 4, !tbaa !6
  br i1 %3129, label %3268, label %3230

3230:                                             ; preds = %3228, %3255
  %3231 = phi i64 [ %3259, %3255 ], [ 1, %3228 ]
  %3232 = getelementptr inbounds i32, ptr %4, i64 %3231
  %3233 = load i32, ptr %3232, align 4, !tbaa !6
  %3234 = getelementptr inbounds i32, ptr %12, i64 %3231
  %3235 = load i32, ptr %3234, align 4, !tbaa !6
  %3236 = add nsw i32 %3235, -1
  %3237 = icmp slt i32 %3233, %3236
  br i1 %3237, label %3238, label %3253

3238:                                             ; preds = %3230
  br i1 %3225, label %3245, label %3239

3239:                                             ; preds = %3238
  %3240 = getelementptr inbounds i32, ptr %7, i64 %3231
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3231
  %3243 = load i32, ptr %3242, align 4, !tbaa !6
  %3244 = add nsw i32 %3243, %3241
  store i32 %3244, ptr %3242, align 4, !tbaa !6
  br label %3263

3245:                                             ; preds = %3221, %3238
  %3246 = phi i32 [ %3233, %3238 ], [ %3222, %3221 ]
  %3247 = phi ptr [ %3232, %3238 ], [ %4, %3221 ]
  %3248 = phi i64 [ %3231, %3238 ], [ 0, %3221 ]
  %3249 = add nsw i32 %3246, 1
  store i32 %3249, ptr %3247, align 4, !tbaa !6
  %3250 = getelementptr inbounds i32, ptr %7, i64 %3248
  %3251 = load i32, ptr %3250, align 4, !tbaa !6
  %3252 = getelementptr inbounds i32, ptr %6, i64 %3248
  br label %3263

3253:                                             ; preds = %3230
  %3254 = icmp eq i32 %3233, %3236
  br i1 %3254, label %3255, label %3261

3255:                                             ; preds = %3253
  store i32 0, ptr %3232, align 4, !tbaa !6
  %3256 = getelementptr inbounds i32, ptr %8, i64 %3231
  %3257 = load i32, ptr %3256, align 4, !tbaa !6
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3231
  store i32 %3257, ptr %3258, align 4, !tbaa !6
  %3259 = add nuw nsw i64 %3231, 1
  %3260 = icmp eq i64 %3259, %3127
  br i1 %3260, label %3268, label %3230, !llvm.loop !1048

3261:                                             ; preds = %3226, %3253
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3263:                                             ; preds = %3239, %3245
  %3264 = phi ptr [ %3252, %3245 ], [ %3232, %3239 ]
  %3265 = phi i32 [ %3251, %3245 ], [ 1, %3239 ]
  %3266 = load i32, ptr %3264, align 4, !tbaa !6
  %3267 = add nsw i32 %3266, %3265
  store i32 %3267, ptr %3264, align 4, !tbaa !6
  br label %3268

3268:                                             ; preds = %3255, %3263, %3228, %3204
  %3269 = icmp eq i32 %3220, %5
  br i1 %3269, label %5535, label %3130, !llvm.loop !1049

3270:                                             ; preds = %3113, %3410
  %3271 = phi i64 [ 0, %3113 ], [ %3358, %3410 ]
  %3272 = phi i32 [ 0, %3113 ], [ %3359, %3410 ]
  %3273 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3114, label %3274, label %3343

3274:                                             ; preds = %3270, %3333
  %3275 = phi i32 [ %3342, %3333 ], [ 0, %3270 ]
  %3276 = phi i64 [ %3284, %3333 ], [ %3118, %3270 ]
  %3277 = phi i64 [ %3341, %3333 ], [ %3117, %3270 ]
  %3278 = phi i32 [ %3339, %3333 ], [ %3273, %3270 ]
  %3279 = sub i32 %3116, %3275
  %3280 = tail call i32 @llvm.smin.i32(i32 %3279, i32 0)
  %3281 = sub i32 %3279, %3280
  %3282 = zext i32 %3281 to i64
  %3283 = add nuw nsw i64 %3282, 1
  %3284 = add nsw i64 %3276, -1
  %3285 = icmp ult i32 %3281, 31
  br i1 %3285, label %3321, label %3286

3286:                                             ; preds = %3274
  %3287 = and i64 %3283, 8589934560
  %3288 = sub i64 %3277, %3287
  br label %3289

3289:                                             ; preds = %3289, %3286
  %3290 = phi i64 [ 0, %3286 ], [ %3313, %3289 ]
  %3291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3309, %3289 ]
  %3292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3310, %3289 ]
  %3293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3311, %3289 ]
  %3294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3312, %3289 ]
  %3295 = sub i64 %3277, %3290
  %3296 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3297 = getelementptr inbounds i32, ptr %3296, i64 -7
  %3298 = load <8 x i32>, ptr %3297, align 4, !tbaa !6
  %3299 = shufflevector <8 x i32> %3298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3300 = getelementptr inbounds i32, ptr %3296, i64 -15
  %3301 = load <8 x i32>, ptr %3300, align 4, !tbaa !6
  %3302 = shufflevector <8 x i32> %3301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3303 = getelementptr inbounds i32, ptr %3296, i64 -23
  %3304 = load <8 x i32>, ptr %3303, align 4, !tbaa !6
  %3305 = shufflevector <8 x i32> %3304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3306 = getelementptr inbounds i32, ptr %3296, i64 -31
  %3307 = load <8 x i32>, ptr %3306, align 4, !tbaa !6
  %3308 = shufflevector <8 x i32> %3307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3309 = mul <8 x i32> %3299, %3291
  %3310 = mul <8 x i32> %3302, %3292
  %3311 = mul <8 x i32> %3305, %3293
  %3312 = mul <8 x i32> %3308, %3294
  %3313 = add nuw i64 %3290, 32
  %3314 = icmp eq i64 %3313, %3287
  br i1 %3314, label %3315, label %3289, !llvm.loop !1050

3315:                                             ; preds = %3289
  %3316 = mul <8 x i32> %3310, %3309
  %3317 = mul <8 x i32> %3311, %3316
  %3318 = mul <8 x i32> %3312, %3317
  %3319 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3318)
  %3320 = icmp eq i64 %3283, %3287
  br i1 %3320, label %3333, label %3321

3321:                                             ; preds = %3274, %3315
  %3322 = phi i64 [ %3277, %3274 ], [ %3288, %3315 ]
  %3323 = phi i32 [ 1, %3274 ], [ %3319, %3315 ]
  br label %3324

3324:                                             ; preds = %3321, %3324
  %3325 = phi i64 [ %3330, %3324 ], [ %3322, %3321 ]
  %3326 = phi i32 [ %3329, %3324 ], [ %3323, %3321 ]
  %3327 = getelementptr inbounds i32, ptr %11, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = mul nsw i32 %3328, %3326
  %3330 = add nsw i64 %3325, -1
  %3331 = trunc i64 %3325 to i32
  %3332 = icmp sgt i32 %3331, 0
  br i1 %3332, label %3324, label %3333, !llvm.loop !1051

3333:                                             ; preds = %3324, %3315
  %3334 = phi i32 [ %3319, %3315 ], [ %3329, %3324 ]
  %3335 = and i64 %3284, 4294967295
  %3336 = getelementptr inbounds i32, ptr %6, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = mul nsw i32 %3337, %3334
  %3339 = add nsw i32 %3338, %3278
  %3340 = icmp sgt i64 %3276, 2
  %3341 = add nsw i64 %3277, -1
  %3342 = add i32 %3275, 1
  br i1 %3340, label %3274, label %3343, !llvm.loop !1052

3343:                                             ; preds = %3333, %3270
  %3344 = phi i32 [ %3273, %3270 ], [ %3339, %3333 ]
  %3345 = icmp slt i32 %3344, %5
  br i1 %3345, label %3348, label %3346

3346:                                             ; preds = %3343
  %3347 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3348:                                             ; preds = %3343
  %3349 = sext i32 %3344 to i64
  %3350 = getelementptr inbounds double, ptr %3097, i64 %3349
  %3351 = load double, ptr %3350, align 8, !tbaa !19
  %3352 = fptosi double %3351 to i64
  %3353 = sitofp i64 %3271 to double
  %3354 = sitofp i64 %3352 to double
  %3355 = fmul fast double %3354, %3354
  %3356 = fmul fast double %3355, %3355
  %3357 = fadd fast double %3356, %3353
  %3358 = fptosi double %3357 to i64
  store i64 %3358, ptr %3099, align 8, !tbaa !121
  %3359 = add nuw nsw i32 %3272, 1
  br i1 %3115, label %3360, label %3410

3360:                                             ; preds = %3348
  %3361 = load i32, ptr %4, align 4, !tbaa !6
  %3362 = load i32, ptr %12, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, -1
  %3364 = icmp slt i32 %3361, %3363
  br i1 %3364, label %3387, label %3365

3365:                                             ; preds = %3360
  %3366 = icmp eq i32 %3361, %3363
  br i1 %3366, label %3367, label %3403

3367:                                             ; preds = %3365
  store i32 0, ptr %4, align 4, !tbaa !6
  %3368 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3368, ptr %6, align 4, !tbaa !6
  br i1 %3120, label %3410, label %3369

3369:                                             ; preds = %3367, %3397
  %3370 = phi i64 [ %3401, %3397 ], [ 1, %3367 ]
  %3371 = getelementptr inbounds i32, ptr %4, i64 %3370
  %3372 = load i32, ptr %3371, align 4, !tbaa !6
  %3373 = getelementptr inbounds i32, ptr %12, i64 %3370
  %3374 = load i32, ptr %3373, align 4, !tbaa !6
  %3375 = add nsw i32 %3374, -1
  %3376 = icmp slt i32 %3372, %3375
  br i1 %3376, label %3377, label %3395

3377:                                             ; preds = %3369
  br i1 %3364, label %3387, label %3378

3378:                                             ; preds = %3377
  %3379 = shl i64 %3370, 32
  %3380 = add i64 %3379, -4294967296
  %3381 = ashr exact i64 %3380, 32
  %3382 = getelementptr inbounds i32, ptr %7, i64 %3381
  %3383 = load i32, ptr %3382, align 4, !tbaa !6
  %3384 = getelementptr inbounds i32, ptr %6, i64 %3370
  %3385 = load i32, ptr %3384, align 4, !tbaa !6
  %3386 = add nsw i32 %3385, %3383
  store i32 %3386, ptr %3384, align 4, !tbaa !6
  br label %3405

3387:                                             ; preds = %3360, %3377
  %3388 = phi i32 [ %3372, %3377 ], [ %3361, %3360 ]
  %3389 = phi ptr [ %3371, %3377 ], [ %4, %3360 ]
  %3390 = phi i64 [ %3370, %3377 ], [ 0, %3360 ]
  %3391 = add nsw i32 %3388, 1
  store i32 %3391, ptr %3389, align 4, !tbaa !6
  %3392 = getelementptr inbounds i32, ptr %7, i64 %3390
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3390
  br label %3405

3395:                                             ; preds = %3369
  %3396 = icmp eq i32 %3372, %3375
  br i1 %3396, label %3397, label %3403

3397:                                             ; preds = %3395
  store i32 0, ptr %3371, align 4, !tbaa !6
  %3398 = getelementptr inbounds i32, ptr %8, i64 %3370
  %3399 = load i32, ptr %3398, align 4, !tbaa !6
  %3400 = getelementptr inbounds i32, ptr %6, i64 %3370
  store i32 %3399, ptr %3400, align 4, !tbaa !6
  %3401 = add nuw nsw i64 %3370, 1
  %3402 = icmp eq i64 %3401, %3118
  br i1 %3402, label %3410, label %3369, !llvm.loop !1053

3403:                                             ; preds = %3365, %3395
  %3404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3405:                                             ; preds = %3378, %3387
  %3406 = phi ptr [ %3394, %3387 ], [ %3371, %3378 ]
  %3407 = phi i32 [ %3393, %3387 ], [ 1, %3378 ]
  %3408 = load i32, ptr %3406, align 4, !tbaa !6
  %3409 = add nsw i32 %3408, %3407
  store i32 %3409, ptr %3406, align 4, !tbaa !6
  br label %3410

3410:                                             ; preds = %3397, %3405, %3367, %3348
  %3411 = icmp eq i32 %3359, %5
  br i1 %3411, label %5539, label %3270, !llvm.loop !1054

3412:                                             ; preds = %3106
  %3413 = getelementptr inbounds i32, ptr %3, i64 %19
  %3414 = load i32, ptr %3413, align 4, !tbaa !6
  %3415 = icmp eq i32 %3414, 0
  %3416 = icmp sgt i32 %5, 0
  br i1 %3415, label %3426, label %3417

3417:                                             ; preds = %3412
  br i1 %3416, label %3418, label %5539

3418:                                             ; preds = %3417
  %3419 = icmp sgt i32 %13, 1
  %3420 = icmp sgt i32 %13, 0
  %3421 = add i32 %13, -2
  %3422 = zext i32 %3421 to i64
  %3423 = zext i32 %13 to i64
  %3424 = add nuw i32 %5, 1
  %3425 = icmp eq i32 %13, 1
  br label %3569

3426:                                             ; preds = %3412
  br i1 %3416, label %3427, label %5539

3427:                                             ; preds = %3426
  %3428 = icmp sgt i32 %13, 1
  %3429 = icmp sgt i32 %13, 0
  %3430 = add i32 %13, -2
  %3431 = zext i32 %3430 to i64
  %3432 = zext i32 %13 to i64
  %3433 = add nuw i32 %5, 1
  %3434 = icmp eq i32 %13, 1
  br label %3435

3435:                                             ; preds = %3427, %3567
  %3436 = phi i64 [ 0, %3427 ], [ %3517, %3567 ]
  %3437 = phi i32 [ 0, %3427 ], [ %3519, %3567 ]
  %3438 = phi double [ 0.000000e+00, %3427 ], [ %3518, %3567 ]
  %3439 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3440, label %3509

3440:                                             ; preds = %3435, %3499
  %3441 = phi i32 [ %3508, %3499 ], [ 0, %3435 ]
  %3442 = phi i64 [ %3450, %3499 ], [ %3432, %3435 ]
  %3443 = phi i64 [ %3507, %3499 ], [ %3431, %3435 ]
  %3444 = phi i32 [ %3505, %3499 ], [ %3439, %3435 ]
  %3445 = sub i32 %3430, %3441
  %3446 = tail call i32 @llvm.smin.i32(i32 %3445, i32 0)
  %3447 = sub i32 %3445, %3446
  %3448 = zext i32 %3447 to i64
  %3449 = add nuw nsw i64 %3448, 1
  %3450 = add nsw i64 %3442, -1
  %3451 = icmp ult i32 %3447, 31
  br i1 %3451, label %3487, label %3452

3452:                                             ; preds = %3440
  %3453 = and i64 %3449, 8589934560
  %3454 = sub i64 %3443, %3453
  br label %3455

3455:                                             ; preds = %3455, %3452
  %3456 = phi i64 [ 0, %3452 ], [ %3479, %3455 ]
  %3457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3475, %3455 ]
  %3458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3476, %3455 ]
  %3459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3477, %3455 ]
  %3460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3478, %3455 ]
  %3461 = sub i64 %3443, %3456
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3463 = getelementptr inbounds i32, ptr %3462, i64 -7
  %3464 = load <8 x i32>, ptr %3463, align 4, !tbaa !6
  %3465 = shufflevector <8 x i32> %3464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3466 = getelementptr inbounds i32, ptr %3462, i64 -15
  %3467 = load <8 x i32>, ptr %3466, align 4, !tbaa !6
  %3468 = shufflevector <8 x i32> %3467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3469 = getelementptr inbounds i32, ptr %3462, i64 -23
  %3470 = load <8 x i32>, ptr %3469, align 4, !tbaa !6
  %3471 = shufflevector <8 x i32> %3470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3472 = getelementptr inbounds i32, ptr %3462, i64 -31
  %3473 = load <8 x i32>, ptr %3472, align 4, !tbaa !6
  %3474 = shufflevector <8 x i32> %3473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3475 = mul <8 x i32> %3465, %3457
  %3476 = mul <8 x i32> %3468, %3458
  %3477 = mul <8 x i32> %3471, %3459
  %3478 = mul <8 x i32> %3474, %3460
  %3479 = add nuw i64 %3456, 32
  %3480 = icmp eq i64 %3479, %3453
  br i1 %3480, label %3481, label %3455, !llvm.loop !1055

3481:                                             ; preds = %3455
  %3482 = mul <8 x i32> %3476, %3475
  %3483 = mul <8 x i32> %3477, %3482
  %3484 = mul <8 x i32> %3478, %3483
  %3485 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3484)
  %3486 = icmp eq i64 %3449, %3453
  br i1 %3486, label %3499, label %3487

3487:                                             ; preds = %3440, %3481
  %3488 = phi i64 [ %3443, %3440 ], [ %3454, %3481 ]
  %3489 = phi i32 [ 1, %3440 ], [ %3485, %3481 ]
  br label %3490

3490:                                             ; preds = %3487, %3490
  %3491 = phi i64 [ %3496, %3490 ], [ %3488, %3487 ]
  %3492 = phi i32 [ %3495, %3490 ], [ %3489, %3487 ]
  %3493 = getelementptr inbounds i32, ptr %9, i64 %3491
  %3494 = load i32, ptr %3493, align 4, !tbaa !6
  %3495 = mul nsw i32 %3494, %3492
  %3496 = add nsw i64 %3491, -1
  %3497 = trunc i64 %3491 to i32
  %3498 = icmp sgt i32 %3497, 0
  br i1 %3498, label %3490, label %3499, !llvm.loop !1056

3499:                                             ; preds = %3490, %3481
  %3500 = phi i32 [ %3485, %3481 ], [ %3495, %3490 ]
  %3501 = and i64 %3450, 4294967295
  %3502 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = mul nsw i32 %3503, %3500
  %3505 = add nsw i32 %3504, %3444
  %3506 = icmp sgt i64 %3442, 2
  %3507 = add nsw i64 %3443, -1
  %3508 = add i32 %3441, 1
  br i1 %3506, label %3440, label %3509, !llvm.loop !1057

3509:                                             ; preds = %3499, %3435
  %3510 = phi i32 [ %3439, %3435 ], [ %3505, %3499 ]
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds double, ptr %3097, i64 %3511
  %3513 = load double, ptr %3512, align 8, !tbaa !19
  %3514 = fptosi double %3513 to i64
  %3515 = mul i64 %3514, %3514
  %3516 = mul i64 %3515, %3515
  %3517 = add nsw i64 %3516, %3436
  %3518 = fadd fast double %3438, 1.000000e+00
  %3519 = add nuw nsw i32 %3437, 1
  br i1 %3429, label %3520, label %3567

3520:                                             ; preds = %3509
  %3521 = load i32, ptr %4, align 4, !tbaa !6
  %3522 = load i32, ptr %12, align 4, !tbaa !6
  %3523 = add nsw i32 %3522, -1
  %3524 = icmp slt i32 %3521, %3523
  br i1 %3524, label %3544, label %3525

3525:                                             ; preds = %3520
  %3526 = icmp eq i32 %3521, %3523
  br i1 %3526, label %3527, label %3560

3527:                                             ; preds = %3525
  store i32 0, ptr %4, align 4, !tbaa !6
  %3528 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3528, ptr %6, align 4, !tbaa !6
  br i1 %3434, label %3567, label %3529

3529:                                             ; preds = %3527, %3554
  %3530 = phi i64 [ %3558, %3554 ], [ 1, %3527 ]
  %3531 = getelementptr inbounds i32, ptr %4, i64 %3530
  %3532 = load i32, ptr %3531, align 4, !tbaa !6
  %3533 = getelementptr inbounds i32, ptr %12, i64 %3530
  %3534 = load i32, ptr %3533, align 4, !tbaa !6
  %3535 = add nsw i32 %3534, -1
  %3536 = icmp slt i32 %3532, %3535
  br i1 %3536, label %3537, label %3552

3537:                                             ; preds = %3529
  br i1 %3524, label %3544, label %3538

3538:                                             ; preds = %3537
  %3539 = getelementptr inbounds i32, ptr %7, i64 %3530
  %3540 = load i32, ptr %3539, align 4, !tbaa !6
  %3541 = getelementptr inbounds i32, ptr %6, i64 %3530
  %3542 = load i32, ptr %3541, align 4, !tbaa !6
  %3543 = add nsw i32 %3542, %3540
  store i32 %3543, ptr %3541, align 4, !tbaa !6
  br label %3562

3544:                                             ; preds = %3520, %3537
  %3545 = phi i32 [ %3532, %3537 ], [ %3521, %3520 ]
  %3546 = phi ptr [ %3531, %3537 ], [ %4, %3520 ]
  %3547 = phi i64 [ %3530, %3537 ], [ 0, %3520 ]
  %3548 = add nsw i32 %3545, 1
  store i32 %3548, ptr %3546, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3547
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3547
  br label %3562

3552:                                             ; preds = %3529
  %3553 = icmp eq i32 %3532, %3535
  br i1 %3553, label %3554, label %3560

3554:                                             ; preds = %3552
  store i32 0, ptr %3531, align 4, !tbaa !6
  %3555 = getelementptr inbounds i32, ptr %8, i64 %3530
  %3556 = load i32, ptr %3555, align 4, !tbaa !6
  %3557 = getelementptr inbounds i32, ptr %6, i64 %3530
  store i32 %3556, ptr %3557, align 4, !tbaa !6
  %3558 = add nuw nsw i64 %3530, 1
  %3559 = icmp eq i64 %3558, %3432
  br i1 %3559, label %3567, label %3529, !llvm.loop !1058

3560:                                             ; preds = %3525, %3552
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  %3561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3562:                                             ; preds = %3538, %3544
  %3563 = phi ptr [ %3551, %3544 ], [ %3531, %3538 ]
  %3564 = phi i32 [ %3550, %3544 ], [ 1, %3538 ]
  %3565 = load i32, ptr %3563, align 4, !tbaa !6
  %3566 = add nsw i32 %3565, %3564
  store i32 %3566, ptr %3563, align 4, !tbaa !6
  br label %3567

3567:                                             ; preds = %3554, %3562, %3527, %3509
  %3568 = icmp eq i32 %3519, %5
  br i1 %3568, label %5536, label %3435, !llvm.loop !1059

3569:                                             ; preds = %3418, %3706
  %3570 = phi i64 [ 0, %3418 ], [ %3654, %3706 ]
  %3571 = phi i32 [ 0, %3418 ], [ %3655, %3706 ]
  %3572 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3419, label %3573, label %3642

3573:                                             ; preds = %3569, %3632
  %3574 = phi i32 [ %3641, %3632 ], [ 0, %3569 ]
  %3575 = phi i64 [ %3583, %3632 ], [ %3423, %3569 ]
  %3576 = phi i64 [ %3640, %3632 ], [ %3422, %3569 ]
  %3577 = phi i32 [ %3638, %3632 ], [ %3572, %3569 ]
  %3578 = sub i32 %3421, %3574
  %3579 = tail call i32 @llvm.smin.i32(i32 %3578, i32 0)
  %3580 = sub i32 %3578, %3579
  %3581 = zext i32 %3580 to i64
  %3582 = add nuw nsw i64 %3581, 1
  %3583 = add nsw i64 %3575, -1
  %3584 = icmp ult i32 %3580, 31
  br i1 %3584, label %3620, label %3585

3585:                                             ; preds = %3573
  %3586 = and i64 %3582, 8589934560
  %3587 = sub i64 %3576, %3586
  br label %3588

3588:                                             ; preds = %3588, %3585
  %3589 = phi i64 [ 0, %3585 ], [ %3612, %3588 ]
  %3590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3608, %3588 ]
  %3591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3609, %3588 ]
  %3592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3610, %3588 ]
  %3593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3611, %3588 ]
  %3594 = sub i64 %3576, %3589
  %3595 = getelementptr inbounds i32, ptr %11, i64 %3594
  %3596 = getelementptr inbounds i32, ptr %3595, i64 -7
  %3597 = load <8 x i32>, ptr %3596, align 4, !tbaa !6
  %3598 = shufflevector <8 x i32> %3597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3599 = getelementptr inbounds i32, ptr %3595, i64 -15
  %3600 = load <8 x i32>, ptr %3599, align 4, !tbaa !6
  %3601 = shufflevector <8 x i32> %3600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3602 = getelementptr inbounds i32, ptr %3595, i64 -23
  %3603 = load <8 x i32>, ptr %3602, align 4, !tbaa !6
  %3604 = shufflevector <8 x i32> %3603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3605 = getelementptr inbounds i32, ptr %3595, i64 -31
  %3606 = load <8 x i32>, ptr %3605, align 4, !tbaa !6
  %3607 = shufflevector <8 x i32> %3606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3608 = mul <8 x i32> %3598, %3590
  %3609 = mul <8 x i32> %3601, %3591
  %3610 = mul <8 x i32> %3604, %3592
  %3611 = mul <8 x i32> %3607, %3593
  %3612 = add nuw i64 %3589, 32
  %3613 = icmp eq i64 %3612, %3586
  br i1 %3613, label %3614, label %3588, !llvm.loop !1060

3614:                                             ; preds = %3588
  %3615 = mul <8 x i32> %3609, %3608
  %3616 = mul <8 x i32> %3610, %3615
  %3617 = mul <8 x i32> %3611, %3616
  %3618 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3617)
  %3619 = icmp eq i64 %3582, %3586
  br i1 %3619, label %3632, label %3620

3620:                                             ; preds = %3573, %3614
  %3621 = phi i64 [ %3576, %3573 ], [ %3587, %3614 ]
  %3622 = phi i32 [ 1, %3573 ], [ %3618, %3614 ]
  br label %3623

3623:                                             ; preds = %3620, %3623
  %3624 = phi i64 [ %3629, %3623 ], [ %3621, %3620 ]
  %3625 = phi i32 [ %3628, %3623 ], [ %3622, %3620 ]
  %3626 = getelementptr inbounds i32, ptr %11, i64 %3624
  %3627 = load i32, ptr %3626, align 4, !tbaa !6
  %3628 = mul nsw i32 %3627, %3625
  %3629 = add nsw i64 %3624, -1
  %3630 = trunc i64 %3624 to i32
  %3631 = icmp sgt i32 %3630, 0
  br i1 %3631, label %3623, label %3632, !llvm.loop !1061

3632:                                             ; preds = %3623, %3614
  %3633 = phi i32 [ %3618, %3614 ], [ %3628, %3623 ]
  %3634 = and i64 %3583, 4294967295
  %3635 = getelementptr inbounds i32, ptr %6, i64 %3634
  %3636 = load i32, ptr %3635, align 4, !tbaa !6
  %3637 = mul nsw i32 %3636, %3633
  %3638 = add nsw i32 %3637, %3577
  %3639 = icmp sgt i64 %3575, 2
  %3640 = add nsw i64 %3576, -1
  %3641 = add i32 %3574, 1
  br i1 %3639, label %3573, label %3642, !llvm.loop !1062

3642:                                             ; preds = %3632, %3569
  %3643 = phi i32 [ %3572, %3569 ], [ %3638, %3632 ]
  %3644 = icmp slt i32 %3643, %5
  br i1 %3644, label %3647, label %3645

3645:                                             ; preds = %3642
  %3646 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3647:                                             ; preds = %3642
  %3648 = sext i32 %3643 to i64
  %3649 = getelementptr inbounds double, ptr %3097, i64 %3648
  %3650 = load double, ptr %3649, align 8, !tbaa !19
  %3651 = fptosi double %3650 to i64
  %3652 = mul i64 %3651, %3651
  %3653 = mul i64 %3652, %3652
  %3654 = add nsw i64 %3653, %3570
  store i64 %3654, ptr %3099, align 8, !tbaa !121
  %3655 = add nuw nsw i32 %3571, 1
  br i1 %3420, label %3656, label %3706

3656:                                             ; preds = %3647
  %3657 = load i32, ptr %4, align 4, !tbaa !6
  %3658 = load i32, ptr %12, align 4, !tbaa !6
  %3659 = add nsw i32 %3658, -1
  %3660 = icmp slt i32 %3657, %3659
  br i1 %3660, label %3683, label %3661

3661:                                             ; preds = %3656
  %3662 = icmp eq i32 %3657, %3659
  br i1 %3662, label %3663, label %3699

3663:                                             ; preds = %3661
  store i32 0, ptr %4, align 4, !tbaa !6
  %3664 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3664, ptr %6, align 4, !tbaa !6
  br i1 %3425, label %3706, label %3665

3665:                                             ; preds = %3663, %3693
  %3666 = phi i64 [ %3697, %3693 ], [ 1, %3663 ]
  %3667 = getelementptr inbounds i32, ptr %4, i64 %3666
  %3668 = load i32, ptr %3667, align 4, !tbaa !6
  %3669 = getelementptr inbounds i32, ptr %12, i64 %3666
  %3670 = load i32, ptr %3669, align 4, !tbaa !6
  %3671 = add nsw i32 %3670, -1
  %3672 = icmp slt i32 %3668, %3671
  br i1 %3672, label %3673, label %3691

3673:                                             ; preds = %3665
  br i1 %3660, label %3683, label %3674

3674:                                             ; preds = %3673
  %3675 = shl i64 %3666, 32
  %3676 = add i64 %3675, -4294967296
  %3677 = ashr exact i64 %3676, 32
  %3678 = getelementptr inbounds i32, ptr %7, i64 %3677
  %3679 = load i32, ptr %3678, align 4, !tbaa !6
  %3680 = getelementptr inbounds i32, ptr %6, i64 %3666
  %3681 = load i32, ptr %3680, align 4, !tbaa !6
  %3682 = add nsw i32 %3681, %3679
  store i32 %3682, ptr %3680, align 4, !tbaa !6
  br label %3701

3683:                                             ; preds = %3656, %3673
  %3684 = phi i32 [ %3668, %3673 ], [ %3657, %3656 ]
  %3685 = phi ptr [ %3667, %3673 ], [ %4, %3656 ]
  %3686 = phi i64 [ %3666, %3673 ], [ 0, %3656 ]
  %3687 = add nsw i32 %3684, 1
  store i32 %3687, ptr %3685, align 4, !tbaa !6
  %3688 = getelementptr inbounds i32, ptr %7, i64 %3686
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3686
  br label %3701

3691:                                             ; preds = %3665
  %3692 = icmp eq i32 %3668, %3671
  br i1 %3692, label %3693, label %3699

3693:                                             ; preds = %3691
  store i32 0, ptr %3667, align 4, !tbaa !6
  %3694 = getelementptr inbounds i32, ptr %8, i64 %3666
  %3695 = load i32, ptr %3694, align 4, !tbaa !6
  %3696 = getelementptr inbounds i32, ptr %6, i64 %3666
  store i32 %3695, ptr %3696, align 4, !tbaa !6
  %3697 = add nuw nsw i64 %3666, 1
  %3698 = icmp eq i64 %3697, %3423
  br i1 %3698, label %3706, label %3665, !llvm.loop !1063

3699:                                             ; preds = %3661, %3691
  %3700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3701:                                             ; preds = %3674, %3683
  %3702 = phi ptr [ %3690, %3683 ], [ %3667, %3674 ]
  %3703 = phi i32 [ %3689, %3683 ], [ 1, %3674 ]
  %3704 = load i32, ptr %3702, align 4, !tbaa !6
  %3705 = add nsw i32 %3704, %3703
  store i32 %3705, ptr %3702, align 4, !tbaa !6
  br label %3706

3706:                                             ; preds = %3693, %3701, %3663, %3647
  %3707 = icmp eq i32 %3655, %5
  br i1 %3707, label %5539, label %3569, !llvm.loop !1064

3708:                                             ; preds = %3106
  %3709 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

3710:                                             ; preds = %18
  %3711 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3712 = load ptr, ptr %3711, align 8, !tbaa !10
  %3713 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3714 = load ptr, ptr %3713, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3714, align 8, !tbaa !19
  %3715 = icmp eq i32 %13, 0
  br i1 %3715, label %3716, label %3720

3716:                                             ; preds = %3710
  %3717 = load double, ptr %3712, align 8, !tbaa !19
  %3718 = fmul fast double %3717, %3717
  %3719 = fmul fast double %3718, %3718
  store double %3719, ptr %3714, align 8, !tbaa !19
  br label %5539

3720:                                             ; preds = %3710
  switch i32 %1, label %4312 [
    i32 1, label %3721
    i32 0, label %4018
  ]

3721:                                             ; preds = %3720
  %3722 = getelementptr inbounds i32, ptr %3, i64 %19
  %3723 = load i32, ptr %3722, align 4, !tbaa !6
  %3724 = icmp eq i32 %3723, 0
  %3725 = icmp sgt i32 %5, 0
  br i1 %3724, label %3735, label %3726

3726:                                             ; preds = %3721
  br i1 %3725, label %3727, label %5539

3727:                                             ; preds = %3726
  %3728 = icmp sgt i32 %13, 1
  %3729 = icmp sgt i32 %13, 0
  %3730 = add i32 %13, -2
  %3731 = zext i32 %3730 to i64
  %3732 = zext i32 %13 to i64
  %3733 = add nuw i32 %5, 1
  %3734 = icmp eq i32 %13, 1
  br label %3880

3735:                                             ; preds = %3721
  br i1 %3725, label %3736, label %5539

3736:                                             ; preds = %3735
  %3737 = icmp sgt i32 %13, 1
  %3738 = icmp sgt i32 %13, 0
  %3739 = add i32 %13, -2
  %3740 = zext i32 %3739 to i64
  %3741 = zext i32 %13 to i64
  %3742 = add nuw i32 %5, 1
  %3743 = icmp eq i32 %13, 1
  br label %3744

3744:                                             ; preds = %3736, %3878
  %3745 = phi double [ 0.000000e+00, %3736 ], [ %3828, %3878 ]
  %3746 = phi i32 [ 0, %3736 ], [ %3830, %3878 ]
  %3747 = phi double [ 0.000000e+00, %3736 ], [ %3829, %3878 ]
  %3748 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3737, label %3749, label %3818

3749:                                             ; preds = %3744, %3808
  %3750 = phi i32 [ %3817, %3808 ], [ 0, %3744 ]
  %3751 = phi i64 [ %3759, %3808 ], [ %3741, %3744 ]
  %3752 = phi i64 [ %3816, %3808 ], [ %3740, %3744 ]
  %3753 = phi i32 [ %3814, %3808 ], [ %3748, %3744 ]
  %3754 = sub i32 %3739, %3750
  %3755 = tail call i32 @llvm.smin.i32(i32 %3754, i32 0)
  %3756 = sub i32 %3754, %3755
  %3757 = zext i32 %3756 to i64
  %3758 = add nuw nsw i64 %3757, 1
  %3759 = add nsw i64 %3751, -1
  %3760 = icmp ult i32 %3756, 31
  br i1 %3760, label %3796, label %3761

3761:                                             ; preds = %3749
  %3762 = and i64 %3758, 8589934560
  %3763 = sub i64 %3752, %3762
  br label %3764

3764:                                             ; preds = %3764, %3761
  %3765 = phi i64 [ 0, %3761 ], [ %3788, %3764 ]
  %3766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3784, %3764 ]
  %3767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3785, %3764 ]
  %3768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3786, %3764 ]
  %3769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3787, %3764 ]
  %3770 = sub i64 %3752, %3765
  %3771 = getelementptr inbounds i32, ptr %9, i64 %3770
  %3772 = getelementptr inbounds i32, ptr %3771, i64 -7
  %3773 = load <8 x i32>, ptr %3772, align 4, !tbaa !6
  %3774 = shufflevector <8 x i32> %3773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3775 = getelementptr inbounds i32, ptr %3771, i64 -15
  %3776 = load <8 x i32>, ptr %3775, align 4, !tbaa !6
  %3777 = shufflevector <8 x i32> %3776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3778 = getelementptr inbounds i32, ptr %3771, i64 -23
  %3779 = load <8 x i32>, ptr %3778, align 4, !tbaa !6
  %3780 = shufflevector <8 x i32> %3779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3781 = getelementptr inbounds i32, ptr %3771, i64 -31
  %3782 = load <8 x i32>, ptr %3781, align 4, !tbaa !6
  %3783 = shufflevector <8 x i32> %3782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3784 = mul <8 x i32> %3774, %3766
  %3785 = mul <8 x i32> %3777, %3767
  %3786 = mul <8 x i32> %3780, %3768
  %3787 = mul <8 x i32> %3783, %3769
  %3788 = add nuw i64 %3765, 32
  %3789 = icmp eq i64 %3788, %3762
  br i1 %3789, label %3790, label %3764, !llvm.loop !1065

3790:                                             ; preds = %3764
  %3791 = mul <8 x i32> %3785, %3784
  %3792 = mul <8 x i32> %3786, %3791
  %3793 = mul <8 x i32> %3787, %3792
  %3794 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3793)
  %3795 = icmp eq i64 %3758, %3762
  br i1 %3795, label %3808, label %3796

3796:                                             ; preds = %3749, %3790
  %3797 = phi i64 [ %3752, %3749 ], [ %3763, %3790 ]
  %3798 = phi i32 [ 1, %3749 ], [ %3794, %3790 ]
  br label %3799

3799:                                             ; preds = %3796, %3799
  %3800 = phi i64 [ %3805, %3799 ], [ %3797, %3796 ]
  %3801 = phi i32 [ %3804, %3799 ], [ %3798, %3796 ]
  %3802 = getelementptr inbounds i32, ptr %9, i64 %3800
  %3803 = load i32, ptr %3802, align 4, !tbaa !6
  %3804 = mul nsw i32 %3803, %3801
  %3805 = add nsw i64 %3800, -1
  %3806 = trunc i64 %3800 to i32
  %3807 = icmp sgt i32 %3806, 0
  br i1 %3807, label %3799, label %3808, !llvm.loop !1066

3808:                                             ; preds = %3799, %3790
  %3809 = phi i32 [ %3794, %3790 ], [ %3804, %3799 ]
  %3810 = and i64 %3759, 4294967295
  %3811 = getelementptr inbounds i32, ptr %6, i64 %3810
  %3812 = load i32, ptr %3811, align 4, !tbaa !6
  %3813 = mul nsw i32 %3812, %3809
  %3814 = add nsw i32 %3813, %3753
  %3815 = icmp sgt i64 %3751, 2
  %3816 = add nsw i64 %3752, -1
  %3817 = add i32 %3750, 1
  br i1 %3815, label %3749, label %3818, !llvm.loop !1067

3818:                                             ; preds = %3808, %3744
  %3819 = phi i32 [ %3748, %3744 ], [ %3814, %3808 ]
  %3820 = sext i32 %3819 to i64
  %3821 = getelementptr inbounds double, ptr %2, i64 %3820
  %3822 = load double, ptr %3821, align 8, !tbaa !19
  %3823 = getelementptr inbounds double, ptr %3712, i64 %3820
  %3824 = load double, ptr %3823, align 8, !tbaa !19
  %3825 = fmul fast double %3824, %3822
  %3826 = fmul fast double %3825, %3825
  %3827 = fmul fast double %3826, %3826
  %3828 = fadd fast double %3827, %3745
  store double %3828, ptr %3714, align 8, !tbaa !19
  %3829 = fadd fast double %3822, %3747
  %3830 = add nuw nsw i32 %3746, 1
  br i1 %3738, label %3831, label %3878

3831:                                             ; preds = %3818
  %3832 = load i32, ptr %4, align 4, !tbaa !6
  %3833 = load i32, ptr %12, align 4, !tbaa !6
  %3834 = add nsw i32 %3833, -1
  %3835 = icmp slt i32 %3832, %3834
  br i1 %3835, label %3855, label %3836

3836:                                             ; preds = %3831
  %3837 = icmp eq i32 %3832, %3834
  br i1 %3837, label %3838, label %3871

3838:                                             ; preds = %3836
  store i32 0, ptr %4, align 4, !tbaa !6
  %3839 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3839, ptr %6, align 4, !tbaa !6
  br i1 %3743, label %3878, label %3840

3840:                                             ; preds = %3838, %3865
  %3841 = phi i64 [ %3869, %3865 ], [ 1, %3838 ]
  %3842 = getelementptr inbounds i32, ptr %4, i64 %3841
  %3843 = load i32, ptr %3842, align 4, !tbaa !6
  %3844 = getelementptr inbounds i32, ptr %12, i64 %3841
  %3845 = load i32, ptr %3844, align 4, !tbaa !6
  %3846 = add nsw i32 %3845, -1
  %3847 = icmp slt i32 %3843, %3846
  br i1 %3847, label %3848, label %3863

3848:                                             ; preds = %3840
  br i1 %3835, label %3855, label %3849

3849:                                             ; preds = %3848
  %3850 = getelementptr inbounds i32, ptr %7, i64 %3841
  %3851 = load i32, ptr %3850, align 4, !tbaa !6
  %3852 = getelementptr inbounds i32, ptr %6, i64 %3841
  %3853 = load i32, ptr %3852, align 4, !tbaa !6
  %3854 = add nsw i32 %3853, %3851
  store i32 %3854, ptr %3852, align 4, !tbaa !6
  br label %3873

3855:                                             ; preds = %3831, %3848
  %3856 = phi i32 [ %3843, %3848 ], [ %3832, %3831 ]
  %3857 = phi ptr [ %3842, %3848 ], [ %4, %3831 ]
  %3858 = phi i64 [ %3841, %3848 ], [ 0, %3831 ]
  %3859 = add nsw i32 %3856, 1
  store i32 %3859, ptr %3857, align 4, !tbaa !6
  %3860 = getelementptr inbounds i32, ptr %7, i64 %3858
  %3861 = load i32, ptr %3860, align 4, !tbaa !6
  %3862 = getelementptr inbounds i32, ptr %6, i64 %3858
  br label %3873

3863:                                             ; preds = %3840
  %3864 = icmp eq i32 %3843, %3846
  br i1 %3864, label %3865, label %3871

3865:                                             ; preds = %3863
  store i32 0, ptr %3842, align 4, !tbaa !6
  %3866 = getelementptr inbounds i32, ptr %8, i64 %3841
  %3867 = load i32, ptr %3866, align 4, !tbaa !6
  %3868 = getelementptr inbounds i32, ptr %6, i64 %3841
  store i32 %3867, ptr %3868, align 4, !tbaa !6
  %3869 = add nuw nsw i64 %3841, 1
  %3870 = icmp eq i64 %3869, %3741
  br i1 %3870, label %3878, label %3840, !llvm.loop !1068

3871:                                             ; preds = %3836, %3863
  %3872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3873:                                             ; preds = %3849, %3855
  %3874 = phi ptr [ %3862, %3855 ], [ %3842, %3849 ]
  %3875 = phi i32 [ %3861, %3855 ], [ 1, %3849 ]
  %3876 = load i32, ptr %3874, align 4, !tbaa !6
  %3877 = add nsw i32 %3876, %3875
  store i32 %3877, ptr %3874, align 4, !tbaa !6
  br label %3878

3878:                                             ; preds = %3865, %3873, %3838, %3818
  %3879 = icmp eq i32 %3830, %5
  br i1 %3879, label %5539, label %3744, !llvm.loop !1069

3880:                                             ; preds = %3727, %4016
  %3881 = phi double [ 0.000000e+00, %3727 ], [ %3964, %4016 ]
  %3882 = phi i32 [ 0, %3727 ], [ %3965, %4016 ]
  %3883 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3728, label %3884, label %3953

3884:                                             ; preds = %3880, %3943
  %3885 = phi i32 [ %3952, %3943 ], [ 0, %3880 ]
  %3886 = phi i64 [ %3894, %3943 ], [ %3732, %3880 ]
  %3887 = phi i64 [ %3951, %3943 ], [ %3731, %3880 ]
  %3888 = phi i32 [ %3949, %3943 ], [ %3883, %3880 ]
  %3889 = sub i32 %3730, %3885
  %3890 = tail call i32 @llvm.smin.i32(i32 %3889, i32 0)
  %3891 = sub i32 %3889, %3890
  %3892 = zext i32 %3891 to i64
  %3893 = add nuw nsw i64 %3892, 1
  %3894 = add nsw i64 %3886, -1
  %3895 = icmp ult i32 %3891, 31
  br i1 %3895, label %3931, label %3896

3896:                                             ; preds = %3884
  %3897 = and i64 %3893, 8589934560
  %3898 = sub i64 %3887, %3897
  br label %3899

3899:                                             ; preds = %3899, %3896
  %3900 = phi i64 [ 0, %3896 ], [ %3923, %3899 ]
  %3901 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3919, %3899 ]
  %3902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3920, %3899 ]
  %3903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3921, %3899 ]
  %3904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3922, %3899 ]
  %3905 = sub i64 %3887, %3900
  %3906 = getelementptr inbounds i32, ptr %11, i64 %3905
  %3907 = getelementptr inbounds i32, ptr %3906, i64 -7
  %3908 = load <8 x i32>, ptr %3907, align 4, !tbaa !6
  %3909 = shufflevector <8 x i32> %3908, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3910 = getelementptr inbounds i32, ptr %3906, i64 -15
  %3911 = load <8 x i32>, ptr %3910, align 4, !tbaa !6
  %3912 = shufflevector <8 x i32> %3911, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3913 = getelementptr inbounds i32, ptr %3906, i64 -23
  %3914 = load <8 x i32>, ptr %3913, align 4, !tbaa !6
  %3915 = shufflevector <8 x i32> %3914, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3916 = getelementptr inbounds i32, ptr %3906, i64 -31
  %3917 = load <8 x i32>, ptr %3916, align 4, !tbaa !6
  %3918 = shufflevector <8 x i32> %3917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3919 = mul <8 x i32> %3909, %3901
  %3920 = mul <8 x i32> %3912, %3902
  %3921 = mul <8 x i32> %3915, %3903
  %3922 = mul <8 x i32> %3918, %3904
  %3923 = add nuw i64 %3900, 32
  %3924 = icmp eq i64 %3923, %3897
  br i1 %3924, label %3925, label %3899, !llvm.loop !1070

3925:                                             ; preds = %3899
  %3926 = mul <8 x i32> %3920, %3919
  %3927 = mul <8 x i32> %3921, %3926
  %3928 = mul <8 x i32> %3922, %3927
  %3929 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3928)
  %3930 = icmp eq i64 %3893, %3897
  br i1 %3930, label %3943, label %3931

3931:                                             ; preds = %3884, %3925
  %3932 = phi i64 [ %3887, %3884 ], [ %3898, %3925 ]
  %3933 = phi i32 [ 1, %3884 ], [ %3929, %3925 ]
  br label %3934

3934:                                             ; preds = %3931, %3934
  %3935 = phi i64 [ %3940, %3934 ], [ %3932, %3931 ]
  %3936 = phi i32 [ %3939, %3934 ], [ %3933, %3931 ]
  %3937 = getelementptr inbounds i32, ptr %11, i64 %3935
  %3938 = load i32, ptr %3937, align 4, !tbaa !6
  %3939 = mul nsw i32 %3938, %3936
  %3940 = add nsw i64 %3935, -1
  %3941 = trunc i64 %3935 to i32
  %3942 = icmp sgt i32 %3941, 0
  br i1 %3942, label %3934, label %3943, !llvm.loop !1071

3943:                                             ; preds = %3934, %3925
  %3944 = phi i32 [ %3929, %3925 ], [ %3939, %3934 ]
  %3945 = and i64 %3894, 4294967295
  %3946 = getelementptr inbounds i32, ptr %6, i64 %3945
  %3947 = load i32, ptr %3946, align 4, !tbaa !6
  %3948 = mul nsw i32 %3947, %3944
  %3949 = add nsw i32 %3948, %3888
  %3950 = icmp sgt i64 %3886, 2
  %3951 = add nsw i64 %3887, -1
  %3952 = add i32 %3885, 1
  br i1 %3950, label %3884, label %3953, !llvm.loop !1072

3953:                                             ; preds = %3943, %3880
  %3954 = phi i32 [ %3883, %3880 ], [ %3949, %3943 ]
  %3955 = icmp slt i32 %3954, %5
  br i1 %3955, label %3958, label %3956

3956:                                             ; preds = %3953
  %3957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3958:                                             ; preds = %3953
  %3959 = sext i32 %3954 to i64
  %3960 = getelementptr inbounds double, ptr %3712, i64 %3959
  %3961 = load double, ptr %3960, align 8, !tbaa !19
  %3962 = fmul fast double %3961, %3961
  %3963 = fmul fast double %3962, %3962
  %3964 = fadd fast double %3963, %3881
  store double %3964, ptr %3714, align 8, !tbaa !19
  %3965 = add nuw nsw i32 %3882, 1
  br i1 %3729, label %3966, label %4016

3966:                                             ; preds = %3958
  %3967 = load i32, ptr %4, align 4, !tbaa !6
  %3968 = load i32, ptr %12, align 4, !tbaa !6
  %3969 = add nsw i32 %3968, -1
  %3970 = icmp slt i32 %3967, %3969
  br i1 %3970, label %3993, label %3971

3971:                                             ; preds = %3966
  %3972 = icmp eq i32 %3967, %3969
  br i1 %3972, label %3973, label %4009

3973:                                             ; preds = %3971
  store i32 0, ptr %4, align 4, !tbaa !6
  %3974 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3974, ptr %6, align 4, !tbaa !6
  br i1 %3734, label %4016, label %3975

3975:                                             ; preds = %3973, %4003
  %3976 = phi i64 [ %4007, %4003 ], [ 1, %3973 ]
  %3977 = getelementptr inbounds i32, ptr %4, i64 %3976
  %3978 = load i32, ptr %3977, align 4, !tbaa !6
  %3979 = getelementptr inbounds i32, ptr %12, i64 %3976
  %3980 = load i32, ptr %3979, align 4, !tbaa !6
  %3981 = add nsw i32 %3980, -1
  %3982 = icmp slt i32 %3978, %3981
  br i1 %3982, label %3983, label %4001

3983:                                             ; preds = %3975
  br i1 %3970, label %3993, label %3984

3984:                                             ; preds = %3983
  %3985 = shl i64 %3976, 32
  %3986 = add i64 %3985, -4294967296
  %3987 = ashr exact i64 %3986, 32
  %3988 = getelementptr inbounds i32, ptr %7, i64 %3987
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = getelementptr inbounds i32, ptr %6, i64 %3976
  %3991 = load i32, ptr %3990, align 4, !tbaa !6
  %3992 = add nsw i32 %3991, %3989
  store i32 %3992, ptr %3990, align 4, !tbaa !6
  br label %4011

3993:                                             ; preds = %3966, %3983
  %3994 = phi i32 [ %3978, %3983 ], [ %3967, %3966 ]
  %3995 = phi ptr [ %3977, %3983 ], [ %4, %3966 ]
  %3996 = phi i64 [ %3976, %3983 ], [ 0, %3966 ]
  %3997 = add nsw i32 %3994, 1
  store i32 %3997, ptr %3995, align 4, !tbaa !6
  %3998 = getelementptr inbounds i32, ptr %7, i64 %3996
  %3999 = load i32, ptr %3998, align 4, !tbaa !6
  %4000 = getelementptr inbounds i32, ptr %6, i64 %3996
  br label %4011

4001:                                             ; preds = %3975
  %4002 = icmp eq i32 %3978, %3981
  br i1 %4002, label %4003, label %4009

4003:                                             ; preds = %4001
  store i32 0, ptr %3977, align 4, !tbaa !6
  %4004 = getelementptr inbounds i32, ptr %8, i64 %3976
  %4005 = load i32, ptr %4004, align 4, !tbaa !6
  %4006 = getelementptr inbounds i32, ptr %6, i64 %3976
  store i32 %4005, ptr %4006, align 4, !tbaa !6
  %4007 = add nuw nsw i64 %3976, 1
  %4008 = icmp eq i64 %4007, %3732
  br i1 %4008, label %4016, label %3975, !llvm.loop !1073

4009:                                             ; preds = %3971, %4001
  %4010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4011:                                             ; preds = %3984, %3993
  %4012 = phi ptr [ %4000, %3993 ], [ %3977, %3984 ]
  %4013 = phi i32 [ %3999, %3993 ], [ 1, %3984 ]
  %4014 = load i32, ptr %4012, align 4, !tbaa !6
  %4015 = add nsw i32 %4014, %4013
  store i32 %4015, ptr %4012, align 4, !tbaa !6
  br label %4016

4016:                                             ; preds = %4003, %4011, %3973, %3958
  %4017 = icmp eq i32 %3965, %5
  br i1 %4017, label %5539, label %3880, !llvm.loop !1074

4018:                                             ; preds = %3720
  %4019 = getelementptr inbounds i32, ptr %3, i64 %19
  %4020 = load i32, ptr %4019, align 4, !tbaa !6
  %4021 = icmp eq i32 %4020, 0
  %4022 = icmp sgt i32 %5, 0
  br i1 %4021, label %4032, label %4023

4023:                                             ; preds = %4018
  br i1 %4022, label %4024, label %5539

4024:                                             ; preds = %4023
  %4025 = icmp sgt i32 %13, 1
  %4026 = icmp sgt i32 %13, 0
  %4027 = add i32 %13, -2
  %4028 = zext i32 %4027 to i64
  %4029 = zext i32 %13 to i64
  %4030 = add nuw i32 %5, 1
  %4031 = icmp eq i32 %13, 1
  br label %4174

4032:                                             ; preds = %4018
  br i1 %4022, label %4033, label %5539

4033:                                             ; preds = %4032
  %4034 = icmp sgt i32 %13, 1
  %4035 = icmp sgt i32 %13, 0
  %4036 = add i32 %13, -2
  %4037 = zext i32 %4036 to i64
  %4038 = zext i32 %13 to i64
  %4039 = add nuw i32 %5, 1
  %4040 = icmp eq i32 %13, 1
  br label %4041

4041:                                             ; preds = %4033, %4172
  %4042 = phi double [ 0.000000e+00, %4033 ], [ %4122, %4172 ]
  %4043 = phi i32 [ 0, %4033 ], [ %4124, %4172 ]
  %4044 = phi double [ 0.000000e+00, %4033 ], [ %4123, %4172 ]
  %4045 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4034, label %4046, label %4115

4046:                                             ; preds = %4041, %4105
  %4047 = phi i32 [ %4114, %4105 ], [ 0, %4041 ]
  %4048 = phi i64 [ %4056, %4105 ], [ %4038, %4041 ]
  %4049 = phi i64 [ %4113, %4105 ], [ %4037, %4041 ]
  %4050 = phi i32 [ %4111, %4105 ], [ %4045, %4041 ]
  %4051 = sub i32 %4036, %4047
  %4052 = tail call i32 @llvm.smin.i32(i32 %4051, i32 0)
  %4053 = sub i32 %4051, %4052
  %4054 = zext i32 %4053 to i64
  %4055 = add nuw nsw i64 %4054, 1
  %4056 = add nsw i64 %4048, -1
  %4057 = icmp ult i32 %4053, 31
  br i1 %4057, label %4093, label %4058

4058:                                             ; preds = %4046
  %4059 = and i64 %4055, 8589934560
  %4060 = sub i64 %4049, %4059
  br label %4061

4061:                                             ; preds = %4061, %4058
  %4062 = phi i64 [ 0, %4058 ], [ %4085, %4061 ]
  %4063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4081, %4061 ]
  %4064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4082, %4061 ]
  %4065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4083, %4061 ]
  %4066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4084, %4061 ]
  %4067 = sub i64 %4049, %4062
  %4068 = getelementptr inbounds i32, ptr %9, i64 %4067
  %4069 = getelementptr inbounds i32, ptr %4068, i64 -7
  %4070 = load <8 x i32>, ptr %4069, align 4, !tbaa !6
  %4071 = shufflevector <8 x i32> %4070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4072 = getelementptr inbounds i32, ptr %4068, i64 -15
  %4073 = load <8 x i32>, ptr %4072, align 4, !tbaa !6
  %4074 = shufflevector <8 x i32> %4073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4075 = getelementptr inbounds i32, ptr %4068, i64 -23
  %4076 = load <8 x i32>, ptr %4075, align 4, !tbaa !6
  %4077 = shufflevector <8 x i32> %4076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4078 = getelementptr inbounds i32, ptr %4068, i64 -31
  %4079 = load <8 x i32>, ptr %4078, align 4, !tbaa !6
  %4080 = shufflevector <8 x i32> %4079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4081 = mul <8 x i32> %4071, %4063
  %4082 = mul <8 x i32> %4074, %4064
  %4083 = mul <8 x i32> %4077, %4065
  %4084 = mul <8 x i32> %4080, %4066
  %4085 = add nuw i64 %4062, 32
  %4086 = icmp eq i64 %4085, %4059
  br i1 %4086, label %4087, label %4061, !llvm.loop !1075

4087:                                             ; preds = %4061
  %4088 = mul <8 x i32> %4082, %4081
  %4089 = mul <8 x i32> %4083, %4088
  %4090 = mul <8 x i32> %4084, %4089
  %4091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4090)
  %4092 = icmp eq i64 %4055, %4059
  br i1 %4092, label %4105, label %4093

4093:                                             ; preds = %4046, %4087
  %4094 = phi i64 [ %4049, %4046 ], [ %4060, %4087 ]
  %4095 = phi i32 [ 1, %4046 ], [ %4091, %4087 ]
  br label %4096

4096:                                             ; preds = %4093, %4096
  %4097 = phi i64 [ %4102, %4096 ], [ %4094, %4093 ]
  %4098 = phi i32 [ %4101, %4096 ], [ %4095, %4093 ]
  %4099 = getelementptr inbounds i32, ptr %9, i64 %4097
  %4100 = load i32, ptr %4099, align 4, !tbaa !6
  %4101 = mul nsw i32 %4100, %4098
  %4102 = add nsw i64 %4097, -1
  %4103 = trunc i64 %4097 to i32
  %4104 = icmp sgt i32 %4103, 0
  br i1 %4104, label %4096, label %4105, !llvm.loop !1076

4105:                                             ; preds = %4096, %4087
  %4106 = phi i32 [ %4091, %4087 ], [ %4101, %4096 ]
  %4107 = and i64 %4056, 4294967295
  %4108 = getelementptr inbounds i32, ptr %6, i64 %4107
  %4109 = load i32, ptr %4108, align 4, !tbaa !6
  %4110 = mul nsw i32 %4109, %4106
  %4111 = add nsw i32 %4110, %4050
  %4112 = icmp sgt i64 %4048, 2
  %4113 = add nsw i64 %4049, -1
  %4114 = add i32 %4047, 1
  br i1 %4112, label %4046, label %4115, !llvm.loop !1077

4115:                                             ; preds = %4105, %4041
  %4116 = phi i32 [ %4045, %4041 ], [ %4111, %4105 ]
  %4117 = sext i32 %4116 to i64
  %4118 = getelementptr inbounds double, ptr %3712, i64 %4117
  %4119 = load double, ptr %4118, align 8, !tbaa !19
  %4120 = fmul fast double %4119, %4119
  %4121 = fmul fast double %4120, %4120
  %4122 = fadd fast double %4121, %4042
  store double %4122, ptr %3714, align 8, !tbaa !19
  %4123 = fadd fast double %4044, 1.000000e+00
  %4124 = add nuw nsw i32 %4043, 1
  br i1 %4035, label %4125, label %4172

4125:                                             ; preds = %4115
  %4126 = load i32, ptr %4, align 4, !tbaa !6
  %4127 = load i32, ptr %12, align 4, !tbaa !6
  %4128 = add nsw i32 %4127, -1
  %4129 = icmp slt i32 %4126, %4128
  br i1 %4129, label %4149, label %4130

4130:                                             ; preds = %4125
  %4131 = icmp eq i32 %4126, %4128
  br i1 %4131, label %4132, label %4165

4132:                                             ; preds = %4130
  store i32 0, ptr %4, align 4, !tbaa !6
  %4133 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4133, ptr %6, align 4, !tbaa !6
  br i1 %4040, label %4172, label %4134

4134:                                             ; preds = %4132, %4159
  %4135 = phi i64 [ %4163, %4159 ], [ 1, %4132 ]
  %4136 = getelementptr inbounds i32, ptr %4, i64 %4135
  %4137 = load i32, ptr %4136, align 4, !tbaa !6
  %4138 = getelementptr inbounds i32, ptr %12, i64 %4135
  %4139 = load i32, ptr %4138, align 4, !tbaa !6
  %4140 = add nsw i32 %4139, -1
  %4141 = icmp slt i32 %4137, %4140
  br i1 %4141, label %4142, label %4157

4142:                                             ; preds = %4134
  br i1 %4129, label %4149, label %4143

4143:                                             ; preds = %4142
  %4144 = getelementptr inbounds i32, ptr %7, i64 %4135
  %4145 = load i32, ptr %4144, align 4, !tbaa !6
  %4146 = getelementptr inbounds i32, ptr %6, i64 %4135
  %4147 = load i32, ptr %4146, align 4, !tbaa !6
  %4148 = add nsw i32 %4147, %4145
  store i32 %4148, ptr %4146, align 4, !tbaa !6
  br label %4167

4149:                                             ; preds = %4125, %4142
  %4150 = phi i32 [ %4137, %4142 ], [ %4126, %4125 ]
  %4151 = phi ptr [ %4136, %4142 ], [ %4, %4125 ]
  %4152 = phi i64 [ %4135, %4142 ], [ 0, %4125 ]
  %4153 = add nsw i32 %4150, 1
  store i32 %4153, ptr %4151, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %7, i64 %4152
  %4155 = load i32, ptr %4154, align 4, !tbaa !6
  %4156 = getelementptr inbounds i32, ptr %6, i64 %4152
  br label %4167

4157:                                             ; preds = %4134
  %4158 = icmp eq i32 %4137, %4140
  br i1 %4158, label %4159, label %4165

4159:                                             ; preds = %4157
  store i32 0, ptr %4136, align 4, !tbaa !6
  %4160 = getelementptr inbounds i32, ptr %8, i64 %4135
  %4161 = load i32, ptr %4160, align 4, !tbaa !6
  %4162 = getelementptr inbounds i32, ptr %6, i64 %4135
  store i32 %4161, ptr %4162, align 4, !tbaa !6
  %4163 = add nuw nsw i64 %4135, 1
  %4164 = icmp eq i64 %4163, %4038
  br i1 %4164, label %4172, label %4134, !llvm.loop !1078

4165:                                             ; preds = %4130, %4157
  %4166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4167:                                             ; preds = %4143, %4149
  %4168 = phi ptr [ %4156, %4149 ], [ %4136, %4143 ]
  %4169 = phi i32 [ %4155, %4149 ], [ 1, %4143 ]
  %4170 = load i32, ptr %4168, align 4, !tbaa !6
  %4171 = add nsw i32 %4170, %4169
  store i32 %4171, ptr %4168, align 4, !tbaa !6
  br label %4172

4172:                                             ; preds = %4159, %4167, %4132, %4115
  %4173 = icmp eq i32 %4124, %5
  br i1 %4173, label %5539, label %4041, !llvm.loop !1079

4174:                                             ; preds = %4024, %4310
  %4175 = phi double [ 0.000000e+00, %4024 ], [ %4258, %4310 ]
  %4176 = phi i32 [ 0, %4024 ], [ %4259, %4310 ]
  %4177 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4025, label %4178, label %4247

4178:                                             ; preds = %4174, %4237
  %4179 = phi i32 [ %4246, %4237 ], [ 0, %4174 ]
  %4180 = phi i64 [ %4188, %4237 ], [ %4029, %4174 ]
  %4181 = phi i64 [ %4245, %4237 ], [ %4028, %4174 ]
  %4182 = phi i32 [ %4243, %4237 ], [ %4177, %4174 ]
  %4183 = sub i32 %4027, %4179
  %4184 = tail call i32 @llvm.smin.i32(i32 %4183, i32 0)
  %4185 = sub i32 %4183, %4184
  %4186 = zext i32 %4185 to i64
  %4187 = add nuw nsw i64 %4186, 1
  %4188 = add nsw i64 %4180, -1
  %4189 = icmp ult i32 %4185, 31
  br i1 %4189, label %4225, label %4190

4190:                                             ; preds = %4178
  %4191 = and i64 %4187, 8589934560
  %4192 = sub i64 %4181, %4191
  br label %4193

4193:                                             ; preds = %4193, %4190
  %4194 = phi i64 [ 0, %4190 ], [ %4217, %4193 ]
  %4195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4213, %4193 ]
  %4196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4214, %4193 ]
  %4197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4215, %4193 ]
  %4198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4216, %4193 ]
  %4199 = sub i64 %4181, %4194
  %4200 = getelementptr inbounds i32, ptr %11, i64 %4199
  %4201 = getelementptr inbounds i32, ptr %4200, i64 -7
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !6
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = getelementptr inbounds i32, ptr %4200, i64 -15
  %4205 = load <8 x i32>, ptr %4204, align 4, !tbaa !6
  %4206 = shufflevector <8 x i32> %4205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4207 = getelementptr inbounds i32, ptr %4200, i64 -23
  %4208 = load <8 x i32>, ptr %4207, align 4, !tbaa !6
  %4209 = shufflevector <8 x i32> %4208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4210 = getelementptr inbounds i32, ptr %4200, i64 -31
  %4211 = load <8 x i32>, ptr %4210, align 4, !tbaa !6
  %4212 = shufflevector <8 x i32> %4211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4213 = mul <8 x i32> %4203, %4195
  %4214 = mul <8 x i32> %4206, %4196
  %4215 = mul <8 x i32> %4209, %4197
  %4216 = mul <8 x i32> %4212, %4198
  %4217 = add nuw i64 %4194, 32
  %4218 = icmp eq i64 %4217, %4191
  br i1 %4218, label %4219, label %4193, !llvm.loop !1080

4219:                                             ; preds = %4193
  %4220 = mul <8 x i32> %4214, %4213
  %4221 = mul <8 x i32> %4215, %4220
  %4222 = mul <8 x i32> %4216, %4221
  %4223 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4222)
  %4224 = icmp eq i64 %4187, %4191
  br i1 %4224, label %4237, label %4225

4225:                                             ; preds = %4178, %4219
  %4226 = phi i64 [ %4181, %4178 ], [ %4192, %4219 ]
  %4227 = phi i32 [ 1, %4178 ], [ %4223, %4219 ]
  br label %4228

4228:                                             ; preds = %4225, %4228
  %4229 = phi i64 [ %4234, %4228 ], [ %4226, %4225 ]
  %4230 = phi i32 [ %4233, %4228 ], [ %4227, %4225 ]
  %4231 = getelementptr inbounds i32, ptr %11, i64 %4229
  %4232 = load i32, ptr %4231, align 4, !tbaa !6
  %4233 = mul nsw i32 %4232, %4230
  %4234 = add nsw i64 %4229, -1
  %4235 = trunc i64 %4229 to i32
  %4236 = icmp sgt i32 %4235, 0
  br i1 %4236, label %4228, label %4237, !llvm.loop !1081

4237:                                             ; preds = %4228, %4219
  %4238 = phi i32 [ %4223, %4219 ], [ %4233, %4228 ]
  %4239 = and i64 %4188, 4294967295
  %4240 = getelementptr inbounds i32, ptr %6, i64 %4239
  %4241 = load i32, ptr %4240, align 4, !tbaa !6
  %4242 = mul nsw i32 %4241, %4238
  %4243 = add nsw i32 %4242, %4182
  %4244 = icmp sgt i64 %4180, 2
  %4245 = add nsw i64 %4181, -1
  %4246 = add i32 %4179, 1
  br i1 %4244, label %4178, label %4247, !llvm.loop !1082

4247:                                             ; preds = %4237, %4174
  %4248 = phi i32 [ %4177, %4174 ], [ %4243, %4237 ]
  %4249 = icmp slt i32 %4248, %5
  br i1 %4249, label %4252, label %4250

4250:                                             ; preds = %4247
  %4251 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4252:                                             ; preds = %4247
  %4253 = sext i32 %4248 to i64
  %4254 = getelementptr inbounds double, ptr %3712, i64 %4253
  %4255 = load double, ptr %4254, align 8, !tbaa !19
  %4256 = fmul fast double %4255, %4255
  %4257 = fmul fast double %4256, %4256
  %4258 = fadd fast double %4257, %4175
  store double %4258, ptr %3714, align 8, !tbaa !19
  %4259 = add nuw nsw i32 %4176, 1
  br i1 %4026, label %4260, label %4310

4260:                                             ; preds = %4252
  %4261 = load i32, ptr %4, align 4, !tbaa !6
  %4262 = load i32, ptr %12, align 4, !tbaa !6
  %4263 = add nsw i32 %4262, -1
  %4264 = icmp slt i32 %4261, %4263
  br i1 %4264, label %4287, label %4265

4265:                                             ; preds = %4260
  %4266 = icmp eq i32 %4261, %4263
  br i1 %4266, label %4267, label %4303

4267:                                             ; preds = %4265
  store i32 0, ptr %4, align 4, !tbaa !6
  %4268 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4268, ptr %6, align 4, !tbaa !6
  br i1 %4031, label %4310, label %4269

4269:                                             ; preds = %4267, %4297
  %4270 = phi i64 [ %4301, %4297 ], [ 1, %4267 ]
  %4271 = getelementptr inbounds i32, ptr %4, i64 %4270
  %4272 = load i32, ptr %4271, align 4, !tbaa !6
  %4273 = getelementptr inbounds i32, ptr %12, i64 %4270
  %4274 = load i32, ptr %4273, align 4, !tbaa !6
  %4275 = add nsw i32 %4274, -1
  %4276 = icmp slt i32 %4272, %4275
  br i1 %4276, label %4277, label %4295

4277:                                             ; preds = %4269
  br i1 %4264, label %4287, label %4278

4278:                                             ; preds = %4277
  %4279 = shl i64 %4270, 32
  %4280 = add i64 %4279, -4294967296
  %4281 = ashr exact i64 %4280, 32
  %4282 = getelementptr inbounds i32, ptr %7, i64 %4281
  %4283 = load i32, ptr %4282, align 4, !tbaa !6
  %4284 = getelementptr inbounds i32, ptr %6, i64 %4270
  %4285 = load i32, ptr %4284, align 4, !tbaa !6
  %4286 = add nsw i32 %4285, %4283
  store i32 %4286, ptr %4284, align 4, !tbaa !6
  br label %4305

4287:                                             ; preds = %4260, %4277
  %4288 = phi i32 [ %4272, %4277 ], [ %4261, %4260 ]
  %4289 = phi ptr [ %4271, %4277 ], [ %4, %4260 ]
  %4290 = phi i64 [ %4270, %4277 ], [ 0, %4260 ]
  %4291 = add nsw i32 %4288, 1
  store i32 %4291, ptr %4289, align 4, !tbaa !6
  %4292 = getelementptr inbounds i32, ptr %7, i64 %4290
  %4293 = load i32, ptr %4292, align 4, !tbaa !6
  %4294 = getelementptr inbounds i32, ptr %6, i64 %4290
  br label %4305

4295:                                             ; preds = %4269
  %4296 = icmp eq i32 %4272, %4275
  br i1 %4296, label %4297, label %4303

4297:                                             ; preds = %4295
  store i32 0, ptr %4271, align 4, !tbaa !6
  %4298 = getelementptr inbounds i32, ptr %8, i64 %4270
  %4299 = load i32, ptr %4298, align 4, !tbaa !6
  %4300 = getelementptr inbounds i32, ptr %6, i64 %4270
  store i32 %4299, ptr %4300, align 4, !tbaa !6
  %4301 = add nuw nsw i64 %4270, 1
  %4302 = icmp eq i64 %4301, %4029
  br i1 %4302, label %4310, label %4269, !llvm.loop !1083

4303:                                             ; preds = %4265, %4295
  %4304 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4305:                                             ; preds = %4278, %4287
  %4306 = phi ptr [ %4294, %4287 ], [ %4271, %4278 ]
  %4307 = phi i32 [ %4293, %4287 ], [ 1, %4278 ]
  %4308 = load i32, ptr %4306, align 4, !tbaa !6
  %4309 = add nsw i32 %4308, %4307
  store i32 %4309, ptr %4306, align 4, !tbaa !6
  br label %4310

4310:                                             ; preds = %4297, %4305, %4267, %4252
  %4311 = icmp eq i32 %4259, %5
  br i1 %4311, label %5539, label %4174, !llvm.loop !1084

4312:                                             ; preds = %3720
  %4313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1740, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

4314:                                             ; preds = %18
  %4315 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4316 = load ptr, ptr %4315, align 8, !tbaa !10
  %4317 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4318 = load ptr, ptr %4317, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4318, align 4, !tbaa !163
  %4319 = icmp eq i32 %13, 0
  br i1 %4319, label %4320, label %4325

4320:                                             ; preds = %4314
  %4321 = load double, ptr %4316, align 8, !tbaa !19
  %4322 = fptrunc double %4321 to float
  %4323 = fmul fast float %4322, %4322
  %4324 = fmul fast float %4323, %4323
  store float %4324, ptr %4318, align 4, !tbaa !163
  br label %5539

4325:                                             ; preds = %4314
  switch i32 %1, label %4927 [
    i32 1, label %4326
    i32 0, label %4631
  ]

4326:                                             ; preds = %4325
  %4327 = getelementptr inbounds i32, ptr %3, i64 %19
  %4328 = load i32, ptr %4327, align 4, !tbaa !6
  %4329 = icmp eq i32 %4328, 0
  %4330 = icmp sgt i32 %5, 0
  br i1 %4329, label %4340, label %4331

4331:                                             ; preds = %4326
  br i1 %4330, label %4332, label %5539

4332:                                             ; preds = %4331
  %4333 = icmp sgt i32 %13, 1
  %4334 = icmp sgt i32 %13, 0
  %4335 = add i32 %13, -2
  %4336 = zext i32 %4335 to i64
  %4337 = zext i32 %13 to i64
  %4338 = add nuw i32 %5, 1
  %4339 = icmp eq i32 %13, 1
  br label %4489

4340:                                             ; preds = %4326
  br i1 %4330, label %4341, label %5539

4341:                                             ; preds = %4340
  %4342 = icmp sgt i32 %13, 1
  %4343 = icmp sgt i32 %13, 0
  %4344 = add i32 %13, -2
  %4345 = zext i32 %4344 to i64
  %4346 = zext i32 %13 to i64
  %4347 = add nuw i32 %5, 1
  %4348 = icmp eq i32 %13, 1
  br label %4349

4349:                                             ; preds = %4341, %4487
  %4350 = phi float [ 0.000000e+00, %4341 ], [ %4437, %4487 ]
  %4351 = phi i32 [ 0, %4341 ], [ %4439, %4487 ]
  %4352 = phi double [ 0.000000e+00, %4341 ], [ %4438, %4487 ]
  %4353 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4342, label %4354, label %4423

4354:                                             ; preds = %4349, %4413
  %4355 = phi i32 [ %4422, %4413 ], [ 0, %4349 ]
  %4356 = phi i64 [ %4364, %4413 ], [ %4346, %4349 ]
  %4357 = phi i64 [ %4421, %4413 ], [ %4345, %4349 ]
  %4358 = phi i32 [ %4419, %4413 ], [ %4353, %4349 ]
  %4359 = sub i32 %4344, %4355
  %4360 = tail call i32 @llvm.smin.i32(i32 %4359, i32 0)
  %4361 = sub i32 %4359, %4360
  %4362 = zext i32 %4361 to i64
  %4363 = add nuw nsw i64 %4362, 1
  %4364 = add nsw i64 %4356, -1
  %4365 = icmp ult i32 %4361, 31
  br i1 %4365, label %4401, label %4366

4366:                                             ; preds = %4354
  %4367 = and i64 %4363, 8589934560
  %4368 = sub i64 %4357, %4367
  br label %4369

4369:                                             ; preds = %4369, %4366
  %4370 = phi i64 [ 0, %4366 ], [ %4393, %4369 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4389, %4369 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4390, %4369 ]
  %4373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4391, %4369 ]
  %4374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4392, %4369 ]
  %4375 = sub i64 %4357, %4370
  %4376 = getelementptr inbounds i32, ptr %9, i64 %4375
  %4377 = getelementptr inbounds i32, ptr %4376, i64 -7
  %4378 = load <8 x i32>, ptr %4377, align 4, !tbaa !6
  %4379 = shufflevector <8 x i32> %4378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4380 = getelementptr inbounds i32, ptr %4376, i64 -15
  %4381 = load <8 x i32>, ptr %4380, align 4, !tbaa !6
  %4382 = shufflevector <8 x i32> %4381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4383 = getelementptr inbounds i32, ptr %4376, i64 -23
  %4384 = load <8 x i32>, ptr %4383, align 4, !tbaa !6
  %4385 = shufflevector <8 x i32> %4384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4386 = getelementptr inbounds i32, ptr %4376, i64 -31
  %4387 = load <8 x i32>, ptr %4386, align 4, !tbaa !6
  %4388 = shufflevector <8 x i32> %4387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4389 = mul <8 x i32> %4379, %4371
  %4390 = mul <8 x i32> %4382, %4372
  %4391 = mul <8 x i32> %4385, %4373
  %4392 = mul <8 x i32> %4388, %4374
  %4393 = add nuw i64 %4370, 32
  %4394 = icmp eq i64 %4393, %4367
  br i1 %4394, label %4395, label %4369, !llvm.loop !1085

4395:                                             ; preds = %4369
  %4396 = mul <8 x i32> %4390, %4389
  %4397 = mul <8 x i32> %4391, %4396
  %4398 = mul <8 x i32> %4392, %4397
  %4399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4398)
  %4400 = icmp eq i64 %4363, %4367
  br i1 %4400, label %4413, label %4401

4401:                                             ; preds = %4354, %4395
  %4402 = phi i64 [ %4357, %4354 ], [ %4368, %4395 ]
  %4403 = phi i32 [ 1, %4354 ], [ %4399, %4395 ]
  br label %4404

4404:                                             ; preds = %4401, %4404
  %4405 = phi i64 [ %4410, %4404 ], [ %4402, %4401 ]
  %4406 = phi i32 [ %4409, %4404 ], [ %4403, %4401 ]
  %4407 = getelementptr inbounds i32, ptr %9, i64 %4405
  %4408 = load i32, ptr %4407, align 4, !tbaa !6
  %4409 = mul nsw i32 %4408, %4406
  %4410 = add nsw i64 %4405, -1
  %4411 = trunc i64 %4405 to i32
  %4412 = icmp sgt i32 %4411, 0
  br i1 %4412, label %4404, label %4413, !llvm.loop !1086

4413:                                             ; preds = %4404, %4395
  %4414 = phi i32 [ %4399, %4395 ], [ %4409, %4404 ]
  %4415 = and i64 %4364, 4294967295
  %4416 = getelementptr inbounds i32, ptr %6, i64 %4415
  %4417 = load i32, ptr %4416, align 4, !tbaa !6
  %4418 = mul nsw i32 %4417, %4414
  %4419 = add nsw i32 %4418, %4358
  %4420 = icmp sgt i64 %4356, 2
  %4421 = add nsw i64 %4357, -1
  %4422 = add i32 %4355, 1
  br i1 %4420, label %4354, label %4423, !llvm.loop !1087

4423:                                             ; preds = %4413, %4349
  %4424 = phi i32 [ %4353, %4349 ], [ %4419, %4413 ]
  %4425 = sext i32 %4424 to i64
  %4426 = getelementptr inbounds double, ptr %2, i64 %4425
  %4427 = load double, ptr %4426, align 8, !tbaa !19
  %4428 = getelementptr inbounds double, ptr %4316, i64 %4425
  %4429 = load double, ptr %4428, align 8, !tbaa !19
  %4430 = fptrunc double %4429 to float
  %4431 = fpext float %4350 to double
  %4432 = fpext float %4430 to double
  %4433 = fmul fast double %4427, %4432
  %4434 = fmul fast double %4433, %4433
  %4435 = fmul fast double %4434, %4434
  %4436 = fadd fast double %4435, %4431
  %4437 = fptrunc double %4436 to float
  %4438 = fadd fast double %4427, %4352
  %4439 = add nuw nsw i32 %4351, 1
  br i1 %4343, label %4440, label %4487

4440:                                             ; preds = %4423
  %4441 = load i32, ptr %4, align 4, !tbaa !6
  %4442 = load i32, ptr %12, align 4, !tbaa !6
  %4443 = add nsw i32 %4442, -1
  %4444 = icmp slt i32 %4441, %4443
  br i1 %4444, label %4464, label %4445

4445:                                             ; preds = %4440
  %4446 = icmp eq i32 %4441, %4443
  br i1 %4446, label %4447, label %4480

4447:                                             ; preds = %4445
  store i32 0, ptr %4, align 4, !tbaa !6
  %4448 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4448, ptr %6, align 4, !tbaa !6
  br i1 %4348, label %4487, label %4449

4449:                                             ; preds = %4447, %4474
  %4450 = phi i64 [ %4478, %4474 ], [ 1, %4447 ]
  %4451 = getelementptr inbounds i32, ptr %4, i64 %4450
  %4452 = load i32, ptr %4451, align 4, !tbaa !6
  %4453 = getelementptr inbounds i32, ptr %12, i64 %4450
  %4454 = load i32, ptr %4453, align 4, !tbaa !6
  %4455 = add nsw i32 %4454, -1
  %4456 = icmp slt i32 %4452, %4455
  br i1 %4456, label %4457, label %4472

4457:                                             ; preds = %4449
  br i1 %4444, label %4464, label %4458

4458:                                             ; preds = %4457
  %4459 = getelementptr inbounds i32, ptr %7, i64 %4450
  %4460 = load i32, ptr %4459, align 4, !tbaa !6
  %4461 = getelementptr inbounds i32, ptr %6, i64 %4450
  %4462 = load i32, ptr %4461, align 4, !tbaa !6
  %4463 = add nsw i32 %4462, %4460
  store i32 %4463, ptr %4461, align 4, !tbaa !6
  br label %4482

4464:                                             ; preds = %4440, %4457
  %4465 = phi i32 [ %4452, %4457 ], [ %4441, %4440 ]
  %4466 = phi ptr [ %4451, %4457 ], [ %4, %4440 ]
  %4467 = phi i64 [ %4450, %4457 ], [ 0, %4440 ]
  %4468 = add nsw i32 %4465, 1
  store i32 %4468, ptr %4466, align 4, !tbaa !6
  %4469 = getelementptr inbounds i32, ptr %7, i64 %4467
  %4470 = load i32, ptr %4469, align 4, !tbaa !6
  %4471 = getelementptr inbounds i32, ptr %6, i64 %4467
  br label %4482

4472:                                             ; preds = %4449
  %4473 = icmp eq i32 %4452, %4455
  br i1 %4473, label %4474, label %4480

4474:                                             ; preds = %4472
  store i32 0, ptr %4451, align 4, !tbaa !6
  %4475 = getelementptr inbounds i32, ptr %8, i64 %4450
  %4476 = load i32, ptr %4475, align 4, !tbaa !6
  %4477 = getelementptr inbounds i32, ptr %6, i64 %4450
  store i32 %4476, ptr %4477, align 4, !tbaa !6
  %4478 = add nuw nsw i64 %4450, 1
  %4479 = icmp eq i64 %4478, %4346
  br i1 %4479, label %4487, label %4449, !llvm.loop !1088

4480:                                             ; preds = %4445, %4472
  store float %4437, ptr %4318, align 4, !tbaa !163
  %4481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4482:                                             ; preds = %4458, %4464
  %4483 = phi ptr [ %4471, %4464 ], [ %4451, %4458 ]
  %4484 = phi i32 [ %4470, %4464 ], [ 1, %4458 ]
  %4485 = load i32, ptr %4483, align 4, !tbaa !6
  %4486 = add nsw i32 %4485, %4484
  store i32 %4486, ptr %4483, align 4, !tbaa !6
  br label %4487

4487:                                             ; preds = %4474, %4482, %4447, %4423
  %4488 = icmp eq i32 %4439, %5
  br i1 %4488, label %5537, label %4349, !llvm.loop !1089

4489:                                             ; preds = %4332, %4629
  %4490 = phi float [ 0.000000e+00, %4332 ], [ %4577, %4629 ]
  %4491 = phi i32 [ 0, %4332 ], [ %4578, %4629 ]
  %4492 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4333, label %4493, label %4562

4493:                                             ; preds = %4489, %4552
  %4494 = phi i32 [ %4561, %4552 ], [ 0, %4489 ]
  %4495 = phi i64 [ %4503, %4552 ], [ %4337, %4489 ]
  %4496 = phi i64 [ %4560, %4552 ], [ %4336, %4489 ]
  %4497 = phi i32 [ %4558, %4552 ], [ %4492, %4489 ]
  %4498 = sub i32 %4335, %4494
  %4499 = tail call i32 @llvm.smin.i32(i32 %4498, i32 0)
  %4500 = sub i32 %4498, %4499
  %4501 = zext i32 %4500 to i64
  %4502 = add nuw nsw i64 %4501, 1
  %4503 = add nsw i64 %4495, -1
  %4504 = icmp ult i32 %4500, 31
  br i1 %4504, label %4540, label %4505

4505:                                             ; preds = %4493
  %4506 = and i64 %4502, 8589934560
  %4507 = sub i64 %4496, %4506
  br label %4508

4508:                                             ; preds = %4508, %4505
  %4509 = phi i64 [ 0, %4505 ], [ %4532, %4508 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4528, %4508 ]
  %4511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4529, %4508 ]
  %4512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4530, %4508 ]
  %4513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4531, %4508 ]
  %4514 = sub i64 %4496, %4509
  %4515 = getelementptr inbounds i32, ptr %11, i64 %4514
  %4516 = getelementptr inbounds i32, ptr %4515, i64 -7
  %4517 = load <8 x i32>, ptr %4516, align 4, !tbaa !6
  %4518 = shufflevector <8 x i32> %4517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4519 = getelementptr inbounds i32, ptr %4515, i64 -15
  %4520 = load <8 x i32>, ptr %4519, align 4, !tbaa !6
  %4521 = shufflevector <8 x i32> %4520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4522 = getelementptr inbounds i32, ptr %4515, i64 -23
  %4523 = load <8 x i32>, ptr %4522, align 4, !tbaa !6
  %4524 = shufflevector <8 x i32> %4523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4525 = getelementptr inbounds i32, ptr %4515, i64 -31
  %4526 = load <8 x i32>, ptr %4525, align 4, !tbaa !6
  %4527 = shufflevector <8 x i32> %4526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4528 = mul <8 x i32> %4518, %4510
  %4529 = mul <8 x i32> %4521, %4511
  %4530 = mul <8 x i32> %4524, %4512
  %4531 = mul <8 x i32> %4527, %4513
  %4532 = add nuw i64 %4509, 32
  %4533 = icmp eq i64 %4532, %4506
  br i1 %4533, label %4534, label %4508, !llvm.loop !1090

4534:                                             ; preds = %4508
  %4535 = mul <8 x i32> %4529, %4528
  %4536 = mul <8 x i32> %4530, %4535
  %4537 = mul <8 x i32> %4531, %4536
  %4538 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4537)
  %4539 = icmp eq i64 %4502, %4506
  br i1 %4539, label %4552, label %4540

4540:                                             ; preds = %4493, %4534
  %4541 = phi i64 [ %4496, %4493 ], [ %4507, %4534 ]
  %4542 = phi i32 [ 1, %4493 ], [ %4538, %4534 ]
  br label %4543

4543:                                             ; preds = %4540, %4543
  %4544 = phi i64 [ %4549, %4543 ], [ %4541, %4540 ]
  %4545 = phi i32 [ %4548, %4543 ], [ %4542, %4540 ]
  %4546 = getelementptr inbounds i32, ptr %11, i64 %4544
  %4547 = load i32, ptr %4546, align 4, !tbaa !6
  %4548 = mul nsw i32 %4547, %4545
  %4549 = add nsw i64 %4544, -1
  %4550 = trunc i64 %4544 to i32
  %4551 = icmp sgt i32 %4550, 0
  br i1 %4551, label %4543, label %4552, !llvm.loop !1091

4552:                                             ; preds = %4543, %4534
  %4553 = phi i32 [ %4538, %4534 ], [ %4548, %4543 ]
  %4554 = and i64 %4503, 4294967295
  %4555 = getelementptr inbounds i32, ptr %6, i64 %4554
  %4556 = load i32, ptr %4555, align 4, !tbaa !6
  %4557 = mul nsw i32 %4556, %4553
  %4558 = add nsw i32 %4557, %4497
  %4559 = icmp sgt i64 %4495, 2
  %4560 = add nsw i64 %4496, -1
  %4561 = add i32 %4494, 1
  br i1 %4559, label %4493, label %4562, !llvm.loop !1092

4562:                                             ; preds = %4552, %4489
  %4563 = phi i32 [ %4492, %4489 ], [ %4558, %4552 ]
  %4564 = icmp slt i32 %4563, %5
  br i1 %4564, label %4567, label %4565

4565:                                             ; preds = %4562
  %4566 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4567:                                             ; preds = %4562
  %4568 = sext i32 %4563 to i64
  %4569 = getelementptr inbounds double, ptr %4316, i64 %4568
  %4570 = load double, ptr %4569, align 8, !tbaa !19
  %4571 = fptrunc double %4570 to float
  %4572 = fpext float %4490 to double
  %4573 = fpext float %4571 to double
  %4574 = fmul fast double %4573, %4573
  %4575 = fmul fast double %4574, %4574
  %4576 = fadd fast double %4575, %4572
  %4577 = fptrunc double %4576 to float
  store float %4577, ptr %4318, align 4, !tbaa !163
  %4578 = add nuw nsw i32 %4491, 1
  br i1 %4334, label %4579, label %4629

4579:                                             ; preds = %4567
  %4580 = load i32, ptr %4, align 4, !tbaa !6
  %4581 = load i32, ptr %12, align 4, !tbaa !6
  %4582 = add nsw i32 %4581, -1
  %4583 = icmp slt i32 %4580, %4582
  br i1 %4583, label %4606, label %4584

4584:                                             ; preds = %4579
  %4585 = icmp eq i32 %4580, %4582
  br i1 %4585, label %4586, label %4622

4586:                                             ; preds = %4584
  store i32 0, ptr %4, align 4, !tbaa !6
  %4587 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4587, ptr %6, align 4, !tbaa !6
  br i1 %4339, label %4629, label %4588

4588:                                             ; preds = %4586, %4616
  %4589 = phi i64 [ %4620, %4616 ], [ 1, %4586 ]
  %4590 = getelementptr inbounds i32, ptr %4, i64 %4589
  %4591 = load i32, ptr %4590, align 4, !tbaa !6
  %4592 = getelementptr inbounds i32, ptr %12, i64 %4589
  %4593 = load i32, ptr %4592, align 4, !tbaa !6
  %4594 = add nsw i32 %4593, -1
  %4595 = icmp slt i32 %4591, %4594
  br i1 %4595, label %4596, label %4614

4596:                                             ; preds = %4588
  br i1 %4583, label %4606, label %4597

4597:                                             ; preds = %4596
  %4598 = shl i64 %4589, 32
  %4599 = add i64 %4598, -4294967296
  %4600 = ashr exact i64 %4599, 32
  %4601 = getelementptr inbounds i32, ptr %7, i64 %4600
  %4602 = load i32, ptr %4601, align 4, !tbaa !6
  %4603 = getelementptr inbounds i32, ptr %6, i64 %4589
  %4604 = load i32, ptr %4603, align 4, !tbaa !6
  %4605 = add nsw i32 %4604, %4602
  store i32 %4605, ptr %4603, align 4, !tbaa !6
  br label %4624

4606:                                             ; preds = %4579, %4596
  %4607 = phi i32 [ %4591, %4596 ], [ %4580, %4579 ]
  %4608 = phi ptr [ %4590, %4596 ], [ %4, %4579 ]
  %4609 = phi i64 [ %4589, %4596 ], [ 0, %4579 ]
  %4610 = add nsw i32 %4607, 1
  store i32 %4610, ptr %4608, align 4, !tbaa !6
  %4611 = getelementptr inbounds i32, ptr %7, i64 %4609
  %4612 = load i32, ptr %4611, align 4, !tbaa !6
  %4613 = getelementptr inbounds i32, ptr %6, i64 %4609
  br label %4624

4614:                                             ; preds = %4588
  %4615 = icmp eq i32 %4591, %4594
  br i1 %4615, label %4616, label %4622

4616:                                             ; preds = %4614
  store i32 0, ptr %4590, align 4, !tbaa !6
  %4617 = getelementptr inbounds i32, ptr %8, i64 %4589
  %4618 = load i32, ptr %4617, align 4, !tbaa !6
  %4619 = getelementptr inbounds i32, ptr %6, i64 %4589
  store i32 %4618, ptr %4619, align 4, !tbaa !6
  %4620 = add nuw nsw i64 %4589, 1
  %4621 = icmp eq i64 %4620, %4337
  br i1 %4621, label %4629, label %4588, !llvm.loop !1093

4622:                                             ; preds = %4584, %4614
  %4623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4624:                                             ; preds = %4597, %4606
  %4625 = phi ptr [ %4613, %4606 ], [ %4590, %4597 ]
  %4626 = phi i32 [ %4612, %4606 ], [ 1, %4597 ]
  %4627 = load i32, ptr %4625, align 4, !tbaa !6
  %4628 = add nsw i32 %4627, %4626
  store i32 %4628, ptr %4625, align 4, !tbaa !6
  br label %4629

4629:                                             ; preds = %4616, %4624, %4586, %4567
  %4630 = icmp eq i32 %4578, %5
  br i1 %4630, label %5539, label %4489, !llvm.loop !1094

4631:                                             ; preds = %4325
  %4632 = getelementptr inbounds i32, ptr %3, i64 %19
  %4633 = load i32, ptr %4632, align 4, !tbaa !6
  %4634 = icmp eq i32 %4633, 0
  %4635 = icmp sgt i32 %5, 0
  br i1 %4634, label %4645, label %4636

4636:                                             ; preds = %4631
  br i1 %4635, label %4637, label %5539

4637:                                             ; preds = %4636
  %4638 = icmp sgt i32 %13, 1
  %4639 = icmp sgt i32 %13, 0
  %4640 = add i32 %13, -2
  %4641 = zext i32 %4640 to i64
  %4642 = zext i32 %13 to i64
  %4643 = add nuw i32 %5, 1
  %4644 = icmp eq i32 %13, 1
  br label %4788

4645:                                             ; preds = %4631
  br i1 %4635, label %4646, label %5539

4646:                                             ; preds = %4645
  %4647 = icmp sgt i32 %13, 1
  %4648 = icmp sgt i32 %13, 0
  %4649 = add i32 %13, -2
  %4650 = zext i32 %4649 to i64
  %4651 = zext i32 %13 to i64
  %4652 = add nuw i32 %5, 1
  %4653 = icmp eq i32 %13, 1
  br label %4654

4654:                                             ; preds = %4646, %4786
  %4655 = phi float [ 0.000000e+00, %4646 ], [ %4736, %4786 ]
  %4656 = phi i32 [ 0, %4646 ], [ %4738, %4786 ]
  %4657 = phi double [ 0.000000e+00, %4646 ], [ %4737, %4786 ]
  %4658 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4647, label %4659, label %4728

4659:                                             ; preds = %4654, %4718
  %4660 = phi i32 [ %4727, %4718 ], [ 0, %4654 ]
  %4661 = phi i64 [ %4669, %4718 ], [ %4651, %4654 ]
  %4662 = phi i64 [ %4726, %4718 ], [ %4650, %4654 ]
  %4663 = phi i32 [ %4724, %4718 ], [ %4658, %4654 ]
  %4664 = sub i32 %4649, %4660
  %4665 = tail call i32 @llvm.smin.i32(i32 %4664, i32 0)
  %4666 = sub i32 %4664, %4665
  %4667 = zext i32 %4666 to i64
  %4668 = add nuw nsw i64 %4667, 1
  %4669 = add nsw i64 %4661, -1
  %4670 = icmp ult i32 %4666, 31
  br i1 %4670, label %4706, label %4671

4671:                                             ; preds = %4659
  %4672 = and i64 %4668, 8589934560
  %4673 = sub i64 %4662, %4672
  br label %4674

4674:                                             ; preds = %4674, %4671
  %4675 = phi i64 [ 0, %4671 ], [ %4698, %4674 ]
  %4676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4694, %4674 ]
  %4677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4695, %4674 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4696, %4674 ]
  %4679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4697, %4674 ]
  %4680 = sub i64 %4662, %4675
  %4681 = getelementptr inbounds i32, ptr %9, i64 %4680
  %4682 = getelementptr inbounds i32, ptr %4681, i64 -7
  %4683 = load <8 x i32>, ptr %4682, align 4, !tbaa !6
  %4684 = shufflevector <8 x i32> %4683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4685 = getelementptr inbounds i32, ptr %4681, i64 -15
  %4686 = load <8 x i32>, ptr %4685, align 4, !tbaa !6
  %4687 = shufflevector <8 x i32> %4686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4688 = getelementptr inbounds i32, ptr %4681, i64 -23
  %4689 = load <8 x i32>, ptr %4688, align 4, !tbaa !6
  %4690 = shufflevector <8 x i32> %4689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4691 = getelementptr inbounds i32, ptr %4681, i64 -31
  %4692 = load <8 x i32>, ptr %4691, align 4, !tbaa !6
  %4693 = shufflevector <8 x i32> %4692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4694 = mul <8 x i32> %4684, %4676
  %4695 = mul <8 x i32> %4687, %4677
  %4696 = mul <8 x i32> %4690, %4678
  %4697 = mul <8 x i32> %4693, %4679
  %4698 = add nuw i64 %4675, 32
  %4699 = icmp eq i64 %4698, %4672
  br i1 %4699, label %4700, label %4674, !llvm.loop !1095

4700:                                             ; preds = %4674
  %4701 = mul <8 x i32> %4695, %4694
  %4702 = mul <8 x i32> %4696, %4701
  %4703 = mul <8 x i32> %4697, %4702
  %4704 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4703)
  %4705 = icmp eq i64 %4668, %4672
  br i1 %4705, label %4718, label %4706

4706:                                             ; preds = %4659, %4700
  %4707 = phi i64 [ %4662, %4659 ], [ %4673, %4700 ]
  %4708 = phi i32 [ 1, %4659 ], [ %4704, %4700 ]
  br label %4709

4709:                                             ; preds = %4706, %4709
  %4710 = phi i64 [ %4715, %4709 ], [ %4707, %4706 ]
  %4711 = phi i32 [ %4714, %4709 ], [ %4708, %4706 ]
  %4712 = getelementptr inbounds i32, ptr %9, i64 %4710
  %4713 = load i32, ptr %4712, align 4, !tbaa !6
  %4714 = mul nsw i32 %4713, %4711
  %4715 = add nsw i64 %4710, -1
  %4716 = trunc i64 %4710 to i32
  %4717 = icmp sgt i32 %4716, 0
  br i1 %4717, label %4709, label %4718, !llvm.loop !1096

4718:                                             ; preds = %4709, %4700
  %4719 = phi i32 [ %4704, %4700 ], [ %4714, %4709 ]
  %4720 = and i64 %4669, 4294967295
  %4721 = getelementptr inbounds i32, ptr %6, i64 %4720
  %4722 = load i32, ptr %4721, align 4, !tbaa !6
  %4723 = mul nsw i32 %4722, %4719
  %4724 = add nsw i32 %4723, %4663
  %4725 = icmp sgt i64 %4661, 2
  %4726 = add nsw i64 %4662, -1
  %4727 = add i32 %4660, 1
  br i1 %4725, label %4659, label %4728, !llvm.loop !1097

4728:                                             ; preds = %4718, %4654
  %4729 = phi i32 [ %4658, %4654 ], [ %4724, %4718 ]
  %4730 = sext i32 %4729 to i64
  %4731 = getelementptr inbounds double, ptr %4316, i64 %4730
  %4732 = load double, ptr %4731, align 8, !tbaa !19
  %4733 = fptrunc double %4732 to float
  %4734 = fmul fast float %4733, %4733
  %4735 = fmul fast float %4734, %4734
  %4736 = fadd fast float %4735, %4655
  %4737 = fadd fast double %4657, 1.000000e+00
  %4738 = add nuw nsw i32 %4656, 1
  br i1 %4648, label %4739, label %4786

4739:                                             ; preds = %4728
  %4740 = load i32, ptr %4, align 4, !tbaa !6
  %4741 = load i32, ptr %12, align 4, !tbaa !6
  %4742 = add nsw i32 %4741, -1
  %4743 = icmp slt i32 %4740, %4742
  br i1 %4743, label %4763, label %4744

4744:                                             ; preds = %4739
  %4745 = icmp eq i32 %4740, %4742
  br i1 %4745, label %4746, label %4779

4746:                                             ; preds = %4744
  store i32 0, ptr %4, align 4, !tbaa !6
  %4747 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4747, ptr %6, align 4, !tbaa !6
  br i1 %4653, label %4786, label %4748

4748:                                             ; preds = %4746, %4773
  %4749 = phi i64 [ %4777, %4773 ], [ 1, %4746 ]
  %4750 = getelementptr inbounds i32, ptr %4, i64 %4749
  %4751 = load i32, ptr %4750, align 4, !tbaa !6
  %4752 = getelementptr inbounds i32, ptr %12, i64 %4749
  %4753 = load i32, ptr %4752, align 4, !tbaa !6
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4751, %4754
  br i1 %4755, label %4756, label %4771

4756:                                             ; preds = %4748
  br i1 %4743, label %4763, label %4757

4757:                                             ; preds = %4756
  %4758 = getelementptr inbounds i32, ptr %7, i64 %4749
  %4759 = load i32, ptr %4758, align 4, !tbaa !6
  %4760 = getelementptr inbounds i32, ptr %6, i64 %4749
  %4761 = load i32, ptr %4760, align 4, !tbaa !6
  %4762 = add nsw i32 %4761, %4759
  store i32 %4762, ptr %4760, align 4, !tbaa !6
  br label %4781

4763:                                             ; preds = %4739, %4756
  %4764 = phi i32 [ %4751, %4756 ], [ %4740, %4739 ]
  %4765 = phi ptr [ %4750, %4756 ], [ %4, %4739 ]
  %4766 = phi i64 [ %4749, %4756 ], [ 0, %4739 ]
  %4767 = add nsw i32 %4764, 1
  store i32 %4767, ptr %4765, align 4, !tbaa !6
  %4768 = getelementptr inbounds i32, ptr %7, i64 %4766
  %4769 = load i32, ptr %4768, align 4, !tbaa !6
  %4770 = getelementptr inbounds i32, ptr %6, i64 %4766
  br label %4781

4771:                                             ; preds = %4748
  %4772 = icmp eq i32 %4751, %4754
  br i1 %4772, label %4773, label %4779

4773:                                             ; preds = %4771
  store i32 0, ptr %4750, align 4, !tbaa !6
  %4774 = getelementptr inbounds i32, ptr %8, i64 %4749
  %4775 = load i32, ptr %4774, align 4, !tbaa !6
  %4776 = getelementptr inbounds i32, ptr %6, i64 %4749
  store i32 %4775, ptr %4776, align 4, !tbaa !6
  %4777 = add nuw nsw i64 %4749, 1
  %4778 = icmp eq i64 %4777, %4651
  br i1 %4778, label %4786, label %4748, !llvm.loop !1098

4779:                                             ; preds = %4744, %4771
  store float %4736, ptr %4318, align 4, !tbaa !163
  %4780 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4781:                                             ; preds = %4757, %4763
  %4782 = phi ptr [ %4770, %4763 ], [ %4750, %4757 ]
  %4783 = phi i32 [ %4769, %4763 ], [ 1, %4757 ]
  %4784 = load i32, ptr %4782, align 4, !tbaa !6
  %4785 = add nsw i32 %4784, %4783
  store i32 %4785, ptr %4782, align 4, !tbaa !6
  br label %4786

4786:                                             ; preds = %4773, %4781, %4746, %4728
  %4787 = icmp eq i32 %4738, %5
  br i1 %4787, label %5538, label %4654, !llvm.loop !1099

4788:                                             ; preds = %4637, %4925
  %4789 = phi float [ 0.000000e+00, %4637 ], [ %4873, %4925 ]
  %4790 = phi i32 [ 0, %4637 ], [ %4874, %4925 ]
  %4791 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4638, label %4792, label %4861

4792:                                             ; preds = %4788, %4851
  %4793 = phi i32 [ %4860, %4851 ], [ 0, %4788 ]
  %4794 = phi i64 [ %4802, %4851 ], [ %4642, %4788 ]
  %4795 = phi i64 [ %4859, %4851 ], [ %4641, %4788 ]
  %4796 = phi i32 [ %4857, %4851 ], [ %4791, %4788 ]
  %4797 = sub i32 %4640, %4793
  %4798 = tail call i32 @llvm.smin.i32(i32 %4797, i32 0)
  %4799 = sub i32 %4797, %4798
  %4800 = zext i32 %4799 to i64
  %4801 = add nuw nsw i64 %4800, 1
  %4802 = add nsw i64 %4794, -1
  %4803 = icmp ult i32 %4799, 31
  br i1 %4803, label %4839, label %4804

4804:                                             ; preds = %4792
  %4805 = and i64 %4801, 8589934560
  %4806 = sub i64 %4795, %4805
  br label %4807

4807:                                             ; preds = %4807, %4804
  %4808 = phi i64 [ 0, %4804 ], [ %4831, %4807 ]
  %4809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4827, %4807 ]
  %4810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4828, %4807 ]
  %4811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4829, %4807 ]
  %4812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4830, %4807 ]
  %4813 = sub i64 %4795, %4808
  %4814 = getelementptr inbounds i32, ptr %11, i64 %4813
  %4815 = getelementptr inbounds i32, ptr %4814, i64 -7
  %4816 = load <8 x i32>, ptr %4815, align 4, !tbaa !6
  %4817 = shufflevector <8 x i32> %4816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4818 = getelementptr inbounds i32, ptr %4814, i64 -15
  %4819 = load <8 x i32>, ptr %4818, align 4, !tbaa !6
  %4820 = shufflevector <8 x i32> %4819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4821 = getelementptr inbounds i32, ptr %4814, i64 -23
  %4822 = load <8 x i32>, ptr %4821, align 4, !tbaa !6
  %4823 = shufflevector <8 x i32> %4822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4824 = getelementptr inbounds i32, ptr %4814, i64 -31
  %4825 = load <8 x i32>, ptr %4824, align 4, !tbaa !6
  %4826 = shufflevector <8 x i32> %4825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4827 = mul <8 x i32> %4817, %4809
  %4828 = mul <8 x i32> %4820, %4810
  %4829 = mul <8 x i32> %4823, %4811
  %4830 = mul <8 x i32> %4826, %4812
  %4831 = add nuw i64 %4808, 32
  %4832 = icmp eq i64 %4831, %4805
  br i1 %4832, label %4833, label %4807, !llvm.loop !1100

4833:                                             ; preds = %4807
  %4834 = mul <8 x i32> %4828, %4827
  %4835 = mul <8 x i32> %4829, %4834
  %4836 = mul <8 x i32> %4830, %4835
  %4837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4836)
  %4838 = icmp eq i64 %4801, %4805
  br i1 %4838, label %4851, label %4839

4839:                                             ; preds = %4792, %4833
  %4840 = phi i64 [ %4795, %4792 ], [ %4806, %4833 ]
  %4841 = phi i32 [ 1, %4792 ], [ %4837, %4833 ]
  br label %4842

4842:                                             ; preds = %4839, %4842
  %4843 = phi i64 [ %4848, %4842 ], [ %4840, %4839 ]
  %4844 = phi i32 [ %4847, %4842 ], [ %4841, %4839 ]
  %4845 = getelementptr inbounds i32, ptr %11, i64 %4843
  %4846 = load i32, ptr %4845, align 4, !tbaa !6
  %4847 = mul nsw i32 %4846, %4844
  %4848 = add nsw i64 %4843, -1
  %4849 = trunc i64 %4843 to i32
  %4850 = icmp sgt i32 %4849, 0
  br i1 %4850, label %4842, label %4851, !llvm.loop !1101

4851:                                             ; preds = %4842, %4833
  %4852 = phi i32 [ %4837, %4833 ], [ %4847, %4842 ]
  %4853 = and i64 %4802, 4294967295
  %4854 = getelementptr inbounds i32, ptr %6, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !6
  %4856 = mul nsw i32 %4855, %4852
  %4857 = add nsw i32 %4856, %4796
  %4858 = icmp sgt i64 %4794, 2
  %4859 = add nsw i64 %4795, -1
  %4860 = add i32 %4793, 1
  br i1 %4858, label %4792, label %4861, !llvm.loop !1102

4861:                                             ; preds = %4851, %4788
  %4862 = phi i32 [ %4791, %4788 ], [ %4857, %4851 ]
  %4863 = icmp slt i32 %4862, %5
  br i1 %4863, label %4866, label %4864

4864:                                             ; preds = %4861
  %4865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4866:                                             ; preds = %4861
  %4867 = sext i32 %4862 to i64
  %4868 = getelementptr inbounds double, ptr %4316, i64 %4867
  %4869 = load double, ptr %4868, align 8, !tbaa !19
  %4870 = fptrunc double %4869 to float
  %4871 = fmul fast float %4870, %4870
  %4872 = fmul fast float %4871, %4871
  %4873 = fadd fast float %4872, %4789
  store float %4873, ptr %4318, align 4, !tbaa !163
  %4874 = add nuw nsw i32 %4790, 1
  br i1 %4639, label %4875, label %4925

4875:                                             ; preds = %4866
  %4876 = load i32, ptr %4, align 4, !tbaa !6
  %4877 = load i32, ptr %12, align 4, !tbaa !6
  %4878 = add nsw i32 %4877, -1
  %4879 = icmp slt i32 %4876, %4878
  br i1 %4879, label %4902, label %4880

4880:                                             ; preds = %4875
  %4881 = icmp eq i32 %4876, %4878
  br i1 %4881, label %4882, label %4918

4882:                                             ; preds = %4880
  store i32 0, ptr %4, align 4, !tbaa !6
  %4883 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4883, ptr %6, align 4, !tbaa !6
  br i1 %4644, label %4925, label %4884

4884:                                             ; preds = %4882, %4912
  %4885 = phi i64 [ %4916, %4912 ], [ 1, %4882 ]
  %4886 = getelementptr inbounds i32, ptr %4, i64 %4885
  %4887 = load i32, ptr %4886, align 4, !tbaa !6
  %4888 = getelementptr inbounds i32, ptr %12, i64 %4885
  %4889 = load i32, ptr %4888, align 4, !tbaa !6
  %4890 = add nsw i32 %4889, -1
  %4891 = icmp slt i32 %4887, %4890
  br i1 %4891, label %4892, label %4910

4892:                                             ; preds = %4884
  br i1 %4879, label %4902, label %4893

4893:                                             ; preds = %4892
  %4894 = shl i64 %4885, 32
  %4895 = add i64 %4894, -4294967296
  %4896 = ashr exact i64 %4895, 32
  %4897 = getelementptr inbounds i32, ptr %7, i64 %4896
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4885
  %4900 = load i32, ptr %4899, align 4, !tbaa !6
  %4901 = add nsw i32 %4900, %4898
  store i32 %4901, ptr %4899, align 4, !tbaa !6
  br label %4920

4902:                                             ; preds = %4875, %4892
  %4903 = phi i32 [ %4887, %4892 ], [ %4876, %4875 ]
  %4904 = phi ptr [ %4886, %4892 ], [ %4, %4875 ]
  %4905 = phi i64 [ %4885, %4892 ], [ 0, %4875 ]
  %4906 = add nsw i32 %4903, 1
  store i32 %4906, ptr %4904, align 4, !tbaa !6
  %4907 = getelementptr inbounds i32, ptr %7, i64 %4905
  %4908 = load i32, ptr %4907, align 4, !tbaa !6
  %4909 = getelementptr inbounds i32, ptr %6, i64 %4905
  br label %4920

4910:                                             ; preds = %4884
  %4911 = icmp eq i32 %4887, %4890
  br i1 %4911, label %4912, label %4918

4912:                                             ; preds = %4910
  store i32 0, ptr %4886, align 4, !tbaa !6
  %4913 = getelementptr inbounds i32, ptr %8, i64 %4885
  %4914 = load i32, ptr %4913, align 4, !tbaa !6
  %4915 = getelementptr inbounds i32, ptr %6, i64 %4885
  store i32 %4914, ptr %4915, align 4, !tbaa !6
  %4916 = add nuw nsw i64 %4885, 1
  %4917 = icmp eq i64 %4916, %4642
  br i1 %4917, label %4925, label %4884, !llvm.loop !1103

4918:                                             ; preds = %4880, %4910
  %4919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4920:                                             ; preds = %4893, %4902
  %4921 = phi ptr [ %4909, %4902 ], [ %4886, %4893 ]
  %4922 = phi i32 [ %4908, %4902 ], [ 1, %4893 ]
  %4923 = load i32, ptr %4921, align 4, !tbaa !6
  %4924 = add nsw i32 %4923, %4922
  store i32 %4924, ptr %4921, align 4, !tbaa !6
  br label %4925

4925:                                             ; preds = %4912, %4920, %4882, %4866
  %4926 = icmp eq i32 %4874, %5
  br i1 %4926, label %5539, label %4788, !llvm.loop !1104

4927:                                             ; preds = %4325
  %4928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1744, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

4929:                                             ; preds = %18
  %4930 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4931 = load ptr, ptr %4930, align 8, !tbaa !10
  %4932 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4933 = load ptr, ptr %4932, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4933, align 8, !tbaa !19
  %4934 = icmp eq i32 %13, 0
  br i1 %4934, label %4935, label %4939

4935:                                             ; preds = %4929
  %4936 = load double, ptr %4931, align 8, !tbaa !19
  %4937 = fmul fast double %4936, %4936
  %4938 = fmul fast double %4937, %4937
  store double %4938, ptr %4933, align 8, !tbaa !19
  br label %5539

4939:                                             ; preds = %4929
  switch i32 %1, label %5531 [
    i32 1, label %4940
    i32 0, label %5237
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !6
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5539

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5099

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5539

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5097
  %4964 = phi double [ 0.000000e+00, %4955 ], [ %5047, %5097 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5049, %5097 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5048, %5097 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !6
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !6
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !6
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !6
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !1105

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !6
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !1106

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !6
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !1107

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !19
  %5042 = getelementptr inbounds double, ptr %4931, i64 %5039
  %5043 = load double, ptr %5042, align 8, !tbaa !19
  %5044 = fmul fast double %5043, %5041
  %5045 = fmul fast double %5044, %5044
  %5046 = fmul fast double %5045, %5045
  %5047 = fadd fast double %5046, %4964
  store double %5047, ptr %4933, align 8, !tbaa !19
  %5048 = fadd fast double %5041, %4966
  %5049 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5050, label %5097

5050:                                             ; preds = %5037
  %5051 = load i32, ptr %4, align 4, !tbaa !6
  %5052 = load i32, ptr %12, align 4, !tbaa !6
  %5053 = add nsw i32 %5052, -1
  %5054 = icmp slt i32 %5051, %5053
  br i1 %5054, label %5074, label %5055

5055:                                             ; preds = %5050
  %5056 = icmp eq i32 %5051, %5053
  br i1 %5056, label %5057, label %5090

5057:                                             ; preds = %5055
  store i32 0, ptr %4, align 4, !tbaa !6
  %5058 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5058, ptr %6, align 4, !tbaa !6
  br i1 %4962, label %5097, label %5059

5059:                                             ; preds = %5057, %5084
  %5060 = phi i64 [ %5088, %5084 ], [ 1, %5057 ]
  %5061 = getelementptr inbounds i32, ptr %4, i64 %5060
  %5062 = load i32, ptr %5061, align 4, !tbaa !6
  %5063 = getelementptr inbounds i32, ptr %12, i64 %5060
  %5064 = load i32, ptr %5063, align 4, !tbaa !6
  %5065 = add nsw i32 %5064, -1
  %5066 = icmp slt i32 %5062, %5065
  br i1 %5066, label %5067, label %5082

5067:                                             ; preds = %5059
  br i1 %5054, label %5074, label %5068

5068:                                             ; preds = %5067
  %5069 = getelementptr inbounds i32, ptr %7, i64 %5060
  %5070 = load i32, ptr %5069, align 4, !tbaa !6
  %5071 = getelementptr inbounds i32, ptr %6, i64 %5060
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = add nsw i32 %5072, %5070
  store i32 %5073, ptr %5071, align 4, !tbaa !6
  br label %5092

5074:                                             ; preds = %5050, %5067
  %5075 = phi i32 [ %5062, %5067 ], [ %5051, %5050 ]
  %5076 = phi ptr [ %5061, %5067 ], [ %4, %5050 ]
  %5077 = phi i64 [ %5060, %5067 ], [ 0, %5050 ]
  %5078 = add nsw i32 %5075, 1
  store i32 %5078, ptr %5076, align 4, !tbaa !6
  %5079 = getelementptr inbounds i32, ptr %7, i64 %5077
  %5080 = load i32, ptr %5079, align 4, !tbaa !6
  %5081 = getelementptr inbounds i32, ptr %6, i64 %5077
  br label %5092

5082:                                             ; preds = %5059
  %5083 = icmp eq i32 %5062, %5065
  br i1 %5083, label %5084, label %5090

5084:                                             ; preds = %5082
  store i32 0, ptr %5061, align 4, !tbaa !6
  %5085 = getelementptr inbounds i32, ptr %8, i64 %5060
  %5086 = load i32, ptr %5085, align 4, !tbaa !6
  %5087 = getelementptr inbounds i32, ptr %6, i64 %5060
  store i32 %5086, ptr %5087, align 4, !tbaa !6
  %5088 = add nuw nsw i64 %5060, 1
  %5089 = icmp eq i64 %5088, %4960
  br i1 %5089, label %5097, label %5059, !llvm.loop !1108

5090:                                             ; preds = %5055, %5082
  %5091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5092:                                             ; preds = %5068, %5074
  %5093 = phi ptr [ %5081, %5074 ], [ %5061, %5068 ]
  %5094 = phi i32 [ %5080, %5074 ], [ 1, %5068 ]
  %5095 = load i32, ptr %5093, align 4, !tbaa !6
  %5096 = add nsw i32 %5095, %5094
  store i32 %5096, ptr %5093, align 4, !tbaa !6
  br label %5097

5097:                                             ; preds = %5084, %5092, %5057, %5037
  %5098 = icmp eq i32 %5049, %5
  br i1 %5098, label %5539, label %4963, !llvm.loop !1109

5099:                                             ; preds = %4946, %5235
  %5100 = phi double [ 0.000000e+00, %4946 ], [ %5183, %5235 ]
  %5101 = phi i32 [ 0, %4946 ], [ %5184, %5235 ]
  %5102 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5103, label %5172

5103:                                             ; preds = %5099, %5162
  %5104 = phi i32 [ %5171, %5162 ], [ 0, %5099 ]
  %5105 = phi i64 [ %5113, %5162 ], [ %4951, %5099 ]
  %5106 = phi i64 [ %5170, %5162 ], [ %4950, %5099 ]
  %5107 = phi i32 [ %5168, %5162 ], [ %5102, %5099 ]
  %5108 = sub i32 %4949, %5104
  %5109 = tail call i32 @llvm.smin.i32(i32 %5108, i32 0)
  %5110 = sub i32 %5108, %5109
  %5111 = zext i32 %5110 to i64
  %5112 = add nuw nsw i64 %5111, 1
  %5113 = add nsw i64 %5105, -1
  %5114 = icmp ult i32 %5110, 31
  br i1 %5114, label %5150, label %5115

5115:                                             ; preds = %5103
  %5116 = and i64 %5112, 8589934560
  %5117 = sub i64 %5106, %5116
  br label %5118

5118:                                             ; preds = %5118, %5115
  %5119 = phi i64 [ 0, %5115 ], [ %5142, %5118 ]
  %5120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5138, %5118 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5139, %5118 ]
  %5122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5140, %5118 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5141, %5118 ]
  %5124 = sub i64 %5106, %5119
  %5125 = getelementptr inbounds i32, ptr %11, i64 %5124
  %5126 = getelementptr inbounds i32, ptr %5125, i64 -7
  %5127 = load <8 x i32>, ptr %5126, align 4, !tbaa !6
  %5128 = shufflevector <8 x i32> %5127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5129 = getelementptr inbounds i32, ptr %5125, i64 -15
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !6
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = getelementptr inbounds i32, ptr %5125, i64 -23
  %5133 = load <8 x i32>, ptr %5132, align 4, !tbaa !6
  %5134 = shufflevector <8 x i32> %5133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5135 = getelementptr inbounds i32, ptr %5125, i64 -31
  %5136 = load <8 x i32>, ptr %5135, align 4, !tbaa !6
  %5137 = shufflevector <8 x i32> %5136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5138 = mul <8 x i32> %5128, %5120
  %5139 = mul <8 x i32> %5131, %5121
  %5140 = mul <8 x i32> %5134, %5122
  %5141 = mul <8 x i32> %5137, %5123
  %5142 = add nuw i64 %5119, 32
  %5143 = icmp eq i64 %5142, %5116
  br i1 %5143, label %5144, label %5118, !llvm.loop !1110

5144:                                             ; preds = %5118
  %5145 = mul <8 x i32> %5139, %5138
  %5146 = mul <8 x i32> %5140, %5145
  %5147 = mul <8 x i32> %5141, %5146
  %5148 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5147)
  %5149 = icmp eq i64 %5112, %5116
  br i1 %5149, label %5162, label %5150

5150:                                             ; preds = %5103, %5144
  %5151 = phi i64 [ %5106, %5103 ], [ %5117, %5144 ]
  %5152 = phi i32 [ 1, %5103 ], [ %5148, %5144 ]
  br label %5153

5153:                                             ; preds = %5150, %5153
  %5154 = phi i64 [ %5159, %5153 ], [ %5151, %5150 ]
  %5155 = phi i32 [ %5158, %5153 ], [ %5152, %5150 ]
  %5156 = getelementptr inbounds i32, ptr %11, i64 %5154
  %5157 = load i32, ptr %5156, align 4, !tbaa !6
  %5158 = mul nsw i32 %5157, %5155
  %5159 = add nsw i64 %5154, -1
  %5160 = trunc i64 %5154 to i32
  %5161 = icmp sgt i32 %5160, 0
  br i1 %5161, label %5153, label %5162, !llvm.loop !1111

5162:                                             ; preds = %5153, %5144
  %5163 = phi i32 [ %5148, %5144 ], [ %5158, %5153 ]
  %5164 = and i64 %5113, 4294967295
  %5165 = getelementptr inbounds i32, ptr %6, i64 %5164
  %5166 = load i32, ptr %5165, align 4, !tbaa !6
  %5167 = mul nsw i32 %5166, %5163
  %5168 = add nsw i32 %5167, %5107
  %5169 = icmp sgt i64 %5105, 2
  %5170 = add nsw i64 %5106, -1
  %5171 = add i32 %5104, 1
  br i1 %5169, label %5103, label %5172, !llvm.loop !1112

5172:                                             ; preds = %5162, %5099
  %5173 = phi i32 [ %5102, %5099 ], [ %5168, %5162 ]
  %5174 = icmp slt i32 %5173, %5
  br i1 %5174, label %5177, label %5175

5175:                                             ; preds = %5172
  %5176 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

5177:                                             ; preds = %5172
  %5178 = sext i32 %5173 to i64
  %5179 = getelementptr inbounds double, ptr %4931, i64 %5178
  %5180 = load double, ptr %5179, align 8, !tbaa !19
  %5181 = fmul fast double %5180, %5180
  %5182 = fmul fast double %5181, %5181
  %5183 = fadd fast double %5182, %5100
  store double %5183, ptr %4933, align 8, !tbaa !19
  %5184 = add nuw nsw i32 %5101, 1
  br i1 %4948, label %5185, label %5235

5185:                                             ; preds = %5177
  %5186 = load i32, ptr %4, align 4, !tbaa !6
  %5187 = load i32, ptr %12, align 4, !tbaa !6
  %5188 = add nsw i32 %5187, -1
  %5189 = icmp slt i32 %5186, %5188
  br i1 %5189, label %5212, label %5190

5190:                                             ; preds = %5185
  %5191 = icmp eq i32 %5186, %5188
  br i1 %5191, label %5192, label %5228

5192:                                             ; preds = %5190
  store i32 0, ptr %4, align 4, !tbaa !6
  %5193 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5193, ptr %6, align 4, !tbaa !6
  br i1 %4953, label %5235, label %5194

5194:                                             ; preds = %5192, %5222
  %5195 = phi i64 [ %5226, %5222 ], [ 1, %5192 ]
  %5196 = getelementptr inbounds i32, ptr %4, i64 %5195
  %5197 = load i32, ptr %5196, align 4, !tbaa !6
  %5198 = getelementptr inbounds i32, ptr %12, i64 %5195
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5197, %5200
  br i1 %5201, label %5202, label %5220

5202:                                             ; preds = %5194
  br i1 %5189, label %5212, label %5203

5203:                                             ; preds = %5202
  %5204 = shl i64 %5195, 32
  %5205 = add i64 %5204, -4294967296
  %5206 = ashr exact i64 %5205, 32
  %5207 = getelementptr inbounds i32, ptr %7, i64 %5206
  %5208 = load i32, ptr %5207, align 4, !tbaa !6
  %5209 = getelementptr inbounds i32, ptr %6, i64 %5195
  %5210 = load i32, ptr %5209, align 4, !tbaa !6
  %5211 = add nsw i32 %5210, %5208
  store i32 %5211, ptr %5209, align 4, !tbaa !6
  br label %5230

5212:                                             ; preds = %5185, %5202
  %5213 = phi i32 [ %5197, %5202 ], [ %5186, %5185 ]
  %5214 = phi ptr [ %5196, %5202 ], [ %4, %5185 ]
  %5215 = phi i64 [ %5195, %5202 ], [ 0, %5185 ]
  %5216 = add nsw i32 %5213, 1
  store i32 %5216, ptr %5214, align 4, !tbaa !6
  %5217 = getelementptr inbounds i32, ptr %7, i64 %5215
  %5218 = load i32, ptr %5217, align 4, !tbaa !6
  %5219 = getelementptr inbounds i32, ptr %6, i64 %5215
  br label %5230

5220:                                             ; preds = %5194
  %5221 = icmp eq i32 %5197, %5200
  br i1 %5221, label %5222, label %5228

5222:                                             ; preds = %5220
  store i32 0, ptr %5196, align 4, !tbaa !6
  %5223 = getelementptr inbounds i32, ptr %8, i64 %5195
  %5224 = load i32, ptr %5223, align 4, !tbaa !6
  %5225 = getelementptr inbounds i32, ptr %6, i64 %5195
  store i32 %5224, ptr %5225, align 4, !tbaa !6
  %5226 = add nuw nsw i64 %5195, 1
  %5227 = icmp eq i64 %5226, %4951
  br i1 %5227, label %5235, label %5194, !llvm.loop !1113

5228:                                             ; preds = %5190, %5220
  %5229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5230:                                             ; preds = %5203, %5212
  %5231 = phi ptr [ %5219, %5212 ], [ %5196, %5203 ]
  %5232 = phi i32 [ %5218, %5212 ], [ 1, %5203 ]
  %5233 = load i32, ptr %5231, align 4, !tbaa !6
  %5234 = add nsw i32 %5233, %5232
  store i32 %5234, ptr %5231, align 4, !tbaa !6
  br label %5235

5235:                                             ; preds = %5222, %5230, %5192, %5177
  %5236 = icmp eq i32 %5184, %5
  br i1 %5236, label %5539, label %5099, !llvm.loop !1114

5237:                                             ; preds = %4939
  %5238 = getelementptr inbounds i32, ptr %3, i64 %19
  %5239 = load i32, ptr %5238, align 4, !tbaa !6
  %5240 = icmp eq i32 %5239, 0
  %5241 = icmp sgt i32 %5, 0
  br i1 %5240, label %5251, label %5242

5242:                                             ; preds = %5237
  br i1 %5241, label %5243, label %5539

5243:                                             ; preds = %5242
  %5244 = icmp sgt i32 %13, 1
  %5245 = icmp sgt i32 %13, 0
  %5246 = add i32 %13, -2
  %5247 = zext i32 %5246 to i64
  %5248 = zext i32 %13 to i64
  %5249 = add nuw i32 %5, 1
  %5250 = icmp eq i32 %13, 1
  br label %5393

5251:                                             ; preds = %5237
  br i1 %5241, label %5252, label %5539

5252:                                             ; preds = %5251
  %5253 = icmp sgt i32 %13, 1
  %5254 = icmp sgt i32 %13, 0
  %5255 = add i32 %13, -2
  %5256 = zext i32 %5255 to i64
  %5257 = zext i32 %13 to i64
  %5258 = add nuw i32 %5, 1
  %5259 = icmp eq i32 %13, 1
  br label %5260

5260:                                             ; preds = %5252, %5391
  %5261 = phi double [ 0.000000e+00, %5252 ], [ %5341, %5391 ]
  %5262 = phi i32 [ 0, %5252 ], [ %5343, %5391 ]
  %5263 = phi double [ 0.000000e+00, %5252 ], [ %5342, %5391 ]
  %5264 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5253, label %5265, label %5334

5265:                                             ; preds = %5260, %5324
  %5266 = phi i32 [ %5333, %5324 ], [ 0, %5260 ]
  %5267 = phi i64 [ %5275, %5324 ], [ %5257, %5260 ]
  %5268 = phi i64 [ %5332, %5324 ], [ %5256, %5260 ]
  %5269 = phi i32 [ %5330, %5324 ], [ %5264, %5260 ]
  %5270 = sub i32 %5255, %5266
  %5271 = tail call i32 @llvm.smin.i32(i32 %5270, i32 0)
  %5272 = sub i32 %5270, %5271
  %5273 = zext i32 %5272 to i64
  %5274 = add nuw nsw i64 %5273, 1
  %5275 = add nsw i64 %5267, -1
  %5276 = icmp ult i32 %5272, 31
  br i1 %5276, label %5312, label %5277

5277:                                             ; preds = %5265
  %5278 = and i64 %5274, 8589934560
  %5279 = sub i64 %5268, %5278
  br label %5280

5280:                                             ; preds = %5280, %5277
  %5281 = phi i64 [ 0, %5277 ], [ %5304, %5280 ]
  %5282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5300, %5280 ]
  %5283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5301, %5280 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5302, %5280 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5303, %5280 ]
  %5286 = sub i64 %5268, %5281
  %5287 = getelementptr inbounds i32, ptr %9, i64 %5286
  %5288 = getelementptr inbounds i32, ptr %5287, i64 -7
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !6
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5287, i64 -15
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !6
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5287, i64 -23
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !6
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5287, i64 -31
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !6
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = mul <8 x i32> %5290, %5282
  %5301 = mul <8 x i32> %5293, %5283
  %5302 = mul <8 x i32> %5296, %5284
  %5303 = mul <8 x i32> %5299, %5285
  %5304 = add nuw i64 %5281, 32
  %5305 = icmp eq i64 %5304, %5278
  br i1 %5305, label %5306, label %5280, !llvm.loop !1115

5306:                                             ; preds = %5280
  %5307 = mul <8 x i32> %5301, %5300
  %5308 = mul <8 x i32> %5302, %5307
  %5309 = mul <8 x i32> %5303, %5308
  %5310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5309)
  %5311 = icmp eq i64 %5274, %5278
  br i1 %5311, label %5324, label %5312

5312:                                             ; preds = %5265, %5306
  %5313 = phi i64 [ %5268, %5265 ], [ %5279, %5306 ]
  %5314 = phi i32 [ 1, %5265 ], [ %5310, %5306 ]
  br label %5315

5315:                                             ; preds = %5312, %5315
  %5316 = phi i64 [ %5321, %5315 ], [ %5313, %5312 ]
  %5317 = phi i32 [ %5320, %5315 ], [ %5314, %5312 ]
  %5318 = getelementptr inbounds i32, ptr %9, i64 %5316
  %5319 = load i32, ptr %5318, align 4, !tbaa !6
  %5320 = mul nsw i32 %5319, %5317
  %5321 = add nsw i64 %5316, -1
  %5322 = trunc i64 %5316 to i32
  %5323 = icmp sgt i32 %5322, 0
  br i1 %5323, label %5315, label %5324, !llvm.loop !1116

5324:                                             ; preds = %5315, %5306
  %5325 = phi i32 [ %5310, %5306 ], [ %5320, %5315 ]
  %5326 = and i64 %5275, 4294967295
  %5327 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !6
  %5329 = mul nsw i32 %5328, %5325
  %5330 = add nsw i32 %5329, %5269
  %5331 = icmp sgt i64 %5267, 2
  %5332 = add nsw i64 %5268, -1
  %5333 = add i32 %5266, 1
  br i1 %5331, label %5265, label %5334, !llvm.loop !1117

5334:                                             ; preds = %5324, %5260
  %5335 = phi i32 [ %5264, %5260 ], [ %5330, %5324 ]
  %5336 = sext i32 %5335 to i64
  %5337 = getelementptr inbounds double, ptr %4931, i64 %5336
  %5338 = load double, ptr %5337, align 8, !tbaa !19
  %5339 = fmul fast double %5338, %5338
  %5340 = fmul fast double %5339, %5339
  %5341 = fadd fast double %5340, %5261
  store double %5341, ptr %4933, align 8, !tbaa !19
  %5342 = fadd fast double %5263, 1.000000e+00
  %5343 = add nuw nsw i32 %5262, 1
  br i1 %5254, label %5344, label %5391

5344:                                             ; preds = %5334
  %5345 = load i32, ptr %4, align 4, !tbaa !6
  %5346 = load i32, ptr %12, align 4, !tbaa !6
  %5347 = add nsw i32 %5346, -1
  %5348 = icmp slt i32 %5345, %5347
  br i1 %5348, label %5368, label %5349

5349:                                             ; preds = %5344
  %5350 = icmp eq i32 %5345, %5347
  br i1 %5350, label %5351, label %5384

5351:                                             ; preds = %5349
  store i32 0, ptr %4, align 4, !tbaa !6
  %5352 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5352, ptr %6, align 4, !tbaa !6
  br i1 %5259, label %5391, label %5353

5353:                                             ; preds = %5351, %5378
  %5354 = phi i64 [ %5382, %5378 ], [ 1, %5351 ]
  %5355 = getelementptr inbounds i32, ptr %4, i64 %5354
  %5356 = load i32, ptr %5355, align 4, !tbaa !6
  %5357 = getelementptr inbounds i32, ptr %12, i64 %5354
  %5358 = load i32, ptr %5357, align 4, !tbaa !6
  %5359 = add nsw i32 %5358, -1
  %5360 = icmp slt i32 %5356, %5359
  br i1 %5360, label %5361, label %5376

5361:                                             ; preds = %5353
  br i1 %5348, label %5368, label %5362

5362:                                             ; preds = %5361
  %5363 = getelementptr inbounds i32, ptr %7, i64 %5354
  %5364 = load i32, ptr %5363, align 4, !tbaa !6
  %5365 = getelementptr inbounds i32, ptr %6, i64 %5354
  %5366 = load i32, ptr %5365, align 4, !tbaa !6
  %5367 = add nsw i32 %5366, %5364
  store i32 %5367, ptr %5365, align 4, !tbaa !6
  br label %5386

5368:                                             ; preds = %5344, %5361
  %5369 = phi i32 [ %5356, %5361 ], [ %5345, %5344 ]
  %5370 = phi ptr [ %5355, %5361 ], [ %4, %5344 ]
  %5371 = phi i64 [ %5354, %5361 ], [ 0, %5344 ]
  %5372 = add nsw i32 %5369, 1
  store i32 %5372, ptr %5370, align 4, !tbaa !6
  %5373 = getelementptr inbounds i32, ptr %7, i64 %5371
  %5374 = load i32, ptr %5373, align 4, !tbaa !6
  %5375 = getelementptr inbounds i32, ptr %6, i64 %5371
  br label %5386

5376:                                             ; preds = %5353
  %5377 = icmp eq i32 %5356, %5359
  br i1 %5377, label %5378, label %5384

5378:                                             ; preds = %5376
  store i32 0, ptr %5355, align 4, !tbaa !6
  %5379 = getelementptr inbounds i32, ptr %8, i64 %5354
  %5380 = load i32, ptr %5379, align 4, !tbaa !6
  %5381 = getelementptr inbounds i32, ptr %6, i64 %5354
  store i32 %5380, ptr %5381, align 4, !tbaa !6
  %5382 = add nuw nsw i64 %5354, 1
  %5383 = icmp eq i64 %5382, %5257
  br i1 %5383, label %5391, label %5353, !llvm.loop !1118

5384:                                             ; preds = %5349, %5376
  %5385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5386:                                             ; preds = %5362, %5368
  %5387 = phi ptr [ %5375, %5368 ], [ %5355, %5362 ]
  %5388 = phi i32 [ %5374, %5368 ], [ 1, %5362 ]
  %5389 = load i32, ptr %5387, align 4, !tbaa !6
  %5390 = add nsw i32 %5389, %5388
  store i32 %5390, ptr %5387, align 4, !tbaa !6
  br label %5391

5391:                                             ; preds = %5378, %5386, %5351, %5334
  %5392 = icmp eq i32 %5343, %5
  br i1 %5392, label %5539, label %5260, !llvm.loop !1119

5393:                                             ; preds = %5243, %5529
  %5394 = phi double [ 0.000000e+00, %5243 ], [ %5477, %5529 ]
  %5395 = phi i32 [ 0, %5243 ], [ %5478, %5529 ]
  %5396 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5244, label %5397, label %5466

5397:                                             ; preds = %5393, %5456
  %5398 = phi i32 [ %5465, %5456 ], [ 0, %5393 ]
  %5399 = phi i64 [ %5407, %5456 ], [ %5248, %5393 ]
  %5400 = phi i64 [ %5464, %5456 ], [ %5247, %5393 ]
  %5401 = phi i32 [ %5462, %5456 ], [ %5396, %5393 ]
  %5402 = sub i32 %5246, %5398
  %5403 = tail call i32 @llvm.smin.i32(i32 %5402, i32 0)
  %5404 = sub i32 %5402, %5403
  %5405 = zext i32 %5404 to i64
  %5406 = add nuw nsw i64 %5405, 1
  %5407 = add nsw i64 %5399, -1
  %5408 = icmp ult i32 %5404, 31
  br i1 %5408, label %5444, label %5409

5409:                                             ; preds = %5397
  %5410 = and i64 %5406, 8589934560
  %5411 = sub i64 %5400, %5410
  br label %5412

5412:                                             ; preds = %5412, %5409
  %5413 = phi i64 [ 0, %5409 ], [ %5436, %5412 ]
  %5414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5432, %5412 ]
  %5415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5433, %5412 ]
  %5416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5434, %5412 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5435, %5412 ]
  %5418 = sub i64 %5400, %5413
  %5419 = getelementptr inbounds i32, ptr %11, i64 %5418
  %5420 = getelementptr inbounds i32, ptr %5419, i64 -7
  %5421 = load <8 x i32>, ptr %5420, align 4, !tbaa !6
  %5422 = shufflevector <8 x i32> %5421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5423 = getelementptr inbounds i32, ptr %5419, i64 -15
  %5424 = load <8 x i32>, ptr %5423, align 4, !tbaa !6
  %5425 = shufflevector <8 x i32> %5424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5426 = getelementptr inbounds i32, ptr %5419, i64 -23
  %5427 = load <8 x i32>, ptr %5426, align 4, !tbaa !6
  %5428 = shufflevector <8 x i32> %5427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5429 = getelementptr inbounds i32, ptr %5419, i64 -31
  %5430 = load <8 x i32>, ptr %5429, align 4, !tbaa !6
  %5431 = shufflevector <8 x i32> %5430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5432 = mul <8 x i32> %5422, %5414
  %5433 = mul <8 x i32> %5425, %5415
  %5434 = mul <8 x i32> %5428, %5416
  %5435 = mul <8 x i32> %5431, %5417
  %5436 = add nuw i64 %5413, 32
  %5437 = icmp eq i64 %5436, %5410
  br i1 %5437, label %5438, label %5412, !llvm.loop !1120

5438:                                             ; preds = %5412
  %5439 = mul <8 x i32> %5433, %5432
  %5440 = mul <8 x i32> %5434, %5439
  %5441 = mul <8 x i32> %5435, %5440
  %5442 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5441)
  %5443 = icmp eq i64 %5406, %5410
  br i1 %5443, label %5456, label %5444

5444:                                             ; preds = %5397, %5438
  %5445 = phi i64 [ %5400, %5397 ], [ %5411, %5438 ]
  %5446 = phi i32 [ 1, %5397 ], [ %5442, %5438 ]
  br label %5447

5447:                                             ; preds = %5444, %5447
  %5448 = phi i64 [ %5453, %5447 ], [ %5445, %5444 ]
  %5449 = phi i32 [ %5452, %5447 ], [ %5446, %5444 ]
  %5450 = getelementptr inbounds i32, ptr %11, i64 %5448
  %5451 = load i32, ptr %5450, align 4, !tbaa !6
  %5452 = mul nsw i32 %5451, %5449
  %5453 = add nsw i64 %5448, -1
  %5454 = trunc i64 %5448 to i32
  %5455 = icmp sgt i32 %5454, 0
  br i1 %5455, label %5447, label %5456, !llvm.loop !1121

5456:                                             ; preds = %5447, %5438
  %5457 = phi i32 [ %5442, %5438 ], [ %5452, %5447 ]
  %5458 = and i64 %5407, 4294967295
  %5459 = getelementptr inbounds i32, ptr %6, i64 %5458
  %5460 = load i32, ptr %5459, align 4, !tbaa !6
  %5461 = mul nsw i32 %5460, %5457
  %5462 = add nsw i32 %5461, %5401
  %5463 = icmp sgt i64 %5399, 2
  %5464 = add nsw i64 %5400, -1
  %5465 = add i32 %5398, 1
  br i1 %5463, label %5397, label %5466, !llvm.loop !1122

5466:                                             ; preds = %5456, %5393
  %5467 = phi i32 [ %5396, %5393 ], [ %5462, %5456 ]
  %5468 = icmp slt i32 %5467, %5
  br i1 %5468, label %5471, label %5469

5469:                                             ; preds = %5466
  %5470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

5471:                                             ; preds = %5466
  %5472 = sext i32 %5467 to i64
  %5473 = getelementptr inbounds double, ptr %4931, i64 %5472
  %5474 = load double, ptr %5473, align 8, !tbaa !19
  %5475 = fmul fast double %5474, %5474
  %5476 = fmul fast double %5475, %5475
  %5477 = fadd fast double %5476, %5394
  store double %5477, ptr %4933, align 8, !tbaa !19
  %5478 = add nuw nsw i32 %5395, 1
  br i1 %5245, label %5479, label %5529

5479:                                             ; preds = %5471
  %5480 = load i32, ptr %4, align 4, !tbaa !6
  %5481 = load i32, ptr %12, align 4, !tbaa !6
  %5482 = add nsw i32 %5481, -1
  %5483 = icmp slt i32 %5480, %5482
  br i1 %5483, label %5506, label %5484

5484:                                             ; preds = %5479
  %5485 = icmp eq i32 %5480, %5482
  br i1 %5485, label %5486, label %5522

5486:                                             ; preds = %5484
  store i32 0, ptr %4, align 4, !tbaa !6
  %5487 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5487, ptr %6, align 4, !tbaa !6
  br i1 %5250, label %5529, label %5488

5488:                                             ; preds = %5486, %5516
  %5489 = phi i64 [ %5520, %5516 ], [ 1, %5486 ]
  %5490 = getelementptr inbounds i32, ptr %4, i64 %5489
  %5491 = load i32, ptr %5490, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %12, i64 %5489
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = add nsw i32 %5493, -1
  %5495 = icmp slt i32 %5491, %5494
  br i1 %5495, label %5496, label %5514

5496:                                             ; preds = %5488
  br i1 %5483, label %5506, label %5497

5497:                                             ; preds = %5496
  %5498 = shl i64 %5489, 32
  %5499 = add i64 %5498, -4294967296
  %5500 = ashr exact i64 %5499, 32
  %5501 = getelementptr inbounds i32, ptr %7, i64 %5500
  %5502 = load i32, ptr %5501, align 4, !tbaa !6
  %5503 = getelementptr inbounds i32, ptr %6, i64 %5489
  %5504 = load i32, ptr %5503, align 4, !tbaa !6
  %5505 = add nsw i32 %5504, %5502
  store i32 %5505, ptr %5503, align 4, !tbaa !6
  br label %5524

5506:                                             ; preds = %5479, %5496
  %5507 = phi i32 [ %5491, %5496 ], [ %5480, %5479 ]
  %5508 = phi ptr [ %5490, %5496 ], [ %4, %5479 ]
  %5509 = phi i64 [ %5489, %5496 ], [ 0, %5479 ]
  %5510 = add nsw i32 %5507, 1
  store i32 %5510, ptr %5508, align 4, !tbaa !6
  %5511 = getelementptr inbounds i32, ptr %7, i64 %5509
  %5512 = load i32, ptr %5511, align 4, !tbaa !6
  %5513 = getelementptr inbounds i32, ptr %6, i64 %5509
  br label %5524

5514:                                             ; preds = %5488
  %5515 = icmp eq i32 %5491, %5494
  br i1 %5515, label %5516, label %5522

5516:                                             ; preds = %5514
  store i32 0, ptr %5490, align 4, !tbaa !6
  %5517 = getelementptr inbounds i32, ptr %8, i64 %5489
  %5518 = load i32, ptr %5517, align 4, !tbaa !6
  %5519 = getelementptr inbounds i32, ptr %6, i64 %5489
  store i32 %5518, ptr %5519, align 4, !tbaa !6
  %5520 = add nuw nsw i64 %5489, 1
  %5521 = icmp eq i64 %5520, %5248
  br i1 %5521, label %5529, label %5488, !llvm.loop !1123

5522:                                             ; preds = %5484, %5514
  %5523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5524:                                             ; preds = %5497, %5506
  %5525 = phi ptr [ %5513, %5506 ], [ %5490, %5497 ]
  %5526 = phi i32 [ %5512, %5506 ], [ 1, %5497 ]
  %5527 = load i32, ptr %5525, align 4, !tbaa !6
  %5528 = add nsw i32 %5527, %5526
  store i32 %5528, ptr %5525, align 4, !tbaa !6
  br label %5529

5529:                                             ; preds = %5516, %5524, %5486, %5471
  %5530 = icmp eq i32 %5478, %5
  br i1 %5530, label %5539, label %5393, !llvm.loop !1124

5531:                                             ; preds = %4939
  %5532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

5533:                                             ; preds = %2038
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  br label %5539

5534:                                             ; preds = %2337
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  br label %5539

5535:                                             ; preds = %3268
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  br label %5539

5536:                                             ; preds = %3567
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  br label %5539

5537:                                             ; preds = %4487
  store float %4437, ptr %4318, align 4, !tbaa !163
  br label %5539

5538:                                             ; preds = %4786
  store float %4736, ptr %4318, align 4, !tbaa !163
  br label %5539

5539:                                             ; preds = %5529, %5391, %5235, %5097, %4925, %4629, %4310, %4172, %4016, %3878, %3706, %3410, %3091, %2952, %2795, %2653, %2476, %2180, %1861, %1722, %1565, %1424, %1247, %1108, %951, %809, %632, %493, %336, %195, %5242, %5251, %4945, %4954, %4636, %4645, %5538, %4331, %4340, %5537, %4023, %4032, %3726, %3735, %3417, %3426, %5536, %3112, %3121, %5535, %2802, %2811, %2497, %2506, %2187, %2196, %5534, %1882, %1891, %5533, %1572, %1581, %1268, %1277, %958, %967, %653, %662, %343, %352, %39, %48, %4935, %5531, %4320, %4927, %3716, %4312, %3101, %3708, %2486, %3093, %1871, %2478, %1257, %1863, %642, %1249, %28, %634, %18
  %5540 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %1863 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %3093 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %3101 ], [ 0.000000e+00, %4312 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %4927 ], [ 0.000000e+00, %4320 ], [ 0.000000e+00, %5531 ], [ 0.000000e+00, %4935 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %967 ], [ 0.000000e+00, %958 ], [ 0.000000e+00, %1277 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %1581 ], [ 0.000000e+00, %1572 ], [ %1989, %5533 ], [ 0.000000e+00, %1891 ], [ 0.000000e+00, %1882 ], [ %2288, %5534 ], [ 0.000000e+00, %2196 ], [ 0.000000e+00, %2187 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2811 ], [ 0.000000e+00, %2802 ], [ %3219, %5535 ], [ 0.000000e+00, %3121 ], [ 0.000000e+00, %3112 ], [ %3518, %5536 ], [ 0.000000e+00, %3426 ], [ 0.000000e+00, %3417 ], [ 0.000000e+00, %3735 ], [ 0.000000e+00, %3726 ], [ 0.000000e+00, %4032 ], [ 0.000000e+00, %4023 ], [ %4438, %5537 ], [ 0.000000e+00, %4340 ], [ 0.000000e+00, %4331 ], [ %4737, %5538 ], [ 0.000000e+00, %4645 ], [ 0.000000e+00, %4636 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ 0.000000e+00, %5251 ], [ 0.000000e+00, %5242 ], [ %146, %195 ], [ 0.000000e+00, %336 ], [ %444, %493 ], [ 0.000000e+00, %632 ], [ %760, %809 ], [ 0.000000e+00, %951 ], [ %1059, %1108 ], [ 0.000000e+00, %1247 ], [ %1375, %1424 ], [ 0.000000e+00, %1565 ], [ %1673, %1722 ], [ 0.000000e+00, %1861 ], [ 0.000000e+00, %2180 ], [ 0.000000e+00, %2476 ], [ %2604, %2653 ], [ 0.000000e+00, %2795 ], [ %2903, %2952 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %3410 ], [ 0.000000e+00, %3706 ], [ %3829, %3878 ], [ 0.000000e+00, %4016 ], [ %4123, %4172 ], [ 0.000000e+00, %4310 ], [ 0.000000e+00, %4629 ], [ 0.000000e+00, %4925 ], [ %5048, %5097 ], [ 0.000000e+00, %5235 ], [ %5342, %5391 ], [ 0.000000e+00, %5529 ]
  %5541 = phi i32 [ %10, %18 ], [ 1, %634 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %642 ], [ 1, %1863 ], [ 1, %1257 ], [ 1, %2478 ], [ 1, %1871 ], [ 1, %3093 ], [ 1, %2486 ], [ 1, %3708 ], [ 1, %3101 ], [ 1, %4312 ], [ 1, %3716 ], [ 1, %4927 ], [ 1, %4320 ], [ 1, %5531 ], [ 1, %4935 ], [ 1, %48 ], [ 1, %39 ], [ 1, %352 ], [ 1, %343 ], [ 1, %662 ], [ 1, %653 ], [ 1, %967 ], [ 1, %958 ], [ 1, %1277 ], [ 1, %1268 ], [ 1, %1581 ], [ 1, %1572 ], [ %1898, %5533 ], [ 1, %1891 ], [ 1, %1882 ], [ %2203, %5534 ], [ 1, %2196 ], [ 1, %2187 ], [ 1, %2506 ], [ 1, %2497 ], [ 1, %2811 ], [ 1, %2802 ], [ %3128, %5535 ], [ 1, %3121 ], [ 1, %3112 ], [ %3433, %5536 ], [ 1, %3426 ], [ 1, %3417 ], [ 1, %3735 ], [ 1, %3726 ], [ 1, %4032 ], [ 1, %4023 ], [ %4347, %5537 ], [ 1, %4340 ], [ 1, %4331 ], [ %4652, %5538 ], [ 1, %4645 ], [ 1, %4636 ], [ 1, %4954 ], [ 1, %4945 ], [ 1, %5251 ], [ 1, %5242 ], [ %55, %195 ], [ %46, %336 ], [ %359, %493 ], [ %350, %632 ], [ %669, %809 ], [ %660, %951 ], [ %974, %1108 ], [ %965, %1247 ], [ %1284, %1424 ], [ %1275, %1565 ], [ %1588, %1722 ], [ %1579, %1861 ], [ %1889, %2180 ], [ %2194, %2476 ], [ %2513, %2653 ], [ %2504, %2795 ], [ %2818, %2952 ], [ %2809, %3091 ], [ %3119, %3410 ], [ %3424, %3706 ], [ %3742, %3878 ], [ %3733, %4016 ], [ %4039, %4172 ], [ %4030, %4310 ], [ %4338, %4629 ], [ %4643, %4925 ], [ %4961, %5097 ], [ %4952, %5235 ], [ %5258, %5391 ], [ %5249, %5529 ]
  %5542 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5541, ptr noundef nonnull @.str.5) #3
  %5543 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5540, ptr noundef nonnull @.str.6) #3
  br label %5544

5544:                                             ; preds = %5090, %5175, %5228, %5384, %5469, %5522, %4480, %4565, %4622, %4779, %4864, %4918, %3871, %3956, %4009, %4165, %4250, %4303, %3261, %3346, %3403, %3560, %3645, %3699, %2646, %2730, %2788, %2945, %3029, %3084, %2031, %2116, %2173, %2330, %2415, %2469, %1417, %1501, %1558, %1715, %1799, %1854, %802, %886, %944, %1101, %1185, %1240, %188, %272, %329, %486, %570, %625, %5539
  %5545 = phi i32 [ 0, %5539 ], [ -1, %625 ], [ -1, %570 ], [ -1, %486 ], [ -1, %329 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1240 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %944 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1854 ], [ -1, %1799 ], [ -1, %1715 ], [ -1, %1558 ], [ -1, %1501 ], [ -1, %1417 ], [ -1, %2469 ], [ -1, %2415 ], [ -1, %2330 ], [ -1, %2173 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3084 ], [ -1, %3029 ], [ -1, %2945 ], [ -1, %2788 ], [ -1, %2730 ], [ -1, %2646 ], [ -1, %3699 ], [ -1, %3645 ], [ -1, %3560 ], [ -1, %3403 ], [ -1, %3346 ], [ -1, %3261 ], [ -1, %4303 ], [ -1, %4250 ], [ -1, %4165 ], [ -1, %4009 ], [ -1, %3956 ], [ -1, %3871 ], [ -1, %4918 ], [ -1, %4864 ], [ -1, %4779 ], [ -1, %4622 ], [ -1, %4565 ], [ -1, %4480 ], [ -1, %5522 ], [ -1, %5469 ], [ -1, %5384 ], [ -1, %5228 ], [ -1, %5175 ], [ -1, %5090 ]
  ret i32 %5545
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5544 [
    i32 101, label %22
    i32 102, label %636
    i32 103, label %1251
    i32 104, label %1865
    i32 105, label %2480
    i32 106, label %3095
    i32 107, label %3710
    i32 108, label %4319
    i32 109, label %4929
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !163
  %30 = fptoui float %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %31
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5544

33:                                               ; preds = %22
  switch i32 %1, label %634 [
    i32 1, label %34
    i32 0, label %338
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5544

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %5544

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !1125

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !1126

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !1127

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds float, ptr %24, i64 %132
  %136 = load float, ptr %135, align 4, !tbaa !163
  %137 = fptoui float %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %139
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !1128

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5544, label %57, !llvm.loop !1129

197:                                              ; preds = %40, %336
  %198 = phi i32 [ 0, %40 ], [ %285, %336 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !1130

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !1131

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !1132

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds float, ptr %24, i64 %275
  %277 = load float, ptr %276, align 4, !tbaa !163
  %278 = fptoui float %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = zext i8 %278 to i64
  %281 = mul nuw nsw i64 %280, %280
  %282 = mul nuw nsw i64 %281, %281
  %283 = trunc i64 %282 to i8
  %284 = add i8 %279, %283
  store i8 %284, ptr %26, align 1, !tbaa !12
  %285 = add nuw nsw i32 %198, 1
  br i1 %42, label %286, label %336

286:                                              ; preds = %274
  %287 = load i32, ptr %4, align 4, !tbaa !6
  %288 = load i32, ptr %12, align 4, !tbaa !6
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !6
  %294 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %294, ptr %6, align 4, !tbaa !6
  br i1 %47, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !6
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !6
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !6
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !6
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !6
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %45
  br i1 %328, label %336, label %295, !llvm.loop !1133

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !6
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !6
  br label %336

336:                                              ; preds = %323, %331, %293, %274
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5544, label %197, !llvm.loop !1134

338:                                              ; preds = %33
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !6
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5544

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %495

352:                                              ; preds = %338
  br i1 %342, label %353, label %5544

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %493
  %362 = phi i32 [ 0, %353 ], [ %445, %493 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %444, %493 ]
  %364 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !6
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !1135

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !1136

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !6
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !1137

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds float, ptr %24, i64 %436
  %438 = load float, ptr %437, align 4, !tbaa !163
  %439 = fptoui float %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i8 %439, %439
  %442 = mul i8 %441, %441
  %443 = add i8 %442, %440
  store i8 %443, ptr %26, align 1, !tbaa !12
  %444 = fadd fast double %363, 1.000000e+00
  %445 = add nuw nsw i32 %362, 1
  br i1 %355, label %446, label %493

446:                                              ; preds = %434
  %447 = load i32, ptr %4, align 4, !tbaa !6
  %448 = load i32, ptr %12, align 4, !tbaa !6
  %449 = add nsw i32 %448, -1
  %450 = icmp slt i32 %447, %449
  br i1 %450, label %470, label %451

451:                                              ; preds = %446
  %452 = icmp eq i32 %447, %449
  br i1 %452, label %453, label %486

453:                                              ; preds = %451
  store i32 0, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %454, ptr %6, align 4, !tbaa !6
  br i1 %360, label %493, label %455

455:                                              ; preds = %453, %480
  %456 = phi i64 [ %484, %480 ], [ 1, %453 ]
  %457 = getelementptr inbounds i32, ptr %4, i64 %456
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = getelementptr inbounds i32, ptr %12, i64 %456
  %460 = load i32, ptr %459, align 4, !tbaa !6
  %461 = add nsw i32 %460, -1
  %462 = icmp slt i32 %458, %461
  br i1 %462, label %463, label %478

463:                                              ; preds = %455
  br i1 %450, label %470, label %464

464:                                              ; preds = %463
  %465 = getelementptr inbounds i32, ptr %7, i64 %456
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = getelementptr inbounds i32, ptr %6, i64 %456
  %468 = load i32, ptr %467, align 4, !tbaa !6
  %469 = add nsw i32 %468, %466
  store i32 %469, ptr %467, align 4, !tbaa !6
  br label %488

470:                                              ; preds = %446, %463
  %471 = phi i32 [ %458, %463 ], [ %447, %446 ]
  %472 = phi ptr [ %457, %463 ], [ %4, %446 ]
  %473 = phi i64 [ %456, %463 ], [ 0, %446 ]
  %474 = add nsw i32 %471, 1
  store i32 %474, ptr %472, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %7, i64 %473
  %476 = load i32, ptr %475, align 4, !tbaa !6
  %477 = getelementptr inbounds i32, ptr %6, i64 %473
  br label %488

478:                                              ; preds = %455
  %479 = icmp eq i32 %458, %461
  br i1 %479, label %480, label %486

480:                                              ; preds = %478
  store i32 0, ptr %457, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %8, i64 %456
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %456
  store i32 %482, ptr %483, align 4, !tbaa !6
  %484 = add nuw nsw i64 %456, 1
  %485 = icmp eq i64 %484, %358
  br i1 %485, label %493, label %455, !llvm.loop !1138

486:                                              ; preds = %451, %478
  %487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

488:                                              ; preds = %464, %470
  %489 = phi ptr [ %477, %470 ], [ %457, %464 ]
  %490 = phi i32 [ %476, %470 ], [ 1, %464 ]
  %491 = load i32, ptr %489, align 4, !tbaa !6
  %492 = add nsw i32 %491, %490
  store i32 %492, ptr %489, align 4, !tbaa !6
  br label %493

493:                                              ; preds = %480, %488, %453, %434
  %494 = icmp eq i32 %445, %5
  br i1 %494, label %5544, label %361, !llvm.loop !1139

495:                                              ; preds = %344, %632
  %496 = phi i32 [ 0, %344 ], [ %581, %632 ]
  %497 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %345, label %498, label %567

498:                                              ; preds = %495, %557
  %499 = phi i32 [ %566, %557 ], [ 0, %495 ]
  %500 = phi i64 [ %508, %557 ], [ %349, %495 ]
  %501 = phi i64 [ %565, %557 ], [ %348, %495 ]
  %502 = phi i32 [ %563, %557 ], [ %497, %495 ]
  %503 = sub i32 %347, %499
  %504 = tail call i32 @llvm.smin.i32(i32 %503, i32 0)
  %505 = sub i32 %503, %504
  %506 = zext i32 %505 to i64
  %507 = add nuw nsw i64 %506, 1
  %508 = add nsw i64 %500, -1
  %509 = icmp ult i32 %505, 31
  br i1 %509, label %545, label %510

510:                                              ; preds = %498
  %511 = and i64 %507, 8589934560
  %512 = sub i64 %501, %511
  br label %513

513:                                              ; preds = %513, %510
  %514 = phi i64 [ 0, %510 ], [ %537, %513 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %533, %513 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %534, %513 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %535, %513 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %536, %513 ]
  %519 = sub i64 %501, %514
  %520 = getelementptr inbounds i32, ptr %11, i64 %519
  %521 = getelementptr inbounds i32, ptr %520, i64 -7
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !6
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %520, i64 -15
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %520, i64 -23
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %520, i64 -31
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = mul <8 x i32> %523, %515
  %534 = mul <8 x i32> %526, %516
  %535 = mul <8 x i32> %529, %517
  %536 = mul <8 x i32> %532, %518
  %537 = add nuw i64 %514, 32
  %538 = icmp eq i64 %537, %511
  br i1 %538, label %539, label %513, !llvm.loop !1140

539:                                              ; preds = %513
  %540 = mul <8 x i32> %534, %533
  %541 = mul <8 x i32> %535, %540
  %542 = mul <8 x i32> %536, %541
  %543 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %542)
  %544 = icmp eq i64 %507, %511
  br i1 %544, label %557, label %545

545:                                              ; preds = %498, %539
  %546 = phi i64 [ %501, %498 ], [ %512, %539 ]
  %547 = phi i32 [ 1, %498 ], [ %543, %539 ]
  br label %548

548:                                              ; preds = %545, %548
  %549 = phi i64 [ %554, %548 ], [ %546, %545 ]
  %550 = phi i32 [ %553, %548 ], [ %547, %545 ]
  %551 = getelementptr inbounds i32, ptr %11, i64 %549
  %552 = load i32, ptr %551, align 4, !tbaa !6
  %553 = mul nsw i32 %552, %550
  %554 = add nsw i64 %549, -1
  %555 = trunc i64 %549 to i32
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %548, label %557, !llvm.loop !1141

557:                                              ; preds = %548, %539
  %558 = phi i32 [ %543, %539 ], [ %553, %548 ]
  %559 = and i64 %508, 4294967295
  %560 = getelementptr inbounds i32, ptr %6, i64 %559
  %561 = load i32, ptr %560, align 4, !tbaa !6
  %562 = mul nsw i32 %561, %558
  %563 = add nsw i32 %562, %502
  %564 = icmp sgt i64 %500, 2
  %565 = add nsw i64 %501, -1
  %566 = add i32 %499, 1
  br i1 %564, label %498, label %567, !llvm.loop !1142

567:                                              ; preds = %557, %495
  %568 = phi i32 [ %497, %495 ], [ %563, %557 ]
  %569 = icmp slt i32 %568, %5
  br i1 %569, label %572, label %570

570:                                              ; preds = %567
  %571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

572:                                              ; preds = %567
  %573 = sext i32 %568 to i64
  %574 = getelementptr inbounds float, ptr %24, i64 %573
  %575 = load float, ptr %574, align 4, !tbaa !163
  %576 = fptoui float %575 to i8
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i8 %576, %576
  %579 = mul i8 %578, %578
  %580 = add i8 %579, %577
  store i8 %580, ptr %26, align 1, !tbaa !12
  %581 = add nuw nsw i32 %496, 1
  br i1 %346, label %582, label %632

582:                                              ; preds = %572
  %583 = load i32, ptr %4, align 4, !tbaa !6
  %584 = load i32, ptr %12, align 4, !tbaa !6
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %583, %585
  br i1 %586, label %609, label %587

587:                                              ; preds = %582
  %588 = icmp eq i32 %583, %585
  br i1 %588, label %589, label %625

589:                                              ; preds = %587
  store i32 0, ptr %4, align 4, !tbaa !6
  %590 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %590, ptr %6, align 4, !tbaa !6
  br i1 %351, label %632, label %591

591:                                              ; preds = %589, %619
  %592 = phi i64 [ %623, %619 ], [ 1, %589 ]
  %593 = getelementptr inbounds i32, ptr %4, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = getelementptr inbounds i32, ptr %12, i64 %592
  %596 = load i32, ptr %595, align 4, !tbaa !6
  %597 = add nsw i32 %596, -1
  %598 = icmp slt i32 %594, %597
  br i1 %598, label %599, label %617

599:                                              ; preds = %591
  br i1 %586, label %609, label %600

600:                                              ; preds = %599
  %601 = shl i64 %592, 32
  %602 = add i64 %601, -4294967296
  %603 = ashr exact i64 %602, 32
  %604 = getelementptr inbounds i32, ptr %7, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = getelementptr inbounds i32, ptr %6, i64 %592
  %607 = load i32, ptr %606, align 4, !tbaa !6
  %608 = add nsw i32 %607, %605
  store i32 %608, ptr %606, align 4, !tbaa !6
  br label %627

609:                                              ; preds = %582, %599
  %610 = phi i32 [ %594, %599 ], [ %583, %582 ]
  %611 = phi ptr [ %593, %599 ], [ %4, %582 ]
  %612 = phi i64 [ %592, %599 ], [ 0, %582 ]
  %613 = add nsw i32 %610, 1
  store i32 %613, ptr %611, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %7, i64 %612
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = getelementptr inbounds i32, ptr %6, i64 %612
  br label %627

617:                                              ; preds = %591
  %618 = icmp eq i32 %594, %597
  br i1 %618, label %619, label %625

619:                                              ; preds = %617
  store i32 0, ptr %593, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %8, i64 %592
  %621 = load i32, ptr %620, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %6, i64 %592
  store i32 %621, ptr %622, align 4, !tbaa !6
  %623 = add nuw nsw i64 %592, 1
  %624 = icmp eq i64 %623, %349
  br i1 %624, label %632, label %591, !llvm.loop !1143

625:                                              ; preds = %587, %617
  %626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

627:                                              ; preds = %600, %609
  %628 = phi ptr [ %616, %609 ], [ %593, %600 ]
  %629 = phi i32 [ %615, %609 ], [ 1, %600 ]
  %630 = load i32, ptr %628, align 4, !tbaa !6
  %631 = add nsw i32 %630, %629
  store i32 %631, ptr %628, align 4, !tbaa !6
  br label %632

632:                                              ; preds = %619, %627, %589, %572
  %633 = icmp eq i32 %581, %5
  br i1 %633, label %5544, label %495, !llvm.loop !1144

634:                                              ; preds = %33
  %635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

636:                                              ; preds = %18
  %637 = getelementptr inbounds ptr, ptr %14, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = getelementptr inbounds ptr, ptr %16, i64 %19
  %640 = load ptr, ptr %639, align 8, !tbaa !10
  store i32 0, ptr %640, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %642, label %647

642:                                              ; preds = %636
  %643 = load float, ptr %638, align 4, !tbaa !163
  %644 = fptosi float %643 to i32
  %645 = mul i32 %644, %644
  %646 = mul i32 %645, %645
  store i32 %646, ptr %640, align 4, !tbaa !6
  br label %5544

647:                                              ; preds = %636
  switch i32 %1, label %1249 [
    i32 1, label %648
    i32 0, label %953
  ]

648:                                              ; preds = %647
  %649 = getelementptr inbounds i32, ptr %3, i64 %19
  %650 = load i32, ptr %649, align 4, !tbaa !6
  %651 = icmp eq i32 %650, 0
  %652 = icmp sgt i32 %5, 0
  br i1 %651, label %662, label %653

653:                                              ; preds = %648
  br i1 %652, label %654, label %5544

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %811

662:                                              ; preds = %648
  br i1 %652, label %663, label %5544

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %671

671:                                              ; preds = %663, %809
  %672 = phi i32 [ 0, %663 ], [ %761, %809 ]
  %673 = phi double [ 0.000000e+00, %663 ], [ %760, %809 ]
  %674 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %675, label %744

675:                                              ; preds = %671, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %671 ]
  %677 = phi i64 [ %685, %734 ], [ %668, %671 ]
  %678 = phi i64 [ %742, %734 ], [ %667, %671 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %671 ]
  %680 = sub i32 %666, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !1145

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !6
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !1146

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !1147

744:                                              ; preds = %734, %671
  %745 = phi i32 [ %674, %671 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !19
  %749 = getelementptr inbounds float, ptr %638, i64 %746
  %750 = load float, ptr %749, align 4, !tbaa !163
  %751 = fptosi float %750 to i32
  %752 = load i32, ptr %640, align 4, !tbaa !6
  %753 = sitofp i32 %752 to double
  %754 = sitofp i32 %751 to double
  %755 = fmul fast double %748, %754
  %756 = fmul fast double %755, %755
  %757 = fmul fast double %756, %756
  %758 = fadd fast double %757, %753
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %640, align 4, !tbaa !6
  %760 = fadd fast double %748, %673
  %761 = add nuw nsw i32 %672, 1
  br i1 %665, label %762, label %809

762:                                              ; preds = %744
  %763 = load i32, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %12, align 4, !tbaa !6
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !6
  %770 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %770, ptr %6, align 4, !tbaa !6
  br i1 %670, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !6
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !6
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %668
  br i1 %801, label %809, label %771, !llvm.loop !1148

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !6
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !6
  br label %809

809:                                              ; preds = %796, %804, %769, %744
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5544, label %671, !llvm.loop !1149

811:                                              ; preds = %654, %951
  %812 = phi i32 [ 0, %654 ], [ %900, %951 ]
  %813 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %655, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %659, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %658, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %657, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !1150

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !6
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !1151

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !6
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !1152

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds float, ptr %638, i64 %889
  %891 = load float, ptr %890, align 4, !tbaa !163
  %892 = fptosi float %891 to i32
  %893 = load i32, ptr %640, align 4, !tbaa !6
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = fmul fast double %895, %895
  %897 = fmul fast double %896, %896
  %898 = fadd fast double %897, %894
  %899 = fptosi double %898 to i32
  store i32 %899, ptr %640, align 4, !tbaa !6
  %900 = add nuw nsw i32 %812, 1
  br i1 %656, label %901, label %951

901:                                              ; preds = %888
  %902 = load i32, ptr %4, align 4, !tbaa !6
  %903 = load i32, ptr %12, align 4, !tbaa !6
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %902, %904
  br i1 %905, label %928, label %906

906:                                              ; preds = %901
  %907 = icmp eq i32 %902, %904
  br i1 %907, label %908, label %944

908:                                              ; preds = %906
  store i32 0, ptr %4, align 4, !tbaa !6
  %909 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %909, ptr %6, align 4, !tbaa !6
  br i1 %661, label %951, label %910

910:                                              ; preds = %908, %938
  %911 = phi i64 [ %942, %938 ], [ 1, %908 ]
  %912 = getelementptr inbounds i32, ptr %4, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %12, i64 %911
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, -1
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %936

918:                                              ; preds = %910
  br i1 %905, label %928, label %919

919:                                              ; preds = %918
  %920 = shl i64 %911, 32
  %921 = add i64 %920, -4294967296
  %922 = ashr exact i64 %921, 32
  %923 = getelementptr inbounds i32, ptr %7, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %911
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = add nsw i32 %926, %924
  store i32 %927, ptr %925, align 4, !tbaa !6
  br label %946

928:                                              ; preds = %901, %918
  %929 = phi i32 [ %913, %918 ], [ %902, %901 ]
  %930 = phi ptr [ %912, %918 ], [ %4, %901 ]
  %931 = phi i64 [ %911, %918 ], [ 0, %901 ]
  %932 = add nsw i32 %929, 1
  store i32 %932, ptr %930, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %7, i64 %931
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %931
  br label %946

936:                                              ; preds = %910
  %937 = icmp eq i32 %913, %916
  br i1 %937, label %938, label %944

938:                                              ; preds = %936
  store i32 0, ptr %912, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %8, i64 %911
  %940 = load i32, ptr %939, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %6, i64 %911
  store i32 %940, ptr %941, align 4, !tbaa !6
  %942 = add nuw nsw i64 %911, 1
  %943 = icmp eq i64 %942, %659
  br i1 %943, label %951, label %910, !llvm.loop !1153

944:                                              ; preds = %906, %936
  %945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

946:                                              ; preds = %919, %928
  %947 = phi ptr [ %935, %928 ], [ %912, %919 ]
  %948 = phi i32 [ %934, %928 ], [ 1, %919 ]
  %949 = load i32, ptr %947, align 4, !tbaa !6
  %950 = add nsw i32 %949, %948
  store i32 %950, ptr %947, align 4, !tbaa !6
  br label %951

951:                                              ; preds = %938, %946, %908, %888
  %952 = icmp eq i32 %900, %5
  br i1 %952, label %5544, label %811, !llvm.loop !1154

953:                                              ; preds = %647
  %954 = getelementptr inbounds i32, ptr %3, i64 %19
  %955 = load i32, ptr %954, align 4, !tbaa !6
  %956 = icmp eq i32 %955, 0
  %957 = icmp sgt i32 %5, 0
  br i1 %956, label %967, label %958

958:                                              ; preds = %953
  br i1 %957, label %959, label %5544

959:                                              ; preds = %958
  %960 = icmp sgt i32 %13, 1
  %961 = icmp sgt i32 %13, 0
  %962 = add i32 %13, -2
  %963 = zext i32 %962 to i64
  %964 = zext i32 %13 to i64
  %965 = add nuw i32 %5, 1
  %966 = icmp eq i32 %13, 1
  br label %1110

967:                                              ; preds = %953
  br i1 %957, label %968, label %5544

968:                                              ; preds = %967
  %969 = icmp sgt i32 %13, 1
  %970 = icmp sgt i32 %13, 0
  %971 = add i32 %13, -2
  %972 = zext i32 %971 to i64
  %973 = zext i32 %13 to i64
  %974 = add nuw i32 %5, 1
  %975 = icmp eq i32 %13, 1
  br label %976

976:                                              ; preds = %968, %1108
  %977 = phi i32 [ 0, %968 ], [ %1060, %1108 ]
  %978 = phi double [ 0.000000e+00, %968 ], [ %1059, %1108 ]
  %979 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %969, label %980, label %1049

980:                                              ; preds = %976, %1039
  %981 = phi i32 [ %1048, %1039 ], [ 0, %976 ]
  %982 = phi i64 [ %990, %1039 ], [ %973, %976 ]
  %983 = phi i64 [ %1047, %1039 ], [ %972, %976 ]
  %984 = phi i32 [ %1045, %1039 ], [ %979, %976 ]
  %985 = sub i32 %971, %981
  %986 = tail call i32 @llvm.smin.i32(i32 %985, i32 0)
  %987 = sub i32 %985, %986
  %988 = zext i32 %987 to i64
  %989 = add nuw nsw i64 %988, 1
  %990 = add nsw i64 %982, -1
  %991 = icmp ult i32 %987, 31
  br i1 %991, label %1027, label %992

992:                                              ; preds = %980
  %993 = and i64 %989, 8589934560
  %994 = sub i64 %983, %993
  br label %995

995:                                              ; preds = %995, %992
  %996 = phi i64 [ 0, %992 ], [ %1019, %995 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1015, %995 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1016, %995 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1017, %995 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1018, %995 ]
  %1001 = sub i64 %983, %996
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1001
  %1003 = getelementptr inbounds i32, ptr %1002, i64 -7
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !6
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %1002, i64 -15
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1002, i64 -23
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1002, i64 -31
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = mul <8 x i32> %1005, %997
  %1016 = mul <8 x i32> %1008, %998
  %1017 = mul <8 x i32> %1011, %999
  %1018 = mul <8 x i32> %1014, %1000
  %1019 = add nuw i64 %996, 32
  %1020 = icmp eq i64 %1019, %993
  br i1 %1020, label %1021, label %995, !llvm.loop !1155

1021:                                             ; preds = %995
  %1022 = mul <8 x i32> %1016, %1015
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1024)
  %1026 = icmp eq i64 %989, %993
  br i1 %1026, label %1039, label %1027

1027:                                             ; preds = %980, %1021
  %1028 = phi i64 [ %983, %980 ], [ %994, %1021 ]
  %1029 = phi i32 [ 1, %980 ], [ %1025, %1021 ]
  br label %1030

1030:                                             ; preds = %1027, %1030
  %1031 = phi i64 [ %1036, %1030 ], [ %1028, %1027 ]
  %1032 = phi i32 [ %1035, %1030 ], [ %1029, %1027 ]
  %1033 = getelementptr inbounds i32, ptr %9, i64 %1031
  %1034 = load i32, ptr %1033, align 4, !tbaa !6
  %1035 = mul nsw i32 %1034, %1032
  %1036 = add nsw i64 %1031, -1
  %1037 = trunc i64 %1031 to i32
  %1038 = icmp sgt i32 %1037, 0
  br i1 %1038, label %1030, label %1039, !llvm.loop !1156

1039:                                             ; preds = %1030, %1021
  %1040 = phi i32 [ %1025, %1021 ], [ %1035, %1030 ]
  %1041 = and i64 %990, 4294967295
  %1042 = getelementptr inbounds i32, ptr %6, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !6
  %1044 = mul nsw i32 %1043, %1040
  %1045 = add nsw i32 %1044, %984
  %1046 = icmp sgt i64 %982, 2
  %1047 = add nsw i64 %983, -1
  %1048 = add i32 %981, 1
  br i1 %1046, label %980, label %1049, !llvm.loop !1157

1049:                                             ; preds = %1039, %976
  %1050 = phi i32 [ %979, %976 ], [ %1045, %1039 ]
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds float, ptr %638, i64 %1051
  %1053 = load float, ptr %1052, align 4, !tbaa !163
  %1054 = fptosi float %1053 to i32
  %1055 = load i32, ptr %640, align 4, !tbaa !6
  %1056 = mul i32 %1054, %1054
  %1057 = mul i32 %1056, %1056
  %1058 = add nsw i32 %1057, %1055
  store i32 %1058, ptr %640, align 4, !tbaa !6
  %1059 = fadd fast double %978, 1.000000e+00
  %1060 = add nuw nsw i32 %977, 1
  br i1 %970, label %1061, label %1108

1061:                                             ; preds = %1049
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %975, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %973
  br i1 %1100, label %1108, label %1070, !llvm.loop !1158

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1049
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %5544, label %976, !llvm.loop !1159

1110:                                             ; preds = %959, %1247
  %1111 = phi i32 [ 0, %959 ], [ %1196, %1247 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %960, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %964, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %963, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %962, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !1160

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !1161

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !1162

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds float, ptr %638, i64 %1188
  %1190 = load float, ptr %1189, align 4, !tbaa !163
  %1191 = fptosi float %1190 to i32
  %1192 = load i32, ptr %640, align 4, !tbaa !6
  %1193 = mul i32 %1191, %1191
  %1194 = mul i32 %1193, %1193
  %1195 = add nsw i32 %1194, %1192
  store i32 %1195, ptr %640, align 4, !tbaa !6
  %1196 = add nuw nsw i32 %1111, 1
  br i1 %961, label %1197, label %1247

1197:                                             ; preds = %1187
  %1198 = load i32, ptr %4, align 4, !tbaa !6
  %1199 = load i32, ptr %12, align 4, !tbaa !6
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !6
  %1205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1205, ptr %6, align 4, !tbaa !6
  br i1 %966, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !6
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !6
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %964
  br i1 %1239, label %1247, label %1206, !llvm.loop !1163

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !6
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !6
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1187
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5544, label %1110, !llvm.loop !1164

1249:                                             ; preds = %647
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !10
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !10
  store i8 0, ptr %1255, align 1, !tbaa !12
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1262

1257:                                             ; preds = %1251
  %1258 = load float, ptr %1253, align 4, !tbaa !163
  %1259 = fptosi float %1258 to i8
  %1260 = mul i8 %1259, %1259
  %1261 = mul i8 %1260, %1260
  store i8 %1261, ptr %1255, align 1, !tbaa !12
  br label %5544

1262:                                             ; preds = %1251
  switch i32 %1, label %1863 [
    i32 1, label %1263
    i32 0, label %1567
  ]

1263:                                             ; preds = %1262
  %1264 = getelementptr inbounds i32, ptr %3, i64 %19
  %1265 = load i32, ptr %1264, align 4, !tbaa !6
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp sgt i32 %5, 0
  br i1 %1266, label %1277, label %1268

1268:                                             ; preds = %1263
  br i1 %1267, label %1269, label %5544

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1426

1277:                                             ; preds = %1263
  br i1 %1267, label %1278, label %5544

1278:                                             ; preds = %1277
  %1279 = icmp sgt i32 %13, 1
  %1280 = icmp sgt i32 %13, 0
  %1281 = add i32 %13, -2
  %1282 = zext i32 %1281 to i64
  %1283 = zext i32 %13 to i64
  %1284 = add nuw i32 %5, 1
  %1285 = icmp eq i32 %13, 1
  br label %1286

1286:                                             ; preds = %1278, %1424
  %1287 = phi i32 [ 0, %1278 ], [ %1376, %1424 ]
  %1288 = phi double [ 0.000000e+00, %1278 ], [ %1375, %1424 ]
  %1289 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1290, label %1359

1290:                                             ; preds = %1286, %1349
  %1291 = phi i32 [ %1358, %1349 ], [ 0, %1286 ]
  %1292 = phi i64 [ %1300, %1349 ], [ %1283, %1286 ]
  %1293 = phi i64 [ %1357, %1349 ], [ %1282, %1286 ]
  %1294 = phi i32 [ %1355, %1349 ], [ %1289, %1286 ]
  %1295 = sub i32 %1281, %1291
  %1296 = tail call i32 @llvm.smin.i32(i32 %1295, i32 0)
  %1297 = sub i32 %1295, %1296
  %1298 = zext i32 %1297 to i64
  %1299 = add nuw nsw i64 %1298, 1
  %1300 = add nsw i64 %1292, -1
  %1301 = icmp ult i32 %1297, 31
  br i1 %1301, label %1337, label %1302

1302:                                             ; preds = %1290
  %1303 = and i64 %1299, 8589934560
  %1304 = sub i64 %1293, %1303
  br label %1305

1305:                                             ; preds = %1305, %1302
  %1306 = phi i64 [ 0, %1302 ], [ %1329, %1305 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1325, %1305 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1326, %1305 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1327, %1305 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1328, %1305 ]
  %1311 = sub i64 %1293, %1306
  %1312 = getelementptr inbounds i32, ptr %9, i64 %1311
  %1313 = getelementptr inbounds i32, ptr %1312, i64 -7
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !6
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1312, i64 -15
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1312, i64 -23
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1312, i64 -31
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = mul <8 x i32> %1315, %1307
  %1326 = mul <8 x i32> %1318, %1308
  %1327 = mul <8 x i32> %1321, %1309
  %1328 = mul <8 x i32> %1324, %1310
  %1329 = add nuw i64 %1306, 32
  %1330 = icmp eq i64 %1329, %1303
  br i1 %1330, label %1331, label %1305, !llvm.loop !1165

1331:                                             ; preds = %1305
  %1332 = mul <8 x i32> %1326, %1325
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = mul <8 x i32> %1328, %1333
  %1335 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1334)
  %1336 = icmp eq i64 %1299, %1303
  br i1 %1336, label %1349, label %1337

1337:                                             ; preds = %1290, %1331
  %1338 = phi i64 [ %1293, %1290 ], [ %1304, %1331 ]
  %1339 = phi i32 [ 1, %1290 ], [ %1335, %1331 ]
  br label %1340

1340:                                             ; preds = %1337, %1340
  %1341 = phi i64 [ %1346, %1340 ], [ %1338, %1337 ]
  %1342 = phi i32 [ %1345, %1340 ], [ %1339, %1337 ]
  %1343 = getelementptr inbounds i32, ptr %9, i64 %1341
  %1344 = load i32, ptr %1343, align 4, !tbaa !6
  %1345 = mul nsw i32 %1344, %1342
  %1346 = add nsw i64 %1341, -1
  %1347 = trunc i64 %1341 to i32
  %1348 = icmp sgt i32 %1347, 0
  br i1 %1348, label %1340, label %1349, !llvm.loop !1166

1349:                                             ; preds = %1340, %1331
  %1350 = phi i32 [ %1335, %1331 ], [ %1345, %1340 ]
  %1351 = and i64 %1300, 4294967295
  %1352 = getelementptr inbounds i32, ptr %6, i64 %1351
  %1353 = load i32, ptr %1352, align 4, !tbaa !6
  %1354 = mul nsw i32 %1353, %1350
  %1355 = add nsw i32 %1354, %1294
  %1356 = icmp sgt i64 %1292, 2
  %1357 = add nsw i64 %1293, -1
  %1358 = add i32 %1291, 1
  br i1 %1356, label %1290, label %1359, !llvm.loop !1167

1359:                                             ; preds = %1349, %1286
  %1360 = phi i32 [ %1289, %1286 ], [ %1355, %1349 ]
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds double, ptr %2, i64 %1361
  %1363 = load double, ptr %1362, align 8, !tbaa !19
  %1364 = getelementptr inbounds float, ptr %1253, i64 %1361
  %1365 = load float, ptr %1364, align 4, !tbaa !163
  %1366 = fptosi float %1365 to i8
  %1367 = load i8, ptr %1255, align 1, !tbaa !12
  %1368 = sitofp i8 %1367 to double
  %1369 = sitofp i8 %1366 to double
  %1370 = fmul fast double %1363, %1369
  %1371 = fmul fast double %1370, %1370
  %1372 = fmul fast double %1371, %1371
  %1373 = fadd fast double %1372, %1368
  %1374 = fptosi double %1373 to i8
  store i8 %1374, ptr %1255, align 1, !tbaa !12
  %1375 = fadd fast double %1363, %1288
  %1376 = add nuw nsw i32 %1287, 1
  br i1 %1280, label %1377, label %1424

1377:                                             ; preds = %1359
  %1378 = load i32, ptr %4, align 4, !tbaa !6
  %1379 = load i32, ptr %12, align 4, !tbaa !6
  %1380 = add nsw i32 %1379, -1
  %1381 = icmp slt i32 %1378, %1380
  br i1 %1381, label %1401, label %1382

1382:                                             ; preds = %1377
  %1383 = icmp eq i32 %1378, %1380
  br i1 %1383, label %1384, label %1417

1384:                                             ; preds = %1382
  store i32 0, ptr %4, align 4, !tbaa !6
  %1385 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1385, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1424, label %1386

1386:                                             ; preds = %1384, %1411
  %1387 = phi i64 [ %1415, %1411 ], [ 1, %1384 ]
  %1388 = getelementptr inbounds i32, ptr %4, i64 %1387
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = getelementptr inbounds i32, ptr %12, i64 %1387
  %1391 = load i32, ptr %1390, align 4, !tbaa !6
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1389, %1392
  br i1 %1393, label %1394, label %1409

1394:                                             ; preds = %1386
  br i1 %1381, label %1401, label %1395

1395:                                             ; preds = %1394
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1387
  %1399 = load i32, ptr %1398, align 4, !tbaa !6
  %1400 = add nsw i32 %1399, %1397
  store i32 %1400, ptr %1398, align 4, !tbaa !6
  br label %1419

1401:                                             ; preds = %1377, %1394
  %1402 = phi i32 [ %1389, %1394 ], [ %1378, %1377 ]
  %1403 = phi ptr [ %1388, %1394 ], [ %4, %1377 ]
  %1404 = phi i64 [ %1387, %1394 ], [ 0, %1377 ]
  %1405 = add nsw i32 %1402, 1
  store i32 %1405, ptr %1403, align 4, !tbaa !6
  %1406 = getelementptr inbounds i32, ptr %7, i64 %1404
  %1407 = load i32, ptr %1406, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1404
  br label %1419

1409:                                             ; preds = %1386
  %1410 = icmp eq i32 %1389, %1392
  br i1 %1410, label %1411, label %1417

1411:                                             ; preds = %1409
  store i32 0, ptr %1388, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %8, i64 %1387
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %6, i64 %1387
  store i32 %1413, ptr %1414, align 4, !tbaa !6
  %1415 = add nuw nsw i64 %1387, 1
  %1416 = icmp eq i64 %1415, %1283
  br i1 %1416, label %1424, label %1386, !llvm.loop !1168

1417:                                             ; preds = %1382, %1409
  %1418 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1419:                                             ; preds = %1395, %1401
  %1420 = phi ptr [ %1408, %1401 ], [ %1388, %1395 ]
  %1421 = phi i32 [ %1407, %1401 ], [ 1, %1395 ]
  %1422 = load i32, ptr %1420, align 4, !tbaa !6
  %1423 = add nsw i32 %1422, %1421
  store i32 %1423, ptr %1420, align 4, !tbaa !6
  br label %1424

1424:                                             ; preds = %1411, %1419, %1384, %1359
  %1425 = icmp eq i32 %1376, %5
  br i1 %1425, label %5544, label %1286, !llvm.loop !1169

1426:                                             ; preds = %1269, %1565
  %1427 = phi i32 [ 0, %1269 ], [ %1514, %1565 ]
  %1428 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1270, label %1429, label %1498

1429:                                             ; preds = %1426, %1488
  %1430 = phi i32 [ %1497, %1488 ], [ 0, %1426 ]
  %1431 = phi i64 [ %1439, %1488 ], [ %1274, %1426 ]
  %1432 = phi i64 [ %1496, %1488 ], [ %1273, %1426 ]
  %1433 = phi i32 [ %1494, %1488 ], [ %1428, %1426 ]
  %1434 = sub i32 %1272, %1430
  %1435 = tail call i32 @llvm.smin.i32(i32 %1434, i32 0)
  %1436 = sub i32 %1434, %1435
  %1437 = zext i32 %1436 to i64
  %1438 = add nuw nsw i64 %1437, 1
  %1439 = add nsw i64 %1431, -1
  %1440 = icmp ult i32 %1436, 31
  br i1 %1440, label %1476, label %1441

1441:                                             ; preds = %1429
  %1442 = and i64 %1438, 8589934560
  %1443 = sub i64 %1432, %1442
  br label %1444

1444:                                             ; preds = %1444, %1441
  %1445 = phi i64 [ 0, %1441 ], [ %1468, %1444 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1464, %1444 ]
  %1447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1465, %1444 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1466, %1444 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1467, %1444 ]
  %1450 = sub i64 %1432, %1445
  %1451 = getelementptr inbounds i32, ptr %11, i64 %1450
  %1452 = getelementptr inbounds i32, ptr %1451, i64 -7
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1451, i64 -15
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1451, i64 -23
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = getelementptr inbounds i32, ptr %1451, i64 -31
  %1462 = load <8 x i32>, ptr %1461, align 4, !tbaa !6
  %1463 = shufflevector <8 x i32> %1462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1464 = mul <8 x i32> %1454, %1446
  %1465 = mul <8 x i32> %1457, %1447
  %1466 = mul <8 x i32> %1460, %1448
  %1467 = mul <8 x i32> %1463, %1449
  %1468 = add nuw i64 %1445, 32
  %1469 = icmp eq i64 %1468, %1442
  br i1 %1469, label %1470, label %1444, !llvm.loop !1170

1470:                                             ; preds = %1444
  %1471 = mul <8 x i32> %1465, %1464
  %1472 = mul <8 x i32> %1466, %1471
  %1473 = mul <8 x i32> %1467, %1472
  %1474 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1473)
  %1475 = icmp eq i64 %1438, %1442
  br i1 %1475, label %1488, label %1476

1476:                                             ; preds = %1429, %1470
  %1477 = phi i64 [ %1432, %1429 ], [ %1443, %1470 ]
  %1478 = phi i32 [ 1, %1429 ], [ %1474, %1470 ]
  br label %1479

1479:                                             ; preds = %1476, %1479
  %1480 = phi i64 [ %1485, %1479 ], [ %1477, %1476 ]
  %1481 = phi i32 [ %1484, %1479 ], [ %1478, %1476 ]
  %1482 = getelementptr inbounds i32, ptr %11, i64 %1480
  %1483 = load i32, ptr %1482, align 4, !tbaa !6
  %1484 = mul nsw i32 %1483, %1481
  %1485 = add nsw i64 %1480, -1
  %1486 = trunc i64 %1480 to i32
  %1487 = icmp sgt i32 %1486, 0
  br i1 %1487, label %1479, label %1488, !llvm.loop !1171

1488:                                             ; preds = %1479, %1470
  %1489 = phi i32 [ %1474, %1470 ], [ %1484, %1479 ]
  %1490 = and i64 %1439, 4294967295
  %1491 = getelementptr inbounds i32, ptr %6, i64 %1490
  %1492 = load i32, ptr %1491, align 4, !tbaa !6
  %1493 = mul nsw i32 %1492, %1489
  %1494 = add nsw i32 %1493, %1433
  %1495 = icmp sgt i64 %1431, 2
  %1496 = add nsw i64 %1432, -1
  %1497 = add i32 %1430, 1
  br i1 %1495, label %1429, label %1498, !llvm.loop !1172

1498:                                             ; preds = %1488, %1426
  %1499 = phi i32 [ %1428, %1426 ], [ %1494, %1488 ]
  %1500 = icmp slt i32 %1499, %5
  br i1 %1500, label %1503, label %1501

1501:                                             ; preds = %1498
  %1502 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

1503:                                             ; preds = %1498
  %1504 = sext i32 %1499 to i64
  %1505 = getelementptr inbounds float, ptr %1253, i64 %1504
  %1506 = load float, ptr %1505, align 4, !tbaa !163
  %1507 = fptosi float %1506 to i8
  %1508 = load i8, ptr %1255, align 1, !tbaa !12
  %1509 = sext i8 %1507 to i32
  %1510 = mul nsw i32 %1509, %1509
  %1511 = mul nsw i32 %1510, %1510
  %1512 = trunc i32 %1511 to i8
  %1513 = add i8 %1508, %1512
  store i8 %1513, ptr %1255, align 1, !tbaa !12
  %1514 = add nuw nsw i32 %1427, 1
  br i1 %1271, label %1515, label %1565

1515:                                             ; preds = %1503
  %1516 = load i32, ptr %4, align 4, !tbaa !6
  %1517 = load i32, ptr %12, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1516, %1518
  br i1 %1519, label %1542, label %1520

1520:                                             ; preds = %1515
  %1521 = icmp eq i32 %1516, %1518
  br i1 %1521, label %1522, label %1558

1522:                                             ; preds = %1520
  store i32 0, ptr %4, align 4, !tbaa !6
  %1523 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1523, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1565, label %1524

1524:                                             ; preds = %1522, %1552
  %1525 = phi i64 [ %1556, %1552 ], [ 1, %1522 ]
  %1526 = getelementptr inbounds i32, ptr %4, i64 %1525
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = getelementptr inbounds i32, ptr %12, i64 %1525
  %1529 = load i32, ptr %1528, align 4, !tbaa !6
  %1530 = add nsw i32 %1529, -1
  %1531 = icmp slt i32 %1527, %1530
  br i1 %1531, label %1532, label %1550

1532:                                             ; preds = %1524
  br i1 %1519, label %1542, label %1533

1533:                                             ; preds = %1532
  %1534 = shl i64 %1525, 32
  %1535 = add i64 %1534, -4294967296
  %1536 = ashr exact i64 %1535, 32
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1536
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1525
  %1540 = load i32, ptr %1539, align 4, !tbaa !6
  %1541 = add nsw i32 %1540, %1538
  store i32 %1541, ptr %1539, align 4, !tbaa !6
  br label %1560

1542:                                             ; preds = %1515, %1532
  %1543 = phi i32 [ %1527, %1532 ], [ %1516, %1515 ]
  %1544 = phi ptr [ %1526, %1532 ], [ %4, %1515 ]
  %1545 = phi i64 [ %1525, %1532 ], [ 0, %1515 ]
  %1546 = add nsw i32 %1543, 1
  store i32 %1546, ptr %1544, align 4, !tbaa !6
  %1547 = getelementptr inbounds i32, ptr %7, i64 %1545
  %1548 = load i32, ptr %1547, align 4, !tbaa !6
  %1549 = getelementptr inbounds i32, ptr %6, i64 %1545
  br label %1560

1550:                                             ; preds = %1524
  %1551 = icmp eq i32 %1527, %1530
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1550
  store i32 0, ptr %1526, align 4, !tbaa !6
  %1553 = getelementptr inbounds i32, ptr %8, i64 %1525
  %1554 = load i32, ptr %1553, align 4, !tbaa !6
  %1555 = getelementptr inbounds i32, ptr %6, i64 %1525
  store i32 %1554, ptr %1555, align 4, !tbaa !6
  %1556 = add nuw nsw i64 %1525, 1
  %1557 = icmp eq i64 %1556, %1274
  br i1 %1557, label %1565, label %1524, !llvm.loop !1173

1558:                                             ; preds = %1520, %1550
  %1559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1560:                                             ; preds = %1533, %1542
  %1561 = phi ptr [ %1549, %1542 ], [ %1526, %1533 ]
  %1562 = phi i32 [ %1548, %1542 ], [ 1, %1533 ]
  %1563 = load i32, ptr %1561, align 4, !tbaa !6
  %1564 = add nsw i32 %1563, %1562
  store i32 %1564, ptr %1561, align 4, !tbaa !6
  br label %1565

1565:                                             ; preds = %1552, %1560, %1522, %1503
  %1566 = icmp eq i32 %1514, %5
  br i1 %1566, label %5544, label %1426, !llvm.loop !1174

1567:                                             ; preds = %1262
  %1568 = getelementptr inbounds i32, ptr %3, i64 %19
  %1569 = load i32, ptr %1568, align 4, !tbaa !6
  %1570 = icmp eq i32 %1569, 0
  %1571 = icmp sgt i32 %5, 0
  br i1 %1570, label %1581, label %1572

1572:                                             ; preds = %1567
  br i1 %1571, label %1573, label %5544

1573:                                             ; preds = %1572
  %1574 = icmp sgt i32 %13, 1
  %1575 = icmp sgt i32 %13, 0
  %1576 = add i32 %13, -2
  %1577 = zext i32 %1576 to i64
  %1578 = zext i32 %13 to i64
  %1579 = add nuw i32 %5, 1
  %1580 = icmp eq i32 %13, 1
  br label %1724

1581:                                             ; preds = %1567
  br i1 %1571, label %1582, label %5544

1582:                                             ; preds = %1581
  %1583 = icmp sgt i32 %13, 1
  %1584 = icmp sgt i32 %13, 0
  %1585 = add i32 %13, -2
  %1586 = zext i32 %1585 to i64
  %1587 = zext i32 %13 to i64
  %1588 = add nuw i32 %5, 1
  %1589 = icmp eq i32 %13, 1
  br label %1590

1590:                                             ; preds = %1582, %1722
  %1591 = phi i32 [ 0, %1582 ], [ %1674, %1722 ]
  %1592 = phi double [ 0.000000e+00, %1582 ], [ %1673, %1722 ]
  %1593 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1583, label %1594, label %1663

1594:                                             ; preds = %1590, %1653
  %1595 = phi i32 [ %1662, %1653 ], [ 0, %1590 ]
  %1596 = phi i64 [ %1604, %1653 ], [ %1587, %1590 ]
  %1597 = phi i64 [ %1661, %1653 ], [ %1586, %1590 ]
  %1598 = phi i32 [ %1659, %1653 ], [ %1593, %1590 ]
  %1599 = sub i32 %1585, %1595
  %1600 = tail call i32 @llvm.smin.i32(i32 %1599, i32 0)
  %1601 = sub i32 %1599, %1600
  %1602 = zext i32 %1601 to i64
  %1603 = add nuw nsw i64 %1602, 1
  %1604 = add nsw i64 %1596, -1
  %1605 = icmp ult i32 %1601, 31
  br i1 %1605, label %1641, label %1606

1606:                                             ; preds = %1594
  %1607 = and i64 %1603, 8589934560
  %1608 = sub i64 %1597, %1607
  br label %1609

1609:                                             ; preds = %1609, %1606
  %1610 = phi i64 [ 0, %1606 ], [ %1633, %1609 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1629, %1609 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1630, %1609 ]
  %1613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1631, %1609 ]
  %1614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1632, %1609 ]
  %1615 = sub i64 %1597, %1610
  %1616 = getelementptr inbounds i32, ptr %9, i64 %1615
  %1617 = getelementptr inbounds i32, ptr %1616, i64 -7
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !6
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = getelementptr inbounds i32, ptr %1616, i64 -15
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !6
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = getelementptr inbounds i32, ptr %1616, i64 -23
  %1624 = load <8 x i32>, ptr %1623, align 4, !tbaa !6
  %1625 = shufflevector <8 x i32> %1624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1626 = getelementptr inbounds i32, ptr %1616, i64 -31
  %1627 = load <8 x i32>, ptr %1626, align 4, !tbaa !6
  %1628 = shufflevector <8 x i32> %1627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1629 = mul <8 x i32> %1619, %1611
  %1630 = mul <8 x i32> %1622, %1612
  %1631 = mul <8 x i32> %1625, %1613
  %1632 = mul <8 x i32> %1628, %1614
  %1633 = add nuw i64 %1610, 32
  %1634 = icmp eq i64 %1633, %1607
  br i1 %1634, label %1635, label %1609, !llvm.loop !1175

1635:                                             ; preds = %1609
  %1636 = mul <8 x i32> %1630, %1629
  %1637 = mul <8 x i32> %1631, %1636
  %1638 = mul <8 x i32> %1632, %1637
  %1639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1638)
  %1640 = icmp eq i64 %1603, %1607
  br i1 %1640, label %1653, label %1641

1641:                                             ; preds = %1594, %1635
  %1642 = phi i64 [ %1597, %1594 ], [ %1608, %1635 ]
  %1643 = phi i32 [ 1, %1594 ], [ %1639, %1635 ]
  br label %1644

1644:                                             ; preds = %1641, %1644
  %1645 = phi i64 [ %1650, %1644 ], [ %1642, %1641 ]
  %1646 = phi i32 [ %1649, %1644 ], [ %1643, %1641 ]
  %1647 = getelementptr inbounds i32, ptr %9, i64 %1645
  %1648 = load i32, ptr %1647, align 4, !tbaa !6
  %1649 = mul nsw i32 %1648, %1646
  %1650 = add nsw i64 %1645, -1
  %1651 = trunc i64 %1645 to i32
  %1652 = icmp sgt i32 %1651, 0
  br i1 %1652, label %1644, label %1653, !llvm.loop !1176

1653:                                             ; preds = %1644, %1635
  %1654 = phi i32 [ %1639, %1635 ], [ %1649, %1644 ]
  %1655 = and i64 %1604, 4294967295
  %1656 = getelementptr inbounds i32, ptr %6, i64 %1655
  %1657 = load i32, ptr %1656, align 4, !tbaa !6
  %1658 = mul nsw i32 %1657, %1654
  %1659 = add nsw i32 %1658, %1598
  %1660 = icmp sgt i64 %1596, 2
  %1661 = add nsw i64 %1597, -1
  %1662 = add i32 %1595, 1
  br i1 %1660, label %1594, label %1663, !llvm.loop !1177

1663:                                             ; preds = %1653, %1590
  %1664 = phi i32 [ %1593, %1590 ], [ %1659, %1653 ]
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds float, ptr %1253, i64 %1665
  %1667 = load float, ptr %1666, align 4, !tbaa !163
  %1668 = fptosi float %1667 to i8
  %1669 = load i8, ptr %1255, align 1, !tbaa !12
  %1670 = mul i8 %1668, %1668
  %1671 = mul i8 %1670, %1670
  %1672 = add i8 %1671, %1669
  store i8 %1672, ptr %1255, align 1, !tbaa !12
  %1673 = fadd fast double %1592, 1.000000e+00
  %1674 = add nuw nsw i32 %1591, 1
  br i1 %1584, label %1675, label %1722

1675:                                             ; preds = %1663
  %1676 = load i32, ptr %4, align 4, !tbaa !6
  %1677 = load i32, ptr %12, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1676, %1678
  br i1 %1679, label %1699, label %1680

1680:                                             ; preds = %1675
  %1681 = icmp eq i32 %1676, %1678
  br i1 %1681, label %1682, label %1715

1682:                                             ; preds = %1680
  store i32 0, ptr %4, align 4, !tbaa !6
  %1683 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1683, ptr %6, align 4, !tbaa !6
  br i1 %1589, label %1722, label %1684

1684:                                             ; preds = %1682, %1709
  %1685 = phi i64 [ %1713, %1709 ], [ 1, %1682 ]
  %1686 = getelementptr inbounds i32, ptr %4, i64 %1685
  %1687 = load i32, ptr %1686, align 4, !tbaa !6
  %1688 = getelementptr inbounds i32, ptr %12, i64 %1685
  %1689 = load i32, ptr %1688, align 4, !tbaa !6
  %1690 = add nsw i32 %1689, -1
  %1691 = icmp slt i32 %1687, %1690
  br i1 %1691, label %1692, label %1707

1692:                                             ; preds = %1684
  br i1 %1679, label %1699, label %1693

1693:                                             ; preds = %1692
  %1694 = getelementptr inbounds i32, ptr %7, i64 %1685
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1685
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, %1695
  store i32 %1698, ptr %1696, align 4, !tbaa !6
  br label %1717

1699:                                             ; preds = %1675, %1692
  %1700 = phi i32 [ %1687, %1692 ], [ %1676, %1675 ]
  %1701 = phi ptr [ %1686, %1692 ], [ %4, %1675 ]
  %1702 = phi i64 [ %1685, %1692 ], [ 0, %1675 ]
  %1703 = add nsw i32 %1700, 1
  store i32 %1703, ptr %1701, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %7, i64 %1702
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = getelementptr inbounds i32, ptr %6, i64 %1702
  br label %1717

1707:                                             ; preds = %1684
  %1708 = icmp eq i32 %1687, %1690
  br i1 %1708, label %1709, label %1715

1709:                                             ; preds = %1707
  store i32 0, ptr %1686, align 4, !tbaa !6
  %1710 = getelementptr inbounds i32, ptr %8, i64 %1685
  %1711 = load i32, ptr %1710, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %6, i64 %1685
  store i32 %1711, ptr %1712, align 4, !tbaa !6
  %1713 = add nuw nsw i64 %1685, 1
  %1714 = icmp eq i64 %1713, %1587
  br i1 %1714, label %1722, label %1684, !llvm.loop !1178

1715:                                             ; preds = %1680, %1707
  %1716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1717:                                             ; preds = %1693, %1699
  %1718 = phi ptr [ %1706, %1699 ], [ %1686, %1693 ]
  %1719 = phi i32 [ %1705, %1699 ], [ 1, %1693 ]
  %1720 = load i32, ptr %1718, align 4, !tbaa !6
  %1721 = add nsw i32 %1720, %1719
  store i32 %1721, ptr %1718, align 4, !tbaa !6
  br label %1722

1722:                                             ; preds = %1709, %1717, %1682, %1663
  %1723 = icmp eq i32 %1674, %5
  br i1 %1723, label %5544, label %1590, !llvm.loop !1179

1724:                                             ; preds = %1573, %1861
  %1725 = phi i32 [ 0, %1573 ], [ %1810, %1861 ]
  %1726 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1574, label %1727, label %1796

1727:                                             ; preds = %1724, %1786
  %1728 = phi i32 [ %1795, %1786 ], [ 0, %1724 ]
  %1729 = phi i64 [ %1737, %1786 ], [ %1578, %1724 ]
  %1730 = phi i64 [ %1794, %1786 ], [ %1577, %1724 ]
  %1731 = phi i32 [ %1792, %1786 ], [ %1726, %1724 ]
  %1732 = sub i32 %1576, %1728
  %1733 = tail call i32 @llvm.smin.i32(i32 %1732, i32 0)
  %1734 = sub i32 %1732, %1733
  %1735 = zext i32 %1734 to i64
  %1736 = add nuw nsw i64 %1735, 1
  %1737 = add nsw i64 %1729, -1
  %1738 = icmp ult i32 %1734, 31
  br i1 %1738, label %1774, label %1739

1739:                                             ; preds = %1727
  %1740 = and i64 %1736, 8589934560
  %1741 = sub i64 %1730, %1740
  br label %1742

1742:                                             ; preds = %1742, %1739
  %1743 = phi i64 [ 0, %1739 ], [ %1766, %1742 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1762, %1742 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1763, %1742 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1764, %1742 ]
  %1747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1765, %1742 ]
  %1748 = sub i64 %1730, %1743
  %1749 = getelementptr inbounds i32, ptr %11, i64 %1748
  %1750 = getelementptr inbounds i32, ptr %1749, i64 -7
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !6
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = getelementptr inbounds i32, ptr %1749, i64 -15
  %1754 = load <8 x i32>, ptr %1753, align 4, !tbaa !6
  %1755 = shufflevector <8 x i32> %1754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1756 = getelementptr inbounds i32, ptr %1749, i64 -23
  %1757 = load <8 x i32>, ptr %1756, align 4, !tbaa !6
  %1758 = shufflevector <8 x i32> %1757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1759 = getelementptr inbounds i32, ptr %1749, i64 -31
  %1760 = load <8 x i32>, ptr %1759, align 4, !tbaa !6
  %1761 = shufflevector <8 x i32> %1760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1762 = mul <8 x i32> %1752, %1744
  %1763 = mul <8 x i32> %1755, %1745
  %1764 = mul <8 x i32> %1758, %1746
  %1765 = mul <8 x i32> %1761, %1747
  %1766 = add nuw i64 %1743, 32
  %1767 = icmp eq i64 %1766, %1740
  br i1 %1767, label %1768, label %1742, !llvm.loop !1180

1768:                                             ; preds = %1742
  %1769 = mul <8 x i32> %1763, %1762
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = mul <8 x i32> %1765, %1770
  %1772 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1771)
  %1773 = icmp eq i64 %1736, %1740
  br i1 %1773, label %1786, label %1774

1774:                                             ; preds = %1727, %1768
  %1775 = phi i64 [ %1730, %1727 ], [ %1741, %1768 ]
  %1776 = phi i32 [ 1, %1727 ], [ %1772, %1768 ]
  br label %1777

1777:                                             ; preds = %1774, %1777
  %1778 = phi i64 [ %1783, %1777 ], [ %1775, %1774 ]
  %1779 = phi i32 [ %1782, %1777 ], [ %1776, %1774 ]
  %1780 = getelementptr inbounds i32, ptr %11, i64 %1778
  %1781 = load i32, ptr %1780, align 4, !tbaa !6
  %1782 = mul nsw i32 %1781, %1779
  %1783 = add nsw i64 %1778, -1
  %1784 = trunc i64 %1778 to i32
  %1785 = icmp sgt i32 %1784, 0
  br i1 %1785, label %1777, label %1786, !llvm.loop !1181

1786:                                             ; preds = %1777, %1768
  %1787 = phi i32 [ %1772, %1768 ], [ %1782, %1777 ]
  %1788 = and i64 %1737, 4294967295
  %1789 = getelementptr inbounds i32, ptr %6, i64 %1788
  %1790 = load i32, ptr %1789, align 4, !tbaa !6
  %1791 = mul nsw i32 %1790, %1787
  %1792 = add nsw i32 %1791, %1731
  %1793 = icmp sgt i64 %1729, 2
  %1794 = add nsw i64 %1730, -1
  %1795 = add i32 %1728, 1
  br i1 %1793, label %1727, label %1796, !llvm.loop !1182

1796:                                             ; preds = %1786, %1724
  %1797 = phi i32 [ %1726, %1724 ], [ %1792, %1786 ]
  %1798 = icmp slt i32 %1797, %5
  br i1 %1798, label %1801, label %1799

1799:                                             ; preds = %1796
  %1800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

1801:                                             ; preds = %1796
  %1802 = sext i32 %1797 to i64
  %1803 = getelementptr inbounds float, ptr %1253, i64 %1802
  %1804 = load float, ptr %1803, align 4, !tbaa !163
  %1805 = fptosi float %1804 to i8
  %1806 = load i8, ptr %1255, align 1, !tbaa !12
  %1807 = mul i8 %1805, %1805
  %1808 = mul i8 %1807, %1807
  %1809 = add i8 %1808, %1806
  store i8 %1809, ptr %1255, align 1, !tbaa !12
  %1810 = add nuw nsw i32 %1725, 1
  br i1 %1575, label %1811, label %1861

1811:                                             ; preds = %1801
  %1812 = load i32, ptr %4, align 4, !tbaa !6
  %1813 = load i32, ptr %12, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1812, %1814
  br i1 %1815, label %1838, label %1816

1816:                                             ; preds = %1811
  %1817 = icmp eq i32 %1812, %1814
  br i1 %1817, label %1818, label %1854

1818:                                             ; preds = %1816
  store i32 0, ptr %4, align 4, !tbaa !6
  %1819 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1819, ptr %6, align 4, !tbaa !6
  br i1 %1580, label %1861, label %1820

1820:                                             ; preds = %1818, %1848
  %1821 = phi i64 [ %1852, %1848 ], [ 1, %1818 ]
  %1822 = getelementptr inbounds i32, ptr %4, i64 %1821
  %1823 = load i32, ptr %1822, align 4, !tbaa !6
  %1824 = getelementptr inbounds i32, ptr %12, i64 %1821
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = add nsw i32 %1825, -1
  %1827 = icmp slt i32 %1823, %1826
  br i1 %1827, label %1828, label %1846

1828:                                             ; preds = %1820
  br i1 %1815, label %1838, label %1829

1829:                                             ; preds = %1828
  %1830 = shl i64 %1821, 32
  %1831 = add i64 %1830, -4294967296
  %1832 = ashr exact i64 %1831, 32
  %1833 = getelementptr inbounds i32, ptr %7, i64 %1832
  %1834 = load i32, ptr %1833, align 4, !tbaa !6
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1821
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = add nsw i32 %1836, %1834
  store i32 %1837, ptr %1835, align 4, !tbaa !6
  br label %1856

1838:                                             ; preds = %1811, %1828
  %1839 = phi i32 [ %1823, %1828 ], [ %1812, %1811 ]
  %1840 = phi ptr [ %1822, %1828 ], [ %4, %1811 ]
  %1841 = phi i64 [ %1821, %1828 ], [ 0, %1811 ]
  %1842 = add nsw i32 %1839, 1
  store i32 %1842, ptr %1840, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = getelementptr inbounds i32, ptr %6, i64 %1841
  br label %1856

1846:                                             ; preds = %1820
  %1847 = icmp eq i32 %1823, %1826
  br i1 %1847, label %1848, label %1854

1848:                                             ; preds = %1846
  store i32 0, ptr %1822, align 4, !tbaa !6
  %1849 = getelementptr inbounds i32, ptr %8, i64 %1821
  %1850 = load i32, ptr %1849, align 4, !tbaa !6
  %1851 = getelementptr inbounds i32, ptr %6, i64 %1821
  store i32 %1850, ptr %1851, align 4, !tbaa !6
  %1852 = add nuw nsw i64 %1821, 1
  %1853 = icmp eq i64 %1852, %1578
  br i1 %1853, label %1861, label %1820, !llvm.loop !1183

1854:                                             ; preds = %1816, %1846
  %1855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

1856:                                             ; preds = %1829, %1838
  %1857 = phi ptr [ %1845, %1838 ], [ %1822, %1829 ]
  %1858 = phi i32 [ %1844, %1838 ], [ 1, %1829 ]
  %1859 = load i32, ptr %1857, align 4, !tbaa !6
  %1860 = add nsw i32 %1859, %1858
  store i32 %1860, ptr %1857, align 4, !tbaa !6
  br label %1861

1861:                                             ; preds = %1848, %1856, %1818, %1801
  %1862 = icmp eq i32 %1810, %5
  br i1 %1862, label %5544, label %1724, !llvm.loop !1184

1863:                                             ; preds = %1262
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

1865:                                             ; preds = %18
  %1866 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1867 = load ptr, ptr %1866, align 8, !tbaa !10
  %1868 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1869 = load ptr, ptr %1868, align 8, !tbaa !10
  store i16 0, ptr %1869, align 2, !tbaa !79
  %1870 = icmp eq i32 %13, 0
  br i1 %1870, label %1871, label %1876

1871:                                             ; preds = %1865
  %1872 = load float, ptr %1867, align 4, !tbaa !163
  %1873 = fptosi float %1872 to i16
  %1874 = mul i16 %1873, %1873
  %1875 = mul i16 %1874, %1874
  store i16 %1875, ptr %1869, align 2, !tbaa !79
  br label %5544

1876:                                             ; preds = %1865
  switch i32 %1, label %2478 [
    i32 1, label %1877
    i32 0, label %2182
  ]

1877:                                             ; preds = %1876
  %1878 = getelementptr inbounds i32, ptr %3, i64 %19
  %1879 = load i32, ptr %1878, align 4, !tbaa !6
  %1880 = icmp eq i32 %1879, 0
  %1881 = icmp sgt i32 %5, 0
  br i1 %1880, label %1891, label %1882

1882:                                             ; preds = %1877
  br i1 %1881, label %1883, label %5544

1883:                                             ; preds = %1882
  %1884 = icmp sgt i32 %13, 1
  %1885 = icmp sgt i32 %13, 0
  %1886 = add i32 %13, -2
  %1887 = zext i32 %1886 to i64
  %1888 = zext i32 %13 to i64
  %1889 = add nuw i32 %5, 1
  %1890 = icmp eq i32 %13, 1
  br label %2040

1891:                                             ; preds = %1877
  br i1 %1881, label %1892, label %5544

1892:                                             ; preds = %1891
  %1893 = icmp sgt i32 %13, 1
  %1894 = icmp sgt i32 %13, 0
  %1895 = add i32 %13, -2
  %1896 = zext i32 %1895 to i64
  %1897 = zext i32 %13 to i64
  %1898 = add nuw i32 %5, 1
  %1899 = icmp eq i32 %13, 1
  br label %1900

1900:                                             ; preds = %1892, %2038
  %1901 = phi i16 [ 0, %1892 ], [ %1988, %2038 ]
  %1902 = phi i32 [ 0, %1892 ], [ %1990, %2038 ]
  %1903 = phi double [ 0.000000e+00, %1892 ], [ %1989, %2038 ]
  %1904 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1893, label %1905, label %1974

1905:                                             ; preds = %1900, %1964
  %1906 = phi i32 [ %1973, %1964 ], [ 0, %1900 ]
  %1907 = phi i64 [ %1915, %1964 ], [ %1897, %1900 ]
  %1908 = phi i64 [ %1972, %1964 ], [ %1896, %1900 ]
  %1909 = phi i32 [ %1970, %1964 ], [ %1904, %1900 ]
  %1910 = sub i32 %1895, %1906
  %1911 = tail call i32 @llvm.smin.i32(i32 %1910, i32 0)
  %1912 = sub i32 %1910, %1911
  %1913 = zext i32 %1912 to i64
  %1914 = add nuw nsw i64 %1913, 1
  %1915 = add nsw i64 %1907, -1
  %1916 = icmp ult i32 %1912, 31
  br i1 %1916, label %1952, label %1917

1917:                                             ; preds = %1905
  %1918 = and i64 %1914, 8589934560
  %1919 = sub i64 %1908, %1918
  br label %1920

1920:                                             ; preds = %1920, %1917
  %1921 = phi i64 [ 0, %1917 ], [ %1944, %1920 ]
  %1922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1940, %1920 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1941, %1920 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1942, %1920 ]
  %1925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1943, %1920 ]
  %1926 = sub i64 %1908, %1921
  %1927 = getelementptr inbounds i32, ptr %9, i64 %1926
  %1928 = getelementptr inbounds i32, ptr %1927, i64 -7
  %1929 = load <8 x i32>, ptr %1928, align 4, !tbaa !6
  %1930 = shufflevector <8 x i32> %1929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1931 = getelementptr inbounds i32, ptr %1927, i64 -15
  %1932 = load <8 x i32>, ptr %1931, align 4, !tbaa !6
  %1933 = shufflevector <8 x i32> %1932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1934 = getelementptr inbounds i32, ptr %1927, i64 -23
  %1935 = load <8 x i32>, ptr %1934, align 4, !tbaa !6
  %1936 = shufflevector <8 x i32> %1935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1937 = getelementptr inbounds i32, ptr %1927, i64 -31
  %1938 = load <8 x i32>, ptr %1937, align 4, !tbaa !6
  %1939 = shufflevector <8 x i32> %1938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1940 = mul <8 x i32> %1930, %1922
  %1941 = mul <8 x i32> %1933, %1923
  %1942 = mul <8 x i32> %1936, %1924
  %1943 = mul <8 x i32> %1939, %1925
  %1944 = add nuw i64 %1921, 32
  %1945 = icmp eq i64 %1944, %1918
  br i1 %1945, label %1946, label %1920, !llvm.loop !1185

1946:                                             ; preds = %1920
  %1947 = mul <8 x i32> %1941, %1940
  %1948 = mul <8 x i32> %1942, %1947
  %1949 = mul <8 x i32> %1943, %1948
  %1950 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1949)
  %1951 = icmp eq i64 %1914, %1918
  br i1 %1951, label %1964, label %1952

1952:                                             ; preds = %1905, %1946
  %1953 = phi i64 [ %1908, %1905 ], [ %1919, %1946 ]
  %1954 = phi i32 [ 1, %1905 ], [ %1950, %1946 ]
  br label %1955

1955:                                             ; preds = %1952, %1955
  %1956 = phi i64 [ %1961, %1955 ], [ %1953, %1952 ]
  %1957 = phi i32 [ %1960, %1955 ], [ %1954, %1952 ]
  %1958 = getelementptr inbounds i32, ptr %9, i64 %1956
  %1959 = load i32, ptr %1958, align 4, !tbaa !6
  %1960 = mul nsw i32 %1959, %1957
  %1961 = add nsw i64 %1956, -1
  %1962 = trunc i64 %1956 to i32
  %1963 = icmp sgt i32 %1962, 0
  br i1 %1963, label %1955, label %1964, !llvm.loop !1186

1964:                                             ; preds = %1955, %1946
  %1965 = phi i32 [ %1950, %1946 ], [ %1960, %1955 ]
  %1966 = and i64 %1915, 4294967295
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1966
  %1968 = load i32, ptr %1967, align 4, !tbaa !6
  %1969 = mul nsw i32 %1968, %1965
  %1970 = add nsw i32 %1969, %1909
  %1971 = icmp sgt i64 %1907, 2
  %1972 = add nsw i64 %1908, -1
  %1973 = add i32 %1906, 1
  br i1 %1971, label %1905, label %1974, !llvm.loop !1187

1974:                                             ; preds = %1964, %1900
  %1975 = phi i32 [ %1904, %1900 ], [ %1970, %1964 ]
  %1976 = sext i32 %1975 to i64
  %1977 = getelementptr inbounds double, ptr %2, i64 %1976
  %1978 = load double, ptr %1977, align 8, !tbaa !19
  %1979 = getelementptr inbounds float, ptr %1867, i64 %1976
  %1980 = load float, ptr %1979, align 4, !tbaa !163
  %1981 = fptosi float %1980 to i16
  %1982 = sitofp i16 %1901 to double
  %1983 = sitofp i16 %1981 to double
  %1984 = fmul fast double %1978, %1983
  %1985 = fmul fast double %1984, %1984
  %1986 = fmul fast double %1985, %1985
  %1987 = fadd fast double %1986, %1982
  %1988 = fptosi double %1987 to i16
  %1989 = fadd fast double %1978, %1903
  %1990 = add nuw nsw i32 %1902, 1
  br i1 %1894, label %1991, label %2038

1991:                                             ; preds = %1974
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1899, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1897
  br i1 %2030, label %2038, label %2000, !llvm.loop !1188

2031:                                             ; preds = %1996, %2023
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1974
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5538, label %1900, !llvm.loop !1189

2040:                                             ; preds = %1883, %2180
  %2041 = phi i16 [ 0, %1883 ], [ %2128, %2180 ]
  %2042 = phi i32 [ 0, %1883 ], [ %2129, %2180 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1888, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1887, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1886, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !1190

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !1191

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !1192

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds float, ptr %1867, i64 %2119
  %2121 = load float, ptr %2120, align 4, !tbaa !163
  %2122 = fptosi float %2121 to i16
  %2123 = sitofp i16 %2041 to double
  %2124 = sitofp i16 %2122 to double
  %2125 = fmul fast double %2124, %2124
  %2126 = fmul fast double %2125, %2125
  %2127 = fadd fast double %2126, %2123
  %2128 = fptosi double %2127 to i16
  store i16 %2128, ptr %1869, align 2, !tbaa !79
  %2129 = add nuw nsw i32 %2042, 1
  br i1 %1885, label %2130, label %2180

2130:                                             ; preds = %2118
  %2131 = load i32, ptr %4, align 4, !tbaa !6
  %2132 = load i32, ptr %12, align 4, !tbaa !6
  %2133 = add nsw i32 %2132, -1
  %2134 = icmp slt i32 %2131, %2133
  br i1 %2134, label %2157, label %2135

2135:                                             ; preds = %2130
  %2136 = icmp eq i32 %2131, %2133
  br i1 %2136, label %2137, label %2173

2137:                                             ; preds = %2135
  store i32 0, ptr %4, align 4, !tbaa !6
  %2138 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2138, ptr %6, align 4, !tbaa !6
  br i1 %1890, label %2180, label %2139

2139:                                             ; preds = %2137, %2167
  %2140 = phi i64 [ %2171, %2167 ], [ 1, %2137 ]
  %2141 = getelementptr inbounds i32, ptr %4, i64 %2140
  %2142 = load i32, ptr %2141, align 4, !tbaa !6
  %2143 = getelementptr inbounds i32, ptr %12, i64 %2140
  %2144 = load i32, ptr %2143, align 4, !tbaa !6
  %2145 = add nsw i32 %2144, -1
  %2146 = icmp slt i32 %2142, %2145
  br i1 %2146, label %2147, label %2165

2147:                                             ; preds = %2139
  br i1 %2134, label %2157, label %2148

2148:                                             ; preds = %2147
  %2149 = shl i64 %2140, 32
  %2150 = add i64 %2149, -4294967296
  %2151 = ashr exact i64 %2150, 32
  %2152 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %6, i64 %2140
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, %2153
  store i32 %2156, ptr %2154, align 4, !tbaa !6
  br label %2175

2157:                                             ; preds = %2130, %2147
  %2158 = phi i32 [ %2142, %2147 ], [ %2131, %2130 ]
  %2159 = phi ptr [ %2141, %2147 ], [ %4, %2130 ]
  %2160 = phi i64 [ %2140, %2147 ], [ 0, %2130 ]
  %2161 = add nsw i32 %2158, 1
  store i32 %2161, ptr %2159, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %7, i64 %2160
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2160
  br label %2175

2165:                                             ; preds = %2139
  %2166 = icmp eq i32 %2142, %2145
  br i1 %2166, label %2167, label %2173

2167:                                             ; preds = %2165
  store i32 0, ptr %2141, align 4, !tbaa !6
  %2168 = getelementptr inbounds i32, ptr %8, i64 %2140
  %2169 = load i32, ptr %2168, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %6, i64 %2140
  store i32 %2169, ptr %2170, align 4, !tbaa !6
  %2171 = add nuw nsw i64 %2140, 1
  %2172 = icmp eq i64 %2171, %1888
  br i1 %2172, label %2180, label %2139, !llvm.loop !1193

2173:                                             ; preds = %2135, %2165
  %2174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2175:                                             ; preds = %2148, %2157
  %2176 = phi ptr [ %2164, %2157 ], [ %2141, %2148 ]
  %2177 = phi i32 [ %2163, %2157 ], [ 1, %2148 ]
  %2178 = load i32, ptr %2176, align 4, !tbaa !6
  %2179 = add nsw i32 %2178, %2177
  store i32 %2179, ptr %2176, align 4, !tbaa !6
  br label %2180

2180:                                             ; preds = %2167, %2175, %2137, %2118
  %2181 = icmp eq i32 %2129, %5
  br i1 %2181, label %5544, label %2040, !llvm.loop !1194

2182:                                             ; preds = %1876
  %2183 = getelementptr inbounds i32, ptr %3, i64 %19
  %2184 = load i32, ptr %2183, align 4, !tbaa !6
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp sgt i32 %5, 0
  br i1 %2185, label %2196, label %2187

2187:                                             ; preds = %2182
  br i1 %2186, label %2188, label %5544

2188:                                             ; preds = %2187
  %2189 = icmp sgt i32 %13, 1
  %2190 = icmp sgt i32 %13, 0
  %2191 = add i32 %13, -2
  %2192 = zext i32 %2191 to i64
  %2193 = zext i32 %13 to i64
  %2194 = add nuw i32 %5, 1
  %2195 = icmp eq i32 %13, 1
  br label %2339

2196:                                             ; preds = %2182
  br i1 %2186, label %2197, label %5544

2197:                                             ; preds = %2196
  %2198 = icmp sgt i32 %13, 1
  %2199 = icmp sgt i32 %13, 0
  %2200 = add i32 %13, -2
  %2201 = zext i32 %2200 to i64
  %2202 = zext i32 %13 to i64
  %2203 = add nuw i32 %5, 1
  %2204 = icmp eq i32 %13, 1
  br label %2205

2205:                                             ; preds = %2197, %2337
  %2206 = phi i16 [ 0, %2197 ], [ %2287, %2337 ]
  %2207 = phi i32 [ 0, %2197 ], [ %2289, %2337 ]
  %2208 = phi double [ 0.000000e+00, %2197 ], [ %2288, %2337 ]
  %2209 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2198, label %2210, label %2279

2210:                                             ; preds = %2205, %2269
  %2211 = phi i32 [ %2278, %2269 ], [ 0, %2205 ]
  %2212 = phi i64 [ %2220, %2269 ], [ %2202, %2205 ]
  %2213 = phi i64 [ %2277, %2269 ], [ %2201, %2205 ]
  %2214 = phi i32 [ %2275, %2269 ], [ %2209, %2205 ]
  %2215 = sub i32 %2200, %2211
  %2216 = tail call i32 @llvm.smin.i32(i32 %2215, i32 0)
  %2217 = sub i32 %2215, %2216
  %2218 = zext i32 %2217 to i64
  %2219 = add nuw nsw i64 %2218, 1
  %2220 = add nsw i64 %2212, -1
  %2221 = icmp ult i32 %2217, 31
  br i1 %2221, label %2257, label %2222

2222:                                             ; preds = %2210
  %2223 = and i64 %2219, 8589934560
  %2224 = sub i64 %2213, %2223
  br label %2225

2225:                                             ; preds = %2225, %2222
  %2226 = phi i64 [ 0, %2222 ], [ %2249, %2225 ]
  %2227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2245, %2225 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2246, %2225 ]
  %2229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2247, %2225 ]
  %2230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2248, %2225 ]
  %2231 = sub i64 %2213, %2226
  %2232 = getelementptr inbounds i32, ptr %9, i64 %2231
  %2233 = getelementptr inbounds i32, ptr %2232, i64 -7
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !6
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2232, i64 -15
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !6
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = getelementptr inbounds i32, ptr %2232, i64 -23
  %2240 = load <8 x i32>, ptr %2239, align 4, !tbaa !6
  %2241 = shufflevector <8 x i32> %2240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2242 = getelementptr inbounds i32, ptr %2232, i64 -31
  %2243 = load <8 x i32>, ptr %2242, align 4, !tbaa !6
  %2244 = shufflevector <8 x i32> %2243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2245 = mul <8 x i32> %2235, %2227
  %2246 = mul <8 x i32> %2238, %2228
  %2247 = mul <8 x i32> %2241, %2229
  %2248 = mul <8 x i32> %2244, %2230
  %2249 = add nuw i64 %2226, 32
  %2250 = icmp eq i64 %2249, %2223
  br i1 %2250, label %2251, label %2225, !llvm.loop !1195

2251:                                             ; preds = %2225
  %2252 = mul <8 x i32> %2246, %2245
  %2253 = mul <8 x i32> %2247, %2252
  %2254 = mul <8 x i32> %2248, %2253
  %2255 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2254)
  %2256 = icmp eq i64 %2219, %2223
  br i1 %2256, label %2269, label %2257

2257:                                             ; preds = %2210, %2251
  %2258 = phi i64 [ %2213, %2210 ], [ %2224, %2251 ]
  %2259 = phi i32 [ 1, %2210 ], [ %2255, %2251 ]
  br label %2260

2260:                                             ; preds = %2257, %2260
  %2261 = phi i64 [ %2266, %2260 ], [ %2258, %2257 ]
  %2262 = phi i32 [ %2265, %2260 ], [ %2259, %2257 ]
  %2263 = getelementptr inbounds i32, ptr %9, i64 %2261
  %2264 = load i32, ptr %2263, align 4, !tbaa !6
  %2265 = mul nsw i32 %2264, %2262
  %2266 = add nsw i64 %2261, -1
  %2267 = trunc i64 %2261 to i32
  %2268 = icmp sgt i32 %2267, 0
  br i1 %2268, label %2260, label %2269, !llvm.loop !1196

2269:                                             ; preds = %2260, %2251
  %2270 = phi i32 [ %2255, %2251 ], [ %2265, %2260 ]
  %2271 = and i64 %2220, 4294967295
  %2272 = getelementptr inbounds i32, ptr %6, i64 %2271
  %2273 = load i32, ptr %2272, align 4, !tbaa !6
  %2274 = mul nsw i32 %2273, %2270
  %2275 = add nsw i32 %2274, %2214
  %2276 = icmp sgt i64 %2212, 2
  %2277 = add nsw i64 %2213, -1
  %2278 = add i32 %2211, 1
  br i1 %2276, label %2210, label %2279, !llvm.loop !1197

2279:                                             ; preds = %2269, %2205
  %2280 = phi i32 [ %2209, %2205 ], [ %2275, %2269 ]
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds float, ptr %1867, i64 %2281
  %2283 = load float, ptr %2282, align 4, !tbaa !163
  %2284 = fptosi float %2283 to i16
  %2285 = mul i16 %2284, %2284
  %2286 = mul i16 %2285, %2285
  %2287 = add i16 %2286, %2206
  %2288 = fadd fast double %2208, 1.000000e+00
  %2289 = add nuw nsw i32 %2207, 1
  br i1 %2199, label %2290, label %2337

2290:                                             ; preds = %2279
  %2291 = load i32, ptr %4, align 4, !tbaa !6
  %2292 = load i32, ptr %12, align 4, !tbaa !6
  %2293 = add nsw i32 %2292, -1
  %2294 = icmp slt i32 %2291, %2293
  br i1 %2294, label %2314, label %2295

2295:                                             ; preds = %2290
  %2296 = icmp eq i32 %2291, %2293
  br i1 %2296, label %2297, label %2330

2297:                                             ; preds = %2295
  store i32 0, ptr %4, align 4, !tbaa !6
  %2298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2298, ptr %6, align 4, !tbaa !6
  br i1 %2204, label %2337, label %2299

2299:                                             ; preds = %2297, %2324
  %2300 = phi i64 [ %2328, %2324 ], [ 1, %2297 ]
  %2301 = getelementptr inbounds i32, ptr %4, i64 %2300
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %12, i64 %2300
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, -1
  %2306 = icmp slt i32 %2302, %2305
  br i1 %2306, label %2307, label %2322

2307:                                             ; preds = %2299
  br i1 %2294, label %2314, label %2308

2308:                                             ; preds = %2307
  %2309 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2310 = load i32, ptr %2309, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2300
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = add nsw i32 %2312, %2310
  store i32 %2313, ptr %2311, align 4, !tbaa !6
  br label %2332

2314:                                             ; preds = %2290, %2307
  %2315 = phi i32 [ %2302, %2307 ], [ %2291, %2290 ]
  %2316 = phi ptr [ %2301, %2307 ], [ %4, %2290 ]
  %2317 = phi i64 [ %2300, %2307 ], [ 0, %2290 ]
  %2318 = add nsw i32 %2315, 1
  store i32 %2318, ptr %2316, align 4, !tbaa !6
  %2319 = getelementptr inbounds i32, ptr %7, i64 %2317
  %2320 = load i32, ptr %2319, align 4, !tbaa !6
  %2321 = getelementptr inbounds i32, ptr %6, i64 %2317
  br label %2332

2322:                                             ; preds = %2299
  %2323 = icmp eq i32 %2302, %2305
  br i1 %2323, label %2324, label %2330

2324:                                             ; preds = %2322
  store i32 0, ptr %2301, align 4, !tbaa !6
  %2325 = getelementptr inbounds i32, ptr %8, i64 %2300
  %2326 = load i32, ptr %2325, align 4, !tbaa !6
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2300
  store i32 %2326, ptr %2327, align 4, !tbaa !6
  %2328 = add nuw nsw i64 %2300, 1
  %2329 = icmp eq i64 %2328, %2202
  br i1 %2329, label %2337, label %2299, !llvm.loop !1198

2330:                                             ; preds = %2295, %2322
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  %2331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2332:                                             ; preds = %2308, %2314
  %2333 = phi ptr [ %2321, %2314 ], [ %2301, %2308 ]
  %2334 = phi i32 [ %2320, %2314 ], [ 1, %2308 ]
  %2335 = load i32, ptr %2333, align 4, !tbaa !6
  %2336 = add nsw i32 %2335, %2334
  store i32 %2336, ptr %2333, align 4, !tbaa !6
  br label %2337

2337:                                             ; preds = %2324, %2332, %2297, %2279
  %2338 = icmp eq i32 %2289, %5
  br i1 %2338, label %5539, label %2205, !llvm.loop !1199

2339:                                             ; preds = %2188, %2476
  %2340 = phi i16 [ 0, %2188 ], [ %2424, %2476 ]
  %2341 = phi i32 [ 0, %2188 ], [ %2425, %2476 ]
  %2342 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2189, label %2343, label %2412

2343:                                             ; preds = %2339, %2402
  %2344 = phi i32 [ %2411, %2402 ], [ 0, %2339 ]
  %2345 = phi i64 [ %2353, %2402 ], [ %2193, %2339 ]
  %2346 = phi i64 [ %2410, %2402 ], [ %2192, %2339 ]
  %2347 = phi i32 [ %2408, %2402 ], [ %2342, %2339 ]
  %2348 = sub i32 %2191, %2344
  %2349 = tail call i32 @llvm.smin.i32(i32 %2348, i32 0)
  %2350 = sub i32 %2348, %2349
  %2351 = zext i32 %2350 to i64
  %2352 = add nuw nsw i64 %2351, 1
  %2353 = add nsw i64 %2345, -1
  %2354 = icmp ult i32 %2350, 31
  br i1 %2354, label %2390, label %2355

2355:                                             ; preds = %2343
  %2356 = and i64 %2352, 8589934560
  %2357 = sub i64 %2346, %2356
  br label %2358

2358:                                             ; preds = %2358, %2355
  %2359 = phi i64 [ 0, %2355 ], [ %2382, %2358 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2378, %2358 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2379, %2358 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2380, %2358 ]
  %2363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2381, %2358 ]
  %2364 = sub i64 %2346, %2359
  %2365 = getelementptr inbounds i32, ptr %11, i64 %2364
  %2366 = getelementptr inbounds i32, ptr %2365, i64 -7
  %2367 = load <8 x i32>, ptr %2366, align 4, !tbaa !6
  %2368 = shufflevector <8 x i32> %2367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2369 = getelementptr inbounds i32, ptr %2365, i64 -15
  %2370 = load <8 x i32>, ptr %2369, align 4, !tbaa !6
  %2371 = shufflevector <8 x i32> %2370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2372 = getelementptr inbounds i32, ptr %2365, i64 -23
  %2373 = load <8 x i32>, ptr %2372, align 4, !tbaa !6
  %2374 = shufflevector <8 x i32> %2373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2375 = getelementptr inbounds i32, ptr %2365, i64 -31
  %2376 = load <8 x i32>, ptr %2375, align 4, !tbaa !6
  %2377 = shufflevector <8 x i32> %2376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2378 = mul <8 x i32> %2368, %2360
  %2379 = mul <8 x i32> %2371, %2361
  %2380 = mul <8 x i32> %2374, %2362
  %2381 = mul <8 x i32> %2377, %2363
  %2382 = add nuw i64 %2359, 32
  %2383 = icmp eq i64 %2382, %2356
  br i1 %2383, label %2384, label %2358, !llvm.loop !1200

2384:                                             ; preds = %2358
  %2385 = mul <8 x i32> %2379, %2378
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = mul <8 x i32> %2381, %2386
  %2388 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2387)
  %2389 = icmp eq i64 %2352, %2356
  br i1 %2389, label %2402, label %2390

2390:                                             ; preds = %2343, %2384
  %2391 = phi i64 [ %2346, %2343 ], [ %2357, %2384 ]
  %2392 = phi i32 [ 1, %2343 ], [ %2388, %2384 ]
  br label %2393

2393:                                             ; preds = %2390, %2393
  %2394 = phi i64 [ %2399, %2393 ], [ %2391, %2390 ]
  %2395 = phi i32 [ %2398, %2393 ], [ %2392, %2390 ]
  %2396 = getelementptr inbounds i32, ptr %11, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !6
  %2398 = mul nsw i32 %2397, %2395
  %2399 = add nsw i64 %2394, -1
  %2400 = trunc i64 %2394 to i32
  %2401 = icmp sgt i32 %2400, 0
  br i1 %2401, label %2393, label %2402, !llvm.loop !1201

2402:                                             ; preds = %2393, %2384
  %2403 = phi i32 [ %2388, %2384 ], [ %2398, %2393 ]
  %2404 = and i64 %2353, 4294967295
  %2405 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !6
  %2407 = mul nsw i32 %2406, %2403
  %2408 = add nsw i32 %2407, %2347
  %2409 = icmp sgt i64 %2345, 2
  %2410 = add nsw i64 %2346, -1
  %2411 = add i32 %2344, 1
  br i1 %2409, label %2343, label %2412, !llvm.loop !1202

2412:                                             ; preds = %2402, %2339
  %2413 = phi i32 [ %2342, %2339 ], [ %2408, %2402 ]
  %2414 = icmp slt i32 %2413, %5
  br i1 %2414, label %2417, label %2415

2415:                                             ; preds = %2412
  %2416 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

2417:                                             ; preds = %2412
  %2418 = sext i32 %2413 to i64
  %2419 = getelementptr inbounds float, ptr %1867, i64 %2418
  %2420 = load float, ptr %2419, align 4, !tbaa !163
  %2421 = fptosi float %2420 to i16
  %2422 = mul i16 %2421, %2421
  %2423 = mul i16 %2422, %2422
  %2424 = add i16 %2423, %2340
  store i16 %2424, ptr %1869, align 2, !tbaa !79
  %2425 = add nuw nsw i32 %2341, 1
  br i1 %2190, label %2426, label %2476

2426:                                             ; preds = %2417
  %2427 = load i32, ptr %4, align 4, !tbaa !6
  %2428 = load i32, ptr %12, align 4, !tbaa !6
  %2429 = add nsw i32 %2428, -1
  %2430 = icmp slt i32 %2427, %2429
  br i1 %2430, label %2453, label %2431

2431:                                             ; preds = %2426
  %2432 = icmp eq i32 %2427, %2429
  br i1 %2432, label %2433, label %2469

2433:                                             ; preds = %2431
  store i32 0, ptr %4, align 4, !tbaa !6
  %2434 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2434, ptr %6, align 4, !tbaa !6
  br i1 %2195, label %2476, label %2435

2435:                                             ; preds = %2433, %2463
  %2436 = phi i64 [ %2467, %2463 ], [ 1, %2433 ]
  %2437 = getelementptr inbounds i32, ptr %4, i64 %2436
  %2438 = load i32, ptr %2437, align 4, !tbaa !6
  %2439 = getelementptr inbounds i32, ptr %12, i64 %2436
  %2440 = load i32, ptr %2439, align 4, !tbaa !6
  %2441 = add nsw i32 %2440, -1
  %2442 = icmp slt i32 %2438, %2441
  br i1 %2442, label %2443, label %2461

2443:                                             ; preds = %2435
  br i1 %2430, label %2453, label %2444

2444:                                             ; preds = %2443
  %2445 = shl i64 %2436, 32
  %2446 = add i64 %2445, -4294967296
  %2447 = ashr exact i64 %2446, 32
  %2448 = getelementptr inbounds i32, ptr %7, i64 %2447
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2436
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = add nsw i32 %2451, %2449
  store i32 %2452, ptr %2450, align 4, !tbaa !6
  br label %2471

2453:                                             ; preds = %2426, %2443
  %2454 = phi i32 [ %2438, %2443 ], [ %2427, %2426 ]
  %2455 = phi ptr [ %2437, %2443 ], [ %4, %2426 ]
  %2456 = phi i64 [ %2436, %2443 ], [ 0, %2426 ]
  %2457 = add nsw i32 %2454, 1
  store i32 %2457, ptr %2455, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %7, i64 %2456
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = getelementptr inbounds i32, ptr %6, i64 %2456
  br label %2471

2461:                                             ; preds = %2435
  %2462 = icmp eq i32 %2438, %2441
  br i1 %2462, label %2463, label %2469

2463:                                             ; preds = %2461
  store i32 0, ptr %2437, align 4, !tbaa !6
  %2464 = getelementptr inbounds i32, ptr %8, i64 %2436
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2436
  store i32 %2465, ptr %2466, align 4, !tbaa !6
  %2467 = add nuw nsw i64 %2436, 1
  %2468 = icmp eq i64 %2467, %2193
  br i1 %2468, label %2476, label %2435, !llvm.loop !1203

2469:                                             ; preds = %2431, %2461
  %2470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2471:                                             ; preds = %2444, %2453
  %2472 = phi ptr [ %2460, %2453 ], [ %2437, %2444 ]
  %2473 = phi i32 [ %2459, %2453 ], [ 1, %2444 ]
  %2474 = load i32, ptr %2472, align 4, !tbaa !6
  %2475 = add nsw i32 %2474, %2473
  store i32 %2475, ptr %2472, align 4, !tbaa !6
  br label %2476

2476:                                             ; preds = %2463, %2471, %2433, %2417
  %2477 = icmp eq i32 %2425, %5
  br i1 %2477, label %5544, label %2339, !llvm.loop !1204

2478:                                             ; preds = %1876
  %2479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

2480:                                             ; preds = %18
  %2481 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !10
  %2483 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2484 = load ptr, ptr %2483, align 8, !tbaa !10
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2485 = icmp eq i32 %13, 0
  br i1 %2485, label %2486, label %2491

2486:                                             ; preds = %2480
  %2487 = load float, ptr %2482, align 4, !tbaa !163
  %2488 = fptosi float %2487 to i32
  %2489 = mul i32 %2488, %2488
  %2490 = mul i32 %2489, %2489
  store i32 %2490, ptr %2484, align 4, !tbaa !6
  br label %5544

2491:                                             ; preds = %2480
  switch i32 %1, label %3093 [
    i32 1, label %2492
    i32 0, label %2797
  ]

2492:                                             ; preds = %2491
  %2493 = getelementptr inbounds i32, ptr %3, i64 %19
  %2494 = load i32, ptr %2493, align 4, !tbaa !6
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp sgt i32 %5, 0
  br i1 %2495, label %2506, label %2497

2497:                                             ; preds = %2492
  br i1 %2496, label %2498, label %5544

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2655

2506:                                             ; preds = %2492
  br i1 %2496, label %2507, label %5544

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2515

2515:                                             ; preds = %2507, %2653
  %2516 = phi i32 [ 0, %2507 ], [ %2605, %2653 ]
  %2517 = phi double [ 0.000000e+00, %2507 ], [ %2604, %2653 ]
  %2518 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2519, label %2588

2519:                                             ; preds = %2515, %2578
  %2520 = phi i32 [ %2587, %2578 ], [ 0, %2515 ]
  %2521 = phi i64 [ %2529, %2578 ], [ %2512, %2515 ]
  %2522 = phi i64 [ %2586, %2578 ], [ %2511, %2515 ]
  %2523 = phi i32 [ %2584, %2578 ], [ %2518, %2515 ]
  %2524 = sub i32 %2510, %2520
  %2525 = tail call i32 @llvm.smin.i32(i32 %2524, i32 0)
  %2526 = sub i32 %2524, %2525
  %2527 = zext i32 %2526 to i64
  %2528 = add nuw nsw i64 %2527, 1
  %2529 = add nsw i64 %2521, -1
  %2530 = icmp ult i32 %2526, 31
  br i1 %2530, label %2566, label %2531

2531:                                             ; preds = %2519
  %2532 = and i64 %2528, 8589934560
  %2533 = sub i64 %2522, %2532
  br label %2534

2534:                                             ; preds = %2534, %2531
  %2535 = phi i64 [ 0, %2531 ], [ %2558, %2534 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2554, %2534 ]
  %2537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2555, %2534 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2556, %2534 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2557, %2534 ]
  %2540 = sub i64 %2522, %2535
  %2541 = getelementptr inbounds i32, ptr %9, i64 %2540
  %2542 = getelementptr inbounds i32, ptr %2541, i64 -7
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2541, i64 -15
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2541, i64 -23
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = getelementptr inbounds i32, ptr %2541, i64 -31
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = mul <8 x i32> %2544, %2536
  %2555 = mul <8 x i32> %2547, %2537
  %2556 = mul <8 x i32> %2550, %2538
  %2557 = mul <8 x i32> %2553, %2539
  %2558 = add nuw i64 %2535, 32
  %2559 = icmp eq i64 %2558, %2532
  br i1 %2559, label %2560, label %2534, !llvm.loop !1205

2560:                                             ; preds = %2534
  %2561 = mul <8 x i32> %2555, %2554
  %2562 = mul <8 x i32> %2556, %2561
  %2563 = mul <8 x i32> %2557, %2562
  %2564 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2563)
  %2565 = icmp eq i64 %2528, %2532
  br i1 %2565, label %2578, label %2566

2566:                                             ; preds = %2519, %2560
  %2567 = phi i64 [ %2522, %2519 ], [ %2533, %2560 ]
  %2568 = phi i32 [ 1, %2519 ], [ %2564, %2560 ]
  br label %2569

2569:                                             ; preds = %2566, %2569
  %2570 = phi i64 [ %2575, %2569 ], [ %2567, %2566 ]
  %2571 = phi i32 [ %2574, %2569 ], [ %2568, %2566 ]
  %2572 = getelementptr inbounds i32, ptr %9, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2571
  %2575 = add nsw i64 %2570, -1
  %2576 = trunc i64 %2570 to i32
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2569, label %2578, !llvm.loop !1206

2578:                                             ; preds = %2569, %2560
  %2579 = phi i32 [ %2564, %2560 ], [ %2574, %2569 ]
  %2580 = and i64 %2529, 4294967295
  %2581 = getelementptr inbounds i32, ptr %6, i64 %2580
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2579
  %2584 = add nsw i32 %2583, %2523
  %2585 = icmp sgt i64 %2521, 2
  %2586 = add nsw i64 %2522, -1
  %2587 = add i32 %2520, 1
  br i1 %2585, label %2519, label %2588, !llvm.loop !1207

2588:                                             ; preds = %2578, %2515
  %2589 = phi i32 [ %2518, %2515 ], [ %2584, %2578 ]
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds double, ptr %2, i64 %2590
  %2592 = load double, ptr %2591, align 8, !tbaa !19
  %2593 = getelementptr inbounds float, ptr %2482, i64 %2590
  %2594 = load float, ptr %2593, align 4, !tbaa !163
  %2595 = fptosi float %2594 to i32
  %2596 = load i32, ptr %2484, align 4, !tbaa !6
  %2597 = sitofp i32 %2596 to double
  %2598 = sitofp i32 %2595 to double
  %2599 = fmul fast double %2592, %2598
  %2600 = fmul fast double %2599, %2599
  %2601 = fmul fast double %2600, %2600
  %2602 = fadd fast double %2601, %2597
  %2603 = fptosi double %2602 to i32
  store i32 %2603, ptr %2484, align 4, !tbaa !6
  %2604 = fadd fast double %2592, %2517
  %2605 = add nuw nsw i32 %2516, 1
  br i1 %2509, label %2606, label %2653

2606:                                             ; preds = %2588
  %2607 = load i32, ptr %4, align 4, !tbaa !6
  %2608 = load i32, ptr %12, align 4, !tbaa !6
  %2609 = add nsw i32 %2608, -1
  %2610 = icmp slt i32 %2607, %2609
  br i1 %2610, label %2630, label %2611

2611:                                             ; preds = %2606
  %2612 = icmp eq i32 %2607, %2609
  br i1 %2612, label %2613, label %2646

2613:                                             ; preds = %2611
  store i32 0, ptr %4, align 4, !tbaa !6
  %2614 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2614, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2653, label %2615

2615:                                             ; preds = %2613, %2640
  %2616 = phi i64 [ %2644, %2640 ], [ 1, %2613 ]
  %2617 = getelementptr inbounds i32, ptr %4, i64 %2616
  %2618 = load i32, ptr %2617, align 4, !tbaa !6
  %2619 = getelementptr inbounds i32, ptr %12, i64 %2616
  %2620 = load i32, ptr %2619, align 4, !tbaa !6
  %2621 = add nsw i32 %2620, -1
  %2622 = icmp slt i32 %2618, %2621
  br i1 %2622, label %2623, label %2638

2623:                                             ; preds = %2615
  br i1 %2610, label %2630, label %2624

2624:                                             ; preds = %2623
  %2625 = getelementptr inbounds i32, ptr %7, i64 %2616
  %2626 = load i32, ptr %2625, align 4, !tbaa !6
  %2627 = getelementptr inbounds i32, ptr %6, i64 %2616
  %2628 = load i32, ptr %2627, align 4, !tbaa !6
  %2629 = add nsw i32 %2628, %2626
  store i32 %2629, ptr %2627, align 4, !tbaa !6
  br label %2648

2630:                                             ; preds = %2606, %2623
  %2631 = phi i32 [ %2618, %2623 ], [ %2607, %2606 ]
  %2632 = phi ptr [ %2617, %2623 ], [ %4, %2606 ]
  %2633 = phi i64 [ %2616, %2623 ], [ 0, %2606 ]
  %2634 = add nsw i32 %2631, 1
  store i32 %2634, ptr %2632, align 4, !tbaa !6
  %2635 = getelementptr inbounds i32, ptr %7, i64 %2633
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2633
  br label %2648

2638:                                             ; preds = %2615
  %2639 = icmp eq i32 %2618, %2621
  br i1 %2639, label %2640, label %2646

2640:                                             ; preds = %2638
  store i32 0, ptr %2617, align 4, !tbaa !6
  %2641 = getelementptr inbounds i32, ptr %8, i64 %2616
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2616
  store i32 %2642, ptr %2643, align 4, !tbaa !6
  %2644 = add nuw nsw i64 %2616, 1
  %2645 = icmp eq i64 %2644, %2512
  br i1 %2645, label %2653, label %2615, !llvm.loop !1208

2646:                                             ; preds = %2611, %2638
  %2647 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2648:                                             ; preds = %2624, %2630
  %2649 = phi ptr [ %2637, %2630 ], [ %2617, %2624 ]
  %2650 = phi i32 [ %2636, %2630 ], [ 1, %2624 ]
  %2651 = load i32, ptr %2649, align 4, !tbaa !6
  %2652 = add nsw i32 %2651, %2650
  store i32 %2652, ptr %2649, align 4, !tbaa !6
  br label %2653

2653:                                             ; preds = %2640, %2648, %2613, %2588
  %2654 = icmp eq i32 %2605, %5
  br i1 %2654, label %5544, label %2515, !llvm.loop !1209

2655:                                             ; preds = %2498, %2795
  %2656 = phi i32 [ 0, %2498 ], [ %2744, %2795 ]
  %2657 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2658, label %2727

2658:                                             ; preds = %2655, %2717
  %2659 = phi i32 [ %2726, %2717 ], [ 0, %2655 ]
  %2660 = phi i64 [ %2668, %2717 ], [ %2503, %2655 ]
  %2661 = phi i64 [ %2725, %2717 ], [ %2502, %2655 ]
  %2662 = phi i32 [ %2723, %2717 ], [ %2657, %2655 ]
  %2663 = sub i32 %2501, %2659
  %2664 = tail call i32 @llvm.smin.i32(i32 %2663, i32 0)
  %2665 = sub i32 %2663, %2664
  %2666 = zext i32 %2665 to i64
  %2667 = add nuw nsw i64 %2666, 1
  %2668 = add nsw i64 %2660, -1
  %2669 = icmp ult i32 %2665, 31
  br i1 %2669, label %2705, label %2670

2670:                                             ; preds = %2658
  %2671 = and i64 %2667, 8589934560
  %2672 = sub i64 %2661, %2671
  br label %2673

2673:                                             ; preds = %2673, %2670
  %2674 = phi i64 [ 0, %2670 ], [ %2697, %2673 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2693, %2673 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2694, %2673 ]
  %2677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2695, %2673 ]
  %2678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2696, %2673 ]
  %2679 = sub i64 %2661, %2674
  %2680 = getelementptr inbounds i32, ptr %11, i64 %2679
  %2681 = getelementptr inbounds i32, ptr %2680, i64 -7
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !6
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2680, i64 -15
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !6
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = getelementptr inbounds i32, ptr %2680, i64 -23
  %2688 = load <8 x i32>, ptr %2687, align 4, !tbaa !6
  %2689 = shufflevector <8 x i32> %2688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2690 = getelementptr inbounds i32, ptr %2680, i64 -31
  %2691 = load <8 x i32>, ptr %2690, align 4, !tbaa !6
  %2692 = shufflevector <8 x i32> %2691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2693 = mul <8 x i32> %2683, %2675
  %2694 = mul <8 x i32> %2686, %2676
  %2695 = mul <8 x i32> %2689, %2677
  %2696 = mul <8 x i32> %2692, %2678
  %2697 = add nuw i64 %2674, 32
  %2698 = icmp eq i64 %2697, %2671
  br i1 %2698, label %2699, label %2673, !llvm.loop !1210

2699:                                             ; preds = %2673
  %2700 = mul <8 x i32> %2694, %2693
  %2701 = mul <8 x i32> %2695, %2700
  %2702 = mul <8 x i32> %2696, %2701
  %2703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2702)
  %2704 = icmp eq i64 %2667, %2671
  br i1 %2704, label %2717, label %2705

2705:                                             ; preds = %2658, %2699
  %2706 = phi i64 [ %2661, %2658 ], [ %2672, %2699 ]
  %2707 = phi i32 [ 1, %2658 ], [ %2703, %2699 ]
  br label %2708

2708:                                             ; preds = %2705, %2708
  %2709 = phi i64 [ %2714, %2708 ], [ %2706, %2705 ]
  %2710 = phi i32 [ %2713, %2708 ], [ %2707, %2705 ]
  %2711 = getelementptr inbounds i32, ptr %11, i64 %2709
  %2712 = load i32, ptr %2711, align 4, !tbaa !6
  %2713 = mul nsw i32 %2712, %2710
  %2714 = add nsw i64 %2709, -1
  %2715 = trunc i64 %2709 to i32
  %2716 = icmp sgt i32 %2715, 0
  br i1 %2716, label %2708, label %2717, !llvm.loop !1211

2717:                                             ; preds = %2708, %2699
  %2718 = phi i32 [ %2703, %2699 ], [ %2713, %2708 ]
  %2719 = and i64 %2668, 4294967295
  %2720 = getelementptr inbounds i32, ptr %6, i64 %2719
  %2721 = load i32, ptr %2720, align 4, !tbaa !6
  %2722 = mul nsw i32 %2721, %2718
  %2723 = add nsw i32 %2722, %2662
  %2724 = icmp sgt i64 %2660, 2
  %2725 = add nsw i64 %2661, -1
  %2726 = add i32 %2659, 1
  br i1 %2724, label %2658, label %2727, !llvm.loop !1212

2727:                                             ; preds = %2717, %2655
  %2728 = phi i32 [ %2657, %2655 ], [ %2723, %2717 ]
  %2729 = icmp slt i32 %2728, %5
  br i1 %2729, label %2732, label %2730

2730:                                             ; preds = %2727
  %2731 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

2732:                                             ; preds = %2727
  %2733 = sext i32 %2728 to i64
  %2734 = getelementptr inbounds float, ptr %2482, i64 %2733
  %2735 = load float, ptr %2734, align 4, !tbaa !163
  %2736 = fptosi float %2735 to i32
  %2737 = load i32, ptr %2484, align 4, !tbaa !6
  %2738 = sitofp i32 %2737 to double
  %2739 = sitofp i32 %2736 to double
  %2740 = fmul fast double %2739, %2739
  %2741 = fmul fast double %2740, %2740
  %2742 = fadd fast double %2741, %2738
  %2743 = fptosi double %2742 to i32
  store i32 %2743, ptr %2484, align 4, !tbaa !6
  %2744 = add nuw nsw i32 %2656, 1
  br i1 %2500, label %2745, label %2795

2745:                                             ; preds = %2732
  %2746 = load i32, ptr %4, align 4, !tbaa !6
  %2747 = load i32, ptr %12, align 4, !tbaa !6
  %2748 = add nsw i32 %2747, -1
  %2749 = icmp slt i32 %2746, %2748
  br i1 %2749, label %2772, label %2750

2750:                                             ; preds = %2745
  %2751 = icmp eq i32 %2746, %2748
  br i1 %2751, label %2752, label %2788

2752:                                             ; preds = %2750
  store i32 0, ptr %4, align 4, !tbaa !6
  %2753 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2753, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2795, label %2754

2754:                                             ; preds = %2752, %2782
  %2755 = phi i64 [ %2786, %2782 ], [ 1, %2752 ]
  %2756 = getelementptr inbounds i32, ptr %4, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = getelementptr inbounds i32, ptr %12, i64 %2755
  %2759 = load i32, ptr %2758, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2757, %2760
  br i1 %2761, label %2762, label %2780

2762:                                             ; preds = %2754
  br i1 %2749, label %2772, label %2763

2763:                                             ; preds = %2762
  %2764 = shl i64 %2755, 32
  %2765 = add i64 %2764, -4294967296
  %2766 = ashr exact i64 %2765, 32
  %2767 = getelementptr inbounds i32, ptr %7, i64 %2766
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = getelementptr inbounds i32, ptr %6, i64 %2755
  %2770 = load i32, ptr %2769, align 4, !tbaa !6
  %2771 = add nsw i32 %2770, %2768
  store i32 %2771, ptr %2769, align 4, !tbaa !6
  br label %2790

2772:                                             ; preds = %2745, %2762
  %2773 = phi i32 [ %2757, %2762 ], [ %2746, %2745 ]
  %2774 = phi ptr [ %2756, %2762 ], [ %4, %2745 ]
  %2775 = phi i64 [ %2755, %2762 ], [ 0, %2745 ]
  %2776 = add nsw i32 %2773, 1
  store i32 %2776, ptr %2774, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %7, i64 %2775
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2775
  br label %2790

2780:                                             ; preds = %2754
  %2781 = icmp eq i32 %2757, %2760
  br i1 %2781, label %2782, label %2788

2782:                                             ; preds = %2780
  store i32 0, ptr %2756, align 4, !tbaa !6
  %2783 = getelementptr inbounds i32, ptr %8, i64 %2755
  %2784 = load i32, ptr %2783, align 4, !tbaa !6
  %2785 = getelementptr inbounds i32, ptr %6, i64 %2755
  store i32 %2784, ptr %2785, align 4, !tbaa !6
  %2786 = add nuw nsw i64 %2755, 1
  %2787 = icmp eq i64 %2786, %2503
  br i1 %2787, label %2795, label %2754, !llvm.loop !1213

2788:                                             ; preds = %2750, %2780
  %2789 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2790:                                             ; preds = %2763, %2772
  %2791 = phi ptr [ %2779, %2772 ], [ %2756, %2763 ]
  %2792 = phi i32 [ %2778, %2772 ], [ 1, %2763 ]
  %2793 = load i32, ptr %2791, align 4, !tbaa !6
  %2794 = add nsw i32 %2793, %2792
  store i32 %2794, ptr %2791, align 4, !tbaa !6
  br label %2795

2795:                                             ; preds = %2782, %2790, %2752, %2732
  %2796 = icmp eq i32 %2744, %5
  br i1 %2796, label %5544, label %2655, !llvm.loop !1214

2797:                                             ; preds = %2491
  %2798 = getelementptr inbounds i32, ptr %3, i64 %19
  %2799 = load i32, ptr %2798, align 4, !tbaa !6
  %2800 = icmp eq i32 %2799, 0
  %2801 = icmp sgt i32 %5, 0
  br i1 %2800, label %2811, label %2802

2802:                                             ; preds = %2797
  br i1 %2801, label %2803, label %5544

2803:                                             ; preds = %2802
  %2804 = icmp sgt i32 %13, 1
  %2805 = icmp sgt i32 %13, 0
  %2806 = add i32 %13, -2
  %2807 = zext i32 %2806 to i64
  %2808 = zext i32 %13 to i64
  %2809 = add nuw i32 %5, 1
  %2810 = icmp eq i32 %13, 1
  br label %2954

2811:                                             ; preds = %2797
  br i1 %2801, label %2812, label %5544

2812:                                             ; preds = %2811
  %2813 = icmp sgt i32 %13, 1
  %2814 = icmp sgt i32 %13, 0
  %2815 = add i32 %13, -2
  %2816 = zext i32 %2815 to i64
  %2817 = zext i32 %13 to i64
  %2818 = add nuw i32 %5, 1
  %2819 = icmp eq i32 %13, 1
  br label %2820

2820:                                             ; preds = %2812, %2952
  %2821 = phi i32 [ 0, %2812 ], [ %2904, %2952 ]
  %2822 = phi double [ 0.000000e+00, %2812 ], [ %2903, %2952 ]
  %2823 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2813, label %2824, label %2893

2824:                                             ; preds = %2820, %2883
  %2825 = phi i32 [ %2892, %2883 ], [ 0, %2820 ]
  %2826 = phi i64 [ %2834, %2883 ], [ %2817, %2820 ]
  %2827 = phi i64 [ %2891, %2883 ], [ %2816, %2820 ]
  %2828 = phi i32 [ %2889, %2883 ], [ %2823, %2820 ]
  %2829 = sub i32 %2815, %2825
  %2830 = tail call i32 @llvm.smin.i32(i32 %2829, i32 0)
  %2831 = sub i32 %2829, %2830
  %2832 = zext i32 %2831 to i64
  %2833 = add nuw nsw i64 %2832, 1
  %2834 = add nsw i64 %2826, -1
  %2835 = icmp ult i32 %2831, 31
  br i1 %2835, label %2871, label %2836

2836:                                             ; preds = %2824
  %2837 = and i64 %2833, 8589934560
  %2838 = sub i64 %2827, %2837
  br label %2839

2839:                                             ; preds = %2839, %2836
  %2840 = phi i64 [ 0, %2836 ], [ %2863, %2839 ]
  %2841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2859, %2839 ]
  %2842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2860, %2839 ]
  %2843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2861, %2839 ]
  %2844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2862, %2839 ]
  %2845 = sub i64 %2827, %2840
  %2846 = getelementptr inbounds i32, ptr %9, i64 %2845
  %2847 = getelementptr inbounds i32, ptr %2846, i64 -7
  %2848 = load <8 x i32>, ptr %2847, align 4, !tbaa !6
  %2849 = shufflevector <8 x i32> %2848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2850 = getelementptr inbounds i32, ptr %2846, i64 -15
  %2851 = load <8 x i32>, ptr %2850, align 4, !tbaa !6
  %2852 = shufflevector <8 x i32> %2851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2853 = getelementptr inbounds i32, ptr %2846, i64 -23
  %2854 = load <8 x i32>, ptr %2853, align 4, !tbaa !6
  %2855 = shufflevector <8 x i32> %2854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2856 = getelementptr inbounds i32, ptr %2846, i64 -31
  %2857 = load <8 x i32>, ptr %2856, align 4, !tbaa !6
  %2858 = shufflevector <8 x i32> %2857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2859 = mul <8 x i32> %2849, %2841
  %2860 = mul <8 x i32> %2852, %2842
  %2861 = mul <8 x i32> %2855, %2843
  %2862 = mul <8 x i32> %2858, %2844
  %2863 = add nuw i64 %2840, 32
  %2864 = icmp eq i64 %2863, %2837
  br i1 %2864, label %2865, label %2839, !llvm.loop !1215

2865:                                             ; preds = %2839
  %2866 = mul <8 x i32> %2860, %2859
  %2867 = mul <8 x i32> %2861, %2866
  %2868 = mul <8 x i32> %2862, %2867
  %2869 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2868)
  %2870 = icmp eq i64 %2833, %2837
  br i1 %2870, label %2883, label %2871

2871:                                             ; preds = %2824, %2865
  %2872 = phi i64 [ %2827, %2824 ], [ %2838, %2865 ]
  %2873 = phi i32 [ 1, %2824 ], [ %2869, %2865 ]
  br label %2874

2874:                                             ; preds = %2871, %2874
  %2875 = phi i64 [ %2880, %2874 ], [ %2872, %2871 ]
  %2876 = phi i32 [ %2879, %2874 ], [ %2873, %2871 ]
  %2877 = getelementptr inbounds i32, ptr %9, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !6
  %2879 = mul nsw i32 %2878, %2876
  %2880 = add nsw i64 %2875, -1
  %2881 = trunc i64 %2875 to i32
  %2882 = icmp sgt i32 %2881, 0
  br i1 %2882, label %2874, label %2883, !llvm.loop !1216

2883:                                             ; preds = %2874, %2865
  %2884 = phi i32 [ %2869, %2865 ], [ %2879, %2874 ]
  %2885 = and i64 %2834, 4294967295
  %2886 = getelementptr inbounds i32, ptr %6, i64 %2885
  %2887 = load i32, ptr %2886, align 4, !tbaa !6
  %2888 = mul nsw i32 %2887, %2884
  %2889 = add nsw i32 %2888, %2828
  %2890 = icmp sgt i64 %2826, 2
  %2891 = add nsw i64 %2827, -1
  %2892 = add i32 %2825, 1
  br i1 %2890, label %2824, label %2893, !llvm.loop !1217

2893:                                             ; preds = %2883, %2820
  %2894 = phi i32 [ %2823, %2820 ], [ %2889, %2883 ]
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds float, ptr %2482, i64 %2895
  %2897 = load float, ptr %2896, align 4, !tbaa !163
  %2898 = fptosi float %2897 to i32
  %2899 = load i32, ptr %2484, align 4, !tbaa !6
  %2900 = mul i32 %2898, %2898
  %2901 = mul i32 %2900, %2900
  %2902 = add nsw i32 %2901, %2899
  store i32 %2902, ptr %2484, align 4, !tbaa !6
  %2903 = fadd fast double %2822, 1.000000e+00
  %2904 = add nuw nsw i32 %2821, 1
  br i1 %2814, label %2905, label %2952

2905:                                             ; preds = %2893
  %2906 = load i32, ptr %4, align 4, !tbaa !6
  %2907 = load i32, ptr %12, align 4, !tbaa !6
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2906, %2908
  br i1 %2909, label %2929, label %2910

2910:                                             ; preds = %2905
  %2911 = icmp eq i32 %2906, %2908
  br i1 %2911, label %2912, label %2945

2912:                                             ; preds = %2910
  store i32 0, ptr %4, align 4, !tbaa !6
  %2913 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2913, ptr %6, align 4, !tbaa !6
  br i1 %2819, label %2952, label %2914

2914:                                             ; preds = %2912, %2939
  %2915 = phi i64 [ %2943, %2939 ], [ 1, %2912 ]
  %2916 = getelementptr inbounds i32, ptr %4, i64 %2915
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %12, i64 %2915
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, -1
  %2921 = icmp slt i32 %2917, %2920
  br i1 %2921, label %2922, label %2937

2922:                                             ; preds = %2914
  br i1 %2909, label %2929, label %2923

2923:                                             ; preds = %2922
  %2924 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2925 = load i32, ptr %2924, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %6, i64 %2915
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = add nsw i32 %2927, %2925
  store i32 %2928, ptr %2926, align 4, !tbaa !6
  br label %2947

2929:                                             ; preds = %2905, %2922
  %2930 = phi i32 [ %2917, %2922 ], [ %2906, %2905 ]
  %2931 = phi ptr [ %2916, %2922 ], [ %4, %2905 ]
  %2932 = phi i64 [ %2915, %2922 ], [ 0, %2905 ]
  %2933 = add nsw i32 %2930, 1
  store i32 %2933, ptr %2931, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %7, i64 %2932
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2932
  br label %2947

2937:                                             ; preds = %2914
  %2938 = icmp eq i32 %2917, %2920
  br i1 %2938, label %2939, label %2945

2939:                                             ; preds = %2937
  store i32 0, ptr %2916, align 4, !tbaa !6
  %2940 = getelementptr inbounds i32, ptr %8, i64 %2915
  %2941 = load i32, ptr %2940, align 4, !tbaa !6
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2915
  store i32 %2941, ptr %2942, align 4, !tbaa !6
  %2943 = add nuw nsw i64 %2915, 1
  %2944 = icmp eq i64 %2943, %2817
  br i1 %2944, label %2952, label %2914, !llvm.loop !1218

2945:                                             ; preds = %2910, %2937
  %2946 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

2947:                                             ; preds = %2923, %2929
  %2948 = phi ptr [ %2936, %2929 ], [ %2916, %2923 ]
  %2949 = phi i32 [ %2935, %2929 ], [ 1, %2923 ]
  %2950 = load i32, ptr %2948, align 4, !tbaa !6
  %2951 = add nsw i32 %2950, %2949
  store i32 %2951, ptr %2948, align 4, !tbaa !6
  br label %2952

2952:                                             ; preds = %2939, %2947, %2912, %2893
  %2953 = icmp eq i32 %2904, %5
  br i1 %2953, label %5544, label %2820, !llvm.loop !1219

2954:                                             ; preds = %2803, %3091
  %2955 = phi i32 [ 0, %2803 ], [ %3040, %3091 ]
  %2956 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2804, label %2957, label %3026

2957:                                             ; preds = %2954, %3016
  %2958 = phi i32 [ %3025, %3016 ], [ 0, %2954 ]
  %2959 = phi i64 [ %2967, %3016 ], [ %2808, %2954 ]
  %2960 = phi i64 [ %3024, %3016 ], [ %2807, %2954 ]
  %2961 = phi i32 [ %3022, %3016 ], [ %2956, %2954 ]
  %2962 = sub i32 %2806, %2958
  %2963 = tail call i32 @llvm.smin.i32(i32 %2962, i32 0)
  %2964 = sub i32 %2962, %2963
  %2965 = zext i32 %2964 to i64
  %2966 = add nuw nsw i64 %2965, 1
  %2967 = add nsw i64 %2959, -1
  %2968 = icmp ult i32 %2964, 31
  br i1 %2968, label %3004, label %2969

2969:                                             ; preds = %2957
  %2970 = and i64 %2966, 8589934560
  %2971 = sub i64 %2960, %2970
  br label %2972

2972:                                             ; preds = %2972, %2969
  %2973 = phi i64 [ 0, %2969 ], [ %2996, %2972 ]
  %2974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2992, %2972 ]
  %2975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2993, %2972 ]
  %2976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2994, %2972 ]
  %2977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2995, %2972 ]
  %2978 = sub i64 %2960, %2973
  %2979 = getelementptr inbounds i32, ptr %11, i64 %2978
  %2980 = getelementptr inbounds i32, ptr %2979, i64 -7
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !6
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = getelementptr inbounds i32, ptr %2979, i64 -15
  %2984 = load <8 x i32>, ptr %2983, align 4, !tbaa !6
  %2985 = shufflevector <8 x i32> %2984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2986 = getelementptr inbounds i32, ptr %2979, i64 -23
  %2987 = load <8 x i32>, ptr %2986, align 4, !tbaa !6
  %2988 = shufflevector <8 x i32> %2987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2989 = getelementptr inbounds i32, ptr %2979, i64 -31
  %2990 = load <8 x i32>, ptr %2989, align 4, !tbaa !6
  %2991 = shufflevector <8 x i32> %2990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2992 = mul <8 x i32> %2982, %2974
  %2993 = mul <8 x i32> %2985, %2975
  %2994 = mul <8 x i32> %2988, %2976
  %2995 = mul <8 x i32> %2991, %2977
  %2996 = add nuw i64 %2973, 32
  %2997 = icmp eq i64 %2996, %2970
  br i1 %2997, label %2998, label %2972, !llvm.loop !1220

2998:                                             ; preds = %2972
  %2999 = mul <8 x i32> %2993, %2992
  %3000 = mul <8 x i32> %2994, %2999
  %3001 = mul <8 x i32> %2995, %3000
  %3002 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3001)
  %3003 = icmp eq i64 %2966, %2970
  br i1 %3003, label %3016, label %3004

3004:                                             ; preds = %2957, %2998
  %3005 = phi i64 [ %2960, %2957 ], [ %2971, %2998 ]
  %3006 = phi i32 [ 1, %2957 ], [ %3002, %2998 ]
  br label %3007

3007:                                             ; preds = %3004, %3007
  %3008 = phi i64 [ %3013, %3007 ], [ %3005, %3004 ]
  %3009 = phi i32 [ %3012, %3007 ], [ %3006, %3004 ]
  %3010 = getelementptr inbounds i32, ptr %11, i64 %3008
  %3011 = load i32, ptr %3010, align 4, !tbaa !6
  %3012 = mul nsw i32 %3011, %3009
  %3013 = add nsw i64 %3008, -1
  %3014 = trunc i64 %3008 to i32
  %3015 = icmp sgt i32 %3014, 0
  br i1 %3015, label %3007, label %3016, !llvm.loop !1221

3016:                                             ; preds = %3007, %2998
  %3017 = phi i32 [ %3002, %2998 ], [ %3012, %3007 ]
  %3018 = and i64 %2967, 4294967295
  %3019 = getelementptr inbounds i32, ptr %6, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !6
  %3021 = mul nsw i32 %3020, %3017
  %3022 = add nsw i32 %3021, %2961
  %3023 = icmp sgt i64 %2959, 2
  %3024 = add nsw i64 %2960, -1
  %3025 = add i32 %2958, 1
  br i1 %3023, label %2957, label %3026, !llvm.loop !1222

3026:                                             ; preds = %3016, %2954
  %3027 = phi i32 [ %2956, %2954 ], [ %3022, %3016 ]
  %3028 = icmp slt i32 %3027, %5
  br i1 %3028, label %3031, label %3029

3029:                                             ; preds = %3026
  %3030 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

3031:                                             ; preds = %3026
  %3032 = sext i32 %3027 to i64
  %3033 = getelementptr inbounds float, ptr %2482, i64 %3032
  %3034 = load float, ptr %3033, align 4, !tbaa !163
  %3035 = fptosi float %3034 to i32
  %3036 = load i32, ptr %2484, align 4, !tbaa !6
  %3037 = mul i32 %3035, %3035
  %3038 = mul i32 %3037, %3037
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %2484, align 4, !tbaa !6
  %3040 = add nuw nsw i32 %2955, 1
  br i1 %2805, label %3041, label %3091

3041:                                             ; preds = %3031
  %3042 = load i32, ptr %4, align 4, !tbaa !6
  %3043 = load i32, ptr %12, align 4, !tbaa !6
  %3044 = add nsw i32 %3043, -1
  %3045 = icmp slt i32 %3042, %3044
  br i1 %3045, label %3068, label %3046

3046:                                             ; preds = %3041
  %3047 = icmp eq i32 %3042, %3044
  br i1 %3047, label %3048, label %3084

3048:                                             ; preds = %3046
  store i32 0, ptr %4, align 4, !tbaa !6
  %3049 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3049, ptr %6, align 4, !tbaa !6
  br i1 %2810, label %3091, label %3050

3050:                                             ; preds = %3048, %3078
  %3051 = phi i64 [ %3082, %3078 ], [ 1, %3048 ]
  %3052 = getelementptr inbounds i32, ptr %4, i64 %3051
  %3053 = load i32, ptr %3052, align 4, !tbaa !6
  %3054 = getelementptr inbounds i32, ptr %12, i64 %3051
  %3055 = load i32, ptr %3054, align 4, !tbaa !6
  %3056 = add nsw i32 %3055, -1
  %3057 = icmp slt i32 %3053, %3056
  br i1 %3057, label %3058, label %3076

3058:                                             ; preds = %3050
  br i1 %3045, label %3068, label %3059

3059:                                             ; preds = %3058
  %3060 = shl i64 %3051, 32
  %3061 = add i64 %3060, -4294967296
  %3062 = ashr exact i64 %3061, 32
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3062
  %3064 = load i32, ptr %3063, align 4, !tbaa !6
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3051
  %3066 = load i32, ptr %3065, align 4, !tbaa !6
  %3067 = add nsw i32 %3066, %3064
  store i32 %3067, ptr %3065, align 4, !tbaa !6
  br label %3086

3068:                                             ; preds = %3041, %3058
  %3069 = phi i32 [ %3053, %3058 ], [ %3042, %3041 ]
  %3070 = phi ptr [ %3052, %3058 ], [ %4, %3041 ]
  %3071 = phi i64 [ %3051, %3058 ], [ 0, %3041 ]
  %3072 = add nsw i32 %3069, 1
  store i32 %3072, ptr %3070, align 4, !tbaa !6
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3071
  %3074 = load i32, ptr %3073, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3071
  br label %3086

3076:                                             ; preds = %3050
  %3077 = icmp eq i32 %3053, %3056
  br i1 %3077, label %3078, label %3084

3078:                                             ; preds = %3076
  store i32 0, ptr %3052, align 4, !tbaa !6
  %3079 = getelementptr inbounds i32, ptr %8, i64 %3051
  %3080 = load i32, ptr %3079, align 4, !tbaa !6
  %3081 = getelementptr inbounds i32, ptr %6, i64 %3051
  store i32 %3080, ptr %3081, align 4, !tbaa !6
  %3082 = add nuw nsw i64 %3051, 1
  %3083 = icmp eq i64 %3082, %2808
  br i1 %3083, label %3091, label %3050, !llvm.loop !1223

3084:                                             ; preds = %3046, %3076
  %3085 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3086:                                             ; preds = %3059, %3068
  %3087 = phi ptr [ %3075, %3068 ], [ %3052, %3059 ]
  %3088 = phi i32 [ %3074, %3068 ], [ 1, %3059 ]
  %3089 = load i32, ptr %3087, align 4, !tbaa !6
  %3090 = add nsw i32 %3089, %3088
  store i32 %3090, ptr %3087, align 4, !tbaa !6
  br label %3091

3091:                                             ; preds = %3078, %3086, %3048, %3031
  %3092 = icmp eq i32 %3040, %5
  br i1 %3092, label %5544, label %2954, !llvm.loop !1224

3093:                                             ; preds = %2491
  %3094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

3095:                                             ; preds = %18
  %3096 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3097 = load ptr, ptr %3096, align 8, !tbaa !10
  %3098 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3099 = load ptr, ptr %3098, align 8, !tbaa !10
  store i64 0, ptr %3099, align 8, !tbaa !121
  %3100 = icmp eq i32 %13, 0
  br i1 %3100, label %3101, label %3106

3101:                                             ; preds = %3095
  %3102 = load float, ptr %3097, align 4, !tbaa !163
  %3103 = fptosi float %3102 to i64
  %3104 = mul i64 %3103, %3103
  %3105 = mul i64 %3104, %3104
  store i64 %3105, ptr %3099, align 8, !tbaa !121
  br label %5544

3106:                                             ; preds = %3095
  switch i32 %1, label %3708 [
    i32 1, label %3107
    i32 0, label %3412
  ]

3107:                                             ; preds = %3106
  %3108 = getelementptr inbounds i32, ptr %3, i64 %19
  %3109 = load i32, ptr %3108, align 4, !tbaa !6
  %3110 = icmp eq i32 %3109, 0
  %3111 = icmp sgt i32 %5, 0
  br i1 %3110, label %3121, label %3112

3112:                                             ; preds = %3107
  br i1 %3111, label %3113, label %5544

3113:                                             ; preds = %3112
  %3114 = icmp sgt i32 %13, 1
  %3115 = icmp sgt i32 %13, 0
  %3116 = add i32 %13, -2
  %3117 = zext i32 %3116 to i64
  %3118 = zext i32 %13 to i64
  %3119 = add nuw i32 %5, 1
  %3120 = icmp eq i32 %13, 1
  br label %3270

3121:                                             ; preds = %3107
  br i1 %3111, label %3122, label %5544

3122:                                             ; preds = %3121
  %3123 = icmp sgt i32 %13, 1
  %3124 = icmp sgt i32 %13, 0
  %3125 = add i32 %13, -2
  %3126 = zext i32 %3125 to i64
  %3127 = zext i32 %13 to i64
  %3128 = add nuw i32 %5, 1
  %3129 = icmp eq i32 %13, 1
  br label %3130

3130:                                             ; preds = %3122, %3268
  %3131 = phi i64 [ 0, %3122 ], [ %3218, %3268 ]
  %3132 = phi i32 [ 0, %3122 ], [ %3220, %3268 ]
  %3133 = phi double [ 0.000000e+00, %3122 ], [ %3219, %3268 ]
  %3134 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3123, label %3135, label %3204

3135:                                             ; preds = %3130, %3194
  %3136 = phi i32 [ %3203, %3194 ], [ 0, %3130 ]
  %3137 = phi i64 [ %3145, %3194 ], [ %3127, %3130 ]
  %3138 = phi i64 [ %3202, %3194 ], [ %3126, %3130 ]
  %3139 = phi i32 [ %3200, %3194 ], [ %3134, %3130 ]
  %3140 = sub i32 %3125, %3136
  %3141 = tail call i32 @llvm.smin.i32(i32 %3140, i32 0)
  %3142 = sub i32 %3140, %3141
  %3143 = zext i32 %3142 to i64
  %3144 = add nuw nsw i64 %3143, 1
  %3145 = add nsw i64 %3137, -1
  %3146 = icmp ult i32 %3142, 31
  br i1 %3146, label %3182, label %3147

3147:                                             ; preds = %3135
  %3148 = and i64 %3144, 8589934560
  %3149 = sub i64 %3138, %3148
  br label %3150

3150:                                             ; preds = %3150, %3147
  %3151 = phi i64 [ 0, %3147 ], [ %3174, %3150 ]
  %3152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3170, %3150 ]
  %3153 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3171, %3150 ]
  %3154 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3172, %3150 ]
  %3155 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3173, %3150 ]
  %3156 = sub i64 %3138, %3151
  %3157 = getelementptr inbounds i32, ptr %9, i64 %3156
  %3158 = getelementptr inbounds i32, ptr %3157, i64 -7
  %3159 = load <8 x i32>, ptr %3158, align 4, !tbaa !6
  %3160 = shufflevector <8 x i32> %3159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3161 = getelementptr inbounds i32, ptr %3157, i64 -15
  %3162 = load <8 x i32>, ptr %3161, align 4, !tbaa !6
  %3163 = shufflevector <8 x i32> %3162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3164 = getelementptr inbounds i32, ptr %3157, i64 -23
  %3165 = load <8 x i32>, ptr %3164, align 4, !tbaa !6
  %3166 = shufflevector <8 x i32> %3165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3167 = getelementptr inbounds i32, ptr %3157, i64 -31
  %3168 = load <8 x i32>, ptr %3167, align 4, !tbaa !6
  %3169 = shufflevector <8 x i32> %3168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3170 = mul <8 x i32> %3160, %3152
  %3171 = mul <8 x i32> %3163, %3153
  %3172 = mul <8 x i32> %3166, %3154
  %3173 = mul <8 x i32> %3169, %3155
  %3174 = add nuw i64 %3151, 32
  %3175 = icmp eq i64 %3174, %3148
  br i1 %3175, label %3176, label %3150, !llvm.loop !1225

3176:                                             ; preds = %3150
  %3177 = mul <8 x i32> %3171, %3170
  %3178 = mul <8 x i32> %3172, %3177
  %3179 = mul <8 x i32> %3173, %3178
  %3180 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3179)
  %3181 = icmp eq i64 %3144, %3148
  br i1 %3181, label %3194, label %3182

3182:                                             ; preds = %3135, %3176
  %3183 = phi i64 [ %3138, %3135 ], [ %3149, %3176 ]
  %3184 = phi i32 [ 1, %3135 ], [ %3180, %3176 ]
  br label %3185

3185:                                             ; preds = %3182, %3185
  %3186 = phi i64 [ %3191, %3185 ], [ %3183, %3182 ]
  %3187 = phi i32 [ %3190, %3185 ], [ %3184, %3182 ]
  %3188 = getelementptr inbounds i32, ptr %9, i64 %3186
  %3189 = load i32, ptr %3188, align 4, !tbaa !6
  %3190 = mul nsw i32 %3189, %3187
  %3191 = add nsw i64 %3186, -1
  %3192 = trunc i64 %3186 to i32
  %3193 = icmp sgt i32 %3192, 0
  br i1 %3193, label %3185, label %3194, !llvm.loop !1226

3194:                                             ; preds = %3185, %3176
  %3195 = phi i32 [ %3180, %3176 ], [ %3190, %3185 ]
  %3196 = and i64 %3145, 4294967295
  %3197 = getelementptr inbounds i32, ptr %6, i64 %3196
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = mul nsw i32 %3198, %3195
  %3200 = add nsw i32 %3199, %3139
  %3201 = icmp sgt i64 %3137, 2
  %3202 = add nsw i64 %3138, -1
  %3203 = add i32 %3136, 1
  br i1 %3201, label %3135, label %3204, !llvm.loop !1227

3204:                                             ; preds = %3194, %3130
  %3205 = phi i32 [ %3134, %3130 ], [ %3200, %3194 ]
  %3206 = sext i32 %3205 to i64
  %3207 = getelementptr inbounds double, ptr %2, i64 %3206
  %3208 = load double, ptr %3207, align 8, !tbaa !19
  %3209 = getelementptr inbounds float, ptr %3097, i64 %3206
  %3210 = load float, ptr %3209, align 4, !tbaa !163
  %3211 = fptosi float %3210 to i64
  %3212 = sitofp i64 %3131 to double
  %3213 = sitofp i64 %3211 to double
  %3214 = fmul fast double %3208, %3213
  %3215 = fmul fast double %3214, %3214
  %3216 = fmul fast double %3215, %3215
  %3217 = fadd fast double %3216, %3212
  %3218 = fptosi double %3217 to i64
  %3219 = fadd fast double %3208, %3133
  %3220 = add nuw nsw i32 %3132, 1
  br i1 %3124, label %3221, label %3268

3221:                                             ; preds = %3204
  %3222 = load i32, ptr %4, align 4, !tbaa !6
  %3223 = load i32, ptr %12, align 4, !tbaa !6
  %3224 = add nsw i32 %3223, -1
  %3225 = icmp slt i32 %3222, %3224
  br i1 %3225, label %3245, label %3226

3226:                                             ; preds = %3221
  %3227 = icmp eq i32 %3222, %3224
  br i1 %3227, label %3228, label %3261

3228:                                             ; preds = %3226
  store i32 0, ptr %4, align 4, !tbaa !6
  %3229 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3229, ptr %6, align 4, !tbaa !6
  br i1 %3129, label %3268, label %3230

3230:                                             ; preds = %3228, %3255
  %3231 = phi i64 [ %3259, %3255 ], [ 1, %3228 ]
  %3232 = getelementptr inbounds i32, ptr %4, i64 %3231
  %3233 = load i32, ptr %3232, align 4, !tbaa !6
  %3234 = getelementptr inbounds i32, ptr %12, i64 %3231
  %3235 = load i32, ptr %3234, align 4, !tbaa !6
  %3236 = add nsw i32 %3235, -1
  %3237 = icmp slt i32 %3233, %3236
  br i1 %3237, label %3238, label %3253

3238:                                             ; preds = %3230
  br i1 %3225, label %3245, label %3239

3239:                                             ; preds = %3238
  %3240 = getelementptr inbounds i32, ptr %7, i64 %3231
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3231
  %3243 = load i32, ptr %3242, align 4, !tbaa !6
  %3244 = add nsw i32 %3243, %3241
  store i32 %3244, ptr %3242, align 4, !tbaa !6
  br label %3263

3245:                                             ; preds = %3221, %3238
  %3246 = phi i32 [ %3233, %3238 ], [ %3222, %3221 ]
  %3247 = phi ptr [ %3232, %3238 ], [ %4, %3221 ]
  %3248 = phi i64 [ %3231, %3238 ], [ 0, %3221 ]
  %3249 = add nsw i32 %3246, 1
  store i32 %3249, ptr %3247, align 4, !tbaa !6
  %3250 = getelementptr inbounds i32, ptr %7, i64 %3248
  %3251 = load i32, ptr %3250, align 4, !tbaa !6
  %3252 = getelementptr inbounds i32, ptr %6, i64 %3248
  br label %3263

3253:                                             ; preds = %3230
  %3254 = icmp eq i32 %3233, %3236
  br i1 %3254, label %3255, label %3261

3255:                                             ; preds = %3253
  store i32 0, ptr %3232, align 4, !tbaa !6
  %3256 = getelementptr inbounds i32, ptr %8, i64 %3231
  %3257 = load i32, ptr %3256, align 4, !tbaa !6
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3231
  store i32 %3257, ptr %3258, align 4, !tbaa !6
  %3259 = add nuw nsw i64 %3231, 1
  %3260 = icmp eq i64 %3259, %3127
  br i1 %3260, label %3268, label %3230, !llvm.loop !1228

3261:                                             ; preds = %3226, %3253
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3263:                                             ; preds = %3239, %3245
  %3264 = phi ptr [ %3252, %3245 ], [ %3232, %3239 ]
  %3265 = phi i32 [ %3251, %3245 ], [ 1, %3239 ]
  %3266 = load i32, ptr %3264, align 4, !tbaa !6
  %3267 = add nsw i32 %3266, %3265
  store i32 %3267, ptr %3264, align 4, !tbaa !6
  br label %3268

3268:                                             ; preds = %3255, %3263, %3228, %3204
  %3269 = icmp eq i32 %3220, %5
  br i1 %3269, label %5540, label %3130, !llvm.loop !1229

3270:                                             ; preds = %3113, %3410
  %3271 = phi i64 [ 0, %3113 ], [ %3358, %3410 ]
  %3272 = phi i32 [ 0, %3113 ], [ %3359, %3410 ]
  %3273 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3114, label %3274, label %3343

3274:                                             ; preds = %3270, %3333
  %3275 = phi i32 [ %3342, %3333 ], [ 0, %3270 ]
  %3276 = phi i64 [ %3284, %3333 ], [ %3118, %3270 ]
  %3277 = phi i64 [ %3341, %3333 ], [ %3117, %3270 ]
  %3278 = phi i32 [ %3339, %3333 ], [ %3273, %3270 ]
  %3279 = sub i32 %3116, %3275
  %3280 = tail call i32 @llvm.smin.i32(i32 %3279, i32 0)
  %3281 = sub i32 %3279, %3280
  %3282 = zext i32 %3281 to i64
  %3283 = add nuw nsw i64 %3282, 1
  %3284 = add nsw i64 %3276, -1
  %3285 = icmp ult i32 %3281, 31
  br i1 %3285, label %3321, label %3286

3286:                                             ; preds = %3274
  %3287 = and i64 %3283, 8589934560
  %3288 = sub i64 %3277, %3287
  br label %3289

3289:                                             ; preds = %3289, %3286
  %3290 = phi i64 [ 0, %3286 ], [ %3313, %3289 ]
  %3291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3309, %3289 ]
  %3292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3310, %3289 ]
  %3293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3311, %3289 ]
  %3294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3312, %3289 ]
  %3295 = sub i64 %3277, %3290
  %3296 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3297 = getelementptr inbounds i32, ptr %3296, i64 -7
  %3298 = load <8 x i32>, ptr %3297, align 4, !tbaa !6
  %3299 = shufflevector <8 x i32> %3298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3300 = getelementptr inbounds i32, ptr %3296, i64 -15
  %3301 = load <8 x i32>, ptr %3300, align 4, !tbaa !6
  %3302 = shufflevector <8 x i32> %3301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3303 = getelementptr inbounds i32, ptr %3296, i64 -23
  %3304 = load <8 x i32>, ptr %3303, align 4, !tbaa !6
  %3305 = shufflevector <8 x i32> %3304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3306 = getelementptr inbounds i32, ptr %3296, i64 -31
  %3307 = load <8 x i32>, ptr %3306, align 4, !tbaa !6
  %3308 = shufflevector <8 x i32> %3307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3309 = mul <8 x i32> %3299, %3291
  %3310 = mul <8 x i32> %3302, %3292
  %3311 = mul <8 x i32> %3305, %3293
  %3312 = mul <8 x i32> %3308, %3294
  %3313 = add nuw i64 %3290, 32
  %3314 = icmp eq i64 %3313, %3287
  br i1 %3314, label %3315, label %3289, !llvm.loop !1230

3315:                                             ; preds = %3289
  %3316 = mul <8 x i32> %3310, %3309
  %3317 = mul <8 x i32> %3311, %3316
  %3318 = mul <8 x i32> %3312, %3317
  %3319 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3318)
  %3320 = icmp eq i64 %3283, %3287
  br i1 %3320, label %3333, label %3321

3321:                                             ; preds = %3274, %3315
  %3322 = phi i64 [ %3277, %3274 ], [ %3288, %3315 ]
  %3323 = phi i32 [ 1, %3274 ], [ %3319, %3315 ]
  br label %3324

3324:                                             ; preds = %3321, %3324
  %3325 = phi i64 [ %3330, %3324 ], [ %3322, %3321 ]
  %3326 = phi i32 [ %3329, %3324 ], [ %3323, %3321 ]
  %3327 = getelementptr inbounds i32, ptr %11, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = mul nsw i32 %3328, %3326
  %3330 = add nsw i64 %3325, -1
  %3331 = trunc i64 %3325 to i32
  %3332 = icmp sgt i32 %3331, 0
  br i1 %3332, label %3324, label %3333, !llvm.loop !1231

3333:                                             ; preds = %3324, %3315
  %3334 = phi i32 [ %3319, %3315 ], [ %3329, %3324 ]
  %3335 = and i64 %3284, 4294967295
  %3336 = getelementptr inbounds i32, ptr %6, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = mul nsw i32 %3337, %3334
  %3339 = add nsw i32 %3338, %3278
  %3340 = icmp sgt i64 %3276, 2
  %3341 = add nsw i64 %3277, -1
  %3342 = add i32 %3275, 1
  br i1 %3340, label %3274, label %3343, !llvm.loop !1232

3343:                                             ; preds = %3333, %3270
  %3344 = phi i32 [ %3273, %3270 ], [ %3339, %3333 ]
  %3345 = icmp slt i32 %3344, %5
  br i1 %3345, label %3348, label %3346

3346:                                             ; preds = %3343
  %3347 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

3348:                                             ; preds = %3343
  %3349 = sext i32 %3344 to i64
  %3350 = getelementptr inbounds float, ptr %3097, i64 %3349
  %3351 = load float, ptr %3350, align 4, !tbaa !163
  %3352 = fptosi float %3351 to i64
  %3353 = sitofp i64 %3271 to double
  %3354 = sitofp i64 %3352 to double
  %3355 = fmul fast double %3354, %3354
  %3356 = fmul fast double %3355, %3355
  %3357 = fadd fast double %3356, %3353
  %3358 = fptosi double %3357 to i64
  store i64 %3358, ptr %3099, align 8, !tbaa !121
  %3359 = add nuw nsw i32 %3272, 1
  br i1 %3115, label %3360, label %3410

3360:                                             ; preds = %3348
  %3361 = load i32, ptr %4, align 4, !tbaa !6
  %3362 = load i32, ptr %12, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, -1
  %3364 = icmp slt i32 %3361, %3363
  br i1 %3364, label %3387, label %3365

3365:                                             ; preds = %3360
  %3366 = icmp eq i32 %3361, %3363
  br i1 %3366, label %3367, label %3403

3367:                                             ; preds = %3365
  store i32 0, ptr %4, align 4, !tbaa !6
  %3368 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3368, ptr %6, align 4, !tbaa !6
  br i1 %3120, label %3410, label %3369

3369:                                             ; preds = %3367, %3397
  %3370 = phi i64 [ %3401, %3397 ], [ 1, %3367 ]
  %3371 = getelementptr inbounds i32, ptr %4, i64 %3370
  %3372 = load i32, ptr %3371, align 4, !tbaa !6
  %3373 = getelementptr inbounds i32, ptr %12, i64 %3370
  %3374 = load i32, ptr %3373, align 4, !tbaa !6
  %3375 = add nsw i32 %3374, -1
  %3376 = icmp slt i32 %3372, %3375
  br i1 %3376, label %3377, label %3395

3377:                                             ; preds = %3369
  br i1 %3364, label %3387, label %3378

3378:                                             ; preds = %3377
  %3379 = shl i64 %3370, 32
  %3380 = add i64 %3379, -4294967296
  %3381 = ashr exact i64 %3380, 32
  %3382 = getelementptr inbounds i32, ptr %7, i64 %3381
  %3383 = load i32, ptr %3382, align 4, !tbaa !6
  %3384 = getelementptr inbounds i32, ptr %6, i64 %3370
  %3385 = load i32, ptr %3384, align 4, !tbaa !6
  %3386 = add nsw i32 %3385, %3383
  store i32 %3386, ptr %3384, align 4, !tbaa !6
  br label %3405

3387:                                             ; preds = %3360, %3377
  %3388 = phi i32 [ %3372, %3377 ], [ %3361, %3360 ]
  %3389 = phi ptr [ %3371, %3377 ], [ %4, %3360 ]
  %3390 = phi i64 [ %3370, %3377 ], [ 0, %3360 ]
  %3391 = add nsw i32 %3388, 1
  store i32 %3391, ptr %3389, align 4, !tbaa !6
  %3392 = getelementptr inbounds i32, ptr %7, i64 %3390
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3390
  br label %3405

3395:                                             ; preds = %3369
  %3396 = icmp eq i32 %3372, %3375
  br i1 %3396, label %3397, label %3403

3397:                                             ; preds = %3395
  store i32 0, ptr %3371, align 4, !tbaa !6
  %3398 = getelementptr inbounds i32, ptr %8, i64 %3370
  %3399 = load i32, ptr %3398, align 4, !tbaa !6
  %3400 = getelementptr inbounds i32, ptr %6, i64 %3370
  store i32 %3399, ptr %3400, align 4, !tbaa !6
  %3401 = add nuw nsw i64 %3370, 1
  %3402 = icmp eq i64 %3401, %3118
  br i1 %3402, label %3410, label %3369, !llvm.loop !1233

3403:                                             ; preds = %3365, %3395
  %3404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3405:                                             ; preds = %3378, %3387
  %3406 = phi ptr [ %3394, %3387 ], [ %3371, %3378 ]
  %3407 = phi i32 [ %3393, %3387 ], [ 1, %3378 ]
  %3408 = load i32, ptr %3406, align 4, !tbaa !6
  %3409 = add nsw i32 %3408, %3407
  store i32 %3409, ptr %3406, align 4, !tbaa !6
  br label %3410

3410:                                             ; preds = %3397, %3405, %3367, %3348
  %3411 = icmp eq i32 %3359, %5
  br i1 %3411, label %5544, label %3270, !llvm.loop !1234

3412:                                             ; preds = %3106
  %3413 = getelementptr inbounds i32, ptr %3, i64 %19
  %3414 = load i32, ptr %3413, align 4, !tbaa !6
  %3415 = icmp eq i32 %3414, 0
  %3416 = icmp sgt i32 %5, 0
  br i1 %3415, label %3426, label %3417

3417:                                             ; preds = %3412
  br i1 %3416, label %3418, label %5544

3418:                                             ; preds = %3417
  %3419 = icmp sgt i32 %13, 1
  %3420 = icmp sgt i32 %13, 0
  %3421 = add i32 %13, -2
  %3422 = zext i32 %3421 to i64
  %3423 = zext i32 %13 to i64
  %3424 = add nuw i32 %5, 1
  %3425 = icmp eq i32 %13, 1
  br label %3569

3426:                                             ; preds = %3412
  br i1 %3416, label %3427, label %5544

3427:                                             ; preds = %3426
  %3428 = icmp sgt i32 %13, 1
  %3429 = icmp sgt i32 %13, 0
  %3430 = add i32 %13, -2
  %3431 = zext i32 %3430 to i64
  %3432 = zext i32 %13 to i64
  %3433 = add nuw i32 %5, 1
  %3434 = icmp eq i32 %13, 1
  br label %3435

3435:                                             ; preds = %3427, %3567
  %3436 = phi i64 [ 0, %3427 ], [ %3517, %3567 ]
  %3437 = phi i32 [ 0, %3427 ], [ %3519, %3567 ]
  %3438 = phi double [ 0.000000e+00, %3427 ], [ %3518, %3567 ]
  %3439 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3440, label %3509

3440:                                             ; preds = %3435, %3499
  %3441 = phi i32 [ %3508, %3499 ], [ 0, %3435 ]
  %3442 = phi i64 [ %3450, %3499 ], [ %3432, %3435 ]
  %3443 = phi i64 [ %3507, %3499 ], [ %3431, %3435 ]
  %3444 = phi i32 [ %3505, %3499 ], [ %3439, %3435 ]
  %3445 = sub i32 %3430, %3441
  %3446 = tail call i32 @llvm.smin.i32(i32 %3445, i32 0)
  %3447 = sub i32 %3445, %3446
  %3448 = zext i32 %3447 to i64
  %3449 = add nuw nsw i64 %3448, 1
  %3450 = add nsw i64 %3442, -1
  %3451 = icmp ult i32 %3447, 31
  br i1 %3451, label %3487, label %3452

3452:                                             ; preds = %3440
  %3453 = and i64 %3449, 8589934560
  %3454 = sub i64 %3443, %3453
  br label %3455

3455:                                             ; preds = %3455, %3452
  %3456 = phi i64 [ 0, %3452 ], [ %3479, %3455 ]
  %3457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3475, %3455 ]
  %3458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3476, %3455 ]
  %3459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3477, %3455 ]
  %3460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3478, %3455 ]
  %3461 = sub i64 %3443, %3456
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3463 = getelementptr inbounds i32, ptr %3462, i64 -7
  %3464 = load <8 x i32>, ptr %3463, align 4, !tbaa !6
  %3465 = shufflevector <8 x i32> %3464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3466 = getelementptr inbounds i32, ptr %3462, i64 -15
  %3467 = load <8 x i32>, ptr %3466, align 4, !tbaa !6
  %3468 = shufflevector <8 x i32> %3467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3469 = getelementptr inbounds i32, ptr %3462, i64 -23
  %3470 = load <8 x i32>, ptr %3469, align 4, !tbaa !6
  %3471 = shufflevector <8 x i32> %3470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3472 = getelementptr inbounds i32, ptr %3462, i64 -31
  %3473 = load <8 x i32>, ptr %3472, align 4, !tbaa !6
  %3474 = shufflevector <8 x i32> %3473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3475 = mul <8 x i32> %3465, %3457
  %3476 = mul <8 x i32> %3468, %3458
  %3477 = mul <8 x i32> %3471, %3459
  %3478 = mul <8 x i32> %3474, %3460
  %3479 = add nuw i64 %3456, 32
  %3480 = icmp eq i64 %3479, %3453
  br i1 %3480, label %3481, label %3455, !llvm.loop !1235

3481:                                             ; preds = %3455
  %3482 = mul <8 x i32> %3476, %3475
  %3483 = mul <8 x i32> %3477, %3482
  %3484 = mul <8 x i32> %3478, %3483
  %3485 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3484)
  %3486 = icmp eq i64 %3449, %3453
  br i1 %3486, label %3499, label %3487

3487:                                             ; preds = %3440, %3481
  %3488 = phi i64 [ %3443, %3440 ], [ %3454, %3481 ]
  %3489 = phi i32 [ 1, %3440 ], [ %3485, %3481 ]
  br label %3490

3490:                                             ; preds = %3487, %3490
  %3491 = phi i64 [ %3496, %3490 ], [ %3488, %3487 ]
  %3492 = phi i32 [ %3495, %3490 ], [ %3489, %3487 ]
  %3493 = getelementptr inbounds i32, ptr %9, i64 %3491
  %3494 = load i32, ptr %3493, align 4, !tbaa !6
  %3495 = mul nsw i32 %3494, %3492
  %3496 = add nsw i64 %3491, -1
  %3497 = trunc i64 %3491 to i32
  %3498 = icmp sgt i32 %3497, 0
  br i1 %3498, label %3490, label %3499, !llvm.loop !1236

3499:                                             ; preds = %3490, %3481
  %3500 = phi i32 [ %3485, %3481 ], [ %3495, %3490 ]
  %3501 = and i64 %3450, 4294967295
  %3502 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = mul nsw i32 %3503, %3500
  %3505 = add nsw i32 %3504, %3444
  %3506 = icmp sgt i64 %3442, 2
  %3507 = add nsw i64 %3443, -1
  %3508 = add i32 %3441, 1
  br i1 %3506, label %3440, label %3509, !llvm.loop !1237

3509:                                             ; preds = %3499, %3435
  %3510 = phi i32 [ %3439, %3435 ], [ %3505, %3499 ]
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds float, ptr %3097, i64 %3511
  %3513 = load float, ptr %3512, align 4, !tbaa !163
  %3514 = fptosi float %3513 to i64
  %3515 = mul i64 %3514, %3514
  %3516 = mul i64 %3515, %3515
  %3517 = add nsw i64 %3516, %3436
  %3518 = fadd fast double %3438, 1.000000e+00
  %3519 = add nuw nsw i32 %3437, 1
  br i1 %3429, label %3520, label %3567

3520:                                             ; preds = %3509
  %3521 = load i32, ptr %4, align 4, !tbaa !6
  %3522 = load i32, ptr %12, align 4, !tbaa !6
  %3523 = add nsw i32 %3522, -1
  %3524 = icmp slt i32 %3521, %3523
  br i1 %3524, label %3544, label %3525

3525:                                             ; preds = %3520
  %3526 = icmp eq i32 %3521, %3523
  br i1 %3526, label %3527, label %3560

3527:                                             ; preds = %3525
  store i32 0, ptr %4, align 4, !tbaa !6
  %3528 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3528, ptr %6, align 4, !tbaa !6
  br i1 %3434, label %3567, label %3529

3529:                                             ; preds = %3527, %3554
  %3530 = phi i64 [ %3558, %3554 ], [ 1, %3527 ]
  %3531 = getelementptr inbounds i32, ptr %4, i64 %3530
  %3532 = load i32, ptr %3531, align 4, !tbaa !6
  %3533 = getelementptr inbounds i32, ptr %12, i64 %3530
  %3534 = load i32, ptr %3533, align 4, !tbaa !6
  %3535 = add nsw i32 %3534, -1
  %3536 = icmp slt i32 %3532, %3535
  br i1 %3536, label %3537, label %3552

3537:                                             ; preds = %3529
  br i1 %3524, label %3544, label %3538

3538:                                             ; preds = %3537
  %3539 = getelementptr inbounds i32, ptr %7, i64 %3530
  %3540 = load i32, ptr %3539, align 4, !tbaa !6
  %3541 = getelementptr inbounds i32, ptr %6, i64 %3530
  %3542 = load i32, ptr %3541, align 4, !tbaa !6
  %3543 = add nsw i32 %3542, %3540
  store i32 %3543, ptr %3541, align 4, !tbaa !6
  br label %3562

3544:                                             ; preds = %3520, %3537
  %3545 = phi i32 [ %3532, %3537 ], [ %3521, %3520 ]
  %3546 = phi ptr [ %3531, %3537 ], [ %4, %3520 ]
  %3547 = phi i64 [ %3530, %3537 ], [ 0, %3520 ]
  %3548 = add nsw i32 %3545, 1
  store i32 %3548, ptr %3546, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3547
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3547
  br label %3562

3552:                                             ; preds = %3529
  %3553 = icmp eq i32 %3532, %3535
  br i1 %3553, label %3554, label %3560

3554:                                             ; preds = %3552
  store i32 0, ptr %3531, align 4, !tbaa !6
  %3555 = getelementptr inbounds i32, ptr %8, i64 %3530
  %3556 = load i32, ptr %3555, align 4, !tbaa !6
  %3557 = getelementptr inbounds i32, ptr %6, i64 %3530
  store i32 %3556, ptr %3557, align 4, !tbaa !6
  %3558 = add nuw nsw i64 %3530, 1
  %3559 = icmp eq i64 %3558, %3432
  br i1 %3559, label %3567, label %3529, !llvm.loop !1238

3560:                                             ; preds = %3525, %3552
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  %3561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3562:                                             ; preds = %3538, %3544
  %3563 = phi ptr [ %3551, %3544 ], [ %3531, %3538 ]
  %3564 = phi i32 [ %3550, %3544 ], [ 1, %3538 ]
  %3565 = load i32, ptr %3563, align 4, !tbaa !6
  %3566 = add nsw i32 %3565, %3564
  store i32 %3566, ptr %3563, align 4, !tbaa !6
  br label %3567

3567:                                             ; preds = %3554, %3562, %3527, %3509
  %3568 = icmp eq i32 %3519, %5
  br i1 %3568, label %5541, label %3435, !llvm.loop !1239

3569:                                             ; preds = %3418, %3706
  %3570 = phi i64 [ 0, %3418 ], [ %3654, %3706 ]
  %3571 = phi i32 [ 0, %3418 ], [ %3655, %3706 ]
  %3572 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3419, label %3573, label %3642

3573:                                             ; preds = %3569, %3632
  %3574 = phi i32 [ %3641, %3632 ], [ 0, %3569 ]
  %3575 = phi i64 [ %3583, %3632 ], [ %3423, %3569 ]
  %3576 = phi i64 [ %3640, %3632 ], [ %3422, %3569 ]
  %3577 = phi i32 [ %3638, %3632 ], [ %3572, %3569 ]
  %3578 = sub i32 %3421, %3574
  %3579 = tail call i32 @llvm.smin.i32(i32 %3578, i32 0)
  %3580 = sub i32 %3578, %3579
  %3581 = zext i32 %3580 to i64
  %3582 = add nuw nsw i64 %3581, 1
  %3583 = add nsw i64 %3575, -1
  %3584 = icmp ult i32 %3580, 31
  br i1 %3584, label %3620, label %3585

3585:                                             ; preds = %3573
  %3586 = and i64 %3582, 8589934560
  %3587 = sub i64 %3576, %3586
  br label %3588

3588:                                             ; preds = %3588, %3585
  %3589 = phi i64 [ 0, %3585 ], [ %3612, %3588 ]
  %3590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3608, %3588 ]
  %3591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3609, %3588 ]
  %3592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3610, %3588 ]
  %3593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3611, %3588 ]
  %3594 = sub i64 %3576, %3589
  %3595 = getelementptr inbounds i32, ptr %11, i64 %3594
  %3596 = getelementptr inbounds i32, ptr %3595, i64 -7
  %3597 = load <8 x i32>, ptr %3596, align 4, !tbaa !6
  %3598 = shufflevector <8 x i32> %3597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3599 = getelementptr inbounds i32, ptr %3595, i64 -15
  %3600 = load <8 x i32>, ptr %3599, align 4, !tbaa !6
  %3601 = shufflevector <8 x i32> %3600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3602 = getelementptr inbounds i32, ptr %3595, i64 -23
  %3603 = load <8 x i32>, ptr %3602, align 4, !tbaa !6
  %3604 = shufflevector <8 x i32> %3603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3605 = getelementptr inbounds i32, ptr %3595, i64 -31
  %3606 = load <8 x i32>, ptr %3605, align 4, !tbaa !6
  %3607 = shufflevector <8 x i32> %3606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3608 = mul <8 x i32> %3598, %3590
  %3609 = mul <8 x i32> %3601, %3591
  %3610 = mul <8 x i32> %3604, %3592
  %3611 = mul <8 x i32> %3607, %3593
  %3612 = add nuw i64 %3589, 32
  %3613 = icmp eq i64 %3612, %3586
  br i1 %3613, label %3614, label %3588, !llvm.loop !1240

3614:                                             ; preds = %3588
  %3615 = mul <8 x i32> %3609, %3608
  %3616 = mul <8 x i32> %3610, %3615
  %3617 = mul <8 x i32> %3611, %3616
  %3618 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3617)
  %3619 = icmp eq i64 %3582, %3586
  br i1 %3619, label %3632, label %3620

3620:                                             ; preds = %3573, %3614
  %3621 = phi i64 [ %3576, %3573 ], [ %3587, %3614 ]
  %3622 = phi i32 [ 1, %3573 ], [ %3618, %3614 ]
  br label %3623

3623:                                             ; preds = %3620, %3623
  %3624 = phi i64 [ %3629, %3623 ], [ %3621, %3620 ]
  %3625 = phi i32 [ %3628, %3623 ], [ %3622, %3620 ]
  %3626 = getelementptr inbounds i32, ptr %11, i64 %3624
  %3627 = load i32, ptr %3626, align 4, !tbaa !6
  %3628 = mul nsw i32 %3627, %3625
  %3629 = add nsw i64 %3624, -1
  %3630 = trunc i64 %3624 to i32
  %3631 = icmp sgt i32 %3630, 0
  br i1 %3631, label %3623, label %3632, !llvm.loop !1241

3632:                                             ; preds = %3623, %3614
  %3633 = phi i32 [ %3618, %3614 ], [ %3628, %3623 ]
  %3634 = and i64 %3583, 4294967295
  %3635 = getelementptr inbounds i32, ptr %6, i64 %3634
  %3636 = load i32, ptr %3635, align 4, !tbaa !6
  %3637 = mul nsw i32 %3636, %3633
  %3638 = add nsw i32 %3637, %3577
  %3639 = icmp sgt i64 %3575, 2
  %3640 = add nsw i64 %3576, -1
  %3641 = add i32 %3574, 1
  br i1 %3639, label %3573, label %3642, !llvm.loop !1242

3642:                                             ; preds = %3632, %3569
  %3643 = phi i32 [ %3572, %3569 ], [ %3638, %3632 ]
  %3644 = icmp slt i32 %3643, %5
  br i1 %3644, label %3647, label %3645

3645:                                             ; preds = %3642
  %3646 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

3647:                                             ; preds = %3642
  %3648 = sext i32 %3643 to i64
  %3649 = getelementptr inbounds float, ptr %3097, i64 %3648
  %3650 = load float, ptr %3649, align 4, !tbaa !163
  %3651 = fptosi float %3650 to i64
  %3652 = mul i64 %3651, %3651
  %3653 = mul i64 %3652, %3652
  %3654 = add nsw i64 %3653, %3570
  store i64 %3654, ptr %3099, align 8, !tbaa !121
  %3655 = add nuw nsw i32 %3571, 1
  br i1 %3420, label %3656, label %3706

3656:                                             ; preds = %3647
  %3657 = load i32, ptr %4, align 4, !tbaa !6
  %3658 = load i32, ptr %12, align 4, !tbaa !6
  %3659 = add nsw i32 %3658, -1
  %3660 = icmp slt i32 %3657, %3659
  br i1 %3660, label %3683, label %3661

3661:                                             ; preds = %3656
  %3662 = icmp eq i32 %3657, %3659
  br i1 %3662, label %3663, label %3699

3663:                                             ; preds = %3661
  store i32 0, ptr %4, align 4, !tbaa !6
  %3664 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3664, ptr %6, align 4, !tbaa !6
  br i1 %3425, label %3706, label %3665

3665:                                             ; preds = %3663, %3693
  %3666 = phi i64 [ %3697, %3693 ], [ 1, %3663 ]
  %3667 = getelementptr inbounds i32, ptr %4, i64 %3666
  %3668 = load i32, ptr %3667, align 4, !tbaa !6
  %3669 = getelementptr inbounds i32, ptr %12, i64 %3666
  %3670 = load i32, ptr %3669, align 4, !tbaa !6
  %3671 = add nsw i32 %3670, -1
  %3672 = icmp slt i32 %3668, %3671
  br i1 %3672, label %3673, label %3691

3673:                                             ; preds = %3665
  br i1 %3660, label %3683, label %3674

3674:                                             ; preds = %3673
  %3675 = shl i64 %3666, 32
  %3676 = add i64 %3675, -4294967296
  %3677 = ashr exact i64 %3676, 32
  %3678 = getelementptr inbounds i32, ptr %7, i64 %3677
  %3679 = load i32, ptr %3678, align 4, !tbaa !6
  %3680 = getelementptr inbounds i32, ptr %6, i64 %3666
  %3681 = load i32, ptr %3680, align 4, !tbaa !6
  %3682 = add nsw i32 %3681, %3679
  store i32 %3682, ptr %3680, align 4, !tbaa !6
  br label %3701

3683:                                             ; preds = %3656, %3673
  %3684 = phi i32 [ %3668, %3673 ], [ %3657, %3656 ]
  %3685 = phi ptr [ %3667, %3673 ], [ %4, %3656 ]
  %3686 = phi i64 [ %3666, %3673 ], [ 0, %3656 ]
  %3687 = add nsw i32 %3684, 1
  store i32 %3687, ptr %3685, align 4, !tbaa !6
  %3688 = getelementptr inbounds i32, ptr %7, i64 %3686
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3686
  br label %3701

3691:                                             ; preds = %3665
  %3692 = icmp eq i32 %3668, %3671
  br i1 %3692, label %3693, label %3699

3693:                                             ; preds = %3691
  store i32 0, ptr %3667, align 4, !tbaa !6
  %3694 = getelementptr inbounds i32, ptr %8, i64 %3666
  %3695 = load i32, ptr %3694, align 4, !tbaa !6
  %3696 = getelementptr inbounds i32, ptr %6, i64 %3666
  store i32 %3695, ptr %3696, align 4, !tbaa !6
  %3697 = add nuw nsw i64 %3666, 1
  %3698 = icmp eq i64 %3697, %3423
  br i1 %3698, label %3706, label %3665, !llvm.loop !1243

3699:                                             ; preds = %3661, %3691
  %3700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3701:                                             ; preds = %3674, %3683
  %3702 = phi ptr [ %3690, %3683 ], [ %3667, %3674 ]
  %3703 = phi i32 [ %3689, %3683 ], [ 1, %3674 ]
  %3704 = load i32, ptr %3702, align 4, !tbaa !6
  %3705 = add nsw i32 %3704, %3703
  store i32 %3705, ptr %3702, align 4, !tbaa !6
  br label %3706

3706:                                             ; preds = %3693, %3701, %3663, %3647
  %3707 = icmp eq i32 %3655, %5
  br i1 %3707, label %5544, label %3569, !llvm.loop !1244

3708:                                             ; preds = %3106
  %3709 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

3710:                                             ; preds = %18
  %3711 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3712 = load ptr, ptr %3711, align 8, !tbaa !10
  %3713 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3714 = load ptr, ptr %3713, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3714, align 8, !tbaa !19
  %3715 = icmp eq i32 %13, 0
  br i1 %3715, label %3716, label %3721

3716:                                             ; preds = %3710
  %3717 = load float, ptr %3712, align 4, !tbaa !163
  %3718 = fpext float %3717 to double
  %3719 = fmul fast double %3718, %3718
  %3720 = fmul fast double %3719, %3719
  store double %3720, ptr %3714, align 8, !tbaa !19
  br label %5544

3721:                                             ; preds = %3710
  switch i32 %1, label %4317 [
    i32 1, label %3722
    i32 0, label %4021
  ]

3722:                                             ; preds = %3721
  %3723 = getelementptr inbounds i32, ptr %3, i64 %19
  %3724 = load i32, ptr %3723, align 4, !tbaa !6
  %3725 = icmp eq i32 %3724, 0
  %3726 = icmp sgt i32 %5, 0
  br i1 %3725, label %3736, label %3727

3727:                                             ; preds = %3722
  br i1 %3726, label %3728, label %5544

3728:                                             ; preds = %3727
  %3729 = icmp sgt i32 %13, 1
  %3730 = icmp sgt i32 %13, 0
  %3731 = add i32 %13, -2
  %3732 = zext i32 %3731 to i64
  %3733 = zext i32 %13 to i64
  %3734 = add nuw i32 %5, 1
  %3735 = icmp eq i32 %13, 1
  br label %3882

3736:                                             ; preds = %3722
  br i1 %3726, label %3737, label %5544

3737:                                             ; preds = %3736
  %3738 = icmp sgt i32 %13, 1
  %3739 = icmp sgt i32 %13, 0
  %3740 = add i32 %13, -2
  %3741 = zext i32 %3740 to i64
  %3742 = zext i32 %13 to i64
  %3743 = add nuw i32 %5, 1
  %3744 = icmp eq i32 %13, 1
  br label %3745

3745:                                             ; preds = %3737, %3880
  %3746 = phi double [ 0.000000e+00, %3737 ], [ %3830, %3880 ]
  %3747 = phi i32 [ 0, %3737 ], [ %3832, %3880 ]
  %3748 = phi double [ 0.000000e+00, %3737 ], [ %3831, %3880 ]
  %3749 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3738, label %3750, label %3819

3750:                                             ; preds = %3745, %3809
  %3751 = phi i32 [ %3818, %3809 ], [ 0, %3745 ]
  %3752 = phi i64 [ %3760, %3809 ], [ %3742, %3745 ]
  %3753 = phi i64 [ %3817, %3809 ], [ %3741, %3745 ]
  %3754 = phi i32 [ %3815, %3809 ], [ %3749, %3745 ]
  %3755 = sub i32 %3740, %3751
  %3756 = tail call i32 @llvm.smin.i32(i32 %3755, i32 0)
  %3757 = sub i32 %3755, %3756
  %3758 = zext i32 %3757 to i64
  %3759 = add nuw nsw i64 %3758, 1
  %3760 = add nsw i64 %3752, -1
  %3761 = icmp ult i32 %3757, 31
  br i1 %3761, label %3797, label %3762

3762:                                             ; preds = %3750
  %3763 = and i64 %3759, 8589934560
  %3764 = sub i64 %3753, %3763
  br label %3765

3765:                                             ; preds = %3765, %3762
  %3766 = phi i64 [ 0, %3762 ], [ %3789, %3765 ]
  %3767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3762 ], [ %3785, %3765 ]
  %3768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3762 ], [ %3786, %3765 ]
  %3769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3762 ], [ %3787, %3765 ]
  %3770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3762 ], [ %3788, %3765 ]
  %3771 = sub i64 %3753, %3766
  %3772 = getelementptr inbounds i32, ptr %9, i64 %3771
  %3773 = getelementptr inbounds i32, ptr %3772, i64 -7
  %3774 = load <8 x i32>, ptr %3773, align 4, !tbaa !6
  %3775 = shufflevector <8 x i32> %3774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3776 = getelementptr inbounds i32, ptr %3772, i64 -15
  %3777 = load <8 x i32>, ptr %3776, align 4, !tbaa !6
  %3778 = shufflevector <8 x i32> %3777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3779 = getelementptr inbounds i32, ptr %3772, i64 -23
  %3780 = load <8 x i32>, ptr %3779, align 4, !tbaa !6
  %3781 = shufflevector <8 x i32> %3780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3782 = getelementptr inbounds i32, ptr %3772, i64 -31
  %3783 = load <8 x i32>, ptr %3782, align 4, !tbaa !6
  %3784 = shufflevector <8 x i32> %3783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3785 = mul <8 x i32> %3775, %3767
  %3786 = mul <8 x i32> %3778, %3768
  %3787 = mul <8 x i32> %3781, %3769
  %3788 = mul <8 x i32> %3784, %3770
  %3789 = add nuw i64 %3766, 32
  %3790 = icmp eq i64 %3789, %3763
  br i1 %3790, label %3791, label %3765, !llvm.loop !1245

3791:                                             ; preds = %3765
  %3792 = mul <8 x i32> %3786, %3785
  %3793 = mul <8 x i32> %3787, %3792
  %3794 = mul <8 x i32> %3788, %3793
  %3795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3794)
  %3796 = icmp eq i64 %3759, %3763
  br i1 %3796, label %3809, label %3797

3797:                                             ; preds = %3750, %3791
  %3798 = phi i64 [ %3753, %3750 ], [ %3764, %3791 ]
  %3799 = phi i32 [ 1, %3750 ], [ %3795, %3791 ]
  br label %3800

3800:                                             ; preds = %3797, %3800
  %3801 = phi i64 [ %3806, %3800 ], [ %3798, %3797 ]
  %3802 = phi i32 [ %3805, %3800 ], [ %3799, %3797 ]
  %3803 = getelementptr inbounds i32, ptr %9, i64 %3801
  %3804 = load i32, ptr %3803, align 4, !tbaa !6
  %3805 = mul nsw i32 %3804, %3802
  %3806 = add nsw i64 %3801, -1
  %3807 = trunc i64 %3801 to i32
  %3808 = icmp sgt i32 %3807, 0
  br i1 %3808, label %3800, label %3809, !llvm.loop !1246

3809:                                             ; preds = %3800, %3791
  %3810 = phi i32 [ %3795, %3791 ], [ %3805, %3800 ]
  %3811 = and i64 %3760, 4294967295
  %3812 = getelementptr inbounds i32, ptr %6, i64 %3811
  %3813 = load i32, ptr %3812, align 4, !tbaa !6
  %3814 = mul nsw i32 %3813, %3810
  %3815 = add nsw i32 %3814, %3754
  %3816 = icmp sgt i64 %3752, 2
  %3817 = add nsw i64 %3753, -1
  %3818 = add i32 %3751, 1
  br i1 %3816, label %3750, label %3819, !llvm.loop !1247

3819:                                             ; preds = %3809, %3745
  %3820 = phi i32 [ %3749, %3745 ], [ %3815, %3809 ]
  %3821 = sext i32 %3820 to i64
  %3822 = getelementptr inbounds double, ptr %2, i64 %3821
  %3823 = load double, ptr %3822, align 8, !tbaa !19
  %3824 = getelementptr inbounds float, ptr %3712, i64 %3821
  %3825 = load float, ptr %3824, align 4, !tbaa !163
  %3826 = fpext float %3825 to double
  %3827 = fmul fast double %3823, %3826
  %3828 = fmul fast double %3827, %3827
  %3829 = fmul fast double %3828, %3828
  %3830 = fadd fast double %3829, %3746
  store double %3830, ptr %3714, align 8, !tbaa !19
  %3831 = fadd fast double %3823, %3748
  %3832 = add nuw nsw i32 %3747, 1
  br i1 %3739, label %3833, label %3880

3833:                                             ; preds = %3819
  %3834 = load i32, ptr %4, align 4, !tbaa !6
  %3835 = load i32, ptr %12, align 4, !tbaa !6
  %3836 = add nsw i32 %3835, -1
  %3837 = icmp slt i32 %3834, %3836
  br i1 %3837, label %3857, label %3838

3838:                                             ; preds = %3833
  %3839 = icmp eq i32 %3834, %3836
  br i1 %3839, label %3840, label %3873

3840:                                             ; preds = %3838
  store i32 0, ptr %4, align 4, !tbaa !6
  %3841 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3841, ptr %6, align 4, !tbaa !6
  br i1 %3744, label %3880, label %3842

3842:                                             ; preds = %3840, %3867
  %3843 = phi i64 [ %3871, %3867 ], [ 1, %3840 ]
  %3844 = getelementptr inbounds i32, ptr %4, i64 %3843
  %3845 = load i32, ptr %3844, align 4, !tbaa !6
  %3846 = getelementptr inbounds i32, ptr %12, i64 %3843
  %3847 = load i32, ptr %3846, align 4, !tbaa !6
  %3848 = add nsw i32 %3847, -1
  %3849 = icmp slt i32 %3845, %3848
  br i1 %3849, label %3850, label %3865

3850:                                             ; preds = %3842
  br i1 %3837, label %3857, label %3851

3851:                                             ; preds = %3850
  %3852 = getelementptr inbounds i32, ptr %7, i64 %3843
  %3853 = load i32, ptr %3852, align 4, !tbaa !6
  %3854 = getelementptr inbounds i32, ptr %6, i64 %3843
  %3855 = load i32, ptr %3854, align 4, !tbaa !6
  %3856 = add nsw i32 %3855, %3853
  store i32 %3856, ptr %3854, align 4, !tbaa !6
  br label %3875

3857:                                             ; preds = %3833, %3850
  %3858 = phi i32 [ %3845, %3850 ], [ %3834, %3833 ]
  %3859 = phi ptr [ %3844, %3850 ], [ %4, %3833 ]
  %3860 = phi i64 [ %3843, %3850 ], [ 0, %3833 ]
  %3861 = add nsw i32 %3858, 1
  store i32 %3861, ptr %3859, align 4, !tbaa !6
  %3862 = getelementptr inbounds i32, ptr %7, i64 %3860
  %3863 = load i32, ptr %3862, align 4, !tbaa !6
  %3864 = getelementptr inbounds i32, ptr %6, i64 %3860
  br label %3875

3865:                                             ; preds = %3842
  %3866 = icmp eq i32 %3845, %3848
  br i1 %3866, label %3867, label %3873

3867:                                             ; preds = %3865
  store i32 0, ptr %3844, align 4, !tbaa !6
  %3868 = getelementptr inbounds i32, ptr %8, i64 %3843
  %3869 = load i32, ptr %3868, align 4, !tbaa !6
  %3870 = getelementptr inbounds i32, ptr %6, i64 %3843
  store i32 %3869, ptr %3870, align 4, !tbaa !6
  %3871 = add nuw nsw i64 %3843, 1
  %3872 = icmp eq i64 %3871, %3742
  br i1 %3872, label %3880, label %3842, !llvm.loop !1248

3873:                                             ; preds = %3838, %3865
  %3874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

3875:                                             ; preds = %3851, %3857
  %3876 = phi ptr [ %3864, %3857 ], [ %3844, %3851 ]
  %3877 = phi i32 [ %3863, %3857 ], [ 1, %3851 ]
  %3878 = load i32, ptr %3876, align 4, !tbaa !6
  %3879 = add nsw i32 %3878, %3877
  store i32 %3879, ptr %3876, align 4, !tbaa !6
  br label %3880

3880:                                             ; preds = %3867, %3875, %3840, %3819
  %3881 = icmp eq i32 %3832, %5
  br i1 %3881, label %5544, label %3745, !llvm.loop !1249

3882:                                             ; preds = %3728, %4019
  %3883 = phi double [ 0.000000e+00, %3728 ], [ %3967, %4019 ]
  %3884 = phi i32 [ 0, %3728 ], [ %3968, %4019 ]
  %3885 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3729, label %3886, label %3955

3886:                                             ; preds = %3882, %3945
  %3887 = phi i32 [ %3954, %3945 ], [ 0, %3882 ]
  %3888 = phi i64 [ %3896, %3945 ], [ %3733, %3882 ]
  %3889 = phi i64 [ %3953, %3945 ], [ %3732, %3882 ]
  %3890 = phi i32 [ %3951, %3945 ], [ %3885, %3882 ]
  %3891 = sub i32 %3731, %3887
  %3892 = tail call i32 @llvm.smin.i32(i32 %3891, i32 0)
  %3893 = sub i32 %3891, %3892
  %3894 = zext i32 %3893 to i64
  %3895 = add nuw nsw i64 %3894, 1
  %3896 = add nsw i64 %3888, -1
  %3897 = icmp ult i32 %3893, 31
  br i1 %3897, label %3933, label %3898

3898:                                             ; preds = %3886
  %3899 = and i64 %3895, 8589934560
  %3900 = sub i64 %3889, %3899
  br label %3901

3901:                                             ; preds = %3901, %3898
  %3902 = phi i64 [ 0, %3898 ], [ %3925, %3901 ]
  %3903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3898 ], [ %3921, %3901 ]
  %3904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3898 ], [ %3922, %3901 ]
  %3905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3898 ], [ %3923, %3901 ]
  %3906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3898 ], [ %3924, %3901 ]
  %3907 = sub i64 %3889, %3902
  %3908 = getelementptr inbounds i32, ptr %11, i64 %3907
  %3909 = getelementptr inbounds i32, ptr %3908, i64 -7
  %3910 = load <8 x i32>, ptr %3909, align 4, !tbaa !6
  %3911 = shufflevector <8 x i32> %3910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3912 = getelementptr inbounds i32, ptr %3908, i64 -15
  %3913 = load <8 x i32>, ptr %3912, align 4, !tbaa !6
  %3914 = shufflevector <8 x i32> %3913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3915 = getelementptr inbounds i32, ptr %3908, i64 -23
  %3916 = load <8 x i32>, ptr %3915, align 4, !tbaa !6
  %3917 = shufflevector <8 x i32> %3916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3918 = getelementptr inbounds i32, ptr %3908, i64 -31
  %3919 = load <8 x i32>, ptr %3918, align 4, !tbaa !6
  %3920 = shufflevector <8 x i32> %3919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3921 = mul <8 x i32> %3911, %3903
  %3922 = mul <8 x i32> %3914, %3904
  %3923 = mul <8 x i32> %3917, %3905
  %3924 = mul <8 x i32> %3920, %3906
  %3925 = add nuw i64 %3902, 32
  %3926 = icmp eq i64 %3925, %3899
  br i1 %3926, label %3927, label %3901, !llvm.loop !1250

3927:                                             ; preds = %3901
  %3928 = mul <8 x i32> %3922, %3921
  %3929 = mul <8 x i32> %3923, %3928
  %3930 = mul <8 x i32> %3924, %3929
  %3931 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3930)
  %3932 = icmp eq i64 %3895, %3899
  br i1 %3932, label %3945, label %3933

3933:                                             ; preds = %3886, %3927
  %3934 = phi i64 [ %3889, %3886 ], [ %3900, %3927 ]
  %3935 = phi i32 [ 1, %3886 ], [ %3931, %3927 ]
  br label %3936

3936:                                             ; preds = %3933, %3936
  %3937 = phi i64 [ %3942, %3936 ], [ %3934, %3933 ]
  %3938 = phi i32 [ %3941, %3936 ], [ %3935, %3933 ]
  %3939 = getelementptr inbounds i32, ptr %11, i64 %3937
  %3940 = load i32, ptr %3939, align 4, !tbaa !6
  %3941 = mul nsw i32 %3940, %3938
  %3942 = add nsw i64 %3937, -1
  %3943 = trunc i64 %3937 to i32
  %3944 = icmp sgt i32 %3943, 0
  br i1 %3944, label %3936, label %3945, !llvm.loop !1251

3945:                                             ; preds = %3936, %3927
  %3946 = phi i32 [ %3931, %3927 ], [ %3941, %3936 ]
  %3947 = and i64 %3896, 4294967295
  %3948 = getelementptr inbounds i32, ptr %6, i64 %3947
  %3949 = load i32, ptr %3948, align 4, !tbaa !6
  %3950 = mul nsw i32 %3949, %3946
  %3951 = add nsw i32 %3950, %3890
  %3952 = icmp sgt i64 %3888, 2
  %3953 = add nsw i64 %3889, -1
  %3954 = add i32 %3887, 1
  br i1 %3952, label %3886, label %3955, !llvm.loop !1252

3955:                                             ; preds = %3945, %3882
  %3956 = phi i32 [ %3885, %3882 ], [ %3951, %3945 ]
  %3957 = icmp slt i32 %3956, %5
  br i1 %3957, label %3960, label %3958

3958:                                             ; preds = %3955
  %3959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

3960:                                             ; preds = %3955
  %3961 = sext i32 %3956 to i64
  %3962 = getelementptr inbounds float, ptr %3712, i64 %3961
  %3963 = load float, ptr %3962, align 4, !tbaa !163
  %3964 = fpext float %3963 to double
  %3965 = fmul fast double %3964, %3964
  %3966 = fmul fast double %3965, %3965
  %3967 = fadd fast double %3966, %3883
  store double %3967, ptr %3714, align 8, !tbaa !19
  %3968 = add nuw nsw i32 %3884, 1
  br i1 %3730, label %3969, label %4019

3969:                                             ; preds = %3960
  %3970 = load i32, ptr %4, align 4, !tbaa !6
  %3971 = load i32, ptr %12, align 4, !tbaa !6
  %3972 = add nsw i32 %3971, -1
  %3973 = icmp slt i32 %3970, %3972
  br i1 %3973, label %3996, label %3974

3974:                                             ; preds = %3969
  %3975 = icmp eq i32 %3970, %3972
  br i1 %3975, label %3976, label %4012

3976:                                             ; preds = %3974
  store i32 0, ptr %4, align 4, !tbaa !6
  %3977 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3977, ptr %6, align 4, !tbaa !6
  br i1 %3735, label %4019, label %3978

3978:                                             ; preds = %3976, %4006
  %3979 = phi i64 [ %4010, %4006 ], [ 1, %3976 ]
  %3980 = getelementptr inbounds i32, ptr %4, i64 %3979
  %3981 = load i32, ptr %3980, align 4, !tbaa !6
  %3982 = getelementptr inbounds i32, ptr %12, i64 %3979
  %3983 = load i32, ptr %3982, align 4, !tbaa !6
  %3984 = add nsw i32 %3983, -1
  %3985 = icmp slt i32 %3981, %3984
  br i1 %3985, label %3986, label %4004

3986:                                             ; preds = %3978
  br i1 %3973, label %3996, label %3987

3987:                                             ; preds = %3986
  %3988 = shl i64 %3979, 32
  %3989 = add i64 %3988, -4294967296
  %3990 = ashr exact i64 %3989, 32
  %3991 = getelementptr inbounds i32, ptr %7, i64 %3990
  %3992 = load i32, ptr %3991, align 4, !tbaa !6
  %3993 = getelementptr inbounds i32, ptr %6, i64 %3979
  %3994 = load i32, ptr %3993, align 4, !tbaa !6
  %3995 = add nsw i32 %3994, %3992
  store i32 %3995, ptr %3993, align 4, !tbaa !6
  br label %4014

3996:                                             ; preds = %3969, %3986
  %3997 = phi i32 [ %3981, %3986 ], [ %3970, %3969 ]
  %3998 = phi ptr [ %3980, %3986 ], [ %4, %3969 ]
  %3999 = phi i64 [ %3979, %3986 ], [ 0, %3969 ]
  %4000 = add nsw i32 %3997, 1
  store i32 %4000, ptr %3998, align 4, !tbaa !6
  %4001 = getelementptr inbounds i32, ptr %7, i64 %3999
  %4002 = load i32, ptr %4001, align 4, !tbaa !6
  %4003 = getelementptr inbounds i32, ptr %6, i64 %3999
  br label %4014

4004:                                             ; preds = %3978
  %4005 = icmp eq i32 %3981, %3984
  br i1 %4005, label %4006, label %4012

4006:                                             ; preds = %4004
  store i32 0, ptr %3980, align 4, !tbaa !6
  %4007 = getelementptr inbounds i32, ptr %8, i64 %3979
  %4008 = load i32, ptr %4007, align 4, !tbaa !6
  %4009 = getelementptr inbounds i32, ptr %6, i64 %3979
  store i32 %4008, ptr %4009, align 4, !tbaa !6
  %4010 = add nuw nsw i64 %3979, 1
  %4011 = icmp eq i64 %4010, %3733
  br i1 %4011, label %4019, label %3978, !llvm.loop !1253

4012:                                             ; preds = %3974, %4004
  %4013 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4014:                                             ; preds = %3987, %3996
  %4015 = phi ptr [ %4003, %3996 ], [ %3980, %3987 ]
  %4016 = phi i32 [ %4002, %3996 ], [ 1, %3987 ]
  %4017 = load i32, ptr %4015, align 4, !tbaa !6
  %4018 = add nsw i32 %4017, %4016
  store i32 %4018, ptr %4015, align 4, !tbaa !6
  br label %4019

4019:                                             ; preds = %4006, %4014, %3976, %3960
  %4020 = icmp eq i32 %3968, %5
  br i1 %4020, label %5544, label %3882, !llvm.loop !1254

4021:                                             ; preds = %3721
  %4022 = getelementptr inbounds i32, ptr %3, i64 %19
  %4023 = load i32, ptr %4022, align 4, !tbaa !6
  %4024 = icmp eq i32 %4023, 0
  %4025 = icmp sgt i32 %5, 0
  br i1 %4024, label %4035, label %4026

4026:                                             ; preds = %4021
  br i1 %4025, label %4027, label %5544

4027:                                             ; preds = %4026
  %4028 = icmp sgt i32 %13, 1
  %4029 = icmp sgt i32 %13, 0
  %4030 = add i32 %13, -2
  %4031 = zext i32 %4030 to i64
  %4032 = zext i32 %13 to i64
  %4033 = add nuw i32 %5, 1
  %4034 = icmp eq i32 %13, 1
  br label %4178

4035:                                             ; preds = %4021
  br i1 %4025, label %4036, label %5544

4036:                                             ; preds = %4035
  %4037 = icmp sgt i32 %13, 1
  %4038 = icmp sgt i32 %13, 0
  %4039 = add i32 %13, -2
  %4040 = zext i32 %4039 to i64
  %4041 = zext i32 %13 to i64
  %4042 = add nuw i32 %5, 1
  %4043 = icmp eq i32 %13, 1
  br label %4044

4044:                                             ; preds = %4036, %4176
  %4045 = phi double [ 0.000000e+00, %4036 ], [ %4126, %4176 ]
  %4046 = phi i32 [ 0, %4036 ], [ %4128, %4176 ]
  %4047 = phi double [ 0.000000e+00, %4036 ], [ %4127, %4176 ]
  %4048 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4037, label %4049, label %4118

4049:                                             ; preds = %4044, %4108
  %4050 = phi i32 [ %4117, %4108 ], [ 0, %4044 ]
  %4051 = phi i64 [ %4059, %4108 ], [ %4041, %4044 ]
  %4052 = phi i64 [ %4116, %4108 ], [ %4040, %4044 ]
  %4053 = phi i32 [ %4114, %4108 ], [ %4048, %4044 ]
  %4054 = sub i32 %4039, %4050
  %4055 = tail call i32 @llvm.smin.i32(i32 %4054, i32 0)
  %4056 = sub i32 %4054, %4055
  %4057 = zext i32 %4056 to i64
  %4058 = add nuw nsw i64 %4057, 1
  %4059 = add nsw i64 %4051, -1
  %4060 = icmp ult i32 %4056, 31
  br i1 %4060, label %4096, label %4061

4061:                                             ; preds = %4049
  %4062 = and i64 %4058, 8589934560
  %4063 = sub i64 %4052, %4062
  br label %4064

4064:                                             ; preds = %4064, %4061
  %4065 = phi i64 [ 0, %4061 ], [ %4088, %4064 ]
  %4066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4061 ], [ %4084, %4064 ]
  %4067 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4061 ], [ %4085, %4064 ]
  %4068 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4061 ], [ %4086, %4064 ]
  %4069 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4061 ], [ %4087, %4064 ]
  %4070 = sub i64 %4052, %4065
  %4071 = getelementptr inbounds i32, ptr %9, i64 %4070
  %4072 = getelementptr inbounds i32, ptr %4071, i64 -7
  %4073 = load <8 x i32>, ptr %4072, align 4, !tbaa !6
  %4074 = shufflevector <8 x i32> %4073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4075 = getelementptr inbounds i32, ptr %4071, i64 -15
  %4076 = load <8 x i32>, ptr %4075, align 4, !tbaa !6
  %4077 = shufflevector <8 x i32> %4076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4078 = getelementptr inbounds i32, ptr %4071, i64 -23
  %4079 = load <8 x i32>, ptr %4078, align 4, !tbaa !6
  %4080 = shufflevector <8 x i32> %4079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4081 = getelementptr inbounds i32, ptr %4071, i64 -31
  %4082 = load <8 x i32>, ptr %4081, align 4, !tbaa !6
  %4083 = shufflevector <8 x i32> %4082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4084 = mul <8 x i32> %4074, %4066
  %4085 = mul <8 x i32> %4077, %4067
  %4086 = mul <8 x i32> %4080, %4068
  %4087 = mul <8 x i32> %4083, %4069
  %4088 = add nuw i64 %4065, 32
  %4089 = icmp eq i64 %4088, %4062
  br i1 %4089, label %4090, label %4064, !llvm.loop !1255

4090:                                             ; preds = %4064
  %4091 = mul <8 x i32> %4085, %4084
  %4092 = mul <8 x i32> %4086, %4091
  %4093 = mul <8 x i32> %4087, %4092
  %4094 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4093)
  %4095 = icmp eq i64 %4058, %4062
  br i1 %4095, label %4108, label %4096

4096:                                             ; preds = %4049, %4090
  %4097 = phi i64 [ %4052, %4049 ], [ %4063, %4090 ]
  %4098 = phi i32 [ 1, %4049 ], [ %4094, %4090 ]
  br label %4099

4099:                                             ; preds = %4096, %4099
  %4100 = phi i64 [ %4105, %4099 ], [ %4097, %4096 ]
  %4101 = phi i32 [ %4104, %4099 ], [ %4098, %4096 ]
  %4102 = getelementptr inbounds i32, ptr %9, i64 %4100
  %4103 = load i32, ptr %4102, align 4, !tbaa !6
  %4104 = mul nsw i32 %4103, %4101
  %4105 = add nsw i64 %4100, -1
  %4106 = trunc i64 %4100 to i32
  %4107 = icmp sgt i32 %4106, 0
  br i1 %4107, label %4099, label %4108, !llvm.loop !1256

4108:                                             ; preds = %4099, %4090
  %4109 = phi i32 [ %4094, %4090 ], [ %4104, %4099 ]
  %4110 = and i64 %4059, 4294967295
  %4111 = getelementptr inbounds i32, ptr %6, i64 %4110
  %4112 = load i32, ptr %4111, align 4, !tbaa !6
  %4113 = mul nsw i32 %4112, %4109
  %4114 = add nsw i32 %4113, %4053
  %4115 = icmp sgt i64 %4051, 2
  %4116 = add nsw i64 %4052, -1
  %4117 = add i32 %4050, 1
  br i1 %4115, label %4049, label %4118, !llvm.loop !1257

4118:                                             ; preds = %4108, %4044
  %4119 = phi i32 [ %4048, %4044 ], [ %4114, %4108 ]
  %4120 = sext i32 %4119 to i64
  %4121 = getelementptr inbounds float, ptr %3712, i64 %4120
  %4122 = load float, ptr %4121, align 4, !tbaa !163
  %4123 = fpext float %4122 to double
  %4124 = fmul fast double %4123, %4123
  %4125 = fmul fast double %4124, %4124
  %4126 = fadd fast double %4125, %4045
  %4127 = fadd fast double %4047, 1.000000e+00
  %4128 = add nuw nsw i32 %4046, 1
  br i1 %4038, label %4129, label %4176

4129:                                             ; preds = %4118
  %4130 = load i32, ptr %4, align 4, !tbaa !6
  %4131 = load i32, ptr %12, align 4, !tbaa !6
  %4132 = add nsw i32 %4131, -1
  %4133 = icmp slt i32 %4130, %4132
  br i1 %4133, label %4153, label %4134

4134:                                             ; preds = %4129
  %4135 = icmp eq i32 %4130, %4132
  br i1 %4135, label %4136, label %4169

4136:                                             ; preds = %4134
  store i32 0, ptr %4, align 4, !tbaa !6
  %4137 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4137, ptr %6, align 4, !tbaa !6
  br i1 %4043, label %4176, label %4138

4138:                                             ; preds = %4136, %4163
  %4139 = phi i64 [ %4167, %4163 ], [ 1, %4136 ]
  %4140 = getelementptr inbounds i32, ptr %4, i64 %4139
  %4141 = load i32, ptr %4140, align 4, !tbaa !6
  %4142 = getelementptr inbounds i32, ptr %12, i64 %4139
  %4143 = load i32, ptr %4142, align 4, !tbaa !6
  %4144 = add nsw i32 %4143, -1
  %4145 = icmp slt i32 %4141, %4144
  br i1 %4145, label %4146, label %4161

4146:                                             ; preds = %4138
  br i1 %4133, label %4153, label %4147

4147:                                             ; preds = %4146
  %4148 = getelementptr inbounds i32, ptr %7, i64 %4139
  %4149 = load i32, ptr %4148, align 4, !tbaa !6
  %4150 = getelementptr inbounds i32, ptr %6, i64 %4139
  %4151 = load i32, ptr %4150, align 4, !tbaa !6
  %4152 = add nsw i32 %4151, %4149
  store i32 %4152, ptr %4150, align 4, !tbaa !6
  br label %4171

4153:                                             ; preds = %4129, %4146
  %4154 = phi i32 [ %4141, %4146 ], [ %4130, %4129 ]
  %4155 = phi ptr [ %4140, %4146 ], [ %4, %4129 ]
  %4156 = phi i64 [ %4139, %4146 ], [ 0, %4129 ]
  %4157 = add nsw i32 %4154, 1
  store i32 %4157, ptr %4155, align 4, !tbaa !6
  %4158 = getelementptr inbounds i32, ptr %7, i64 %4156
  %4159 = load i32, ptr %4158, align 4, !tbaa !6
  %4160 = getelementptr inbounds i32, ptr %6, i64 %4156
  br label %4171

4161:                                             ; preds = %4138
  %4162 = icmp eq i32 %4141, %4144
  br i1 %4162, label %4163, label %4169

4163:                                             ; preds = %4161
  store i32 0, ptr %4140, align 4, !tbaa !6
  %4164 = getelementptr inbounds i32, ptr %8, i64 %4139
  %4165 = load i32, ptr %4164, align 4, !tbaa !6
  %4166 = getelementptr inbounds i32, ptr %6, i64 %4139
  store i32 %4165, ptr %4166, align 4, !tbaa !6
  %4167 = add nuw nsw i64 %4139, 1
  %4168 = icmp eq i64 %4167, %4041
  br i1 %4168, label %4176, label %4138, !llvm.loop !1258

4169:                                             ; preds = %4134, %4161
  store double %4126, ptr %3714, align 8, !tbaa !19
  %4170 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4171:                                             ; preds = %4147, %4153
  %4172 = phi ptr [ %4160, %4153 ], [ %4140, %4147 ]
  %4173 = phi i32 [ %4159, %4153 ], [ 1, %4147 ]
  %4174 = load i32, ptr %4172, align 4, !tbaa !6
  %4175 = add nsw i32 %4174, %4173
  store i32 %4175, ptr %4172, align 4, !tbaa !6
  br label %4176

4176:                                             ; preds = %4163, %4171, %4136, %4118
  %4177 = icmp eq i32 %4128, %5
  br i1 %4177, label %5542, label %4044, !llvm.loop !1259

4178:                                             ; preds = %4027, %4315
  %4179 = phi double [ 0.000000e+00, %4027 ], [ %4263, %4315 ]
  %4180 = phi i32 [ 0, %4027 ], [ %4264, %4315 ]
  %4181 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4028, label %4182, label %4251

4182:                                             ; preds = %4178, %4241
  %4183 = phi i32 [ %4250, %4241 ], [ 0, %4178 ]
  %4184 = phi i64 [ %4192, %4241 ], [ %4032, %4178 ]
  %4185 = phi i64 [ %4249, %4241 ], [ %4031, %4178 ]
  %4186 = phi i32 [ %4247, %4241 ], [ %4181, %4178 ]
  %4187 = sub i32 %4030, %4183
  %4188 = tail call i32 @llvm.smin.i32(i32 %4187, i32 0)
  %4189 = sub i32 %4187, %4188
  %4190 = zext i32 %4189 to i64
  %4191 = add nuw nsw i64 %4190, 1
  %4192 = add nsw i64 %4184, -1
  %4193 = icmp ult i32 %4189, 31
  br i1 %4193, label %4229, label %4194

4194:                                             ; preds = %4182
  %4195 = and i64 %4191, 8589934560
  %4196 = sub i64 %4185, %4195
  br label %4197

4197:                                             ; preds = %4197, %4194
  %4198 = phi i64 [ 0, %4194 ], [ %4221, %4197 ]
  %4199 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4194 ], [ %4217, %4197 ]
  %4200 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4194 ], [ %4218, %4197 ]
  %4201 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4194 ], [ %4219, %4197 ]
  %4202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4194 ], [ %4220, %4197 ]
  %4203 = sub i64 %4185, %4198
  %4204 = getelementptr inbounds i32, ptr %11, i64 %4203
  %4205 = getelementptr inbounds i32, ptr %4204, i64 -7
  %4206 = load <8 x i32>, ptr %4205, align 4, !tbaa !6
  %4207 = shufflevector <8 x i32> %4206, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4208 = getelementptr inbounds i32, ptr %4204, i64 -15
  %4209 = load <8 x i32>, ptr %4208, align 4, !tbaa !6
  %4210 = shufflevector <8 x i32> %4209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4211 = getelementptr inbounds i32, ptr %4204, i64 -23
  %4212 = load <8 x i32>, ptr %4211, align 4, !tbaa !6
  %4213 = shufflevector <8 x i32> %4212, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4214 = getelementptr inbounds i32, ptr %4204, i64 -31
  %4215 = load <8 x i32>, ptr %4214, align 4, !tbaa !6
  %4216 = shufflevector <8 x i32> %4215, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4217 = mul <8 x i32> %4207, %4199
  %4218 = mul <8 x i32> %4210, %4200
  %4219 = mul <8 x i32> %4213, %4201
  %4220 = mul <8 x i32> %4216, %4202
  %4221 = add nuw i64 %4198, 32
  %4222 = icmp eq i64 %4221, %4195
  br i1 %4222, label %4223, label %4197, !llvm.loop !1260

4223:                                             ; preds = %4197
  %4224 = mul <8 x i32> %4218, %4217
  %4225 = mul <8 x i32> %4219, %4224
  %4226 = mul <8 x i32> %4220, %4225
  %4227 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4226)
  %4228 = icmp eq i64 %4191, %4195
  br i1 %4228, label %4241, label %4229

4229:                                             ; preds = %4182, %4223
  %4230 = phi i64 [ %4185, %4182 ], [ %4196, %4223 ]
  %4231 = phi i32 [ 1, %4182 ], [ %4227, %4223 ]
  br label %4232

4232:                                             ; preds = %4229, %4232
  %4233 = phi i64 [ %4238, %4232 ], [ %4230, %4229 ]
  %4234 = phi i32 [ %4237, %4232 ], [ %4231, %4229 ]
  %4235 = getelementptr inbounds i32, ptr %11, i64 %4233
  %4236 = load i32, ptr %4235, align 4, !tbaa !6
  %4237 = mul nsw i32 %4236, %4234
  %4238 = add nsw i64 %4233, -1
  %4239 = trunc i64 %4233 to i32
  %4240 = icmp sgt i32 %4239, 0
  br i1 %4240, label %4232, label %4241, !llvm.loop !1261

4241:                                             ; preds = %4232, %4223
  %4242 = phi i32 [ %4227, %4223 ], [ %4237, %4232 ]
  %4243 = and i64 %4192, 4294967295
  %4244 = getelementptr inbounds i32, ptr %6, i64 %4243
  %4245 = load i32, ptr %4244, align 4, !tbaa !6
  %4246 = mul nsw i32 %4245, %4242
  %4247 = add nsw i32 %4246, %4186
  %4248 = icmp sgt i64 %4184, 2
  %4249 = add nsw i64 %4185, -1
  %4250 = add i32 %4183, 1
  br i1 %4248, label %4182, label %4251, !llvm.loop !1262

4251:                                             ; preds = %4241, %4178
  %4252 = phi i32 [ %4181, %4178 ], [ %4247, %4241 ]
  %4253 = icmp slt i32 %4252, %5
  br i1 %4253, label %4256, label %4254

4254:                                             ; preds = %4251
  %4255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

4256:                                             ; preds = %4251
  %4257 = sext i32 %4252 to i64
  %4258 = getelementptr inbounds float, ptr %3712, i64 %4257
  %4259 = load float, ptr %4258, align 4, !tbaa !163
  %4260 = fpext float %4259 to double
  %4261 = fmul fast double %4260, %4260
  %4262 = fmul fast double %4261, %4261
  %4263 = fadd fast double %4262, %4179
  store double %4263, ptr %3714, align 8, !tbaa !19
  %4264 = add nuw nsw i32 %4180, 1
  br i1 %4029, label %4265, label %4315

4265:                                             ; preds = %4256
  %4266 = load i32, ptr %4, align 4, !tbaa !6
  %4267 = load i32, ptr %12, align 4, !tbaa !6
  %4268 = add nsw i32 %4267, -1
  %4269 = icmp slt i32 %4266, %4268
  br i1 %4269, label %4292, label %4270

4270:                                             ; preds = %4265
  %4271 = icmp eq i32 %4266, %4268
  br i1 %4271, label %4272, label %4308

4272:                                             ; preds = %4270
  store i32 0, ptr %4, align 4, !tbaa !6
  %4273 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4273, ptr %6, align 4, !tbaa !6
  br i1 %4034, label %4315, label %4274

4274:                                             ; preds = %4272, %4302
  %4275 = phi i64 [ %4306, %4302 ], [ 1, %4272 ]
  %4276 = getelementptr inbounds i32, ptr %4, i64 %4275
  %4277 = load i32, ptr %4276, align 4, !tbaa !6
  %4278 = getelementptr inbounds i32, ptr %12, i64 %4275
  %4279 = load i32, ptr %4278, align 4, !tbaa !6
  %4280 = add nsw i32 %4279, -1
  %4281 = icmp slt i32 %4277, %4280
  br i1 %4281, label %4282, label %4300

4282:                                             ; preds = %4274
  br i1 %4269, label %4292, label %4283

4283:                                             ; preds = %4282
  %4284 = shl i64 %4275, 32
  %4285 = add i64 %4284, -4294967296
  %4286 = ashr exact i64 %4285, 32
  %4287 = getelementptr inbounds i32, ptr %7, i64 %4286
  %4288 = load i32, ptr %4287, align 4, !tbaa !6
  %4289 = getelementptr inbounds i32, ptr %6, i64 %4275
  %4290 = load i32, ptr %4289, align 4, !tbaa !6
  %4291 = add nsw i32 %4290, %4288
  store i32 %4291, ptr %4289, align 4, !tbaa !6
  br label %4310

4292:                                             ; preds = %4265, %4282
  %4293 = phi i32 [ %4277, %4282 ], [ %4266, %4265 ]
  %4294 = phi ptr [ %4276, %4282 ], [ %4, %4265 ]
  %4295 = phi i64 [ %4275, %4282 ], [ 0, %4265 ]
  %4296 = add nsw i32 %4293, 1
  store i32 %4296, ptr %4294, align 4, !tbaa !6
  %4297 = getelementptr inbounds i32, ptr %7, i64 %4295
  %4298 = load i32, ptr %4297, align 4, !tbaa !6
  %4299 = getelementptr inbounds i32, ptr %6, i64 %4295
  br label %4310

4300:                                             ; preds = %4274
  %4301 = icmp eq i32 %4277, %4280
  br i1 %4301, label %4302, label %4308

4302:                                             ; preds = %4300
  store i32 0, ptr %4276, align 4, !tbaa !6
  %4303 = getelementptr inbounds i32, ptr %8, i64 %4275
  %4304 = load i32, ptr %4303, align 4, !tbaa !6
  %4305 = getelementptr inbounds i32, ptr %6, i64 %4275
  store i32 %4304, ptr %4305, align 4, !tbaa !6
  %4306 = add nuw nsw i64 %4275, 1
  %4307 = icmp eq i64 %4306, %4032
  br i1 %4307, label %4315, label %4274, !llvm.loop !1263

4308:                                             ; preds = %4270, %4300
  %4309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4310:                                             ; preds = %4283, %4292
  %4311 = phi ptr [ %4299, %4292 ], [ %4276, %4283 ]
  %4312 = phi i32 [ %4298, %4292 ], [ 1, %4283 ]
  %4313 = load i32, ptr %4311, align 4, !tbaa !6
  %4314 = add nsw i32 %4313, %4312
  store i32 %4314, ptr %4311, align 4, !tbaa !6
  br label %4315

4315:                                             ; preds = %4302, %4310, %4272, %4256
  %4316 = icmp eq i32 %4264, %5
  br i1 %4316, label %5544, label %4178, !llvm.loop !1264

4317:                                             ; preds = %3721
  %4318 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

4319:                                             ; preds = %18
  %4320 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4321 = load ptr, ptr %4320, align 8, !tbaa !10
  %4322 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4323 = load ptr, ptr %4322, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4323, align 4, !tbaa !163
  %4324 = icmp eq i32 %13, 0
  br i1 %4324, label %4325, label %4329

4325:                                             ; preds = %4319
  %4326 = load float, ptr %4321, align 4, !tbaa !163
  %4327 = fmul fast float %4326, %4326
  %4328 = fmul fast float %4327, %4327
  store float %4328, ptr %4323, align 4, !tbaa !163
  br label %5544

4329:                                             ; preds = %4319
  switch i32 %1, label %4927 [
    i32 1, label %4330
    i32 0, label %4633
  ]

4330:                                             ; preds = %4329
  %4331 = getelementptr inbounds i32, ptr %3, i64 %19
  %4332 = load i32, ptr %4331, align 4, !tbaa !6
  %4333 = icmp eq i32 %4332, 0
  %4334 = icmp sgt i32 %5, 0
  br i1 %4333, label %4344, label %4335

4335:                                             ; preds = %4330
  br i1 %4334, label %4336, label %5544

4336:                                             ; preds = %4335
  %4337 = icmp sgt i32 %13, 1
  %4338 = icmp sgt i32 %13, 0
  %4339 = add i32 %13, -2
  %4340 = zext i32 %4339 to i64
  %4341 = zext i32 %13 to i64
  %4342 = add nuw i32 %5, 1
  %4343 = icmp eq i32 %13, 1
  br label %4492

4344:                                             ; preds = %4330
  br i1 %4334, label %4345, label %5544

4345:                                             ; preds = %4344
  %4346 = icmp sgt i32 %13, 1
  %4347 = icmp sgt i32 %13, 0
  %4348 = add i32 %13, -2
  %4349 = zext i32 %4348 to i64
  %4350 = zext i32 %13 to i64
  %4351 = add nuw i32 %5, 1
  %4352 = icmp eq i32 %13, 1
  br label %4353

4353:                                             ; preds = %4345, %4490
  %4354 = phi float [ 0.000000e+00, %4345 ], [ %4440, %4490 ]
  %4355 = phi i32 [ 0, %4345 ], [ %4442, %4490 ]
  %4356 = phi double [ 0.000000e+00, %4345 ], [ %4441, %4490 ]
  %4357 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4346, label %4358, label %4427

4358:                                             ; preds = %4353, %4417
  %4359 = phi i32 [ %4426, %4417 ], [ 0, %4353 ]
  %4360 = phi i64 [ %4368, %4417 ], [ %4350, %4353 ]
  %4361 = phi i64 [ %4425, %4417 ], [ %4349, %4353 ]
  %4362 = phi i32 [ %4423, %4417 ], [ %4357, %4353 ]
  %4363 = sub i32 %4348, %4359
  %4364 = tail call i32 @llvm.smin.i32(i32 %4363, i32 0)
  %4365 = sub i32 %4363, %4364
  %4366 = zext i32 %4365 to i64
  %4367 = add nuw nsw i64 %4366, 1
  %4368 = add nsw i64 %4360, -1
  %4369 = icmp ult i32 %4365, 31
  br i1 %4369, label %4405, label %4370

4370:                                             ; preds = %4358
  %4371 = and i64 %4367, 8589934560
  %4372 = sub i64 %4361, %4371
  br label %4373

4373:                                             ; preds = %4373, %4370
  %4374 = phi i64 [ 0, %4370 ], [ %4397, %4373 ]
  %4375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4370 ], [ %4393, %4373 ]
  %4376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4370 ], [ %4394, %4373 ]
  %4377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4370 ], [ %4395, %4373 ]
  %4378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4370 ], [ %4396, %4373 ]
  %4379 = sub i64 %4361, %4374
  %4380 = getelementptr inbounds i32, ptr %9, i64 %4379
  %4381 = getelementptr inbounds i32, ptr %4380, i64 -7
  %4382 = load <8 x i32>, ptr %4381, align 4, !tbaa !6
  %4383 = shufflevector <8 x i32> %4382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4384 = getelementptr inbounds i32, ptr %4380, i64 -15
  %4385 = load <8 x i32>, ptr %4384, align 4, !tbaa !6
  %4386 = shufflevector <8 x i32> %4385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4387 = getelementptr inbounds i32, ptr %4380, i64 -23
  %4388 = load <8 x i32>, ptr %4387, align 4, !tbaa !6
  %4389 = shufflevector <8 x i32> %4388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4390 = getelementptr inbounds i32, ptr %4380, i64 -31
  %4391 = load <8 x i32>, ptr %4390, align 4, !tbaa !6
  %4392 = shufflevector <8 x i32> %4391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4393 = mul <8 x i32> %4383, %4375
  %4394 = mul <8 x i32> %4386, %4376
  %4395 = mul <8 x i32> %4389, %4377
  %4396 = mul <8 x i32> %4392, %4378
  %4397 = add nuw i64 %4374, 32
  %4398 = icmp eq i64 %4397, %4371
  br i1 %4398, label %4399, label %4373, !llvm.loop !1265

4399:                                             ; preds = %4373
  %4400 = mul <8 x i32> %4394, %4393
  %4401 = mul <8 x i32> %4395, %4400
  %4402 = mul <8 x i32> %4396, %4401
  %4403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4402)
  %4404 = icmp eq i64 %4367, %4371
  br i1 %4404, label %4417, label %4405

4405:                                             ; preds = %4358, %4399
  %4406 = phi i64 [ %4361, %4358 ], [ %4372, %4399 ]
  %4407 = phi i32 [ 1, %4358 ], [ %4403, %4399 ]
  br label %4408

4408:                                             ; preds = %4405, %4408
  %4409 = phi i64 [ %4414, %4408 ], [ %4406, %4405 ]
  %4410 = phi i32 [ %4413, %4408 ], [ %4407, %4405 ]
  %4411 = getelementptr inbounds i32, ptr %9, i64 %4409
  %4412 = load i32, ptr %4411, align 4, !tbaa !6
  %4413 = mul nsw i32 %4412, %4410
  %4414 = add nsw i64 %4409, -1
  %4415 = trunc i64 %4409 to i32
  %4416 = icmp sgt i32 %4415, 0
  br i1 %4416, label %4408, label %4417, !llvm.loop !1266

4417:                                             ; preds = %4408, %4399
  %4418 = phi i32 [ %4403, %4399 ], [ %4413, %4408 ]
  %4419 = and i64 %4368, 4294967295
  %4420 = getelementptr inbounds i32, ptr %6, i64 %4419
  %4421 = load i32, ptr %4420, align 4, !tbaa !6
  %4422 = mul nsw i32 %4421, %4418
  %4423 = add nsw i32 %4422, %4362
  %4424 = icmp sgt i64 %4360, 2
  %4425 = add nsw i64 %4361, -1
  %4426 = add i32 %4359, 1
  br i1 %4424, label %4358, label %4427, !llvm.loop !1267

4427:                                             ; preds = %4417, %4353
  %4428 = phi i32 [ %4357, %4353 ], [ %4423, %4417 ]
  %4429 = sext i32 %4428 to i64
  %4430 = getelementptr inbounds double, ptr %2, i64 %4429
  %4431 = load double, ptr %4430, align 8, !tbaa !19
  %4432 = getelementptr inbounds float, ptr %4321, i64 %4429
  %4433 = load float, ptr %4432, align 4, !tbaa !163
  %4434 = fpext float %4354 to double
  %4435 = fpext float %4433 to double
  %4436 = fmul fast double %4431, %4435
  %4437 = fmul fast double %4436, %4436
  %4438 = fmul fast double %4437, %4437
  %4439 = fadd fast double %4438, %4434
  %4440 = fptrunc double %4439 to float
  store float %4440, ptr %4323, align 4, !tbaa !163
  %4441 = fadd fast double %4431, %4356
  %4442 = add nuw nsw i32 %4355, 1
  br i1 %4347, label %4443, label %4490

4443:                                             ; preds = %4427
  %4444 = load i32, ptr %4, align 4, !tbaa !6
  %4445 = load i32, ptr %12, align 4, !tbaa !6
  %4446 = add nsw i32 %4445, -1
  %4447 = icmp slt i32 %4444, %4446
  br i1 %4447, label %4467, label %4448

4448:                                             ; preds = %4443
  %4449 = icmp eq i32 %4444, %4446
  br i1 %4449, label %4450, label %4483

4450:                                             ; preds = %4448
  store i32 0, ptr %4, align 4, !tbaa !6
  %4451 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4451, ptr %6, align 4, !tbaa !6
  br i1 %4352, label %4490, label %4452

4452:                                             ; preds = %4450, %4477
  %4453 = phi i64 [ %4481, %4477 ], [ 1, %4450 ]
  %4454 = getelementptr inbounds i32, ptr %4, i64 %4453
  %4455 = load i32, ptr %4454, align 4, !tbaa !6
  %4456 = getelementptr inbounds i32, ptr %12, i64 %4453
  %4457 = load i32, ptr %4456, align 4, !tbaa !6
  %4458 = add nsw i32 %4457, -1
  %4459 = icmp slt i32 %4455, %4458
  br i1 %4459, label %4460, label %4475

4460:                                             ; preds = %4452
  br i1 %4447, label %4467, label %4461

4461:                                             ; preds = %4460
  %4462 = getelementptr inbounds i32, ptr %7, i64 %4453
  %4463 = load i32, ptr %4462, align 4, !tbaa !6
  %4464 = getelementptr inbounds i32, ptr %6, i64 %4453
  %4465 = load i32, ptr %4464, align 4, !tbaa !6
  %4466 = add nsw i32 %4465, %4463
  store i32 %4466, ptr %4464, align 4, !tbaa !6
  br label %4485

4467:                                             ; preds = %4443, %4460
  %4468 = phi i32 [ %4455, %4460 ], [ %4444, %4443 ]
  %4469 = phi ptr [ %4454, %4460 ], [ %4, %4443 ]
  %4470 = phi i64 [ %4453, %4460 ], [ 0, %4443 ]
  %4471 = add nsw i32 %4468, 1
  store i32 %4471, ptr %4469, align 4, !tbaa !6
  %4472 = getelementptr inbounds i32, ptr %7, i64 %4470
  %4473 = load i32, ptr %4472, align 4, !tbaa !6
  %4474 = getelementptr inbounds i32, ptr %6, i64 %4470
  br label %4485

4475:                                             ; preds = %4452
  %4476 = icmp eq i32 %4455, %4458
  br i1 %4476, label %4477, label %4483

4477:                                             ; preds = %4475
  store i32 0, ptr %4454, align 4, !tbaa !6
  %4478 = getelementptr inbounds i32, ptr %8, i64 %4453
  %4479 = load i32, ptr %4478, align 4, !tbaa !6
  %4480 = getelementptr inbounds i32, ptr %6, i64 %4453
  store i32 %4479, ptr %4480, align 4, !tbaa !6
  %4481 = add nuw nsw i64 %4453, 1
  %4482 = icmp eq i64 %4481, %4350
  br i1 %4482, label %4490, label %4452, !llvm.loop !1268

4483:                                             ; preds = %4448, %4475
  %4484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4485:                                             ; preds = %4461, %4467
  %4486 = phi ptr [ %4474, %4467 ], [ %4454, %4461 ]
  %4487 = phi i32 [ %4473, %4467 ], [ 1, %4461 ]
  %4488 = load i32, ptr %4486, align 4, !tbaa !6
  %4489 = add nsw i32 %4488, %4487
  store i32 %4489, ptr %4486, align 4, !tbaa !6
  br label %4490

4490:                                             ; preds = %4477, %4485, %4450, %4427
  %4491 = icmp eq i32 %4442, %5
  br i1 %4491, label %5544, label %4353, !llvm.loop !1269

4492:                                             ; preds = %4336, %4631
  %4493 = phi float [ 0.000000e+00, %4336 ], [ %4579, %4631 ]
  %4494 = phi i32 [ 0, %4336 ], [ %4580, %4631 ]
  %4495 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4337, label %4496, label %4565

4496:                                             ; preds = %4492, %4555
  %4497 = phi i32 [ %4564, %4555 ], [ 0, %4492 ]
  %4498 = phi i64 [ %4506, %4555 ], [ %4341, %4492 ]
  %4499 = phi i64 [ %4563, %4555 ], [ %4340, %4492 ]
  %4500 = phi i32 [ %4561, %4555 ], [ %4495, %4492 ]
  %4501 = sub i32 %4339, %4497
  %4502 = tail call i32 @llvm.smin.i32(i32 %4501, i32 0)
  %4503 = sub i32 %4501, %4502
  %4504 = zext i32 %4503 to i64
  %4505 = add nuw nsw i64 %4504, 1
  %4506 = add nsw i64 %4498, -1
  %4507 = icmp ult i32 %4503, 31
  br i1 %4507, label %4543, label %4508

4508:                                             ; preds = %4496
  %4509 = and i64 %4505, 8589934560
  %4510 = sub i64 %4499, %4509
  br label %4511

4511:                                             ; preds = %4511, %4508
  %4512 = phi i64 [ 0, %4508 ], [ %4535, %4511 ]
  %4513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4508 ], [ %4531, %4511 ]
  %4514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4508 ], [ %4532, %4511 ]
  %4515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4508 ], [ %4533, %4511 ]
  %4516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4508 ], [ %4534, %4511 ]
  %4517 = sub i64 %4499, %4512
  %4518 = getelementptr inbounds i32, ptr %11, i64 %4517
  %4519 = getelementptr inbounds i32, ptr %4518, i64 -7
  %4520 = load <8 x i32>, ptr %4519, align 4, !tbaa !6
  %4521 = shufflevector <8 x i32> %4520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4522 = getelementptr inbounds i32, ptr %4518, i64 -15
  %4523 = load <8 x i32>, ptr %4522, align 4, !tbaa !6
  %4524 = shufflevector <8 x i32> %4523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4525 = getelementptr inbounds i32, ptr %4518, i64 -23
  %4526 = load <8 x i32>, ptr %4525, align 4, !tbaa !6
  %4527 = shufflevector <8 x i32> %4526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4528 = getelementptr inbounds i32, ptr %4518, i64 -31
  %4529 = load <8 x i32>, ptr %4528, align 4, !tbaa !6
  %4530 = shufflevector <8 x i32> %4529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4531 = mul <8 x i32> %4521, %4513
  %4532 = mul <8 x i32> %4524, %4514
  %4533 = mul <8 x i32> %4527, %4515
  %4534 = mul <8 x i32> %4530, %4516
  %4535 = add nuw i64 %4512, 32
  %4536 = icmp eq i64 %4535, %4509
  br i1 %4536, label %4537, label %4511, !llvm.loop !1270

4537:                                             ; preds = %4511
  %4538 = mul <8 x i32> %4532, %4531
  %4539 = mul <8 x i32> %4533, %4538
  %4540 = mul <8 x i32> %4534, %4539
  %4541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4540)
  %4542 = icmp eq i64 %4505, %4509
  br i1 %4542, label %4555, label %4543

4543:                                             ; preds = %4496, %4537
  %4544 = phi i64 [ %4499, %4496 ], [ %4510, %4537 ]
  %4545 = phi i32 [ 1, %4496 ], [ %4541, %4537 ]
  br label %4546

4546:                                             ; preds = %4543, %4546
  %4547 = phi i64 [ %4552, %4546 ], [ %4544, %4543 ]
  %4548 = phi i32 [ %4551, %4546 ], [ %4545, %4543 ]
  %4549 = getelementptr inbounds i32, ptr %11, i64 %4547
  %4550 = load i32, ptr %4549, align 4, !tbaa !6
  %4551 = mul nsw i32 %4550, %4548
  %4552 = add nsw i64 %4547, -1
  %4553 = trunc i64 %4547 to i32
  %4554 = icmp sgt i32 %4553, 0
  br i1 %4554, label %4546, label %4555, !llvm.loop !1271

4555:                                             ; preds = %4546, %4537
  %4556 = phi i32 [ %4541, %4537 ], [ %4551, %4546 ]
  %4557 = and i64 %4506, 4294967295
  %4558 = getelementptr inbounds i32, ptr %6, i64 %4557
  %4559 = load i32, ptr %4558, align 4, !tbaa !6
  %4560 = mul nsw i32 %4559, %4556
  %4561 = add nsw i32 %4560, %4500
  %4562 = icmp sgt i64 %4498, 2
  %4563 = add nsw i64 %4499, -1
  %4564 = add i32 %4497, 1
  br i1 %4562, label %4496, label %4565, !llvm.loop !1272

4565:                                             ; preds = %4555, %4492
  %4566 = phi i32 [ %4495, %4492 ], [ %4561, %4555 ]
  %4567 = icmp slt i32 %4566, %5
  br i1 %4567, label %4570, label %4568

4568:                                             ; preds = %4565
  %4569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

4570:                                             ; preds = %4565
  %4571 = sext i32 %4566 to i64
  %4572 = getelementptr inbounds float, ptr %4321, i64 %4571
  %4573 = load float, ptr %4572, align 4, !tbaa !163
  %4574 = fpext float %4493 to double
  %4575 = fpext float %4573 to double
  %4576 = fmul fast double %4575, %4575
  %4577 = fmul fast double %4576, %4576
  %4578 = fadd fast double %4577, %4574
  %4579 = fptrunc double %4578 to float
  store float %4579, ptr %4323, align 4, !tbaa !163
  %4580 = add nuw nsw i32 %4494, 1
  br i1 %4338, label %4581, label %4631

4581:                                             ; preds = %4570
  %4582 = load i32, ptr %4, align 4, !tbaa !6
  %4583 = load i32, ptr %12, align 4, !tbaa !6
  %4584 = add nsw i32 %4583, -1
  %4585 = icmp slt i32 %4582, %4584
  br i1 %4585, label %4608, label %4586

4586:                                             ; preds = %4581
  %4587 = icmp eq i32 %4582, %4584
  br i1 %4587, label %4588, label %4624

4588:                                             ; preds = %4586
  store i32 0, ptr %4, align 4, !tbaa !6
  %4589 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4589, ptr %6, align 4, !tbaa !6
  br i1 %4343, label %4631, label %4590

4590:                                             ; preds = %4588, %4618
  %4591 = phi i64 [ %4622, %4618 ], [ 1, %4588 ]
  %4592 = getelementptr inbounds i32, ptr %4, i64 %4591
  %4593 = load i32, ptr %4592, align 4, !tbaa !6
  %4594 = getelementptr inbounds i32, ptr %12, i64 %4591
  %4595 = load i32, ptr %4594, align 4, !tbaa !6
  %4596 = add nsw i32 %4595, -1
  %4597 = icmp slt i32 %4593, %4596
  br i1 %4597, label %4598, label %4616

4598:                                             ; preds = %4590
  br i1 %4585, label %4608, label %4599

4599:                                             ; preds = %4598
  %4600 = shl i64 %4591, 32
  %4601 = add i64 %4600, -4294967296
  %4602 = ashr exact i64 %4601, 32
  %4603 = getelementptr inbounds i32, ptr %7, i64 %4602
  %4604 = load i32, ptr %4603, align 4, !tbaa !6
  %4605 = getelementptr inbounds i32, ptr %6, i64 %4591
  %4606 = load i32, ptr %4605, align 4, !tbaa !6
  %4607 = add nsw i32 %4606, %4604
  store i32 %4607, ptr %4605, align 4, !tbaa !6
  br label %4626

4608:                                             ; preds = %4581, %4598
  %4609 = phi i32 [ %4593, %4598 ], [ %4582, %4581 ]
  %4610 = phi ptr [ %4592, %4598 ], [ %4, %4581 ]
  %4611 = phi i64 [ %4591, %4598 ], [ 0, %4581 ]
  %4612 = add nsw i32 %4609, 1
  store i32 %4612, ptr %4610, align 4, !tbaa !6
  %4613 = getelementptr inbounds i32, ptr %7, i64 %4611
  %4614 = load i32, ptr %4613, align 4, !tbaa !6
  %4615 = getelementptr inbounds i32, ptr %6, i64 %4611
  br label %4626

4616:                                             ; preds = %4590
  %4617 = icmp eq i32 %4593, %4596
  br i1 %4617, label %4618, label %4624

4618:                                             ; preds = %4616
  store i32 0, ptr %4592, align 4, !tbaa !6
  %4619 = getelementptr inbounds i32, ptr %8, i64 %4591
  %4620 = load i32, ptr %4619, align 4, !tbaa !6
  %4621 = getelementptr inbounds i32, ptr %6, i64 %4591
  store i32 %4620, ptr %4621, align 4, !tbaa !6
  %4622 = add nuw nsw i64 %4591, 1
  %4623 = icmp eq i64 %4622, %4341
  br i1 %4623, label %4631, label %4590, !llvm.loop !1273

4624:                                             ; preds = %4586, %4616
  %4625 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4626:                                             ; preds = %4599, %4608
  %4627 = phi ptr [ %4615, %4608 ], [ %4592, %4599 ]
  %4628 = phi i32 [ %4614, %4608 ], [ 1, %4599 ]
  %4629 = load i32, ptr %4627, align 4, !tbaa !6
  %4630 = add nsw i32 %4629, %4628
  store i32 %4630, ptr %4627, align 4, !tbaa !6
  br label %4631

4631:                                             ; preds = %4618, %4626, %4588, %4570
  %4632 = icmp eq i32 %4580, %5
  br i1 %4632, label %5544, label %4492, !llvm.loop !1274

4633:                                             ; preds = %4329
  %4634 = getelementptr inbounds i32, ptr %3, i64 %19
  %4635 = load i32, ptr %4634, align 4, !tbaa !6
  %4636 = icmp eq i32 %4635, 0
  %4637 = icmp sgt i32 %5, 0
  br i1 %4636, label %4647, label %4638

4638:                                             ; preds = %4633
  br i1 %4637, label %4639, label %5544

4639:                                             ; preds = %4638
  %4640 = icmp sgt i32 %13, 1
  %4641 = icmp sgt i32 %13, 0
  %4642 = add i32 %13, -2
  %4643 = zext i32 %4642 to i64
  %4644 = zext i32 %13 to i64
  %4645 = add nuw i32 %5, 1
  %4646 = icmp eq i32 %13, 1
  br label %4789

4647:                                             ; preds = %4633
  br i1 %4637, label %4648, label %5544

4648:                                             ; preds = %4647
  %4649 = icmp sgt i32 %13, 1
  %4650 = icmp sgt i32 %13, 0
  %4651 = add i32 %13, -2
  %4652 = zext i32 %4651 to i64
  %4653 = zext i32 %13 to i64
  %4654 = add nuw i32 %5, 1
  %4655 = icmp eq i32 %13, 1
  br label %4656

4656:                                             ; preds = %4648, %4787
  %4657 = phi float [ 0.000000e+00, %4648 ], [ %4737, %4787 ]
  %4658 = phi i32 [ 0, %4648 ], [ %4739, %4787 ]
  %4659 = phi double [ 0.000000e+00, %4648 ], [ %4738, %4787 ]
  %4660 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4649, label %4661, label %4730

4661:                                             ; preds = %4656, %4720
  %4662 = phi i32 [ %4729, %4720 ], [ 0, %4656 ]
  %4663 = phi i64 [ %4671, %4720 ], [ %4653, %4656 ]
  %4664 = phi i64 [ %4728, %4720 ], [ %4652, %4656 ]
  %4665 = phi i32 [ %4726, %4720 ], [ %4660, %4656 ]
  %4666 = sub i32 %4651, %4662
  %4667 = tail call i32 @llvm.smin.i32(i32 %4666, i32 0)
  %4668 = sub i32 %4666, %4667
  %4669 = zext i32 %4668 to i64
  %4670 = add nuw nsw i64 %4669, 1
  %4671 = add nsw i64 %4663, -1
  %4672 = icmp ult i32 %4668, 31
  br i1 %4672, label %4708, label %4673

4673:                                             ; preds = %4661
  %4674 = and i64 %4670, 8589934560
  %4675 = sub i64 %4664, %4674
  br label %4676

4676:                                             ; preds = %4676, %4673
  %4677 = phi i64 [ 0, %4673 ], [ %4700, %4676 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4673 ], [ %4696, %4676 ]
  %4679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4673 ], [ %4697, %4676 ]
  %4680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4673 ], [ %4698, %4676 ]
  %4681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4673 ], [ %4699, %4676 ]
  %4682 = sub i64 %4664, %4677
  %4683 = getelementptr inbounds i32, ptr %9, i64 %4682
  %4684 = getelementptr inbounds i32, ptr %4683, i64 -7
  %4685 = load <8 x i32>, ptr %4684, align 4, !tbaa !6
  %4686 = shufflevector <8 x i32> %4685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4687 = getelementptr inbounds i32, ptr %4683, i64 -15
  %4688 = load <8 x i32>, ptr %4687, align 4, !tbaa !6
  %4689 = shufflevector <8 x i32> %4688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4690 = getelementptr inbounds i32, ptr %4683, i64 -23
  %4691 = load <8 x i32>, ptr %4690, align 4, !tbaa !6
  %4692 = shufflevector <8 x i32> %4691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4693 = getelementptr inbounds i32, ptr %4683, i64 -31
  %4694 = load <8 x i32>, ptr %4693, align 4, !tbaa !6
  %4695 = shufflevector <8 x i32> %4694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4696 = mul <8 x i32> %4686, %4678
  %4697 = mul <8 x i32> %4689, %4679
  %4698 = mul <8 x i32> %4692, %4680
  %4699 = mul <8 x i32> %4695, %4681
  %4700 = add nuw i64 %4677, 32
  %4701 = icmp eq i64 %4700, %4674
  br i1 %4701, label %4702, label %4676, !llvm.loop !1275

4702:                                             ; preds = %4676
  %4703 = mul <8 x i32> %4697, %4696
  %4704 = mul <8 x i32> %4698, %4703
  %4705 = mul <8 x i32> %4699, %4704
  %4706 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4705)
  %4707 = icmp eq i64 %4670, %4674
  br i1 %4707, label %4720, label %4708

4708:                                             ; preds = %4661, %4702
  %4709 = phi i64 [ %4664, %4661 ], [ %4675, %4702 ]
  %4710 = phi i32 [ 1, %4661 ], [ %4706, %4702 ]
  br label %4711

4711:                                             ; preds = %4708, %4711
  %4712 = phi i64 [ %4717, %4711 ], [ %4709, %4708 ]
  %4713 = phi i32 [ %4716, %4711 ], [ %4710, %4708 ]
  %4714 = getelementptr inbounds i32, ptr %9, i64 %4712
  %4715 = load i32, ptr %4714, align 4, !tbaa !6
  %4716 = mul nsw i32 %4715, %4713
  %4717 = add nsw i64 %4712, -1
  %4718 = trunc i64 %4712 to i32
  %4719 = icmp sgt i32 %4718, 0
  br i1 %4719, label %4711, label %4720, !llvm.loop !1276

4720:                                             ; preds = %4711, %4702
  %4721 = phi i32 [ %4706, %4702 ], [ %4716, %4711 ]
  %4722 = and i64 %4671, 4294967295
  %4723 = getelementptr inbounds i32, ptr %6, i64 %4722
  %4724 = load i32, ptr %4723, align 4, !tbaa !6
  %4725 = mul nsw i32 %4724, %4721
  %4726 = add nsw i32 %4725, %4665
  %4727 = icmp sgt i64 %4663, 2
  %4728 = add nsw i64 %4664, -1
  %4729 = add i32 %4662, 1
  br i1 %4727, label %4661, label %4730, !llvm.loop !1277

4730:                                             ; preds = %4720, %4656
  %4731 = phi i32 [ %4660, %4656 ], [ %4726, %4720 ]
  %4732 = sext i32 %4731 to i64
  %4733 = getelementptr inbounds float, ptr %4321, i64 %4732
  %4734 = load float, ptr %4733, align 4, !tbaa !163
  %4735 = fmul fast float %4734, %4734
  %4736 = fmul fast float %4735, %4735
  %4737 = fadd fast float %4736, %4657
  store float %4737, ptr %4323, align 4, !tbaa !163
  %4738 = fadd fast double %4659, 1.000000e+00
  %4739 = add nuw nsw i32 %4658, 1
  br i1 %4650, label %4740, label %4787

4740:                                             ; preds = %4730
  %4741 = load i32, ptr %4, align 4, !tbaa !6
  %4742 = load i32, ptr %12, align 4, !tbaa !6
  %4743 = add nsw i32 %4742, -1
  %4744 = icmp slt i32 %4741, %4743
  br i1 %4744, label %4764, label %4745

4745:                                             ; preds = %4740
  %4746 = icmp eq i32 %4741, %4743
  br i1 %4746, label %4747, label %4780

4747:                                             ; preds = %4745
  store i32 0, ptr %4, align 4, !tbaa !6
  %4748 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4748, ptr %6, align 4, !tbaa !6
  br i1 %4655, label %4787, label %4749

4749:                                             ; preds = %4747, %4774
  %4750 = phi i64 [ %4778, %4774 ], [ 1, %4747 ]
  %4751 = getelementptr inbounds i32, ptr %4, i64 %4750
  %4752 = load i32, ptr %4751, align 4, !tbaa !6
  %4753 = getelementptr inbounds i32, ptr %12, i64 %4750
  %4754 = load i32, ptr %4753, align 4, !tbaa !6
  %4755 = add nsw i32 %4754, -1
  %4756 = icmp slt i32 %4752, %4755
  br i1 %4756, label %4757, label %4772

4757:                                             ; preds = %4749
  br i1 %4744, label %4764, label %4758

4758:                                             ; preds = %4757
  %4759 = getelementptr inbounds i32, ptr %7, i64 %4750
  %4760 = load i32, ptr %4759, align 4, !tbaa !6
  %4761 = getelementptr inbounds i32, ptr %6, i64 %4750
  %4762 = load i32, ptr %4761, align 4, !tbaa !6
  %4763 = add nsw i32 %4762, %4760
  store i32 %4763, ptr %4761, align 4, !tbaa !6
  br label %4782

4764:                                             ; preds = %4740, %4757
  %4765 = phi i32 [ %4752, %4757 ], [ %4741, %4740 ]
  %4766 = phi ptr [ %4751, %4757 ], [ %4, %4740 ]
  %4767 = phi i64 [ %4750, %4757 ], [ 0, %4740 ]
  %4768 = add nsw i32 %4765, 1
  store i32 %4768, ptr %4766, align 4, !tbaa !6
  %4769 = getelementptr inbounds i32, ptr %7, i64 %4767
  %4770 = load i32, ptr %4769, align 4, !tbaa !6
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4767
  br label %4782

4772:                                             ; preds = %4749
  %4773 = icmp eq i32 %4752, %4755
  br i1 %4773, label %4774, label %4780

4774:                                             ; preds = %4772
  store i32 0, ptr %4751, align 4, !tbaa !6
  %4775 = getelementptr inbounds i32, ptr %8, i64 %4750
  %4776 = load i32, ptr %4775, align 4, !tbaa !6
  %4777 = getelementptr inbounds i32, ptr %6, i64 %4750
  store i32 %4776, ptr %4777, align 4, !tbaa !6
  %4778 = add nuw nsw i64 %4750, 1
  %4779 = icmp eq i64 %4778, %4653
  br i1 %4779, label %4787, label %4749, !llvm.loop !1278

4780:                                             ; preds = %4745, %4772
  %4781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4782:                                             ; preds = %4758, %4764
  %4783 = phi ptr [ %4771, %4764 ], [ %4751, %4758 ]
  %4784 = phi i32 [ %4770, %4764 ], [ 1, %4758 ]
  %4785 = load i32, ptr %4783, align 4, !tbaa !6
  %4786 = add nsw i32 %4785, %4784
  store i32 %4786, ptr %4783, align 4, !tbaa !6
  br label %4787

4787:                                             ; preds = %4774, %4782, %4747, %4730
  %4788 = icmp eq i32 %4739, %5
  br i1 %4788, label %5544, label %4656, !llvm.loop !1279

4789:                                             ; preds = %4639, %4925
  %4790 = phi float [ 0.000000e+00, %4639 ], [ %4873, %4925 ]
  %4791 = phi i32 [ 0, %4639 ], [ %4874, %4925 ]
  %4792 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4640, label %4793, label %4862

4793:                                             ; preds = %4789, %4852
  %4794 = phi i32 [ %4861, %4852 ], [ 0, %4789 ]
  %4795 = phi i64 [ %4803, %4852 ], [ %4644, %4789 ]
  %4796 = phi i64 [ %4860, %4852 ], [ %4643, %4789 ]
  %4797 = phi i32 [ %4858, %4852 ], [ %4792, %4789 ]
  %4798 = sub i32 %4642, %4794
  %4799 = tail call i32 @llvm.smin.i32(i32 %4798, i32 0)
  %4800 = sub i32 %4798, %4799
  %4801 = zext i32 %4800 to i64
  %4802 = add nuw nsw i64 %4801, 1
  %4803 = add nsw i64 %4795, -1
  %4804 = icmp ult i32 %4800, 31
  br i1 %4804, label %4840, label %4805

4805:                                             ; preds = %4793
  %4806 = and i64 %4802, 8589934560
  %4807 = sub i64 %4796, %4806
  br label %4808

4808:                                             ; preds = %4808, %4805
  %4809 = phi i64 [ 0, %4805 ], [ %4832, %4808 ]
  %4810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4805 ], [ %4828, %4808 ]
  %4811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4805 ], [ %4829, %4808 ]
  %4812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4805 ], [ %4830, %4808 ]
  %4813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4805 ], [ %4831, %4808 ]
  %4814 = sub i64 %4796, %4809
  %4815 = getelementptr inbounds i32, ptr %11, i64 %4814
  %4816 = getelementptr inbounds i32, ptr %4815, i64 -7
  %4817 = load <8 x i32>, ptr %4816, align 4, !tbaa !6
  %4818 = shufflevector <8 x i32> %4817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4819 = getelementptr inbounds i32, ptr %4815, i64 -15
  %4820 = load <8 x i32>, ptr %4819, align 4, !tbaa !6
  %4821 = shufflevector <8 x i32> %4820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4822 = getelementptr inbounds i32, ptr %4815, i64 -23
  %4823 = load <8 x i32>, ptr %4822, align 4, !tbaa !6
  %4824 = shufflevector <8 x i32> %4823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4825 = getelementptr inbounds i32, ptr %4815, i64 -31
  %4826 = load <8 x i32>, ptr %4825, align 4, !tbaa !6
  %4827 = shufflevector <8 x i32> %4826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4828 = mul <8 x i32> %4818, %4810
  %4829 = mul <8 x i32> %4821, %4811
  %4830 = mul <8 x i32> %4824, %4812
  %4831 = mul <8 x i32> %4827, %4813
  %4832 = add nuw i64 %4809, 32
  %4833 = icmp eq i64 %4832, %4806
  br i1 %4833, label %4834, label %4808, !llvm.loop !1280

4834:                                             ; preds = %4808
  %4835 = mul <8 x i32> %4829, %4828
  %4836 = mul <8 x i32> %4830, %4835
  %4837 = mul <8 x i32> %4831, %4836
  %4838 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4837)
  %4839 = icmp eq i64 %4802, %4806
  br i1 %4839, label %4852, label %4840

4840:                                             ; preds = %4793, %4834
  %4841 = phi i64 [ %4796, %4793 ], [ %4807, %4834 ]
  %4842 = phi i32 [ 1, %4793 ], [ %4838, %4834 ]
  br label %4843

4843:                                             ; preds = %4840, %4843
  %4844 = phi i64 [ %4849, %4843 ], [ %4841, %4840 ]
  %4845 = phi i32 [ %4848, %4843 ], [ %4842, %4840 ]
  %4846 = getelementptr inbounds i32, ptr %11, i64 %4844
  %4847 = load i32, ptr %4846, align 4, !tbaa !6
  %4848 = mul nsw i32 %4847, %4845
  %4849 = add nsw i64 %4844, -1
  %4850 = trunc i64 %4844 to i32
  %4851 = icmp sgt i32 %4850, 0
  br i1 %4851, label %4843, label %4852, !llvm.loop !1281

4852:                                             ; preds = %4843, %4834
  %4853 = phi i32 [ %4838, %4834 ], [ %4848, %4843 ]
  %4854 = and i64 %4803, 4294967295
  %4855 = getelementptr inbounds i32, ptr %6, i64 %4854
  %4856 = load i32, ptr %4855, align 4, !tbaa !6
  %4857 = mul nsw i32 %4856, %4853
  %4858 = add nsw i32 %4857, %4797
  %4859 = icmp sgt i64 %4795, 2
  %4860 = add nsw i64 %4796, -1
  %4861 = add i32 %4794, 1
  br i1 %4859, label %4793, label %4862, !llvm.loop !1282

4862:                                             ; preds = %4852, %4789
  %4863 = phi i32 [ %4792, %4789 ], [ %4858, %4852 ]
  %4864 = icmp slt i32 %4863, %5
  br i1 %4864, label %4867, label %4865

4865:                                             ; preds = %4862
  %4866 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

4867:                                             ; preds = %4862
  %4868 = sext i32 %4863 to i64
  %4869 = getelementptr inbounds float, ptr %4321, i64 %4868
  %4870 = load float, ptr %4869, align 4, !tbaa !163
  %4871 = fmul fast float %4870, %4870
  %4872 = fmul fast float %4871, %4871
  %4873 = fadd fast float %4872, %4790
  store float %4873, ptr %4323, align 4, !tbaa !163
  %4874 = add nuw nsw i32 %4791, 1
  br i1 %4641, label %4875, label %4925

4875:                                             ; preds = %4867
  %4876 = load i32, ptr %4, align 4, !tbaa !6
  %4877 = load i32, ptr %12, align 4, !tbaa !6
  %4878 = add nsw i32 %4877, -1
  %4879 = icmp slt i32 %4876, %4878
  br i1 %4879, label %4902, label %4880

4880:                                             ; preds = %4875
  %4881 = icmp eq i32 %4876, %4878
  br i1 %4881, label %4882, label %4918

4882:                                             ; preds = %4880
  store i32 0, ptr %4, align 4, !tbaa !6
  %4883 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4883, ptr %6, align 4, !tbaa !6
  br i1 %4646, label %4925, label %4884

4884:                                             ; preds = %4882, %4912
  %4885 = phi i64 [ %4916, %4912 ], [ 1, %4882 ]
  %4886 = getelementptr inbounds i32, ptr %4, i64 %4885
  %4887 = load i32, ptr %4886, align 4, !tbaa !6
  %4888 = getelementptr inbounds i32, ptr %12, i64 %4885
  %4889 = load i32, ptr %4888, align 4, !tbaa !6
  %4890 = add nsw i32 %4889, -1
  %4891 = icmp slt i32 %4887, %4890
  br i1 %4891, label %4892, label %4910

4892:                                             ; preds = %4884
  br i1 %4879, label %4902, label %4893

4893:                                             ; preds = %4892
  %4894 = shl i64 %4885, 32
  %4895 = add i64 %4894, -4294967296
  %4896 = ashr exact i64 %4895, 32
  %4897 = getelementptr inbounds i32, ptr %7, i64 %4896
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4885
  %4900 = load i32, ptr %4899, align 4, !tbaa !6
  %4901 = add nsw i32 %4900, %4898
  store i32 %4901, ptr %4899, align 4, !tbaa !6
  br label %4920

4902:                                             ; preds = %4875, %4892
  %4903 = phi i32 [ %4887, %4892 ], [ %4876, %4875 ]
  %4904 = phi ptr [ %4886, %4892 ], [ %4, %4875 ]
  %4905 = phi i64 [ %4885, %4892 ], [ 0, %4875 ]
  %4906 = add nsw i32 %4903, 1
  store i32 %4906, ptr %4904, align 4, !tbaa !6
  %4907 = getelementptr inbounds i32, ptr %7, i64 %4905
  %4908 = load i32, ptr %4907, align 4, !tbaa !6
  %4909 = getelementptr inbounds i32, ptr %6, i64 %4905
  br label %4920

4910:                                             ; preds = %4884
  %4911 = icmp eq i32 %4887, %4890
  br i1 %4911, label %4912, label %4918

4912:                                             ; preds = %4910
  store i32 0, ptr %4886, align 4, !tbaa !6
  %4913 = getelementptr inbounds i32, ptr %8, i64 %4885
  %4914 = load i32, ptr %4913, align 4, !tbaa !6
  %4915 = getelementptr inbounds i32, ptr %6, i64 %4885
  store i32 %4914, ptr %4915, align 4, !tbaa !6
  %4916 = add nuw nsw i64 %4885, 1
  %4917 = icmp eq i64 %4916, %4644
  br i1 %4917, label %4925, label %4884, !llvm.loop !1283

4918:                                             ; preds = %4880, %4910
  %4919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

4920:                                             ; preds = %4893, %4902
  %4921 = phi ptr [ %4909, %4902 ], [ %4886, %4893 ]
  %4922 = phi i32 [ %4908, %4902 ], [ 1, %4893 ]
  %4923 = load i32, ptr %4921, align 4, !tbaa !6
  %4924 = add nsw i32 %4923, %4922
  store i32 %4924, ptr %4921, align 4, !tbaa !6
  br label %4925

4925:                                             ; preds = %4912, %4920, %4882, %4867
  %4926 = icmp eq i32 %4874, %5
  br i1 %4926, label %5544, label %4789, !llvm.loop !1284

4927:                                             ; preds = %4329
  %4928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2020, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

4929:                                             ; preds = %18
  %4930 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4931 = load ptr, ptr %4930, align 8, !tbaa !10
  %4932 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4933 = load ptr, ptr %4932, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4933, align 8, !tbaa !19
  %4934 = icmp eq i32 %13, 0
  br i1 %4934, label %4935, label %4940

4935:                                             ; preds = %4929
  %4936 = load float, ptr %4931, align 4, !tbaa !163
  %4937 = fpext float %4936 to double
  %4938 = fmul fast double %4937, %4937
  %4939 = fmul fast double %4938, %4938
  store double %4939, ptr %4933, align 8, !tbaa !19
  br label %5544

4940:                                             ; preds = %4929
  switch i32 %1, label %5536 [
    i32 1, label %4941
    i32 0, label %5240
  ]

4941:                                             ; preds = %4940
  %4942 = getelementptr inbounds i32, ptr %3, i64 %19
  %4943 = load i32, ptr %4942, align 4, !tbaa !6
  %4944 = icmp eq i32 %4943, 0
  %4945 = icmp sgt i32 %5, 0
  br i1 %4944, label %4955, label %4946

4946:                                             ; preds = %4941
  br i1 %4945, label %4947, label %5544

4947:                                             ; preds = %4946
  %4948 = icmp sgt i32 %13, 1
  %4949 = icmp sgt i32 %13, 0
  %4950 = add i32 %13, -2
  %4951 = zext i32 %4950 to i64
  %4952 = zext i32 %13 to i64
  %4953 = add nuw i32 %5, 1
  %4954 = icmp eq i32 %13, 1
  br label %5101

4955:                                             ; preds = %4941
  br i1 %4945, label %4956, label %5544

4956:                                             ; preds = %4955
  %4957 = icmp sgt i32 %13, 1
  %4958 = icmp sgt i32 %13, 0
  %4959 = add i32 %13, -2
  %4960 = zext i32 %4959 to i64
  %4961 = zext i32 %13 to i64
  %4962 = add nuw i32 %5, 1
  %4963 = icmp eq i32 %13, 1
  br label %4964

4964:                                             ; preds = %4956, %5099
  %4965 = phi double [ 0.000000e+00, %4956 ], [ %5049, %5099 ]
  %4966 = phi i32 [ 0, %4956 ], [ %5051, %5099 ]
  %4967 = phi double [ 0.000000e+00, %4956 ], [ %5050, %5099 ]
  %4968 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4957, label %4969, label %5038

4969:                                             ; preds = %4964, %5028
  %4970 = phi i32 [ %5037, %5028 ], [ 0, %4964 ]
  %4971 = phi i64 [ %4979, %5028 ], [ %4961, %4964 ]
  %4972 = phi i64 [ %5036, %5028 ], [ %4960, %4964 ]
  %4973 = phi i32 [ %5034, %5028 ], [ %4968, %4964 ]
  %4974 = sub i32 %4959, %4970
  %4975 = tail call i32 @llvm.smin.i32(i32 %4974, i32 0)
  %4976 = sub i32 %4974, %4975
  %4977 = zext i32 %4976 to i64
  %4978 = add nuw nsw i64 %4977, 1
  %4979 = add nsw i64 %4971, -1
  %4980 = icmp ult i32 %4976, 31
  br i1 %4980, label %5016, label %4981

4981:                                             ; preds = %4969
  %4982 = and i64 %4978, 8589934560
  %4983 = sub i64 %4972, %4982
  br label %4984

4984:                                             ; preds = %4984, %4981
  %4985 = phi i64 [ 0, %4981 ], [ %5008, %4984 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4981 ], [ %5004, %4984 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4981 ], [ %5005, %4984 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4981 ], [ %5006, %4984 ]
  %4989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4981 ], [ %5007, %4984 ]
  %4990 = sub i64 %4972, %4985
  %4991 = getelementptr inbounds i32, ptr %9, i64 %4990
  %4992 = getelementptr inbounds i32, ptr %4991, i64 -7
  %4993 = load <8 x i32>, ptr %4992, align 4, !tbaa !6
  %4994 = shufflevector <8 x i32> %4993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4995 = getelementptr inbounds i32, ptr %4991, i64 -15
  %4996 = load <8 x i32>, ptr %4995, align 4, !tbaa !6
  %4997 = shufflevector <8 x i32> %4996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4998 = getelementptr inbounds i32, ptr %4991, i64 -23
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !6
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = getelementptr inbounds i32, ptr %4991, i64 -31
  %5002 = load <8 x i32>, ptr %5001, align 4, !tbaa !6
  %5003 = shufflevector <8 x i32> %5002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5004 = mul <8 x i32> %4994, %4986
  %5005 = mul <8 x i32> %4997, %4987
  %5006 = mul <8 x i32> %5000, %4988
  %5007 = mul <8 x i32> %5003, %4989
  %5008 = add nuw i64 %4985, 32
  %5009 = icmp eq i64 %5008, %4982
  br i1 %5009, label %5010, label %4984, !llvm.loop !1285

5010:                                             ; preds = %4984
  %5011 = mul <8 x i32> %5005, %5004
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = mul <8 x i32> %5007, %5012
  %5014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5013)
  %5015 = icmp eq i64 %4978, %4982
  br i1 %5015, label %5028, label %5016

5016:                                             ; preds = %4969, %5010
  %5017 = phi i64 [ %4972, %4969 ], [ %4983, %5010 ]
  %5018 = phi i32 [ 1, %4969 ], [ %5014, %5010 ]
  br label %5019

5019:                                             ; preds = %5016, %5019
  %5020 = phi i64 [ %5025, %5019 ], [ %5017, %5016 ]
  %5021 = phi i32 [ %5024, %5019 ], [ %5018, %5016 ]
  %5022 = getelementptr inbounds i32, ptr %9, i64 %5020
  %5023 = load i32, ptr %5022, align 4, !tbaa !6
  %5024 = mul nsw i32 %5023, %5021
  %5025 = add nsw i64 %5020, -1
  %5026 = trunc i64 %5020 to i32
  %5027 = icmp sgt i32 %5026, 0
  br i1 %5027, label %5019, label %5028, !llvm.loop !1286

5028:                                             ; preds = %5019, %5010
  %5029 = phi i32 [ %5014, %5010 ], [ %5024, %5019 ]
  %5030 = and i64 %4979, 4294967295
  %5031 = getelementptr inbounds i32, ptr %6, i64 %5030
  %5032 = load i32, ptr %5031, align 4, !tbaa !6
  %5033 = mul nsw i32 %5032, %5029
  %5034 = add nsw i32 %5033, %4973
  %5035 = icmp sgt i64 %4971, 2
  %5036 = add nsw i64 %4972, -1
  %5037 = add i32 %4970, 1
  br i1 %5035, label %4969, label %5038, !llvm.loop !1287

5038:                                             ; preds = %5028, %4964
  %5039 = phi i32 [ %4968, %4964 ], [ %5034, %5028 ]
  %5040 = sext i32 %5039 to i64
  %5041 = getelementptr inbounds double, ptr %2, i64 %5040
  %5042 = load double, ptr %5041, align 8, !tbaa !19
  %5043 = getelementptr inbounds float, ptr %4931, i64 %5040
  %5044 = load float, ptr %5043, align 4, !tbaa !163
  %5045 = fpext float %5044 to double
  %5046 = fmul fast double %5042, %5045
  %5047 = fmul fast double %5046, %5046
  %5048 = fmul fast double %5047, %5047
  %5049 = fadd fast double %5048, %4965
  store double %5049, ptr %4933, align 8, !tbaa !19
  %5050 = fadd fast double %5042, %4967
  %5051 = add nuw nsw i32 %4966, 1
  br i1 %4958, label %5052, label %5099

5052:                                             ; preds = %5038
  %5053 = load i32, ptr %4, align 4, !tbaa !6
  %5054 = load i32, ptr %12, align 4, !tbaa !6
  %5055 = add nsw i32 %5054, -1
  %5056 = icmp slt i32 %5053, %5055
  br i1 %5056, label %5076, label %5057

5057:                                             ; preds = %5052
  %5058 = icmp eq i32 %5053, %5055
  br i1 %5058, label %5059, label %5092

5059:                                             ; preds = %5057
  store i32 0, ptr %4, align 4, !tbaa !6
  %5060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5060, ptr %6, align 4, !tbaa !6
  br i1 %4963, label %5099, label %5061

5061:                                             ; preds = %5059, %5086
  %5062 = phi i64 [ %5090, %5086 ], [ 1, %5059 ]
  %5063 = getelementptr inbounds i32, ptr %4, i64 %5062
  %5064 = load i32, ptr %5063, align 4, !tbaa !6
  %5065 = getelementptr inbounds i32, ptr %12, i64 %5062
  %5066 = load i32, ptr %5065, align 4, !tbaa !6
  %5067 = add nsw i32 %5066, -1
  %5068 = icmp slt i32 %5064, %5067
  br i1 %5068, label %5069, label %5084

5069:                                             ; preds = %5061
  br i1 %5056, label %5076, label %5070

5070:                                             ; preds = %5069
  %5071 = getelementptr inbounds i32, ptr %7, i64 %5062
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = getelementptr inbounds i32, ptr %6, i64 %5062
  %5074 = load i32, ptr %5073, align 4, !tbaa !6
  %5075 = add nsw i32 %5074, %5072
  store i32 %5075, ptr %5073, align 4, !tbaa !6
  br label %5094

5076:                                             ; preds = %5052, %5069
  %5077 = phi i32 [ %5064, %5069 ], [ %5053, %5052 ]
  %5078 = phi ptr [ %5063, %5069 ], [ %4, %5052 ]
  %5079 = phi i64 [ %5062, %5069 ], [ 0, %5052 ]
  %5080 = add nsw i32 %5077, 1
  store i32 %5080, ptr %5078, align 4, !tbaa !6
  %5081 = getelementptr inbounds i32, ptr %7, i64 %5079
  %5082 = load i32, ptr %5081, align 4, !tbaa !6
  %5083 = getelementptr inbounds i32, ptr %6, i64 %5079
  br label %5094

5084:                                             ; preds = %5061
  %5085 = icmp eq i32 %5064, %5067
  br i1 %5085, label %5086, label %5092

5086:                                             ; preds = %5084
  store i32 0, ptr %5063, align 4, !tbaa !6
  %5087 = getelementptr inbounds i32, ptr %8, i64 %5062
  %5088 = load i32, ptr %5087, align 4, !tbaa !6
  %5089 = getelementptr inbounds i32, ptr %6, i64 %5062
  store i32 %5088, ptr %5089, align 4, !tbaa !6
  %5090 = add nuw nsw i64 %5062, 1
  %5091 = icmp eq i64 %5090, %4961
  br i1 %5091, label %5099, label %5061, !llvm.loop !1288

5092:                                             ; preds = %5057, %5084
  %5093 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

5094:                                             ; preds = %5070, %5076
  %5095 = phi ptr [ %5083, %5076 ], [ %5063, %5070 ]
  %5096 = phi i32 [ %5082, %5076 ], [ 1, %5070 ]
  %5097 = load i32, ptr %5095, align 4, !tbaa !6
  %5098 = add nsw i32 %5097, %5096
  store i32 %5098, ptr %5095, align 4, !tbaa !6
  br label %5099

5099:                                             ; preds = %5086, %5094, %5059, %5038
  %5100 = icmp eq i32 %5051, %5
  br i1 %5100, label %5544, label %4964, !llvm.loop !1289

5101:                                             ; preds = %4947, %5238
  %5102 = phi double [ 0.000000e+00, %4947 ], [ %5186, %5238 ]
  %5103 = phi i32 [ 0, %4947 ], [ %5187, %5238 ]
  %5104 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4948, label %5105, label %5174

5105:                                             ; preds = %5101, %5164
  %5106 = phi i32 [ %5173, %5164 ], [ 0, %5101 ]
  %5107 = phi i64 [ %5115, %5164 ], [ %4952, %5101 ]
  %5108 = phi i64 [ %5172, %5164 ], [ %4951, %5101 ]
  %5109 = phi i32 [ %5170, %5164 ], [ %5104, %5101 ]
  %5110 = sub i32 %4950, %5106
  %5111 = tail call i32 @llvm.smin.i32(i32 %5110, i32 0)
  %5112 = sub i32 %5110, %5111
  %5113 = zext i32 %5112 to i64
  %5114 = add nuw nsw i64 %5113, 1
  %5115 = add nsw i64 %5107, -1
  %5116 = icmp ult i32 %5112, 31
  br i1 %5116, label %5152, label %5117

5117:                                             ; preds = %5105
  %5118 = and i64 %5114, 8589934560
  %5119 = sub i64 %5108, %5118
  br label %5120

5120:                                             ; preds = %5120, %5117
  %5121 = phi i64 [ 0, %5117 ], [ %5144, %5120 ]
  %5122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5117 ], [ %5140, %5120 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5117 ], [ %5141, %5120 ]
  %5124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5117 ], [ %5142, %5120 ]
  %5125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5117 ], [ %5143, %5120 ]
  %5126 = sub i64 %5108, %5121
  %5127 = getelementptr inbounds i32, ptr %11, i64 %5126
  %5128 = getelementptr inbounds i32, ptr %5127, i64 -7
  %5129 = load <8 x i32>, ptr %5128, align 4, !tbaa !6
  %5130 = shufflevector <8 x i32> %5129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5131 = getelementptr inbounds i32, ptr %5127, i64 -15
  %5132 = load <8 x i32>, ptr %5131, align 4, !tbaa !6
  %5133 = shufflevector <8 x i32> %5132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5134 = getelementptr inbounds i32, ptr %5127, i64 -23
  %5135 = load <8 x i32>, ptr %5134, align 4, !tbaa !6
  %5136 = shufflevector <8 x i32> %5135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5137 = getelementptr inbounds i32, ptr %5127, i64 -31
  %5138 = load <8 x i32>, ptr %5137, align 4, !tbaa !6
  %5139 = shufflevector <8 x i32> %5138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5140 = mul <8 x i32> %5130, %5122
  %5141 = mul <8 x i32> %5133, %5123
  %5142 = mul <8 x i32> %5136, %5124
  %5143 = mul <8 x i32> %5139, %5125
  %5144 = add nuw i64 %5121, 32
  %5145 = icmp eq i64 %5144, %5118
  br i1 %5145, label %5146, label %5120, !llvm.loop !1290

5146:                                             ; preds = %5120
  %5147 = mul <8 x i32> %5141, %5140
  %5148 = mul <8 x i32> %5142, %5147
  %5149 = mul <8 x i32> %5143, %5148
  %5150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5149)
  %5151 = icmp eq i64 %5114, %5118
  br i1 %5151, label %5164, label %5152

5152:                                             ; preds = %5105, %5146
  %5153 = phi i64 [ %5108, %5105 ], [ %5119, %5146 ]
  %5154 = phi i32 [ 1, %5105 ], [ %5150, %5146 ]
  br label %5155

5155:                                             ; preds = %5152, %5155
  %5156 = phi i64 [ %5161, %5155 ], [ %5153, %5152 ]
  %5157 = phi i32 [ %5160, %5155 ], [ %5154, %5152 ]
  %5158 = getelementptr inbounds i32, ptr %11, i64 %5156
  %5159 = load i32, ptr %5158, align 4, !tbaa !6
  %5160 = mul nsw i32 %5159, %5157
  %5161 = add nsw i64 %5156, -1
  %5162 = trunc i64 %5156 to i32
  %5163 = icmp sgt i32 %5162, 0
  br i1 %5163, label %5155, label %5164, !llvm.loop !1291

5164:                                             ; preds = %5155, %5146
  %5165 = phi i32 [ %5150, %5146 ], [ %5160, %5155 ]
  %5166 = and i64 %5115, 4294967295
  %5167 = getelementptr inbounds i32, ptr %6, i64 %5166
  %5168 = load i32, ptr %5167, align 4, !tbaa !6
  %5169 = mul nsw i32 %5168, %5165
  %5170 = add nsw i32 %5169, %5109
  %5171 = icmp sgt i64 %5107, 2
  %5172 = add nsw i64 %5108, -1
  %5173 = add i32 %5106, 1
  br i1 %5171, label %5105, label %5174, !llvm.loop !1292

5174:                                             ; preds = %5164, %5101
  %5175 = phi i32 [ %5104, %5101 ], [ %5170, %5164 ]
  %5176 = icmp slt i32 %5175, %5
  br i1 %5176, label %5179, label %5177

5177:                                             ; preds = %5174
  %5178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

5179:                                             ; preds = %5174
  %5180 = sext i32 %5175 to i64
  %5181 = getelementptr inbounds float, ptr %4931, i64 %5180
  %5182 = load float, ptr %5181, align 4, !tbaa !163
  %5183 = fpext float %5182 to double
  %5184 = fmul fast double %5183, %5183
  %5185 = fmul fast double %5184, %5184
  %5186 = fadd fast double %5185, %5102
  store double %5186, ptr %4933, align 8, !tbaa !19
  %5187 = add nuw nsw i32 %5103, 1
  br i1 %4949, label %5188, label %5238

5188:                                             ; preds = %5179
  %5189 = load i32, ptr %4, align 4, !tbaa !6
  %5190 = load i32, ptr %12, align 4, !tbaa !6
  %5191 = add nsw i32 %5190, -1
  %5192 = icmp slt i32 %5189, %5191
  br i1 %5192, label %5215, label %5193

5193:                                             ; preds = %5188
  %5194 = icmp eq i32 %5189, %5191
  br i1 %5194, label %5195, label %5231

5195:                                             ; preds = %5193
  store i32 0, ptr %4, align 4, !tbaa !6
  %5196 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5196, ptr %6, align 4, !tbaa !6
  br i1 %4954, label %5238, label %5197

5197:                                             ; preds = %5195, %5225
  %5198 = phi i64 [ %5229, %5225 ], [ 1, %5195 ]
  %5199 = getelementptr inbounds i32, ptr %4, i64 %5198
  %5200 = load i32, ptr %5199, align 4, !tbaa !6
  %5201 = getelementptr inbounds i32, ptr %12, i64 %5198
  %5202 = load i32, ptr %5201, align 4, !tbaa !6
  %5203 = add nsw i32 %5202, -1
  %5204 = icmp slt i32 %5200, %5203
  br i1 %5204, label %5205, label %5223

5205:                                             ; preds = %5197
  br i1 %5192, label %5215, label %5206

5206:                                             ; preds = %5205
  %5207 = shl i64 %5198, 32
  %5208 = add i64 %5207, -4294967296
  %5209 = ashr exact i64 %5208, 32
  %5210 = getelementptr inbounds i32, ptr %7, i64 %5209
  %5211 = load i32, ptr %5210, align 4, !tbaa !6
  %5212 = getelementptr inbounds i32, ptr %6, i64 %5198
  %5213 = load i32, ptr %5212, align 4, !tbaa !6
  %5214 = add nsw i32 %5213, %5211
  store i32 %5214, ptr %5212, align 4, !tbaa !6
  br label %5233

5215:                                             ; preds = %5188, %5205
  %5216 = phi i32 [ %5200, %5205 ], [ %5189, %5188 ]
  %5217 = phi ptr [ %5199, %5205 ], [ %4, %5188 ]
  %5218 = phi i64 [ %5198, %5205 ], [ 0, %5188 ]
  %5219 = add nsw i32 %5216, 1
  store i32 %5219, ptr %5217, align 4, !tbaa !6
  %5220 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5221 = load i32, ptr %5220, align 4, !tbaa !6
  %5222 = getelementptr inbounds i32, ptr %6, i64 %5218
  br label %5233

5223:                                             ; preds = %5197
  %5224 = icmp eq i32 %5200, %5203
  br i1 %5224, label %5225, label %5231

5225:                                             ; preds = %5223
  store i32 0, ptr %5199, align 4, !tbaa !6
  %5226 = getelementptr inbounds i32, ptr %8, i64 %5198
  %5227 = load i32, ptr %5226, align 4, !tbaa !6
  %5228 = getelementptr inbounds i32, ptr %6, i64 %5198
  store i32 %5227, ptr %5228, align 4, !tbaa !6
  %5229 = add nuw nsw i64 %5198, 1
  %5230 = icmp eq i64 %5229, %4952
  br i1 %5230, label %5238, label %5197, !llvm.loop !1293

5231:                                             ; preds = %5193, %5223
  %5232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

5233:                                             ; preds = %5206, %5215
  %5234 = phi ptr [ %5222, %5215 ], [ %5199, %5206 ]
  %5235 = phi i32 [ %5221, %5215 ], [ 1, %5206 ]
  %5236 = load i32, ptr %5234, align 4, !tbaa !6
  %5237 = add nsw i32 %5236, %5235
  store i32 %5237, ptr %5234, align 4, !tbaa !6
  br label %5238

5238:                                             ; preds = %5225, %5233, %5195, %5179
  %5239 = icmp eq i32 %5187, %5
  br i1 %5239, label %5544, label %5101, !llvm.loop !1294

5240:                                             ; preds = %4940
  %5241 = getelementptr inbounds i32, ptr %3, i64 %19
  %5242 = load i32, ptr %5241, align 4, !tbaa !6
  %5243 = icmp eq i32 %5242, 0
  %5244 = icmp sgt i32 %5, 0
  br i1 %5243, label %5254, label %5245

5245:                                             ; preds = %5240
  br i1 %5244, label %5246, label %5544

5246:                                             ; preds = %5245
  %5247 = icmp sgt i32 %13, 1
  %5248 = icmp sgt i32 %13, 0
  %5249 = add i32 %13, -2
  %5250 = zext i32 %5249 to i64
  %5251 = zext i32 %13 to i64
  %5252 = add nuw i32 %5, 1
  %5253 = icmp eq i32 %13, 1
  br label %5397

5254:                                             ; preds = %5240
  br i1 %5244, label %5255, label %5544

5255:                                             ; preds = %5254
  %5256 = icmp sgt i32 %13, 1
  %5257 = icmp sgt i32 %13, 0
  %5258 = add i32 %13, -2
  %5259 = zext i32 %5258 to i64
  %5260 = zext i32 %13 to i64
  %5261 = add nuw i32 %5, 1
  %5262 = icmp eq i32 %13, 1
  br label %5263

5263:                                             ; preds = %5255, %5395
  %5264 = phi double [ 0.000000e+00, %5255 ], [ %5345, %5395 ]
  %5265 = phi i32 [ 0, %5255 ], [ %5347, %5395 ]
  %5266 = phi double [ 0.000000e+00, %5255 ], [ %5346, %5395 ]
  %5267 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5256, label %5268, label %5337

5268:                                             ; preds = %5263, %5327
  %5269 = phi i32 [ %5336, %5327 ], [ 0, %5263 ]
  %5270 = phi i64 [ %5278, %5327 ], [ %5260, %5263 ]
  %5271 = phi i64 [ %5335, %5327 ], [ %5259, %5263 ]
  %5272 = phi i32 [ %5333, %5327 ], [ %5267, %5263 ]
  %5273 = sub i32 %5258, %5269
  %5274 = tail call i32 @llvm.smin.i32(i32 %5273, i32 0)
  %5275 = sub i32 %5273, %5274
  %5276 = zext i32 %5275 to i64
  %5277 = add nuw nsw i64 %5276, 1
  %5278 = add nsw i64 %5270, -1
  %5279 = icmp ult i32 %5275, 31
  br i1 %5279, label %5315, label %5280

5280:                                             ; preds = %5268
  %5281 = and i64 %5277, 8589934560
  %5282 = sub i64 %5271, %5281
  br label %5283

5283:                                             ; preds = %5283, %5280
  %5284 = phi i64 [ 0, %5280 ], [ %5307, %5283 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5280 ], [ %5303, %5283 ]
  %5286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5280 ], [ %5304, %5283 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5280 ], [ %5305, %5283 ]
  %5288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5280 ], [ %5306, %5283 ]
  %5289 = sub i64 %5271, %5284
  %5290 = getelementptr inbounds i32, ptr %9, i64 %5289
  %5291 = getelementptr inbounds i32, ptr %5290, i64 -7
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !6
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5290, i64 -15
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !6
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5290, i64 -23
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !6
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = getelementptr inbounds i32, ptr %5290, i64 -31
  %5301 = load <8 x i32>, ptr %5300, align 4, !tbaa !6
  %5302 = shufflevector <8 x i32> %5301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5303 = mul <8 x i32> %5293, %5285
  %5304 = mul <8 x i32> %5296, %5286
  %5305 = mul <8 x i32> %5299, %5287
  %5306 = mul <8 x i32> %5302, %5288
  %5307 = add nuw i64 %5284, 32
  %5308 = icmp eq i64 %5307, %5281
  br i1 %5308, label %5309, label %5283, !llvm.loop !1295

5309:                                             ; preds = %5283
  %5310 = mul <8 x i32> %5304, %5303
  %5311 = mul <8 x i32> %5305, %5310
  %5312 = mul <8 x i32> %5306, %5311
  %5313 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5312)
  %5314 = icmp eq i64 %5277, %5281
  br i1 %5314, label %5327, label %5315

5315:                                             ; preds = %5268, %5309
  %5316 = phi i64 [ %5271, %5268 ], [ %5282, %5309 ]
  %5317 = phi i32 [ 1, %5268 ], [ %5313, %5309 ]
  br label %5318

5318:                                             ; preds = %5315, %5318
  %5319 = phi i64 [ %5324, %5318 ], [ %5316, %5315 ]
  %5320 = phi i32 [ %5323, %5318 ], [ %5317, %5315 ]
  %5321 = getelementptr inbounds i32, ptr %9, i64 %5319
  %5322 = load i32, ptr %5321, align 4, !tbaa !6
  %5323 = mul nsw i32 %5322, %5320
  %5324 = add nsw i64 %5319, -1
  %5325 = trunc i64 %5319 to i32
  %5326 = icmp sgt i32 %5325, 0
  br i1 %5326, label %5318, label %5327, !llvm.loop !1296

5327:                                             ; preds = %5318, %5309
  %5328 = phi i32 [ %5313, %5309 ], [ %5323, %5318 ]
  %5329 = and i64 %5278, 4294967295
  %5330 = getelementptr inbounds i32, ptr %6, i64 %5329
  %5331 = load i32, ptr %5330, align 4, !tbaa !6
  %5332 = mul nsw i32 %5331, %5328
  %5333 = add nsw i32 %5332, %5272
  %5334 = icmp sgt i64 %5270, 2
  %5335 = add nsw i64 %5271, -1
  %5336 = add i32 %5269, 1
  br i1 %5334, label %5268, label %5337, !llvm.loop !1297

5337:                                             ; preds = %5327, %5263
  %5338 = phi i32 [ %5267, %5263 ], [ %5333, %5327 ]
  %5339 = sext i32 %5338 to i64
  %5340 = getelementptr inbounds float, ptr %4931, i64 %5339
  %5341 = load float, ptr %5340, align 4, !tbaa !163
  %5342 = fpext float %5341 to double
  %5343 = fmul fast double %5342, %5342
  %5344 = fmul fast double %5343, %5343
  %5345 = fadd fast double %5344, %5264
  %5346 = fadd fast double %5266, 1.000000e+00
  %5347 = add nuw nsw i32 %5265, 1
  br i1 %5257, label %5348, label %5395

5348:                                             ; preds = %5337
  %5349 = load i32, ptr %4, align 4, !tbaa !6
  %5350 = load i32, ptr %12, align 4, !tbaa !6
  %5351 = add nsw i32 %5350, -1
  %5352 = icmp slt i32 %5349, %5351
  br i1 %5352, label %5372, label %5353

5353:                                             ; preds = %5348
  %5354 = icmp eq i32 %5349, %5351
  br i1 %5354, label %5355, label %5388

5355:                                             ; preds = %5353
  store i32 0, ptr %4, align 4, !tbaa !6
  %5356 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5356, ptr %6, align 4, !tbaa !6
  br i1 %5262, label %5395, label %5357

5357:                                             ; preds = %5355, %5382
  %5358 = phi i64 [ %5386, %5382 ], [ 1, %5355 ]
  %5359 = getelementptr inbounds i32, ptr %4, i64 %5358
  %5360 = load i32, ptr %5359, align 4, !tbaa !6
  %5361 = getelementptr inbounds i32, ptr %12, i64 %5358
  %5362 = load i32, ptr %5361, align 4, !tbaa !6
  %5363 = add nsw i32 %5362, -1
  %5364 = icmp slt i32 %5360, %5363
  br i1 %5364, label %5365, label %5380

5365:                                             ; preds = %5357
  br i1 %5352, label %5372, label %5366

5366:                                             ; preds = %5365
  %5367 = getelementptr inbounds i32, ptr %7, i64 %5358
  %5368 = load i32, ptr %5367, align 4, !tbaa !6
  %5369 = getelementptr inbounds i32, ptr %6, i64 %5358
  %5370 = load i32, ptr %5369, align 4, !tbaa !6
  %5371 = add nsw i32 %5370, %5368
  store i32 %5371, ptr %5369, align 4, !tbaa !6
  br label %5390

5372:                                             ; preds = %5348, %5365
  %5373 = phi i32 [ %5360, %5365 ], [ %5349, %5348 ]
  %5374 = phi ptr [ %5359, %5365 ], [ %4, %5348 ]
  %5375 = phi i64 [ %5358, %5365 ], [ 0, %5348 ]
  %5376 = add nsw i32 %5373, 1
  store i32 %5376, ptr %5374, align 4, !tbaa !6
  %5377 = getelementptr inbounds i32, ptr %7, i64 %5375
  %5378 = load i32, ptr %5377, align 4, !tbaa !6
  %5379 = getelementptr inbounds i32, ptr %6, i64 %5375
  br label %5390

5380:                                             ; preds = %5357
  %5381 = icmp eq i32 %5360, %5363
  br i1 %5381, label %5382, label %5388

5382:                                             ; preds = %5380
  store i32 0, ptr %5359, align 4, !tbaa !6
  %5383 = getelementptr inbounds i32, ptr %8, i64 %5358
  %5384 = load i32, ptr %5383, align 4, !tbaa !6
  %5385 = getelementptr inbounds i32, ptr %6, i64 %5358
  store i32 %5384, ptr %5385, align 4, !tbaa !6
  %5386 = add nuw nsw i64 %5358, 1
  %5387 = icmp eq i64 %5386, %5260
  br i1 %5387, label %5395, label %5357, !llvm.loop !1298

5388:                                             ; preds = %5353, %5380
  store double %5345, ptr %4933, align 8, !tbaa !19
  %5389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

5390:                                             ; preds = %5366, %5372
  %5391 = phi ptr [ %5379, %5372 ], [ %5359, %5366 ]
  %5392 = phi i32 [ %5378, %5372 ], [ 1, %5366 ]
  %5393 = load i32, ptr %5391, align 4, !tbaa !6
  %5394 = add nsw i32 %5393, %5392
  store i32 %5394, ptr %5391, align 4, !tbaa !6
  br label %5395

5395:                                             ; preds = %5382, %5390, %5355, %5337
  %5396 = icmp eq i32 %5347, %5
  br i1 %5396, label %5543, label %5263, !llvm.loop !1299

5397:                                             ; preds = %5246, %5534
  %5398 = phi double [ 0.000000e+00, %5246 ], [ %5482, %5534 ]
  %5399 = phi i32 [ 0, %5246 ], [ %5483, %5534 ]
  %5400 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5247, label %5401, label %5470

5401:                                             ; preds = %5397, %5460
  %5402 = phi i32 [ %5469, %5460 ], [ 0, %5397 ]
  %5403 = phi i64 [ %5411, %5460 ], [ %5251, %5397 ]
  %5404 = phi i64 [ %5468, %5460 ], [ %5250, %5397 ]
  %5405 = phi i32 [ %5466, %5460 ], [ %5400, %5397 ]
  %5406 = sub i32 %5249, %5402
  %5407 = tail call i32 @llvm.smin.i32(i32 %5406, i32 0)
  %5408 = sub i32 %5406, %5407
  %5409 = zext i32 %5408 to i64
  %5410 = add nuw nsw i64 %5409, 1
  %5411 = add nsw i64 %5403, -1
  %5412 = icmp ult i32 %5408, 31
  br i1 %5412, label %5448, label %5413

5413:                                             ; preds = %5401
  %5414 = and i64 %5410, 8589934560
  %5415 = sub i64 %5404, %5414
  br label %5416

5416:                                             ; preds = %5416, %5413
  %5417 = phi i64 [ 0, %5413 ], [ %5440, %5416 ]
  %5418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5413 ], [ %5436, %5416 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5413 ], [ %5437, %5416 ]
  %5420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5413 ], [ %5438, %5416 ]
  %5421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5413 ], [ %5439, %5416 ]
  %5422 = sub i64 %5404, %5417
  %5423 = getelementptr inbounds i32, ptr %11, i64 %5422
  %5424 = getelementptr inbounds i32, ptr %5423, i64 -7
  %5425 = load <8 x i32>, ptr %5424, align 4, !tbaa !6
  %5426 = shufflevector <8 x i32> %5425, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5427 = getelementptr inbounds i32, ptr %5423, i64 -15
  %5428 = load <8 x i32>, ptr %5427, align 4, !tbaa !6
  %5429 = shufflevector <8 x i32> %5428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5430 = getelementptr inbounds i32, ptr %5423, i64 -23
  %5431 = load <8 x i32>, ptr %5430, align 4, !tbaa !6
  %5432 = shufflevector <8 x i32> %5431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5433 = getelementptr inbounds i32, ptr %5423, i64 -31
  %5434 = load <8 x i32>, ptr %5433, align 4, !tbaa !6
  %5435 = shufflevector <8 x i32> %5434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5436 = mul <8 x i32> %5426, %5418
  %5437 = mul <8 x i32> %5429, %5419
  %5438 = mul <8 x i32> %5432, %5420
  %5439 = mul <8 x i32> %5435, %5421
  %5440 = add nuw i64 %5417, 32
  %5441 = icmp eq i64 %5440, %5414
  br i1 %5441, label %5442, label %5416, !llvm.loop !1300

5442:                                             ; preds = %5416
  %5443 = mul <8 x i32> %5437, %5436
  %5444 = mul <8 x i32> %5438, %5443
  %5445 = mul <8 x i32> %5439, %5444
  %5446 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5445)
  %5447 = icmp eq i64 %5410, %5414
  br i1 %5447, label %5460, label %5448

5448:                                             ; preds = %5401, %5442
  %5449 = phi i64 [ %5404, %5401 ], [ %5415, %5442 ]
  %5450 = phi i32 [ 1, %5401 ], [ %5446, %5442 ]
  br label %5451

5451:                                             ; preds = %5448, %5451
  %5452 = phi i64 [ %5457, %5451 ], [ %5449, %5448 ]
  %5453 = phi i32 [ %5456, %5451 ], [ %5450, %5448 ]
  %5454 = getelementptr inbounds i32, ptr %11, i64 %5452
  %5455 = load i32, ptr %5454, align 4, !tbaa !6
  %5456 = mul nsw i32 %5455, %5453
  %5457 = add nsw i64 %5452, -1
  %5458 = trunc i64 %5452 to i32
  %5459 = icmp sgt i32 %5458, 0
  br i1 %5459, label %5451, label %5460, !llvm.loop !1301

5460:                                             ; preds = %5451, %5442
  %5461 = phi i32 [ %5446, %5442 ], [ %5456, %5451 ]
  %5462 = and i64 %5411, 4294967295
  %5463 = getelementptr inbounds i32, ptr %6, i64 %5462
  %5464 = load i32, ptr %5463, align 4, !tbaa !6
  %5465 = mul nsw i32 %5464, %5461
  %5466 = add nsw i32 %5465, %5405
  %5467 = icmp sgt i64 %5403, 2
  %5468 = add nsw i64 %5404, -1
  %5469 = add i32 %5402, 1
  br i1 %5467, label %5401, label %5470, !llvm.loop !1302

5470:                                             ; preds = %5460, %5397
  %5471 = phi i32 [ %5400, %5397 ], [ %5466, %5460 ]
  %5472 = icmp slt i32 %5471, %5
  br i1 %5472, label %5475, label %5473

5473:                                             ; preds = %5470
  %5474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5549

5475:                                             ; preds = %5470
  %5476 = sext i32 %5471 to i64
  %5477 = getelementptr inbounds float, ptr %4931, i64 %5476
  %5478 = load float, ptr %5477, align 4, !tbaa !163
  %5479 = fpext float %5478 to double
  %5480 = fmul fast double %5479, %5479
  %5481 = fmul fast double %5480, %5480
  %5482 = fadd fast double %5481, %5398
  store double %5482, ptr %4933, align 8, !tbaa !19
  %5483 = add nuw nsw i32 %5399, 1
  br i1 %5248, label %5484, label %5534

5484:                                             ; preds = %5475
  %5485 = load i32, ptr %4, align 4, !tbaa !6
  %5486 = load i32, ptr %12, align 4, !tbaa !6
  %5487 = add nsw i32 %5486, -1
  %5488 = icmp slt i32 %5485, %5487
  br i1 %5488, label %5511, label %5489

5489:                                             ; preds = %5484
  %5490 = icmp eq i32 %5485, %5487
  br i1 %5490, label %5491, label %5527

5491:                                             ; preds = %5489
  store i32 0, ptr %4, align 4, !tbaa !6
  %5492 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5492, ptr %6, align 4, !tbaa !6
  br i1 %5253, label %5534, label %5493

5493:                                             ; preds = %5491, %5521
  %5494 = phi i64 [ %5525, %5521 ], [ 1, %5491 ]
  %5495 = getelementptr inbounds i32, ptr %4, i64 %5494
  %5496 = load i32, ptr %5495, align 4, !tbaa !6
  %5497 = getelementptr inbounds i32, ptr %12, i64 %5494
  %5498 = load i32, ptr %5497, align 4, !tbaa !6
  %5499 = add nsw i32 %5498, -1
  %5500 = icmp slt i32 %5496, %5499
  br i1 %5500, label %5501, label %5519

5501:                                             ; preds = %5493
  br i1 %5488, label %5511, label %5502

5502:                                             ; preds = %5501
  %5503 = shl i64 %5494, 32
  %5504 = add i64 %5503, -4294967296
  %5505 = ashr exact i64 %5504, 32
  %5506 = getelementptr inbounds i32, ptr %7, i64 %5505
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = getelementptr inbounds i32, ptr %6, i64 %5494
  %5509 = load i32, ptr %5508, align 4, !tbaa !6
  %5510 = add nsw i32 %5509, %5507
  store i32 %5510, ptr %5508, align 4, !tbaa !6
  br label %5529

5511:                                             ; preds = %5484, %5501
  %5512 = phi i32 [ %5496, %5501 ], [ %5485, %5484 ]
  %5513 = phi ptr [ %5495, %5501 ], [ %4, %5484 ]
  %5514 = phi i64 [ %5494, %5501 ], [ 0, %5484 ]
  %5515 = add nsw i32 %5512, 1
  store i32 %5515, ptr %5513, align 4, !tbaa !6
  %5516 = getelementptr inbounds i32, ptr %7, i64 %5514
  %5517 = load i32, ptr %5516, align 4, !tbaa !6
  %5518 = getelementptr inbounds i32, ptr %6, i64 %5514
  br label %5529

5519:                                             ; preds = %5493
  %5520 = icmp eq i32 %5496, %5499
  br i1 %5520, label %5521, label %5527

5521:                                             ; preds = %5519
  store i32 0, ptr %5495, align 4, !tbaa !6
  %5522 = getelementptr inbounds i32, ptr %8, i64 %5494
  %5523 = load i32, ptr %5522, align 4, !tbaa !6
  %5524 = getelementptr inbounds i32, ptr %6, i64 %5494
  store i32 %5523, ptr %5524, align 4, !tbaa !6
  %5525 = add nuw nsw i64 %5494, 1
  %5526 = icmp eq i64 %5525, %5251
  br i1 %5526, label %5534, label %5493, !llvm.loop !1303

5527:                                             ; preds = %5489, %5519
  %5528 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5549

5529:                                             ; preds = %5502, %5511
  %5530 = phi ptr [ %5518, %5511 ], [ %5495, %5502 ]
  %5531 = phi i32 [ %5517, %5511 ], [ 1, %5502 ]
  %5532 = load i32, ptr %5530, align 4, !tbaa !6
  %5533 = add nsw i32 %5532, %5531
  store i32 %5533, ptr %5530, align 4, !tbaa !6
  br label %5534

5534:                                             ; preds = %5521, %5529, %5491, %5475
  %5535 = icmp eq i32 %5483, %5
  br i1 %5535, label %5544, label %5397, !llvm.loop !1304

5536:                                             ; preds = %4940
  %5537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5544

5538:                                             ; preds = %2038
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  br label %5544

5539:                                             ; preds = %2337
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  br label %5544

5540:                                             ; preds = %3268
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  br label %5544

5541:                                             ; preds = %3567
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  br label %5544

5542:                                             ; preds = %4176
  store double %4126, ptr %3714, align 8, !tbaa !19
  br label %5544

5543:                                             ; preds = %5395
  store double %5345, ptr %4933, align 8, !tbaa !19
  br label %5544

5544:                                             ; preds = %5534, %5238, %5099, %4925, %4787, %4631, %4490, %4315, %4019, %3880, %3706, %3410, %3091, %2952, %2795, %2653, %2476, %2180, %1861, %1722, %1565, %1424, %1247, %1108, %951, %809, %632, %493, %336, %195, %5245, %5254, %5543, %4946, %4955, %4638, %4647, %4335, %4344, %4026, %4035, %5542, %3727, %3736, %3417, %3426, %5541, %3112, %3121, %5540, %2802, %2811, %2497, %2506, %2187, %2196, %5539, %1882, %1891, %5538, %1572, %1581, %1268, %1277, %958, %967, %653, %662, %343, %352, %39, %48, %4935, %5536, %4325, %4927, %3716, %4317, %3101, %3708, %2486, %3093, %1871, %2478, %1257, %1863, %642, %1249, %28, %634, %18
  %5545 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %1863 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %3093 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %3101 ], [ 0.000000e+00, %4317 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %4927 ], [ 0.000000e+00, %4325 ], [ 0.000000e+00, %5536 ], [ 0.000000e+00, %4935 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %967 ], [ 0.000000e+00, %958 ], [ 0.000000e+00, %1277 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %1581 ], [ 0.000000e+00, %1572 ], [ %1989, %5538 ], [ 0.000000e+00, %1891 ], [ 0.000000e+00, %1882 ], [ %2288, %5539 ], [ 0.000000e+00, %2196 ], [ 0.000000e+00, %2187 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2811 ], [ 0.000000e+00, %2802 ], [ %3219, %5540 ], [ 0.000000e+00, %3121 ], [ 0.000000e+00, %3112 ], [ %3518, %5541 ], [ 0.000000e+00, %3426 ], [ 0.000000e+00, %3417 ], [ 0.000000e+00, %3736 ], [ 0.000000e+00, %3727 ], [ %4127, %5542 ], [ 0.000000e+00, %4035 ], [ 0.000000e+00, %4026 ], [ 0.000000e+00, %4344 ], [ 0.000000e+00, %4335 ], [ 0.000000e+00, %4647 ], [ 0.000000e+00, %4638 ], [ 0.000000e+00, %4955 ], [ 0.000000e+00, %4946 ], [ %5346, %5543 ], [ 0.000000e+00, %5254 ], [ 0.000000e+00, %5245 ], [ %146, %195 ], [ 0.000000e+00, %336 ], [ %444, %493 ], [ 0.000000e+00, %632 ], [ %760, %809 ], [ 0.000000e+00, %951 ], [ %1059, %1108 ], [ 0.000000e+00, %1247 ], [ %1375, %1424 ], [ 0.000000e+00, %1565 ], [ %1673, %1722 ], [ 0.000000e+00, %1861 ], [ 0.000000e+00, %2180 ], [ 0.000000e+00, %2476 ], [ %2604, %2653 ], [ 0.000000e+00, %2795 ], [ %2903, %2952 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %3410 ], [ 0.000000e+00, %3706 ], [ %3831, %3880 ], [ 0.000000e+00, %4019 ], [ 0.000000e+00, %4315 ], [ %4441, %4490 ], [ 0.000000e+00, %4631 ], [ %4738, %4787 ], [ 0.000000e+00, %4925 ], [ %5050, %5099 ], [ 0.000000e+00, %5238 ], [ 0.000000e+00, %5534 ]
  %5546 = phi i32 [ %10, %18 ], [ 1, %634 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %642 ], [ 1, %1863 ], [ 1, %1257 ], [ 1, %2478 ], [ 1, %1871 ], [ 1, %3093 ], [ 1, %2486 ], [ 1, %3708 ], [ 1, %3101 ], [ 1, %4317 ], [ 1, %3716 ], [ 1, %4927 ], [ 1, %4325 ], [ 1, %5536 ], [ 1, %4935 ], [ 1, %48 ], [ 1, %39 ], [ 1, %352 ], [ 1, %343 ], [ 1, %662 ], [ 1, %653 ], [ 1, %967 ], [ 1, %958 ], [ 1, %1277 ], [ 1, %1268 ], [ 1, %1581 ], [ 1, %1572 ], [ %1898, %5538 ], [ 1, %1891 ], [ 1, %1882 ], [ %2203, %5539 ], [ 1, %2196 ], [ 1, %2187 ], [ 1, %2506 ], [ 1, %2497 ], [ 1, %2811 ], [ 1, %2802 ], [ %3128, %5540 ], [ 1, %3121 ], [ 1, %3112 ], [ %3433, %5541 ], [ 1, %3426 ], [ 1, %3417 ], [ 1, %3736 ], [ 1, %3727 ], [ %4042, %5542 ], [ 1, %4035 ], [ 1, %4026 ], [ 1, %4344 ], [ 1, %4335 ], [ 1, %4647 ], [ 1, %4638 ], [ 1, %4955 ], [ 1, %4946 ], [ %5261, %5543 ], [ 1, %5254 ], [ 1, %5245 ], [ %55, %195 ], [ %46, %336 ], [ %359, %493 ], [ %350, %632 ], [ %669, %809 ], [ %660, %951 ], [ %974, %1108 ], [ %965, %1247 ], [ %1284, %1424 ], [ %1275, %1565 ], [ %1588, %1722 ], [ %1579, %1861 ], [ %1889, %2180 ], [ %2194, %2476 ], [ %2513, %2653 ], [ %2504, %2795 ], [ %2818, %2952 ], [ %2809, %3091 ], [ %3119, %3410 ], [ %3424, %3706 ], [ %3743, %3880 ], [ %3734, %4019 ], [ %4033, %4315 ], [ %4351, %4490 ], [ %4342, %4631 ], [ %4654, %4787 ], [ %4645, %4925 ], [ %4962, %5099 ], [ %4953, %5238 ], [ %5252, %5534 ]
  %5547 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5546, ptr noundef nonnull @.str.5) #3
  %5548 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5545, ptr noundef nonnull @.str.6) #3
  br label %5549

5549:                                             ; preds = %5092, %5177, %5231, %5388, %5473, %5527, %4483, %4568, %4624, %4780, %4865, %4918, %3873, %3958, %4012, %4169, %4254, %4308, %3261, %3346, %3403, %3560, %3645, %3699, %2646, %2730, %2788, %2945, %3029, %3084, %2031, %2116, %2173, %2330, %2415, %2469, %1417, %1501, %1558, %1715, %1799, %1854, %802, %886, %944, %1101, %1185, %1240, %188, %272, %329, %486, %570, %625, %5544
  %5550 = phi i32 [ 0, %5544 ], [ -1, %625 ], [ -1, %570 ], [ -1, %486 ], [ -1, %329 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1240 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %944 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1854 ], [ -1, %1799 ], [ -1, %1715 ], [ -1, %1558 ], [ -1, %1501 ], [ -1, %1417 ], [ -1, %2469 ], [ -1, %2415 ], [ -1, %2330 ], [ -1, %2173 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3084 ], [ -1, %3029 ], [ -1, %2945 ], [ -1, %2788 ], [ -1, %2730 ], [ -1, %2646 ], [ -1, %3699 ], [ -1, %3645 ], [ -1, %3560 ], [ -1, %3403 ], [ -1, %3346 ], [ -1, %3261 ], [ -1, %4308 ], [ -1, %4254 ], [ -1, %4169 ], [ -1, %4012 ], [ -1, %3958 ], [ -1, %3873 ], [ -1, %4918 ], [ -1, %4865 ], [ -1, %4780 ], [ -1, %4624 ], [ -1, %4568 ], [ -1, %4483 ], [ -1, %5527 ], [ -1, %5473 ], [ -1, %5388 ], [ -1, %5231 ], [ -1, %5177 ], [ -1, %5092 ]
  ret i32 %5550
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm4_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5539 [
    i32 101, label %22
    i32 102, label %636
    i32 103, label %1251
    i32 104, label %1865
    i32 105, label %2480
    i32 106, label %3095
    i32 107, label %3710
    i32 108, label %4314
    i32 109, label %4929
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !19
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %31
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5539

33:                                               ; preds = %22
  switch i32 %1, label %634 [
    i32 1, label %34
    i32 0, label %338
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5539

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %197

48:                                               ; preds = %34
  br i1 %38, label %49, label %5539

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %195
  %58 = phi i32 [ 0, %49 ], [ %147, %195 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %146, %195 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !1305

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !1306

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !1307

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds double, ptr %24, i64 %132
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = fptoui double %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fmul fast double %141, %141
  %143 = fmul fast double %142, %142
  %144 = fadd fast double %143, %139
  %145 = fptoui double %144 to i8
  store i8 %145, ptr %26, align 1, !tbaa !12
  %146 = fadd fast double %134, %59
  %147 = add nuw nsw i32 %58, 1
  br i1 %51, label %148, label %195

148:                                              ; preds = %130
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %56, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %54
  br i1 %187, label %195, label %157, !llvm.loop !1308

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %130
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5539, label %57, !llvm.loop !1309

197:                                              ; preds = %40, %336
  %198 = phi i32 [ 0, %40 ], [ %285, %336 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %45, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %44, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %43, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !1310

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !1311

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !1312

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds double, ptr %24, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !19
  %278 = fptoui double %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = zext i8 %278 to i64
  %281 = mul nuw nsw i64 %280, %280
  %282 = mul nuw nsw i64 %281, %281
  %283 = trunc i64 %282 to i8
  %284 = add i8 %279, %283
  store i8 %284, ptr %26, align 1, !tbaa !12
  %285 = add nuw nsw i32 %198, 1
  br i1 %42, label %286, label %336

286:                                              ; preds = %274
  %287 = load i32, ptr %4, align 4, !tbaa !6
  %288 = load i32, ptr %12, align 4, !tbaa !6
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !6
  %294 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %294, ptr %6, align 4, !tbaa !6
  br i1 %47, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !6
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !6
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !6
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !6
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !6
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %45
  br i1 %328, label %336, label %295, !llvm.loop !1313

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !6
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !6
  br label %336

336:                                              ; preds = %323, %331, %293, %274
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5539, label %197, !llvm.loop !1314

338:                                              ; preds = %33
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !6
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5539

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %495

352:                                              ; preds = %338
  br i1 %342, label %353, label %5539

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %493
  %362 = phi i32 [ 0, %353 ], [ %445, %493 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %444, %493 ]
  %364 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !6
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !1315

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !1316

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !6
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !1317

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds double, ptr %24, i64 %436
  %438 = load double, ptr %437, align 8, !tbaa !19
  %439 = fptoui double %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = mul i8 %439, %439
  %442 = mul i8 %441, %441
  %443 = add i8 %442, %440
  store i8 %443, ptr %26, align 1, !tbaa !12
  %444 = fadd fast double %363, 1.000000e+00
  %445 = add nuw nsw i32 %362, 1
  br i1 %355, label %446, label %493

446:                                              ; preds = %434
  %447 = load i32, ptr %4, align 4, !tbaa !6
  %448 = load i32, ptr %12, align 4, !tbaa !6
  %449 = add nsw i32 %448, -1
  %450 = icmp slt i32 %447, %449
  br i1 %450, label %470, label %451

451:                                              ; preds = %446
  %452 = icmp eq i32 %447, %449
  br i1 %452, label %453, label %486

453:                                              ; preds = %451
  store i32 0, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %454, ptr %6, align 4, !tbaa !6
  br i1 %360, label %493, label %455

455:                                              ; preds = %453, %480
  %456 = phi i64 [ %484, %480 ], [ 1, %453 ]
  %457 = getelementptr inbounds i32, ptr %4, i64 %456
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = getelementptr inbounds i32, ptr %12, i64 %456
  %460 = load i32, ptr %459, align 4, !tbaa !6
  %461 = add nsw i32 %460, -1
  %462 = icmp slt i32 %458, %461
  br i1 %462, label %463, label %478

463:                                              ; preds = %455
  br i1 %450, label %470, label %464

464:                                              ; preds = %463
  %465 = getelementptr inbounds i32, ptr %7, i64 %456
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = getelementptr inbounds i32, ptr %6, i64 %456
  %468 = load i32, ptr %467, align 4, !tbaa !6
  %469 = add nsw i32 %468, %466
  store i32 %469, ptr %467, align 4, !tbaa !6
  br label %488

470:                                              ; preds = %446, %463
  %471 = phi i32 [ %458, %463 ], [ %447, %446 ]
  %472 = phi ptr [ %457, %463 ], [ %4, %446 ]
  %473 = phi i64 [ %456, %463 ], [ 0, %446 ]
  %474 = add nsw i32 %471, 1
  store i32 %474, ptr %472, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %7, i64 %473
  %476 = load i32, ptr %475, align 4, !tbaa !6
  %477 = getelementptr inbounds i32, ptr %6, i64 %473
  br label %488

478:                                              ; preds = %455
  %479 = icmp eq i32 %458, %461
  br i1 %479, label %480, label %486

480:                                              ; preds = %478
  store i32 0, ptr %457, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %8, i64 %456
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %456
  store i32 %482, ptr %483, align 4, !tbaa !6
  %484 = add nuw nsw i64 %456, 1
  %485 = icmp eq i64 %484, %358
  br i1 %485, label %493, label %455, !llvm.loop !1318

486:                                              ; preds = %451, %478
  %487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

488:                                              ; preds = %464, %470
  %489 = phi ptr [ %477, %470 ], [ %457, %464 ]
  %490 = phi i32 [ %476, %470 ], [ 1, %464 ]
  %491 = load i32, ptr %489, align 4, !tbaa !6
  %492 = add nsw i32 %491, %490
  store i32 %492, ptr %489, align 4, !tbaa !6
  br label %493

493:                                              ; preds = %480, %488, %453, %434
  %494 = icmp eq i32 %445, %5
  br i1 %494, label %5539, label %361, !llvm.loop !1319

495:                                              ; preds = %344, %632
  %496 = phi i32 [ 0, %344 ], [ %581, %632 ]
  %497 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %345, label %498, label %567

498:                                              ; preds = %495, %557
  %499 = phi i32 [ %566, %557 ], [ 0, %495 ]
  %500 = phi i64 [ %508, %557 ], [ %349, %495 ]
  %501 = phi i64 [ %565, %557 ], [ %348, %495 ]
  %502 = phi i32 [ %563, %557 ], [ %497, %495 ]
  %503 = sub i32 %347, %499
  %504 = tail call i32 @llvm.smin.i32(i32 %503, i32 0)
  %505 = sub i32 %503, %504
  %506 = zext i32 %505 to i64
  %507 = add nuw nsw i64 %506, 1
  %508 = add nsw i64 %500, -1
  %509 = icmp ult i32 %505, 31
  br i1 %509, label %545, label %510

510:                                              ; preds = %498
  %511 = and i64 %507, 8589934560
  %512 = sub i64 %501, %511
  br label %513

513:                                              ; preds = %513, %510
  %514 = phi i64 [ 0, %510 ], [ %537, %513 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %533, %513 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %534, %513 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %535, %513 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %510 ], [ %536, %513 ]
  %519 = sub i64 %501, %514
  %520 = getelementptr inbounds i32, ptr %11, i64 %519
  %521 = getelementptr inbounds i32, ptr %520, i64 -7
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !6
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %520, i64 -15
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %520, i64 -23
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %520, i64 -31
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = mul <8 x i32> %523, %515
  %534 = mul <8 x i32> %526, %516
  %535 = mul <8 x i32> %529, %517
  %536 = mul <8 x i32> %532, %518
  %537 = add nuw i64 %514, 32
  %538 = icmp eq i64 %537, %511
  br i1 %538, label %539, label %513, !llvm.loop !1320

539:                                              ; preds = %513
  %540 = mul <8 x i32> %534, %533
  %541 = mul <8 x i32> %535, %540
  %542 = mul <8 x i32> %536, %541
  %543 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %542)
  %544 = icmp eq i64 %507, %511
  br i1 %544, label %557, label %545

545:                                              ; preds = %498, %539
  %546 = phi i64 [ %501, %498 ], [ %512, %539 ]
  %547 = phi i32 [ 1, %498 ], [ %543, %539 ]
  br label %548

548:                                              ; preds = %545, %548
  %549 = phi i64 [ %554, %548 ], [ %546, %545 ]
  %550 = phi i32 [ %553, %548 ], [ %547, %545 ]
  %551 = getelementptr inbounds i32, ptr %11, i64 %549
  %552 = load i32, ptr %551, align 4, !tbaa !6
  %553 = mul nsw i32 %552, %550
  %554 = add nsw i64 %549, -1
  %555 = trunc i64 %549 to i32
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %548, label %557, !llvm.loop !1321

557:                                              ; preds = %548, %539
  %558 = phi i32 [ %543, %539 ], [ %553, %548 ]
  %559 = and i64 %508, 4294967295
  %560 = getelementptr inbounds i32, ptr %6, i64 %559
  %561 = load i32, ptr %560, align 4, !tbaa !6
  %562 = mul nsw i32 %561, %558
  %563 = add nsw i32 %562, %502
  %564 = icmp sgt i64 %500, 2
  %565 = add nsw i64 %501, -1
  %566 = add i32 %499, 1
  br i1 %564, label %498, label %567, !llvm.loop !1322

567:                                              ; preds = %557, %495
  %568 = phi i32 [ %497, %495 ], [ %563, %557 ]
  %569 = icmp slt i32 %568, %5
  br i1 %569, label %572, label %570

570:                                              ; preds = %567
  %571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

572:                                              ; preds = %567
  %573 = sext i32 %568 to i64
  %574 = getelementptr inbounds double, ptr %24, i64 %573
  %575 = load double, ptr %574, align 8, !tbaa !19
  %576 = fptoui double %575 to i8
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = mul i8 %576, %576
  %579 = mul i8 %578, %578
  %580 = add i8 %579, %577
  store i8 %580, ptr %26, align 1, !tbaa !12
  %581 = add nuw nsw i32 %496, 1
  br i1 %346, label %582, label %632

582:                                              ; preds = %572
  %583 = load i32, ptr %4, align 4, !tbaa !6
  %584 = load i32, ptr %12, align 4, !tbaa !6
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %583, %585
  br i1 %586, label %609, label %587

587:                                              ; preds = %582
  %588 = icmp eq i32 %583, %585
  br i1 %588, label %589, label %625

589:                                              ; preds = %587
  store i32 0, ptr %4, align 4, !tbaa !6
  %590 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %590, ptr %6, align 4, !tbaa !6
  br i1 %351, label %632, label %591

591:                                              ; preds = %589, %619
  %592 = phi i64 [ %623, %619 ], [ 1, %589 ]
  %593 = getelementptr inbounds i32, ptr %4, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = getelementptr inbounds i32, ptr %12, i64 %592
  %596 = load i32, ptr %595, align 4, !tbaa !6
  %597 = add nsw i32 %596, -1
  %598 = icmp slt i32 %594, %597
  br i1 %598, label %599, label %617

599:                                              ; preds = %591
  br i1 %586, label %609, label %600

600:                                              ; preds = %599
  %601 = shl i64 %592, 32
  %602 = add i64 %601, -4294967296
  %603 = ashr exact i64 %602, 32
  %604 = getelementptr inbounds i32, ptr %7, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = getelementptr inbounds i32, ptr %6, i64 %592
  %607 = load i32, ptr %606, align 4, !tbaa !6
  %608 = add nsw i32 %607, %605
  store i32 %608, ptr %606, align 4, !tbaa !6
  br label %627

609:                                              ; preds = %582, %599
  %610 = phi i32 [ %594, %599 ], [ %583, %582 ]
  %611 = phi ptr [ %593, %599 ], [ %4, %582 ]
  %612 = phi i64 [ %592, %599 ], [ 0, %582 ]
  %613 = add nsw i32 %610, 1
  store i32 %613, ptr %611, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %7, i64 %612
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = getelementptr inbounds i32, ptr %6, i64 %612
  br label %627

617:                                              ; preds = %591
  %618 = icmp eq i32 %594, %597
  br i1 %618, label %619, label %625

619:                                              ; preds = %617
  store i32 0, ptr %593, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %8, i64 %592
  %621 = load i32, ptr %620, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %6, i64 %592
  store i32 %621, ptr %622, align 4, !tbaa !6
  %623 = add nuw nsw i64 %592, 1
  %624 = icmp eq i64 %623, %349
  br i1 %624, label %632, label %591, !llvm.loop !1323

625:                                              ; preds = %587, %617
  %626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

627:                                              ; preds = %600, %609
  %628 = phi ptr [ %616, %609 ], [ %593, %600 ]
  %629 = phi i32 [ %615, %609 ], [ 1, %600 ]
  %630 = load i32, ptr %628, align 4, !tbaa !6
  %631 = add nsw i32 %630, %629
  store i32 %631, ptr %628, align 4, !tbaa !6
  br label %632

632:                                              ; preds = %619, %627, %589, %572
  %633 = icmp eq i32 %581, %5
  br i1 %633, label %5539, label %495, !llvm.loop !1324

634:                                              ; preds = %33
  %635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

636:                                              ; preds = %18
  %637 = getelementptr inbounds ptr, ptr %14, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = getelementptr inbounds ptr, ptr %16, i64 %19
  %640 = load ptr, ptr %639, align 8, !tbaa !10
  store i32 0, ptr %640, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %642, label %647

642:                                              ; preds = %636
  %643 = load double, ptr %638, align 8, !tbaa !19
  %644 = fptosi double %643 to i32
  %645 = mul i32 %644, %644
  %646 = mul i32 %645, %645
  store i32 %646, ptr %640, align 4, !tbaa !6
  br label %5539

647:                                              ; preds = %636
  switch i32 %1, label %1249 [
    i32 1, label %648
    i32 0, label %953
  ]

648:                                              ; preds = %647
  %649 = getelementptr inbounds i32, ptr %3, i64 %19
  %650 = load i32, ptr %649, align 4, !tbaa !6
  %651 = icmp eq i32 %650, 0
  %652 = icmp sgt i32 %5, 0
  br i1 %651, label %662, label %653

653:                                              ; preds = %648
  br i1 %652, label %654, label %5539

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %811

662:                                              ; preds = %648
  br i1 %652, label %663, label %5539

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %671

671:                                              ; preds = %663, %809
  %672 = phi i32 [ 0, %663 ], [ %761, %809 ]
  %673 = phi double [ 0.000000e+00, %663 ], [ %760, %809 ]
  %674 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %675, label %744

675:                                              ; preds = %671, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %671 ]
  %677 = phi i64 [ %685, %734 ], [ %668, %671 ]
  %678 = phi i64 [ %742, %734 ], [ %667, %671 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %671 ]
  %680 = sub i32 %666, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !1325

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !6
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !1326

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !1327

744:                                              ; preds = %734, %671
  %745 = phi i32 [ %674, %671 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !19
  %749 = getelementptr inbounds double, ptr %638, i64 %746
  %750 = load double, ptr %749, align 8, !tbaa !19
  %751 = fptosi double %750 to i32
  %752 = load i32, ptr %640, align 4, !tbaa !6
  %753 = sitofp i32 %752 to double
  %754 = sitofp i32 %751 to double
  %755 = fmul fast double %748, %754
  %756 = fmul fast double %755, %755
  %757 = fmul fast double %756, %756
  %758 = fadd fast double %757, %753
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %640, align 4, !tbaa !6
  %760 = fadd fast double %748, %673
  %761 = add nuw nsw i32 %672, 1
  br i1 %665, label %762, label %809

762:                                              ; preds = %744
  %763 = load i32, ptr %4, align 4, !tbaa !6
  %764 = load i32, ptr %12, align 4, !tbaa !6
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !6
  %770 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %770, ptr %6, align 4, !tbaa !6
  br i1 %670, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !6
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !6
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %668
  br i1 %801, label %809, label %771, !llvm.loop !1328

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !6
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !6
  br label %809

809:                                              ; preds = %796, %804, %769, %744
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5539, label %671, !llvm.loop !1329

811:                                              ; preds = %654, %951
  %812 = phi i32 [ 0, %654 ], [ %900, %951 ]
  %813 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %655, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %659, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %658, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %657, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !6
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !1330

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !6
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !1331

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !6
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !1332

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds double, ptr %638, i64 %889
  %891 = load double, ptr %890, align 8, !tbaa !19
  %892 = fptosi double %891 to i32
  %893 = load i32, ptr %640, align 4, !tbaa !6
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = fmul fast double %895, %895
  %897 = fmul fast double %896, %896
  %898 = fadd fast double %897, %894
  %899 = fptosi double %898 to i32
  store i32 %899, ptr %640, align 4, !tbaa !6
  %900 = add nuw nsw i32 %812, 1
  br i1 %656, label %901, label %951

901:                                              ; preds = %888
  %902 = load i32, ptr %4, align 4, !tbaa !6
  %903 = load i32, ptr %12, align 4, !tbaa !6
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %902, %904
  br i1 %905, label %928, label %906

906:                                              ; preds = %901
  %907 = icmp eq i32 %902, %904
  br i1 %907, label %908, label %944

908:                                              ; preds = %906
  store i32 0, ptr %4, align 4, !tbaa !6
  %909 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %909, ptr %6, align 4, !tbaa !6
  br i1 %661, label %951, label %910

910:                                              ; preds = %908, %938
  %911 = phi i64 [ %942, %938 ], [ 1, %908 ]
  %912 = getelementptr inbounds i32, ptr %4, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %12, i64 %911
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, -1
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %936

918:                                              ; preds = %910
  br i1 %905, label %928, label %919

919:                                              ; preds = %918
  %920 = shl i64 %911, 32
  %921 = add i64 %920, -4294967296
  %922 = ashr exact i64 %921, 32
  %923 = getelementptr inbounds i32, ptr %7, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %911
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = add nsw i32 %926, %924
  store i32 %927, ptr %925, align 4, !tbaa !6
  br label %946

928:                                              ; preds = %901, %918
  %929 = phi i32 [ %913, %918 ], [ %902, %901 ]
  %930 = phi ptr [ %912, %918 ], [ %4, %901 ]
  %931 = phi i64 [ %911, %918 ], [ 0, %901 ]
  %932 = add nsw i32 %929, 1
  store i32 %932, ptr %930, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %7, i64 %931
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %931
  br label %946

936:                                              ; preds = %910
  %937 = icmp eq i32 %913, %916
  br i1 %937, label %938, label %944

938:                                              ; preds = %936
  store i32 0, ptr %912, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %8, i64 %911
  %940 = load i32, ptr %939, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %6, i64 %911
  store i32 %940, ptr %941, align 4, !tbaa !6
  %942 = add nuw nsw i64 %911, 1
  %943 = icmp eq i64 %942, %659
  br i1 %943, label %951, label %910, !llvm.loop !1333

944:                                              ; preds = %906, %936
  %945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

946:                                              ; preds = %919, %928
  %947 = phi ptr [ %935, %928 ], [ %912, %919 ]
  %948 = phi i32 [ %934, %928 ], [ 1, %919 ]
  %949 = load i32, ptr %947, align 4, !tbaa !6
  %950 = add nsw i32 %949, %948
  store i32 %950, ptr %947, align 4, !tbaa !6
  br label %951

951:                                              ; preds = %938, %946, %908, %888
  %952 = icmp eq i32 %900, %5
  br i1 %952, label %5539, label %811, !llvm.loop !1334

953:                                              ; preds = %647
  %954 = getelementptr inbounds i32, ptr %3, i64 %19
  %955 = load i32, ptr %954, align 4, !tbaa !6
  %956 = icmp eq i32 %955, 0
  %957 = icmp sgt i32 %5, 0
  br i1 %956, label %967, label %958

958:                                              ; preds = %953
  br i1 %957, label %959, label %5539

959:                                              ; preds = %958
  %960 = icmp sgt i32 %13, 1
  %961 = icmp sgt i32 %13, 0
  %962 = add i32 %13, -2
  %963 = zext i32 %962 to i64
  %964 = zext i32 %13 to i64
  %965 = add nuw i32 %5, 1
  %966 = icmp eq i32 %13, 1
  br label %1110

967:                                              ; preds = %953
  br i1 %957, label %968, label %5539

968:                                              ; preds = %967
  %969 = icmp sgt i32 %13, 1
  %970 = icmp sgt i32 %13, 0
  %971 = add i32 %13, -2
  %972 = zext i32 %971 to i64
  %973 = zext i32 %13 to i64
  %974 = add nuw i32 %5, 1
  %975 = icmp eq i32 %13, 1
  br label %976

976:                                              ; preds = %968, %1108
  %977 = phi i32 [ 0, %968 ], [ %1060, %1108 ]
  %978 = phi double [ 0.000000e+00, %968 ], [ %1059, %1108 ]
  %979 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %969, label %980, label %1049

980:                                              ; preds = %976, %1039
  %981 = phi i32 [ %1048, %1039 ], [ 0, %976 ]
  %982 = phi i64 [ %990, %1039 ], [ %973, %976 ]
  %983 = phi i64 [ %1047, %1039 ], [ %972, %976 ]
  %984 = phi i32 [ %1045, %1039 ], [ %979, %976 ]
  %985 = sub i32 %971, %981
  %986 = tail call i32 @llvm.smin.i32(i32 %985, i32 0)
  %987 = sub i32 %985, %986
  %988 = zext i32 %987 to i64
  %989 = add nuw nsw i64 %988, 1
  %990 = add nsw i64 %982, -1
  %991 = icmp ult i32 %987, 31
  br i1 %991, label %1027, label %992

992:                                              ; preds = %980
  %993 = and i64 %989, 8589934560
  %994 = sub i64 %983, %993
  br label %995

995:                                              ; preds = %995, %992
  %996 = phi i64 [ 0, %992 ], [ %1019, %995 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1015, %995 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1016, %995 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1017, %995 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1018, %995 ]
  %1001 = sub i64 %983, %996
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1001
  %1003 = getelementptr inbounds i32, ptr %1002, i64 -7
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !6
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %1002, i64 -15
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1002, i64 -23
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1002, i64 -31
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = mul <8 x i32> %1005, %997
  %1016 = mul <8 x i32> %1008, %998
  %1017 = mul <8 x i32> %1011, %999
  %1018 = mul <8 x i32> %1014, %1000
  %1019 = add nuw i64 %996, 32
  %1020 = icmp eq i64 %1019, %993
  br i1 %1020, label %1021, label %995, !llvm.loop !1335

1021:                                             ; preds = %995
  %1022 = mul <8 x i32> %1016, %1015
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1024)
  %1026 = icmp eq i64 %989, %993
  br i1 %1026, label %1039, label %1027

1027:                                             ; preds = %980, %1021
  %1028 = phi i64 [ %983, %980 ], [ %994, %1021 ]
  %1029 = phi i32 [ 1, %980 ], [ %1025, %1021 ]
  br label %1030

1030:                                             ; preds = %1027, %1030
  %1031 = phi i64 [ %1036, %1030 ], [ %1028, %1027 ]
  %1032 = phi i32 [ %1035, %1030 ], [ %1029, %1027 ]
  %1033 = getelementptr inbounds i32, ptr %9, i64 %1031
  %1034 = load i32, ptr %1033, align 4, !tbaa !6
  %1035 = mul nsw i32 %1034, %1032
  %1036 = add nsw i64 %1031, -1
  %1037 = trunc i64 %1031 to i32
  %1038 = icmp sgt i32 %1037, 0
  br i1 %1038, label %1030, label %1039, !llvm.loop !1336

1039:                                             ; preds = %1030, %1021
  %1040 = phi i32 [ %1025, %1021 ], [ %1035, %1030 ]
  %1041 = and i64 %990, 4294967295
  %1042 = getelementptr inbounds i32, ptr %6, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !6
  %1044 = mul nsw i32 %1043, %1040
  %1045 = add nsw i32 %1044, %984
  %1046 = icmp sgt i64 %982, 2
  %1047 = add nsw i64 %983, -1
  %1048 = add i32 %981, 1
  br i1 %1046, label %980, label %1049, !llvm.loop !1337

1049:                                             ; preds = %1039, %976
  %1050 = phi i32 [ %979, %976 ], [ %1045, %1039 ]
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds double, ptr %638, i64 %1051
  %1053 = load double, ptr %1052, align 8, !tbaa !19
  %1054 = fptosi double %1053 to i32
  %1055 = load i32, ptr %640, align 4, !tbaa !6
  %1056 = mul i32 %1054, %1054
  %1057 = mul i32 %1056, %1056
  %1058 = add nsw i32 %1057, %1055
  store i32 %1058, ptr %640, align 4, !tbaa !6
  %1059 = fadd fast double %978, 1.000000e+00
  %1060 = add nuw nsw i32 %977, 1
  br i1 %970, label %1061, label %1108

1061:                                             ; preds = %1049
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %975, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %973
  br i1 %1100, label %1108, label %1070, !llvm.loop !1338

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1049
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %5539, label %976, !llvm.loop !1339

1110:                                             ; preds = %959, %1247
  %1111 = phi i32 [ 0, %959 ], [ %1196, %1247 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %960, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %964, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %963, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %962, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !1340

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !1341

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !1342

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds double, ptr %638, i64 %1188
  %1190 = load double, ptr %1189, align 8, !tbaa !19
  %1191 = fptosi double %1190 to i32
  %1192 = load i32, ptr %640, align 4, !tbaa !6
  %1193 = mul i32 %1191, %1191
  %1194 = mul i32 %1193, %1193
  %1195 = add nsw i32 %1194, %1192
  store i32 %1195, ptr %640, align 4, !tbaa !6
  %1196 = add nuw nsw i32 %1111, 1
  br i1 %961, label %1197, label %1247

1197:                                             ; preds = %1187
  %1198 = load i32, ptr %4, align 4, !tbaa !6
  %1199 = load i32, ptr %12, align 4, !tbaa !6
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !6
  %1205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1205, ptr %6, align 4, !tbaa !6
  br i1 %966, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !6
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !6
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %964
  br i1 %1239, label %1247, label %1206, !llvm.loop !1343

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !6
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !6
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1187
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5539, label %1110, !llvm.loop !1344

1249:                                             ; preds = %647
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !10
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !10
  store i8 0, ptr %1255, align 1, !tbaa !12
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1262

1257:                                             ; preds = %1251
  %1258 = load double, ptr %1253, align 8, !tbaa !19
  %1259 = fptosi double %1258 to i8
  %1260 = mul i8 %1259, %1259
  %1261 = mul i8 %1260, %1260
  store i8 %1261, ptr %1255, align 1, !tbaa !12
  br label %5539

1262:                                             ; preds = %1251
  switch i32 %1, label %1863 [
    i32 1, label %1263
    i32 0, label %1567
  ]

1263:                                             ; preds = %1262
  %1264 = getelementptr inbounds i32, ptr %3, i64 %19
  %1265 = load i32, ptr %1264, align 4, !tbaa !6
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp sgt i32 %5, 0
  br i1 %1266, label %1277, label %1268

1268:                                             ; preds = %1263
  br i1 %1267, label %1269, label %5539

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1426

1277:                                             ; preds = %1263
  br i1 %1267, label %1278, label %5539

1278:                                             ; preds = %1277
  %1279 = icmp sgt i32 %13, 1
  %1280 = icmp sgt i32 %13, 0
  %1281 = add i32 %13, -2
  %1282 = zext i32 %1281 to i64
  %1283 = zext i32 %13 to i64
  %1284 = add nuw i32 %5, 1
  %1285 = icmp eq i32 %13, 1
  br label %1286

1286:                                             ; preds = %1278, %1424
  %1287 = phi i32 [ 0, %1278 ], [ %1376, %1424 ]
  %1288 = phi double [ 0.000000e+00, %1278 ], [ %1375, %1424 ]
  %1289 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1290, label %1359

1290:                                             ; preds = %1286, %1349
  %1291 = phi i32 [ %1358, %1349 ], [ 0, %1286 ]
  %1292 = phi i64 [ %1300, %1349 ], [ %1283, %1286 ]
  %1293 = phi i64 [ %1357, %1349 ], [ %1282, %1286 ]
  %1294 = phi i32 [ %1355, %1349 ], [ %1289, %1286 ]
  %1295 = sub i32 %1281, %1291
  %1296 = tail call i32 @llvm.smin.i32(i32 %1295, i32 0)
  %1297 = sub i32 %1295, %1296
  %1298 = zext i32 %1297 to i64
  %1299 = add nuw nsw i64 %1298, 1
  %1300 = add nsw i64 %1292, -1
  %1301 = icmp ult i32 %1297, 31
  br i1 %1301, label %1337, label %1302

1302:                                             ; preds = %1290
  %1303 = and i64 %1299, 8589934560
  %1304 = sub i64 %1293, %1303
  br label %1305

1305:                                             ; preds = %1305, %1302
  %1306 = phi i64 [ 0, %1302 ], [ %1329, %1305 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1325, %1305 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1326, %1305 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1327, %1305 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1302 ], [ %1328, %1305 ]
  %1311 = sub i64 %1293, %1306
  %1312 = getelementptr inbounds i32, ptr %9, i64 %1311
  %1313 = getelementptr inbounds i32, ptr %1312, i64 -7
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !6
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1312, i64 -15
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1312, i64 -23
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1312, i64 -31
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = mul <8 x i32> %1315, %1307
  %1326 = mul <8 x i32> %1318, %1308
  %1327 = mul <8 x i32> %1321, %1309
  %1328 = mul <8 x i32> %1324, %1310
  %1329 = add nuw i64 %1306, 32
  %1330 = icmp eq i64 %1329, %1303
  br i1 %1330, label %1331, label %1305, !llvm.loop !1345

1331:                                             ; preds = %1305
  %1332 = mul <8 x i32> %1326, %1325
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = mul <8 x i32> %1328, %1333
  %1335 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1334)
  %1336 = icmp eq i64 %1299, %1303
  br i1 %1336, label %1349, label %1337

1337:                                             ; preds = %1290, %1331
  %1338 = phi i64 [ %1293, %1290 ], [ %1304, %1331 ]
  %1339 = phi i32 [ 1, %1290 ], [ %1335, %1331 ]
  br label %1340

1340:                                             ; preds = %1337, %1340
  %1341 = phi i64 [ %1346, %1340 ], [ %1338, %1337 ]
  %1342 = phi i32 [ %1345, %1340 ], [ %1339, %1337 ]
  %1343 = getelementptr inbounds i32, ptr %9, i64 %1341
  %1344 = load i32, ptr %1343, align 4, !tbaa !6
  %1345 = mul nsw i32 %1344, %1342
  %1346 = add nsw i64 %1341, -1
  %1347 = trunc i64 %1341 to i32
  %1348 = icmp sgt i32 %1347, 0
  br i1 %1348, label %1340, label %1349, !llvm.loop !1346

1349:                                             ; preds = %1340, %1331
  %1350 = phi i32 [ %1335, %1331 ], [ %1345, %1340 ]
  %1351 = and i64 %1300, 4294967295
  %1352 = getelementptr inbounds i32, ptr %6, i64 %1351
  %1353 = load i32, ptr %1352, align 4, !tbaa !6
  %1354 = mul nsw i32 %1353, %1350
  %1355 = add nsw i32 %1354, %1294
  %1356 = icmp sgt i64 %1292, 2
  %1357 = add nsw i64 %1293, -1
  %1358 = add i32 %1291, 1
  br i1 %1356, label %1290, label %1359, !llvm.loop !1347

1359:                                             ; preds = %1349, %1286
  %1360 = phi i32 [ %1289, %1286 ], [ %1355, %1349 ]
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds double, ptr %2, i64 %1361
  %1363 = load double, ptr %1362, align 8, !tbaa !19
  %1364 = getelementptr inbounds double, ptr %1253, i64 %1361
  %1365 = load double, ptr %1364, align 8, !tbaa !19
  %1366 = fptosi double %1365 to i8
  %1367 = load i8, ptr %1255, align 1, !tbaa !12
  %1368 = sitofp i8 %1367 to double
  %1369 = sitofp i8 %1366 to double
  %1370 = fmul fast double %1363, %1369
  %1371 = fmul fast double %1370, %1370
  %1372 = fmul fast double %1371, %1371
  %1373 = fadd fast double %1372, %1368
  %1374 = fptosi double %1373 to i8
  store i8 %1374, ptr %1255, align 1, !tbaa !12
  %1375 = fadd fast double %1363, %1288
  %1376 = add nuw nsw i32 %1287, 1
  br i1 %1280, label %1377, label %1424

1377:                                             ; preds = %1359
  %1378 = load i32, ptr %4, align 4, !tbaa !6
  %1379 = load i32, ptr %12, align 4, !tbaa !6
  %1380 = add nsw i32 %1379, -1
  %1381 = icmp slt i32 %1378, %1380
  br i1 %1381, label %1401, label %1382

1382:                                             ; preds = %1377
  %1383 = icmp eq i32 %1378, %1380
  br i1 %1383, label %1384, label %1417

1384:                                             ; preds = %1382
  store i32 0, ptr %4, align 4, !tbaa !6
  %1385 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1385, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1424, label %1386

1386:                                             ; preds = %1384, %1411
  %1387 = phi i64 [ %1415, %1411 ], [ 1, %1384 ]
  %1388 = getelementptr inbounds i32, ptr %4, i64 %1387
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = getelementptr inbounds i32, ptr %12, i64 %1387
  %1391 = load i32, ptr %1390, align 4, !tbaa !6
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1389, %1392
  br i1 %1393, label %1394, label %1409

1394:                                             ; preds = %1386
  br i1 %1381, label %1401, label %1395

1395:                                             ; preds = %1394
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1387
  %1399 = load i32, ptr %1398, align 4, !tbaa !6
  %1400 = add nsw i32 %1399, %1397
  store i32 %1400, ptr %1398, align 4, !tbaa !6
  br label %1419

1401:                                             ; preds = %1377, %1394
  %1402 = phi i32 [ %1389, %1394 ], [ %1378, %1377 ]
  %1403 = phi ptr [ %1388, %1394 ], [ %4, %1377 ]
  %1404 = phi i64 [ %1387, %1394 ], [ 0, %1377 ]
  %1405 = add nsw i32 %1402, 1
  store i32 %1405, ptr %1403, align 4, !tbaa !6
  %1406 = getelementptr inbounds i32, ptr %7, i64 %1404
  %1407 = load i32, ptr %1406, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1404
  br label %1419

1409:                                             ; preds = %1386
  %1410 = icmp eq i32 %1389, %1392
  br i1 %1410, label %1411, label %1417

1411:                                             ; preds = %1409
  store i32 0, ptr %1388, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %8, i64 %1387
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %6, i64 %1387
  store i32 %1413, ptr %1414, align 4, !tbaa !6
  %1415 = add nuw nsw i64 %1387, 1
  %1416 = icmp eq i64 %1415, %1283
  br i1 %1416, label %1424, label %1386, !llvm.loop !1348

1417:                                             ; preds = %1382, %1409
  %1418 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1419:                                             ; preds = %1395, %1401
  %1420 = phi ptr [ %1408, %1401 ], [ %1388, %1395 ]
  %1421 = phi i32 [ %1407, %1401 ], [ 1, %1395 ]
  %1422 = load i32, ptr %1420, align 4, !tbaa !6
  %1423 = add nsw i32 %1422, %1421
  store i32 %1423, ptr %1420, align 4, !tbaa !6
  br label %1424

1424:                                             ; preds = %1411, %1419, %1384, %1359
  %1425 = icmp eq i32 %1376, %5
  br i1 %1425, label %5539, label %1286, !llvm.loop !1349

1426:                                             ; preds = %1269, %1565
  %1427 = phi i32 [ 0, %1269 ], [ %1514, %1565 ]
  %1428 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1270, label %1429, label %1498

1429:                                             ; preds = %1426, %1488
  %1430 = phi i32 [ %1497, %1488 ], [ 0, %1426 ]
  %1431 = phi i64 [ %1439, %1488 ], [ %1274, %1426 ]
  %1432 = phi i64 [ %1496, %1488 ], [ %1273, %1426 ]
  %1433 = phi i32 [ %1494, %1488 ], [ %1428, %1426 ]
  %1434 = sub i32 %1272, %1430
  %1435 = tail call i32 @llvm.smin.i32(i32 %1434, i32 0)
  %1436 = sub i32 %1434, %1435
  %1437 = zext i32 %1436 to i64
  %1438 = add nuw nsw i64 %1437, 1
  %1439 = add nsw i64 %1431, -1
  %1440 = icmp ult i32 %1436, 31
  br i1 %1440, label %1476, label %1441

1441:                                             ; preds = %1429
  %1442 = and i64 %1438, 8589934560
  %1443 = sub i64 %1432, %1442
  br label %1444

1444:                                             ; preds = %1444, %1441
  %1445 = phi i64 [ 0, %1441 ], [ %1468, %1444 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1464, %1444 ]
  %1447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1465, %1444 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1466, %1444 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1467, %1444 ]
  %1450 = sub i64 %1432, %1445
  %1451 = getelementptr inbounds i32, ptr %11, i64 %1450
  %1452 = getelementptr inbounds i32, ptr %1451, i64 -7
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1451, i64 -15
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1451, i64 -23
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = getelementptr inbounds i32, ptr %1451, i64 -31
  %1462 = load <8 x i32>, ptr %1461, align 4, !tbaa !6
  %1463 = shufflevector <8 x i32> %1462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1464 = mul <8 x i32> %1454, %1446
  %1465 = mul <8 x i32> %1457, %1447
  %1466 = mul <8 x i32> %1460, %1448
  %1467 = mul <8 x i32> %1463, %1449
  %1468 = add nuw i64 %1445, 32
  %1469 = icmp eq i64 %1468, %1442
  br i1 %1469, label %1470, label %1444, !llvm.loop !1350

1470:                                             ; preds = %1444
  %1471 = mul <8 x i32> %1465, %1464
  %1472 = mul <8 x i32> %1466, %1471
  %1473 = mul <8 x i32> %1467, %1472
  %1474 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1473)
  %1475 = icmp eq i64 %1438, %1442
  br i1 %1475, label %1488, label %1476

1476:                                             ; preds = %1429, %1470
  %1477 = phi i64 [ %1432, %1429 ], [ %1443, %1470 ]
  %1478 = phi i32 [ 1, %1429 ], [ %1474, %1470 ]
  br label %1479

1479:                                             ; preds = %1476, %1479
  %1480 = phi i64 [ %1485, %1479 ], [ %1477, %1476 ]
  %1481 = phi i32 [ %1484, %1479 ], [ %1478, %1476 ]
  %1482 = getelementptr inbounds i32, ptr %11, i64 %1480
  %1483 = load i32, ptr %1482, align 4, !tbaa !6
  %1484 = mul nsw i32 %1483, %1481
  %1485 = add nsw i64 %1480, -1
  %1486 = trunc i64 %1480 to i32
  %1487 = icmp sgt i32 %1486, 0
  br i1 %1487, label %1479, label %1488, !llvm.loop !1351

1488:                                             ; preds = %1479, %1470
  %1489 = phi i32 [ %1474, %1470 ], [ %1484, %1479 ]
  %1490 = and i64 %1439, 4294967295
  %1491 = getelementptr inbounds i32, ptr %6, i64 %1490
  %1492 = load i32, ptr %1491, align 4, !tbaa !6
  %1493 = mul nsw i32 %1492, %1489
  %1494 = add nsw i32 %1493, %1433
  %1495 = icmp sgt i64 %1431, 2
  %1496 = add nsw i64 %1432, -1
  %1497 = add i32 %1430, 1
  br i1 %1495, label %1429, label %1498, !llvm.loop !1352

1498:                                             ; preds = %1488, %1426
  %1499 = phi i32 [ %1428, %1426 ], [ %1494, %1488 ]
  %1500 = icmp slt i32 %1499, %5
  br i1 %1500, label %1503, label %1501

1501:                                             ; preds = %1498
  %1502 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1503:                                             ; preds = %1498
  %1504 = sext i32 %1499 to i64
  %1505 = getelementptr inbounds double, ptr %1253, i64 %1504
  %1506 = load double, ptr %1505, align 8, !tbaa !19
  %1507 = fptosi double %1506 to i8
  %1508 = load i8, ptr %1255, align 1, !tbaa !12
  %1509 = sext i8 %1507 to i32
  %1510 = mul nsw i32 %1509, %1509
  %1511 = mul nsw i32 %1510, %1510
  %1512 = trunc i32 %1511 to i8
  %1513 = add i8 %1508, %1512
  store i8 %1513, ptr %1255, align 1, !tbaa !12
  %1514 = add nuw nsw i32 %1427, 1
  br i1 %1271, label %1515, label %1565

1515:                                             ; preds = %1503
  %1516 = load i32, ptr %4, align 4, !tbaa !6
  %1517 = load i32, ptr %12, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1516, %1518
  br i1 %1519, label %1542, label %1520

1520:                                             ; preds = %1515
  %1521 = icmp eq i32 %1516, %1518
  br i1 %1521, label %1522, label %1558

1522:                                             ; preds = %1520
  store i32 0, ptr %4, align 4, !tbaa !6
  %1523 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1523, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1565, label %1524

1524:                                             ; preds = %1522, %1552
  %1525 = phi i64 [ %1556, %1552 ], [ 1, %1522 ]
  %1526 = getelementptr inbounds i32, ptr %4, i64 %1525
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = getelementptr inbounds i32, ptr %12, i64 %1525
  %1529 = load i32, ptr %1528, align 4, !tbaa !6
  %1530 = add nsw i32 %1529, -1
  %1531 = icmp slt i32 %1527, %1530
  br i1 %1531, label %1532, label %1550

1532:                                             ; preds = %1524
  br i1 %1519, label %1542, label %1533

1533:                                             ; preds = %1532
  %1534 = shl i64 %1525, 32
  %1535 = add i64 %1534, -4294967296
  %1536 = ashr exact i64 %1535, 32
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1536
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1525
  %1540 = load i32, ptr %1539, align 4, !tbaa !6
  %1541 = add nsw i32 %1540, %1538
  store i32 %1541, ptr %1539, align 4, !tbaa !6
  br label %1560

1542:                                             ; preds = %1515, %1532
  %1543 = phi i32 [ %1527, %1532 ], [ %1516, %1515 ]
  %1544 = phi ptr [ %1526, %1532 ], [ %4, %1515 ]
  %1545 = phi i64 [ %1525, %1532 ], [ 0, %1515 ]
  %1546 = add nsw i32 %1543, 1
  store i32 %1546, ptr %1544, align 4, !tbaa !6
  %1547 = getelementptr inbounds i32, ptr %7, i64 %1545
  %1548 = load i32, ptr %1547, align 4, !tbaa !6
  %1549 = getelementptr inbounds i32, ptr %6, i64 %1545
  br label %1560

1550:                                             ; preds = %1524
  %1551 = icmp eq i32 %1527, %1530
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1550
  store i32 0, ptr %1526, align 4, !tbaa !6
  %1553 = getelementptr inbounds i32, ptr %8, i64 %1525
  %1554 = load i32, ptr %1553, align 4, !tbaa !6
  %1555 = getelementptr inbounds i32, ptr %6, i64 %1525
  store i32 %1554, ptr %1555, align 4, !tbaa !6
  %1556 = add nuw nsw i64 %1525, 1
  %1557 = icmp eq i64 %1556, %1274
  br i1 %1557, label %1565, label %1524, !llvm.loop !1353

1558:                                             ; preds = %1520, %1550
  %1559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1560:                                             ; preds = %1533, %1542
  %1561 = phi ptr [ %1549, %1542 ], [ %1526, %1533 ]
  %1562 = phi i32 [ %1548, %1542 ], [ 1, %1533 ]
  %1563 = load i32, ptr %1561, align 4, !tbaa !6
  %1564 = add nsw i32 %1563, %1562
  store i32 %1564, ptr %1561, align 4, !tbaa !6
  br label %1565

1565:                                             ; preds = %1552, %1560, %1522, %1503
  %1566 = icmp eq i32 %1514, %5
  br i1 %1566, label %5539, label %1426, !llvm.loop !1354

1567:                                             ; preds = %1262
  %1568 = getelementptr inbounds i32, ptr %3, i64 %19
  %1569 = load i32, ptr %1568, align 4, !tbaa !6
  %1570 = icmp eq i32 %1569, 0
  %1571 = icmp sgt i32 %5, 0
  br i1 %1570, label %1581, label %1572

1572:                                             ; preds = %1567
  br i1 %1571, label %1573, label %5539

1573:                                             ; preds = %1572
  %1574 = icmp sgt i32 %13, 1
  %1575 = icmp sgt i32 %13, 0
  %1576 = add i32 %13, -2
  %1577 = zext i32 %1576 to i64
  %1578 = zext i32 %13 to i64
  %1579 = add nuw i32 %5, 1
  %1580 = icmp eq i32 %13, 1
  br label %1724

1581:                                             ; preds = %1567
  br i1 %1571, label %1582, label %5539

1582:                                             ; preds = %1581
  %1583 = icmp sgt i32 %13, 1
  %1584 = icmp sgt i32 %13, 0
  %1585 = add i32 %13, -2
  %1586 = zext i32 %1585 to i64
  %1587 = zext i32 %13 to i64
  %1588 = add nuw i32 %5, 1
  %1589 = icmp eq i32 %13, 1
  br label %1590

1590:                                             ; preds = %1582, %1722
  %1591 = phi i32 [ 0, %1582 ], [ %1674, %1722 ]
  %1592 = phi double [ 0.000000e+00, %1582 ], [ %1673, %1722 ]
  %1593 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1583, label %1594, label %1663

1594:                                             ; preds = %1590, %1653
  %1595 = phi i32 [ %1662, %1653 ], [ 0, %1590 ]
  %1596 = phi i64 [ %1604, %1653 ], [ %1587, %1590 ]
  %1597 = phi i64 [ %1661, %1653 ], [ %1586, %1590 ]
  %1598 = phi i32 [ %1659, %1653 ], [ %1593, %1590 ]
  %1599 = sub i32 %1585, %1595
  %1600 = tail call i32 @llvm.smin.i32(i32 %1599, i32 0)
  %1601 = sub i32 %1599, %1600
  %1602 = zext i32 %1601 to i64
  %1603 = add nuw nsw i64 %1602, 1
  %1604 = add nsw i64 %1596, -1
  %1605 = icmp ult i32 %1601, 31
  br i1 %1605, label %1641, label %1606

1606:                                             ; preds = %1594
  %1607 = and i64 %1603, 8589934560
  %1608 = sub i64 %1597, %1607
  br label %1609

1609:                                             ; preds = %1609, %1606
  %1610 = phi i64 [ 0, %1606 ], [ %1633, %1609 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1629, %1609 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1630, %1609 ]
  %1613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1631, %1609 ]
  %1614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1606 ], [ %1632, %1609 ]
  %1615 = sub i64 %1597, %1610
  %1616 = getelementptr inbounds i32, ptr %9, i64 %1615
  %1617 = getelementptr inbounds i32, ptr %1616, i64 -7
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !6
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = getelementptr inbounds i32, ptr %1616, i64 -15
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !6
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = getelementptr inbounds i32, ptr %1616, i64 -23
  %1624 = load <8 x i32>, ptr %1623, align 4, !tbaa !6
  %1625 = shufflevector <8 x i32> %1624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1626 = getelementptr inbounds i32, ptr %1616, i64 -31
  %1627 = load <8 x i32>, ptr %1626, align 4, !tbaa !6
  %1628 = shufflevector <8 x i32> %1627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1629 = mul <8 x i32> %1619, %1611
  %1630 = mul <8 x i32> %1622, %1612
  %1631 = mul <8 x i32> %1625, %1613
  %1632 = mul <8 x i32> %1628, %1614
  %1633 = add nuw i64 %1610, 32
  %1634 = icmp eq i64 %1633, %1607
  br i1 %1634, label %1635, label %1609, !llvm.loop !1355

1635:                                             ; preds = %1609
  %1636 = mul <8 x i32> %1630, %1629
  %1637 = mul <8 x i32> %1631, %1636
  %1638 = mul <8 x i32> %1632, %1637
  %1639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1638)
  %1640 = icmp eq i64 %1603, %1607
  br i1 %1640, label %1653, label %1641

1641:                                             ; preds = %1594, %1635
  %1642 = phi i64 [ %1597, %1594 ], [ %1608, %1635 ]
  %1643 = phi i32 [ 1, %1594 ], [ %1639, %1635 ]
  br label %1644

1644:                                             ; preds = %1641, %1644
  %1645 = phi i64 [ %1650, %1644 ], [ %1642, %1641 ]
  %1646 = phi i32 [ %1649, %1644 ], [ %1643, %1641 ]
  %1647 = getelementptr inbounds i32, ptr %9, i64 %1645
  %1648 = load i32, ptr %1647, align 4, !tbaa !6
  %1649 = mul nsw i32 %1648, %1646
  %1650 = add nsw i64 %1645, -1
  %1651 = trunc i64 %1645 to i32
  %1652 = icmp sgt i32 %1651, 0
  br i1 %1652, label %1644, label %1653, !llvm.loop !1356

1653:                                             ; preds = %1644, %1635
  %1654 = phi i32 [ %1639, %1635 ], [ %1649, %1644 ]
  %1655 = and i64 %1604, 4294967295
  %1656 = getelementptr inbounds i32, ptr %6, i64 %1655
  %1657 = load i32, ptr %1656, align 4, !tbaa !6
  %1658 = mul nsw i32 %1657, %1654
  %1659 = add nsw i32 %1658, %1598
  %1660 = icmp sgt i64 %1596, 2
  %1661 = add nsw i64 %1597, -1
  %1662 = add i32 %1595, 1
  br i1 %1660, label %1594, label %1663, !llvm.loop !1357

1663:                                             ; preds = %1653, %1590
  %1664 = phi i32 [ %1593, %1590 ], [ %1659, %1653 ]
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds double, ptr %1253, i64 %1665
  %1667 = load double, ptr %1666, align 8, !tbaa !19
  %1668 = fptosi double %1667 to i8
  %1669 = load i8, ptr %1255, align 1, !tbaa !12
  %1670 = mul i8 %1668, %1668
  %1671 = mul i8 %1670, %1670
  %1672 = add i8 %1671, %1669
  store i8 %1672, ptr %1255, align 1, !tbaa !12
  %1673 = fadd fast double %1592, 1.000000e+00
  %1674 = add nuw nsw i32 %1591, 1
  br i1 %1584, label %1675, label %1722

1675:                                             ; preds = %1663
  %1676 = load i32, ptr %4, align 4, !tbaa !6
  %1677 = load i32, ptr %12, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1676, %1678
  br i1 %1679, label %1699, label %1680

1680:                                             ; preds = %1675
  %1681 = icmp eq i32 %1676, %1678
  br i1 %1681, label %1682, label %1715

1682:                                             ; preds = %1680
  store i32 0, ptr %4, align 4, !tbaa !6
  %1683 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1683, ptr %6, align 4, !tbaa !6
  br i1 %1589, label %1722, label %1684

1684:                                             ; preds = %1682, %1709
  %1685 = phi i64 [ %1713, %1709 ], [ 1, %1682 ]
  %1686 = getelementptr inbounds i32, ptr %4, i64 %1685
  %1687 = load i32, ptr %1686, align 4, !tbaa !6
  %1688 = getelementptr inbounds i32, ptr %12, i64 %1685
  %1689 = load i32, ptr %1688, align 4, !tbaa !6
  %1690 = add nsw i32 %1689, -1
  %1691 = icmp slt i32 %1687, %1690
  br i1 %1691, label %1692, label %1707

1692:                                             ; preds = %1684
  br i1 %1679, label %1699, label %1693

1693:                                             ; preds = %1692
  %1694 = getelementptr inbounds i32, ptr %7, i64 %1685
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1685
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, %1695
  store i32 %1698, ptr %1696, align 4, !tbaa !6
  br label %1717

1699:                                             ; preds = %1675, %1692
  %1700 = phi i32 [ %1687, %1692 ], [ %1676, %1675 ]
  %1701 = phi ptr [ %1686, %1692 ], [ %4, %1675 ]
  %1702 = phi i64 [ %1685, %1692 ], [ 0, %1675 ]
  %1703 = add nsw i32 %1700, 1
  store i32 %1703, ptr %1701, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %7, i64 %1702
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = getelementptr inbounds i32, ptr %6, i64 %1702
  br label %1717

1707:                                             ; preds = %1684
  %1708 = icmp eq i32 %1687, %1690
  br i1 %1708, label %1709, label %1715

1709:                                             ; preds = %1707
  store i32 0, ptr %1686, align 4, !tbaa !6
  %1710 = getelementptr inbounds i32, ptr %8, i64 %1685
  %1711 = load i32, ptr %1710, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %6, i64 %1685
  store i32 %1711, ptr %1712, align 4, !tbaa !6
  %1713 = add nuw nsw i64 %1685, 1
  %1714 = icmp eq i64 %1713, %1587
  br i1 %1714, label %1722, label %1684, !llvm.loop !1358

1715:                                             ; preds = %1680, %1707
  %1716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1717:                                             ; preds = %1693, %1699
  %1718 = phi ptr [ %1706, %1699 ], [ %1686, %1693 ]
  %1719 = phi i32 [ %1705, %1699 ], [ 1, %1693 ]
  %1720 = load i32, ptr %1718, align 4, !tbaa !6
  %1721 = add nsw i32 %1720, %1719
  store i32 %1721, ptr %1718, align 4, !tbaa !6
  br label %1722

1722:                                             ; preds = %1709, %1717, %1682, %1663
  %1723 = icmp eq i32 %1674, %5
  br i1 %1723, label %5539, label %1590, !llvm.loop !1359

1724:                                             ; preds = %1573, %1861
  %1725 = phi i32 [ 0, %1573 ], [ %1810, %1861 ]
  %1726 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1574, label %1727, label %1796

1727:                                             ; preds = %1724, %1786
  %1728 = phi i32 [ %1795, %1786 ], [ 0, %1724 ]
  %1729 = phi i64 [ %1737, %1786 ], [ %1578, %1724 ]
  %1730 = phi i64 [ %1794, %1786 ], [ %1577, %1724 ]
  %1731 = phi i32 [ %1792, %1786 ], [ %1726, %1724 ]
  %1732 = sub i32 %1576, %1728
  %1733 = tail call i32 @llvm.smin.i32(i32 %1732, i32 0)
  %1734 = sub i32 %1732, %1733
  %1735 = zext i32 %1734 to i64
  %1736 = add nuw nsw i64 %1735, 1
  %1737 = add nsw i64 %1729, -1
  %1738 = icmp ult i32 %1734, 31
  br i1 %1738, label %1774, label %1739

1739:                                             ; preds = %1727
  %1740 = and i64 %1736, 8589934560
  %1741 = sub i64 %1730, %1740
  br label %1742

1742:                                             ; preds = %1742, %1739
  %1743 = phi i64 [ 0, %1739 ], [ %1766, %1742 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1762, %1742 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1763, %1742 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1764, %1742 ]
  %1747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1739 ], [ %1765, %1742 ]
  %1748 = sub i64 %1730, %1743
  %1749 = getelementptr inbounds i32, ptr %11, i64 %1748
  %1750 = getelementptr inbounds i32, ptr %1749, i64 -7
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !6
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = getelementptr inbounds i32, ptr %1749, i64 -15
  %1754 = load <8 x i32>, ptr %1753, align 4, !tbaa !6
  %1755 = shufflevector <8 x i32> %1754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1756 = getelementptr inbounds i32, ptr %1749, i64 -23
  %1757 = load <8 x i32>, ptr %1756, align 4, !tbaa !6
  %1758 = shufflevector <8 x i32> %1757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1759 = getelementptr inbounds i32, ptr %1749, i64 -31
  %1760 = load <8 x i32>, ptr %1759, align 4, !tbaa !6
  %1761 = shufflevector <8 x i32> %1760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1762 = mul <8 x i32> %1752, %1744
  %1763 = mul <8 x i32> %1755, %1745
  %1764 = mul <8 x i32> %1758, %1746
  %1765 = mul <8 x i32> %1761, %1747
  %1766 = add nuw i64 %1743, 32
  %1767 = icmp eq i64 %1766, %1740
  br i1 %1767, label %1768, label %1742, !llvm.loop !1360

1768:                                             ; preds = %1742
  %1769 = mul <8 x i32> %1763, %1762
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = mul <8 x i32> %1765, %1770
  %1772 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1771)
  %1773 = icmp eq i64 %1736, %1740
  br i1 %1773, label %1786, label %1774

1774:                                             ; preds = %1727, %1768
  %1775 = phi i64 [ %1730, %1727 ], [ %1741, %1768 ]
  %1776 = phi i32 [ 1, %1727 ], [ %1772, %1768 ]
  br label %1777

1777:                                             ; preds = %1774, %1777
  %1778 = phi i64 [ %1783, %1777 ], [ %1775, %1774 ]
  %1779 = phi i32 [ %1782, %1777 ], [ %1776, %1774 ]
  %1780 = getelementptr inbounds i32, ptr %11, i64 %1778
  %1781 = load i32, ptr %1780, align 4, !tbaa !6
  %1782 = mul nsw i32 %1781, %1779
  %1783 = add nsw i64 %1778, -1
  %1784 = trunc i64 %1778 to i32
  %1785 = icmp sgt i32 %1784, 0
  br i1 %1785, label %1777, label %1786, !llvm.loop !1361

1786:                                             ; preds = %1777, %1768
  %1787 = phi i32 [ %1772, %1768 ], [ %1782, %1777 ]
  %1788 = and i64 %1737, 4294967295
  %1789 = getelementptr inbounds i32, ptr %6, i64 %1788
  %1790 = load i32, ptr %1789, align 4, !tbaa !6
  %1791 = mul nsw i32 %1790, %1787
  %1792 = add nsw i32 %1791, %1731
  %1793 = icmp sgt i64 %1729, 2
  %1794 = add nsw i64 %1730, -1
  %1795 = add i32 %1728, 1
  br i1 %1793, label %1727, label %1796, !llvm.loop !1362

1796:                                             ; preds = %1786, %1724
  %1797 = phi i32 [ %1726, %1724 ], [ %1792, %1786 ]
  %1798 = icmp slt i32 %1797, %5
  br i1 %1798, label %1801, label %1799

1799:                                             ; preds = %1796
  %1800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

1801:                                             ; preds = %1796
  %1802 = sext i32 %1797 to i64
  %1803 = getelementptr inbounds double, ptr %1253, i64 %1802
  %1804 = load double, ptr %1803, align 8, !tbaa !19
  %1805 = fptosi double %1804 to i8
  %1806 = load i8, ptr %1255, align 1, !tbaa !12
  %1807 = mul i8 %1805, %1805
  %1808 = mul i8 %1807, %1807
  %1809 = add i8 %1808, %1806
  store i8 %1809, ptr %1255, align 1, !tbaa !12
  %1810 = add nuw nsw i32 %1725, 1
  br i1 %1575, label %1811, label %1861

1811:                                             ; preds = %1801
  %1812 = load i32, ptr %4, align 4, !tbaa !6
  %1813 = load i32, ptr %12, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1812, %1814
  br i1 %1815, label %1838, label %1816

1816:                                             ; preds = %1811
  %1817 = icmp eq i32 %1812, %1814
  br i1 %1817, label %1818, label %1854

1818:                                             ; preds = %1816
  store i32 0, ptr %4, align 4, !tbaa !6
  %1819 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1819, ptr %6, align 4, !tbaa !6
  br i1 %1580, label %1861, label %1820

1820:                                             ; preds = %1818, %1848
  %1821 = phi i64 [ %1852, %1848 ], [ 1, %1818 ]
  %1822 = getelementptr inbounds i32, ptr %4, i64 %1821
  %1823 = load i32, ptr %1822, align 4, !tbaa !6
  %1824 = getelementptr inbounds i32, ptr %12, i64 %1821
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = add nsw i32 %1825, -1
  %1827 = icmp slt i32 %1823, %1826
  br i1 %1827, label %1828, label %1846

1828:                                             ; preds = %1820
  br i1 %1815, label %1838, label %1829

1829:                                             ; preds = %1828
  %1830 = shl i64 %1821, 32
  %1831 = add i64 %1830, -4294967296
  %1832 = ashr exact i64 %1831, 32
  %1833 = getelementptr inbounds i32, ptr %7, i64 %1832
  %1834 = load i32, ptr %1833, align 4, !tbaa !6
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1821
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = add nsw i32 %1836, %1834
  store i32 %1837, ptr %1835, align 4, !tbaa !6
  br label %1856

1838:                                             ; preds = %1811, %1828
  %1839 = phi i32 [ %1823, %1828 ], [ %1812, %1811 ]
  %1840 = phi ptr [ %1822, %1828 ], [ %4, %1811 ]
  %1841 = phi i64 [ %1821, %1828 ], [ 0, %1811 ]
  %1842 = add nsw i32 %1839, 1
  store i32 %1842, ptr %1840, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = getelementptr inbounds i32, ptr %6, i64 %1841
  br label %1856

1846:                                             ; preds = %1820
  %1847 = icmp eq i32 %1823, %1826
  br i1 %1847, label %1848, label %1854

1848:                                             ; preds = %1846
  store i32 0, ptr %1822, align 4, !tbaa !6
  %1849 = getelementptr inbounds i32, ptr %8, i64 %1821
  %1850 = load i32, ptr %1849, align 4, !tbaa !6
  %1851 = getelementptr inbounds i32, ptr %6, i64 %1821
  store i32 %1850, ptr %1851, align 4, !tbaa !6
  %1852 = add nuw nsw i64 %1821, 1
  %1853 = icmp eq i64 %1852, %1578
  br i1 %1853, label %1861, label %1820, !llvm.loop !1363

1854:                                             ; preds = %1816, %1846
  %1855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

1856:                                             ; preds = %1829, %1838
  %1857 = phi ptr [ %1845, %1838 ], [ %1822, %1829 ]
  %1858 = phi i32 [ %1844, %1838 ], [ 1, %1829 ]
  %1859 = load i32, ptr %1857, align 4, !tbaa !6
  %1860 = add nsw i32 %1859, %1858
  store i32 %1860, ptr %1857, align 4, !tbaa !6
  br label %1861

1861:                                             ; preds = %1848, %1856, %1818, %1801
  %1862 = icmp eq i32 %1810, %5
  br i1 %1862, label %5539, label %1724, !llvm.loop !1364

1863:                                             ; preds = %1262
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

1865:                                             ; preds = %18
  %1866 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1867 = load ptr, ptr %1866, align 8, !tbaa !10
  %1868 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1869 = load ptr, ptr %1868, align 8, !tbaa !10
  store i16 0, ptr %1869, align 2, !tbaa !79
  %1870 = icmp eq i32 %13, 0
  br i1 %1870, label %1871, label %1876

1871:                                             ; preds = %1865
  %1872 = load double, ptr %1867, align 8, !tbaa !19
  %1873 = fptosi double %1872 to i16
  %1874 = mul i16 %1873, %1873
  %1875 = mul i16 %1874, %1874
  store i16 %1875, ptr %1869, align 2, !tbaa !79
  br label %5539

1876:                                             ; preds = %1865
  switch i32 %1, label %2478 [
    i32 1, label %1877
    i32 0, label %2182
  ]

1877:                                             ; preds = %1876
  %1878 = getelementptr inbounds i32, ptr %3, i64 %19
  %1879 = load i32, ptr %1878, align 4, !tbaa !6
  %1880 = icmp eq i32 %1879, 0
  %1881 = icmp sgt i32 %5, 0
  br i1 %1880, label %1891, label %1882

1882:                                             ; preds = %1877
  br i1 %1881, label %1883, label %5539

1883:                                             ; preds = %1882
  %1884 = icmp sgt i32 %13, 1
  %1885 = icmp sgt i32 %13, 0
  %1886 = add i32 %13, -2
  %1887 = zext i32 %1886 to i64
  %1888 = zext i32 %13 to i64
  %1889 = add nuw i32 %5, 1
  %1890 = icmp eq i32 %13, 1
  br label %2040

1891:                                             ; preds = %1877
  br i1 %1881, label %1892, label %5539

1892:                                             ; preds = %1891
  %1893 = icmp sgt i32 %13, 1
  %1894 = icmp sgt i32 %13, 0
  %1895 = add i32 %13, -2
  %1896 = zext i32 %1895 to i64
  %1897 = zext i32 %13 to i64
  %1898 = add nuw i32 %5, 1
  %1899 = icmp eq i32 %13, 1
  br label %1900

1900:                                             ; preds = %1892, %2038
  %1901 = phi i16 [ 0, %1892 ], [ %1988, %2038 ]
  %1902 = phi i32 [ 0, %1892 ], [ %1990, %2038 ]
  %1903 = phi double [ 0.000000e+00, %1892 ], [ %1989, %2038 ]
  %1904 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1893, label %1905, label %1974

1905:                                             ; preds = %1900, %1964
  %1906 = phi i32 [ %1973, %1964 ], [ 0, %1900 ]
  %1907 = phi i64 [ %1915, %1964 ], [ %1897, %1900 ]
  %1908 = phi i64 [ %1972, %1964 ], [ %1896, %1900 ]
  %1909 = phi i32 [ %1970, %1964 ], [ %1904, %1900 ]
  %1910 = sub i32 %1895, %1906
  %1911 = tail call i32 @llvm.smin.i32(i32 %1910, i32 0)
  %1912 = sub i32 %1910, %1911
  %1913 = zext i32 %1912 to i64
  %1914 = add nuw nsw i64 %1913, 1
  %1915 = add nsw i64 %1907, -1
  %1916 = icmp ult i32 %1912, 31
  br i1 %1916, label %1952, label %1917

1917:                                             ; preds = %1905
  %1918 = and i64 %1914, 8589934560
  %1919 = sub i64 %1908, %1918
  br label %1920

1920:                                             ; preds = %1920, %1917
  %1921 = phi i64 [ 0, %1917 ], [ %1944, %1920 ]
  %1922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1940, %1920 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1941, %1920 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1942, %1920 ]
  %1925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1917 ], [ %1943, %1920 ]
  %1926 = sub i64 %1908, %1921
  %1927 = getelementptr inbounds i32, ptr %9, i64 %1926
  %1928 = getelementptr inbounds i32, ptr %1927, i64 -7
  %1929 = load <8 x i32>, ptr %1928, align 4, !tbaa !6
  %1930 = shufflevector <8 x i32> %1929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1931 = getelementptr inbounds i32, ptr %1927, i64 -15
  %1932 = load <8 x i32>, ptr %1931, align 4, !tbaa !6
  %1933 = shufflevector <8 x i32> %1932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1934 = getelementptr inbounds i32, ptr %1927, i64 -23
  %1935 = load <8 x i32>, ptr %1934, align 4, !tbaa !6
  %1936 = shufflevector <8 x i32> %1935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1937 = getelementptr inbounds i32, ptr %1927, i64 -31
  %1938 = load <8 x i32>, ptr %1937, align 4, !tbaa !6
  %1939 = shufflevector <8 x i32> %1938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1940 = mul <8 x i32> %1930, %1922
  %1941 = mul <8 x i32> %1933, %1923
  %1942 = mul <8 x i32> %1936, %1924
  %1943 = mul <8 x i32> %1939, %1925
  %1944 = add nuw i64 %1921, 32
  %1945 = icmp eq i64 %1944, %1918
  br i1 %1945, label %1946, label %1920, !llvm.loop !1365

1946:                                             ; preds = %1920
  %1947 = mul <8 x i32> %1941, %1940
  %1948 = mul <8 x i32> %1942, %1947
  %1949 = mul <8 x i32> %1943, %1948
  %1950 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1949)
  %1951 = icmp eq i64 %1914, %1918
  br i1 %1951, label %1964, label %1952

1952:                                             ; preds = %1905, %1946
  %1953 = phi i64 [ %1908, %1905 ], [ %1919, %1946 ]
  %1954 = phi i32 [ 1, %1905 ], [ %1950, %1946 ]
  br label %1955

1955:                                             ; preds = %1952, %1955
  %1956 = phi i64 [ %1961, %1955 ], [ %1953, %1952 ]
  %1957 = phi i32 [ %1960, %1955 ], [ %1954, %1952 ]
  %1958 = getelementptr inbounds i32, ptr %9, i64 %1956
  %1959 = load i32, ptr %1958, align 4, !tbaa !6
  %1960 = mul nsw i32 %1959, %1957
  %1961 = add nsw i64 %1956, -1
  %1962 = trunc i64 %1956 to i32
  %1963 = icmp sgt i32 %1962, 0
  br i1 %1963, label %1955, label %1964, !llvm.loop !1366

1964:                                             ; preds = %1955, %1946
  %1965 = phi i32 [ %1950, %1946 ], [ %1960, %1955 ]
  %1966 = and i64 %1915, 4294967295
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1966
  %1968 = load i32, ptr %1967, align 4, !tbaa !6
  %1969 = mul nsw i32 %1968, %1965
  %1970 = add nsw i32 %1969, %1909
  %1971 = icmp sgt i64 %1907, 2
  %1972 = add nsw i64 %1908, -1
  %1973 = add i32 %1906, 1
  br i1 %1971, label %1905, label %1974, !llvm.loop !1367

1974:                                             ; preds = %1964, %1900
  %1975 = phi i32 [ %1904, %1900 ], [ %1970, %1964 ]
  %1976 = sext i32 %1975 to i64
  %1977 = getelementptr inbounds double, ptr %2, i64 %1976
  %1978 = load double, ptr %1977, align 8, !tbaa !19
  %1979 = getelementptr inbounds double, ptr %1867, i64 %1976
  %1980 = load double, ptr %1979, align 8, !tbaa !19
  %1981 = fptosi double %1980 to i16
  %1982 = sitofp i16 %1901 to double
  %1983 = sitofp i16 %1981 to double
  %1984 = fmul fast double %1978, %1983
  %1985 = fmul fast double %1984, %1984
  %1986 = fmul fast double %1985, %1985
  %1987 = fadd fast double %1986, %1982
  %1988 = fptosi double %1987 to i16
  %1989 = fadd fast double %1978, %1903
  %1990 = add nuw nsw i32 %1902, 1
  br i1 %1894, label %1991, label %2038

1991:                                             ; preds = %1974
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1899, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1897
  br i1 %2030, label %2038, label %2000, !llvm.loop !1368

2031:                                             ; preds = %1996, %2023
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1974
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5533, label %1900, !llvm.loop !1369

2040:                                             ; preds = %1883, %2180
  %2041 = phi i16 [ 0, %1883 ], [ %2128, %2180 ]
  %2042 = phi i32 [ 0, %1883 ], [ %2129, %2180 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1888, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1887, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1886, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !1370

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !1371

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !1372

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds double, ptr %1867, i64 %2119
  %2121 = load double, ptr %2120, align 8, !tbaa !19
  %2122 = fptosi double %2121 to i16
  %2123 = sitofp i16 %2041 to double
  %2124 = sitofp i16 %2122 to double
  %2125 = fmul fast double %2124, %2124
  %2126 = fmul fast double %2125, %2125
  %2127 = fadd fast double %2126, %2123
  %2128 = fptosi double %2127 to i16
  store i16 %2128, ptr %1869, align 2, !tbaa !79
  %2129 = add nuw nsw i32 %2042, 1
  br i1 %1885, label %2130, label %2180

2130:                                             ; preds = %2118
  %2131 = load i32, ptr %4, align 4, !tbaa !6
  %2132 = load i32, ptr %12, align 4, !tbaa !6
  %2133 = add nsw i32 %2132, -1
  %2134 = icmp slt i32 %2131, %2133
  br i1 %2134, label %2157, label %2135

2135:                                             ; preds = %2130
  %2136 = icmp eq i32 %2131, %2133
  br i1 %2136, label %2137, label %2173

2137:                                             ; preds = %2135
  store i32 0, ptr %4, align 4, !tbaa !6
  %2138 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2138, ptr %6, align 4, !tbaa !6
  br i1 %1890, label %2180, label %2139

2139:                                             ; preds = %2137, %2167
  %2140 = phi i64 [ %2171, %2167 ], [ 1, %2137 ]
  %2141 = getelementptr inbounds i32, ptr %4, i64 %2140
  %2142 = load i32, ptr %2141, align 4, !tbaa !6
  %2143 = getelementptr inbounds i32, ptr %12, i64 %2140
  %2144 = load i32, ptr %2143, align 4, !tbaa !6
  %2145 = add nsw i32 %2144, -1
  %2146 = icmp slt i32 %2142, %2145
  br i1 %2146, label %2147, label %2165

2147:                                             ; preds = %2139
  br i1 %2134, label %2157, label %2148

2148:                                             ; preds = %2147
  %2149 = shl i64 %2140, 32
  %2150 = add i64 %2149, -4294967296
  %2151 = ashr exact i64 %2150, 32
  %2152 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %6, i64 %2140
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, %2153
  store i32 %2156, ptr %2154, align 4, !tbaa !6
  br label %2175

2157:                                             ; preds = %2130, %2147
  %2158 = phi i32 [ %2142, %2147 ], [ %2131, %2130 ]
  %2159 = phi ptr [ %2141, %2147 ], [ %4, %2130 ]
  %2160 = phi i64 [ %2140, %2147 ], [ 0, %2130 ]
  %2161 = add nsw i32 %2158, 1
  store i32 %2161, ptr %2159, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %7, i64 %2160
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2160
  br label %2175

2165:                                             ; preds = %2139
  %2166 = icmp eq i32 %2142, %2145
  br i1 %2166, label %2167, label %2173

2167:                                             ; preds = %2165
  store i32 0, ptr %2141, align 4, !tbaa !6
  %2168 = getelementptr inbounds i32, ptr %8, i64 %2140
  %2169 = load i32, ptr %2168, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %6, i64 %2140
  store i32 %2169, ptr %2170, align 4, !tbaa !6
  %2171 = add nuw nsw i64 %2140, 1
  %2172 = icmp eq i64 %2171, %1888
  br i1 %2172, label %2180, label %2139, !llvm.loop !1373

2173:                                             ; preds = %2135, %2165
  %2174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2175:                                             ; preds = %2148, %2157
  %2176 = phi ptr [ %2164, %2157 ], [ %2141, %2148 ]
  %2177 = phi i32 [ %2163, %2157 ], [ 1, %2148 ]
  %2178 = load i32, ptr %2176, align 4, !tbaa !6
  %2179 = add nsw i32 %2178, %2177
  store i32 %2179, ptr %2176, align 4, !tbaa !6
  br label %2180

2180:                                             ; preds = %2167, %2175, %2137, %2118
  %2181 = icmp eq i32 %2129, %5
  br i1 %2181, label %5539, label %2040, !llvm.loop !1374

2182:                                             ; preds = %1876
  %2183 = getelementptr inbounds i32, ptr %3, i64 %19
  %2184 = load i32, ptr %2183, align 4, !tbaa !6
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp sgt i32 %5, 0
  br i1 %2185, label %2196, label %2187

2187:                                             ; preds = %2182
  br i1 %2186, label %2188, label %5539

2188:                                             ; preds = %2187
  %2189 = icmp sgt i32 %13, 1
  %2190 = icmp sgt i32 %13, 0
  %2191 = add i32 %13, -2
  %2192 = zext i32 %2191 to i64
  %2193 = zext i32 %13 to i64
  %2194 = add nuw i32 %5, 1
  %2195 = icmp eq i32 %13, 1
  br label %2339

2196:                                             ; preds = %2182
  br i1 %2186, label %2197, label %5539

2197:                                             ; preds = %2196
  %2198 = icmp sgt i32 %13, 1
  %2199 = icmp sgt i32 %13, 0
  %2200 = add i32 %13, -2
  %2201 = zext i32 %2200 to i64
  %2202 = zext i32 %13 to i64
  %2203 = add nuw i32 %5, 1
  %2204 = icmp eq i32 %13, 1
  br label %2205

2205:                                             ; preds = %2197, %2337
  %2206 = phi i16 [ 0, %2197 ], [ %2287, %2337 ]
  %2207 = phi i32 [ 0, %2197 ], [ %2289, %2337 ]
  %2208 = phi double [ 0.000000e+00, %2197 ], [ %2288, %2337 ]
  %2209 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2198, label %2210, label %2279

2210:                                             ; preds = %2205, %2269
  %2211 = phi i32 [ %2278, %2269 ], [ 0, %2205 ]
  %2212 = phi i64 [ %2220, %2269 ], [ %2202, %2205 ]
  %2213 = phi i64 [ %2277, %2269 ], [ %2201, %2205 ]
  %2214 = phi i32 [ %2275, %2269 ], [ %2209, %2205 ]
  %2215 = sub i32 %2200, %2211
  %2216 = tail call i32 @llvm.smin.i32(i32 %2215, i32 0)
  %2217 = sub i32 %2215, %2216
  %2218 = zext i32 %2217 to i64
  %2219 = add nuw nsw i64 %2218, 1
  %2220 = add nsw i64 %2212, -1
  %2221 = icmp ult i32 %2217, 31
  br i1 %2221, label %2257, label %2222

2222:                                             ; preds = %2210
  %2223 = and i64 %2219, 8589934560
  %2224 = sub i64 %2213, %2223
  br label %2225

2225:                                             ; preds = %2225, %2222
  %2226 = phi i64 [ 0, %2222 ], [ %2249, %2225 ]
  %2227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2245, %2225 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2246, %2225 ]
  %2229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2247, %2225 ]
  %2230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2222 ], [ %2248, %2225 ]
  %2231 = sub i64 %2213, %2226
  %2232 = getelementptr inbounds i32, ptr %9, i64 %2231
  %2233 = getelementptr inbounds i32, ptr %2232, i64 -7
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !6
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2232, i64 -15
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !6
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = getelementptr inbounds i32, ptr %2232, i64 -23
  %2240 = load <8 x i32>, ptr %2239, align 4, !tbaa !6
  %2241 = shufflevector <8 x i32> %2240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2242 = getelementptr inbounds i32, ptr %2232, i64 -31
  %2243 = load <8 x i32>, ptr %2242, align 4, !tbaa !6
  %2244 = shufflevector <8 x i32> %2243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2245 = mul <8 x i32> %2235, %2227
  %2246 = mul <8 x i32> %2238, %2228
  %2247 = mul <8 x i32> %2241, %2229
  %2248 = mul <8 x i32> %2244, %2230
  %2249 = add nuw i64 %2226, 32
  %2250 = icmp eq i64 %2249, %2223
  br i1 %2250, label %2251, label %2225, !llvm.loop !1375

2251:                                             ; preds = %2225
  %2252 = mul <8 x i32> %2246, %2245
  %2253 = mul <8 x i32> %2247, %2252
  %2254 = mul <8 x i32> %2248, %2253
  %2255 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2254)
  %2256 = icmp eq i64 %2219, %2223
  br i1 %2256, label %2269, label %2257

2257:                                             ; preds = %2210, %2251
  %2258 = phi i64 [ %2213, %2210 ], [ %2224, %2251 ]
  %2259 = phi i32 [ 1, %2210 ], [ %2255, %2251 ]
  br label %2260

2260:                                             ; preds = %2257, %2260
  %2261 = phi i64 [ %2266, %2260 ], [ %2258, %2257 ]
  %2262 = phi i32 [ %2265, %2260 ], [ %2259, %2257 ]
  %2263 = getelementptr inbounds i32, ptr %9, i64 %2261
  %2264 = load i32, ptr %2263, align 4, !tbaa !6
  %2265 = mul nsw i32 %2264, %2262
  %2266 = add nsw i64 %2261, -1
  %2267 = trunc i64 %2261 to i32
  %2268 = icmp sgt i32 %2267, 0
  br i1 %2268, label %2260, label %2269, !llvm.loop !1376

2269:                                             ; preds = %2260, %2251
  %2270 = phi i32 [ %2255, %2251 ], [ %2265, %2260 ]
  %2271 = and i64 %2220, 4294967295
  %2272 = getelementptr inbounds i32, ptr %6, i64 %2271
  %2273 = load i32, ptr %2272, align 4, !tbaa !6
  %2274 = mul nsw i32 %2273, %2270
  %2275 = add nsw i32 %2274, %2214
  %2276 = icmp sgt i64 %2212, 2
  %2277 = add nsw i64 %2213, -1
  %2278 = add i32 %2211, 1
  br i1 %2276, label %2210, label %2279, !llvm.loop !1377

2279:                                             ; preds = %2269, %2205
  %2280 = phi i32 [ %2209, %2205 ], [ %2275, %2269 ]
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds double, ptr %1867, i64 %2281
  %2283 = load double, ptr %2282, align 8, !tbaa !19
  %2284 = fptosi double %2283 to i16
  %2285 = mul i16 %2284, %2284
  %2286 = mul i16 %2285, %2285
  %2287 = add i16 %2286, %2206
  %2288 = fadd fast double %2208, 1.000000e+00
  %2289 = add nuw nsw i32 %2207, 1
  br i1 %2199, label %2290, label %2337

2290:                                             ; preds = %2279
  %2291 = load i32, ptr %4, align 4, !tbaa !6
  %2292 = load i32, ptr %12, align 4, !tbaa !6
  %2293 = add nsw i32 %2292, -1
  %2294 = icmp slt i32 %2291, %2293
  br i1 %2294, label %2314, label %2295

2295:                                             ; preds = %2290
  %2296 = icmp eq i32 %2291, %2293
  br i1 %2296, label %2297, label %2330

2297:                                             ; preds = %2295
  store i32 0, ptr %4, align 4, !tbaa !6
  %2298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2298, ptr %6, align 4, !tbaa !6
  br i1 %2204, label %2337, label %2299

2299:                                             ; preds = %2297, %2324
  %2300 = phi i64 [ %2328, %2324 ], [ 1, %2297 ]
  %2301 = getelementptr inbounds i32, ptr %4, i64 %2300
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %12, i64 %2300
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, -1
  %2306 = icmp slt i32 %2302, %2305
  br i1 %2306, label %2307, label %2322

2307:                                             ; preds = %2299
  br i1 %2294, label %2314, label %2308

2308:                                             ; preds = %2307
  %2309 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2310 = load i32, ptr %2309, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2300
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = add nsw i32 %2312, %2310
  store i32 %2313, ptr %2311, align 4, !tbaa !6
  br label %2332

2314:                                             ; preds = %2290, %2307
  %2315 = phi i32 [ %2302, %2307 ], [ %2291, %2290 ]
  %2316 = phi ptr [ %2301, %2307 ], [ %4, %2290 ]
  %2317 = phi i64 [ %2300, %2307 ], [ 0, %2290 ]
  %2318 = add nsw i32 %2315, 1
  store i32 %2318, ptr %2316, align 4, !tbaa !6
  %2319 = getelementptr inbounds i32, ptr %7, i64 %2317
  %2320 = load i32, ptr %2319, align 4, !tbaa !6
  %2321 = getelementptr inbounds i32, ptr %6, i64 %2317
  br label %2332

2322:                                             ; preds = %2299
  %2323 = icmp eq i32 %2302, %2305
  br i1 %2323, label %2324, label %2330

2324:                                             ; preds = %2322
  store i32 0, ptr %2301, align 4, !tbaa !6
  %2325 = getelementptr inbounds i32, ptr %8, i64 %2300
  %2326 = load i32, ptr %2325, align 4, !tbaa !6
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2300
  store i32 %2326, ptr %2327, align 4, !tbaa !6
  %2328 = add nuw nsw i64 %2300, 1
  %2329 = icmp eq i64 %2328, %2202
  br i1 %2329, label %2337, label %2299, !llvm.loop !1378

2330:                                             ; preds = %2295, %2322
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  %2331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2332:                                             ; preds = %2308, %2314
  %2333 = phi ptr [ %2321, %2314 ], [ %2301, %2308 ]
  %2334 = phi i32 [ %2320, %2314 ], [ 1, %2308 ]
  %2335 = load i32, ptr %2333, align 4, !tbaa !6
  %2336 = add nsw i32 %2335, %2334
  store i32 %2336, ptr %2333, align 4, !tbaa !6
  br label %2337

2337:                                             ; preds = %2324, %2332, %2297, %2279
  %2338 = icmp eq i32 %2289, %5
  br i1 %2338, label %5534, label %2205, !llvm.loop !1379

2339:                                             ; preds = %2188, %2476
  %2340 = phi i16 [ 0, %2188 ], [ %2424, %2476 ]
  %2341 = phi i32 [ 0, %2188 ], [ %2425, %2476 ]
  %2342 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2189, label %2343, label %2412

2343:                                             ; preds = %2339, %2402
  %2344 = phi i32 [ %2411, %2402 ], [ 0, %2339 ]
  %2345 = phi i64 [ %2353, %2402 ], [ %2193, %2339 ]
  %2346 = phi i64 [ %2410, %2402 ], [ %2192, %2339 ]
  %2347 = phi i32 [ %2408, %2402 ], [ %2342, %2339 ]
  %2348 = sub i32 %2191, %2344
  %2349 = tail call i32 @llvm.smin.i32(i32 %2348, i32 0)
  %2350 = sub i32 %2348, %2349
  %2351 = zext i32 %2350 to i64
  %2352 = add nuw nsw i64 %2351, 1
  %2353 = add nsw i64 %2345, -1
  %2354 = icmp ult i32 %2350, 31
  br i1 %2354, label %2390, label %2355

2355:                                             ; preds = %2343
  %2356 = and i64 %2352, 8589934560
  %2357 = sub i64 %2346, %2356
  br label %2358

2358:                                             ; preds = %2358, %2355
  %2359 = phi i64 [ 0, %2355 ], [ %2382, %2358 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2378, %2358 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2379, %2358 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2380, %2358 ]
  %2363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2355 ], [ %2381, %2358 ]
  %2364 = sub i64 %2346, %2359
  %2365 = getelementptr inbounds i32, ptr %11, i64 %2364
  %2366 = getelementptr inbounds i32, ptr %2365, i64 -7
  %2367 = load <8 x i32>, ptr %2366, align 4, !tbaa !6
  %2368 = shufflevector <8 x i32> %2367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2369 = getelementptr inbounds i32, ptr %2365, i64 -15
  %2370 = load <8 x i32>, ptr %2369, align 4, !tbaa !6
  %2371 = shufflevector <8 x i32> %2370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2372 = getelementptr inbounds i32, ptr %2365, i64 -23
  %2373 = load <8 x i32>, ptr %2372, align 4, !tbaa !6
  %2374 = shufflevector <8 x i32> %2373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2375 = getelementptr inbounds i32, ptr %2365, i64 -31
  %2376 = load <8 x i32>, ptr %2375, align 4, !tbaa !6
  %2377 = shufflevector <8 x i32> %2376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2378 = mul <8 x i32> %2368, %2360
  %2379 = mul <8 x i32> %2371, %2361
  %2380 = mul <8 x i32> %2374, %2362
  %2381 = mul <8 x i32> %2377, %2363
  %2382 = add nuw i64 %2359, 32
  %2383 = icmp eq i64 %2382, %2356
  br i1 %2383, label %2384, label %2358, !llvm.loop !1380

2384:                                             ; preds = %2358
  %2385 = mul <8 x i32> %2379, %2378
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = mul <8 x i32> %2381, %2386
  %2388 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2387)
  %2389 = icmp eq i64 %2352, %2356
  br i1 %2389, label %2402, label %2390

2390:                                             ; preds = %2343, %2384
  %2391 = phi i64 [ %2346, %2343 ], [ %2357, %2384 ]
  %2392 = phi i32 [ 1, %2343 ], [ %2388, %2384 ]
  br label %2393

2393:                                             ; preds = %2390, %2393
  %2394 = phi i64 [ %2399, %2393 ], [ %2391, %2390 ]
  %2395 = phi i32 [ %2398, %2393 ], [ %2392, %2390 ]
  %2396 = getelementptr inbounds i32, ptr %11, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !6
  %2398 = mul nsw i32 %2397, %2395
  %2399 = add nsw i64 %2394, -1
  %2400 = trunc i64 %2394 to i32
  %2401 = icmp sgt i32 %2400, 0
  br i1 %2401, label %2393, label %2402, !llvm.loop !1381

2402:                                             ; preds = %2393, %2384
  %2403 = phi i32 [ %2388, %2384 ], [ %2398, %2393 ]
  %2404 = and i64 %2353, 4294967295
  %2405 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !6
  %2407 = mul nsw i32 %2406, %2403
  %2408 = add nsw i32 %2407, %2347
  %2409 = icmp sgt i64 %2345, 2
  %2410 = add nsw i64 %2346, -1
  %2411 = add i32 %2344, 1
  br i1 %2409, label %2343, label %2412, !llvm.loop !1382

2412:                                             ; preds = %2402, %2339
  %2413 = phi i32 [ %2342, %2339 ], [ %2408, %2402 ]
  %2414 = icmp slt i32 %2413, %5
  br i1 %2414, label %2417, label %2415

2415:                                             ; preds = %2412
  %2416 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2417:                                             ; preds = %2412
  %2418 = sext i32 %2413 to i64
  %2419 = getelementptr inbounds double, ptr %1867, i64 %2418
  %2420 = load double, ptr %2419, align 8, !tbaa !19
  %2421 = fptosi double %2420 to i16
  %2422 = mul i16 %2421, %2421
  %2423 = mul i16 %2422, %2422
  %2424 = add i16 %2423, %2340
  store i16 %2424, ptr %1869, align 2, !tbaa !79
  %2425 = add nuw nsw i32 %2341, 1
  br i1 %2190, label %2426, label %2476

2426:                                             ; preds = %2417
  %2427 = load i32, ptr %4, align 4, !tbaa !6
  %2428 = load i32, ptr %12, align 4, !tbaa !6
  %2429 = add nsw i32 %2428, -1
  %2430 = icmp slt i32 %2427, %2429
  br i1 %2430, label %2453, label %2431

2431:                                             ; preds = %2426
  %2432 = icmp eq i32 %2427, %2429
  br i1 %2432, label %2433, label %2469

2433:                                             ; preds = %2431
  store i32 0, ptr %4, align 4, !tbaa !6
  %2434 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2434, ptr %6, align 4, !tbaa !6
  br i1 %2195, label %2476, label %2435

2435:                                             ; preds = %2433, %2463
  %2436 = phi i64 [ %2467, %2463 ], [ 1, %2433 ]
  %2437 = getelementptr inbounds i32, ptr %4, i64 %2436
  %2438 = load i32, ptr %2437, align 4, !tbaa !6
  %2439 = getelementptr inbounds i32, ptr %12, i64 %2436
  %2440 = load i32, ptr %2439, align 4, !tbaa !6
  %2441 = add nsw i32 %2440, -1
  %2442 = icmp slt i32 %2438, %2441
  br i1 %2442, label %2443, label %2461

2443:                                             ; preds = %2435
  br i1 %2430, label %2453, label %2444

2444:                                             ; preds = %2443
  %2445 = shl i64 %2436, 32
  %2446 = add i64 %2445, -4294967296
  %2447 = ashr exact i64 %2446, 32
  %2448 = getelementptr inbounds i32, ptr %7, i64 %2447
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2436
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = add nsw i32 %2451, %2449
  store i32 %2452, ptr %2450, align 4, !tbaa !6
  br label %2471

2453:                                             ; preds = %2426, %2443
  %2454 = phi i32 [ %2438, %2443 ], [ %2427, %2426 ]
  %2455 = phi ptr [ %2437, %2443 ], [ %4, %2426 ]
  %2456 = phi i64 [ %2436, %2443 ], [ 0, %2426 ]
  %2457 = add nsw i32 %2454, 1
  store i32 %2457, ptr %2455, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %7, i64 %2456
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = getelementptr inbounds i32, ptr %6, i64 %2456
  br label %2471

2461:                                             ; preds = %2435
  %2462 = icmp eq i32 %2438, %2441
  br i1 %2462, label %2463, label %2469

2463:                                             ; preds = %2461
  store i32 0, ptr %2437, align 4, !tbaa !6
  %2464 = getelementptr inbounds i32, ptr %8, i64 %2436
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2436
  store i32 %2465, ptr %2466, align 4, !tbaa !6
  %2467 = add nuw nsw i64 %2436, 1
  %2468 = icmp eq i64 %2467, %2193
  br i1 %2468, label %2476, label %2435, !llvm.loop !1383

2469:                                             ; preds = %2431, %2461
  %2470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2471:                                             ; preds = %2444, %2453
  %2472 = phi ptr [ %2460, %2453 ], [ %2437, %2444 ]
  %2473 = phi i32 [ %2459, %2453 ], [ 1, %2444 ]
  %2474 = load i32, ptr %2472, align 4, !tbaa !6
  %2475 = add nsw i32 %2474, %2473
  store i32 %2475, ptr %2472, align 4, !tbaa !6
  br label %2476

2476:                                             ; preds = %2463, %2471, %2433, %2417
  %2477 = icmp eq i32 %2425, %5
  br i1 %2477, label %5539, label %2339, !llvm.loop !1384

2478:                                             ; preds = %1876
  %2479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

2480:                                             ; preds = %18
  %2481 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !10
  %2483 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2484 = load ptr, ptr %2483, align 8, !tbaa !10
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2485 = icmp eq i32 %13, 0
  br i1 %2485, label %2486, label %2491

2486:                                             ; preds = %2480
  %2487 = load double, ptr %2482, align 8, !tbaa !19
  %2488 = fptosi double %2487 to i32
  %2489 = mul i32 %2488, %2488
  %2490 = mul i32 %2489, %2489
  store i32 %2490, ptr %2484, align 4, !tbaa !6
  br label %5539

2491:                                             ; preds = %2480
  switch i32 %1, label %3093 [
    i32 1, label %2492
    i32 0, label %2797
  ]

2492:                                             ; preds = %2491
  %2493 = getelementptr inbounds i32, ptr %3, i64 %19
  %2494 = load i32, ptr %2493, align 4, !tbaa !6
  %2495 = icmp eq i32 %2494, 0
  %2496 = icmp sgt i32 %5, 0
  br i1 %2495, label %2506, label %2497

2497:                                             ; preds = %2492
  br i1 %2496, label %2498, label %5539

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2655

2506:                                             ; preds = %2492
  br i1 %2496, label %2507, label %5539

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2515

2515:                                             ; preds = %2507, %2653
  %2516 = phi i32 [ 0, %2507 ], [ %2605, %2653 ]
  %2517 = phi double [ 0.000000e+00, %2507 ], [ %2604, %2653 ]
  %2518 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2519, label %2588

2519:                                             ; preds = %2515, %2578
  %2520 = phi i32 [ %2587, %2578 ], [ 0, %2515 ]
  %2521 = phi i64 [ %2529, %2578 ], [ %2512, %2515 ]
  %2522 = phi i64 [ %2586, %2578 ], [ %2511, %2515 ]
  %2523 = phi i32 [ %2584, %2578 ], [ %2518, %2515 ]
  %2524 = sub i32 %2510, %2520
  %2525 = tail call i32 @llvm.smin.i32(i32 %2524, i32 0)
  %2526 = sub i32 %2524, %2525
  %2527 = zext i32 %2526 to i64
  %2528 = add nuw nsw i64 %2527, 1
  %2529 = add nsw i64 %2521, -1
  %2530 = icmp ult i32 %2526, 31
  br i1 %2530, label %2566, label %2531

2531:                                             ; preds = %2519
  %2532 = and i64 %2528, 8589934560
  %2533 = sub i64 %2522, %2532
  br label %2534

2534:                                             ; preds = %2534, %2531
  %2535 = phi i64 [ 0, %2531 ], [ %2558, %2534 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2554, %2534 ]
  %2537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2555, %2534 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2556, %2534 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2531 ], [ %2557, %2534 ]
  %2540 = sub i64 %2522, %2535
  %2541 = getelementptr inbounds i32, ptr %9, i64 %2540
  %2542 = getelementptr inbounds i32, ptr %2541, i64 -7
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2541, i64 -15
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2541, i64 -23
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = getelementptr inbounds i32, ptr %2541, i64 -31
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = mul <8 x i32> %2544, %2536
  %2555 = mul <8 x i32> %2547, %2537
  %2556 = mul <8 x i32> %2550, %2538
  %2557 = mul <8 x i32> %2553, %2539
  %2558 = add nuw i64 %2535, 32
  %2559 = icmp eq i64 %2558, %2532
  br i1 %2559, label %2560, label %2534, !llvm.loop !1385

2560:                                             ; preds = %2534
  %2561 = mul <8 x i32> %2555, %2554
  %2562 = mul <8 x i32> %2556, %2561
  %2563 = mul <8 x i32> %2557, %2562
  %2564 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2563)
  %2565 = icmp eq i64 %2528, %2532
  br i1 %2565, label %2578, label %2566

2566:                                             ; preds = %2519, %2560
  %2567 = phi i64 [ %2522, %2519 ], [ %2533, %2560 ]
  %2568 = phi i32 [ 1, %2519 ], [ %2564, %2560 ]
  br label %2569

2569:                                             ; preds = %2566, %2569
  %2570 = phi i64 [ %2575, %2569 ], [ %2567, %2566 ]
  %2571 = phi i32 [ %2574, %2569 ], [ %2568, %2566 ]
  %2572 = getelementptr inbounds i32, ptr %9, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2571
  %2575 = add nsw i64 %2570, -1
  %2576 = trunc i64 %2570 to i32
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2569, label %2578, !llvm.loop !1386

2578:                                             ; preds = %2569, %2560
  %2579 = phi i32 [ %2564, %2560 ], [ %2574, %2569 ]
  %2580 = and i64 %2529, 4294967295
  %2581 = getelementptr inbounds i32, ptr %6, i64 %2580
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2579
  %2584 = add nsw i32 %2583, %2523
  %2585 = icmp sgt i64 %2521, 2
  %2586 = add nsw i64 %2522, -1
  %2587 = add i32 %2520, 1
  br i1 %2585, label %2519, label %2588, !llvm.loop !1387

2588:                                             ; preds = %2578, %2515
  %2589 = phi i32 [ %2518, %2515 ], [ %2584, %2578 ]
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds double, ptr %2, i64 %2590
  %2592 = load double, ptr %2591, align 8, !tbaa !19
  %2593 = getelementptr inbounds double, ptr %2482, i64 %2590
  %2594 = load double, ptr %2593, align 8, !tbaa !19
  %2595 = fptosi double %2594 to i32
  %2596 = load i32, ptr %2484, align 4, !tbaa !6
  %2597 = sitofp i32 %2596 to double
  %2598 = sitofp i32 %2595 to double
  %2599 = fmul fast double %2592, %2598
  %2600 = fmul fast double %2599, %2599
  %2601 = fmul fast double %2600, %2600
  %2602 = fadd fast double %2601, %2597
  %2603 = fptosi double %2602 to i32
  store i32 %2603, ptr %2484, align 4, !tbaa !6
  %2604 = fadd fast double %2592, %2517
  %2605 = add nuw nsw i32 %2516, 1
  br i1 %2509, label %2606, label %2653

2606:                                             ; preds = %2588
  %2607 = load i32, ptr %4, align 4, !tbaa !6
  %2608 = load i32, ptr %12, align 4, !tbaa !6
  %2609 = add nsw i32 %2608, -1
  %2610 = icmp slt i32 %2607, %2609
  br i1 %2610, label %2630, label %2611

2611:                                             ; preds = %2606
  %2612 = icmp eq i32 %2607, %2609
  br i1 %2612, label %2613, label %2646

2613:                                             ; preds = %2611
  store i32 0, ptr %4, align 4, !tbaa !6
  %2614 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2614, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2653, label %2615

2615:                                             ; preds = %2613, %2640
  %2616 = phi i64 [ %2644, %2640 ], [ 1, %2613 ]
  %2617 = getelementptr inbounds i32, ptr %4, i64 %2616
  %2618 = load i32, ptr %2617, align 4, !tbaa !6
  %2619 = getelementptr inbounds i32, ptr %12, i64 %2616
  %2620 = load i32, ptr %2619, align 4, !tbaa !6
  %2621 = add nsw i32 %2620, -1
  %2622 = icmp slt i32 %2618, %2621
  br i1 %2622, label %2623, label %2638

2623:                                             ; preds = %2615
  br i1 %2610, label %2630, label %2624

2624:                                             ; preds = %2623
  %2625 = getelementptr inbounds i32, ptr %7, i64 %2616
  %2626 = load i32, ptr %2625, align 4, !tbaa !6
  %2627 = getelementptr inbounds i32, ptr %6, i64 %2616
  %2628 = load i32, ptr %2627, align 4, !tbaa !6
  %2629 = add nsw i32 %2628, %2626
  store i32 %2629, ptr %2627, align 4, !tbaa !6
  br label %2648

2630:                                             ; preds = %2606, %2623
  %2631 = phi i32 [ %2618, %2623 ], [ %2607, %2606 ]
  %2632 = phi ptr [ %2617, %2623 ], [ %4, %2606 ]
  %2633 = phi i64 [ %2616, %2623 ], [ 0, %2606 ]
  %2634 = add nsw i32 %2631, 1
  store i32 %2634, ptr %2632, align 4, !tbaa !6
  %2635 = getelementptr inbounds i32, ptr %7, i64 %2633
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2633
  br label %2648

2638:                                             ; preds = %2615
  %2639 = icmp eq i32 %2618, %2621
  br i1 %2639, label %2640, label %2646

2640:                                             ; preds = %2638
  store i32 0, ptr %2617, align 4, !tbaa !6
  %2641 = getelementptr inbounds i32, ptr %8, i64 %2616
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2616
  store i32 %2642, ptr %2643, align 4, !tbaa !6
  %2644 = add nuw nsw i64 %2616, 1
  %2645 = icmp eq i64 %2644, %2512
  br i1 %2645, label %2653, label %2615, !llvm.loop !1388

2646:                                             ; preds = %2611, %2638
  %2647 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2648:                                             ; preds = %2624, %2630
  %2649 = phi ptr [ %2637, %2630 ], [ %2617, %2624 ]
  %2650 = phi i32 [ %2636, %2630 ], [ 1, %2624 ]
  %2651 = load i32, ptr %2649, align 4, !tbaa !6
  %2652 = add nsw i32 %2651, %2650
  store i32 %2652, ptr %2649, align 4, !tbaa !6
  br label %2653

2653:                                             ; preds = %2640, %2648, %2613, %2588
  %2654 = icmp eq i32 %2605, %5
  br i1 %2654, label %5539, label %2515, !llvm.loop !1389

2655:                                             ; preds = %2498, %2795
  %2656 = phi i32 [ 0, %2498 ], [ %2744, %2795 ]
  %2657 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2658, label %2727

2658:                                             ; preds = %2655, %2717
  %2659 = phi i32 [ %2726, %2717 ], [ 0, %2655 ]
  %2660 = phi i64 [ %2668, %2717 ], [ %2503, %2655 ]
  %2661 = phi i64 [ %2725, %2717 ], [ %2502, %2655 ]
  %2662 = phi i32 [ %2723, %2717 ], [ %2657, %2655 ]
  %2663 = sub i32 %2501, %2659
  %2664 = tail call i32 @llvm.smin.i32(i32 %2663, i32 0)
  %2665 = sub i32 %2663, %2664
  %2666 = zext i32 %2665 to i64
  %2667 = add nuw nsw i64 %2666, 1
  %2668 = add nsw i64 %2660, -1
  %2669 = icmp ult i32 %2665, 31
  br i1 %2669, label %2705, label %2670

2670:                                             ; preds = %2658
  %2671 = and i64 %2667, 8589934560
  %2672 = sub i64 %2661, %2671
  br label %2673

2673:                                             ; preds = %2673, %2670
  %2674 = phi i64 [ 0, %2670 ], [ %2697, %2673 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2693, %2673 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2694, %2673 ]
  %2677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2695, %2673 ]
  %2678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2670 ], [ %2696, %2673 ]
  %2679 = sub i64 %2661, %2674
  %2680 = getelementptr inbounds i32, ptr %11, i64 %2679
  %2681 = getelementptr inbounds i32, ptr %2680, i64 -7
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !6
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2680, i64 -15
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !6
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = getelementptr inbounds i32, ptr %2680, i64 -23
  %2688 = load <8 x i32>, ptr %2687, align 4, !tbaa !6
  %2689 = shufflevector <8 x i32> %2688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2690 = getelementptr inbounds i32, ptr %2680, i64 -31
  %2691 = load <8 x i32>, ptr %2690, align 4, !tbaa !6
  %2692 = shufflevector <8 x i32> %2691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2693 = mul <8 x i32> %2683, %2675
  %2694 = mul <8 x i32> %2686, %2676
  %2695 = mul <8 x i32> %2689, %2677
  %2696 = mul <8 x i32> %2692, %2678
  %2697 = add nuw i64 %2674, 32
  %2698 = icmp eq i64 %2697, %2671
  br i1 %2698, label %2699, label %2673, !llvm.loop !1390

2699:                                             ; preds = %2673
  %2700 = mul <8 x i32> %2694, %2693
  %2701 = mul <8 x i32> %2695, %2700
  %2702 = mul <8 x i32> %2696, %2701
  %2703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2702)
  %2704 = icmp eq i64 %2667, %2671
  br i1 %2704, label %2717, label %2705

2705:                                             ; preds = %2658, %2699
  %2706 = phi i64 [ %2661, %2658 ], [ %2672, %2699 ]
  %2707 = phi i32 [ 1, %2658 ], [ %2703, %2699 ]
  br label %2708

2708:                                             ; preds = %2705, %2708
  %2709 = phi i64 [ %2714, %2708 ], [ %2706, %2705 ]
  %2710 = phi i32 [ %2713, %2708 ], [ %2707, %2705 ]
  %2711 = getelementptr inbounds i32, ptr %11, i64 %2709
  %2712 = load i32, ptr %2711, align 4, !tbaa !6
  %2713 = mul nsw i32 %2712, %2710
  %2714 = add nsw i64 %2709, -1
  %2715 = trunc i64 %2709 to i32
  %2716 = icmp sgt i32 %2715, 0
  br i1 %2716, label %2708, label %2717, !llvm.loop !1391

2717:                                             ; preds = %2708, %2699
  %2718 = phi i32 [ %2703, %2699 ], [ %2713, %2708 ]
  %2719 = and i64 %2668, 4294967295
  %2720 = getelementptr inbounds i32, ptr %6, i64 %2719
  %2721 = load i32, ptr %2720, align 4, !tbaa !6
  %2722 = mul nsw i32 %2721, %2718
  %2723 = add nsw i32 %2722, %2662
  %2724 = icmp sgt i64 %2660, 2
  %2725 = add nsw i64 %2661, -1
  %2726 = add i32 %2659, 1
  br i1 %2724, label %2658, label %2727, !llvm.loop !1392

2727:                                             ; preds = %2717, %2655
  %2728 = phi i32 [ %2657, %2655 ], [ %2723, %2717 ]
  %2729 = icmp slt i32 %2728, %5
  br i1 %2729, label %2732, label %2730

2730:                                             ; preds = %2727
  %2731 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

2732:                                             ; preds = %2727
  %2733 = sext i32 %2728 to i64
  %2734 = getelementptr inbounds double, ptr %2482, i64 %2733
  %2735 = load double, ptr %2734, align 8, !tbaa !19
  %2736 = fptosi double %2735 to i32
  %2737 = load i32, ptr %2484, align 4, !tbaa !6
  %2738 = sitofp i32 %2737 to double
  %2739 = sitofp i32 %2736 to double
  %2740 = fmul fast double %2739, %2739
  %2741 = fmul fast double %2740, %2740
  %2742 = fadd fast double %2741, %2738
  %2743 = fptosi double %2742 to i32
  store i32 %2743, ptr %2484, align 4, !tbaa !6
  %2744 = add nuw nsw i32 %2656, 1
  br i1 %2500, label %2745, label %2795

2745:                                             ; preds = %2732
  %2746 = load i32, ptr %4, align 4, !tbaa !6
  %2747 = load i32, ptr %12, align 4, !tbaa !6
  %2748 = add nsw i32 %2747, -1
  %2749 = icmp slt i32 %2746, %2748
  br i1 %2749, label %2772, label %2750

2750:                                             ; preds = %2745
  %2751 = icmp eq i32 %2746, %2748
  br i1 %2751, label %2752, label %2788

2752:                                             ; preds = %2750
  store i32 0, ptr %4, align 4, !tbaa !6
  %2753 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2753, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2795, label %2754

2754:                                             ; preds = %2752, %2782
  %2755 = phi i64 [ %2786, %2782 ], [ 1, %2752 ]
  %2756 = getelementptr inbounds i32, ptr %4, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = getelementptr inbounds i32, ptr %12, i64 %2755
  %2759 = load i32, ptr %2758, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2757, %2760
  br i1 %2761, label %2762, label %2780

2762:                                             ; preds = %2754
  br i1 %2749, label %2772, label %2763

2763:                                             ; preds = %2762
  %2764 = shl i64 %2755, 32
  %2765 = add i64 %2764, -4294967296
  %2766 = ashr exact i64 %2765, 32
  %2767 = getelementptr inbounds i32, ptr %7, i64 %2766
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = getelementptr inbounds i32, ptr %6, i64 %2755
  %2770 = load i32, ptr %2769, align 4, !tbaa !6
  %2771 = add nsw i32 %2770, %2768
  store i32 %2771, ptr %2769, align 4, !tbaa !6
  br label %2790

2772:                                             ; preds = %2745, %2762
  %2773 = phi i32 [ %2757, %2762 ], [ %2746, %2745 ]
  %2774 = phi ptr [ %2756, %2762 ], [ %4, %2745 ]
  %2775 = phi i64 [ %2755, %2762 ], [ 0, %2745 ]
  %2776 = add nsw i32 %2773, 1
  store i32 %2776, ptr %2774, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %7, i64 %2775
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2775
  br label %2790

2780:                                             ; preds = %2754
  %2781 = icmp eq i32 %2757, %2760
  br i1 %2781, label %2782, label %2788

2782:                                             ; preds = %2780
  store i32 0, ptr %2756, align 4, !tbaa !6
  %2783 = getelementptr inbounds i32, ptr %8, i64 %2755
  %2784 = load i32, ptr %2783, align 4, !tbaa !6
  %2785 = getelementptr inbounds i32, ptr %6, i64 %2755
  store i32 %2784, ptr %2785, align 4, !tbaa !6
  %2786 = add nuw nsw i64 %2755, 1
  %2787 = icmp eq i64 %2786, %2503
  br i1 %2787, label %2795, label %2754, !llvm.loop !1393

2788:                                             ; preds = %2750, %2780
  %2789 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2790:                                             ; preds = %2763, %2772
  %2791 = phi ptr [ %2779, %2772 ], [ %2756, %2763 ]
  %2792 = phi i32 [ %2778, %2772 ], [ 1, %2763 ]
  %2793 = load i32, ptr %2791, align 4, !tbaa !6
  %2794 = add nsw i32 %2793, %2792
  store i32 %2794, ptr %2791, align 4, !tbaa !6
  br label %2795

2795:                                             ; preds = %2782, %2790, %2752, %2732
  %2796 = icmp eq i32 %2744, %5
  br i1 %2796, label %5539, label %2655, !llvm.loop !1394

2797:                                             ; preds = %2491
  %2798 = getelementptr inbounds i32, ptr %3, i64 %19
  %2799 = load i32, ptr %2798, align 4, !tbaa !6
  %2800 = icmp eq i32 %2799, 0
  %2801 = icmp sgt i32 %5, 0
  br i1 %2800, label %2811, label %2802

2802:                                             ; preds = %2797
  br i1 %2801, label %2803, label %5539

2803:                                             ; preds = %2802
  %2804 = icmp sgt i32 %13, 1
  %2805 = icmp sgt i32 %13, 0
  %2806 = add i32 %13, -2
  %2807 = zext i32 %2806 to i64
  %2808 = zext i32 %13 to i64
  %2809 = add nuw i32 %5, 1
  %2810 = icmp eq i32 %13, 1
  br label %2954

2811:                                             ; preds = %2797
  br i1 %2801, label %2812, label %5539

2812:                                             ; preds = %2811
  %2813 = icmp sgt i32 %13, 1
  %2814 = icmp sgt i32 %13, 0
  %2815 = add i32 %13, -2
  %2816 = zext i32 %2815 to i64
  %2817 = zext i32 %13 to i64
  %2818 = add nuw i32 %5, 1
  %2819 = icmp eq i32 %13, 1
  br label %2820

2820:                                             ; preds = %2812, %2952
  %2821 = phi i32 [ 0, %2812 ], [ %2904, %2952 ]
  %2822 = phi double [ 0.000000e+00, %2812 ], [ %2903, %2952 ]
  %2823 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2813, label %2824, label %2893

2824:                                             ; preds = %2820, %2883
  %2825 = phi i32 [ %2892, %2883 ], [ 0, %2820 ]
  %2826 = phi i64 [ %2834, %2883 ], [ %2817, %2820 ]
  %2827 = phi i64 [ %2891, %2883 ], [ %2816, %2820 ]
  %2828 = phi i32 [ %2889, %2883 ], [ %2823, %2820 ]
  %2829 = sub i32 %2815, %2825
  %2830 = tail call i32 @llvm.smin.i32(i32 %2829, i32 0)
  %2831 = sub i32 %2829, %2830
  %2832 = zext i32 %2831 to i64
  %2833 = add nuw nsw i64 %2832, 1
  %2834 = add nsw i64 %2826, -1
  %2835 = icmp ult i32 %2831, 31
  br i1 %2835, label %2871, label %2836

2836:                                             ; preds = %2824
  %2837 = and i64 %2833, 8589934560
  %2838 = sub i64 %2827, %2837
  br label %2839

2839:                                             ; preds = %2839, %2836
  %2840 = phi i64 [ 0, %2836 ], [ %2863, %2839 ]
  %2841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2859, %2839 ]
  %2842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2860, %2839 ]
  %2843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2861, %2839 ]
  %2844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2836 ], [ %2862, %2839 ]
  %2845 = sub i64 %2827, %2840
  %2846 = getelementptr inbounds i32, ptr %9, i64 %2845
  %2847 = getelementptr inbounds i32, ptr %2846, i64 -7
  %2848 = load <8 x i32>, ptr %2847, align 4, !tbaa !6
  %2849 = shufflevector <8 x i32> %2848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2850 = getelementptr inbounds i32, ptr %2846, i64 -15
  %2851 = load <8 x i32>, ptr %2850, align 4, !tbaa !6
  %2852 = shufflevector <8 x i32> %2851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2853 = getelementptr inbounds i32, ptr %2846, i64 -23
  %2854 = load <8 x i32>, ptr %2853, align 4, !tbaa !6
  %2855 = shufflevector <8 x i32> %2854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2856 = getelementptr inbounds i32, ptr %2846, i64 -31
  %2857 = load <8 x i32>, ptr %2856, align 4, !tbaa !6
  %2858 = shufflevector <8 x i32> %2857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2859 = mul <8 x i32> %2849, %2841
  %2860 = mul <8 x i32> %2852, %2842
  %2861 = mul <8 x i32> %2855, %2843
  %2862 = mul <8 x i32> %2858, %2844
  %2863 = add nuw i64 %2840, 32
  %2864 = icmp eq i64 %2863, %2837
  br i1 %2864, label %2865, label %2839, !llvm.loop !1395

2865:                                             ; preds = %2839
  %2866 = mul <8 x i32> %2860, %2859
  %2867 = mul <8 x i32> %2861, %2866
  %2868 = mul <8 x i32> %2862, %2867
  %2869 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2868)
  %2870 = icmp eq i64 %2833, %2837
  br i1 %2870, label %2883, label %2871

2871:                                             ; preds = %2824, %2865
  %2872 = phi i64 [ %2827, %2824 ], [ %2838, %2865 ]
  %2873 = phi i32 [ 1, %2824 ], [ %2869, %2865 ]
  br label %2874

2874:                                             ; preds = %2871, %2874
  %2875 = phi i64 [ %2880, %2874 ], [ %2872, %2871 ]
  %2876 = phi i32 [ %2879, %2874 ], [ %2873, %2871 ]
  %2877 = getelementptr inbounds i32, ptr %9, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !6
  %2879 = mul nsw i32 %2878, %2876
  %2880 = add nsw i64 %2875, -1
  %2881 = trunc i64 %2875 to i32
  %2882 = icmp sgt i32 %2881, 0
  br i1 %2882, label %2874, label %2883, !llvm.loop !1396

2883:                                             ; preds = %2874, %2865
  %2884 = phi i32 [ %2869, %2865 ], [ %2879, %2874 ]
  %2885 = and i64 %2834, 4294967295
  %2886 = getelementptr inbounds i32, ptr %6, i64 %2885
  %2887 = load i32, ptr %2886, align 4, !tbaa !6
  %2888 = mul nsw i32 %2887, %2884
  %2889 = add nsw i32 %2888, %2828
  %2890 = icmp sgt i64 %2826, 2
  %2891 = add nsw i64 %2827, -1
  %2892 = add i32 %2825, 1
  br i1 %2890, label %2824, label %2893, !llvm.loop !1397

2893:                                             ; preds = %2883, %2820
  %2894 = phi i32 [ %2823, %2820 ], [ %2889, %2883 ]
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds double, ptr %2482, i64 %2895
  %2897 = load double, ptr %2896, align 8, !tbaa !19
  %2898 = fptosi double %2897 to i32
  %2899 = load i32, ptr %2484, align 4, !tbaa !6
  %2900 = mul i32 %2898, %2898
  %2901 = mul i32 %2900, %2900
  %2902 = add nsw i32 %2901, %2899
  store i32 %2902, ptr %2484, align 4, !tbaa !6
  %2903 = fadd fast double %2822, 1.000000e+00
  %2904 = add nuw nsw i32 %2821, 1
  br i1 %2814, label %2905, label %2952

2905:                                             ; preds = %2893
  %2906 = load i32, ptr %4, align 4, !tbaa !6
  %2907 = load i32, ptr %12, align 4, !tbaa !6
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2906, %2908
  br i1 %2909, label %2929, label %2910

2910:                                             ; preds = %2905
  %2911 = icmp eq i32 %2906, %2908
  br i1 %2911, label %2912, label %2945

2912:                                             ; preds = %2910
  store i32 0, ptr %4, align 4, !tbaa !6
  %2913 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2913, ptr %6, align 4, !tbaa !6
  br i1 %2819, label %2952, label %2914

2914:                                             ; preds = %2912, %2939
  %2915 = phi i64 [ %2943, %2939 ], [ 1, %2912 ]
  %2916 = getelementptr inbounds i32, ptr %4, i64 %2915
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %12, i64 %2915
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, -1
  %2921 = icmp slt i32 %2917, %2920
  br i1 %2921, label %2922, label %2937

2922:                                             ; preds = %2914
  br i1 %2909, label %2929, label %2923

2923:                                             ; preds = %2922
  %2924 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2925 = load i32, ptr %2924, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %6, i64 %2915
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = add nsw i32 %2927, %2925
  store i32 %2928, ptr %2926, align 4, !tbaa !6
  br label %2947

2929:                                             ; preds = %2905, %2922
  %2930 = phi i32 [ %2917, %2922 ], [ %2906, %2905 ]
  %2931 = phi ptr [ %2916, %2922 ], [ %4, %2905 ]
  %2932 = phi i64 [ %2915, %2922 ], [ 0, %2905 ]
  %2933 = add nsw i32 %2930, 1
  store i32 %2933, ptr %2931, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %7, i64 %2932
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2932
  br label %2947

2937:                                             ; preds = %2914
  %2938 = icmp eq i32 %2917, %2920
  br i1 %2938, label %2939, label %2945

2939:                                             ; preds = %2937
  store i32 0, ptr %2916, align 4, !tbaa !6
  %2940 = getelementptr inbounds i32, ptr %8, i64 %2915
  %2941 = load i32, ptr %2940, align 4, !tbaa !6
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2915
  store i32 %2941, ptr %2942, align 4, !tbaa !6
  %2943 = add nuw nsw i64 %2915, 1
  %2944 = icmp eq i64 %2943, %2817
  br i1 %2944, label %2952, label %2914, !llvm.loop !1398

2945:                                             ; preds = %2910, %2937
  %2946 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

2947:                                             ; preds = %2923, %2929
  %2948 = phi ptr [ %2936, %2929 ], [ %2916, %2923 ]
  %2949 = phi i32 [ %2935, %2929 ], [ 1, %2923 ]
  %2950 = load i32, ptr %2948, align 4, !tbaa !6
  %2951 = add nsw i32 %2950, %2949
  store i32 %2951, ptr %2948, align 4, !tbaa !6
  br label %2952

2952:                                             ; preds = %2939, %2947, %2912, %2893
  %2953 = icmp eq i32 %2904, %5
  br i1 %2953, label %5539, label %2820, !llvm.loop !1399

2954:                                             ; preds = %2803, %3091
  %2955 = phi i32 [ 0, %2803 ], [ %3040, %3091 ]
  %2956 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2804, label %2957, label %3026

2957:                                             ; preds = %2954, %3016
  %2958 = phi i32 [ %3025, %3016 ], [ 0, %2954 ]
  %2959 = phi i64 [ %2967, %3016 ], [ %2808, %2954 ]
  %2960 = phi i64 [ %3024, %3016 ], [ %2807, %2954 ]
  %2961 = phi i32 [ %3022, %3016 ], [ %2956, %2954 ]
  %2962 = sub i32 %2806, %2958
  %2963 = tail call i32 @llvm.smin.i32(i32 %2962, i32 0)
  %2964 = sub i32 %2962, %2963
  %2965 = zext i32 %2964 to i64
  %2966 = add nuw nsw i64 %2965, 1
  %2967 = add nsw i64 %2959, -1
  %2968 = icmp ult i32 %2964, 31
  br i1 %2968, label %3004, label %2969

2969:                                             ; preds = %2957
  %2970 = and i64 %2966, 8589934560
  %2971 = sub i64 %2960, %2970
  br label %2972

2972:                                             ; preds = %2972, %2969
  %2973 = phi i64 [ 0, %2969 ], [ %2996, %2972 ]
  %2974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2992, %2972 ]
  %2975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2993, %2972 ]
  %2976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2994, %2972 ]
  %2977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2969 ], [ %2995, %2972 ]
  %2978 = sub i64 %2960, %2973
  %2979 = getelementptr inbounds i32, ptr %11, i64 %2978
  %2980 = getelementptr inbounds i32, ptr %2979, i64 -7
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !6
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = getelementptr inbounds i32, ptr %2979, i64 -15
  %2984 = load <8 x i32>, ptr %2983, align 4, !tbaa !6
  %2985 = shufflevector <8 x i32> %2984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2986 = getelementptr inbounds i32, ptr %2979, i64 -23
  %2987 = load <8 x i32>, ptr %2986, align 4, !tbaa !6
  %2988 = shufflevector <8 x i32> %2987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2989 = getelementptr inbounds i32, ptr %2979, i64 -31
  %2990 = load <8 x i32>, ptr %2989, align 4, !tbaa !6
  %2991 = shufflevector <8 x i32> %2990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2992 = mul <8 x i32> %2982, %2974
  %2993 = mul <8 x i32> %2985, %2975
  %2994 = mul <8 x i32> %2988, %2976
  %2995 = mul <8 x i32> %2991, %2977
  %2996 = add nuw i64 %2973, 32
  %2997 = icmp eq i64 %2996, %2970
  br i1 %2997, label %2998, label %2972, !llvm.loop !1400

2998:                                             ; preds = %2972
  %2999 = mul <8 x i32> %2993, %2992
  %3000 = mul <8 x i32> %2994, %2999
  %3001 = mul <8 x i32> %2995, %3000
  %3002 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3001)
  %3003 = icmp eq i64 %2966, %2970
  br i1 %3003, label %3016, label %3004

3004:                                             ; preds = %2957, %2998
  %3005 = phi i64 [ %2960, %2957 ], [ %2971, %2998 ]
  %3006 = phi i32 [ 1, %2957 ], [ %3002, %2998 ]
  br label %3007

3007:                                             ; preds = %3004, %3007
  %3008 = phi i64 [ %3013, %3007 ], [ %3005, %3004 ]
  %3009 = phi i32 [ %3012, %3007 ], [ %3006, %3004 ]
  %3010 = getelementptr inbounds i32, ptr %11, i64 %3008
  %3011 = load i32, ptr %3010, align 4, !tbaa !6
  %3012 = mul nsw i32 %3011, %3009
  %3013 = add nsw i64 %3008, -1
  %3014 = trunc i64 %3008 to i32
  %3015 = icmp sgt i32 %3014, 0
  br i1 %3015, label %3007, label %3016, !llvm.loop !1401

3016:                                             ; preds = %3007, %2998
  %3017 = phi i32 [ %3002, %2998 ], [ %3012, %3007 ]
  %3018 = and i64 %2967, 4294967295
  %3019 = getelementptr inbounds i32, ptr %6, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !6
  %3021 = mul nsw i32 %3020, %3017
  %3022 = add nsw i32 %3021, %2961
  %3023 = icmp sgt i64 %2959, 2
  %3024 = add nsw i64 %2960, -1
  %3025 = add i32 %2958, 1
  br i1 %3023, label %2957, label %3026, !llvm.loop !1402

3026:                                             ; preds = %3016, %2954
  %3027 = phi i32 [ %2956, %2954 ], [ %3022, %3016 ]
  %3028 = icmp slt i32 %3027, %5
  br i1 %3028, label %3031, label %3029

3029:                                             ; preds = %3026
  %3030 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3031:                                             ; preds = %3026
  %3032 = sext i32 %3027 to i64
  %3033 = getelementptr inbounds double, ptr %2482, i64 %3032
  %3034 = load double, ptr %3033, align 8, !tbaa !19
  %3035 = fptosi double %3034 to i32
  %3036 = load i32, ptr %2484, align 4, !tbaa !6
  %3037 = mul i32 %3035, %3035
  %3038 = mul i32 %3037, %3037
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %2484, align 4, !tbaa !6
  %3040 = add nuw nsw i32 %2955, 1
  br i1 %2805, label %3041, label %3091

3041:                                             ; preds = %3031
  %3042 = load i32, ptr %4, align 4, !tbaa !6
  %3043 = load i32, ptr %12, align 4, !tbaa !6
  %3044 = add nsw i32 %3043, -1
  %3045 = icmp slt i32 %3042, %3044
  br i1 %3045, label %3068, label %3046

3046:                                             ; preds = %3041
  %3047 = icmp eq i32 %3042, %3044
  br i1 %3047, label %3048, label %3084

3048:                                             ; preds = %3046
  store i32 0, ptr %4, align 4, !tbaa !6
  %3049 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3049, ptr %6, align 4, !tbaa !6
  br i1 %2810, label %3091, label %3050

3050:                                             ; preds = %3048, %3078
  %3051 = phi i64 [ %3082, %3078 ], [ 1, %3048 ]
  %3052 = getelementptr inbounds i32, ptr %4, i64 %3051
  %3053 = load i32, ptr %3052, align 4, !tbaa !6
  %3054 = getelementptr inbounds i32, ptr %12, i64 %3051
  %3055 = load i32, ptr %3054, align 4, !tbaa !6
  %3056 = add nsw i32 %3055, -1
  %3057 = icmp slt i32 %3053, %3056
  br i1 %3057, label %3058, label %3076

3058:                                             ; preds = %3050
  br i1 %3045, label %3068, label %3059

3059:                                             ; preds = %3058
  %3060 = shl i64 %3051, 32
  %3061 = add i64 %3060, -4294967296
  %3062 = ashr exact i64 %3061, 32
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3062
  %3064 = load i32, ptr %3063, align 4, !tbaa !6
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3051
  %3066 = load i32, ptr %3065, align 4, !tbaa !6
  %3067 = add nsw i32 %3066, %3064
  store i32 %3067, ptr %3065, align 4, !tbaa !6
  br label %3086

3068:                                             ; preds = %3041, %3058
  %3069 = phi i32 [ %3053, %3058 ], [ %3042, %3041 ]
  %3070 = phi ptr [ %3052, %3058 ], [ %4, %3041 ]
  %3071 = phi i64 [ %3051, %3058 ], [ 0, %3041 ]
  %3072 = add nsw i32 %3069, 1
  store i32 %3072, ptr %3070, align 4, !tbaa !6
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3071
  %3074 = load i32, ptr %3073, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3071
  br label %3086

3076:                                             ; preds = %3050
  %3077 = icmp eq i32 %3053, %3056
  br i1 %3077, label %3078, label %3084

3078:                                             ; preds = %3076
  store i32 0, ptr %3052, align 4, !tbaa !6
  %3079 = getelementptr inbounds i32, ptr %8, i64 %3051
  %3080 = load i32, ptr %3079, align 4, !tbaa !6
  %3081 = getelementptr inbounds i32, ptr %6, i64 %3051
  store i32 %3080, ptr %3081, align 4, !tbaa !6
  %3082 = add nuw nsw i64 %3051, 1
  %3083 = icmp eq i64 %3082, %2808
  br i1 %3083, label %3091, label %3050, !llvm.loop !1403

3084:                                             ; preds = %3046, %3076
  %3085 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3086:                                             ; preds = %3059, %3068
  %3087 = phi ptr [ %3075, %3068 ], [ %3052, %3059 ]
  %3088 = phi i32 [ %3074, %3068 ], [ 1, %3059 ]
  %3089 = load i32, ptr %3087, align 4, !tbaa !6
  %3090 = add nsw i32 %3089, %3088
  store i32 %3090, ptr %3087, align 4, !tbaa !6
  br label %3091

3091:                                             ; preds = %3078, %3086, %3048, %3031
  %3092 = icmp eq i32 %3040, %5
  br i1 %3092, label %5539, label %2954, !llvm.loop !1404

3093:                                             ; preds = %2491
  %3094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

3095:                                             ; preds = %18
  %3096 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3097 = load ptr, ptr %3096, align 8, !tbaa !10
  %3098 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3099 = load ptr, ptr %3098, align 8, !tbaa !10
  store i64 0, ptr %3099, align 8, !tbaa !121
  %3100 = icmp eq i32 %13, 0
  br i1 %3100, label %3101, label %3106

3101:                                             ; preds = %3095
  %3102 = load double, ptr %3097, align 8, !tbaa !19
  %3103 = fptosi double %3102 to i64
  %3104 = mul i64 %3103, %3103
  %3105 = mul i64 %3104, %3104
  store i64 %3105, ptr %3099, align 8, !tbaa !121
  br label %5539

3106:                                             ; preds = %3095
  switch i32 %1, label %3708 [
    i32 1, label %3107
    i32 0, label %3412
  ]

3107:                                             ; preds = %3106
  %3108 = getelementptr inbounds i32, ptr %3, i64 %19
  %3109 = load i32, ptr %3108, align 4, !tbaa !6
  %3110 = icmp eq i32 %3109, 0
  %3111 = icmp sgt i32 %5, 0
  br i1 %3110, label %3121, label %3112

3112:                                             ; preds = %3107
  br i1 %3111, label %3113, label %5539

3113:                                             ; preds = %3112
  %3114 = icmp sgt i32 %13, 1
  %3115 = icmp sgt i32 %13, 0
  %3116 = add i32 %13, -2
  %3117 = zext i32 %3116 to i64
  %3118 = zext i32 %13 to i64
  %3119 = add nuw i32 %5, 1
  %3120 = icmp eq i32 %13, 1
  br label %3270

3121:                                             ; preds = %3107
  br i1 %3111, label %3122, label %5539

3122:                                             ; preds = %3121
  %3123 = icmp sgt i32 %13, 1
  %3124 = icmp sgt i32 %13, 0
  %3125 = add i32 %13, -2
  %3126 = zext i32 %3125 to i64
  %3127 = zext i32 %13 to i64
  %3128 = add nuw i32 %5, 1
  %3129 = icmp eq i32 %13, 1
  br label %3130

3130:                                             ; preds = %3122, %3268
  %3131 = phi i64 [ 0, %3122 ], [ %3218, %3268 ]
  %3132 = phi i32 [ 0, %3122 ], [ %3220, %3268 ]
  %3133 = phi double [ 0.000000e+00, %3122 ], [ %3219, %3268 ]
  %3134 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3123, label %3135, label %3204

3135:                                             ; preds = %3130, %3194
  %3136 = phi i32 [ %3203, %3194 ], [ 0, %3130 ]
  %3137 = phi i64 [ %3145, %3194 ], [ %3127, %3130 ]
  %3138 = phi i64 [ %3202, %3194 ], [ %3126, %3130 ]
  %3139 = phi i32 [ %3200, %3194 ], [ %3134, %3130 ]
  %3140 = sub i32 %3125, %3136
  %3141 = tail call i32 @llvm.smin.i32(i32 %3140, i32 0)
  %3142 = sub i32 %3140, %3141
  %3143 = zext i32 %3142 to i64
  %3144 = add nuw nsw i64 %3143, 1
  %3145 = add nsw i64 %3137, -1
  %3146 = icmp ult i32 %3142, 31
  br i1 %3146, label %3182, label %3147

3147:                                             ; preds = %3135
  %3148 = and i64 %3144, 8589934560
  %3149 = sub i64 %3138, %3148
  br label %3150

3150:                                             ; preds = %3150, %3147
  %3151 = phi i64 [ 0, %3147 ], [ %3174, %3150 ]
  %3152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3170, %3150 ]
  %3153 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3171, %3150 ]
  %3154 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3172, %3150 ]
  %3155 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3147 ], [ %3173, %3150 ]
  %3156 = sub i64 %3138, %3151
  %3157 = getelementptr inbounds i32, ptr %9, i64 %3156
  %3158 = getelementptr inbounds i32, ptr %3157, i64 -7
  %3159 = load <8 x i32>, ptr %3158, align 4, !tbaa !6
  %3160 = shufflevector <8 x i32> %3159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3161 = getelementptr inbounds i32, ptr %3157, i64 -15
  %3162 = load <8 x i32>, ptr %3161, align 4, !tbaa !6
  %3163 = shufflevector <8 x i32> %3162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3164 = getelementptr inbounds i32, ptr %3157, i64 -23
  %3165 = load <8 x i32>, ptr %3164, align 4, !tbaa !6
  %3166 = shufflevector <8 x i32> %3165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3167 = getelementptr inbounds i32, ptr %3157, i64 -31
  %3168 = load <8 x i32>, ptr %3167, align 4, !tbaa !6
  %3169 = shufflevector <8 x i32> %3168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3170 = mul <8 x i32> %3160, %3152
  %3171 = mul <8 x i32> %3163, %3153
  %3172 = mul <8 x i32> %3166, %3154
  %3173 = mul <8 x i32> %3169, %3155
  %3174 = add nuw i64 %3151, 32
  %3175 = icmp eq i64 %3174, %3148
  br i1 %3175, label %3176, label %3150, !llvm.loop !1405

3176:                                             ; preds = %3150
  %3177 = mul <8 x i32> %3171, %3170
  %3178 = mul <8 x i32> %3172, %3177
  %3179 = mul <8 x i32> %3173, %3178
  %3180 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3179)
  %3181 = icmp eq i64 %3144, %3148
  br i1 %3181, label %3194, label %3182

3182:                                             ; preds = %3135, %3176
  %3183 = phi i64 [ %3138, %3135 ], [ %3149, %3176 ]
  %3184 = phi i32 [ 1, %3135 ], [ %3180, %3176 ]
  br label %3185

3185:                                             ; preds = %3182, %3185
  %3186 = phi i64 [ %3191, %3185 ], [ %3183, %3182 ]
  %3187 = phi i32 [ %3190, %3185 ], [ %3184, %3182 ]
  %3188 = getelementptr inbounds i32, ptr %9, i64 %3186
  %3189 = load i32, ptr %3188, align 4, !tbaa !6
  %3190 = mul nsw i32 %3189, %3187
  %3191 = add nsw i64 %3186, -1
  %3192 = trunc i64 %3186 to i32
  %3193 = icmp sgt i32 %3192, 0
  br i1 %3193, label %3185, label %3194, !llvm.loop !1406

3194:                                             ; preds = %3185, %3176
  %3195 = phi i32 [ %3180, %3176 ], [ %3190, %3185 ]
  %3196 = and i64 %3145, 4294967295
  %3197 = getelementptr inbounds i32, ptr %6, i64 %3196
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = mul nsw i32 %3198, %3195
  %3200 = add nsw i32 %3199, %3139
  %3201 = icmp sgt i64 %3137, 2
  %3202 = add nsw i64 %3138, -1
  %3203 = add i32 %3136, 1
  br i1 %3201, label %3135, label %3204, !llvm.loop !1407

3204:                                             ; preds = %3194, %3130
  %3205 = phi i32 [ %3134, %3130 ], [ %3200, %3194 ]
  %3206 = sext i32 %3205 to i64
  %3207 = getelementptr inbounds double, ptr %2, i64 %3206
  %3208 = load double, ptr %3207, align 8, !tbaa !19
  %3209 = getelementptr inbounds double, ptr %3097, i64 %3206
  %3210 = load double, ptr %3209, align 8, !tbaa !19
  %3211 = fptosi double %3210 to i64
  %3212 = sitofp i64 %3131 to double
  %3213 = sitofp i64 %3211 to double
  %3214 = fmul fast double %3208, %3213
  %3215 = fmul fast double %3214, %3214
  %3216 = fmul fast double %3215, %3215
  %3217 = fadd fast double %3216, %3212
  %3218 = fptosi double %3217 to i64
  %3219 = fadd fast double %3208, %3133
  %3220 = add nuw nsw i32 %3132, 1
  br i1 %3124, label %3221, label %3268

3221:                                             ; preds = %3204
  %3222 = load i32, ptr %4, align 4, !tbaa !6
  %3223 = load i32, ptr %12, align 4, !tbaa !6
  %3224 = add nsw i32 %3223, -1
  %3225 = icmp slt i32 %3222, %3224
  br i1 %3225, label %3245, label %3226

3226:                                             ; preds = %3221
  %3227 = icmp eq i32 %3222, %3224
  br i1 %3227, label %3228, label %3261

3228:                                             ; preds = %3226
  store i32 0, ptr %4, align 4, !tbaa !6
  %3229 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3229, ptr %6, align 4, !tbaa !6
  br i1 %3129, label %3268, label %3230

3230:                                             ; preds = %3228, %3255
  %3231 = phi i64 [ %3259, %3255 ], [ 1, %3228 ]
  %3232 = getelementptr inbounds i32, ptr %4, i64 %3231
  %3233 = load i32, ptr %3232, align 4, !tbaa !6
  %3234 = getelementptr inbounds i32, ptr %12, i64 %3231
  %3235 = load i32, ptr %3234, align 4, !tbaa !6
  %3236 = add nsw i32 %3235, -1
  %3237 = icmp slt i32 %3233, %3236
  br i1 %3237, label %3238, label %3253

3238:                                             ; preds = %3230
  br i1 %3225, label %3245, label %3239

3239:                                             ; preds = %3238
  %3240 = getelementptr inbounds i32, ptr %7, i64 %3231
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3231
  %3243 = load i32, ptr %3242, align 4, !tbaa !6
  %3244 = add nsw i32 %3243, %3241
  store i32 %3244, ptr %3242, align 4, !tbaa !6
  br label %3263

3245:                                             ; preds = %3221, %3238
  %3246 = phi i32 [ %3233, %3238 ], [ %3222, %3221 ]
  %3247 = phi ptr [ %3232, %3238 ], [ %4, %3221 ]
  %3248 = phi i64 [ %3231, %3238 ], [ 0, %3221 ]
  %3249 = add nsw i32 %3246, 1
  store i32 %3249, ptr %3247, align 4, !tbaa !6
  %3250 = getelementptr inbounds i32, ptr %7, i64 %3248
  %3251 = load i32, ptr %3250, align 4, !tbaa !6
  %3252 = getelementptr inbounds i32, ptr %6, i64 %3248
  br label %3263

3253:                                             ; preds = %3230
  %3254 = icmp eq i32 %3233, %3236
  br i1 %3254, label %3255, label %3261

3255:                                             ; preds = %3253
  store i32 0, ptr %3232, align 4, !tbaa !6
  %3256 = getelementptr inbounds i32, ptr %8, i64 %3231
  %3257 = load i32, ptr %3256, align 4, !tbaa !6
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3231
  store i32 %3257, ptr %3258, align 4, !tbaa !6
  %3259 = add nuw nsw i64 %3231, 1
  %3260 = icmp eq i64 %3259, %3127
  br i1 %3260, label %3268, label %3230, !llvm.loop !1408

3261:                                             ; preds = %3226, %3253
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3263:                                             ; preds = %3239, %3245
  %3264 = phi ptr [ %3252, %3245 ], [ %3232, %3239 ]
  %3265 = phi i32 [ %3251, %3245 ], [ 1, %3239 ]
  %3266 = load i32, ptr %3264, align 4, !tbaa !6
  %3267 = add nsw i32 %3266, %3265
  store i32 %3267, ptr %3264, align 4, !tbaa !6
  br label %3268

3268:                                             ; preds = %3255, %3263, %3228, %3204
  %3269 = icmp eq i32 %3220, %5
  br i1 %3269, label %5535, label %3130, !llvm.loop !1409

3270:                                             ; preds = %3113, %3410
  %3271 = phi i64 [ 0, %3113 ], [ %3358, %3410 ]
  %3272 = phi i32 [ 0, %3113 ], [ %3359, %3410 ]
  %3273 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3114, label %3274, label %3343

3274:                                             ; preds = %3270, %3333
  %3275 = phi i32 [ %3342, %3333 ], [ 0, %3270 ]
  %3276 = phi i64 [ %3284, %3333 ], [ %3118, %3270 ]
  %3277 = phi i64 [ %3341, %3333 ], [ %3117, %3270 ]
  %3278 = phi i32 [ %3339, %3333 ], [ %3273, %3270 ]
  %3279 = sub i32 %3116, %3275
  %3280 = tail call i32 @llvm.smin.i32(i32 %3279, i32 0)
  %3281 = sub i32 %3279, %3280
  %3282 = zext i32 %3281 to i64
  %3283 = add nuw nsw i64 %3282, 1
  %3284 = add nsw i64 %3276, -1
  %3285 = icmp ult i32 %3281, 31
  br i1 %3285, label %3321, label %3286

3286:                                             ; preds = %3274
  %3287 = and i64 %3283, 8589934560
  %3288 = sub i64 %3277, %3287
  br label %3289

3289:                                             ; preds = %3289, %3286
  %3290 = phi i64 [ 0, %3286 ], [ %3313, %3289 ]
  %3291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3309, %3289 ]
  %3292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3310, %3289 ]
  %3293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3311, %3289 ]
  %3294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3286 ], [ %3312, %3289 ]
  %3295 = sub i64 %3277, %3290
  %3296 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3297 = getelementptr inbounds i32, ptr %3296, i64 -7
  %3298 = load <8 x i32>, ptr %3297, align 4, !tbaa !6
  %3299 = shufflevector <8 x i32> %3298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3300 = getelementptr inbounds i32, ptr %3296, i64 -15
  %3301 = load <8 x i32>, ptr %3300, align 4, !tbaa !6
  %3302 = shufflevector <8 x i32> %3301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3303 = getelementptr inbounds i32, ptr %3296, i64 -23
  %3304 = load <8 x i32>, ptr %3303, align 4, !tbaa !6
  %3305 = shufflevector <8 x i32> %3304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3306 = getelementptr inbounds i32, ptr %3296, i64 -31
  %3307 = load <8 x i32>, ptr %3306, align 4, !tbaa !6
  %3308 = shufflevector <8 x i32> %3307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3309 = mul <8 x i32> %3299, %3291
  %3310 = mul <8 x i32> %3302, %3292
  %3311 = mul <8 x i32> %3305, %3293
  %3312 = mul <8 x i32> %3308, %3294
  %3313 = add nuw i64 %3290, 32
  %3314 = icmp eq i64 %3313, %3287
  br i1 %3314, label %3315, label %3289, !llvm.loop !1410

3315:                                             ; preds = %3289
  %3316 = mul <8 x i32> %3310, %3309
  %3317 = mul <8 x i32> %3311, %3316
  %3318 = mul <8 x i32> %3312, %3317
  %3319 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3318)
  %3320 = icmp eq i64 %3283, %3287
  br i1 %3320, label %3333, label %3321

3321:                                             ; preds = %3274, %3315
  %3322 = phi i64 [ %3277, %3274 ], [ %3288, %3315 ]
  %3323 = phi i32 [ 1, %3274 ], [ %3319, %3315 ]
  br label %3324

3324:                                             ; preds = %3321, %3324
  %3325 = phi i64 [ %3330, %3324 ], [ %3322, %3321 ]
  %3326 = phi i32 [ %3329, %3324 ], [ %3323, %3321 ]
  %3327 = getelementptr inbounds i32, ptr %11, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = mul nsw i32 %3328, %3326
  %3330 = add nsw i64 %3325, -1
  %3331 = trunc i64 %3325 to i32
  %3332 = icmp sgt i32 %3331, 0
  br i1 %3332, label %3324, label %3333, !llvm.loop !1411

3333:                                             ; preds = %3324, %3315
  %3334 = phi i32 [ %3319, %3315 ], [ %3329, %3324 ]
  %3335 = and i64 %3284, 4294967295
  %3336 = getelementptr inbounds i32, ptr %6, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = mul nsw i32 %3337, %3334
  %3339 = add nsw i32 %3338, %3278
  %3340 = icmp sgt i64 %3276, 2
  %3341 = add nsw i64 %3277, -1
  %3342 = add i32 %3275, 1
  br i1 %3340, label %3274, label %3343, !llvm.loop !1412

3343:                                             ; preds = %3333, %3270
  %3344 = phi i32 [ %3273, %3270 ], [ %3339, %3333 ]
  %3345 = icmp slt i32 %3344, %5
  br i1 %3345, label %3348, label %3346

3346:                                             ; preds = %3343
  %3347 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3348:                                             ; preds = %3343
  %3349 = sext i32 %3344 to i64
  %3350 = getelementptr inbounds double, ptr %3097, i64 %3349
  %3351 = load double, ptr %3350, align 8, !tbaa !19
  %3352 = fptosi double %3351 to i64
  %3353 = sitofp i64 %3271 to double
  %3354 = sitofp i64 %3352 to double
  %3355 = fmul fast double %3354, %3354
  %3356 = fmul fast double %3355, %3355
  %3357 = fadd fast double %3356, %3353
  %3358 = fptosi double %3357 to i64
  store i64 %3358, ptr %3099, align 8, !tbaa !121
  %3359 = add nuw nsw i32 %3272, 1
  br i1 %3115, label %3360, label %3410

3360:                                             ; preds = %3348
  %3361 = load i32, ptr %4, align 4, !tbaa !6
  %3362 = load i32, ptr %12, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, -1
  %3364 = icmp slt i32 %3361, %3363
  br i1 %3364, label %3387, label %3365

3365:                                             ; preds = %3360
  %3366 = icmp eq i32 %3361, %3363
  br i1 %3366, label %3367, label %3403

3367:                                             ; preds = %3365
  store i32 0, ptr %4, align 4, !tbaa !6
  %3368 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3368, ptr %6, align 4, !tbaa !6
  br i1 %3120, label %3410, label %3369

3369:                                             ; preds = %3367, %3397
  %3370 = phi i64 [ %3401, %3397 ], [ 1, %3367 ]
  %3371 = getelementptr inbounds i32, ptr %4, i64 %3370
  %3372 = load i32, ptr %3371, align 4, !tbaa !6
  %3373 = getelementptr inbounds i32, ptr %12, i64 %3370
  %3374 = load i32, ptr %3373, align 4, !tbaa !6
  %3375 = add nsw i32 %3374, -1
  %3376 = icmp slt i32 %3372, %3375
  br i1 %3376, label %3377, label %3395

3377:                                             ; preds = %3369
  br i1 %3364, label %3387, label %3378

3378:                                             ; preds = %3377
  %3379 = shl i64 %3370, 32
  %3380 = add i64 %3379, -4294967296
  %3381 = ashr exact i64 %3380, 32
  %3382 = getelementptr inbounds i32, ptr %7, i64 %3381
  %3383 = load i32, ptr %3382, align 4, !tbaa !6
  %3384 = getelementptr inbounds i32, ptr %6, i64 %3370
  %3385 = load i32, ptr %3384, align 4, !tbaa !6
  %3386 = add nsw i32 %3385, %3383
  store i32 %3386, ptr %3384, align 4, !tbaa !6
  br label %3405

3387:                                             ; preds = %3360, %3377
  %3388 = phi i32 [ %3372, %3377 ], [ %3361, %3360 ]
  %3389 = phi ptr [ %3371, %3377 ], [ %4, %3360 ]
  %3390 = phi i64 [ %3370, %3377 ], [ 0, %3360 ]
  %3391 = add nsw i32 %3388, 1
  store i32 %3391, ptr %3389, align 4, !tbaa !6
  %3392 = getelementptr inbounds i32, ptr %7, i64 %3390
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3390
  br label %3405

3395:                                             ; preds = %3369
  %3396 = icmp eq i32 %3372, %3375
  br i1 %3396, label %3397, label %3403

3397:                                             ; preds = %3395
  store i32 0, ptr %3371, align 4, !tbaa !6
  %3398 = getelementptr inbounds i32, ptr %8, i64 %3370
  %3399 = load i32, ptr %3398, align 4, !tbaa !6
  %3400 = getelementptr inbounds i32, ptr %6, i64 %3370
  store i32 %3399, ptr %3400, align 4, !tbaa !6
  %3401 = add nuw nsw i64 %3370, 1
  %3402 = icmp eq i64 %3401, %3118
  br i1 %3402, label %3410, label %3369, !llvm.loop !1413

3403:                                             ; preds = %3365, %3395
  %3404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3405:                                             ; preds = %3378, %3387
  %3406 = phi ptr [ %3394, %3387 ], [ %3371, %3378 ]
  %3407 = phi i32 [ %3393, %3387 ], [ 1, %3378 ]
  %3408 = load i32, ptr %3406, align 4, !tbaa !6
  %3409 = add nsw i32 %3408, %3407
  store i32 %3409, ptr %3406, align 4, !tbaa !6
  br label %3410

3410:                                             ; preds = %3397, %3405, %3367, %3348
  %3411 = icmp eq i32 %3359, %5
  br i1 %3411, label %5539, label %3270, !llvm.loop !1414

3412:                                             ; preds = %3106
  %3413 = getelementptr inbounds i32, ptr %3, i64 %19
  %3414 = load i32, ptr %3413, align 4, !tbaa !6
  %3415 = icmp eq i32 %3414, 0
  %3416 = icmp sgt i32 %5, 0
  br i1 %3415, label %3426, label %3417

3417:                                             ; preds = %3412
  br i1 %3416, label %3418, label %5539

3418:                                             ; preds = %3417
  %3419 = icmp sgt i32 %13, 1
  %3420 = icmp sgt i32 %13, 0
  %3421 = add i32 %13, -2
  %3422 = zext i32 %3421 to i64
  %3423 = zext i32 %13 to i64
  %3424 = add nuw i32 %5, 1
  %3425 = icmp eq i32 %13, 1
  br label %3569

3426:                                             ; preds = %3412
  br i1 %3416, label %3427, label %5539

3427:                                             ; preds = %3426
  %3428 = icmp sgt i32 %13, 1
  %3429 = icmp sgt i32 %13, 0
  %3430 = add i32 %13, -2
  %3431 = zext i32 %3430 to i64
  %3432 = zext i32 %13 to i64
  %3433 = add nuw i32 %5, 1
  %3434 = icmp eq i32 %13, 1
  br label %3435

3435:                                             ; preds = %3427, %3567
  %3436 = phi i64 [ 0, %3427 ], [ %3517, %3567 ]
  %3437 = phi i32 [ 0, %3427 ], [ %3519, %3567 ]
  %3438 = phi double [ 0.000000e+00, %3427 ], [ %3518, %3567 ]
  %3439 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3428, label %3440, label %3509

3440:                                             ; preds = %3435, %3499
  %3441 = phi i32 [ %3508, %3499 ], [ 0, %3435 ]
  %3442 = phi i64 [ %3450, %3499 ], [ %3432, %3435 ]
  %3443 = phi i64 [ %3507, %3499 ], [ %3431, %3435 ]
  %3444 = phi i32 [ %3505, %3499 ], [ %3439, %3435 ]
  %3445 = sub i32 %3430, %3441
  %3446 = tail call i32 @llvm.smin.i32(i32 %3445, i32 0)
  %3447 = sub i32 %3445, %3446
  %3448 = zext i32 %3447 to i64
  %3449 = add nuw nsw i64 %3448, 1
  %3450 = add nsw i64 %3442, -1
  %3451 = icmp ult i32 %3447, 31
  br i1 %3451, label %3487, label %3452

3452:                                             ; preds = %3440
  %3453 = and i64 %3449, 8589934560
  %3454 = sub i64 %3443, %3453
  br label %3455

3455:                                             ; preds = %3455, %3452
  %3456 = phi i64 [ 0, %3452 ], [ %3479, %3455 ]
  %3457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3475, %3455 ]
  %3458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3476, %3455 ]
  %3459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3477, %3455 ]
  %3460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3452 ], [ %3478, %3455 ]
  %3461 = sub i64 %3443, %3456
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3463 = getelementptr inbounds i32, ptr %3462, i64 -7
  %3464 = load <8 x i32>, ptr %3463, align 4, !tbaa !6
  %3465 = shufflevector <8 x i32> %3464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3466 = getelementptr inbounds i32, ptr %3462, i64 -15
  %3467 = load <8 x i32>, ptr %3466, align 4, !tbaa !6
  %3468 = shufflevector <8 x i32> %3467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3469 = getelementptr inbounds i32, ptr %3462, i64 -23
  %3470 = load <8 x i32>, ptr %3469, align 4, !tbaa !6
  %3471 = shufflevector <8 x i32> %3470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3472 = getelementptr inbounds i32, ptr %3462, i64 -31
  %3473 = load <8 x i32>, ptr %3472, align 4, !tbaa !6
  %3474 = shufflevector <8 x i32> %3473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3475 = mul <8 x i32> %3465, %3457
  %3476 = mul <8 x i32> %3468, %3458
  %3477 = mul <8 x i32> %3471, %3459
  %3478 = mul <8 x i32> %3474, %3460
  %3479 = add nuw i64 %3456, 32
  %3480 = icmp eq i64 %3479, %3453
  br i1 %3480, label %3481, label %3455, !llvm.loop !1415

3481:                                             ; preds = %3455
  %3482 = mul <8 x i32> %3476, %3475
  %3483 = mul <8 x i32> %3477, %3482
  %3484 = mul <8 x i32> %3478, %3483
  %3485 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3484)
  %3486 = icmp eq i64 %3449, %3453
  br i1 %3486, label %3499, label %3487

3487:                                             ; preds = %3440, %3481
  %3488 = phi i64 [ %3443, %3440 ], [ %3454, %3481 ]
  %3489 = phi i32 [ 1, %3440 ], [ %3485, %3481 ]
  br label %3490

3490:                                             ; preds = %3487, %3490
  %3491 = phi i64 [ %3496, %3490 ], [ %3488, %3487 ]
  %3492 = phi i32 [ %3495, %3490 ], [ %3489, %3487 ]
  %3493 = getelementptr inbounds i32, ptr %9, i64 %3491
  %3494 = load i32, ptr %3493, align 4, !tbaa !6
  %3495 = mul nsw i32 %3494, %3492
  %3496 = add nsw i64 %3491, -1
  %3497 = trunc i64 %3491 to i32
  %3498 = icmp sgt i32 %3497, 0
  br i1 %3498, label %3490, label %3499, !llvm.loop !1416

3499:                                             ; preds = %3490, %3481
  %3500 = phi i32 [ %3485, %3481 ], [ %3495, %3490 ]
  %3501 = and i64 %3450, 4294967295
  %3502 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = mul nsw i32 %3503, %3500
  %3505 = add nsw i32 %3504, %3444
  %3506 = icmp sgt i64 %3442, 2
  %3507 = add nsw i64 %3443, -1
  %3508 = add i32 %3441, 1
  br i1 %3506, label %3440, label %3509, !llvm.loop !1417

3509:                                             ; preds = %3499, %3435
  %3510 = phi i32 [ %3439, %3435 ], [ %3505, %3499 ]
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds double, ptr %3097, i64 %3511
  %3513 = load double, ptr %3512, align 8, !tbaa !19
  %3514 = fptosi double %3513 to i64
  %3515 = mul i64 %3514, %3514
  %3516 = mul i64 %3515, %3515
  %3517 = add nsw i64 %3516, %3436
  %3518 = fadd fast double %3438, 1.000000e+00
  %3519 = add nuw nsw i32 %3437, 1
  br i1 %3429, label %3520, label %3567

3520:                                             ; preds = %3509
  %3521 = load i32, ptr %4, align 4, !tbaa !6
  %3522 = load i32, ptr %12, align 4, !tbaa !6
  %3523 = add nsw i32 %3522, -1
  %3524 = icmp slt i32 %3521, %3523
  br i1 %3524, label %3544, label %3525

3525:                                             ; preds = %3520
  %3526 = icmp eq i32 %3521, %3523
  br i1 %3526, label %3527, label %3560

3527:                                             ; preds = %3525
  store i32 0, ptr %4, align 4, !tbaa !6
  %3528 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3528, ptr %6, align 4, !tbaa !6
  br i1 %3434, label %3567, label %3529

3529:                                             ; preds = %3527, %3554
  %3530 = phi i64 [ %3558, %3554 ], [ 1, %3527 ]
  %3531 = getelementptr inbounds i32, ptr %4, i64 %3530
  %3532 = load i32, ptr %3531, align 4, !tbaa !6
  %3533 = getelementptr inbounds i32, ptr %12, i64 %3530
  %3534 = load i32, ptr %3533, align 4, !tbaa !6
  %3535 = add nsw i32 %3534, -1
  %3536 = icmp slt i32 %3532, %3535
  br i1 %3536, label %3537, label %3552

3537:                                             ; preds = %3529
  br i1 %3524, label %3544, label %3538

3538:                                             ; preds = %3537
  %3539 = getelementptr inbounds i32, ptr %7, i64 %3530
  %3540 = load i32, ptr %3539, align 4, !tbaa !6
  %3541 = getelementptr inbounds i32, ptr %6, i64 %3530
  %3542 = load i32, ptr %3541, align 4, !tbaa !6
  %3543 = add nsw i32 %3542, %3540
  store i32 %3543, ptr %3541, align 4, !tbaa !6
  br label %3562

3544:                                             ; preds = %3520, %3537
  %3545 = phi i32 [ %3532, %3537 ], [ %3521, %3520 ]
  %3546 = phi ptr [ %3531, %3537 ], [ %4, %3520 ]
  %3547 = phi i64 [ %3530, %3537 ], [ 0, %3520 ]
  %3548 = add nsw i32 %3545, 1
  store i32 %3548, ptr %3546, align 4, !tbaa !6
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3547
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3547
  br label %3562

3552:                                             ; preds = %3529
  %3553 = icmp eq i32 %3532, %3535
  br i1 %3553, label %3554, label %3560

3554:                                             ; preds = %3552
  store i32 0, ptr %3531, align 4, !tbaa !6
  %3555 = getelementptr inbounds i32, ptr %8, i64 %3530
  %3556 = load i32, ptr %3555, align 4, !tbaa !6
  %3557 = getelementptr inbounds i32, ptr %6, i64 %3530
  store i32 %3556, ptr %3557, align 4, !tbaa !6
  %3558 = add nuw nsw i64 %3530, 1
  %3559 = icmp eq i64 %3558, %3432
  br i1 %3559, label %3567, label %3529, !llvm.loop !1418

3560:                                             ; preds = %3525, %3552
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  %3561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3562:                                             ; preds = %3538, %3544
  %3563 = phi ptr [ %3551, %3544 ], [ %3531, %3538 ]
  %3564 = phi i32 [ %3550, %3544 ], [ 1, %3538 ]
  %3565 = load i32, ptr %3563, align 4, !tbaa !6
  %3566 = add nsw i32 %3565, %3564
  store i32 %3566, ptr %3563, align 4, !tbaa !6
  br label %3567

3567:                                             ; preds = %3554, %3562, %3527, %3509
  %3568 = icmp eq i32 %3519, %5
  br i1 %3568, label %5536, label %3435, !llvm.loop !1419

3569:                                             ; preds = %3418, %3706
  %3570 = phi i64 [ 0, %3418 ], [ %3654, %3706 ]
  %3571 = phi i32 [ 0, %3418 ], [ %3655, %3706 ]
  %3572 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3419, label %3573, label %3642

3573:                                             ; preds = %3569, %3632
  %3574 = phi i32 [ %3641, %3632 ], [ 0, %3569 ]
  %3575 = phi i64 [ %3583, %3632 ], [ %3423, %3569 ]
  %3576 = phi i64 [ %3640, %3632 ], [ %3422, %3569 ]
  %3577 = phi i32 [ %3638, %3632 ], [ %3572, %3569 ]
  %3578 = sub i32 %3421, %3574
  %3579 = tail call i32 @llvm.smin.i32(i32 %3578, i32 0)
  %3580 = sub i32 %3578, %3579
  %3581 = zext i32 %3580 to i64
  %3582 = add nuw nsw i64 %3581, 1
  %3583 = add nsw i64 %3575, -1
  %3584 = icmp ult i32 %3580, 31
  br i1 %3584, label %3620, label %3585

3585:                                             ; preds = %3573
  %3586 = and i64 %3582, 8589934560
  %3587 = sub i64 %3576, %3586
  br label %3588

3588:                                             ; preds = %3588, %3585
  %3589 = phi i64 [ 0, %3585 ], [ %3612, %3588 ]
  %3590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3608, %3588 ]
  %3591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3609, %3588 ]
  %3592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3610, %3588 ]
  %3593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3585 ], [ %3611, %3588 ]
  %3594 = sub i64 %3576, %3589
  %3595 = getelementptr inbounds i32, ptr %11, i64 %3594
  %3596 = getelementptr inbounds i32, ptr %3595, i64 -7
  %3597 = load <8 x i32>, ptr %3596, align 4, !tbaa !6
  %3598 = shufflevector <8 x i32> %3597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3599 = getelementptr inbounds i32, ptr %3595, i64 -15
  %3600 = load <8 x i32>, ptr %3599, align 4, !tbaa !6
  %3601 = shufflevector <8 x i32> %3600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3602 = getelementptr inbounds i32, ptr %3595, i64 -23
  %3603 = load <8 x i32>, ptr %3602, align 4, !tbaa !6
  %3604 = shufflevector <8 x i32> %3603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3605 = getelementptr inbounds i32, ptr %3595, i64 -31
  %3606 = load <8 x i32>, ptr %3605, align 4, !tbaa !6
  %3607 = shufflevector <8 x i32> %3606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3608 = mul <8 x i32> %3598, %3590
  %3609 = mul <8 x i32> %3601, %3591
  %3610 = mul <8 x i32> %3604, %3592
  %3611 = mul <8 x i32> %3607, %3593
  %3612 = add nuw i64 %3589, 32
  %3613 = icmp eq i64 %3612, %3586
  br i1 %3613, label %3614, label %3588, !llvm.loop !1420

3614:                                             ; preds = %3588
  %3615 = mul <8 x i32> %3609, %3608
  %3616 = mul <8 x i32> %3610, %3615
  %3617 = mul <8 x i32> %3611, %3616
  %3618 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3617)
  %3619 = icmp eq i64 %3582, %3586
  br i1 %3619, label %3632, label %3620

3620:                                             ; preds = %3573, %3614
  %3621 = phi i64 [ %3576, %3573 ], [ %3587, %3614 ]
  %3622 = phi i32 [ 1, %3573 ], [ %3618, %3614 ]
  br label %3623

3623:                                             ; preds = %3620, %3623
  %3624 = phi i64 [ %3629, %3623 ], [ %3621, %3620 ]
  %3625 = phi i32 [ %3628, %3623 ], [ %3622, %3620 ]
  %3626 = getelementptr inbounds i32, ptr %11, i64 %3624
  %3627 = load i32, ptr %3626, align 4, !tbaa !6
  %3628 = mul nsw i32 %3627, %3625
  %3629 = add nsw i64 %3624, -1
  %3630 = trunc i64 %3624 to i32
  %3631 = icmp sgt i32 %3630, 0
  br i1 %3631, label %3623, label %3632, !llvm.loop !1421

3632:                                             ; preds = %3623, %3614
  %3633 = phi i32 [ %3618, %3614 ], [ %3628, %3623 ]
  %3634 = and i64 %3583, 4294967295
  %3635 = getelementptr inbounds i32, ptr %6, i64 %3634
  %3636 = load i32, ptr %3635, align 4, !tbaa !6
  %3637 = mul nsw i32 %3636, %3633
  %3638 = add nsw i32 %3637, %3577
  %3639 = icmp sgt i64 %3575, 2
  %3640 = add nsw i64 %3576, -1
  %3641 = add i32 %3574, 1
  br i1 %3639, label %3573, label %3642, !llvm.loop !1422

3642:                                             ; preds = %3632, %3569
  %3643 = phi i32 [ %3572, %3569 ], [ %3638, %3632 ]
  %3644 = icmp slt i32 %3643, %5
  br i1 %3644, label %3647, label %3645

3645:                                             ; preds = %3642
  %3646 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3647:                                             ; preds = %3642
  %3648 = sext i32 %3643 to i64
  %3649 = getelementptr inbounds double, ptr %3097, i64 %3648
  %3650 = load double, ptr %3649, align 8, !tbaa !19
  %3651 = fptosi double %3650 to i64
  %3652 = mul i64 %3651, %3651
  %3653 = mul i64 %3652, %3652
  %3654 = add nsw i64 %3653, %3570
  store i64 %3654, ptr %3099, align 8, !tbaa !121
  %3655 = add nuw nsw i32 %3571, 1
  br i1 %3420, label %3656, label %3706

3656:                                             ; preds = %3647
  %3657 = load i32, ptr %4, align 4, !tbaa !6
  %3658 = load i32, ptr %12, align 4, !tbaa !6
  %3659 = add nsw i32 %3658, -1
  %3660 = icmp slt i32 %3657, %3659
  br i1 %3660, label %3683, label %3661

3661:                                             ; preds = %3656
  %3662 = icmp eq i32 %3657, %3659
  br i1 %3662, label %3663, label %3699

3663:                                             ; preds = %3661
  store i32 0, ptr %4, align 4, !tbaa !6
  %3664 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3664, ptr %6, align 4, !tbaa !6
  br i1 %3425, label %3706, label %3665

3665:                                             ; preds = %3663, %3693
  %3666 = phi i64 [ %3697, %3693 ], [ 1, %3663 ]
  %3667 = getelementptr inbounds i32, ptr %4, i64 %3666
  %3668 = load i32, ptr %3667, align 4, !tbaa !6
  %3669 = getelementptr inbounds i32, ptr %12, i64 %3666
  %3670 = load i32, ptr %3669, align 4, !tbaa !6
  %3671 = add nsw i32 %3670, -1
  %3672 = icmp slt i32 %3668, %3671
  br i1 %3672, label %3673, label %3691

3673:                                             ; preds = %3665
  br i1 %3660, label %3683, label %3674

3674:                                             ; preds = %3673
  %3675 = shl i64 %3666, 32
  %3676 = add i64 %3675, -4294967296
  %3677 = ashr exact i64 %3676, 32
  %3678 = getelementptr inbounds i32, ptr %7, i64 %3677
  %3679 = load i32, ptr %3678, align 4, !tbaa !6
  %3680 = getelementptr inbounds i32, ptr %6, i64 %3666
  %3681 = load i32, ptr %3680, align 4, !tbaa !6
  %3682 = add nsw i32 %3681, %3679
  store i32 %3682, ptr %3680, align 4, !tbaa !6
  br label %3701

3683:                                             ; preds = %3656, %3673
  %3684 = phi i32 [ %3668, %3673 ], [ %3657, %3656 ]
  %3685 = phi ptr [ %3667, %3673 ], [ %4, %3656 ]
  %3686 = phi i64 [ %3666, %3673 ], [ 0, %3656 ]
  %3687 = add nsw i32 %3684, 1
  store i32 %3687, ptr %3685, align 4, !tbaa !6
  %3688 = getelementptr inbounds i32, ptr %7, i64 %3686
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3686
  br label %3701

3691:                                             ; preds = %3665
  %3692 = icmp eq i32 %3668, %3671
  br i1 %3692, label %3693, label %3699

3693:                                             ; preds = %3691
  store i32 0, ptr %3667, align 4, !tbaa !6
  %3694 = getelementptr inbounds i32, ptr %8, i64 %3666
  %3695 = load i32, ptr %3694, align 4, !tbaa !6
  %3696 = getelementptr inbounds i32, ptr %6, i64 %3666
  store i32 %3695, ptr %3696, align 4, !tbaa !6
  %3697 = add nuw nsw i64 %3666, 1
  %3698 = icmp eq i64 %3697, %3423
  br i1 %3698, label %3706, label %3665, !llvm.loop !1423

3699:                                             ; preds = %3661, %3691
  %3700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3701:                                             ; preds = %3674, %3683
  %3702 = phi ptr [ %3690, %3683 ], [ %3667, %3674 ]
  %3703 = phi i32 [ %3689, %3683 ], [ 1, %3674 ]
  %3704 = load i32, ptr %3702, align 4, !tbaa !6
  %3705 = add nsw i32 %3704, %3703
  store i32 %3705, ptr %3702, align 4, !tbaa !6
  br label %3706

3706:                                             ; preds = %3693, %3701, %3663, %3647
  %3707 = icmp eq i32 %3655, %5
  br i1 %3707, label %5539, label %3569, !llvm.loop !1424

3708:                                             ; preds = %3106
  %3709 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

3710:                                             ; preds = %18
  %3711 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3712 = load ptr, ptr %3711, align 8, !tbaa !10
  %3713 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3714 = load ptr, ptr %3713, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3714, align 8, !tbaa !19
  %3715 = icmp eq i32 %13, 0
  br i1 %3715, label %3716, label %3720

3716:                                             ; preds = %3710
  %3717 = load double, ptr %3712, align 8, !tbaa !19
  %3718 = fmul fast double %3717, %3717
  %3719 = fmul fast double %3718, %3718
  store double %3719, ptr %3714, align 8, !tbaa !19
  br label %5539

3720:                                             ; preds = %3710
  switch i32 %1, label %4312 [
    i32 1, label %3721
    i32 0, label %4018
  ]

3721:                                             ; preds = %3720
  %3722 = getelementptr inbounds i32, ptr %3, i64 %19
  %3723 = load i32, ptr %3722, align 4, !tbaa !6
  %3724 = icmp eq i32 %3723, 0
  %3725 = icmp sgt i32 %5, 0
  br i1 %3724, label %3735, label %3726

3726:                                             ; preds = %3721
  br i1 %3725, label %3727, label %5539

3727:                                             ; preds = %3726
  %3728 = icmp sgt i32 %13, 1
  %3729 = icmp sgt i32 %13, 0
  %3730 = add i32 %13, -2
  %3731 = zext i32 %3730 to i64
  %3732 = zext i32 %13 to i64
  %3733 = add nuw i32 %5, 1
  %3734 = icmp eq i32 %13, 1
  br label %3880

3735:                                             ; preds = %3721
  br i1 %3725, label %3736, label %5539

3736:                                             ; preds = %3735
  %3737 = icmp sgt i32 %13, 1
  %3738 = icmp sgt i32 %13, 0
  %3739 = add i32 %13, -2
  %3740 = zext i32 %3739 to i64
  %3741 = zext i32 %13 to i64
  %3742 = add nuw i32 %5, 1
  %3743 = icmp eq i32 %13, 1
  br label %3744

3744:                                             ; preds = %3736, %3878
  %3745 = phi double [ 0.000000e+00, %3736 ], [ %3828, %3878 ]
  %3746 = phi i32 [ 0, %3736 ], [ %3830, %3878 ]
  %3747 = phi double [ 0.000000e+00, %3736 ], [ %3829, %3878 ]
  %3748 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3737, label %3749, label %3818

3749:                                             ; preds = %3744, %3808
  %3750 = phi i32 [ %3817, %3808 ], [ 0, %3744 ]
  %3751 = phi i64 [ %3759, %3808 ], [ %3741, %3744 ]
  %3752 = phi i64 [ %3816, %3808 ], [ %3740, %3744 ]
  %3753 = phi i32 [ %3814, %3808 ], [ %3748, %3744 ]
  %3754 = sub i32 %3739, %3750
  %3755 = tail call i32 @llvm.smin.i32(i32 %3754, i32 0)
  %3756 = sub i32 %3754, %3755
  %3757 = zext i32 %3756 to i64
  %3758 = add nuw nsw i64 %3757, 1
  %3759 = add nsw i64 %3751, -1
  %3760 = icmp ult i32 %3756, 31
  br i1 %3760, label %3796, label %3761

3761:                                             ; preds = %3749
  %3762 = and i64 %3758, 8589934560
  %3763 = sub i64 %3752, %3762
  br label %3764

3764:                                             ; preds = %3764, %3761
  %3765 = phi i64 [ 0, %3761 ], [ %3788, %3764 ]
  %3766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3784, %3764 ]
  %3767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3785, %3764 ]
  %3768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3786, %3764 ]
  %3769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3761 ], [ %3787, %3764 ]
  %3770 = sub i64 %3752, %3765
  %3771 = getelementptr inbounds i32, ptr %9, i64 %3770
  %3772 = getelementptr inbounds i32, ptr %3771, i64 -7
  %3773 = load <8 x i32>, ptr %3772, align 4, !tbaa !6
  %3774 = shufflevector <8 x i32> %3773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3775 = getelementptr inbounds i32, ptr %3771, i64 -15
  %3776 = load <8 x i32>, ptr %3775, align 4, !tbaa !6
  %3777 = shufflevector <8 x i32> %3776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3778 = getelementptr inbounds i32, ptr %3771, i64 -23
  %3779 = load <8 x i32>, ptr %3778, align 4, !tbaa !6
  %3780 = shufflevector <8 x i32> %3779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3781 = getelementptr inbounds i32, ptr %3771, i64 -31
  %3782 = load <8 x i32>, ptr %3781, align 4, !tbaa !6
  %3783 = shufflevector <8 x i32> %3782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3784 = mul <8 x i32> %3774, %3766
  %3785 = mul <8 x i32> %3777, %3767
  %3786 = mul <8 x i32> %3780, %3768
  %3787 = mul <8 x i32> %3783, %3769
  %3788 = add nuw i64 %3765, 32
  %3789 = icmp eq i64 %3788, %3762
  br i1 %3789, label %3790, label %3764, !llvm.loop !1425

3790:                                             ; preds = %3764
  %3791 = mul <8 x i32> %3785, %3784
  %3792 = mul <8 x i32> %3786, %3791
  %3793 = mul <8 x i32> %3787, %3792
  %3794 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3793)
  %3795 = icmp eq i64 %3758, %3762
  br i1 %3795, label %3808, label %3796

3796:                                             ; preds = %3749, %3790
  %3797 = phi i64 [ %3752, %3749 ], [ %3763, %3790 ]
  %3798 = phi i32 [ 1, %3749 ], [ %3794, %3790 ]
  br label %3799

3799:                                             ; preds = %3796, %3799
  %3800 = phi i64 [ %3805, %3799 ], [ %3797, %3796 ]
  %3801 = phi i32 [ %3804, %3799 ], [ %3798, %3796 ]
  %3802 = getelementptr inbounds i32, ptr %9, i64 %3800
  %3803 = load i32, ptr %3802, align 4, !tbaa !6
  %3804 = mul nsw i32 %3803, %3801
  %3805 = add nsw i64 %3800, -1
  %3806 = trunc i64 %3800 to i32
  %3807 = icmp sgt i32 %3806, 0
  br i1 %3807, label %3799, label %3808, !llvm.loop !1426

3808:                                             ; preds = %3799, %3790
  %3809 = phi i32 [ %3794, %3790 ], [ %3804, %3799 ]
  %3810 = and i64 %3759, 4294967295
  %3811 = getelementptr inbounds i32, ptr %6, i64 %3810
  %3812 = load i32, ptr %3811, align 4, !tbaa !6
  %3813 = mul nsw i32 %3812, %3809
  %3814 = add nsw i32 %3813, %3753
  %3815 = icmp sgt i64 %3751, 2
  %3816 = add nsw i64 %3752, -1
  %3817 = add i32 %3750, 1
  br i1 %3815, label %3749, label %3818, !llvm.loop !1427

3818:                                             ; preds = %3808, %3744
  %3819 = phi i32 [ %3748, %3744 ], [ %3814, %3808 ]
  %3820 = sext i32 %3819 to i64
  %3821 = getelementptr inbounds double, ptr %2, i64 %3820
  %3822 = load double, ptr %3821, align 8, !tbaa !19
  %3823 = getelementptr inbounds double, ptr %3712, i64 %3820
  %3824 = load double, ptr %3823, align 8, !tbaa !19
  %3825 = fmul fast double %3824, %3822
  %3826 = fmul fast double %3825, %3825
  %3827 = fmul fast double %3826, %3826
  %3828 = fadd fast double %3827, %3745
  store double %3828, ptr %3714, align 8, !tbaa !19
  %3829 = fadd fast double %3822, %3747
  %3830 = add nuw nsw i32 %3746, 1
  br i1 %3738, label %3831, label %3878

3831:                                             ; preds = %3818
  %3832 = load i32, ptr %4, align 4, !tbaa !6
  %3833 = load i32, ptr %12, align 4, !tbaa !6
  %3834 = add nsw i32 %3833, -1
  %3835 = icmp slt i32 %3832, %3834
  br i1 %3835, label %3855, label %3836

3836:                                             ; preds = %3831
  %3837 = icmp eq i32 %3832, %3834
  br i1 %3837, label %3838, label %3871

3838:                                             ; preds = %3836
  store i32 0, ptr %4, align 4, !tbaa !6
  %3839 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3839, ptr %6, align 4, !tbaa !6
  br i1 %3743, label %3878, label %3840

3840:                                             ; preds = %3838, %3865
  %3841 = phi i64 [ %3869, %3865 ], [ 1, %3838 ]
  %3842 = getelementptr inbounds i32, ptr %4, i64 %3841
  %3843 = load i32, ptr %3842, align 4, !tbaa !6
  %3844 = getelementptr inbounds i32, ptr %12, i64 %3841
  %3845 = load i32, ptr %3844, align 4, !tbaa !6
  %3846 = add nsw i32 %3845, -1
  %3847 = icmp slt i32 %3843, %3846
  br i1 %3847, label %3848, label %3863

3848:                                             ; preds = %3840
  br i1 %3835, label %3855, label %3849

3849:                                             ; preds = %3848
  %3850 = getelementptr inbounds i32, ptr %7, i64 %3841
  %3851 = load i32, ptr %3850, align 4, !tbaa !6
  %3852 = getelementptr inbounds i32, ptr %6, i64 %3841
  %3853 = load i32, ptr %3852, align 4, !tbaa !6
  %3854 = add nsw i32 %3853, %3851
  store i32 %3854, ptr %3852, align 4, !tbaa !6
  br label %3873

3855:                                             ; preds = %3831, %3848
  %3856 = phi i32 [ %3843, %3848 ], [ %3832, %3831 ]
  %3857 = phi ptr [ %3842, %3848 ], [ %4, %3831 ]
  %3858 = phi i64 [ %3841, %3848 ], [ 0, %3831 ]
  %3859 = add nsw i32 %3856, 1
  store i32 %3859, ptr %3857, align 4, !tbaa !6
  %3860 = getelementptr inbounds i32, ptr %7, i64 %3858
  %3861 = load i32, ptr %3860, align 4, !tbaa !6
  %3862 = getelementptr inbounds i32, ptr %6, i64 %3858
  br label %3873

3863:                                             ; preds = %3840
  %3864 = icmp eq i32 %3843, %3846
  br i1 %3864, label %3865, label %3871

3865:                                             ; preds = %3863
  store i32 0, ptr %3842, align 4, !tbaa !6
  %3866 = getelementptr inbounds i32, ptr %8, i64 %3841
  %3867 = load i32, ptr %3866, align 4, !tbaa !6
  %3868 = getelementptr inbounds i32, ptr %6, i64 %3841
  store i32 %3867, ptr %3868, align 4, !tbaa !6
  %3869 = add nuw nsw i64 %3841, 1
  %3870 = icmp eq i64 %3869, %3741
  br i1 %3870, label %3878, label %3840, !llvm.loop !1428

3871:                                             ; preds = %3836, %3863
  %3872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

3873:                                             ; preds = %3849, %3855
  %3874 = phi ptr [ %3862, %3855 ], [ %3842, %3849 ]
  %3875 = phi i32 [ %3861, %3855 ], [ 1, %3849 ]
  %3876 = load i32, ptr %3874, align 4, !tbaa !6
  %3877 = add nsw i32 %3876, %3875
  store i32 %3877, ptr %3874, align 4, !tbaa !6
  br label %3878

3878:                                             ; preds = %3865, %3873, %3838, %3818
  %3879 = icmp eq i32 %3830, %5
  br i1 %3879, label %5539, label %3744, !llvm.loop !1429

3880:                                             ; preds = %3727, %4016
  %3881 = phi double [ 0.000000e+00, %3727 ], [ %3964, %4016 ]
  %3882 = phi i32 [ 0, %3727 ], [ %3965, %4016 ]
  %3883 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3728, label %3884, label %3953

3884:                                             ; preds = %3880, %3943
  %3885 = phi i32 [ %3952, %3943 ], [ 0, %3880 ]
  %3886 = phi i64 [ %3894, %3943 ], [ %3732, %3880 ]
  %3887 = phi i64 [ %3951, %3943 ], [ %3731, %3880 ]
  %3888 = phi i32 [ %3949, %3943 ], [ %3883, %3880 ]
  %3889 = sub i32 %3730, %3885
  %3890 = tail call i32 @llvm.smin.i32(i32 %3889, i32 0)
  %3891 = sub i32 %3889, %3890
  %3892 = zext i32 %3891 to i64
  %3893 = add nuw nsw i64 %3892, 1
  %3894 = add nsw i64 %3886, -1
  %3895 = icmp ult i32 %3891, 31
  br i1 %3895, label %3931, label %3896

3896:                                             ; preds = %3884
  %3897 = and i64 %3893, 8589934560
  %3898 = sub i64 %3887, %3897
  br label %3899

3899:                                             ; preds = %3899, %3896
  %3900 = phi i64 [ 0, %3896 ], [ %3923, %3899 ]
  %3901 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3919, %3899 ]
  %3902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3920, %3899 ]
  %3903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3921, %3899 ]
  %3904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3896 ], [ %3922, %3899 ]
  %3905 = sub i64 %3887, %3900
  %3906 = getelementptr inbounds i32, ptr %11, i64 %3905
  %3907 = getelementptr inbounds i32, ptr %3906, i64 -7
  %3908 = load <8 x i32>, ptr %3907, align 4, !tbaa !6
  %3909 = shufflevector <8 x i32> %3908, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3910 = getelementptr inbounds i32, ptr %3906, i64 -15
  %3911 = load <8 x i32>, ptr %3910, align 4, !tbaa !6
  %3912 = shufflevector <8 x i32> %3911, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3913 = getelementptr inbounds i32, ptr %3906, i64 -23
  %3914 = load <8 x i32>, ptr %3913, align 4, !tbaa !6
  %3915 = shufflevector <8 x i32> %3914, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3916 = getelementptr inbounds i32, ptr %3906, i64 -31
  %3917 = load <8 x i32>, ptr %3916, align 4, !tbaa !6
  %3918 = shufflevector <8 x i32> %3917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3919 = mul <8 x i32> %3909, %3901
  %3920 = mul <8 x i32> %3912, %3902
  %3921 = mul <8 x i32> %3915, %3903
  %3922 = mul <8 x i32> %3918, %3904
  %3923 = add nuw i64 %3900, 32
  %3924 = icmp eq i64 %3923, %3897
  br i1 %3924, label %3925, label %3899, !llvm.loop !1430

3925:                                             ; preds = %3899
  %3926 = mul <8 x i32> %3920, %3919
  %3927 = mul <8 x i32> %3921, %3926
  %3928 = mul <8 x i32> %3922, %3927
  %3929 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3928)
  %3930 = icmp eq i64 %3893, %3897
  br i1 %3930, label %3943, label %3931

3931:                                             ; preds = %3884, %3925
  %3932 = phi i64 [ %3887, %3884 ], [ %3898, %3925 ]
  %3933 = phi i32 [ 1, %3884 ], [ %3929, %3925 ]
  br label %3934

3934:                                             ; preds = %3931, %3934
  %3935 = phi i64 [ %3940, %3934 ], [ %3932, %3931 ]
  %3936 = phi i32 [ %3939, %3934 ], [ %3933, %3931 ]
  %3937 = getelementptr inbounds i32, ptr %11, i64 %3935
  %3938 = load i32, ptr %3937, align 4, !tbaa !6
  %3939 = mul nsw i32 %3938, %3936
  %3940 = add nsw i64 %3935, -1
  %3941 = trunc i64 %3935 to i32
  %3942 = icmp sgt i32 %3941, 0
  br i1 %3942, label %3934, label %3943, !llvm.loop !1431

3943:                                             ; preds = %3934, %3925
  %3944 = phi i32 [ %3929, %3925 ], [ %3939, %3934 ]
  %3945 = and i64 %3894, 4294967295
  %3946 = getelementptr inbounds i32, ptr %6, i64 %3945
  %3947 = load i32, ptr %3946, align 4, !tbaa !6
  %3948 = mul nsw i32 %3947, %3944
  %3949 = add nsw i32 %3948, %3888
  %3950 = icmp sgt i64 %3886, 2
  %3951 = add nsw i64 %3887, -1
  %3952 = add i32 %3885, 1
  br i1 %3950, label %3884, label %3953, !llvm.loop !1432

3953:                                             ; preds = %3943, %3880
  %3954 = phi i32 [ %3883, %3880 ], [ %3949, %3943 ]
  %3955 = icmp slt i32 %3954, %5
  br i1 %3955, label %3958, label %3956

3956:                                             ; preds = %3953
  %3957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

3958:                                             ; preds = %3953
  %3959 = sext i32 %3954 to i64
  %3960 = getelementptr inbounds double, ptr %3712, i64 %3959
  %3961 = load double, ptr %3960, align 8, !tbaa !19
  %3962 = fmul fast double %3961, %3961
  %3963 = fmul fast double %3962, %3962
  %3964 = fadd fast double %3963, %3881
  store double %3964, ptr %3714, align 8, !tbaa !19
  %3965 = add nuw nsw i32 %3882, 1
  br i1 %3729, label %3966, label %4016

3966:                                             ; preds = %3958
  %3967 = load i32, ptr %4, align 4, !tbaa !6
  %3968 = load i32, ptr %12, align 4, !tbaa !6
  %3969 = add nsw i32 %3968, -1
  %3970 = icmp slt i32 %3967, %3969
  br i1 %3970, label %3993, label %3971

3971:                                             ; preds = %3966
  %3972 = icmp eq i32 %3967, %3969
  br i1 %3972, label %3973, label %4009

3973:                                             ; preds = %3971
  store i32 0, ptr %4, align 4, !tbaa !6
  %3974 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3974, ptr %6, align 4, !tbaa !6
  br i1 %3734, label %4016, label %3975

3975:                                             ; preds = %3973, %4003
  %3976 = phi i64 [ %4007, %4003 ], [ 1, %3973 ]
  %3977 = getelementptr inbounds i32, ptr %4, i64 %3976
  %3978 = load i32, ptr %3977, align 4, !tbaa !6
  %3979 = getelementptr inbounds i32, ptr %12, i64 %3976
  %3980 = load i32, ptr %3979, align 4, !tbaa !6
  %3981 = add nsw i32 %3980, -1
  %3982 = icmp slt i32 %3978, %3981
  br i1 %3982, label %3983, label %4001

3983:                                             ; preds = %3975
  br i1 %3970, label %3993, label %3984

3984:                                             ; preds = %3983
  %3985 = shl i64 %3976, 32
  %3986 = add i64 %3985, -4294967296
  %3987 = ashr exact i64 %3986, 32
  %3988 = getelementptr inbounds i32, ptr %7, i64 %3987
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = getelementptr inbounds i32, ptr %6, i64 %3976
  %3991 = load i32, ptr %3990, align 4, !tbaa !6
  %3992 = add nsw i32 %3991, %3989
  store i32 %3992, ptr %3990, align 4, !tbaa !6
  br label %4011

3993:                                             ; preds = %3966, %3983
  %3994 = phi i32 [ %3978, %3983 ], [ %3967, %3966 ]
  %3995 = phi ptr [ %3977, %3983 ], [ %4, %3966 ]
  %3996 = phi i64 [ %3976, %3983 ], [ 0, %3966 ]
  %3997 = add nsw i32 %3994, 1
  store i32 %3997, ptr %3995, align 4, !tbaa !6
  %3998 = getelementptr inbounds i32, ptr %7, i64 %3996
  %3999 = load i32, ptr %3998, align 4, !tbaa !6
  %4000 = getelementptr inbounds i32, ptr %6, i64 %3996
  br label %4011

4001:                                             ; preds = %3975
  %4002 = icmp eq i32 %3978, %3981
  br i1 %4002, label %4003, label %4009

4003:                                             ; preds = %4001
  store i32 0, ptr %3977, align 4, !tbaa !6
  %4004 = getelementptr inbounds i32, ptr %8, i64 %3976
  %4005 = load i32, ptr %4004, align 4, !tbaa !6
  %4006 = getelementptr inbounds i32, ptr %6, i64 %3976
  store i32 %4005, ptr %4006, align 4, !tbaa !6
  %4007 = add nuw nsw i64 %3976, 1
  %4008 = icmp eq i64 %4007, %3732
  br i1 %4008, label %4016, label %3975, !llvm.loop !1433

4009:                                             ; preds = %3971, %4001
  %4010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4011:                                             ; preds = %3984, %3993
  %4012 = phi ptr [ %4000, %3993 ], [ %3977, %3984 ]
  %4013 = phi i32 [ %3999, %3993 ], [ 1, %3984 ]
  %4014 = load i32, ptr %4012, align 4, !tbaa !6
  %4015 = add nsw i32 %4014, %4013
  store i32 %4015, ptr %4012, align 4, !tbaa !6
  br label %4016

4016:                                             ; preds = %4003, %4011, %3973, %3958
  %4017 = icmp eq i32 %3965, %5
  br i1 %4017, label %5539, label %3880, !llvm.loop !1434

4018:                                             ; preds = %3720
  %4019 = getelementptr inbounds i32, ptr %3, i64 %19
  %4020 = load i32, ptr %4019, align 4, !tbaa !6
  %4021 = icmp eq i32 %4020, 0
  %4022 = icmp sgt i32 %5, 0
  br i1 %4021, label %4032, label %4023

4023:                                             ; preds = %4018
  br i1 %4022, label %4024, label %5539

4024:                                             ; preds = %4023
  %4025 = icmp sgt i32 %13, 1
  %4026 = icmp sgt i32 %13, 0
  %4027 = add i32 %13, -2
  %4028 = zext i32 %4027 to i64
  %4029 = zext i32 %13 to i64
  %4030 = add nuw i32 %5, 1
  %4031 = icmp eq i32 %13, 1
  br label %4174

4032:                                             ; preds = %4018
  br i1 %4022, label %4033, label %5539

4033:                                             ; preds = %4032
  %4034 = icmp sgt i32 %13, 1
  %4035 = icmp sgt i32 %13, 0
  %4036 = add i32 %13, -2
  %4037 = zext i32 %4036 to i64
  %4038 = zext i32 %13 to i64
  %4039 = add nuw i32 %5, 1
  %4040 = icmp eq i32 %13, 1
  br label %4041

4041:                                             ; preds = %4033, %4172
  %4042 = phi double [ 0.000000e+00, %4033 ], [ %4122, %4172 ]
  %4043 = phi i32 [ 0, %4033 ], [ %4124, %4172 ]
  %4044 = phi double [ 0.000000e+00, %4033 ], [ %4123, %4172 ]
  %4045 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4034, label %4046, label %4115

4046:                                             ; preds = %4041, %4105
  %4047 = phi i32 [ %4114, %4105 ], [ 0, %4041 ]
  %4048 = phi i64 [ %4056, %4105 ], [ %4038, %4041 ]
  %4049 = phi i64 [ %4113, %4105 ], [ %4037, %4041 ]
  %4050 = phi i32 [ %4111, %4105 ], [ %4045, %4041 ]
  %4051 = sub i32 %4036, %4047
  %4052 = tail call i32 @llvm.smin.i32(i32 %4051, i32 0)
  %4053 = sub i32 %4051, %4052
  %4054 = zext i32 %4053 to i64
  %4055 = add nuw nsw i64 %4054, 1
  %4056 = add nsw i64 %4048, -1
  %4057 = icmp ult i32 %4053, 31
  br i1 %4057, label %4093, label %4058

4058:                                             ; preds = %4046
  %4059 = and i64 %4055, 8589934560
  %4060 = sub i64 %4049, %4059
  br label %4061

4061:                                             ; preds = %4061, %4058
  %4062 = phi i64 [ 0, %4058 ], [ %4085, %4061 ]
  %4063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4081, %4061 ]
  %4064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4082, %4061 ]
  %4065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4083, %4061 ]
  %4066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4058 ], [ %4084, %4061 ]
  %4067 = sub i64 %4049, %4062
  %4068 = getelementptr inbounds i32, ptr %9, i64 %4067
  %4069 = getelementptr inbounds i32, ptr %4068, i64 -7
  %4070 = load <8 x i32>, ptr %4069, align 4, !tbaa !6
  %4071 = shufflevector <8 x i32> %4070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4072 = getelementptr inbounds i32, ptr %4068, i64 -15
  %4073 = load <8 x i32>, ptr %4072, align 4, !tbaa !6
  %4074 = shufflevector <8 x i32> %4073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4075 = getelementptr inbounds i32, ptr %4068, i64 -23
  %4076 = load <8 x i32>, ptr %4075, align 4, !tbaa !6
  %4077 = shufflevector <8 x i32> %4076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4078 = getelementptr inbounds i32, ptr %4068, i64 -31
  %4079 = load <8 x i32>, ptr %4078, align 4, !tbaa !6
  %4080 = shufflevector <8 x i32> %4079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4081 = mul <8 x i32> %4071, %4063
  %4082 = mul <8 x i32> %4074, %4064
  %4083 = mul <8 x i32> %4077, %4065
  %4084 = mul <8 x i32> %4080, %4066
  %4085 = add nuw i64 %4062, 32
  %4086 = icmp eq i64 %4085, %4059
  br i1 %4086, label %4087, label %4061, !llvm.loop !1435

4087:                                             ; preds = %4061
  %4088 = mul <8 x i32> %4082, %4081
  %4089 = mul <8 x i32> %4083, %4088
  %4090 = mul <8 x i32> %4084, %4089
  %4091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4090)
  %4092 = icmp eq i64 %4055, %4059
  br i1 %4092, label %4105, label %4093

4093:                                             ; preds = %4046, %4087
  %4094 = phi i64 [ %4049, %4046 ], [ %4060, %4087 ]
  %4095 = phi i32 [ 1, %4046 ], [ %4091, %4087 ]
  br label %4096

4096:                                             ; preds = %4093, %4096
  %4097 = phi i64 [ %4102, %4096 ], [ %4094, %4093 ]
  %4098 = phi i32 [ %4101, %4096 ], [ %4095, %4093 ]
  %4099 = getelementptr inbounds i32, ptr %9, i64 %4097
  %4100 = load i32, ptr %4099, align 4, !tbaa !6
  %4101 = mul nsw i32 %4100, %4098
  %4102 = add nsw i64 %4097, -1
  %4103 = trunc i64 %4097 to i32
  %4104 = icmp sgt i32 %4103, 0
  br i1 %4104, label %4096, label %4105, !llvm.loop !1436

4105:                                             ; preds = %4096, %4087
  %4106 = phi i32 [ %4091, %4087 ], [ %4101, %4096 ]
  %4107 = and i64 %4056, 4294967295
  %4108 = getelementptr inbounds i32, ptr %6, i64 %4107
  %4109 = load i32, ptr %4108, align 4, !tbaa !6
  %4110 = mul nsw i32 %4109, %4106
  %4111 = add nsw i32 %4110, %4050
  %4112 = icmp sgt i64 %4048, 2
  %4113 = add nsw i64 %4049, -1
  %4114 = add i32 %4047, 1
  br i1 %4112, label %4046, label %4115, !llvm.loop !1437

4115:                                             ; preds = %4105, %4041
  %4116 = phi i32 [ %4045, %4041 ], [ %4111, %4105 ]
  %4117 = sext i32 %4116 to i64
  %4118 = getelementptr inbounds double, ptr %3712, i64 %4117
  %4119 = load double, ptr %4118, align 8, !tbaa !19
  %4120 = fmul fast double %4119, %4119
  %4121 = fmul fast double %4120, %4120
  %4122 = fadd fast double %4121, %4042
  store double %4122, ptr %3714, align 8, !tbaa !19
  %4123 = fadd fast double %4044, 1.000000e+00
  %4124 = add nuw nsw i32 %4043, 1
  br i1 %4035, label %4125, label %4172

4125:                                             ; preds = %4115
  %4126 = load i32, ptr %4, align 4, !tbaa !6
  %4127 = load i32, ptr %12, align 4, !tbaa !6
  %4128 = add nsw i32 %4127, -1
  %4129 = icmp slt i32 %4126, %4128
  br i1 %4129, label %4149, label %4130

4130:                                             ; preds = %4125
  %4131 = icmp eq i32 %4126, %4128
  br i1 %4131, label %4132, label %4165

4132:                                             ; preds = %4130
  store i32 0, ptr %4, align 4, !tbaa !6
  %4133 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4133, ptr %6, align 4, !tbaa !6
  br i1 %4040, label %4172, label %4134

4134:                                             ; preds = %4132, %4159
  %4135 = phi i64 [ %4163, %4159 ], [ 1, %4132 ]
  %4136 = getelementptr inbounds i32, ptr %4, i64 %4135
  %4137 = load i32, ptr %4136, align 4, !tbaa !6
  %4138 = getelementptr inbounds i32, ptr %12, i64 %4135
  %4139 = load i32, ptr %4138, align 4, !tbaa !6
  %4140 = add nsw i32 %4139, -1
  %4141 = icmp slt i32 %4137, %4140
  br i1 %4141, label %4142, label %4157

4142:                                             ; preds = %4134
  br i1 %4129, label %4149, label %4143

4143:                                             ; preds = %4142
  %4144 = getelementptr inbounds i32, ptr %7, i64 %4135
  %4145 = load i32, ptr %4144, align 4, !tbaa !6
  %4146 = getelementptr inbounds i32, ptr %6, i64 %4135
  %4147 = load i32, ptr %4146, align 4, !tbaa !6
  %4148 = add nsw i32 %4147, %4145
  store i32 %4148, ptr %4146, align 4, !tbaa !6
  br label %4167

4149:                                             ; preds = %4125, %4142
  %4150 = phi i32 [ %4137, %4142 ], [ %4126, %4125 ]
  %4151 = phi ptr [ %4136, %4142 ], [ %4, %4125 ]
  %4152 = phi i64 [ %4135, %4142 ], [ 0, %4125 ]
  %4153 = add nsw i32 %4150, 1
  store i32 %4153, ptr %4151, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %7, i64 %4152
  %4155 = load i32, ptr %4154, align 4, !tbaa !6
  %4156 = getelementptr inbounds i32, ptr %6, i64 %4152
  br label %4167

4157:                                             ; preds = %4134
  %4158 = icmp eq i32 %4137, %4140
  br i1 %4158, label %4159, label %4165

4159:                                             ; preds = %4157
  store i32 0, ptr %4136, align 4, !tbaa !6
  %4160 = getelementptr inbounds i32, ptr %8, i64 %4135
  %4161 = load i32, ptr %4160, align 4, !tbaa !6
  %4162 = getelementptr inbounds i32, ptr %6, i64 %4135
  store i32 %4161, ptr %4162, align 4, !tbaa !6
  %4163 = add nuw nsw i64 %4135, 1
  %4164 = icmp eq i64 %4163, %4038
  br i1 %4164, label %4172, label %4134, !llvm.loop !1438

4165:                                             ; preds = %4130, %4157
  %4166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4167:                                             ; preds = %4143, %4149
  %4168 = phi ptr [ %4156, %4149 ], [ %4136, %4143 ]
  %4169 = phi i32 [ %4155, %4149 ], [ 1, %4143 ]
  %4170 = load i32, ptr %4168, align 4, !tbaa !6
  %4171 = add nsw i32 %4170, %4169
  store i32 %4171, ptr %4168, align 4, !tbaa !6
  br label %4172

4172:                                             ; preds = %4159, %4167, %4132, %4115
  %4173 = icmp eq i32 %4124, %5
  br i1 %4173, label %5539, label %4041, !llvm.loop !1439

4174:                                             ; preds = %4024, %4310
  %4175 = phi double [ 0.000000e+00, %4024 ], [ %4258, %4310 ]
  %4176 = phi i32 [ 0, %4024 ], [ %4259, %4310 ]
  %4177 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4025, label %4178, label %4247

4178:                                             ; preds = %4174, %4237
  %4179 = phi i32 [ %4246, %4237 ], [ 0, %4174 ]
  %4180 = phi i64 [ %4188, %4237 ], [ %4029, %4174 ]
  %4181 = phi i64 [ %4245, %4237 ], [ %4028, %4174 ]
  %4182 = phi i32 [ %4243, %4237 ], [ %4177, %4174 ]
  %4183 = sub i32 %4027, %4179
  %4184 = tail call i32 @llvm.smin.i32(i32 %4183, i32 0)
  %4185 = sub i32 %4183, %4184
  %4186 = zext i32 %4185 to i64
  %4187 = add nuw nsw i64 %4186, 1
  %4188 = add nsw i64 %4180, -1
  %4189 = icmp ult i32 %4185, 31
  br i1 %4189, label %4225, label %4190

4190:                                             ; preds = %4178
  %4191 = and i64 %4187, 8589934560
  %4192 = sub i64 %4181, %4191
  br label %4193

4193:                                             ; preds = %4193, %4190
  %4194 = phi i64 [ 0, %4190 ], [ %4217, %4193 ]
  %4195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4213, %4193 ]
  %4196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4214, %4193 ]
  %4197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4215, %4193 ]
  %4198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4190 ], [ %4216, %4193 ]
  %4199 = sub i64 %4181, %4194
  %4200 = getelementptr inbounds i32, ptr %11, i64 %4199
  %4201 = getelementptr inbounds i32, ptr %4200, i64 -7
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !6
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = getelementptr inbounds i32, ptr %4200, i64 -15
  %4205 = load <8 x i32>, ptr %4204, align 4, !tbaa !6
  %4206 = shufflevector <8 x i32> %4205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4207 = getelementptr inbounds i32, ptr %4200, i64 -23
  %4208 = load <8 x i32>, ptr %4207, align 4, !tbaa !6
  %4209 = shufflevector <8 x i32> %4208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4210 = getelementptr inbounds i32, ptr %4200, i64 -31
  %4211 = load <8 x i32>, ptr %4210, align 4, !tbaa !6
  %4212 = shufflevector <8 x i32> %4211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4213 = mul <8 x i32> %4203, %4195
  %4214 = mul <8 x i32> %4206, %4196
  %4215 = mul <8 x i32> %4209, %4197
  %4216 = mul <8 x i32> %4212, %4198
  %4217 = add nuw i64 %4194, 32
  %4218 = icmp eq i64 %4217, %4191
  br i1 %4218, label %4219, label %4193, !llvm.loop !1440

4219:                                             ; preds = %4193
  %4220 = mul <8 x i32> %4214, %4213
  %4221 = mul <8 x i32> %4215, %4220
  %4222 = mul <8 x i32> %4216, %4221
  %4223 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4222)
  %4224 = icmp eq i64 %4187, %4191
  br i1 %4224, label %4237, label %4225

4225:                                             ; preds = %4178, %4219
  %4226 = phi i64 [ %4181, %4178 ], [ %4192, %4219 ]
  %4227 = phi i32 [ 1, %4178 ], [ %4223, %4219 ]
  br label %4228

4228:                                             ; preds = %4225, %4228
  %4229 = phi i64 [ %4234, %4228 ], [ %4226, %4225 ]
  %4230 = phi i32 [ %4233, %4228 ], [ %4227, %4225 ]
  %4231 = getelementptr inbounds i32, ptr %11, i64 %4229
  %4232 = load i32, ptr %4231, align 4, !tbaa !6
  %4233 = mul nsw i32 %4232, %4230
  %4234 = add nsw i64 %4229, -1
  %4235 = trunc i64 %4229 to i32
  %4236 = icmp sgt i32 %4235, 0
  br i1 %4236, label %4228, label %4237, !llvm.loop !1441

4237:                                             ; preds = %4228, %4219
  %4238 = phi i32 [ %4223, %4219 ], [ %4233, %4228 ]
  %4239 = and i64 %4188, 4294967295
  %4240 = getelementptr inbounds i32, ptr %6, i64 %4239
  %4241 = load i32, ptr %4240, align 4, !tbaa !6
  %4242 = mul nsw i32 %4241, %4238
  %4243 = add nsw i32 %4242, %4182
  %4244 = icmp sgt i64 %4180, 2
  %4245 = add nsw i64 %4181, -1
  %4246 = add i32 %4179, 1
  br i1 %4244, label %4178, label %4247, !llvm.loop !1442

4247:                                             ; preds = %4237, %4174
  %4248 = phi i32 [ %4177, %4174 ], [ %4243, %4237 ]
  %4249 = icmp slt i32 %4248, %5
  br i1 %4249, label %4252, label %4250

4250:                                             ; preds = %4247
  %4251 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4252:                                             ; preds = %4247
  %4253 = sext i32 %4248 to i64
  %4254 = getelementptr inbounds double, ptr %3712, i64 %4253
  %4255 = load double, ptr %4254, align 8, !tbaa !19
  %4256 = fmul fast double %4255, %4255
  %4257 = fmul fast double %4256, %4256
  %4258 = fadd fast double %4257, %4175
  store double %4258, ptr %3714, align 8, !tbaa !19
  %4259 = add nuw nsw i32 %4176, 1
  br i1 %4026, label %4260, label %4310

4260:                                             ; preds = %4252
  %4261 = load i32, ptr %4, align 4, !tbaa !6
  %4262 = load i32, ptr %12, align 4, !tbaa !6
  %4263 = add nsw i32 %4262, -1
  %4264 = icmp slt i32 %4261, %4263
  br i1 %4264, label %4287, label %4265

4265:                                             ; preds = %4260
  %4266 = icmp eq i32 %4261, %4263
  br i1 %4266, label %4267, label %4303

4267:                                             ; preds = %4265
  store i32 0, ptr %4, align 4, !tbaa !6
  %4268 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4268, ptr %6, align 4, !tbaa !6
  br i1 %4031, label %4310, label %4269

4269:                                             ; preds = %4267, %4297
  %4270 = phi i64 [ %4301, %4297 ], [ 1, %4267 ]
  %4271 = getelementptr inbounds i32, ptr %4, i64 %4270
  %4272 = load i32, ptr %4271, align 4, !tbaa !6
  %4273 = getelementptr inbounds i32, ptr %12, i64 %4270
  %4274 = load i32, ptr %4273, align 4, !tbaa !6
  %4275 = add nsw i32 %4274, -1
  %4276 = icmp slt i32 %4272, %4275
  br i1 %4276, label %4277, label %4295

4277:                                             ; preds = %4269
  br i1 %4264, label %4287, label %4278

4278:                                             ; preds = %4277
  %4279 = shl i64 %4270, 32
  %4280 = add i64 %4279, -4294967296
  %4281 = ashr exact i64 %4280, 32
  %4282 = getelementptr inbounds i32, ptr %7, i64 %4281
  %4283 = load i32, ptr %4282, align 4, !tbaa !6
  %4284 = getelementptr inbounds i32, ptr %6, i64 %4270
  %4285 = load i32, ptr %4284, align 4, !tbaa !6
  %4286 = add nsw i32 %4285, %4283
  store i32 %4286, ptr %4284, align 4, !tbaa !6
  br label %4305

4287:                                             ; preds = %4260, %4277
  %4288 = phi i32 [ %4272, %4277 ], [ %4261, %4260 ]
  %4289 = phi ptr [ %4271, %4277 ], [ %4, %4260 ]
  %4290 = phi i64 [ %4270, %4277 ], [ 0, %4260 ]
  %4291 = add nsw i32 %4288, 1
  store i32 %4291, ptr %4289, align 4, !tbaa !6
  %4292 = getelementptr inbounds i32, ptr %7, i64 %4290
  %4293 = load i32, ptr %4292, align 4, !tbaa !6
  %4294 = getelementptr inbounds i32, ptr %6, i64 %4290
  br label %4305

4295:                                             ; preds = %4269
  %4296 = icmp eq i32 %4272, %4275
  br i1 %4296, label %4297, label %4303

4297:                                             ; preds = %4295
  store i32 0, ptr %4271, align 4, !tbaa !6
  %4298 = getelementptr inbounds i32, ptr %8, i64 %4270
  %4299 = load i32, ptr %4298, align 4, !tbaa !6
  %4300 = getelementptr inbounds i32, ptr %6, i64 %4270
  store i32 %4299, ptr %4300, align 4, !tbaa !6
  %4301 = add nuw nsw i64 %4270, 1
  %4302 = icmp eq i64 %4301, %4029
  br i1 %4302, label %4310, label %4269, !llvm.loop !1443

4303:                                             ; preds = %4265, %4295
  %4304 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4305:                                             ; preds = %4278, %4287
  %4306 = phi ptr [ %4294, %4287 ], [ %4271, %4278 ]
  %4307 = phi i32 [ %4293, %4287 ], [ 1, %4278 ]
  %4308 = load i32, ptr %4306, align 4, !tbaa !6
  %4309 = add nsw i32 %4308, %4307
  store i32 %4309, ptr %4306, align 4, !tbaa !6
  br label %4310

4310:                                             ; preds = %4297, %4305, %4267, %4252
  %4311 = icmp eq i32 %4259, %5
  br i1 %4311, label %5539, label %4174, !llvm.loop !1444

4312:                                             ; preds = %3720
  %4313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

4314:                                             ; preds = %18
  %4315 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4316 = load ptr, ptr %4315, align 8, !tbaa !10
  %4317 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4318 = load ptr, ptr %4317, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4318, align 4, !tbaa !163
  %4319 = icmp eq i32 %13, 0
  br i1 %4319, label %4320, label %4325

4320:                                             ; preds = %4314
  %4321 = load double, ptr %4316, align 8, !tbaa !19
  %4322 = fptrunc double %4321 to float
  %4323 = fmul fast float %4322, %4322
  %4324 = fmul fast float %4323, %4323
  store float %4324, ptr %4318, align 4, !tbaa !163
  br label %5539

4325:                                             ; preds = %4314
  switch i32 %1, label %4927 [
    i32 1, label %4326
    i32 0, label %4631
  ]

4326:                                             ; preds = %4325
  %4327 = getelementptr inbounds i32, ptr %3, i64 %19
  %4328 = load i32, ptr %4327, align 4, !tbaa !6
  %4329 = icmp eq i32 %4328, 0
  %4330 = icmp sgt i32 %5, 0
  br i1 %4329, label %4340, label %4331

4331:                                             ; preds = %4326
  br i1 %4330, label %4332, label %5539

4332:                                             ; preds = %4331
  %4333 = icmp sgt i32 %13, 1
  %4334 = icmp sgt i32 %13, 0
  %4335 = add i32 %13, -2
  %4336 = zext i32 %4335 to i64
  %4337 = zext i32 %13 to i64
  %4338 = add nuw i32 %5, 1
  %4339 = icmp eq i32 %13, 1
  br label %4489

4340:                                             ; preds = %4326
  br i1 %4330, label %4341, label %5539

4341:                                             ; preds = %4340
  %4342 = icmp sgt i32 %13, 1
  %4343 = icmp sgt i32 %13, 0
  %4344 = add i32 %13, -2
  %4345 = zext i32 %4344 to i64
  %4346 = zext i32 %13 to i64
  %4347 = add nuw i32 %5, 1
  %4348 = icmp eq i32 %13, 1
  br label %4349

4349:                                             ; preds = %4341, %4487
  %4350 = phi float [ 0.000000e+00, %4341 ], [ %4437, %4487 ]
  %4351 = phi i32 [ 0, %4341 ], [ %4439, %4487 ]
  %4352 = phi double [ 0.000000e+00, %4341 ], [ %4438, %4487 ]
  %4353 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4342, label %4354, label %4423

4354:                                             ; preds = %4349, %4413
  %4355 = phi i32 [ %4422, %4413 ], [ 0, %4349 ]
  %4356 = phi i64 [ %4364, %4413 ], [ %4346, %4349 ]
  %4357 = phi i64 [ %4421, %4413 ], [ %4345, %4349 ]
  %4358 = phi i32 [ %4419, %4413 ], [ %4353, %4349 ]
  %4359 = sub i32 %4344, %4355
  %4360 = tail call i32 @llvm.smin.i32(i32 %4359, i32 0)
  %4361 = sub i32 %4359, %4360
  %4362 = zext i32 %4361 to i64
  %4363 = add nuw nsw i64 %4362, 1
  %4364 = add nsw i64 %4356, -1
  %4365 = icmp ult i32 %4361, 31
  br i1 %4365, label %4401, label %4366

4366:                                             ; preds = %4354
  %4367 = and i64 %4363, 8589934560
  %4368 = sub i64 %4357, %4367
  br label %4369

4369:                                             ; preds = %4369, %4366
  %4370 = phi i64 [ 0, %4366 ], [ %4393, %4369 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4389, %4369 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4390, %4369 ]
  %4373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4391, %4369 ]
  %4374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4366 ], [ %4392, %4369 ]
  %4375 = sub i64 %4357, %4370
  %4376 = getelementptr inbounds i32, ptr %9, i64 %4375
  %4377 = getelementptr inbounds i32, ptr %4376, i64 -7
  %4378 = load <8 x i32>, ptr %4377, align 4, !tbaa !6
  %4379 = shufflevector <8 x i32> %4378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4380 = getelementptr inbounds i32, ptr %4376, i64 -15
  %4381 = load <8 x i32>, ptr %4380, align 4, !tbaa !6
  %4382 = shufflevector <8 x i32> %4381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4383 = getelementptr inbounds i32, ptr %4376, i64 -23
  %4384 = load <8 x i32>, ptr %4383, align 4, !tbaa !6
  %4385 = shufflevector <8 x i32> %4384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4386 = getelementptr inbounds i32, ptr %4376, i64 -31
  %4387 = load <8 x i32>, ptr %4386, align 4, !tbaa !6
  %4388 = shufflevector <8 x i32> %4387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4389 = mul <8 x i32> %4379, %4371
  %4390 = mul <8 x i32> %4382, %4372
  %4391 = mul <8 x i32> %4385, %4373
  %4392 = mul <8 x i32> %4388, %4374
  %4393 = add nuw i64 %4370, 32
  %4394 = icmp eq i64 %4393, %4367
  br i1 %4394, label %4395, label %4369, !llvm.loop !1445

4395:                                             ; preds = %4369
  %4396 = mul <8 x i32> %4390, %4389
  %4397 = mul <8 x i32> %4391, %4396
  %4398 = mul <8 x i32> %4392, %4397
  %4399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4398)
  %4400 = icmp eq i64 %4363, %4367
  br i1 %4400, label %4413, label %4401

4401:                                             ; preds = %4354, %4395
  %4402 = phi i64 [ %4357, %4354 ], [ %4368, %4395 ]
  %4403 = phi i32 [ 1, %4354 ], [ %4399, %4395 ]
  br label %4404

4404:                                             ; preds = %4401, %4404
  %4405 = phi i64 [ %4410, %4404 ], [ %4402, %4401 ]
  %4406 = phi i32 [ %4409, %4404 ], [ %4403, %4401 ]
  %4407 = getelementptr inbounds i32, ptr %9, i64 %4405
  %4408 = load i32, ptr %4407, align 4, !tbaa !6
  %4409 = mul nsw i32 %4408, %4406
  %4410 = add nsw i64 %4405, -1
  %4411 = trunc i64 %4405 to i32
  %4412 = icmp sgt i32 %4411, 0
  br i1 %4412, label %4404, label %4413, !llvm.loop !1446

4413:                                             ; preds = %4404, %4395
  %4414 = phi i32 [ %4399, %4395 ], [ %4409, %4404 ]
  %4415 = and i64 %4364, 4294967295
  %4416 = getelementptr inbounds i32, ptr %6, i64 %4415
  %4417 = load i32, ptr %4416, align 4, !tbaa !6
  %4418 = mul nsw i32 %4417, %4414
  %4419 = add nsw i32 %4418, %4358
  %4420 = icmp sgt i64 %4356, 2
  %4421 = add nsw i64 %4357, -1
  %4422 = add i32 %4355, 1
  br i1 %4420, label %4354, label %4423, !llvm.loop !1447

4423:                                             ; preds = %4413, %4349
  %4424 = phi i32 [ %4353, %4349 ], [ %4419, %4413 ]
  %4425 = sext i32 %4424 to i64
  %4426 = getelementptr inbounds double, ptr %2, i64 %4425
  %4427 = load double, ptr %4426, align 8, !tbaa !19
  %4428 = getelementptr inbounds double, ptr %4316, i64 %4425
  %4429 = load double, ptr %4428, align 8, !tbaa !19
  %4430 = fptrunc double %4429 to float
  %4431 = fpext float %4350 to double
  %4432 = fpext float %4430 to double
  %4433 = fmul fast double %4427, %4432
  %4434 = fmul fast double %4433, %4433
  %4435 = fmul fast double %4434, %4434
  %4436 = fadd fast double %4435, %4431
  %4437 = fptrunc double %4436 to float
  %4438 = fadd fast double %4427, %4352
  %4439 = add nuw nsw i32 %4351, 1
  br i1 %4343, label %4440, label %4487

4440:                                             ; preds = %4423
  %4441 = load i32, ptr %4, align 4, !tbaa !6
  %4442 = load i32, ptr %12, align 4, !tbaa !6
  %4443 = add nsw i32 %4442, -1
  %4444 = icmp slt i32 %4441, %4443
  br i1 %4444, label %4464, label %4445

4445:                                             ; preds = %4440
  %4446 = icmp eq i32 %4441, %4443
  br i1 %4446, label %4447, label %4480

4447:                                             ; preds = %4445
  store i32 0, ptr %4, align 4, !tbaa !6
  %4448 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4448, ptr %6, align 4, !tbaa !6
  br i1 %4348, label %4487, label %4449

4449:                                             ; preds = %4447, %4474
  %4450 = phi i64 [ %4478, %4474 ], [ 1, %4447 ]
  %4451 = getelementptr inbounds i32, ptr %4, i64 %4450
  %4452 = load i32, ptr %4451, align 4, !tbaa !6
  %4453 = getelementptr inbounds i32, ptr %12, i64 %4450
  %4454 = load i32, ptr %4453, align 4, !tbaa !6
  %4455 = add nsw i32 %4454, -1
  %4456 = icmp slt i32 %4452, %4455
  br i1 %4456, label %4457, label %4472

4457:                                             ; preds = %4449
  br i1 %4444, label %4464, label %4458

4458:                                             ; preds = %4457
  %4459 = getelementptr inbounds i32, ptr %7, i64 %4450
  %4460 = load i32, ptr %4459, align 4, !tbaa !6
  %4461 = getelementptr inbounds i32, ptr %6, i64 %4450
  %4462 = load i32, ptr %4461, align 4, !tbaa !6
  %4463 = add nsw i32 %4462, %4460
  store i32 %4463, ptr %4461, align 4, !tbaa !6
  br label %4482

4464:                                             ; preds = %4440, %4457
  %4465 = phi i32 [ %4452, %4457 ], [ %4441, %4440 ]
  %4466 = phi ptr [ %4451, %4457 ], [ %4, %4440 ]
  %4467 = phi i64 [ %4450, %4457 ], [ 0, %4440 ]
  %4468 = add nsw i32 %4465, 1
  store i32 %4468, ptr %4466, align 4, !tbaa !6
  %4469 = getelementptr inbounds i32, ptr %7, i64 %4467
  %4470 = load i32, ptr %4469, align 4, !tbaa !6
  %4471 = getelementptr inbounds i32, ptr %6, i64 %4467
  br label %4482

4472:                                             ; preds = %4449
  %4473 = icmp eq i32 %4452, %4455
  br i1 %4473, label %4474, label %4480

4474:                                             ; preds = %4472
  store i32 0, ptr %4451, align 4, !tbaa !6
  %4475 = getelementptr inbounds i32, ptr %8, i64 %4450
  %4476 = load i32, ptr %4475, align 4, !tbaa !6
  %4477 = getelementptr inbounds i32, ptr %6, i64 %4450
  store i32 %4476, ptr %4477, align 4, !tbaa !6
  %4478 = add nuw nsw i64 %4450, 1
  %4479 = icmp eq i64 %4478, %4346
  br i1 %4479, label %4487, label %4449, !llvm.loop !1448

4480:                                             ; preds = %4445, %4472
  store float %4437, ptr %4318, align 4, !tbaa !163
  %4481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4482:                                             ; preds = %4458, %4464
  %4483 = phi ptr [ %4471, %4464 ], [ %4451, %4458 ]
  %4484 = phi i32 [ %4470, %4464 ], [ 1, %4458 ]
  %4485 = load i32, ptr %4483, align 4, !tbaa !6
  %4486 = add nsw i32 %4485, %4484
  store i32 %4486, ptr %4483, align 4, !tbaa !6
  br label %4487

4487:                                             ; preds = %4474, %4482, %4447, %4423
  %4488 = icmp eq i32 %4439, %5
  br i1 %4488, label %5537, label %4349, !llvm.loop !1449

4489:                                             ; preds = %4332, %4629
  %4490 = phi float [ 0.000000e+00, %4332 ], [ %4577, %4629 ]
  %4491 = phi i32 [ 0, %4332 ], [ %4578, %4629 ]
  %4492 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4333, label %4493, label %4562

4493:                                             ; preds = %4489, %4552
  %4494 = phi i32 [ %4561, %4552 ], [ 0, %4489 ]
  %4495 = phi i64 [ %4503, %4552 ], [ %4337, %4489 ]
  %4496 = phi i64 [ %4560, %4552 ], [ %4336, %4489 ]
  %4497 = phi i32 [ %4558, %4552 ], [ %4492, %4489 ]
  %4498 = sub i32 %4335, %4494
  %4499 = tail call i32 @llvm.smin.i32(i32 %4498, i32 0)
  %4500 = sub i32 %4498, %4499
  %4501 = zext i32 %4500 to i64
  %4502 = add nuw nsw i64 %4501, 1
  %4503 = add nsw i64 %4495, -1
  %4504 = icmp ult i32 %4500, 31
  br i1 %4504, label %4540, label %4505

4505:                                             ; preds = %4493
  %4506 = and i64 %4502, 8589934560
  %4507 = sub i64 %4496, %4506
  br label %4508

4508:                                             ; preds = %4508, %4505
  %4509 = phi i64 [ 0, %4505 ], [ %4532, %4508 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4528, %4508 ]
  %4511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4529, %4508 ]
  %4512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4530, %4508 ]
  %4513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4505 ], [ %4531, %4508 ]
  %4514 = sub i64 %4496, %4509
  %4515 = getelementptr inbounds i32, ptr %11, i64 %4514
  %4516 = getelementptr inbounds i32, ptr %4515, i64 -7
  %4517 = load <8 x i32>, ptr %4516, align 4, !tbaa !6
  %4518 = shufflevector <8 x i32> %4517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4519 = getelementptr inbounds i32, ptr %4515, i64 -15
  %4520 = load <8 x i32>, ptr %4519, align 4, !tbaa !6
  %4521 = shufflevector <8 x i32> %4520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4522 = getelementptr inbounds i32, ptr %4515, i64 -23
  %4523 = load <8 x i32>, ptr %4522, align 4, !tbaa !6
  %4524 = shufflevector <8 x i32> %4523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4525 = getelementptr inbounds i32, ptr %4515, i64 -31
  %4526 = load <8 x i32>, ptr %4525, align 4, !tbaa !6
  %4527 = shufflevector <8 x i32> %4526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4528 = mul <8 x i32> %4518, %4510
  %4529 = mul <8 x i32> %4521, %4511
  %4530 = mul <8 x i32> %4524, %4512
  %4531 = mul <8 x i32> %4527, %4513
  %4532 = add nuw i64 %4509, 32
  %4533 = icmp eq i64 %4532, %4506
  br i1 %4533, label %4534, label %4508, !llvm.loop !1450

4534:                                             ; preds = %4508
  %4535 = mul <8 x i32> %4529, %4528
  %4536 = mul <8 x i32> %4530, %4535
  %4537 = mul <8 x i32> %4531, %4536
  %4538 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4537)
  %4539 = icmp eq i64 %4502, %4506
  br i1 %4539, label %4552, label %4540

4540:                                             ; preds = %4493, %4534
  %4541 = phi i64 [ %4496, %4493 ], [ %4507, %4534 ]
  %4542 = phi i32 [ 1, %4493 ], [ %4538, %4534 ]
  br label %4543

4543:                                             ; preds = %4540, %4543
  %4544 = phi i64 [ %4549, %4543 ], [ %4541, %4540 ]
  %4545 = phi i32 [ %4548, %4543 ], [ %4542, %4540 ]
  %4546 = getelementptr inbounds i32, ptr %11, i64 %4544
  %4547 = load i32, ptr %4546, align 4, !tbaa !6
  %4548 = mul nsw i32 %4547, %4545
  %4549 = add nsw i64 %4544, -1
  %4550 = trunc i64 %4544 to i32
  %4551 = icmp sgt i32 %4550, 0
  br i1 %4551, label %4543, label %4552, !llvm.loop !1451

4552:                                             ; preds = %4543, %4534
  %4553 = phi i32 [ %4538, %4534 ], [ %4548, %4543 ]
  %4554 = and i64 %4503, 4294967295
  %4555 = getelementptr inbounds i32, ptr %6, i64 %4554
  %4556 = load i32, ptr %4555, align 4, !tbaa !6
  %4557 = mul nsw i32 %4556, %4553
  %4558 = add nsw i32 %4557, %4497
  %4559 = icmp sgt i64 %4495, 2
  %4560 = add nsw i64 %4496, -1
  %4561 = add i32 %4494, 1
  br i1 %4559, label %4493, label %4562, !llvm.loop !1452

4562:                                             ; preds = %4552, %4489
  %4563 = phi i32 [ %4492, %4489 ], [ %4558, %4552 ]
  %4564 = icmp slt i32 %4563, %5
  br i1 %4564, label %4567, label %4565

4565:                                             ; preds = %4562
  %4566 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4567:                                             ; preds = %4562
  %4568 = sext i32 %4563 to i64
  %4569 = getelementptr inbounds double, ptr %4316, i64 %4568
  %4570 = load double, ptr %4569, align 8, !tbaa !19
  %4571 = fptrunc double %4570 to float
  %4572 = fpext float %4490 to double
  %4573 = fpext float %4571 to double
  %4574 = fmul fast double %4573, %4573
  %4575 = fmul fast double %4574, %4574
  %4576 = fadd fast double %4575, %4572
  %4577 = fptrunc double %4576 to float
  store float %4577, ptr %4318, align 4, !tbaa !163
  %4578 = add nuw nsw i32 %4491, 1
  br i1 %4334, label %4579, label %4629

4579:                                             ; preds = %4567
  %4580 = load i32, ptr %4, align 4, !tbaa !6
  %4581 = load i32, ptr %12, align 4, !tbaa !6
  %4582 = add nsw i32 %4581, -1
  %4583 = icmp slt i32 %4580, %4582
  br i1 %4583, label %4606, label %4584

4584:                                             ; preds = %4579
  %4585 = icmp eq i32 %4580, %4582
  br i1 %4585, label %4586, label %4622

4586:                                             ; preds = %4584
  store i32 0, ptr %4, align 4, !tbaa !6
  %4587 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4587, ptr %6, align 4, !tbaa !6
  br i1 %4339, label %4629, label %4588

4588:                                             ; preds = %4586, %4616
  %4589 = phi i64 [ %4620, %4616 ], [ 1, %4586 ]
  %4590 = getelementptr inbounds i32, ptr %4, i64 %4589
  %4591 = load i32, ptr %4590, align 4, !tbaa !6
  %4592 = getelementptr inbounds i32, ptr %12, i64 %4589
  %4593 = load i32, ptr %4592, align 4, !tbaa !6
  %4594 = add nsw i32 %4593, -1
  %4595 = icmp slt i32 %4591, %4594
  br i1 %4595, label %4596, label %4614

4596:                                             ; preds = %4588
  br i1 %4583, label %4606, label %4597

4597:                                             ; preds = %4596
  %4598 = shl i64 %4589, 32
  %4599 = add i64 %4598, -4294967296
  %4600 = ashr exact i64 %4599, 32
  %4601 = getelementptr inbounds i32, ptr %7, i64 %4600
  %4602 = load i32, ptr %4601, align 4, !tbaa !6
  %4603 = getelementptr inbounds i32, ptr %6, i64 %4589
  %4604 = load i32, ptr %4603, align 4, !tbaa !6
  %4605 = add nsw i32 %4604, %4602
  store i32 %4605, ptr %4603, align 4, !tbaa !6
  br label %4624

4606:                                             ; preds = %4579, %4596
  %4607 = phi i32 [ %4591, %4596 ], [ %4580, %4579 ]
  %4608 = phi ptr [ %4590, %4596 ], [ %4, %4579 ]
  %4609 = phi i64 [ %4589, %4596 ], [ 0, %4579 ]
  %4610 = add nsw i32 %4607, 1
  store i32 %4610, ptr %4608, align 4, !tbaa !6
  %4611 = getelementptr inbounds i32, ptr %7, i64 %4609
  %4612 = load i32, ptr %4611, align 4, !tbaa !6
  %4613 = getelementptr inbounds i32, ptr %6, i64 %4609
  br label %4624

4614:                                             ; preds = %4588
  %4615 = icmp eq i32 %4591, %4594
  br i1 %4615, label %4616, label %4622

4616:                                             ; preds = %4614
  store i32 0, ptr %4590, align 4, !tbaa !6
  %4617 = getelementptr inbounds i32, ptr %8, i64 %4589
  %4618 = load i32, ptr %4617, align 4, !tbaa !6
  %4619 = getelementptr inbounds i32, ptr %6, i64 %4589
  store i32 %4618, ptr %4619, align 4, !tbaa !6
  %4620 = add nuw nsw i64 %4589, 1
  %4621 = icmp eq i64 %4620, %4337
  br i1 %4621, label %4629, label %4588, !llvm.loop !1453

4622:                                             ; preds = %4584, %4614
  %4623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4624:                                             ; preds = %4597, %4606
  %4625 = phi ptr [ %4613, %4606 ], [ %4590, %4597 ]
  %4626 = phi i32 [ %4612, %4606 ], [ 1, %4597 ]
  %4627 = load i32, ptr %4625, align 4, !tbaa !6
  %4628 = add nsw i32 %4627, %4626
  store i32 %4628, ptr %4625, align 4, !tbaa !6
  br label %4629

4629:                                             ; preds = %4616, %4624, %4586, %4567
  %4630 = icmp eq i32 %4578, %5
  br i1 %4630, label %5539, label %4489, !llvm.loop !1454

4631:                                             ; preds = %4325
  %4632 = getelementptr inbounds i32, ptr %3, i64 %19
  %4633 = load i32, ptr %4632, align 4, !tbaa !6
  %4634 = icmp eq i32 %4633, 0
  %4635 = icmp sgt i32 %5, 0
  br i1 %4634, label %4645, label %4636

4636:                                             ; preds = %4631
  br i1 %4635, label %4637, label %5539

4637:                                             ; preds = %4636
  %4638 = icmp sgt i32 %13, 1
  %4639 = icmp sgt i32 %13, 0
  %4640 = add i32 %13, -2
  %4641 = zext i32 %4640 to i64
  %4642 = zext i32 %13 to i64
  %4643 = add nuw i32 %5, 1
  %4644 = icmp eq i32 %13, 1
  br label %4788

4645:                                             ; preds = %4631
  br i1 %4635, label %4646, label %5539

4646:                                             ; preds = %4645
  %4647 = icmp sgt i32 %13, 1
  %4648 = icmp sgt i32 %13, 0
  %4649 = add i32 %13, -2
  %4650 = zext i32 %4649 to i64
  %4651 = zext i32 %13 to i64
  %4652 = add nuw i32 %5, 1
  %4653 = icmp eq i32 %13, 1
  br label %4654

4654:                                             ; preds = %4646, %4786
  %4655 = phi float [ 0.000000e+00, %4646 ], [ %4736, %4786 ]
  %4656 = phi i32 [ 0, %4646 ], [ %4738, %4786 ]
  %4657 = phi double [ 0.000000e+00, %4646 ], [ %4737, %4786 ]
  %4658 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4647, label %4659, label %4728

4659:                                             ; preds = %4654, %4718
  %4660 = phi i32 [ %4727, %4718 ], [ 0, %4654 ]
  %4661 = phi i64 [ %4669, %4718 ], [ %4651, %4654 ]
  %4662 = phi i64 [ %4726, %4718 ], [ %4650, %4654 ]
  %4663 = phi i32 [ %4724, %4718 ], [ %4658, %4654 ]
  %4664 = sub i32 %4649, %4660
  %4665 = tail call i32 @llvm.smin.i32(i32 %4664, i32 0)
  %4666 = sub i32 %4664, %4665
  %4667 = zext i32 %4666 to i64
  %4668 = add nuw nsw i64 %4667, 1
  %4669 = add nsw i64 %4661, -1
  %4670 = icmp ult i32 %4666, 31
  br i1 %4670, label %4706, label %4671

4671:                                             ; preds = %4659
  %4672 = and i64 %4668, 8589934560
  %4673 = sub i64 %4662, %4672
  br label %4674

4674:                                             ; preds = %4674, %4671
  %4675 = phi i64 [ 0, %4671 ], [ %4698, %4674 ]
  %4676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4694, %4674 ]
  %4677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4695, %4674 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4696, %4674 ]
  %4679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4671 ], [ %4697, %4674 ]
  %4680 = sub i64 %4662, %4675
  %4681 = getelementptr inbounds i32, ptr %9, i64 %4680
  %4682 = getelementptr inbounds i32, ptr %4681, i64 -7
  %4683 = load <8 x i32>, ptr %4682, align 4, !tbaa !6
  %4684 = shufflevector <8 x i32> %4683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4685 = getelementptr inbounds i32, ptr %4681, i64 -15
  %4686 = load <8 x i32>, ptr %4685, align 4, !tbaa !6
  %4687 = shufflevector <8 x i32> %4686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4688 = getelementptr inbounds i32, ptr %4681, i64 -23
  %4689 = load <8 x i32>, ptr %4688, align 4, !tbaa !6
  %4690 = shufflevector <8 x i32> %4689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4691 = getelementptr inbounds i32, ptr %4681, i64 -31
  %4692 = load <8 x i32>, ptr %4691, align 4, !tbaa !6
  %4693 = shufflevector <8 x i32> %4692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4694 = mul <8 x i32> %4684, %4676
  %4695 = mul <8 x i32> %4687, %4677
  %4696 = mul <8 x i32> %4690, %4678
  %4697 = mul <8 x i32> %4693, %4679
  %4698 = add nuw i64 %4675, 32
  %4699 = icmp eq i64 %4698, %4672
  br i1 %4699, label %4700, label %4674, !llvm.loop !1455

4700:                                             ; preds = %4674
  %4701 = mul <8 x i32> %4695, %4694
  %4702 = mul <8 x i32> %4696, %4701
  %4703 = mul <8 x i32> %4697, %4702
  %4704 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4703)
  %4705 = icmp eq i64 %4668, %4672
  br i1 %4705, label %4718, label %4706

4706:                                             ; preds = %4659, %4700
  %4707 = phi i64 [ %4662, %4659 ], [ %4673, %4700 ]
  %4708 = phi i32 [ 1, %4659 ], [ %4704, %4700 ]
  br label %4709

4709:                                             ; preds = %4706, %4709
  %4710 = phi i64 [ %4715, %4709 ], [ %4707, %4706 ]
  %4711 = phi i32 [ %4714, %4709 ], [ %4708, %4706 ]
  %4712 = getelementptr inbounds i32, ptr %9, i64 %4710
  %4713 = load i32, ptr %4712, align 4, !tbaa !6
  %4714 = mul nsw i32 %4713, %4711
  %4715 = add nsw i64 %4710, -1
  %4716 = trunc i64 %4710 to i32
  %4717 = icmp sgt i32 %4716, 0
  br i1 %4717, label %4709, label %4718, !llvm.loop !1456

4718:                                             ; preds = %4709, %4700
  %4719 = phi i32 [ %4704, %4700 ], [ %4714, %4709 ]
  %4720 = and i64 %4669, 4294967295
  %4721 = getelementptr inbounds i32, ptr %6, i64 %4720
  %4722 = load i32, ptr %4721, align 4, !tbaa !6
  %4723 = mul nsw i32 %4722, %4719
  %4724 = add nsw i32 %4723, %4663
  %4725 = icmp sgt i64 %4661, 2
  %4726 = add nsw i64 %4662, -1
  %4727 = add i32 %4660, 1
  br i1 %4725, label %4659, label %4728, !llvm.loop !1457

4728:                                             ; preds = %4718, %4654
  %4729 = phi i32 [ %4658, %4654 ], [ %4724, %4718 ]
  %4730 = sext i32 %4729 to i64
  %4731 = getelementptr inbounds double, ptr %4316, i64 %4730
  %4732 = load double, ptr %4731, align 8, !tbaa !19
  %4733 = fptrunc double %4732 to float
  %4734 = fmul fast float %4733, %4733
  %4735 = fmul fast float %4734, %4734
  %4736 = fadd fast float %4735, %4655
  %4737 = fadd fast double %4657, 1.000000e+00
  %4738 = add nuw nsw i32 %4656, 1
  br i1 %4648, label %4739, label %4786

4739:                                             ; preds = %4728
  %4740 = load i32, ptr %4, align 4, !tbaa !6
  %4741 = load i32, ptr %12, align 4, !tbaa !6
  %4742 = add nsw i32 %4741, -1
  %4743 = icmp slt i32 %4740, %4742
  br i1 %4743, label %4763, label %4744

4744:                                             ; preds = %4739
  %4745 = icmp eq i32 %4740, %4742
  br i1 %4745, label %4746, label %4779

4746:                                             ; preds = %4744
  store i32 0, ptr %4, align 4, !tbaa !6
  %4747 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4747, ptr %6, align 4, !tbaa !6
  br i1 %4653, label %4786, label %4748

4748:                                             ; preds = %4746, %4773
  %4749 = phi i64 [ %4777, %4773 ], [ 1, %4746 ]
  %4750 = getelementptr inbounds i32, ptr %4, i64 %4749
  %4751 = load i32, ptr %4750, align 4, !tbaa !6
  %4752 = getelementptr inbounds i32, ptr %12, i64 %4749
  %4753 = load i32, ptr %4752, align 4, !tbaa !6
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4751, %4754
  br i1 %4755, label %4756, label %4771

4756:                                             ; preds = %4748
  br i1 %4743, label %4763, label %4757

4757:                                             ; preds = %4756
  %4758 = getelementptr inbounds i32, ptr %7, i64 %4749
  %4759 = load i32, ptr %4758, align 4, !tbaa !6
  %4760 = getelementptr inbounds i32, ptr %6, i64 %4749
  %4761 = load i32, ptr %4760, align 4, !tbaa !6
  %4762 = add nsw i32 %4761, %4759
  store i32 %4762, ptr %4760, align 4, !tbaa !6
  br label %4781

4763:                                             ; preds = %4739, %4756
  %4764 = phi i32 [ %4751, %4756 ], [ %4740, %4739 ]
  %4765 = phi ptr [ %4750, %4756 ], [ %4, %4739 ]
  %4766 = phi i64 [ %4749, %4756 ], [ 0, %4739 ]
  %4767 = add nsw i32 %4764, 1
  store i32 %4767, ptr %4765, align 4, !tbaa !6
  %4768 = getelementptr inbounds i32, ptr %7, i64 %4766
  %4769 = load i32, ptr %4768, align 4, !tbaa !6
  %4770 = getelementptr inbounds i32, ptr %6, i64 %4766
  br label %4781

4771:                                             ; preds = %4748
  %4772 = icmp eq i32 %4751, %4754
  br i1 %4772, label %4773, label %4779

4773:                                             ; preds = %4771
  store i32 0, ptr %4750, align 4, !tbaa !6
  %4774 = getelementptr inbounds i32, ptr %8, i64 %4749
  %4775 = load i32, ptr %4774, align 4, !tbaa !6
  %4776 = getelementptr inbounds i32, ptr %6, i64 %4749
  store i32 %4775, ptr %4776, align 4, !tbaa !6
  %4777 = add nuw nsw i64 %4749, 1
  %4778 = icmp eq i64 %4777, %4651
  br i1 %4778, label %4786, label %4748, !llvm.loop !1458

4779:                                             ; preds = %4744, %4771
  store float %4736, ptr %4318, align 4, !tbaa !163
  %4780 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4781:                                             ; preds = %4757, %4763
  %4782 = phi ptr [ %4770, %4763 ], [ %4750, %4757 ]
  %4783 = phi i32 [ %4769, %4763 ], [ 1, %4757 ]
  %4784 = load i32, ptr %4782, align 4, !tbaa !6
  %4785 = add nsw i32 %4784, %4783
  store i32 %4785, ptr %4782, align 4, !tbaa !6
  br label %4786

4786:                                             ; preds = %4773, %4781, %4746, %4728
  %4787 = icmp eq i32 %4738, %5
  br i1 %4787, label %5538, label %4654, !llvm.loop !1459

4788:                                             ; preds = %4637, %4925
  %4789 = phi float [ 0.000000e+00, %4637 ], [ %4873, %4925 ]
  %4790 = phi i32 [ 0, %4637 ], [ %4874, %4925 ]
  %4791 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4638, label %4792, label %4861

4792:                                             ; preds = %4788, %4851
  %4793 = phi i32 [ %4860, %4851 ], [ 0, %4788 ]
  %4794 = phi i64 [ %4802, %4851 ], [ %4642, %4788 ]
  %4795 = phi i64 [ %4859, %4851 ], [ %4641, %4788 ]
  %4796 = phi i32 [ %4857, %4851 ], [ %4791, %4788 ]
  %4797 = sub i32 %4640, %4793
  %4798 = tail call i32 @llvm.smin.i32(i32 %4797, i32 0)
  %4799 = sub i32 %4797, %4798
  %4800 = zext i32 %4799 to i64
  %4801 = add nuw nsw i64 %4800, 1
  %4802 = add nsw i64 %4794, -1
  %4803 = icmp ult i32 %4799, 31
  br i1 %4803, label %4839, label %4804

4804:                                             ; preds = %4792
  %4805 = and i64 %4801, 8589934560
  %4806 = sub i64 %4795, %4805
  br label %4807

4807:                                             ; preds = %4807, %4804
  %4808 = phi i64 [ 0, %4804 ], [ %4831, %4807 ]
  %4809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4827, %4807 ]
  %4810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4828, %4807 ]
  %4811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4829, %4807 ]
  %4812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4804 ], [ %4830, %4807 ]
  %4813 = sub i64 %4795, %4808
  %4814 = getelementptr inbounds i32, ptr %11, i64 %4813
  %4815 = getelementptr inbounds i32, ptr %4814, i64 -7
  %4816 = load <8 x i32>, ptr %4815, align 4, !tbaa !6
  %4817 = shufflevector <8 x i32> %4816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4818 = getelementptr inbounds i32, ptr %4814, i64 -15
  %4819 = load <8 x i32>, ptr %4818, align 4, !tbaa !6
  %4820 = shufflevector <8 x i32> %4819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4821 = getelementptr inbounds i32, ptr %4814, i64 -23
  %4822 = load <8 x i32>, ptr %4821, align 4, !tbaa !6
  %4823 = shufflevector <8 x i32> %4822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4824 = getelementptr inbounds i32, ptr %4814, i64 -31
  %4825 = load <8 x i32>, ptr %4824, align 4, !tbaa !6
  %4826 = shufflevector <8 x i32> %4825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4827 = mul <8 x i32> %4817, %4809
  %4828 = mul <8 x i32> %4820, %4810
  %4829 = mul <8 x i32> %4823, %4811
  %4830 = mul <8 x i32> %4826, %4812
  %4831 = add nuw i64 %4808, 32
  %4832 = icmp eq i64 %4831, %4805
  br i1 %4832, label %4833, label %4807, !llvm.loop !1460

4833:                                             ; preds = %4807
  %4834 = mul <8 x i32> %4828, %4827
  %4835 = mul <8 x i32> %4829, %4834
  %4836 = mul <8 x i32> %4830, %4835
  %4837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4836)
  %4838 = icmp eq i64 %4801, %4805
  br i1 %4838, label %4851, label %4839

4839:                                             ; preds = %4792, %4833
  %4840 = phi i64 [ %4795, %4792 ], [ %4806, %4833 ]
  %4841 = phi i32 [ 1, %4792 ], [ %4837, %4833 ]
  br label %4842

4842:                                             ; preds = %4839, %4842
  %4843 = phi i64 [ %4848, %4842 ], [ %4840, %4839 ]
  %4844 = phi i32 [ %4847, %4842 ], [ %4841, %4839 ]
  %4845 = getelementptr inbounds i32, ptr %11, i64 %4843
  %4846 = load i32, ptr %4845, align 4, !tbaa !6
  %4847 = mul nsw i32 %4846, %4844
  %4848 = add nsw i64 %4843, -1
  %4849 = trunc i64 %4843 to i32
  %4850 = icmp sgt i32 %4849, 0
  br i1 %4850, label %4842, label %4851, !llvm.loop !1461

4851:                                             ; preds = %4842, %4833
  %4852 = phi i32 [ %4837, %4833 ], [ %4847, %4842 ]
  %4853 = and i64 %4802, 4294967295
  %4854 = getelementptr inbounds i32, ptr %6, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !6
  %4856 = mul nsw i32 %4855, %4852
  %4857 = add nsw i32 %4856, %4796
  %4858 = icmp sgt i64 %4794, 2
  %4859 = add nsw i64 %4795, -1
  %4860 = add i32 %4793, 1
  br i1 %4858, label %4792, label %4861, !llvm.loop !1462

4861:                                             ; preds = %4851, %4788
  %4862 = phi i32 [ %4791, %4788 ], [ %4857, %4851 ]
  %4863 = icmp slt i32 %4862, %5
  br i1 %4863, label %4866, label %4864

4864:                                             ; preds = %4861
  %4865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

4866:                                             ; preds = %4861
  %4867 = sext i32 %4862 to i64
  %4868 = getelementptr inbounds double, ptr %4316, i64 %4867
  %4869 = load double, ptr %4868, align 8, !tbaa !19
  %4870 = fptrunc double %4869 to float
  %4871 = fmul fast float %4870, %4870
  %4872 = fmul fast float %4871, %4871
  %4873 = fadd fast float %4872, %4789
  store float %4873, ptr %4318, align 4, !tbaa !163
  %4874 = add nuw nsw i32 %4790, 1
  br i1 %4639, label %4875, label %4925

4875:                                             ; preds = %4866
  %4876 = load i32, ptr %4, align 4, !tbaa !6
  %4877 = load i32, ptr %12, align 4, !tbaa !6
  %4878 = add nsw i32 %4877, -1
  %4879 = icmp slt i32 %4876, %4878
  br i1 %4879, label %4902, label %4880

4880:                                             ; preds = %4875
  %4881 = icmp eq i32 %4876, %4878
  br i1 %4881, label %4882, label %4918

4882:                                             ; preds = %4880
  store i32 0, ptr %4, align 4, !tbaa !6
  %4883 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4883, ptr %6, align 4, !tbaa !6
  br i1 %4644, label %4925, label %4884

4884:                                             ; preds = %4882, %4912
  %4885 = phi i64 [ %4916, %4912 ], [ 1, %4882 ]
  %4886 = getelementptr inbounds i32, ptr %4, i64 %4885
  %4887 = load i32, ptr %4886, align 4, !tbaa !6
  %4888 = getelementptr inbounds i32, ptr %12, i64 %4885
  %4889 = load i32, ptr %4888, align 4, !tbaa !6
  %4890 = add nsw i32 %4889, -1
  %4891 = icmp slt i32 %4887, %4890
  br i1 %4891, label %4892, label %4910

4892:                                             ; preds = %4884
  br i1 %4879, label %4902, label %4893

4893:                                             ; preds = %4892
  %4894 = shl i64 %4885, 32
  %4895 = add i64 %4894, -4294967296
  %4896 = ashr exact i64 %4895, 32
  %4897 = getelementptr inbounds i32, ptr %7, i64 %4896
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4885
  %4900 = load i32, ptr %4899, align 4, !tbaa !6
  %4901 = add nsw i32 %4900, %4898
  store i32 %4901, ptr %4899, align 4, !tbaa !6
  br label %4920

4902:                                             ; preds = %4875, %4892
  %4903 = phi i32 [ %4887, %4892 ], [ %4876, %4875 ]
  %4904 = phi ptr [ %4886, %4892 ], [ %4, %4875 ]
  %4905 = phi i64 [ %4885, %4892 ], [ 0, %4875 ]
  %4906 = add nsw i32 %4903, 1
  store i32 %4906, ptr %4904, align 4, !tbaa !6
  %4907 = getelementptr inbounds i32, ptr %7, i64 %4905
  %4908 = load i32, ptr %4907, align 4, !tbaa !6
  %4909 = getelementptr inbounds i32, ptr %6, i64 %4905
  br label %4920

4910:                                             ; preds = %4884
  %4911 = icmp eq i32 %4887, %4890
  br i1 %4911, label %4912, label %4918

4912:                                             ; preds = %4910
  store i32 0, ptr %4886, align 4, !tbaa !6
  %4913 = getelementptr inbounds i32, ptr %8, i64 %4885
  %4914 = load i32, ptr %4913, align 4, !tbaa !6
  %4915 = getelementptr inbounds i32, ptr %6, i64 %4885
  store i32 %4914, ptr %4915, align 4, !tbaa !6
  %4916 = add nuw nsw i64 %4885, 1
  %4917 = icmp eq i64 %4916, %4642
  br i1 %4917, label %4925, label %4884, !llvm.loop !1463

4918:                                             ; preds = %4880, %4910
  %4919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

4920:                                             ; preds = %4893, %4902
  %4921 = phi ptr [ %4909, %4902 ], [ %4886, %4893 ]
  %4922 = phi i32 [ %4908, %4902 ], [ 1, %4893 ]
  %4923 = load i32, ptr %4921, align 4, !tbaa !6
  %4924 = add nsw i32 %4923, %4922
  store i32 %4924, ptr %4921, align 4, !tbaa !6
  br label %4925

4925:                                             ; preds = %4912, %4920, %4882, %4866
  %4926 = icmp eq i32 %4874, %5
  br i1 %4926, label %5539, label %4788, !llvm.loop !1464

4927:                                             ; preds = %4325
  %4928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

4929:                                             ; preds = %18
  %4930 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4931 = load ptr, ptr %4930, align 8, !tbaa !10
  %4932 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4933 = load ptr, ptr %4932, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4933, align 8, !tbaa !19
  %4934 = icmp eq i32 %13, 0
  br i1 %4934, label %4935, label %4939

4935:                                             ; preds = %4929
  %4936 = load double, ptr %4931, align 8, !tbaa !19
  %4937 = fmul fast double %4936, %4936
  %4938 = fmul fast double %4937, %4937
  store double %4938, ptr %4933, align 8, !tbaa !19
  br label %5539

4939:                                             ; preds = %4929
  switch i32 %1, label %5531 [
    i32 1, label %4940
    i32 0, label %5237
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !6
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5539

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5099

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5539

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5097
  %4964 = phi double [ 0.000000e+00, %4955 ], [ %5047, %5097 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5049, %5097 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5048, %5097 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !6
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !6
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !6
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !6
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !1465

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !6
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !1466

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !6
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !1467

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !19
  %5042 = getelementptr inbounds double, ptr %4931, i64 %5039
  %5043 = load double, ptr %5042, align 8, !tbaa !19
  %5044 = fmul fast double %5043, %5041
  %5045 = fmul fast double %5044, %5044
  %5046 = fmul fast double %5045, %5045
  %5047 = fadd fast double %5046, %4964
  store double %5047, ptr %4933, align 8, !tbaa !19
  %5048 = fadd fast double %5041, %4966
  %5049 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5050, label %5097

5050:                                             ; preds = %5037
  %5051 = load i32, ptr %4, align 4, !tbaa !6
  %5052 = load i32, ptr %12, align 4, !tbaa !6
  %5053 = add nsw i32 %5052, -1
  %5054 = icmp slt i32 %5051, %5053
  br i1 %5054, label %5074, label %5055

5055:                                             ; preds = %5050
  %5056 = icmp eq i32 %5051, %5053
  br i1 %5056, label %5057, label %5090

5057:                                             ; preds = %5055
  store i32 0, ptr %4, align 4, !tbaa !6
  %5058 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5058, ptr %6, align 4, !tbaa !6
  br i1 %4962, label %5097, label %5059

5059:                                             ; preds = %5057, %5084
  %5060 = phi i64 [ %5088, %5084 ], [ 1, %5057 ]
  %5061 = getelementptr inbounds i32, ptr %4, i64 %5060
  %5062 = load i32, ptr %5061, align 4, !tbaa !6
  %5063 = getelementptr inbounds i32, ptr %12, i64 %5060
  %5064 = load i32, ptr %5063, align 4, !tbaa !6
  %5065 = add nsw i32 %5064, -1
  %5066 = icmp slt i32 %5062, %5065
  br i1 %5066, label %5067, label %5082

5067:                                             ; preds = %5059
  br i1 %5054, label %5074, label %5068

5068:                                             ; preds = %5067
  %5069 = getelementptr inbounds i32, ptr %7, i64 %5060
  %5070 = load i32, ptr %5069, align 4, !tbaa !6
  %5071 = getelementptr inbounds i32, ptr %6, i64 %5060
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = add nsw i32 %5072, %5070
  store i32 %5073, ptr %5071, align 4, !tbaa !6
  br label %5092

5074:                                             ; preds = %5050, %5067
  %5075 = phi i32 [ %5062, %5067 ], [ %5051, %5050 ]
  %5076 = phi ptr [ %5061, %5067 ], [ %4, %5050 ]
  %5077 = phi i64 [ %5060, %5067 ], [ 0, %5050 ]
  %5078 = add nsw i32 %5075, 1
  store i32 %5078, ptr %5076, align 4, !tbaa !6
  %5079 = getelementptr inbounds i32, ptr %7, i64 %5077
  %5080 = load i32, ptr %5079, align 4, !tbaa !6
  %5081 = getelementptr inbounds i32, ptr %6, i64 %5077
  br label %5092

5082:                                             ; preds = %5059
  %5083 = icmp eq i32 %5062, %5065
  br i1 %5083, label %5084, label %5090

5084:                                             ; preds = %5082
  store i32 0, ptr %5061, align 4, !tbaa !6
  %5085 = getelementptr inbounds i32, ptr %8, i64 %5060
  %5086 = load i32, ptr %5085, align 4, !tbaa !6
  %5087 = getelementptr inbounds i32, ptr %6, i64 %5060
  store i32 %5086, ptr %5087, align 4, !tbaa !6
  %5088 = add nuw nsw i64 %5060, 1
  %5089 = icmp eq i64 %5088, %4960
  br i1 %5089, label %5097, label %5059, !llvm.loop !1468

5090:                                             ; preds = %5055, %5082
  %5091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5092:                                             ; preds = %5068, %5074
  %5093 = phi ptr [ %5081, %5074 ], [ %5061, %5068 ]
  %5094 = phi i32 [ %5080, %5074 ], [ 1, %5068 ]
  %5095 = load i32, ptr %5093, align 4, !tbaa !6
  %5096 = add nsw i32 %5095, %5094
  store i32 %5096, ptr %5093, align 4, !tbaa !6
  br label %5097

5097:                                             ; preds = %5084, %5092, %5057, %5037
  %5098 = icmp eq i32 %5049, %5
  br i1 %5098, label %5539, label %4963, !llvm.loop !1469

5099:                                             ; preds = %4946, %5235
  %5100 = phi double [ 0.000000e+00, %4946 ], [ %5183, %5235 ]
  %5101 = phi i32 [ 0, %4946 ], [ %5184, %5235 ]
  %5102 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5103, label %5172

5103:                                             ; preds = %5099, %5162
  %5104 = phi i32 [ %5171, %5162 ], [ 0, %5099 ]
  %5105 = phi i64 [ %5113, %5162 ], [ %4951, %5099 ]
  %5106 = phi i64 [ %5170, %5162 ], [ %4950, %5099 ]
  %5107 = phi i32 [ %5168, %5162 ], [ %5102, %5099 ]
  %5108 = sub i32 %4949, %5104
  %5109 = tail call i32 @llvm.smin.i32(i32 %5108, i32 0)
  %5110 = sub i32 %5108, %5109
  %5111 = zext i32 %5110 to i64
  %5112 = add nuw nsw i64 %5111, 1
  %5113 = add nsw i64 %5105, -1
  %5114 = icmp ult i32 %5110, 31
  br i1 %5114, label %5150, label %5115

5115:                                             ; preds = %5103
  %5116 = and i64 %5112, 8589934560
  %5117 = sub i64 %5106, %5116
  br label %5118

5118:                                             ; preds = %5118, %5115
  %5119 = phi i64 [ 0, %5115 ], [ %5142, %5118 ]
  %5120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5138, %5118 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5139, %5118 ]
  %5122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5140, %5118 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5115 ], [ %5141, %5118 ]
  %5124 = sub i64 %5106, %5119
  %5125 = getelementptr inbounds i32, ptr %11, i64 %5124
  %5126 = getelementptr inbounds i32, ptr %5125, i64 -7
  %5127 = load <8 x i32>, ptr %5126, align 4, !tbaa !6
  %5128 = shufflevector <8 x i32> %5127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5129 = getelementptr inbounds i32, ptr %5125, i64 -15
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !6
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = getelementptr inbounds i32, ptr %5125, i64 -23
  %5133 = load <8 x i32>, ptr %5132, align 4, !tbaa !6
  %5134 = shufflevector <8 x i32> %5133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5135 = getelementptr inbounds i32, ptr %5125, i64 -31
  %5136 = load <8 x i32>, ptr %5135, align 4, !tbaa !6
  %5137 = shufflevector <8 x i32> %5136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5138 = mul <8 x i32> %5128, %5120
  %5139 = mul <8 x i32> %5131, %5121
  %5140 = mul <8 x i32> %5134, %5122
  %5141 = mul <8 x i32> %5137, %5123
  %5142 = add nuw i64 %5119, 32
  %5143 = icmp eq i64 %5142, %5116
  br i1 %5143, label %5144, label %5118, !llvm.loop !1470

5144:                                             ; preds = %5118
  %5145 = mul <8 x i32> %5139, %5138
  %5146 = mul <8 x i32> %5140, %5145
  %5147 = mul <8 x i32> %5141, %5146
  %5148 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5147)
  %5149 = icmp eq i64 %5112, %5116
  br i1 %5149, label %5162, label %5150

5150:                                             ; preds = %5103, %5144
  %5151 = phi i64 [ %5106, %5103 ], [ %5117, %5144 ]
  %5152 = phi i32 [ 1, %5103 ], [ %5148, %5144 ]
  br label %5153

5153:                                             ; preds = %5150, %5153
  %5154 = phi i64 [ %5159, %5153 ], [ %5151, %5150 ]
  %5155 = phi i32 [ %5158, %5153 ], [ %5152, %5150 ]
  %5156 = getelementptr inbounds i32, ptr %11, i64 %5154
  %5157 = load i32, ptr %5156, align 4, !tbaa !6
  %5158 = mul nsw i32 %5157, %5155
  %5159 = add nsw i64 %5154, -1
  %5160 = trunc i64 %5154 to i32
  %5161 = icmp sgt i32 %5160, 0
  br i1 %5161, label %5153, label %5162, !llvm.loop !1471

5162:                                             ; preds = %5153, %5144
  %5163 = phi i32 [ %5148, %5144 ], [ %5158, %5153 ]
  %5164 = and i64 %5113, 4294967295
  %5165 = getelementptr inbounds i32, ptr %6, i64 %5164
  %5166 = load i32, ptr %5165, align 4, !tbaa !6
  %5167 = mul nsw i32 %5166, %5163
  %5168 = add nsw i32 %5167, %5107
  %5169 = icmp sgt i64 %5105, 2
  %5170 = add nsw i64 %5106, -1
  %5171 = add i32 %5104, 1
  br i1 %5169, label %5103, label %5172, !llvm.loop !1472

5172:                                             ; preds = %5162, %5099
  %5173 = phi i32 [ %5102, %5099 ], [ %5168, %5162 ]
  %5174 = icmp slt i32 %5173, %5
  br i1 %5174, label %5177, label %5175

5175:                                             ; preds = %5172
  %5176 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

5177:                                             ; preds = %5172
  %5178 = sext i32 %5173 to i64
  %5179 = getelementptr inbounds double, ptr %4931, i64 %5178
  %5180 = load double, ptr %5179, align 8, !tbaa !19
  %5181 = fmul fast double %5180, %5180
  %5182 = fmul fast double %5181, %5181
  %5183 = fadd fast double %5182, %5100
  store double %5183, ptr %4933, align 8, !tbaa !19
  %5184 = add nuw nsw i32 %5101, 1
  br i1 %4948, label %5185, label %5235

5185:                                             ; preds = %5177
  %5186 = load i32, ptr %4, align 4, !tbaa !6
  %5187 = load i32, ptr %12, align 4, !tbaa !6
  %5188 = add nsw i32 %5187, -1
  %5189 = icmp slt i32 %5186, %5188
  br i1 %5189, label %5212, label %5190

5190:                                             ; preds = %5185
  %5191 = icmp eq i32 %5186, %5188
  br i1 %5191, label %5192, label %5228

5192:                                             ; preds = %5190
  store i32 0, ptr %4, align 4, !tbaa !6
  %5193 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5193, ptr %6, align 4, !tbaa !6
  br i1 %4953, label %5235, label %5194

5194:                                             ; preds = %5192, %5222
  %5195 = phi i64 [ %5226, %5222 ], [ 1, %5192 ]
  %5196 = getelementptr inbounds i32, ptr %4, i64 %5195
  %5197 = load i32, ptr %5196, align 4, !tbaa !6
  %5198 = getelementptr inbounds i32, ptr %12, i64 %5195
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5197, %5200
  br i1 %5201, label %5202, label %5220

5202:                                             ; preds = %5194
  br i1 %5189, label %5212, label %5203

5203:                                             ; preds = %5202
  %5204 = shl i64 %5195, 32
  %5205 = add i64 %5204, -4294967296
  %5206 = ashr exact i64 %5205, 32
  %5207 = getelementptr inbounds i32, ptr %7, i64 %5206
  %5208 = load i32, ptr %5207, align 4, !tbaa !6
  %5209 = getelementptr inbounds i32, ptr %6, i64 %5195
  %5210 = load i32, ptr %5209, align 4, !tbaa !6
  %5211 = add nsw i32 %5210, %5208
  store i32 %5211, ptr %5209, align 4, !tbaa !6
  br label %5230

5212:                                             ; preds = %5185, %5202
  %5213 = phi i32 [ %5197, %5202 ], [ %5186, %5185 ]
  %5214 = phi ptr [ %5196, %5202 ], [ %4, %5185 ]
  %5215 = phi i64 [ %5195, %5202 ], [ 0, %5185 ]
  %5216 = add nsw i32 %5213, 1
  store i32 %5216, ptr %5214, align 4, !tbaa !6
  %5217 = getelementptr inbounds i32, ptr %7, i64 %5215
  %5218 = load i32, ptr %5217, align 4, !tbaa !6
  %5219 = getelementptr inbounds i32, ptr %6, i64 %5215
  br label %5230

5220:                                             ; preds = %5194
  %5221 = icmp eq i32 %5197, %5200
  br i1 %5221, label %5222, label %5228

5222:                                             ; preds = %5220
  store i32 0, ptr %5196, align 4, !tbaa !6
  %5223 = getelementptr inbounds i32, ptr %8, i64 %5195
  %5224 = load i32, ptr %5223, align 4, !tbaa !6
  %5225 = getelementptr inbounds i32, ptr %6, i64 %5195
  store i32 %5224, ptr %5225, align 4, !tbaa !6
  %5226 = add nuw nsw i64 %5195, 1
  %5227 = icmp eq i64 %5226, %4951
  br i1 %5227, label %5235, label %5194, !llvm.loop !1473

5228:                                             ; preds = %5190, %5220
  %5229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5230:                                             ; preds = %5203, %5212
  %5231 = phi ptr [ %5219, %5212 ], [ %5196, %5203 ]
  %5232 = phi i32 [ %5218, %5212 ], [ 1, %5203 ]
  %5233 = load i32, ptr %5231, align 4, !tbaa !6
  %5234 = add nsw i32 %5233, %5232
  store i32 %5234, ptr %5231, align 4, !tbaa !6
  br label %5235

5235:                                             ; preds = %5222, %5230, %5192, %5177
  %5236 = icmp eq i32 %5184, %5
  br i1 %5236, label %5539, label %5099, !llvm.loop !1474

5237:                                             ; preds = %4939
  %5238 = getelementptr inbounds i32, ptr %3, i64 %19
  %5239 = load i32, ptr %5238, align 4, !tbaa !6
  %5240 = icmp eq i32 %5239, 0
  %5241 = icmp sgt i32 %5, 0
  br i1 %5240, label %5251, label %5242

5242:                                             ; preds = %5237
  br i1 %5241, label %5243, label %5539

5243:                                             ; preds = %5242
  %5244 = icmp sgt i32 %13, 1
  %5245 = icmp sgt i32 %13, 0
  %5246 = add i32 %13, -2
  %5247 = zext i32 %5246 to i64
  %5248 = zext i32 %13 to i64
  %5249 = add nuw i32 %5, 1
  %5250 = icmp eq i32 %13, 1
  br label %5393

5251:                                             ; preds = %5237
  br i1 %5241, label %5252, label %5539

5252:                                             ; preds = %5251
  %5253 = icmp sgt i32 %13, 1
  %5254 = icmp sgt i32 %13, 0
  %5255 = add i32 %13, -2
  %5256 = zext i32 %5255 to i64
  %5257 = zext i32 %13 to i64
  %5258 = add nuw i32 %5, 1
  %5259 = icmp eq i32 %13, 1
  br label %5260

5260:                                             ; preds = %5252, %5391
  %5261 = phi double [ 0.000000e+00, %5252 ], [ %5341, %5391 ]
  %5262 = phi i32 [ 0, %5252 ], [ %5343, %5391 ]
  %5263 = phi double [ 0.000000e+00, %5252 ], [ %5342, %5391 ]
  %5264 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5253, label %5265, label %5334

5265:                                             ; preds = %5260, %5324
  %5266 = phi i32 [ %5333, %5324 ], [ 0, %5260 ]
  %5267 = phi i64 [ %5275, %5324 ], [ %5257, %5260 ]
  %5268 = phi i64 [ %5332, %5324 ], [ %5256, %5260 ]
  %5269 = phi i32 [ %5330, %5324 ], [ %5264, %5260 ]
  %5270 = sub i32 %5255, %5266
  %5271 = tail call i32 @llvm.smin.i32(i32 %5270, i32 0)
  %5272 = sub i32 %5270, %5271
  %5273 = zext i32 %5272 to i64
  %5274 = add nuw nsw i64 %5273, 1
  %5275 = add nsw i64 %5267, -1
  %5276 = icmp ult i32 %5272, 31
  br i1 %5276, label %5312, label %5277

5277:                                             ; preds = %5265
  %5278 = and i64 %5274, 8589934560
  %5279 = sub i64 %5268, %5278
  br label %5280

5280:                                             ; preds = %5280, %5277
  %5281 = phi i64 [ 0, %5277 ], [ %5304, %5280 ]
  %5282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5300, %5280 ]
  %5283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5301, %5280 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5302, %5280 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5303, %5280 ]
  %5286 = sub i64 %5268, %5281
  %5287 = getelementptr inbounds i32, ptr %9, i64 %5286
  %5288 = getelementptr inbounds i32, ptr %5287, i64 -7
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !6
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5287, i64 -15
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !6
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5287, i64 -23
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !6
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5287, i64 -31
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !6
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = mul <8 x i32> %5290, %5282
  %5301 = mul <8 x i32> %5293, %5283
  %5302 = mul <8 x i32> %5296, %5284
  %5303 = mul <8 x i32> %5299, %5285
  %5304 = add nuw i64 %5281, 32
  %5305 = icmp eq i64 %5304, %5278
  br i1 %5305, label %5306, label %5280, !llvm.loop !1475

5306:                                             ; preds = %5280
  %5307 = mul <8 x i32> %5301, %5300
  %5308 = mul <8 x i32> %5302, %5307
  %5309 = mul <8 x i32> %5303, %5308
  %5310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5309)
  %5311 = icmp eq i64 %5274, %5278
  br i1 %5311, label %5324, label %5312

5312:                                             ; preds = %5265, %5306
  %5313 = phi i64 [ %5268, %5265 ], [ %5279, %5306 ]
  %5314 = phi i32 [ 1, %5265 ], [ %5310, %5306 ]
  br label %5315

5315:                                             ; preds = %5312, %5315
  %5316 = phi i64 [ %5321, %5315 ], [ %5313, %5312 ]
  %5317 = phi i32 [ %5320, %5315 ], [ %5314, %5312 ]
  %5318 = getelementptr inbounds i32, ptr %9, i64 %5316
  %5319 = load i32, ptr %5318, align 4, !tbaa !6
  %5320 = mul nsw i32 %5319, %5317
  %5321 = add nsw i64 %5316, -1
  %5322 = trunc i64 %5316 to i32
  %5323 = icmp sgt i32 %5322, 0
  br i1 %5323, label %5315, label %5324, !llvm.loop !1476

5324:                                             ; preds = %5315, %5306
  %5325 = phi i32 [ %5310, %5306 ], [ %5320, %5315 ]
  %5326 = and i64 %5275, 4294967295
  %5327 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !6
  %5329 = mul nsw i32 %5328, %5325
  %5330 = add nsw i32 %5329, %5269
  %5331 = icmp sgt i64 %5267, 2
  %5332 = add nsw i64 %5268, -1
  %5333 = add i32 %5266, 1
  br i1 %5331, label %5265, label %5334, !llvm.loop !1477

5334:                                             ; preds = %5324, %5260
  %5335 = phi i32 [ %5264, %5260 ], [ %5330, %5324 ]
  %5336 = sext i32 %5335 to i64
  %5337 = getelementptr inbounds double, ptr %4931, i64 %5336
  %5338 = load double, ptr %5337, align 8, !tbaa !19
  %5339 = fmul fast double %5338, %5338
  %5340 = fmul fast double %5339, %5339
  %5341 = fadd fast double %5340, %5261
  store double %5341, ptr %4933, align 8, !tbaa !19
  %5342 = fadd fast double %5263, 1.000000e+00
  %5343 = add nuw nsw i32 %5262, 1
  br i1 %5254, label %5344, label %5391

5344:                                             ; preds = %5334
  %5345 = load i32, ptr %4, align 4, !tbaa !6
  %5346 = load i32, ptr %12, align 4, !tbaa !6
  %5347 = add nsw i32 %5346, -1
  %5348 = icmp slt i32 %5345, %5347
  br i1 %5348, label %5368, label %5349

5349:                                             ; preds = %5344
  %5350 = icmp eq i32 %5345, %5347
  br i1 %5350, label %5351, label %5384

5351:                                             ; preds = %5349
  store i32 0, ptr %4, align 4, !tbaa !6
  %5352 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5352, ptr %6, align 4, !tbaa !6
  br i1 %5259, label %5391, label %5353

5353:                                             ; preds = %5351, %5378
  %5354 = phi i64 [ %5382, %5378 ], [ 1, %5351 ]
  %5355 = getelementptr inbounds i32, ptr %4, i64 %5354
  %5356 = load i32, ptr %5355, align 4, !tbaa !6
  %5357 = getelementptr inbounds i32, ptr %12, i64 %5354
  %5358 = load i32, ptr %5357, align 4, !tbaa !6
  %5359 = add nsw i32 %5358, -1
  %5360 = icmp slt i32 %5356, %5359
  br i1 %5360, label %5361, label %5376

5361:                                             ; preds = %5353
  br i1 %5348, label %5368, label %5362

5362:                                             ; preds = %5361
  %5363 = getelementptr inbounds i32, ptr %7, i64 %5354
  %5364 = load i32, ptr %5363, align 4, !tbaa !6
  %5365 = getelementptr inbounds i32, ptr %6, i64 %5354
  %5366 = load i32, ptr %5365, align 4, !tbaa !6
  %5367 = add nsw i32 %5366, %5364
  store i32 %5367, ptr %5365, align 4, !tbaa !6
  br label %5386

5368:                                             ; preds = %5344, %5361
  %5369 = phi i32 [ %5356, %5361 ], [ %5345, %5344 ]
  %5370 = phi ptr [ %5355, %5361 ], [ %4, %5344 ]
  %5371 = phi i64 [ %5354, %5361 ], [ 0, %5344 ]
  %5372 = add nsw i32 %5369, 1
  store i32 %5372, ptr %5370, align 4, !tbaa !6
  %5373 = getelementptr inbounds i32, ptr %7, i64 %5371
  %5374 = load i32, ptr %5373, align 4, !tbaa !6
  %5375 = getelementptr inbounds i32, ptr %6, i64 %5371
  br label %5386

5376:                                             ; preds = %5353
  %5377 = icmp eq i32 %5356, %5359
  br i1 %5377, label %5378, label %5384

5378:                                             ; preds = %5376
  store i32 0, ptr %5355, align 4, !tbaa !6
  %5379 = getelementptr inbounds i32, ptr %8, i64 %5354
  %5380 = load i32, ptr %5379, align 4, !tbaa !6
  %5381 = getelementptr inbounds i32, ptr %6, i64 %5354
  store i32 %5380, ptr %5381, align 4, !tbaa !6
  %5382 = add nuw nsw i64 %5354, 1
  %5383 = icmp eq i64 %5382, %5257
  br i1 %5383, label %5391, label %5353, !llvm.loop !1478

5384:                                             ; preds = %5349, %5376
  %5385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5386:                                             ; preds = %5362, %5368
  %5387 = phi ptr [ %5375, %5368 ], [ %5355, %5362 ]
  %5388 = phi i32 [ %5374, %5368 ], [ 1, %5362 ]
  %5389 = load i32, ptr %5387, align 4, !tbaa !6
  %5390 = add nsw i32 %5389, %5388
  store i32 %5390, ptr %5387, align 4, !tbaa !6
  br label %5391

5391:                                             ; preds = %5378, %5386, %5351, %5334
  %5392 = icmp eq i32 %5343, %5
  br i1 %5392, label %5539, label %5260, !llvm.loop !1479

5393:                                             ; preds = %5243, %5529
  %5394 = phi double [ 0.000000e+00, %5243 ], [ %5477, %5529 ]
  %5395 = phi i32 [ 0, %5243 ], [ %5478, %5529 ]
  %5396 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5244, label %5397, label %5466

5397:                                             ; preds = %5393, %5456
  %5398 = phi i32 [ %5465, %5456 ], [ 0, %5393 ]
  %5399 = phi i64 [ %5407, %5456 ], [ %5248, %5393 ]
  %5400 = phi i64 [ %5464, %5456 ], [ %5247, %5393 ]
  %5401 = phi i32 [ %5462, %5456 ], [ %5396, %5393 ]
  %5402 = sub i32 %5246, %5398
  %5403 = tail call i32 @llvm.smin.i32(i32 %5402, i32 0)
  %5404 = sub i32 %5402, %5403
  %5405 = zext i32 %5404 to i64
  %5406 = add nuw nsw i64 %5405, 1
  %5407 = add nsw i64 %5399, -1
  %5408 = icmp ult i32 %5404, 31
  br i1 %5408, label %5444, label %5409

5409:                                             ; preds = %5397
  %5410 = and i64 %5406, 8589934560
  %5411 = sub i64 %5400, %5410
  br label %5412

5412:                                             ; preds = %5412, %5409
  %5413 = phi i64 [ 0, %5409 ], [ %5436, %5412 ]
  %5414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5432, %5412 ]
  %5415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5433, %5412 ]
  %5416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5434, %5412 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5435, %5412 ]
  %5418 = sub i64 %5400, %5413
  %5419 = getelementptr inbounds i32, ptr %11, i64 %5418
  %5420 = getelementptr inbounds i32, ptr %5419, i64 -7
  %5421 = load <8 x i32>, ptr %5420, align 4, !tbaa !6
  %5422 = shufflevector <8 x i32> %5421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5423 = getelementptr inbounds i32, ptr %5419, i64 -15
  %5424 = load <8 x i32>, ptr %5423, align 4, !tbaa !6
  %5425 = shufflevector <8 x i32> %5424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5426 = getelementptr inbounds i32, ptr %5419, i64 -23
  %5427 = load <8 x i32>, ptr %5426, align 4, !tbaa !6
  %5428 = shufflevector <8 x i32> %5427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5429 = getelementptr inbounds i32, ptr %5419, i64 -31
  %5430 = load <8 x i32>, ptr %5429, align 4, !tbaa !6
  %5431 = shufflevector <8 x i32> %5430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5432 = mul <8 x i32> %5422, %5414
  %5433 = mul <8 x i32> %5425, %5415
  %5434 = mul <8 x i32> %5428, %5416
  %5435 = mul <8 x i32> %5431, %5417
  %5436 = add nuw i64 %5413, 32
  %5437 = icmp eq i64 %5436, %5410
  br i1 %5437, label %5438, label %5412, !llvm.loop !1480

5438:                                             ; preds = %5412
  %5439 = mul <8 x i32> %5433, %5432
  %5440 = mul <8 x i32> %5434, %5439
  %5441 = mul <8 x i32> %5435, %5440
  %5442 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5441)
  %5443 = icmp eq i64 %5406, %5410
  br i1 %5443, label %5456, label %5444

5444:                                             ; preds = %5397, %5438
  %5445 = phi i64 [ %5400, %5397 ], [ %5411, %5438 ]
  %5446 = phi i32 [ 1, %5397 ], [ %5442, %5438 ]
  br label %5447

5447:                                             ; preds = %5444, %5447
  %5448 = phi i64 [ %5453, %5447 ], [ %5445, %5444 ]
  %5449 = phi i32 [ %5452, %5447 ], [ %5446, %5444 ]
  %5450 = getelementptr inbounds i32, ptr %11, i64 %5448
  %5451 = load i32, ptr %5450, align 4, !tbaa !6
  %5452 = mul nsw i32 %5451, %5449
  %5453 = add nsw i64 %5448, -1
  %5454 = trunc i64 %5448 to i32
  %5455 = icmp sgt i32 %5454, 0
  br i1 %5455, label %5447, label %5456, !llvm.loop !1481

5456:                                             ; preds = %5447, %5438
  %5457 = phi i32 [ %5442, %5438 ], [ %5452, %5447 ]
  %5458 = and i64 %5407, 4294967295
  %5459 = getelementptr inbounds i32, ptr %6, i64 %5458
  %5460 = load i32, ptr %5459, align 4, !tbaa !6
  %5461 = mul nsw i32 %5460, %5457
  %5462 = add nsw i32 %5461, %5401
  %5463 = icmp sgt i64 %5399, 2
  %5464 = add nsw i64 %5400, -1
  %5465 = add i32 %5398, 1
  br i1 %5463, label %5397, label %5466, !llvm.loop !1482

5466:                                             ; preds = %5456, %5393
  %5467 = phi i32 [ %5396, %5393 ], [ %5462, %5456 ]
  %5468 = icmp slt i32 %5467, %5
  br i1 %5468, label %5471, label %5469

5469:                                             ; preds = %5466
  %5470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5544

5471:                                             ; preds = %5466
  %5472 = sext i32 %5467 to i64
  %5473 = getelementptr inbounds double, ptr %4931, i64 %5472
  %5474 = load double, ptr %5473, align 8, !tbaa !19
  %5475 = fmul fast double %5474, %5474
  %5476 = fmul fast double %5475, %5475
  %5477 = fadd fast double %5476, %5394
  store double %5477, ptr %4933, align 8, !tbaa !19
  %5478 = add nuw nsw i32 %5395, 1
  br i1 %5245, label %5479, label %5529

5479:                                             ; preds = %5471
  %5480 = load i32, ptr %4, align 4, !tbaa !6
  %5481 = load i32, ptr %12, align 4, !tbaa !6
  %5482 = add nsw i32 %5481, -1
  %5483 = icmp slt i32 %5480, %5482
  br i1 %5483, label %5506, label %5484

5484:                                             ; preds = %5479
  %5485 = icmp eq i32 %5480, %5482
  br i1 %5485, label %5486, label %5522

5486:                                             ; preds = %5484
  store i32 0, ptr %4, align 4, !tbaa !6
  %5487 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5487, ptr %6, align 4, !tbaa !6
  br i1 %5250, label %5529, label %5488

5488:                                             ; preds = %5486, %5516
  %5489 = phi i64 [ %5520, %5516 ], [ 1, %5486 ]
  %5490 = getelementptr inbounds i32, ptr %4, i64 %5489
  %5491 = load i32, ptr %5490, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %12, i64 %5489
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = add nsw i32 %5493, -1
  %5495 = icmp slt i32 %5491, %5494
  br i1 %5495, label %5496, label %5514

5496:                                             ; preds = %5488
  br i1 %5483, label %5506, label %5497

5497:                                             ; preds = %5496
  %5498 = shl i64 %5489, 32
  %5499 = add i64 %5498, -4294967296
  %5500 = ashr exact i64 %5499, 32
  %5501 = getelementptr inbounds i32, ptr %7, i64 %5500
  %5502 = load i32, ptr %5501, align 4, !tbaa !6
  %5503 = getelementptr inbounds i32, ptr %6, i64 %5489
  %5504 = load i32, ptr %5503, align 4, !tbaa !6
  %5505 = add nsw i32 %5504, %5502
  store i32 %5505, ptr %5503, align 4, !tbaa !6
  br label %5524

5506:                                             ; preds = %5479, %5496
  %5507 = phi i32 [ %5491, %5496 ], [ %5480, %5479 ]
  %5508 = phi ptr [ %5490, %5496 ], [ %4, %5479 ]
  %5509 = phi i64 [ %5489, %5496 ], [ 0, %5479 ]
  %5510 = add nsw i32 %5507, 1
  store i32 %5510, ptr %5508, align 4, !tbaa !6
  %5511 = getelementptr inbounds i32, ptr %7, i64 %5509
  %5512 = load i32, ptr %5511, align 4, !tbaa !6
  %5513 = getelementptr inbounds i32, ptr %6, i64 %5509
  br label %5524

5514:                                             ; preds = %5488
  %5515 = icmp eq i32 %5491, %5494
  br i1 %5515, label %5516, label %5522

5516:                                             ; preds = %5514
  store i32 0, ptr %5490, align 4, !tbaa !6
  %5517 = getelementptr inbounds i32, ptr %8, i64 %5489
  %5518 = load i32, ptr %5517, align 4, !tbaa !6
  %5519 = getelementptr inbounds i32, ptr %6, i64 %5489
  store i32 %5518, ptr %5519, align 4, !tbaa !6
  %5520 = add nuw nsw i64 %5489, 1
  %5521 = icmp eq i64 %5520, %5248
  br i1 %5521, label %5529, label %5488, !llvm.loop !1483

5522:                                             ; preds = %5484, %5514
  %5523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5544

5524:                                             ; preds = %5497, %5506
  %5525 = phi ptr [ %5513, %5506 ], [ %5490, %5497 ]
  %5526 = phi i32 [ %5512, %5506 ], [ 1, %5497 ]
  %5527 = load i32, ptr %5525, align 4, !tbaa !6
  %5528 = add nsw i32 %5527, %5526
  store i32 %5528, ptr %5525, align 4, !tbaa !6
  br label %5529

5529:                                             ; preds = %5516, %5524, %5486, %5471
  %5530 = icmp eq i32 %5478, %5
  br i1 %5530, label %5539, label %5393, !llvm.loop !1484

5531:                                             ; preds = %4939
  %5532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5539

5533:                                             ; preds = %2038
  store i16 %1988, ptr %1869, align 2, !tbaa !79
  br label %5539

5534:                                             ; preds = %2337
  store i16 %2287, ptr %1869, align 2, !tbaa !79
  br label %5539

5535:                                             ; preds = %3268
  store i64 %3218, ptr %3099, align 8, !tbaa !121
  br label %5539

5536:                                             ; preds = %3567
  store i64 %3517, ptr %3099, align 8, !tbaa !121
  br label %5539

5537:                                             ; preds = %4487
  store float %4437, ptr %4318, align 4, !tbaa !163
  br label %5539

5538:                                             ; preds = %4786
  store float %4736, ptr %4318, align 4, !tbaa !163
  br label %5539

5539:                                             ; preds = %5529, %5391, %5235, %5097, %4925, %4629, %4310, %4172, %4016, %3878, %3706, %3410, %3091, %2952, %2795, %2653, %2476, %2180, %1861, %1722, %1565, %1424, %1247, %1108, %951, %809, %632, %493, %336, %195, %5242, %5251, %4945, %4954, %4636, %4645, %5538, %4331, %4340, %5537, %4023, %4032, %3726, %3735, %3417, %3426, %5536, %3112, %3121, %5535, %2802, %2811, %2497, %2506, %2187, %2196, %5534, %1882, %1891, %5533, %1572, %1581, %1268, %1277, %958, %967, %653, %662, %343, %352, %39, %48, %4935, %5531, %4320, %4927, %3716, %4312, %3101, %3708, %2486, %3093, %1871, %2478, %1257, %1863, %642, %1249, %28, %634, %18
  %5540 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %1863 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %3093 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %3101 ], [ 0.000000e+00, %4312 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %4927 ], [ 0.000000e+00, %4320 ], [ 0.000000e+00, %5531 ], [ 0.000000e+00, %4935 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %967 ], [ 0.000000e+00, %958 ], [ 0.000000e+00, %1277 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %1581 ], [ 0.000000e+00, %1572 ], [ %1989, %5533 ], [ 0.000000e+00, %1891 ], [ 0.000000e+00, %1882 ], [ %2288, %5534 ], [ 0.000000e+00, %2196 ], [ 0.000000e+00, %2187 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2811 ], [ 0.000000e+00, %2802 ], [ %3219, %5535 ], [ 0.000000e+00, %3121 ], [ 0.000000e+00, %3112 ], [ %3518, %5536 ], [ 0.000000e+00, %3426 ], [ 0.000000e+00, %3417 ], [ 0.000000e+00, %3735 ], [ 0.000000e+00, %3726 ], [ 0.000000e+00, %4032 ], [ 0.000000e+00, %4023 ], [ %4438, %5537 ], [ 0.000000e+00, %4340 ], [ 0.000000e+00, %4331 ], [ %4737, %5538 ], [ 0.000000e+00, %4645 ], [ 0.000000e+00, %4636 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ 0.000000e+00, %5251 ], [ 0.000000e+00, %5242 ], [ %146, %195 ], [ 0.000000e+00, %336 ], [ %444, %493 ], [ 0.000000e+00, %632 ], [ %760, %809 ], [ 0.000000e+00, %951 ], [ %1059, %1108 ], [ 0.000000e+00, %1247 ], [ %1375, %1424 ], [ 0.000000e+00, %1565 ], [ %1673, %1722 ], [ 0.000000e+00, %1861 ], [ 0.000000e+00, %2180 ], [ 0.000000e+00, %2476 ], [ %2604, %2653 ], [ 0.000000e+00, %2795 ], [ %2903, %2952 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %3410 ], [ 0.000000e+00, %3706 ], [ %3829, %3878 ], [ 0.000000e+00, %4016 ], [ %4123, %4172 ], [ 0.000000e+00, %4310 ], [ 0.000000e+00, %4629 ], [ 0.000000e+00, %4925 ], [ %5048, %5097 ], [ 0.000000e+00, %5235 ], [ %5342, %5391 ], [ 0.000000e+00, %5529 ]
  %5541 = phi i32 [ %10, %18 ], [ 1, %634 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %642 ], [ 1, %1863 ], [ 1, %1257 ], [ 1, %2478 ], [ 1, %1871 ], [ 1, %3093 ], [ 1, %2486 ], [ 1, %3708 ], [ 1, %3101 ], [ 1, %4312 ], [ 1, %3716 ], [ 1, %4927 ], [ 1, %4320 ], [ 1, %5531 ], [ 1, %4935 ], [ 1, %48 ], [ 1, %39 ], [ 1, %352 ], [ 1, %343 ], [ 1, %662 ], [ 1, %653 ], [ 1, %967 ], [ 1, %958 ], [ 1, %1277 ], [ 1, %1268 ], [ 1, %1581 ], [ 1, %1572 ], [ %1898, %5533 ], [ 1, %1891 ], [ 1, %1882 ], [ %2203, %5534 ], [ 1, %2196 ], [ 1, %2187 ], [ 1, %2506 ], [ 1, %2497 ], [ 1, %2811 ], [ 1, %2802 ], [ %3128, %5535 ], [ 1, %3121 ], [ 1, %3112 ], [ %3433, %5536 ], [ 1, %3426 ], [ 1, %3417 ], [ 1, %3735 ], [ 1, %3726 ], [ 1, %4032 ], [ 1, %4023 ], [ %4347, %5537 ], [ 1, %4340 ], [ 1, %4331 ], [ %4652, %5538 ], [ 1, %4645 ], [ 1, %4636 ], [ 1, %4954 ], [ 1, %4945 ], [ 1, %5251 ], [ 1, %5242 ], [ %55, %195 ], [ %46, %336 ], [ %359, %493 ], [ %350, %632 ], [ %669, %809 ], [ %660, %951 ], [ %974, %1108 ], [ %965, %1247 ], [ %1284, %1424 ], [ %1275, %1565 ], [ %1588, %1722 ], [ %1579, %1861 ], [ %1889, %2180 ], [ %2194, %2476 ], [ %2513, %2653 ], [ %2504, %2795 ], [ %2818, %2952 ], [ %2809, %3091 ], [ %3119, %3410 ], [ %3424, %3706 ], [ %3742, %3878 ], [ %3733, %4016 ], [ %4039, %4172 ], [ %4030, %4310 ], [ %4338, %4629 ], [ %4643, %4925 ], [ %4961, %5097 ], [ %4952, %5235 ], [ %5258, %5391 ], [ %5249, %5529 ]
  %5542 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5541, ptr noundef nonnull @.str.5) #3
  %5543 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5540, ptr noundef nonnull @.str.6) #3
  br label %5544

5544:                                             ; preds = %5090, %5175, %5228, %5384, %5469, %5522, %4480, %4565, %4622, %4779, %4864, %4918, %3871, %3956, %4009, %4165, %4250, %4303, %3261, %3346, %3403, %3560, %3645, %3699, %2646, %2730, %2788, %2945, %3029, %3084, %2031, %2116, %2173, %2330, %2415, %2469, %1417, %1501, %1558, %1715, %1799, %1854, %802, %886, %944, %1101, %1185, %1240, %188, %272, %329, %486, %570, %625, %5539
  %5545 = phi i32 [ 0, %5539 ], [ -1, %625 ], [ -1, %570 ], [ -1, %486 ], [ -1, %329 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1240 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %944 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1854 ], [ -1, %1799 ], [ -1, %1715 ], [ -1, %1558 ], [ -1, %1501 ], [ -1, %1417 ], [ -1, %2469 ], [ -1, %2415 ], [ -1, %2330 ], [ -1, %2173 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3084 ], [ -1, %3029 ], [ -1, %2945 ], [ -1, %2788 ], [ -1, %2730 ], [ -1, %2646 ], [ -1, %3699 ], [ -1, %3645 ], [ -1, %3560 ], [ -1, %3403 ], [ -1, %3346 ], [ -1, %3261 ], [ -1, %4303 ], [ -1, %4250 ], [ -1, %4165 ], [ -1, %4009 ], [ -1, %3956 ], [ -1, %3871 ], [ -1, %4918 ], [ -1, %4864 ], [ -1, %4779 ], [ -1, %4622 ], [ -1, %4565 ], [ -1, %4480 ], [ -1, %5522 ], [ -1, %5469 ], [ -1, %5384 ], [ -1, %5228 ], [ -1, %5175 ], [ -1, %5090 ]
  ret i32 %5545
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !8, i64 0}
!12 = !{!8, !8, i64 0}
!13 = distinct !{!13, !14, !15, !16}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
!17 = distinct !{!17, !14, !16, !15}
!18 = distinct !{!18, !14}
!19 = !{!20, !20, i64 0}
!20 = !{!"double", !8, i64 0}
!21 = distinct !{!21, !14, !22}
!22 = !{!"llvm.loop.peeled.count", i32 1}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14, !15, !16}
!25 = distinct !{!25, !14, !16, !15}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14, !22}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14, !15, !16}
!30 = distinct !{!30, !14, !16, !15}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14, !22}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !14, !15, !16}
!35 = distinct !{!35, !14, !16, !15}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !14, !22}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14, !15, !16}
!40 = distinct !{!40, !14, !16, !15}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !14, !22}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !14, !15, !16}
!45 = distinct !{!45, !14, !16, !15}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14, !22}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14, !15, !16}
!50 = distinct !{!50, !14, !16, !15}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14, !22}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14, !15, !16}
!55 = distinct !{!55, !14, !16, !15}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14, !22}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !14, !15, !16}
!60 = distinct !{!60, !14, !16, !15}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !14, !22}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !14, !15, !16}
!65 = distinct !{!65, !14, !16, !15}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !14, !22}
!68 = distinct !{!68, !14}
!69 = distinct !{!69, !14, !15, !16}
!70 = distinct !{!70, !14, !16, !15}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14, !22}
!73 = distinct !{!73, !14}
!74 = distinct !{!74, !14, !15, !16}
!75 = distinct !{!75, !14, !16, !15}
!76 = distinct !{!76, !14}
!77 = distinct !{!77, !14, !22}
!78 = distinct !{!78, !14}
!79 = !{!80, !80, i64 0}
!80 = !{!"short", !8, i64 0}
!81 = distinct !{!81, !14, !15, !16}
!82 = distinct !{!82, !14, !16, !15}
!83 = distinct !{!83, !14}
!84 = distinct !{!84, !14, !22}
!85 = distinct !{!85, !14}
!86 = distinct !{!86, !14, !15, !16}
!87 = distinct !{!87, !14, !16, !15}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !14, !22}
!90 = distinct !{!90, !14}
!91 = distinct !{!91, !14, !15, !16}
!92 = distinct !{!92, !14, !16, !15}
!93 = distinct !{!93, !14}
!94 = distinct !{!94, !14, !22}
!95 = distinct !{!95, !14}
!96 = distinct !{!96, !14, !15, !16}
!97 = distinct !{!97, !14, !16, !15}
!98 = distinct !{!98, !14}
!99 = distinct !{!99, !14, !22}
!100 = distinct !{!100, !14}
!101 = distinct !{!101, !14, !15, !16}
!102 = distinct !{!102, !14, !16, !15}
!103 = distinct !{!103, !14}
!104 = distinct !{!104, !14, !22}
!105 = distinct !{!105, !14}
!106 = distinct !{!106, !14, !15, !16}
!107 = distinct !{!107, !14, !16, !15}
!108 = distinct !{!108, !14}
!109 = distinct !{!109, !14, !22}
!110 = distinct !{!110, !14}
!111 = distinct !{!111, !14, !15, !16}
!112 = distinct !{!112, !14, !16, !15}
!113 = distinct !{!113, !14}
!114 = distinct !{!114, !14, !22}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !14, !15, !16}
!117 = distinct !{!117, !14, !16, !15}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !14, !22}
!120 = distinct !{!120, !14}
!121 = !{!122, !122, i64 0}
!122 = !{!"long", !8, i64 0}
!123 = distinct !{!123, !14, !15, !16}
!124 = distinct !{!124, !14, !16, !15}
!125 = distinct !{!125, !14}
!126 = distinct !{!126, !14, !22}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !14, !15, !16}
!129 = distinct !{!129, !14, !16, !15}
!130 = distinct !{!130, !14}
!131 = distinct !{!131, !14, !22}
!132 = distinct !{!132, !14}
!133 = distinct !{!133, !14, !15, !16}
!134 = distinct !{!134, !14, !16, !15}
!135 = distinct !{!135, !14}
!136 = distinct !{!136, !14, !22}
!137 = distinct !{!137, !14}
!138 = distinct !{!138, !14, !15, !16}
!139 = distinct !{!139, !14, !16, !15}
!140 = distinct !{!140, !14}
!141 = distinct !{!141, !14, !22}
!142 = distinct !{!142, !14}
!143 = distinct !{!143, !14, !15, !16}
!144 = distinct !{!144, !14, !16, !15}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14, !22}
!147 = distinct !{!147, !14}
!148 = distinct !{!148, !14, !15, !16}
!149 = distinct !{!149, !14, !16, !15}
!150 = distinct !{!150, !14}
!151 = distinct !{!151, !14, !22}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !14, !15, !16}
!154 = distinct !{!154, !14, !16, !15}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !14, !22}
!157 = distinct !{!157, !14}
!158 = distinct !{!158, !14, !15, !16}
!159 = distinct !{!159, !14, !16, !15}
!160 = distinct !{!160, !14}
!161 = distinct !{!161, !14, !22}
!162 = distinct !{!162, !14}
!163 = !{!164, !164, i64 0}
!164 = !{!"float", !8, i64 0}
!165 = distinct !{!165, !14, !15, !16}
!166 = distinct !{!166, !14, !16, !15}
!167 = distinct !{!167, !14}
!168 = distinct !{!168, !14, !22}
!169 = distinct !{!169, !14}
!170 = distinct !{!170, !14, !15, !16}
!171 = distinct !{!171, !14, !16, !15}
!172 = distinct !{!172, !14}
!173 = distinct !{!173, !14, !22}
!174 = distinct !{!174, !14}
!175 = distinct !{!175, !14, !15, !16}
!176 = distinct !{!176, !14, !16, !15}
!177 = distinct !{!177, !14}
!178 = distinct !{!178, !14, !22}
!179 = distinct !{!179, !14}
!180 = distinct !{!180, !14, !15, !16}
!181 = distinct !{!181, !14, !16, !15}
!182 = distinct !{!182, !14}
!183 = distinct !{!183, !14, !22}
!184 = distinct !{!184, !14}
!185 = distinct !{!185, !14, !15, !16}
!186 = distinct !{!186, !14, !16, !15}
!187 = distinct !{!187, !14}
!188 = distinct !{!188, !14, !22}
!189 = distinct !{!189, !14}
!190 = distinct !{!190, !14, !15, !16}
!191 = distinct !{!191, !14, !16, !15}
!192 = distinct !{!192, !14}
!193 = distinct !{!193, !14, !22}
!194 = distinct !{!194, !14}
!195 = distinct !{!195, !14, !15, !16}
!196 = distinct !{!196, !14, !16, !15}
!197 = distinct !{!197, !14}
!198 = distinct !{!198, !14, !22}
!199 = distinct !{!199, !14}
!200 = distinct !{!200, !14, !15, !16}
!201 = distinct !{!201, !14, !16, !15}
!202 = distinct !{!202, !14}
!203 = distinct !{!203, !14, !22}
!204 = distinct !{!204, !14}
!205 = distinct !{!205, !14, !15, !16}
!206 = distinct !{!206, !14, !16, !15}
!207 = distinct !{!207, !14}
!208 = distinct !{!208, !14, !22}
!209 = distinct !{!209, !14}
!210 = distinct !{!210, !14, !15, !16}
!211 = distinct !{!211, !14, !16, !15}
!212 = distinct !{!212, !14}
!213 = distinct !{!213, !14, !22}
!214 = distinct !{!214, !14}
!215 = distinct !{!215, !14, !15, !16}
!216 = distinct !{!216, !14, !16, !15}
!217 = distinct !{!217, !14}
!218 = distinct !{!218, !14, !22}
!219 = distinct !{!219, !14}
!220 = distinct !{!220, !14, !15, !16}
!221 = distinct !{!221, !14, !16, !15}
!222 = distinct !{!222, !14}
!223 = distinct !{!223, !14, !22}
!224 = distinct !{!224, !14}
!225 = distinct !{!225, !14, !15, !16}
!226 = distinct !{!226, !14, !16, !15}
!227 = distinct !{!227, !14}
!228 = distinct !{!228, !14, !22}
!229 = distinct !{!229, !14}
!230 = distinct !{!230, !14, !15, !16}
!231 = distinct !{!231, !14, !16, !15}
!232 = distinct !{!232, !14}
!233 = distinct !{!233, !14, !22}
!234 = distinct !{!234, !14}
!235 = distinct !{!235, !14, !15, !16}
!236 = distinct !{!236, !14, !16, !15}
!237 = distinct !{!237, !14}
!238 = distinct !{!238, !14, !22}
!239 = distinct !{!239, !14}
!240 = distinct !{!240, !14, !15, !16}
!241 = distinct !{!241, !14, !16, !15}
!242 = distinct !{!242, !14}
!243 = distinct !{!243, !14, !22}
!244 = distinct !{!244, !14}
!245 = distinct !{!245, !14, !15, !16}
!246 = distinct !{!246, !14, !16, !15}
!247 = distinct !{!247, !14}
!248 = distinct !{!248, !14, !22}
!249 = distinct !{!249, !14}
!250 = distinct !{!250, !14, !15, !16}
!251 = distinct !{!251, !14, !16, !15}
!252 = distinct !{!252, !14}
!253 = distinct !{!253, !14, !22}
!254 = distinct !{!254, !14}
!255 = distinct !{!255, !14, !15, !16}
!256 = distinct !{!256, !14, !16, !15}
!257 = distinct !{!257, !14}
!258 = distinct !{!258, !14, !22}
!259 = distinct !{!259, !14}
!260 = distinct !{!260, !14, !15, !16}
!261 = distinct !{!261, !14, !16, !15}
!262 = distinct !{!262, !14}
!263 = distinct !{!263, !14, !22}
!264 = distinct !{!264, !14}
!265 = distinct !{!265, !14, !15, !16}
!266 = distinct !{!266, !14, !16, !15}
!267 = distinct !{!267, !14}
!268 = distinct !{!268, !14, !22}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !14, !15, !16}
!271 = distinct !{!271, !14, !16, !15}
!272 = distinct !{!272, !14}
!273 = distinct !{!273, !14, !22}
!274 = distinct !{!274, !14}
!275 = distinct !{!275, !14, !15, !16}
!276 = distinct !{!276, !14, !16, !15}
!277 = distinct !{!277, !14}
!278 = distinct !{!278, !14, !22}
!279 = distinct !{!279, !14}
!280 = distinct !{!280, !14, !15, !16}
!281 = distinct !{!281, !14, !16, !15}
!282 = distinct !{!282, !14}
!283 = distinct !{!283, !14, !22}
!284 = distinct !{!284, !14}
!285 = distinct !{!285, !14, !15, !16}
!286 = distinct !{!286, !14, !16, !15}
!287 = distinct !{!287, !14}
!288 = distinct !{!288, !14, !22}
!289 = distinct !{!289, !14}
!290 = distinct !{!290, !14, !15, !16}
!291 = distinct !{!291, !14, !16, !15}
!292 = distinct !{!292, !14}
!293 = distinct !{!293, !14, !22}
!294 = distinct !{!294, !14}
!295 = distinct !{!295, !14, !15, !16}
!296 = distinct !{!296, !14, !16, !15}
!297 = distinct !{!297, !14}
!298 = distinct !{!298, !14, !22}
!299 = distinct !{!299, !14}
!300 = distinct !{!300, !14, !15, !16}
!301 = distinct !{!301, !14, !16, !15}
!302 = distinct !{!302, !14}
!303 = distinct !{!303, !14, !22}
!304 = distinct !{!304, !14}
!305 = distinct !{!305, !14, !15, !16}
!306 = distinct !{!306, !14, !16, !15}
!307 = distinct !{!307, !14}
!308 = distinct !{!308, !14, !22}
!309 = distinct !{!309, !14}
!310 = distinct !{!310, !14, !15, !16}
!311 = distinct !{!311, !14, !16, !15}
!312 = distinct !{!312, !14}
!313 = distinct !{!313, !14, !22}
!314 = distinct !{!314, !14}
!315 = distinct !{!315, !14, !15, !16}
!316 = distinct !{!316, !14, !16, !15}
!317 = distinct !{!317, !14}
!318 = distinct !{!318, !14, !22}
!319 = distinct !{!319, !14}
!320 = distinct !{!320, !14, !15, !16}
!321 = distinct !{!321, !14, !16, !15}
!322 = distinct !{!322, !14}
!323 = distinct !{!323, !14, !22}
!324 = distinct !{!324, !14}
!325 = distinct !{!325, !14, !15, !16}
!326 = distinct !{!326, !14, !16, !15}
!327 = distinct !{!327, !14}
!328 = distinct !{!328, !14, !22}
!329 = distinct !{!329, !14}
!330 = distinct !{!330, !14, !15, !16}
!331 = distinct !{!331, !14, !16, !15}
!332 = distinct !{!332, !14}
!333 = distinct !{!333, !14, !22}
!334 = distinct !{!334, !14}
!335 = distinct !{!335, !14, !15, !16}
!336 = distinct !{!336, !14, !16, !15}
!337 = distinct !{!337, !14}
!338 = distinct !{!338, !14, !22}
!339 = distinct !{!339, !14}
!340 = distinct !{!340, !14, !15, !16}
!341 = distinct !{!341, !14, !16, !15}
!342 = distinct !{!342, !14}
!343 = distinct !{!343, !14, !22}
!344 = distinct !{!344, !14}
!345 = distinct !{!345, !14, !15, !16}
!346 = distinct !{!346, !14, !16, !15}
!347 = distinct !{!347, !14}
!348 = distinct !{!348, !14, !22}
!349 = distinct !{!349, !14}
!350 = distinct !{!350, !14, !15, !16}
!351 = distinct !{!351, !14, !16, !15}
!352 = distinct !{!352, !14}
!353 = distinct !{!353, !14, !22}
!354 = distinct !{!354, !14}
!355 = distinct !{!355, !14, !15, !16}
!356 = distinct !{!356, !14, !16, !15}
!357 = distinct !{!357, !14}
!358 = distinct !{!358, !14, !22}
!359 = distinct !{!359, !14}
!360 = distinct !{!360, !14, !15, !16}
!361 = distinct !{!361, !14, !16, !15}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14, !22}
!364 = distinct !{!364, !14}
!365 = distinct !{!365, !14, !15, !16}
!366 = distinct !{!366, !14, !16, !15}
!367 = distinct !{!367, !14}
!368 = distinct !{!368, !14, !22}
!369 = distinct !{!369, !14}
!370 = distinct !{!370, !14, !15, !16}
!371 = distinct !{!371, !14, !16, !15}
!372 = distinct !{!372, !14}
!373 = distinct !{!373, !14, !22}
!374 = distinct !{!374, !14}
!375 = distinct !{!375, !14, !15, !16}
!376 = distinct !{!376, !14, !16, !15}
!377 = distinct !{!377, !14}
!378 = distinct !{!378, !14, !22}
!379 = distinct !{!379, !14}
!380 = distinct !{!380, !14, !15, !16}
!381 = distinct !{!381, !14, !16, !15}
!382 = distinct !{!382, !14}
!383 = distinct !{!383, !14, !22}
!384 = distinct !{!384, !14}
!385 = distinct !{!385, !14, !15, !16}
!386 = distinct !{!386, !14, !16, !15}
!387 = distinct !{!387, !14}
!388 = distinct !{!388, !14, !22}
!389 = distinct !{!389, !14}
!390 = distinct !{!390, !14, !15, !16}
!391 = distinct !{!391, !14, !16, !15}
!392 = distinct !{!392, !14}
!393 = distinct !{!393, !14, !22}
!394 = distinct !{!394, !14}
!395 = distinct !{!395, !14, !15, !16}
!396 = distinct !{!396, !14, !16, !15}
!397 = distinct !{!397, !14}
!398 = distinct !{!398, !14, !22}
!399 = distinct !{!399, !14}
!400 = distinct !{!400, !14, !15, !16}
!401 = distinct !{!401, !14, !16, !15}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !14, !22}
!404 = distinct !{!404, !14}
!405 = distinct !{!405, !14, !15, !16}
!406 = distinct !{!406, !14, !16, !15}
!407 = distinct !{!407, !14}
!408 = distinct !{!408, !14, !22}
!409 = distinct !{!409, !14}
!410 = distinct !{!410, !14, !15, !16}
!411 = distinct !{!411, !14, !16, !15}
!412 = distinct !{!412, !14}
!413 = distinct !{!413, !14, !22}
!414 = distinct !{!414, !14}
!415 = distinct !{!415, !14, !15, !16}
!416 = distinct !{!416, !14, !16, !15}
!417 = distinct !{!417, !14}
!418 = distinct !{!418, !14, !22}
!419 = distinct !{!419, !14}
!420 = distinct !{!420, !14, !15, !16}
!421 = distinct !{!421, !14, !16, !15}
!422 = distinct !{!422, !14}
!423 = distinct !{!423, !14, !22}
!424 = distinct !{!424, !14}
!425 = distinct !{!425, !14, !15, !16}
!426 = distinct !{!426, !14, !16, !15}
!427 = distinct !{!427, !14}
!428 = distinct !{!428, !14, !22}
!429 = distinct !{!429, !14}
!430 = distinct !{!430, !14, !15, !16}
!431 = distinct !{!431, !14, !16, !15}
!432 = distinct !{!432, !14}
!433 = distinct !{!433, !14, !22}
!434 = distinct !{!434, !14}
!435 = distinct !{!435, !14, !15, !16}
!436 = distinct !{!436, !14, !16, !15}
!437 = distinct !{!437, !14}
!438 = distinct !{!438, !14, !22}
!439 = distinct !{!439, !14}
!440 = distinct !{!440, !14, !15, !16}
!441 = distinct !{!441, !14, !16, !15}
!442 = distinct !{!442, !14}
!443 = distinct !{!443, !14, !22}
!444 = distinct !{!444, !14}
!445 = distinct !{!445, !14, !15, !16}
!446 = distinct !{!446, !14, !16, !15}
!447 = distinct !{!447, !14}
!448 = distinct !{!448, !14, !22}
!449 = distinct !{!449, !14}
!450 = distinct !{!450, !14, !15, !16}
!451 = distinct !{!451, !14, !16, !15}
!452 = distinct !{!452, !14}
!453 = distinct !{!453, !14, !22}
!454 = distinct !{!454, !14}
!455 = distinct !{!455, !14, !15, !16}
!456 = distinct !{!456, !14, !16, !15}
!457 = distinct !{!457, !14}
!458 = distinct !{!458, !14, !22}
!459 = distinct !{!459, !14}
!460 = distinct !{!460, !14, !15, !16}
!461 = distinct !{!461, !14, !16, !15}
!462 = distinct !{!462, !14}
!463 = distinct !{!463, !14, !22}
!464 = distinct !{!464, !14}
!465 = distinct !{!465, !14, !15, !16}
!466 = distinct !{!466, !14, !16, !15}
!467 = distinct !{!467, !14}
!468 = distinct !{!468, !14, !22}
!469 = distinct !{!469, !14}
!470 = distinct !{!470, !14, !15, !16}
!471 = distinct !{!471, !14, !16, !15}
!472 = distinct !{!472, !14}
!473 = distinct !{!473, !14, !22}
!474 = distinct !{!474, !14}
!475 = distinct !{!475, !14, !15, !16}
!476 = distinct !{!476, !14, !16, !15}
!477 = distinct !{!477, !14}
!478 = distinct !{!478, !14, !22}
!479 = distinct !{!479, !14}
!480 = distinct !{!480, !14, !15, !16}
!481 = distinct !{!481, !14, !16, !15}
!482 = distinct !{!482, !14}
!483 = distinct !{!483, !14, !22}
!484 = distinct !{!484, !14}
!485 = distinct !{!485, !14, !15, !16}
!486 = distinct !{!486, !14, !16, !15}
!487 = distinct !{!487, !14}
!488 = distinct !{!488, !14, !22}
!489 = distinct !{!489, !14}
!490 = distinct !{!490, !14, !15, !16}
!491 = distinct !{!491, !14, !16, !15}
!492 = distinct !{!492, !14}
!493 = distinct !{!493, !14, !22}
!494 = distinct !{!494, !14}
!495 = distinct !{!495, !14, !15, !16}
!496 = distinct !{!496, !14, !16, !15}
!497 = distinct !{!497, !14}
!498 = distinct !{!498, !14, !22}
!499 = distinct !{!499, !14}
!500 = distinct !{!500, !14, !15, !16}
!501 = distinct !{!501, !14, !16, !15}
!502 = distinct !{!502, !14}
!503 = distinct !{!503, !14, !22}
!504 = distinct !{!504, !14}
!505 = distinct !{!505, !14, !15, !16}
!506 = distinct !{!506, !14, !16, !15}
!507 = distinct !{!507, !14}
!508 = distinct !{!508, !14, !22}
!509 = distinct !{!509, !14}
!510 = distinct !{!510, !14, !15, !16}
!511 = distinct !{!511, !14, !16, !15}
!512 = distinct !{!512, !14}
!513 = distinct !{!513, !14, !22}
!514 = distinct !{!514, !14}
!515 = distinct !{!515, !14, !15, !16}
!516 = distinct !{!516, !14, !16, !15}
!517 = distinct !{!517, !14}
!518 = distinct !{!518, !14, !22}
!519 = distinct !{!519, !14}
!520 = distinct !{!520, !14, !15, !16}
!521 = distinct !{!521, !14, !16, !15}
!522 = distinct !{!522, !14}
!523 = distinct !{!523, !14, !22}
!524 = distinct !{!524, !14}
!525 = distinct !{!525, !14, !15, !16}
!526 = distinct !{!526, !14, !16, !15}
!527 = distinct !{!527, !14}
!528 = distinct !{!528, !14, !22}
!529 = distinct !{!529, !14}
!530 = distinct !{!530, !14, !15, !16}
!531 = distinct !{!531, !14, !16, !15}
!532 = distinct !{!532, !14}
!533 = distinct !{!533, !14, !22}
!534 = distinct !{!534, !14}
!535 = distinct !{!535, !14, !15, !16}
!536 = distinct !{!536, !14, !16, !15}
!537 = distinct !{!537, !14}
!538 = distinct !{!538, !14, !22}
!539 = distinct !{!539, !14}
!540 = distinct !{!540, !14, !15, !16}
!541 = distinct !{!541, !14, !16, !15}
!542 = distinct !{!542, !14}
!543 = distinct !{!543, !14, !22}
!544 = distinct !{!544, !14}
!545 = distinct !{!545, !14, !15, !16}
!546 = distinct !{!546, !14, !16, !15}
!547 = distinct !{!547, !14}
!548 = distinct !{!548, !14, !22}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !14, !15, !16}
!551 = distinct !{!551, !14, !16, !15}
!552 = distinct !{!552, !14}
!553 = distinct !{!553, !14, !22}
!554 = distinct !{!554, !14}
!555 = distinct !{!555, !14, !15, !16}
!556 = distinct !{!556, !14, !16, !15}
!557 = distinct !{!557, !14}
!558 = distinct !{!558, !14, !22}
!559 = distinct !{!559, !14}
!560 = distinct !{!560, !14, !15, !16}
!561 = distinct !{!561, !14, !16, !15}
!562 = distinct !{!562, !14}
!563 = distinct !{!563, !14, !22}
!564 = distinct !{!564, !14}
!565 = distinct !{!565, !14, !15, !16}
!566 = distinct !{!566, !14, !16, !15}
!567 = distinct !{!567, !14}
!568 = distinct !{!568, !14, !22}
!569 = distinct !{!569, !14}
!570 = distinct !{!570, !14, !15, !16}
!571 = distinct !{!571, !14, !16, !15}
!572 = distinct !{!572, !14}
!573 = distinct !{!573, !14, !22}
!574 = distinct !{!574, !14}
!575 = distinct !{!575, !14, !15, !16}
!576 = distinct !{!576, !14, !16, !15}
!577 = distinct !{!577, !14}
!578 = distinct !{!578, !14, !22}
!579 = distinct !{!579, !14}
!580 = distinct !{!580, !14, !15, !16}
!581 = distinct !{!581, !14, !16, !15}
!582 = distinct !{!582, !14}
!583 = distinct !{!583, !14, !22}
!584 = distinct !{!584, !14}
!585 = distinct !{!585, !14, !15, !16}
!586 = distinct !{!586, !14, !16, !15}
!587 = distinct !{!587, !14}
!588 = distinct !{!588, !14, !22}
!589 = distinct !{!589, !14}
!590 = distinct !{!590, !14, !15, !16}
!591 = distinct !{!591, !14, !16, !15}
!592 = distinct !{!592, !14}
!593 = distinct !{!593, !14, !22}
!594 = distinct !{!594, !14}
!595 = distinct !{!595, !14, !15, !16}
!596 = distinct !{!596, !14, !16, !15}
!597 = distinct !{!597, !14}
!598 = distinct !{!598, !14, !22}
!599 = distinct !{!599, !14}
!600 = distinct !{!600, !14, !15, !16}
!601 = distinct !{!601, !14, !16, !15}
!602 = distinct !{!602, !14}
!603 = distinct !{!603, !14, !22}
!604 = distinct !{!604, !14}
!605 = distinct !{!605, !14, !15, !16}
!606 = distinct !{!606, !14, !16, !15}
!607 = distinct !{!607, !14}
!608 = distinct !{!608, !14, !22}
!609 = distinct !{!609, !14}
!610 = distinct !{!610, !14, !15, !16}
!611 = distinct !{!611, !14, !16, !15}
!612 = distinct !{!612, !14}
!613 = distinct !{!613, !14, !22}
!614 = distinct !{!614, !14}
!615 = distinct !{!615, !14, !15, !16}
!616 = distinct !{!616, !14, !16, !15}
!617 = distinct !{!617, !14}
!618 = distinct !{!618, !14, !22}
!619 = distinct !{!619, !14}
!620 = distinct !{!620, !14, !15, !16}
!621 = distinct !{!621, !14, !16, !15}
!622 = distinct !{!622, !14}
!623 = distinct !{!623, !14, !22}
!624 = distinct !{!624, !14}
!625 = distinct !{!625, !14, !15, !16}
!626 = distinct !{!626, !14, !16, !15}
!627 = distinct !{!627, !14}
!628 = distinct !{!628, !14, !22}
!629 = distinct !{!629, !14}
!630 = distinct !{!630, !14, !15, !16}
!631 = distinct !{!631, !14, !16, !15}
!632 = distinct !{!632, !14}
!633 = distinct !{!633, !14, !22}
!634 = distinct !{!634, !14}
!635 = distinct !{!635, !14, !15, !16}
!636 = distinct !{!636, !14, !16, !15}
!637 = distinct !{!637, !14}
!638 = distinct !{!638, !14, !22}
!639 = distinct !{!639, !14}
!640 = distinct !{!640, !14, !15, !16}
!641 = distinct !{!641, !14, !16, !15}
!642 = distinct !{!642, !14}
!643 = distinct !{!643, !14, !22}
!644 = distinct !{!644, !14}
!645 = distinct !{!645, !14, !15, !16}
!646 = distinct !{!646, !14, !16, !15}
!647 = distinct !{!647, !14}
!648 = distinct !{!648, !14, !22}
!649 = distinct !{!649, !14}
!650 = distinct !{!650, !14, !15, !16}
!651 = distinct !{!651, !14, !16, !15}
!652 = distinct !{!652, !14}
!653 = distinct !{!653, !14, !22}
!654 = distinct !{!654, !14}
!655 = distinct !{!655, !14, !15, !16}
!656 = distinct !{!656, !14, !16, !15}
!657 = distinct !{!657, !14}
!658 = distinct !{!658, !14, !22}
!659 = distinct !{!659, !14}
!660 = distinct !{!660, !14, !15, !16}
!661 = distinct !{!661, !14, !16, !15}
!662 = distinct !{!662, !14}
!663 = distinct !{!663, !14, !22}
!664 = distinct !{!664, !14}
!665 = distinct !{!665, !14, !15, !16}
!666 = distinct !{!666, !14, !16, !15}
!667 = distinct !{!667, !14}
!668 = distinct !{!668, !14, !22}
!669 = distinct !{!669, !14}
!670 = distinct !{!670, !14, !15, !16}
!671 = distinct !{!671, !14, !16, !15}
!672 = distinct !{!672, !14}
!673 = distinct !{!673, !14, !22}
!674 = distinct !{!674, !14}
!675 = distinct !{!675, !14, !15, !16}
!676 = distinct !{!676, !14, !16, !15}
!677 = distinct !{!677, !14}
!678 = distinct !{!678, !14, !22}
!679 = distinct !{!679, !14}
!680 = distinct !{!680, !14, !15, !16}
!681 = distinct !{!681, !14, !16, !15}
!682 = distinct !{!682, !14}
!683 = distinct !{!683, !14, !22}
!684 = distinct !{!684, !14}
!685 = distinct !{!685, !14, !15, !16}
!686 = distinct !{!686, !14, !16, !15}
!687 = distinct !{!687, !14}
!688 = distinct !{!688, !14, !22}
!689 = distinct !{!689, !14}
!690 = distinct !{!690, !14, !15, !16}
!691 = distinct !{!691, !14, !16, !15}
!692 = distinct !{!692, !14}
!693 = distinct !{!693, !14, !22}
!694 = distinct !{!694, !14}
!695 = distinct !{!695, !14, !15, !16}
!696 = distinct !{!696, !14, !16, !15}
!697 = distinct !{!697, !14}
!698 = distinct !{!698, !14, !22}
!699 = distinct !{!699, !14}
!700 = distinct !{!700, !14, !15, !16}
!701 = distinct !{!701, !14, !16, !15}
!702 = distinct !{!702, !14}
!703 = distinct !{!703, !14, !22}
!704 = distinct !{!704, !14}
!705 = distinct !{!705, !14, !15, !16}
!706 = distinct !{!706, !14, !16, !15}
!707 = distinct !{!707, !14}
!708 = distinct !{!708, !14, !22}
!709 = distinct !{!709, !14}
!710 = distinct !{!710, !14, !15, !16}
!711 = distinct !{!711, !14, !16, !15}
!712 = distinct !{!712, !14}
!713 = distinct !{!713, !14, !22}
!714 = distinct !{!714, !14}
!715 = distinct !{!715, !14, !15, !16}
!716 = distinct !{!716, !14, !16, !15}
!717 = distinct !{!717, !14}
!718 = distinct !{!718, !14, !22}
!719 = distinct !{!719, !14}
!720 = distinct !{!720, !14, !15, !16}
!721 = distinct !{!721, !14, !16, !15}
!722 = distinct !{!722, !14}
!723 = distinct !{!723, !14, !22}
!724 = distinct !{!724, !14}
!725 = distinct !{!725, !14, !15, !16}
!726 = distinct !{!726, !14, !16, !15}
!727 = distinct !{!727, !14}
!728 = distinct !{!728, !14, !22}
!729 = distinct !{!729, !14}
!730 = distinct !{!730, !14, !15, !16}
!731 = distinct !{!731, !14, !16, !15}
!732 = distinct !{!732, !14}
!733 = distinct !{!733, !14, !22}
!734 = distinct !{!734, !14}
!735 = distinct !{!735, !14, !15, !16}
!736 = distinct !{!736, !14, !16, !15}
!737 = distinct !{!737, !14}
!738 = distinct !{!738, !14, !22}
!739 = distinct !{!739, !14}
!740 = distinct !{!740, !14, !15, !16}
!741 = distinct !{!741, !14, !16, !15}
!742 = distinct !{!742, !14}
!743 = distinct !{!743, !14, !22}
!744 = distinct !{!744, !14}
!745 = distinct !{!745, !14, !15, !16}
!746 = distinct !{!746, !14, !16, !15}
!747 = distinct !{!747, !14}
!748 = distinct !{!748, !14, !22}
!749 = distinct !{!749, !14}
!750 = distinct !{!750, !14, !15, !16}
!751 = distinct !{!751, !14, !16, !15}
!752 = distinct !{!752, !14}
!753 = distinct !{!753, !14, !22}
!754 = distinct !{!754, !14}
!755 = distinct !{!755, !14, !15, !16}
!756 = distinct !{!756, !14, !16, !15}
!757 = distinct !{!757, !14}
!758 = distinct !{!758, !14, !22}
!759 = distinct !{!759, !14}
!760 = distinct !{!760, !14, !15, !16}
!761 = distinct !{!761, !14, !16, !15}
!762 = distinct !{!762, !14}
!763 = distinct !{!763, !14, !22}
!764 = distinct !{!764, !14}
!765 = distinct !{!765, !14, !15, !16}
!766 = distinct !{!766, !14, !16, !15}
!767 = distinct !{!767, !14}
!768 = distinct !{!768, !14, !22}
!769 = distinct !{!769, !14}
!770 = distinct !{!770, !14, !15, !16}
!771 = distinct !{!771, !14, !16, !15}
!772 = distinct !{!772, !14}
!773 = distinct !{!773, !14, !22}
!774 = distinct !{!774, !14}
!775 = distinct !{!775, !14, !15, !16}
!776 = distinct !{!776, !14, !16, !15}
!777 = distinct !{!777, !14}
!778 = distinct !{!778, !14, !22}
!779 = distinct !{!779, !14}
!780 = distinct !{!780, !14, !15, !16}
!781 = distinct !{!781, !14, !16, !15}
!782 = distinct !{!782, !14}
!783 = distinct !{!783, !14, !22}
!784 = distinct !{!784, !14}
!785 = distinct !{!785, !14, !15, !16}
!786 = distinct !{!786, !14, !16, !15}
!787 = distinct !{!787, !14}
!788 = distinct !{!788, !14, !22}
!789 = distinct !{!789, !14}
!790 = distinct !{!790, !14, !15, !16}
!791 = distinct !{!791, !14, !16, !15}
!792 = distinct !{!792, !14}
!793 = distinct !{!793, !14, !22}
!794 = distinct !{!794, !14}
!795 = distinct !{!795, !14, !15, !16}
!796 = distinct !{!796, !14, !16, !15}
!797 = distinct !{!797, !14}
!798 = distinct !{!798, !14, !22}
!799 = distinct !{!799, !14}
!800 = distinct !{!800, !14, !15, !16}
!801 = distinct !{!801, !14, !16, !15}
!802 = distinct !{!802, !14}
!803 = distinct !{!803, !14, !22}
!804 = distinct !{!804, !14}
!805 = distinct !{!805, !14, !15, !16}
!806 = distinct !{!806, !14, !16, !15}
!807 = distinct !{!807, !14}
!808 = distinct !{!808, !14, !22}
!809 = distinct !{!809, !14}
!810 = distinct !{!810, !14, !15, !16}
!811 = distinct !{!811, !14, !16, !15}
!812 = distinct !{!812, !14}
!813 = distinct !{!813, !14, !22}
!814 = distinct !{!814, !14}
!815 = distinct !{!815, !14, !15, !16}
!816 = distinct !{!816, !14, !16, !15}
!817 = distinct !{!817, !14}
!818 = distinct !{!818, !14, !22}
!819 = distinct !{!819, !14}
!820 = distinct !{!820, !14, !15, !16}
!821 = distinct !{!821, !14, !16, !15}
!822 = distinct !{!822, !14}
!823 = distinct !{!823, !14, !22}
!824 = distinct !{!824, !14}
!825 = distinct !{!825, !14, !15, !16}
!826 = distinct !{!826, !14, !16, !15}
!827 = distinct !{!827, !14}
!828 = distinct !{!828, !14, !22}
!829 = distinct !{!829, !14}
!830 = distinct !{!830, !14, !15, !16}
!831 = distinct !{!831, !14, !16, !15}
!832 = distinct !{!832, !14}
!833 = distinct !{!833, !14, !22}
!834 = distinct !{!834, !14}
!835 = distinct !{!835, !14, !15, !16}
!836 = distinct !{!836, !14, !16, !15}
!837 = distinct !{!837, !14}
!838 = distinct !{!838, !14, !22}
!839 = distinct !{!839, !14}
!840 = distinct !{!840, !14, !15, !16}
!841 = distinct !{!841, !14, !16, !15}
!842 = distinct !{!842, !14}
!843 = distinct !{!843, !14, !22}
!844 = distinct !{!844, !14}
!845 = distinct !{!845, !14, !15, !16}
!846 = distinct !{!846, !14, !16, !15}
!847 = distinct !{!847, !14}
!848 = distinct !{!848, !14, !22}
!849 = distinct !{!849, !14}
!850 = distinct !{!850, !14, !15, !16}
!851 = distinct !{!851, !14, !16, !15}
!852 = distinct !{!852, !14}
!853 = distinct !{!853, !14, !22}
!854 = distinct !{!854, !14}
!855 = distinct !{!855, !14, !15, !16}
!856 = distinct !{!856, !14, !16, !15}
!857 = distinct !{!857, !14}
!858 = distinct !{!858, !14, !22}
!859 = distinct !{!859, !14}
!860 = distinct !{!860, !14, !15, !16}
!861 = distinct !{!861, !14, !16, !15}
!862 = distinct !{!862, !14}
!863 = distinct !{!863, !14, !22}
!864 = distinct !{!864, !14}
!865 = distinct !{!865, !14, !15, !16}
!866 = distinct !{!866, !14, !16, !15}
!867 = distinct !{!867, !14}
!868 = distinct !{!868, !14, !22}
!869 = distinct !{!869, !14}
!870 = distinct !{!870, !14, !15, !16}
!871 = distinct !{!871, !14, !16, !15}
!872 = distinct !{!872, !14}
!873 = distinct !{!873, !14, !22}
!874 = distinct !{!874, !14}
!875 = distinct !{!875, !14, !15, !16}
!876 = distinct !{!876, !14, !16, !15}
!877 = distinct !{!877, !14}
!878 = distinct !{!878, !14, !22}
!879 = distinct !{!879, !14}
!880 = distinct !{!880, !14, !15, !16}
!881 = distinct !{!881, !14, !16, !15}
!882 = distinct !{!882, !14}
!883 = distinct !{!883, !14, !22}
!884 = distinct !{!884, !14}
!885 = distinct !{!885, !14, !15, !16}
!886 = distinct !{!886, !14, !16, !15}
!887 = distinct !{!887, !14}
!888 = distinct !{!888, !14, !22}
!889 = distinct !{!889, !14}
!890 = distinct !{!890, !14, !15, !16}
!891 = distinct !{!891, !14, !16, !15}
!892 = distinct !{!892, !14}
!893 = distinct !{!893, !14, !22}
!894 = distinct !{!894, !14}
!895 = distinct !{!895, !14, !15, !16}
!896 = distinct !{!896, !14, !16, !15}
!897 = distinct !{!897, !14}
!898 = distinct !{!898, !14, !22}
!899 = distinct !{!899, !14}
!900 = distinct !{!900, !14, !15, !16}
!901 = distinct !{!901, !14, !16, !15}
!902 = distinct !{!902, !14}
!903 = distinct !{!903, !14, !22}
!904 = distinct !{!904, !14}
!905 = distinct !{!905, !14, !15, !16}
!906 = distinct !{!906, !14, !16, !15}
!907 = distinct !{!907, !14}
!908 = distinct !{!908, !14, !22}
!909 = distinct !{!909, !14}
!910 = distinct !{!910, !14, !15, !16}
!911 = distinct !{!911, !14, !16, !15}
!912 = distinct !{!912, !14}
!913 = distinct !{!913, !14, !22}
!914 = distinct !{!914, !14}
!915 = distinct !{!915, !14, !15, !16}
!916 = distinct !{!916, !14, !16, !15}
!917 = distinct !{!917, !14}
!918 = distinct !{!918, !14, !22}
!919 = distinct !{!919, !14}
!920 = distinct !{!920, !14, !15, !16}
!921 = distinct !{!921, !14, !16, !15}
!922 = distinct !{!922, !14}
!923 = distinct !{!923, !14, !22}
!924 = distinct !{!924, !14}
!925 = distinct !{!925, !14, !15, !16}
!926 = distinct !{!926, !14, !16, !15}
!927 = distinct !{!927, !14}
!928 = distinct !{!928, !14, !22}
!929 = distinct !{!929, !14}
!930 = distinct !{!930, !14, !15, !16}
!931 = distinct !{!931, !14, !16, !15}
!932 = distinct !{!932, !14}
!933 = distinct !{!933, !14, !22}
!934 = distinct !{!934, !14}
!935 = distinct !{!935, !14, !15, !16}
!936 = distinct !{!936, !14, !16, !15}
!937 = distinct !{!937, !14}
!938 = distinct !{!938, !14, !22}
!939 = distinct !{!939, !14}
!940 = distinct !{!940, !14, !15, !16}
!941 = distinct !{!941, !14, !16, !15}
!942 = distinct !{!942, !14}
!943 = distinct !{!943, !14, !22}
!944 = distinct !{!944, !14}
!945 = distinct !{!945, !14, !15, !16}
!946 = distinct !{!946, !14, !16, !15}
!947 = distinct !{!947, !14}
!948 = distinct !{!948, !14, !22}
!949 = distinct !{!949, !14}
!950 = distinct !{!950, !14, !15, !16}
!951 = distinct !{!951, !14, !16, !15}
!952 = distinct !{!952, !14}
!953 = distinct !{!953, !14, !22}
!954 = distinct !{!954, !14}
!955 = distinct !{!955, !14, !15, !16}
!956 = distinct !{!956, !14, !16, !15}
!957 = distinct !{!957, !14}
!958 = distinct !{!958, !14, !22}
!959 = distinct !{!959, !14}
!960 = distinct !{!960, !14, !15, !16}
!961 = distinct !{!961, !14, !16, !15}
!962 = distinct !{!962, !14}
!963 = distinct !{!963, !14, !22}
!964 = distinct !{!964, !14}
!965 = distinct !{!965, !14, !15, !16}
!966 = distinct !{!966, !14, !16, !15}
!967 = distinct !{!967, !14}
!968 = distinct !{!968, !14, !22}
!969 = distinct !{!969, !14}
!970 = distinct !{!970, !14, !15, !16}
!971 = distinct !{!971, !14, !16, !15}
!972 = distinct !{!972, !14}
!973 = distinct !{!973, !14, !22}
!974 = distinct !{!974, !14}
!975 = distinct !{!975, !14, !15, !16}
!976 = distinct !{!976, !14, !16, !15}
!977 = distinct !{!977, !14}
!978 = distinct !{!978, !14, !22}
!979 = distinct !{!979, !14}
!980 = distinct !{!980, !14, !15, !16}
!981 = distinct !{!981, !14, !16, !15}
!982 = distinct !{!982, !14}
!983 = distinct !{!983, !14, !22}
!984 = distinct !{!984, !14}
!985 = distinct !{!985, !14, !15, !16}
!986 = distinct !{!986, !14, !16, !15}
!987 = distinct !{!987, !14}
!988 = distinct !{!988, !14, !22}
!989 = distinct !{!989, !14}
!990 = distinct !{!990, !14, !15, !16}
!991 = distinct !{!991, !14, !16, !15}
!992 = distinct !{!992, !14}
!993 = distinct !{!993, !14, !22}
!994 = distinct !{!994, !14}
!995 = distinct !{!995, !14, !15, !16}
!996 = distinct !{!996, !14, !16, !15}
!997 = distinct !{!997, !14}
!998 = distinct !{!998, !14, !22}
!999 = distinct !{!999, !14}
!1000 = distinct !{!1000, !14, !15, !16}
!1001 = distinct !{!1001, !14, !16, !15}
!1002 = distinct !{!1002, !14}
!1003 = distinct !{!1003, !14, !22}
!1004 = distinct !{!1004, !14}
!1005 = distinct !{!1005, !14, !15, !16}
!1006 = distinct !{!1006, !14, !16, !15}
!1007 = distinct !{!1007, !14}
!1008 = distinct !{!1008, !14, !22}
!1009 = distinct !{!1009, !14}
!1010 = distinct !{!1010, !14, !15, !16}
!1011 = distinct !{!1011, !14, !16, !15}
!1012 = distinct !{!1012, !14}
!1013 = distinct !{!1013, !14, !22}
!1014 = distinct !{!1014, !14}
!1015 = distinct !{!1015, !14, !15, !16}
!1016 = distinct !{!1016, !14, !16, !15}
!1017 = distinct !{!1017, !14}
!1018 = distinct !{!1018, !14, !22}
!1019 = distinct !{!1019, !14}
!1020 = distinct !{!1020, !14, !15, !16}
!1021 = distinct !{!1021, !14, !16, !15}
!1022 = distinct !{!1022, !14}
!1023 = distinct !{!1023, !14, !22}
!1024 = distinct !{!1024, !14}
!1025 = distinct !{!1025, !14, !15, !16}
!1026 = distinct !{!1026, !14, !16, !15}
!1027 = distinct !{!1027, !14}
!1028 = distinct !{!1028, !14, !22}
!1029 = distinct !{!1029, !14}
!1030 = distinct !{!1030, !14, !15, !16}
!1031 = distinct !{!1031, !14, !16, !15}
!1032 = distinct !{!1032, !14}
!1033 = distinct !{!1033, !14, !22}
!1034 = distinct !{!1034, !14}
!1035 = distinct !{!1035, !14, !15, !16}
!1036 = distinct !{!1036, !14, !16, !15}
!1037 = distinct !{!1037, !14}
!1038 = distinct !{!1038, !14, !22}
!1039 = distinct !{!1039, !14}
!1040 = distinct !{!1040, !14, !15, !16}
!1041 = distinct !{!1041, !14, !16, !15}
!1042 = distinct !{!1042, !14}
!1043 = distinct !{!1043, !14, !22}
!1044 = distinct !{!1044, !14}
!1045 = distinct !{!1045, !14, !15, !16}
!1046 = distinct !{!1046, !14, !16, !15}
!1047 = distinct !{!1047, !14}
!1048 = distinct !{!1048, !14, !22}
!1049 = distinct !{!1049, !14}
!1050 = distinct !{!1050, !14, !15, !16}
!1051 = distinct !{!1051, !14, !16, !15}
!1052 = distinct !{!1052, !14}
!1053 = distinct !{!1053, !14, !22}
!1054 = distinct !{!1054, !14}
!1055 = distinct !{!1055, !14, !15, !16}
!1056 = distinct !{!1056, !14, !16, !15}
!1057 = distinct !{!1057, !14}
!1058 = distinct !{!1058, !14, !22}
!1059 = distinct !{!1059, !14}
!1060 = distinct !{!1060, !14, !15, !16}
!1061 = distinct !{!1061, !14, !16, !15}
!1062 = distinct !{!1062, !14}
!1063 = distinct !{!1063, !14, !22}
!1064 = distinct !{!1064, !14}
!1065 = distinct !{!1065, !14, !15, !16}
!1066 = distinct !{!1066, !14, !16, !15}
!1067 = distinct !{!1067, !14}
!1068 = distinct !{!1068, !14, !22}
!1069 = distinct !{!1069, !14}
!1070 = distinct !{!1070, !14, !15, !16}
!1071 = distinct !{!1071, !14, !16, !15}
!1072 = distinct !{!1072, !14}
!1073 = distinct !{!1073, !14, !22}
!1074 = distinct !{!1074, !14}
!1075 = distinct !{!1075, !14, !15, !16}
!1076 = distinct !{!1076, !14, !16, !15}
!1077 = distinct !{!1077, !14}
!1078 = distinct !{!1078, !14, !22}
!1079 = distinct !{!1079, !14}
!1080 = distinct !{!1080, !14, !15, !16}
!1081 = distinct !{!1081, !14, !16, !15}
!1082 = distinct !{!1082, !14}
!1083 = distinct !{!1083, !14, !22}
!1084 = distinct !{!1084, !14}
!1085 = distinct !{!1085, !14, !15, !16}
!1086 = distinct !{!1086, !14, !16, !15}
!1087 = distinct !{!1087, !14}
!1088 = distinct !{!1088, !14, !22}
!1089 = distinct !{!1089, !14}
!1090 = distinct !{!1090, !14, !15, !16}
!1091 = distinct !{!1091, !14, !16, !15}
!1092 = distinct !{!1092, !14}
!1093 = distinct !{!1093, !14, !22}
!1094 = distinct !{!1094, !14}
!1095 = distinct !{!1095, !14, !15, !16}
!1096 = distinct !{!1096, !14, !16, !15}
!1097 = distinct !{!1097, !14}
!1098 = distinct !{!1098, !14, !22}
!1099 = distinct !{!1099, !14}
!1100 = distinct !{!1100, !14, !15, !16}
!1101 = distinct !{!1101, !14, !16, !15}
!1102 = distinct !{!1102, !14}
!1103 = distinct !{!1103, !14, !22}
!1104 = distinct !{!1104, !14}
!1105 = distinct !{!1105, !14, !15, !16}
!1106 = distinct !{!1106, !14, !16, !15}
!1107 = distinct !{!1107, !14}
!1108 = distinct !{!1108, !14, !22}
!1109 = distinct !{!1109, !14}
!1110 = distinct !{!1110, !14, !15, !16}
!1111 = distinct !{!1111, !14, !16, !15}
!1112 = distinct !{!1112, !14}
!1113 = distinct !{!1113, !14, !22}
!1114 = distinct !{!1114, !14}
!1115 = distinct !{!1115, !14, !15, !16}
!1116 = distinct !{!1116, !14, !16, !15}
!1117 = distinct !{!1117, !14}
!1118 = distinct !{!1118, !14, !22}
!1119 = distinct !{!1119, !14}
!1120 = distinct !{!1120, !14, !15, !16}
!1121 = distinct !{!1121, !14, !16, !15}
!1122 = distinct !{!1122, !14}
!1123 = distinct !{!1123, !14, !22}
!1124 = distinct !{!1124, !14}
!1125 = distinct !{!1125, !14, !15, !16}
!1126 = distinct !{!1126, !14, !16, !15}
!1127 = distinct !{!1127, !14}
!1128 = distinct !{!1128, !14, !22}
!1129 = distinct !{!1129, !14}
!1130 = distinct !{!1130, !14, !15, !16}
!1131 = distinct !{!1131, !14, !16, !15}
!1132 = distinct !{!1132, !14}
!1133 = distinct !{!1133, !14, !22}
!1134 = distinct !{!1134, !14}
!1135 = distinct !{!1135, !14, !15, !16}
!1136 = distinct !{!1136, !14, !16, !15}
!1137 = distinct !{!1137, !14}
!1138 = distinct !{!1138, !14, !22}
!1139 = distinct !{!1139, !14}
!1140 = distinct !{!1140, !14, !15, !16}
!1141 = distinct !{!1141, !14, !16, !15}
!1142 = distinct !{!1142, !14}
!1143 = distinct !{!1143, !14, !22}
!1144 = distinct !{!1144, !14}
!1145 = distinct !{!1145, !14, !15, !16}
!1146 = distinct !{!1146, !14, !16, !15}
!1147 = distinct !{!1147, !14}
!1148 = distinct !{!1148, !14, !22}
!1149 = distinct !{!1149, !14}
!1150 = distinct !{!1150, !14, !15, !16}
!1151 = distinct !{!1151, !14, !16, !15}
!1152 = distinct !{!1152, !14}
!1153 = distinct !{!1153, !14, !22}
!1154 = distinct !{!1154, !14}
!1155 = distinct !{!1155, !14, !15, !16}
!1156 = distinct !{!1156, !14, !16, !15}
!1157 = distinct !{!1157, !14}
!1158 = distinct !{!1158, !14, !22}
!1159 = distinct !{!1159, !14}
!1160 = distinct !{!1160, !14, !15, !16}
!1161 = distinct !{!1161, !14, !16, !15}
!1162 = distinct !{!1162, !14}
!1163 = distinct !{!1163, !14, !22}
!1164 = distinct !{!1164, !14}
!1165 = distinct !{!1165, !14, !15, !16}
!1166 = distinct !{!1166, !14, !16, !15}
!1167 = distinct !{!1167, !14}
!1168 = distinct !{!1168, !14, !22}
!1169 = distinct !{!1169, !14}
!1170 = distinct !{!1170, !14, !15, !16}
!1171 = distinct !{!1171, !14, !16, !15}
!1172 = distinct !{!1172, !14}
!1173 = distinct !{!1173, !14, !22}
!1174 = distinct !{!1174, !14}
!1175 = distinct !{!1175, !14, !15, !16}
!1176 = distinct !{!1176, !14, !16, !15}
!1177 = distinct !{!1177, !14}
!1178 = distinct !{!1178, !14, !22}
!1179 = distinct !{!1179, !14}
!1180 = distinct !{!1180, !14, !15, !16}
!1181 = distinct !{!1181, !14, !16, !15}
!1182 = distinct !{!1182, !14}
!1183 = distinct !{!1183, !14, !22}
!1184 = distinct !{!1184, !14}
!1185 = distinct !{!1185, !14, !15, !16}
!1186 = distinct !{!1186, !14, !16, !15}
!1187 = distinct !{!1187, !14}
!1188 = distinct !{!1188, !14, !22}
!1189 = distinct !{!1189, !14}
!1190 = distinct !{!1190, !14, !15, !16}
!1191 = distinct !{!1191, !14, !16, !15}
!1192 = distinct !{!1192, !14}
!1193 = distinct !{!1193, !14, !22}
!1194 = distinct !{!1194, !14}
!1195 = distinct !{!1195, !14, !15, !16}
!1196 = distinct !{!1196, !14, !16, !15}
!1197 = distinct !{!1197, !14}
!1198 = distinct !{!1198, !14, !22}
!1199 = distinct !{!1199, !14}
!1200 = distinct !{!1200, !14, !15, !16}
!1201 = distinct !{!1201, !14, !16, !15}
!1202 = distinct !{!1202, !14}
!1203 = distinct !{!1203, !14, !22}
!1204 = distinct !{!1204, !14}
!1205 = distinct !{!1205, !14, !15, !16}
!1206 = distinct !{!1206, !14, !16, !15}
!1207 = distinct !{!1207, !14}
!1208 = distinct !{!1208, !14, !22}
!1209 = distinct !{!1209, !14}
!1210 = distinct !{!1210, !14, !15, !16}
!1211 = distinct !{!1211, !14, !16, !15}
!1212 = distinct !{!1212, !14}
!1213 = distinct !{!1213, !14, !22}
!1214 = distinct !{!1214, !14}
!1215 = distinct !{!1215, !14, !15, !16}
!1216 = distinct !{!1216, !14, !16, !15}
!1217 = distinct !{!1217, !14}
!1218 = distinct !{!1218, !14, !22}
!1219 = distinct !{!1219, !14}
!1220 = distinct !{!1220, !14, !15, !16}
!1221 = distinct !{!1221, !14, !16, !15}
!1222 = distinct !{!1222, !14}
!1223 = distinct !{!1223, !14, !22}
!1224 = distinct !{!1224, !14}
!1225 = distinct !{!1225, !14, !15, !16}
!1226 = distinct !{!1226, !14, !16, !15}
!1227 = distinct !{!1227, !14}
!1228 = distinct !{!1228, !14, !22}
!1229 = distinct !{!1229, !14}
!1230 = distinct !{!1230, !14, !15, !16}
!1231 = distinct !{!1231, !14, !16, !15}
!1232 = distinct !{!1232, !14}
!1233 = distinct !{!1233, !14, !22}
!1234 = distinct !{!1234, !14}
!1235 = distinct !{!1235, !14, !15, !16}
!1236 = distinct !{!1236, !14, !16, !15}
!1237 = distinct !{!1237, !14}
!1238 = distinct !{!1238, !14, !22}
!1239 = distinct !{!1239, !14}
!1240 = distinct !{!1240, !14, !15, !16}
!1241 = distinct !{!1241, !14, !16, !15}
!1242 = distinct !{!1242, !14}
!1243 = distinct !{!1243, !14, !22}
!1244 = distinct !{!1244, !14}
!1245 = distinct !{!1245, !14, !15, !16}
!1246 = distinct !{!1246, !14, !16, !15}
!1247 = distinct !{!1247, !14}
!1248 = distinct !{!1248, !14, !22}
!1249 = distinct !{!1249, !14}
!1250 = distinct !{!1250, !14, !15, !16}
!1251 = distinct !{!1251, !14, !16, !15}
!1252 = distinct !{!1252, !14}
!1253 = distinct !{!1253, !14, !22}
!1254 = distinct !{!1254, !14}
!1255 = distinct !{!1255, !14, !15, !16}
!1256 = distinct !{!1256, !14, !16, !15}
!1257 = distinct !{!1257, !14}
!1258 = distinct !{!1258, !14, !22}
!1259 = distinct !{!1259, !14}
!1260 = distinct !{!1260, !14, !15, !16}
!1261 = distinct !{!1261, !14, !16, !15}
!1262 = distinct !{!1262, !14}
!1263 = distinct !{!1263, !14, !22}
!1264 = distinct !{!1264, !14}
!1265 = distinct !{!1265, !14, !15, !16}
!1266 = distinct !{!1266, !14, !16, !15}
!1267 = distinct !{!1267, !14}
!1268 = distinct !{!1268, !14, !22}
!1269 = distinct !{!1269, !14}
!1270 = distinct !{!1270, !14, !15, !16}
!1271 = distinct !{!1271, !14, !16, !15}
!1272 = distinct !{!1272, !14}
!1273 = distinct !{!1273, !14, !22}
!1274 = distinct !{!1274, !14}
!1275 = distinct !{!1275, !14, !15, !16}
!1276 = distinct !{!1276, !14, !16, !15}
!1277 = distinct !{!1277, !14}
!1278 = distinct !{!1278, !14, !22}
!1279 = distinct !{!1279, !14}
!1280 = distinct !{!1280, !14, !15, !16}
!1281 = distinct !{!1281, !14, !16, !15}
!1282 = distinct !{!1282, !14}
!1283 = distinct !{!1283, !14, !22}
!1284 = distinct !{!1284, !14}
!1285 = distinct !{!1285, !14, !15, !16}
!1286 = distinct !{!1286, !14, !16, !15}
!1287 = distinct !{!1287, !14}
!1288 = distinct !{!1288, !14, !22}
!1289 = distinct !{!1289, !14}
!1290 = distinct !{!1290, !14, !15, !16}
!1291 = distinct !{!1291, !14, !16, !15}
!1292 = distinct !{!1292, !14}
!1293 = distinct !{!1293, !14, !22}
!1294 = distinct !{!1294, !14}
!1295 = distinct !{!1295, !14, !15, !16}
!1296 = distinct !{!1296, !14, !16, !15}
!1297 = distinct !{!1297, !14}
!1298 = distinct !{!1298, !14, !22}
!1299 = distinct !{!1299, !14}
!1300 = distinct !{!1300, !14, !15, !16}
!1301 = distinct !{!1301, !14, !16, !15}
!1302 = distinct !{!1302, !14}
!1303 = distinct !{!1303, !14, !22}
!1304 = distinct !{!1304, !14}
!1305 = distinct !{!1305, !14, !15, !16}
!1306 = distinct !{!1306, !14, !16, !15}
!1307 = distinct !{!1307, !14}
!1308 = distinct !{!1308, !14, !22}
!1309 = distinct !{!1309, !14}
!1310 = distinct !{!1310, !14, !15, !16}
!1311 = distinct !{!1311, !14, !16, !15}
!1312 = distinct !{!1312, !14}
!1313 = distinct !{!1313, !14, !22}
!1314 = distinct !{!1314, !14}
!1315 = distinct !{!1315, !14, !15, !16}
!1316 = distinct !{!1316, !14, !16, !15}
!1317 = distinct !{!1317, !14}
!1318 = distinct !{!1318, !14, !22}
!1319 = distinct !{!1319, !14}
!1320 = distinct !{!1320, !14, !15, !16}
!1321 = distinct !{!1321, !14, !16, !15}
!1322 = distinct !{!1322, !14}
!1323 = distinct !{!1323, !14, !22}
!1324 = distinct !{!1324, !14}
!1325 = distinct !{!1325, !14, !15, !16}
!1326 = distinct !{!1326, !14, !16, !15}
!1327 = distinct !{!1327, !14}
!1328 = distinct !{!1328, !14, !22}
!1329 = distinct !{!1329, !14}
!1330 = distinct !{!1330, !14, !15, !16}
!1331 = distinct !{!1331, !14, !16, !15}
!1332 = distinct !{!1332, !14}
!1333 = distinct !{!1333, !14, !22}
!1334 = distinct !{!1334, !14}
!1335 = distinct !{!1335, !14, !15, !16}
!1336 = distinct !{!1336, !14, !16, !15}
!1337 = distinct !{!1337, !14}
!1338 = distinct !{!1338, !14, !22}
!1339 = distinct !{!1339, !14}
!1340 = distinct !{!1340, !14, !15, !16}
!1341 = distinct !{!1341, !14, !16, !15}
!1342 = distinct !{!1342, !14}
!1343 = distinct !{!1343, !14, !22}
!1344 = distinct !{!1344, !14}
!1345 = distinct !{!1345, !14, !15, !16}
!1346 = distinct !{!1346, !14, !16, !15}
!1347 = distinct !{!1347, !14}
!1348 = distinct !{!1348, !14, !22}
!1349 = distinct !{!1349, !14}
!1350 = distinct !{!1350, !14, !15, !16}
!1351 = distinct !{!1351, !14, !16, !15}
!1352 = distinct !{!1352, !14}
!1353 = distinct !{!1353, !14, !22}
!1354 = distinct !{!1354, !14}
!1355 = distinct !{!1355, !14, !15, !16}
!1356 = distinct !{!1356, !14, !16, !15}
!1357 = distinct !{!1357, !14}
!1358 = distinct !{!1358, !14, !22}
!1359 = distinct !{!1359, !14}
!1360 = distinct !{!1360, !14, !15, !16}
!1361 = distinct !{!1361, !14, !16, !15}
!1362 = distinct !{!1362, !14}
!1363 = distinct !{!1363, !14, !22}
!1364 = distinct !{!1364, !14}
!1365 = distinct !{!1365, !14, !15, !16}
!1366 = distinct !{!1366, !14, !16, !15}
!1367 = distinct !{!1367, !14}
!1368 = distinct !{!1368, !14, !22}
!1369 = distinct !{!1369, !14}
!1370 = distinct !{!1370, !14, !15, !16}
!1371 = distinct !{!1371, !14, !16, !15}
!1372 = distinct !{!1372, !14}
!1373 = distinct !{!1373, !14, !22}
!1374 = distinct !{!1374, !14}
!1375 = distinct !{!1375, !14, !15, !16}
!1376 = distinct !{!1376, !14, !16, !15}
!1377 = distinct !{!1377, !14}
!1378 = distinct !{!1378, !14, !22}
!1379 = distinct !{!1379, !14}
!1380 = distinct !{!1380, !14, !15, !16}
!1381 = distinct !{!1381, !14, !16, !15}
!1382 = distinct !{!1382, !14}
!1383 = distinct !{!1383, !14, !22}
!1384 = distinct !{!1384, !14}
!1385 = distinct !{!1385, !14, !15, !16}
!1386 = distinct !{!1386, !14, !16, !15}
!1387 = distinct !{!1387, !14}
!1388 = distinct !{!1388, !14, !22}
!1389 = distinct !{!1389, !14}
!1390 = distinct !{!1390, !14, !15, !16}
!1391 = distinct !{!1391, !14, !16, !15}
!1392 = distinct !{!1392, !14}
!1393 = distinct !{!1393, !14, !22}
!1394 = distinct !{!1394, !14}
!1395 = distinct !{!1395, !14, !15, !16}
!1396 = distinct !{!1396, !14, !16, !15}
!1397 = distinct !{!1397, !14}
!1398 = distinct !{!1398, !14, !22}
!1399 = distinct !{!1399, !14}
!1400 = distinct !{!1400, !14, !15, !16}
!1401 = distinct !{!1401, !14, !16, !15}
!1402 = distinct !{!1402, !14}
!1403 = distinct !{!1403, !14, !22}
!1404 = distinct !{!1404, !14}
!1405 = distinct !{!1405, !14, !15, !16}
!1406 = distinct !{!1406, !14, !16, !15}
!1407 = distinct !{!1407, !14}
!1408 = distinct !{!1408, !14, !22}
!1409 = distinct !{!1409, !14}
!1410 = distinct !{!1410, !14, !15, !16}
!1411 = distinct !{!1411, !14, !16, !15}
!1412 = distinct !{!1412, !14}
!1413 = distinct !{!1413, !14, !22}
!1414 = distinct !{!1414, !14}
!1415 = distinct !{!1415, !14, !15, !16}
!1416 = distinct !{!1416, !14, !16, !15}
!1417 = distinct !{!1417, !14}
!1418 = distinct !{!1418, !14, !22}
!1419 = distinct !{!1419, !14}
!1420 = distinct !{!1420, !14, !15, !16}
!1421 = distinct !{!1421, !14, !16, !15}
!1422 = distinct !{!1422, !14}
!1423 = distinct !{!1423, !14, !22}
!1424 = distinct !{!1424, !14}
!1425 = distinct !{!1425, !14, !15, !16}
!1426 = distinct !{!1426, !14, !16, !15}
!1427 = distinct !{!1427, !14}
!1428 = distinct !{!1428, !14, !22}
!1429 = distinct !{!1429, !14}
!1430 = distinct !{!1430, !14, !15, !16}
!1431 = distinct !{!1431, !14, !16, !15}
!1432 = distinct !{!1432, !14}
!1433 = distinct !{!1433, !14, !22}
!1434 = distinct !{!1434, !14}
!1435 = distinct !{!1435, !14, !15, !16}
!1436 = distinct !{!1436, !14, !16, !15}
!1437 = distinct !{!1437, !14}
!1438 = distinct !{!1438, !14, !22}
!1439 = distinct !{!1439, !14}
!1440 = distinct !{!1440, !14, !15, !16}
!1441 = distinct !{!1441, !14, !16, !15}
!1442 = distinct !{!1442, !14}
!1443 = distinct !{!1443, !14, !22}
!1444 = distinct !{!1444, !14}
!1445 = distinct !{!1445, !14, !15, !16}
!1446 = distinct !{!1446, !14, !16, !15}
!1447 = distinct !{!1447, !14}
!1448 = distinct !{!1448, !14, !22}
!1449 = distinct !{!1449, !14}
!1450 = distinct !{!1450, !14, !15, !16}
!1451 = distinct !{!1451, !14, !16, !15}
!1452 = distinct !{!1452, !14}
!1453 = distinct !{!1453, !14, !22}
!1454 = distinct !{!1454, !14}
!1455 = distinct !{!1455, !14, !15, !16}
!1456 = distinct !{!1456, !14, !16, !15}
!1457 = distinct !{!1457, !14}
!1458 = distinct !{!1458, !14, !22}
!1459 = distinct !{!1459, !14}
!1460 = distinct !{!1460, !14, !15, !16}
!1461 = distinct !{!1461, !14, !16, !15}
!1462 = distinct !{!1462, !14}
!1463 = distinct !{!1463, !14, !22}
!1464 = distinct !{!1464, !14}
!1465 = distinct !{!1465, !14, !15, !16}
!1466 = distinct !{!1466, !14, !16, !15}
!1467 = distinct !{!1467, !14}
!1468 = distinct !{!1468, !14, !22}
!1469 = distinct !{!1469, !14}
!1470 = distinct !{!1470, !14, !15, !16}
!1471 = distinct !{!1471, !14, !16, !15}
!1472 = distinct !{!1472, !14}
!1473 = distinct !{!1473, !14, !22}
!1474 = distinct !{!1474, !14}
!1475 = distinct !{!1475, !14, !15, !16}
!1476 = distinct !{!1476, !14, !16, !15}
!1477 = distinct !{!1477, !14}
!1478 = distinct !{!1478, !14, !22}
!1479 = distinct !{!1479, !14}
!1480 = distinct !{!1480, !14, !15, !16}
!1481 = distinct !{!1481, !14, !16, !15}
!1482 = distinct !{!1482, !14}
!1483 = distinct !{!1483, !14, !22}
!1484 = distinct !{!1484, !14}
