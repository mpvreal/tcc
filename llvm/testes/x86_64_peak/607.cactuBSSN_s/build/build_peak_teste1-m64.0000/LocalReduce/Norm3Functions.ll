; ModuleID = 'LocalReduce/Norm3Functions.c'
source_filename = "LocalReduce/Norm3Functions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [29 x i8] c"LocalReduce/Norm3Functions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5560 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1247
    i32 104, label %1872
    i32 105, label %2489
    i32 106, label %3104
    i32 107, label %3720
    i32 108, label %4332
    i32 109, label %4948
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !12
  %30 = mul i8 %29, %29
  %31 = mul i8 %30, %29
  store i8 %31, ptr %26, align 1, !tbaa !12
  br label %5560

32:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %33
    i32 0, label %336
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !6
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5560

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %198

47:                                               ; preds = %33
  br i1 %37, label %48, label %5560

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %196
  %57 = phi i32 [ 0, %48 ], [ %148, %196 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %147, %196 ]
  %59 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !6
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !13

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !6
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !17

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !6
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !18

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !19
  %134 = getelementptr inbounds i8, ptr %24, i64 %131
  %135 = load i8, ptr %134, align 1, !tbaa !12
  %136 = load i8, ptr %26, align 1, !tbaa !12
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %133, %138
  %140 = fcmp fast olt double %139, 0.000000e+00
  %141 = fneg fast double %139
  %142 = select nnan ninf i1 %140, double %141, double %139
  %143 = fmul fast double %139, %139
  %144 = fmul fast double %143, %142
  %145 = fadd fast double %144, %137
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !12
  %147 = fadd fast double %133, %58
  %148 = add nuw nsw i32 %57, 1
  br i1 %50, label %149, label %196

149:                                              ; preds = %129
  %150 = load i32, ptr %4, align 4, !tbaa !6
  %151 = load i32, ptr %12, align 4, !tbaa !6
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !6
  %157 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %157, ptr %6, align 4, !tbaa !6
  br i1 %55, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !6
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !6
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !6
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !6
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !6
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !6
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %53
  br i1 %188, label %196, label %158, !llvm.loop !21

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !6
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !6
  br label %196

196:                                              ; preds = %183, %191, %156, %129
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %5560, label %56, !llvm.loop !23

198:                                              ; preds = %39, %334
  %199 = phi i32 [ 0, %39 ], [ %283, %334 ]
  %200 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %40, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %44, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %43, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %42, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !6
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !24

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !6
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !25

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !6
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !26

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

275:                                              ; preds = %270
  %276 = load i8, ptr %26, align 1, !tbaa !12
  %277 = sext i32 %271 to i64
  %278 = getelementptr inbounds i8, ptr %24, i64 %277
  %279 = load i8, ptr %278, align 1, !tbaa !12
  %280 = mul i8 %279, %279
  %281 = mul i8 %280, %279
  %282 = add i8 %281, %276
  store i8 %282, ptr %26, align 1, !tbaa !12
  %283 = add nuw nsw i32 %199, 1
  br i1 %41, label %284, label %334

284:                                              ; preds = %275
  %285 = load i32, ptr %4, align 4, !tbaa !6
  %286 = load i32, ptr %12, align 4, !tbaa !6
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %292, ptr %6, align 4, !tbaa !6
  br i1 %46, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !6
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !6
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !6
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %44
  br i1 %326, label %334, label %293, !llvm.loop !27

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !6
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !6
  br label %334

334:                                              ; preds = %321, %329, %291, %275
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5560, label %198, !llvm.loop !28

336:                                              ; preds = %32
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !6
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5560

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %492

350:                                              ; preds = %336
  br i1 %340, label %351, label %5560

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %490
  %360 = phi i32 [ 0, %351 ], [ %442, %490 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %441, %490 ]
  %362 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !6
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !29

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !6
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !30

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !6
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !31

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = load i8, ptr %26, align 1, !tbaa !12
  %435 = sext i32 %433 to i64
  %436 = getelementptr inbounds i8, ptr %24, i64 %435
  %437 = load i8, ptr %436, align 1, !tbaa !12
  %438 = mul i8 %437, %437
  %439 = mul i8 %438, %437
  %440 = add i8 %439, %434
  store i8 %440, ptr %26, align 1, !tbaa !12
  %441 = fadd fast double %361, 1.000000e+00
  %442 = add nuw nsw i32 %360, 1
  br i1 %353, label %443, label %490

443:                                              ; preds = %432
  %444 = load i32, ptr %4, align 4, !tbaa !6
  %445 = load i32, ptr %12, align 4, !tbaa !6
  %446 = add nsw i32 %445, -1
  %447 = icmp slt i32 %444, %446
  br i1 %447, label %467, label %448

448:                                              ; preds = %443
  %449 = icmp eq i32 %444, %446
  br i1 %449, label %450, label %483

450:                                              ; preds = %448
  store i32 0, ptr %4, align 4, !tbaa !6
  %451 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %451, ptr %6, align 4, !tbaa !6
  br i1 %358, label %490, label %452

452:                                              ; preds = %450, %477
  %453 = phi i64 [ %481, %477 ], [ 1, %450 ]
  %454 = getelementptr inbounds i32, ptr %4, i64 %453
  %455 = load i32, ptr %454, align 4, !tbaa !6
  %456 = getelementptr inbounds i32, ptr %12, i64 %453
  %457 = load i32, ptr %456, align 4, !tbaa !6
  %458 = add nsw i32 %457, -1
  %459 = icmp slt i32 %455, %458
  br i1 %459, label %460, label %475

460:                                              ; preds = %452
  br i1 %447, label %467, label %461

461:                                              ; preds = %460
  %462 = getelementptr inbounds i32, ptr %7, i64 %453
  %463 = load i32, ptr %462, align 4, !tbaa !6
  %464 = getelementptr inbounds i32, ptr %6, i64 %453
  %465 = load i32, ptr %464, align 4, !tbaa !6
  %466 = add nsw i32 %465, %463
  store i32 %466, ptr %464, align 4, !tbaa !6
  br label %485

467:                                              ; preds = %443, %460
  %468 = phi i32 [ %455, %460 ], [ %444, %443 ]
  %469 = phi ptr [ %454, %460 ], [ %4, %443 ]
  %470 = phi i64 [ %453, %460 ], [ 0, %443 ]
  %471 = add nsw i32 %468, 1
  store i32 %471, ptr %469, align 4, !tbaa !6
  %472 = getelementptr inbounds i32, ptr %7, i64 %470
  %473 = load i32, ptr %472, align 4, !tbaa !6
  %474 = getelementptr inbounds i32, ptr %6, i64 %470
  br label %485

475:                                              ; preds = %452
  %476 = icmp eq i32 %455, %458
  br i1 %476, label %477, label %483

477:                                              ; preds = %475
  store i32 0, ptr %454, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %8, i64 %453
  %479 = load i32, ptr %478, align 4, !tbaa !6
  %480 = getelementptr inbounds i32, ptr %6, i64 %453
  store i32 %479, ptr %480, align 4, !tbaa !6
  %481 = add nuw nsw i64 %453, 1
  %482 = icmp eq i64 %481, %356
  br i1 %482, label %490, label %452, !llvm.loop !32

483:                                              ; preds = %448, %475
  %484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

485:                                              ; preds = %461, %467
  %486 = phi ptr [ %474, %467 ], [ %454, %461 ]
  %487 = phi i32 [ %473, %467 ], [ 1, %461 ]
  %488 = load i32, ptr %486, align 4, !tbaa !6
  %489 = add nsw i32 %488, %487
  store i32 %489, ptr %486, align 4, !tbaa !6
  br label %490

490:                                              ; preds = %477, %485, %450, %432
  %491 = icmp eq i32 %442, %5
  br i1 %491, label %5560, label %359, !llvm.loop !33

492:                                              ; preds = %342, %628
  %493 = phi i32 [ 0, %342 ], [ %577, %628 ]
  %494 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %343, label %495, label %564

495:                                              ; preds = %492, %554
  %496 = phi i32 [ %563, %554 ], [ 0, %492 ]
  %497 = phi i64 [ %505, %554 ], [ %347, %492 ]
  %498 = phi i64 [ %562, %554 ], [ %346, %492 ]
  %499 = phi i32 [ %560, %554 ], [ %494, %492 ]
  %500 = sub i32 %345, %496
  %501 = tail call i32 @llvm.smin.i32(i32 %500, i32 0)
  %502 = sub i32 %500, %501
  %503 = zext i32 %502 to i64
  %504 = add nuw nsw i64 %503, 1
  %505 = add nsw i64 %497, -1
  %506 = icmp ult i32 %502, 31
  br i1 %506, label %542, label %507

507:                                              ; preds = %495
  %508 = and i64 %504, 8589934560
  %509 = sub i64 %498, %508
  br label %510

510:                                              ; preds = %510, %507
  %511 = phi i64 [ 0, %507 ], [ %534, %510 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %530, %510 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %531, %510 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %532, %510 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %533, %510 ]
  %516 = sub i64 %498, %511
  %517 = getelementptr inbounds i32, ptr %11, i64 %516
  %518 = getelementptr inbounds i32, ptr %517, i64 -7
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !6
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %517, i64 -15
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !6
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %517, i64 -23
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %517, i64 -31
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = mul <8 x i32> %520, %512
  %531 = mul <8 x i32> %523, %513
  %532 = mul <8 x i32> %526, %514
  %533 = mul <8 x i32> %529, %515
  %534 = add nuw i64 %511, 32
  %535 = icmp eq i64 %534, %508
  br i1 %535, label %536, label %510, !llvm.loop !34

536:                                              ; preds = %510
  %537 = mul <8 x i32> %531, %530
  %538 = mul <8 x i32> %532, %537
  %539 = mul <8 x i32> %533, %538
  %540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %539)
  %541 = icmp eq i64 %504, %508
  br i1 %541, label %554, label %542

542:                                              ; preds = %495, %536
  %543 = phi i64 [ %498, %495 ], [ %509, %536 ]
  %544 = phi i32 [ 1, %495 ], [ %540, %536 ]
  br label %545

545:                                              ; preds = %542, %545
  %546 = phi i64 [ %551, %545 ], [ %543, %542 ]
  %547 = phi i32 [ %550, %545 ], [ %544, %542 ]
  %548 = getelementptr inbounds i32, ptr %11, i64 %546
  %549 = load i32, ptr %548, align 4, !tbaa !6
  %550 = mul nsw i32 %549, %547
  %551 = add nsw i64 %546, -1
  %552 = trunc i64 %546 to i32
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %545, label %554, !llvm.loop !35

554:                                              ; preds = %545, %536
  %555 = phi i32 [ %540, %536 ], [ %550, %545 ]
  %556 = and i64 %505, 4294967295
  %557 = getelementptr inbounds i32, ptr %6, i64 %556
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %555
  %560 = add nsw i32 %559, %499
  %561 = icmp sgt i64 %497, 2
  %562 = add nsw i64 %498, -1
  %563 = add i32 %496, 1
  br i1 %561, label %495, label %564, !llvm.loop !36

564:                                              ; preds = %554, %492
  %565 = phi i32 [ %494, %492 ], [ %560, %554 ]
  %566 = icmp slt i32 %565, %5
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

569:                                              ; preds = %564
  %570 = load i8, ptr %26, align 1, !tbaa !12
  %571 = sext i32 %565 to i64
  %572 = getelementptr inbounds i8, ptr %24, i64 %571
  %573 = load i8, ptr %572, align 1, !tbaa !12
  %574 = mul i8 %573, %573
  %575 = mul i8 %574, %573
  %576 = add i8 %575, %570
  store i8 %576, ptr %26, align 1, !tbaa !12
  %577 = add nuw nsw i32 %493, 1
  br i1 %344, label %578, label %628

578:                                              ; preds = %569
  %579 = load i32, ptr %4, align 4, !tbaa !6
  %580 = load i32, ptr %12, align 4, !tbaa !6
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !6
  %586 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %586, ptr %6, align 4, !tbaa !6
  br i1 %349, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !6
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !6
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !6
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !6
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !6
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !6
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !6
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %347
  br i1 %620, label %628, label %587, !llvm.loop !37

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !6
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !6
  br label %628

628:                                              ; preds = %615, %623, %585, %569
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5560, label %492, !llvm.loop !38

630:                                              ; preds = %32
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 62, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !10
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !10
  store i32 0, ptr %636, align 4, !tbaa !6
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %643

638:                                              ; preds = %632
  %639 = load i8, ptr %634, align 1, !tbaa !12
  %640 = zext i8 %639 to i32
  %641 = mul nuw nsw i32 %640, %640
  %642 = mul nuw nsw i32 %641, %640
  store i32 %642, ptr %636, align 4, !tbaa !6
  br label %5560

643:                                              ; preds = %632
  switch i32 %1, label %1245 [
    i32 1, label %644
    i32 0, label %949
  ]

644:                                              ; preds = %643
  %645 = getelementptr inbounds i32, ptr %3, i64 %19
  %646 = load i32, ptr %645, align 4, !tbaa !6
  %647 = icmp eq i32 %646, 0
  %648 = icmp sgt i32 %5, 0
  br i1 %647, label %658, label %649

649:                                              ; preds = %644
  br i1 %648, label %650, label %5560

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %809

658:                                              ; preds = %644
  br i1 %648, label %659, label %5560

659:                                              ; preds = %658
  %660 = icmp sgt i32 %13, 1
  %661 = icmp sgt i32 %13, 0
  %662 = add i32 %13, -2
  %663 = zext i32 %662 to i64
  %664 = zext i32 %13 to i64
  %665 = add nuw i32 %5, 1
  %666 = icmp eq i32 %13, 1
  br label %667

667:                                              ; preds = %659, %807
  %668 = phi i32 [ 0, %659 ], [ %759, %807 ]
  %669 = phi double [ 0.000000e+00, %659 ], [ %758, %807 ]
  %670 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %660, label %671, label %740

671:                                              ; preds = %667, %730
  %672 = phi i32 [ %739, %730 ], [ 0, %667 ]
  %673 = phi i64 [ %681, %730 ], [ %664, %667 ]
  %674 = phi i64 [ %738, %730 ], [ %663, %667 ]
  %675 = phi i32 [ %736, %730 ], [ %670, %667 ]
  %676 = sub i32 %662, %672
  %677 = tail call i32 @llvm.smin.i32(i32 %676, i32 0)
  %678 = sub i32 %676, %677
  %679 = zext i32 %678 to i64
  %680 = add nuw nsw i64 %679, 1
  %681 = add nsw i64 %673, -1
  %682 = icmp ult i32 %678, 31
  br i1 %682, label %718, label %683

683:                                              ; preds = %671
  %684 = and i64 %680, 8589934560
  %685 = sub i64 %674, %684
  br label %686

686:                                              ; preds = %686, %683
  %687 = phi i64 [ 0, %683 ], [ %710, %686 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %683 ], [ %706, %686 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %683 ], [ %707, %686 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %683 ], [ %708, %686 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %683 ], [ %709, %686 ]
  %692 = sub i64 %674, %687
  %693 = getelementptr inbounds i32, ptr %9, i64 %692
  %694 = getelementptr inbounds i32, ptr %693, i64 -7
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !6
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = getelementptr inbounds i32, ptr %693, i64 -15
  %698 = load <8 x i32>, ptr %697, align 4, !tbaa !6
  %699 = shufflevector <8 x i32> %698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %700 = getelementptr inbounds i32, ptr %693, i64 -23
  %701 = load <8 x i32>, ptr %700, align 4, !tbaa !6
  %702 = shufflevector <8 x i32> %701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %703 = getelementptr inbounds i32, ptr %693, i64 -31
  %704 = load <8 x i32>, ptr %703, align 4, !tbaa !6
  %705 = shufflevector <8 x i32> %704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %706 = mul <8 x i32> %696, %688
  %707 = mul <8 x i32> %699, %689
  %708 = mul <8 x i32> %702, %690
  %709 = mul <8 x i32> %705, %691
  %710 = add nuw i64 %687, 32
  %711 = icmp eq i64 %710, %684
  br i1 %711, label %712, label %686, !llvm.loop !39

712:                                              ; preds = %686
  %713 = mul <8 x i32> %707, %706
  %714 = mul <8 x i32> %708, %713
  %715 = mul <8 x i32> %709, %714
  %716 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %715)
  %717 = icmp eq i64 %680, %684
  br i1 %717, label %730, label %718

718:                                              ; preds = %671, %712
  %719 = phi i64 [ %674, %671 ], [ %685, %712 ]
  %720 = phi i32 [ 1, %671 ], [ %716, %712 ]
  br label %721

721:                                              ; preds = %718, %721
  %722 = phi i64 [ %727, %721 ], [ %719, %718 ]
  %723 = phi i32 [ %726, %721 ], [ %720, %718 ]
  %724 = getelementptr inbounds i32, ptr %9, i64 %722
  %725 = load i32, ptr %724, align 4, !tbaa !6
  %726 = mul nsw i32 %725, %723
  %727 = add nsw i64 %722, -1
  %728 = trunc i64 %722 to i32
  %729 = icmp sgt i32 %728, 0
  br i1 %729, label %721, label %730, !llvm.loop !40

730:                                              ; preds = %721, %712
  %731 = phi i32 [ %716, %712 ], [ %726, %721 ]
  %732 = and i64 %681, 4294967295
  %733 = getelementptr inbounds i32, ptr %6, i64 %732
  %734 = load i32, ptr %733, align 4, !tbaa !6
  %735 = mul nsw i32 %734, %731
  %736 = add nsw i32 %735, %675
  %737 = icmp sgt i64 %673, 2
  %738 = add nsw i64 %674, -1
  %739 = add i32 %672, 1
  br i1 %737, label %671, label %740, !llvm.loop !41

740:                                              ; preds = %730, %667
  %741 = phi i32 [ %670, %667 ], [ %736, %730 ]
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds double, ptr %2, i64 %742
  %744 = load double, ptr %743, align 8, !tbaa !19
  %745 = getelementptr inbounds i8, ptr %634, i64 %742
  %746 = load i8, ptr %745, align 1, !tbaa !12
  %747 = load i32, ptr %636, align 4, !tbaa !6
  %748 = sitofp i32 %747 to double
  %749 = uitofp i8 %746 to double
  %750 = fmul fast double %744, %749
  %751 = fcmp fast olt double %750, 0.000000e+00
  %752 = fneg fast double %750
  %753 = select nnan ninf i1 %751, double %752, double %750
  %754 = fmul fast double %750, %750
  %755 = fmul fast double %754, %753
  %756 = fadd fast double %755, %748
  %757 = fptosi double %756 to i32
  store i32 %757, ptr %636, align 4, !tbaa !6
  %758 = fadd fast double %744, %669
  %759 = add nuw nsw i32 %668, 1
  br i1 %661, label %760, label %807

760:                                              ; preds = %740
  %761 = load i32, ptr %4, align 4, !tbaa !6
  %762 = load i32, ptr %12, align 4, !tbaa !6
  %763 = add nsw i32 %762, -1
  %764 = icmp slt i32 %761, %763
  br i1 %764, label %784, label %765

765:                                              ; preds = %760
  %766 = icmp eq i32 %761, %763
  br i1 %766, label %767, label %800

767:                                              ; preds = %765
  store i32 0, ptr %4, align 4, !tbaa !6
  %768 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %768, ptr %6, align 4, !tbaa !6
  br i1 %666, label %807, label %769

769:                                              ; preds = %767, %794
  %770 = phi i64 [ %798, %794 ], [ 1, %767 ]
  %771 = getelementptr inbounds i32, ptr %4, i64 %770
  %772 = load i32, ptr %771, align 4, !tbaa !6
  %773 = getelementptr inbounds i32, ptr %12, i64 %770
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = add nsw i32 %774, -1
  %776 = icmp slt i32 %772, %775
  br i1 %776, label %777, label %792

777:                                              ; preds = %769
  br i1 %764, label %784, label %778

778:                                              ; preds = %777
  %779 = getelementptr inbounds i32, ptr %7, i64 %770
  %780 = load i32, ptr %779, align 4, !tbaa !6
  %781 = getelementptr inbounds i32, ptr %6, i64 %770
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = add nsw i32 %782, %780
  store i32 %783, ptr %781, align 4, !tbaa !6
  br label %802

784:                                              ; preds = %760, %777
  %785 = phi i32 [ %772, %777 ], [ %761, %760 ]
  %786 = phi ptr [ %771, %777 ], [ %4, %760 ]
  %787 = phi i64 [ %770, %777 ], [ 0, %760 ]
  %788 = add nsw i32 %785, 1
  store i32 %788, ptr %786, align 4, !tbaa !6
  %789 = getelementptr inbounds i32, ptr %7, i64 %787
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %6, i64 %787
  br label %802

792:                                              ; preds = %769
  %793 = icmp eq i32 %772, %775
  br i1 %793, label %794, label %800

794:                                              ; preds = %792
  store i32 0, ptr %771, align 4, !tbaa !6
  %795 = getelementptr inbounds i32, ptr %8, i64 %770
  %796 = load i32, ptr %795, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %6, i64 %770
  store i32 %796, ptr %797, align 4, !tbaa !6
  %798 = add nuw nsw i64 %770, 1
  %799 = icmp eq i64 %798, %664
  br i1 %799, label %807, label %769, !llvm.loop !42

800:                                              ; preds = %765, %792
  %801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

802:                                              ; preds = %778, %784
  %803 = phi ptr [ %791, %784 ], [ %771, %778 ]
  %804 = phi i32 [ %790, %784 ], [ 1, %778 ]
  %805 = load i32, ptr %803, align 4, !tbaa !6
  %806 = add nsw i32 %805, %804
  store i32 %806, ptr %803, align 4, !tbaa !6
  br label %807

807:                                              ; preds = %794, %802, %767, %740
  %808 = icmp eq i32 %759, %5
  br i1 %808, label %5560, label %667, !llvm.loop !43

809:                                              ; preds = %650, %947
  %810 = phi i32 [ 0, %650 ], [ %896, %947 ]
  %811 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %651, label %812, label %881

812:                                              ; preds = %809, %871
  %813 = phi i32 [ %880, %871 ], [ 0, %809 ]
  %814 = phi i64 [ %822, %871 ], [ %655, %809 ]
  %815 = phi i64 [ %879, %871 ], [ %654, %809 ]
  %816 = phi i32 [ %877, %871 ], [ %811, %809 ]
  %817 = sub i32 %653, %813
  %818 = tail call i32 @llvm.smin.i32(i32 %817, i32 0)
  %819 = sub i32 %817, %818
  %820 = zext i32 %819 to i64
  %821 = add nuw nsw i64 %820, 1
  %822 = add nsw i64 %814, -1
  %823 = icmp ult i32 %819, 31
  br i1 %823, label %859, label %824

824:                                              ; preds = %812
  %825 = and i64 %821, 8589934560
  %826 = sub i64 %815, %825
  br label %827

827:                                              ; preds = %827, %824
  %828 = phi i64 [ 0, %824 ], [ %851, %827 ]
  %829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %824 ], [ %847, %827 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %824 ], [ %848, %827 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %824 ], [ %849, %827 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %824 ], [ %850, %827 ]
  %833 = sub i64 %815, %828
  %834 = getelementptr inbounds i32, ptr %11, i64 %833
  %835 = getelementptr inbounds i32, ptr %834, i64 -7
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !6
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %834, i64 -15
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !6
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = getelementptr inbounds i32, ptr %834, i64 -23
  %842 = load <8 x i32>, ptr %841, align 4, !tbaa !6
  %843 = shufflevector <8 x i32> %842, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %844 = getelementptr inbounds i32, ptr %834, i64 -31
  %845 = load <8 x i32>, ptr %844, align 4, !tbaa !6
  %846 = shufflevector <8 x i32> %845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %847 = mul <8 x i32> %837, %829
  %848 = mul <8 x i32> %840, %830
  %849 = mul <8 x i32> %843, %831
  %850 = mul <8 x i32> %846, %832
  %851 = add nuw i64 %828, 32
  %852 = icmp eq i64 %851, %825
  br i1 %852, label %853, label %827, !llvm.loop !44

853:                                              ; preds = %827
  %854 = mul <8 x i32> %848, %847
  %855 = mul <8 x i32> %849, %854
  %856 = mul <8 x i32> %850, %855
  %857 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %856)
  %858 = icmp eq i64 %821, %825
  br i1 %858, label %871, label %859

859:                                              ; preds = %812, %853
  %860 = phi i64 [ %815, %812 ], [ %826, %853 ]
  %861 = phi i32 [ 1, %812 ], [ %857, %853 ]
  br label %862

862:                                              ; preds = %859, %862
  %863 = phi i64 [ %868, %862 ], [ %860, %859 ]
  %864 = phi i32 [ %867, %862 ], [ %861, %859 ]
  %865 = getelementptr inbounds i32, ptr %11, i64 %863
  %866 = load i32, ptr %865, align 4, !tbaa !6
  %867 = mul nsw i32 %866, %864
  %868 = add nsw i64 %863, -1
  %869 = trunc i64 %863 to i32
  %870 = icmp sgt i32 %869, 0
  br i1 %870, label %862, label %871, !llvm.loop !45

871:                                              ; preds = %862, %853
  %872 = phi i32 [ %857, %853 ], [ %867, %862 ]
  %873 = and i64 %822, 4294967295
  %874 = getelementptr inbounds i32, ptr %6, i64 %873
  %875 = load i32, ptr %874, align 4, !tbaa !6
  %876 = mul nsw i32 %875, %872
  %877 = add nsw i32 %876, %816
  %878 = icmp sgt i64 %814, 2
  %879 = add nsw i64 %815, -1
  %880 = add i32 %813, 1
  br i1 %878, label %812, label %881, !llvm.loop !46

881:                                              ; preds = %871, %809
  %882 = phi i32 [ %811, %809 ], [ %877, %871 ]
  %883 = icmp slt i32 %882, %5
  br i1 %883, label %886, label %884

884:                                              ; preds = %881
  %885 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

886:                                              ; preds = %881
  %887 = load i32, ptr %636, align 4, !tbaa !6
  %888 = sext i32 %882 to i64
  %889 = getelementptr inbounds i8, ptr %634, i64 %888
  %890 = load i8, ptr %889, align 1, !tbaa !12
  %891 = zext i8 %890 to i64
  %892 = mul nuw nsw i64 %891, %891
  %893 = mul nuw nsw i64 %892, %891
  %894 = trunc i64 %893 to i32
  %895 = add i32 %887, %894
  store i32 %895, ptr %636, align 4, !tbaa !6
  %896 = add nuw nsw i32 %810, 1
  br i1 %652, label %897, label %947

897:                                              ; preds = %886
  %898 = load i32, ptr %4, align 4, !tbaa !6
  %899 = load i32, ptr %12, align 4, !tbaa !6
  %900 = add nsw i32 %899, -1
  %901 = icmp slt i32 %898, %900
  br i1 %901, label %924, label %902

902:                                              ; preds = %897
  %903 = icmp eq i32 %898, %900
  br i1 %903, label %904, label %940

904:                                              ; preds = %902
  store i32 0, ptr %4, align 4, !tbaa !6
  %905 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %905, ptr %6, align 4, !tbaa !6
  br i1 %657, label %947, label %906

906:                                              ; preds = %904, %934
  %907 = phi i64 [ %938, %934 ], [ 1, %904 ]
  %908 = getelementptr inbounds i32, ptr %4, i64 %907
  %909 = load i32, ptr %908, align 4, !tbaa !6
  %910 = getelementptr inbounds i32, ptr %12, i64 %907
  %911 = load i32, ptr %910, align 4, !tbaa !6
  %912 = add nsw i32 %911, -1
  %913 = icmp slt i32 %909, %912
  br i1 %913, label %914, label %932

914:                                              ; preds = %906
  br i1 %901, label %924, label %915

915:                                              ; preds = %914
  %916 = shl i64 %907, 32
  %917 = add i64 %916, -4294967296
  %918 = ashr exact i64 %917, 32
  %919 = getelementptr inbounds i32, ptr %7, i64 %918
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %907
  %922 = load i32, ptr %921, align 4, !tbaa !6
  %923 = add nsw i32 %922, %920
  store i32 %923, ptr %921, align 4, !tbaa !6
  br label %942

924:                                              ; preds = %897, %914
  %925 = phi i32 [ %909, %914 ], [ %898, %897 ]
  %926 = phi ptr [ %908, %914 ], [ %4, %897 ]
  %927 = phi i64 [ %907, %914 ], [ 0, %897 ]
  %928 = add nsw i32 %925, 1
  store i32 %928, ptr %926, align 4, !tbaa !6
  %929 = getelementptr inbounds i32, ptr %7, i64 %927
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %6, i64 %927
  br label %942

932:                                              ; preds = %906
  %933 = icmp eq i32 %909, %912
  br i1 %933, label %934, label %940

934:                                              ; preds = %932
  store i32 0, ptr %908, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %8, i64 %907
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = getelementptr inbounds i32, ptr %6, i64 %907
  store i32 %936, ptr %937, align 4, !tbaa !6
  %938 = add nuw nsw i64 %907, 1
  %939 = icmp eq i64 %938, %655
  br i1 %939, label %947, label %906, !llvm.loop !47

940:                                              ; preds = %902, %932
  %941 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

942:                                              ; preds = %915, %924
  %943 = phi ptr [ %931, %924 ], [ %908, %915 ]
  %944 = phi i32 [ %930, %924 ], [ 1, %915 ]
  %945 = load i32, ptr %943, align 4, !tbaa !6
  %946 = add nsw i32 %945, %944
  store i32 %946, ptr %943, align 4, !tbaa !6
  br label %947

947:                                              ; preds = %934, %942, %904, %886
  %948 = icmp eq i32 %896, %5
  br i1 %948, label %5560, label %809, !llvm.loop !48

949:                                              ; preds = %643
  %950 = getelementptr inbounds i32, ptr %3, i64 %19
  %951 = load i32, ptr %950, align 4, !tbaa !6
  %952 = icmp eq i32 %951, 0
  %953 = icmp sgt i32 %5, 0
  br i1 %952, label %963, label %954

954:                                              ; preds = %949
  br i1 %953, label %955, label %5560

955:                                              ; preds = %954
  %956 = icmp sgt i32 %13, 1
  %957 = icmp sgt i32 %13, 0
  %958 = add i32 %13, -2
  %959 = zext i32 %958 to i64
  %960 = zext i32 %13 to i64
  %961 = add nuw i32 %5, 1
  %962 = icmp eq i32 %13, 1
  br label %1106

963:                                              ; preds = %949
  br i1 %953, label %964, label %5560

964:                                              ; preds = %963
  %965 = icmp sgt i32 %13, 1
  %966 = icmp sgt i32 %13, 0
  %967 = add i32 %13, -2
  %968 = zext i32 %967 to i64
  %969 = zext i32 %13 to i64
  %970 = add nuw i32 %5, 1
  %971 = icmp eq i32 %13, 1
  br label %972

972:                                              ; preds = %964, %1104
  %973 = phi i32 [ 0, %964 ], [ %1056, %1104 ]
  %974 = phi double [ 0.000000e+00, %964 ], [ %1055, %1104 ]
  %975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %965, label %976, label %1045

976:                                              ; preds = %972, %1035
  %977 = phi i32 [ %1044, %1035 ], [ 0, %972 ]
  %978 = phi i64 [ %986, %1035 ], [ %969, %972 ]
  %979 = phi i64 [ %1043, %1035 ], [ %968, %972 ]
  %980 = phi i32 [ %1041, %1035 ], [ %975, %972 ]
  %981 = sub i32 %967, %977
  %982 = tail call i32 @llvm.smin.i32(i32 %981, i32 0)
  %983 = sub i32 %981, %982
  %984 = zext i32 %983 to i64
  %985 = add nuw nsw i64 %984, 1
  %986 = add nsw i64 %978, -1
  %987 = icmp ult i32 %983, 31
  br i1 %987, label %1023, label %988

988:                                              ; preds = %976
  %989 = and i64 %985, 8589934560
  %990 = sub i64 %979, %989
  br label %991

991:                                              ; preds = %991, %988
  %992 = phi i64 [ 0, %988 ], [ %1015, %991 ]
  %993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %988 ], [ %1011, %991 ]
  %994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %988 ], [ %1012, %991 ]
  %995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %988 ], [ %1013, %991 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %988 ], [ %1014, %991 ]
  %997 = sub i64 %979, %992
  %998 = getelementptr inbounds i32, ptr %9, i64 %997
  %999 = getelementptr inbounds i32, ptr %998, i64 -7
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !6
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %998, i64 -15
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !6
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = getelementptr inbounds i32, ptr %998, i64 -23
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !6
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %998, i64 -31
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !6
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = mul <8 x i32> %1001, %993
  %1012 = mul <8 x i32> %1004, %994
  %1013 = mul <8 x i32> %1007, %995
  %1014 = mul <8 x i32> %1010, %996
  %1015 = add nuw i64 %992, 32
  %1016 = icmp eq i64 %1015, %989
  br i1 %1016, label %1017, label %991, !llvm.loop !49

1017:                                             ; preds = %991
  %1018 = mul <8 x i32> %1012, %1011
  %1019 = mul <8 x i32> %1013, %1018
  %1020 = mul <8 x i32> %1014, %1019
  %1021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1020)
  %1022 = icmp eq i64 %985, %989
  br i1 %1022, label %1035, label %1023

1023:                                             ; preds = %976, %1017
  %1024 = phi i64 [ %979, %976 ], [ %990, %1017 ]
  %1025 = phi i32 [ 1, %976 ], [ %1021, %1017 ]
  br label %1026

1026:                                             ; preds = %1023, %1026
  %1027 = phi i64 [ %1032, %1026 ], [ %1024, %1023 ]
  %1028 = phi i32 [ %1031, %1026 ], [ %1025, %1023 ]
  %1029 = getelementptr inbounds i32, ptr %9, i64 %1027
  %1030 = load i32, ptr %1029, align 4, !tbaa !6
  %1031 = mul nsw i32 %1030, %1028
  %1032 = add nsw i64 %1027, -1
  %1033 = trunc i64 %1027 to i32
  %1034 = icmp sgt i32 %1033, 0
  br i1 %1034, label %1026, label %1035, !llvm.loop !50

1035:                                             ; preds = %1026, %1017
  %1036 = phi i32 [ %1021, %1017 ], [ %1031, %1026 ]
  %1037 = and i64 %986, 4294967295
  %1038 = getelementptr inbounds i32, ptr %6, i64 %1037
  %1039 = load i32, ptr %1038, align 4, !tbaa !6
  %1040 = mul nsw i32 %1039, %1036
  %1041 = add nsw i32 %1040, %980
  %1042 = icmp sgt i64 %978, 2
  %1043 = add nsw i64 %979, -1
  %1044 = add i32 %977, 1
  br i1 %1042, label %976, label %1045, !llvm.loop !51

1045:                                             ; preds = %1035, %972
  %1046 = phi i32 [ %975, %972 ], [ %1041, %1035 ]
  %1047 = load i32, ptr %636, align 4, !tbaa !6
  %1048 = sext i32 %1046 to i64
  %1049 = getelementptr inbounds i8, ptr %634, i64 %1048
  %1050 = load i8, ptr %1049, align 1, !tbaa !12
  %1051 = zext i8 %1050 to i32
  %1052 = mul nuw nsw i32 %1051, %1051
  %1053 = mul nuw nsw i32 %1052, %1051
  %1054 = add nsw i32 %1053, %1047
  store i32 %1054, ptr %636, align 4, !tbaa !6
  %1055 = fadd fast double %974, 1.000000e+00
  %1056 = add nuw nsw i32 %973, 1
  br i1 %966, label %1057, label %1104

1057:                                             ; preds = %1045
  %1058 = load i32, ptr %4, align 4, !tbaa !6
  %1059 = load i32, ptr %12, align 4, !tbaa !6
  %1060 = add nsw i32 %1059, -1
  %1061 = icmp slt i32 %1058, %1060
  br i1 %1061, label %1081, label %1062

1062:                                             ; preds = %1057
  %1063 = icmp eq i32 %1058, %1060
  br i1 %1063, label %1064, label %1097

1064:                                             ; preds = %1062
  store i32 0, ptr %4, align 4, !tbaa !6
  %1065 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1065, ptr %6, align 4, !tbaa !6
  br i1 %971, label %1104, label %1066

1066:                                             ; preds = %1064, %1091
  %1067 = phi i64 [ %1095, %1091 ], [ 1, %1064 ]
  %1068 = getelementptr inbounds i32, ptr %4, i64 %1067
  %1069 = load i32, ptr %1068, align 4, !tbaa !6
  %1070 = getelementptr inbounds i32, ptr %12, i64 %1067
  %1071 = load i32, ptr %1070, align 4, !tbaa !6
  %1072 = add nsw i32 %1071, -1
  %1073 = icmp slt i32 %1069, %1072
  br i1 %1073, label %1074, label %1089

1074:                                             ; preds = %1066
  br i1 %1061, label %1081, label %1075

1075:                                             ; preds = %1074
  %1076 = getelementptr inbounds i32, ptr %7, i64 %1067
  %1077 = load i32, ptr %1076, align 4, !tbaa !6
  %1078 = getelementptr inbounds i32, ptr %6, i64 %1067
  %1079 = load i32, ptr %1078, align 4, !tbaa !6
  %1080 = add nsw i32 %1079, %1077
  store i32 %1080, ptr %1078, align 4, !tbaa !6
  br label %1099

1081:                                             ; preds = %1057, %1074
  %1082 = phi i32 [ %1069, %1074 ], [ %1058, %1057 ]
  %1083 = phi ptr [ %1068, %1074 ], [ %4, %1057 ]
  %1084 = phi i64 [ %1067, %1074 ], [ 0, %1057 ]
  %1085 = add nsw i32 %1082, 1
  store i32 %1085, ptr %1083, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %7, i64 %1084
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1084
  br label %1099

1089:                                             ; preds = %1066
  %1090 = icmp eq i32 %1069, %1072
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1089
  store i32 0, ptr %1068, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %8, i64 %1067
  %1093 = load i32, ptr %1092, align 4, !tbaa !6
  %1094 = getelementptr inbounds i32, ptr %6, i64 %1067
  store i32 %1093, ptr %1094, align 4, !tbaa !6
  %1095 = add nuw nsw i64 %1067, 1
  %1096 = icmp eq i64 %1095, %969
  br i1 %1096, label %1104, label %1066, !llvm.loop !52

1097:                                             ; preds = %1062, %1089
  %1098 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1099:                                             ; preds = %1075, %1081
  %1100 = phi ptr [ %1088, %1081 ], [ %1068, %1075 ]
  %1101 = phi i32 [ %1087, %1081 ], [ 1, %1075 ]
  %1102 = load i32, ptr %1100, align 4, !tbaa !6
  %1103 = add nsw i32 %1102, %1101
  store i32 %1103, ptr %1100, align 4, !tbaa !6
  br label %1104

1104:                                             ; preds = %1091, %1099, %1064, %1045
  %1105 = icmp eq i32 %1056, %5
  br i1 %1105, label %5560, label %972, !llvm.loop !53

1106:                                             ; preds = %955, %1243
  %1107 = phi i32 [ 0, %955 ], [ %1192, %1243 ]
  %1108 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %956, label %1109, label %1178

1109:                                             ; preds = %1106, %1168
  %1110 = phi i32 [ %1177, %1168 ], [ 0, %1106 ]
  %1111 = phi i64 [ %1119, %1168 ], [ %960, %1106 ]
  %1112 = phi i64 [ %1176, %1168 ], [ %959, %1106 ]
  %1113 = phi i32 [ %1174, %1168 ], [ %1108, %1106 ]
  %1114 = sub i32 %958, %1110
  %1115 = tail call i32 @llvm.smin.i32(i32 %1114, i32 0)
  %1116 = sub i32 %1114, %1115
  %1117 = zext i32 %1116 to i64
  %1118 = add nuw nsw i64 %1117, 1
  %1119 = add nsw i64 %1111, -1
  %1120 = icmp ult i32 %1116, 31
  br i1 %1120, label %1156, label %1121

1121:                                             ; preds = %1109
  %1122 = and i64 %1118, 8589934560
  %1123 = sub i64 %1112, %1122
  br label %1124

1124:                                             ; preds = %1124, %1121
  %1125 = phi i64 [ 0, %1121 ], [ %1148, %1124 ]
  %1126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1144, %1124 ]
  %1127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1145, %1124 ]
  %1128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1146, %1124 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1147, %1124 ]
  %1130 = sub i64 %1112, %1125
  %1131 = getelementptr inbounds i32, ptr %11, i64 %1130
  %1132 = getelementptr inbounds i32, ptr %1131, i64 -7
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !6
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = getelementptr inbounds i32, ptr %1131, i64 -15
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !6
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = getelementptr inbounds i32, ptr %1131, i64 -23
  %1139 = load <8 x i32>, ptr %1138, align 4, !tbaa !6
  %1140 = shufflevector <8 x i32> %1139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1141 = getelementptr inbounds i32, ptr %1131, i64 -31
  %1142 = load <8 x i32>, ptr %1141, align 4, !tbaa !6
  %1143 = shufflevector <8 x i32> %1142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1144 = mul <8 x i32> %1134, %1126
  %1145 = mul <8 x i32> %1137, %1127
  %1146 = mul <8 x i32> %1140, %1128
  %1147 = mul <8 x i32> %1143, %1129
  %1148 = add nuw i64 %1125, 32
  %1149 = icmp eq i64 %1148, %1122
  br i1 %1149, label %1150, label %1124, !llvm.loop !54

1150:                                             ; preds = %1124
  %1151 = mul <8 x i32> %1145, %1144
  %1152 = mul <8 x i32> %1146, %1151
  %1153 = mul <8 x i32> %1147, %1152
  %1154 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1153)
  %1155 = icmp eq i64 %1118, %1122
  br i1 %1155, label %1168, label %1156

1156:                                             ; preds = %1109, %1150
  %1157 = phi i64 [ %1112, %1109 ], [ %1123, %1150 ]
  %1158 = phi i32 [ 1, %1109 ], [ %1154, %1150 ]
  br label %1159

1159:                                             ; preds = %1156, %1159
  %1160 = phi i64 [ %1165, %1159 ], [ %1157, %1156 ]
  %1161 = phi i32 [ %1164, %1159 ], [ %1158, %1156 ]
  %1162 = getelementptr inbounds i32, ptr %11, i64 %1160
  %1163 = load i32, ptr %1162, align 4, !tbaa !6
  %1164 = mul nsw i32 %1163, %1161
  %1165 = add nsw i64 %1160, -1
  %1166 = trunc i64 %1160 to i32
  %1167 = icmp sgt i32 %1166, 0
  br i1 %1167, label %1159, label %1168, !llvm.loop !55

1168:                                             ; preds = %1159, %1150
  %1169 = phi i32 [ %1154, %1150 ], [ %1164, %1159 ]
  %1170 = and i64 %1119, 4294967295
  %1171 = getelementptr inbounds i32, ptr %6, i64 %1170
  %1172 = load i32, ptr %1171, align 4, !tbaa !6
  %1173 = mul nsw i32 %1172, %1169
  %1174 = add nsw i32 %1173, %1113
  %1175 = icmp sgt i64 %1111, 2
  %1176 = add nsw i64 %1112, -1
  %1177 = add i32 %1110, 1
  br i1 %1175, label %1109, label %1178, !llvm.loop !56

1178:                                             ; preds = %1168, %1106
  %1179 = phi i32 [ %1108, %1106 ], [ %1174, %1168 ]
  %1180 = icmp slt i32 %1179, %5
  br i1 %1180, label %1183, label %1181

1181:                                             ; preds = %1178
  %1182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

1183:                                             ; preds = %1178
  %1184 = load i32, ptr %636, align 4, !tbaa !6
  %1185 = sext i32 %1179 to i64
  %1186 = getelementptr inbounds i8, ptr %634, i64 %1185
  %1187 = load i8, ptr %1186, align 1, !tbaa !12
  %1188 = zext i8 %1187 to i32
  %1189 = mul nuw nsw i32 %1188, %1188
  %1190 = mul nuw nsw i32 %1189, %1188
  %1191 = add nsw i32 %1190, %1184
  store i32 %1191, ptr %636, align 4, !tbaa !6
  %1192 = add nuw nsw i32 %1107, 1
  br i1 %957, label %1193, label %1243

1193:                                             ; preds = %1183
  %1194 = load i32, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %12, align 4, !tbaa !6
  %1196 = add nsw i32 %1195, -1
  %1197 = icmp slt i32 %1194, %1196
  br i1 %1197, label %1220, label %1198

1198:                                             ; preds = %1193
  %1199 = icmp eq i32 %1194, %1196
  br i1 %1199, label %1200, label %1236

1200:                                             ; preds = %1198
  store i32 0, ptr %4, align 4, !tbaa !6
  %1201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1201, ptr %6, align 4, !tbaa !6
  br i1 %962, label %1243, label %1202

1202:                                             ; preds = %1200, %1230
  %1203 = phi i64 [ %1234, %1230 ], [ 1, %1200 ]
  %1204 = getelementptr inbounds i32, ptr %4, i64 %1203
  %1205 = load i32, ptr %1204, align 4, !tbaa !6
  %1206 = getelementptr inbounds i32, ptr %12, i64 %1203
  %1207 = load i32, ptr %1206, align 4, !tbaa !6
  %1208 = add nsw i32 %1207, -1
  %1209 = icmp slt i32 %1205, %1208
  br i1 %1209, label %1210, label %1228

1210:                                             ; preds = %1202
  br i1 %1197, label %1220, label %1211

1211:                                             ; preds = %1210
  %1212 = shl i64 %1203, 32
  %1213 = add i64 %1212, -4294967296
  %1214 = ashr exact i64 %1213, 32
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1214
  %1216 = load i32, ptr %1215, align 4, !tbaa !6
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1203
  %1218 = load i32, ptr %1217, align 4, !tbaa !6
  %1219 = add nsw i32 %1218, %1216
  store i32 %1219, ptr %1217, align 4, !tbaa !6
  br label %1238

1220:                                             ; preds = %1193, %1210
  %1221 = phi i32 [ %1205, %1210 ], [ %1194, %1193 ]
  %1222 = phi ptr [ %1204, %1210 ], [ %4, %1193 ]
  %1223 = phi i64 [ %1203, %1210 ], [ 0, %1193 ]
  %1224 = add nsw i32 %1221, 1
  store i32 %1224, ptr %1222, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %7, i64 %1223
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1223
  br label %1238

1228:                                             ; preds = %1202
  %1229 = icmp eq i32 %1205, %1208
  br i1 %1229, label %1230, label %1236

1230:                                             ; preds = %1228
  store i32 0, ptr %1204, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %8, i64 %1203
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = getelementptr inbounds i32, ptr %6, i64 %1203
  store i32 %1232, ptr %1233, align 4, !tbaa !6
  %1234 = add nuw nsw i64 %1203, 1
  %1235 = icmp eq i64 %1234, %960
  br i1 %1235, label %1243, label %1202, !llvm.loop !57

1236:                                             ; preds = %1198, %1228
  %1237 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1238:                                             ; preds = %1211, %1220
  %1239 = phi ptr [ %1227, %1220 ], [ %1204, %1211 ]
  %1240 = phi i32 [ %1226, %1220 ], [ 1, %1211 ]
  %1241 = load i32, ptr %1239, align 4, !tbaa !6
  %1242 = add nsw i32 %1241, %1240
  store i32 %1242, ptr %1239, align 4, !tbaa !6
  br label %1243

1243:                                             ; preds = %1230, %1238, %1200, %1183
  %1244 = icmp eq i32 %1192, %5
  br i1 %1244, label %5560, label %1106, !llvm.loop !58

1245:                                             ; preds = %643
  %1246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

1247:                                             ; preds = %18
  %1248 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1249 = load ptr, ptr %1248, align 8, !tbaa !10
  %1250 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1251 = load ptr, ptr %1250, align 8, !tbaa !10
  store i8 0, ptr %1251, align 1, !tbaa !12
  %1252 = icmp eq i32 %13, 0
  br i1 %1252, label %1253, label %1260

1253:                                             ; preds = %1247
  %1254 = load i8, ptr %1249, align 1, !tbaa !12
  %1255 = icmp slt i8 %1254, 0
  %1256 = mul i8 %1254, %1254
  %1257 = sub i8 0, %1256
  %1258 = select i1 %1255, i8 %1257, i8 %1256
  %1259 = mul i8 %1258, %1254
  store i8 %1259, ptr %1251, align 1, !tbaa !12
  br label %5560

1260:                                             ; preds = %1247
  switch i32 %1, label %1870 [
    i32 1, label %1261
    i32 0, label %1570
  ]

1261:                                             ; preds = %1260
  %1262 = getelementptr inbounds i32, ptr %3, i64 %19
  %1263 = load i32, ptr %1262, align 4, !tbaa !6
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp sgt i32 %5, 0
  br i1 %1264, label %1275, label %1266

1266:                                             ; preds = %1261
  br i1 %1265, label %1267, label %5560

1267:                                             ; preds = %1266
  %1268 = icmp sgt i32 %13, 1
  %1269 = icmp sgt i32 %13, 0
  %1270 = add i32 %13, -2
  %1271 = zext i32 %1270 to i64
  %1272 = zext i32 %13 to i64
  %1273 = add nuw i32 %5, 1
  %1274 = icmp eq i32 %13, 1
  br label %1426

1275:                                             ; preds = %1261
  br i1 %1265, label %1276, label %5560

1276:                                             ; preds = %1275
  %1277 = icmp sgt i32 %13, 1
  %1278 = icmp sgt i32 %13, 0
  %1279 = add i32 %13, -2
  %1280 = zext i32 %1279 to i64
  %1281 = zext i32 %13 to i64
  %1282 = add nuw i32 %5, 1
  %1283 = icmp eq i32 %13, 1
  br label %1284

1284:                                             ; preds = %1276, %1424
  %1285 = phi i32 [ 0, %1276 ], [ %1376, %1424 ]
  %1286 = phi double [ 0.000000e+00, %1276 ], [ %1375, %1424 ]
  %1287 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1277, label %1288, label %1357

1288:                                             ; preds = %1284, %1347
  %1289 = phi i32 [ %1356, %1347 ], [ 0, %1284 ]
  %1290 = phi i64 [ %1298, %1347 ], [ %1281, %1284 ]
  %1291 = phi i64 [ %1355, %1347 ], [ %1280, %1284 ]
  %1292 = phi i32 [ %1353, %1347 ], [ %1287, %1284 ]
  %1293 = sub i32 %1279, %1289
  %1294 = tail call i32 @llvm.smin.i32(i32 %1293, i32 0)
  %1295 = sub i32 %1293, %1294
  %1296 = zext i32 %1295 to i64
  %1297 = add nuw nsw i64 %1296, 1
  %1298 = add nsw i64 %1290, -1
  %1299 = icmp ult i32 %1295, 31
  br i1 %1299, label %1335, label %1300

1300:                                             ; preds = %1288
  %1301 = and i64 %1297, 8589934560
  %1302 = sub i64 %1291, %1301
  br label %1303

1303:                                             ; preds = %1303, %1300
  %1304 = phi i64 [ 0, %1300 ], [ %1327, %1303 ]
  %1305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1323, %1303 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1324, %1303 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1325, %1303 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1326, %1303 ]
  %1309 = sub i64 %1291, %1304
  %1310 = getelementptr inbounds i32, ptr %9, i64 %1309
  %1311 = getelementptr inbounds i32, ptr %1310, i64 -7
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1310, i64 -15
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = getelementptr inbounds i32, ptr %1310, i64 -23
  %1318 = load <8 x i32>, ptr %1317, align 4, !tbaa !6
  %1319 = shufflevector <8 x i32> %1318, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1320 = getelementptr inbounds i32, ptr %1310, i64 -31
  %1321 = load <8 x i32>, ptr %1320, align 4, !tbaa !6
  %1322 = shufflevector <8 x i32> %1321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1323 = mul <8 x i32> %1313, %1305
  %1324 = mul <8 x i32> %1316, %1306
  %1325 = mul <8 x i32> %1319, %1307
  %1326 = mul <8 x i32> %1322, %1308
  %1327 = add nuw i64 %1304, 32
  %1328 = icmp eq i64 %1327, %1301
  br i1 %1328, label %1329, label %1303, !llvm.loop !59

1329:                                             ; preds = %1303
  %1330 = mul <8 x i32> %1324, %1323
  %1331 = mul <8 x i32> %1325, %1330
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1332)
  %1334 = icmp eq i64 %1297, %1301
  br i1 %1334, label %1347, label %1335

1335:                                             ; preds = %1288, %1329
  %1336 = phi i64 [ %1291, %1288 ], [ %1302, %1329 ]
  %1337 = phi i32 [ 1, %1288 ], [ %1333, %1329 ]
  br label %1338

1338:                                             ; preds = %1335, %1338
  %1339 = phi i64 [ %1344, %1338 ], [ %1336, %1335 ]
  %1340 = phi i32 [ %1343, %1338 ], [ %1337, %1335 ]
  %1341 = getelementptr inbounds i32, ptr %9, i64 %1339
  %1342 = load i32, ptr %1341, align 4, !tbaa !6
  %1343 = mul nsw i32 %1342, %1340
  %1344 = add nsw i64 %1339, -1
  %1345 = trunc i64 %1339 to i32
  %1346 = icmp sgt i32 %1345, 0
  br i1 %1346, label %1338, label %1347, !llvm.loop !60

1347:                                             ; preds = %1338, %1329
  %1348 = phi i32 [ %1333, %1329 ], [ %1343, %1338 ]
  %1349 = and i64 %1298, 4294967295
  %1350 = getelementptr inbounds i32, ptr %6, i64 %1349
  %1351 = load i32, ptr %1350, align 4, !tbaa !6
  %1352 = mul nsw i32 %1351, %1348
  %1353 = add nsw i32 %1352, %1292
  %1354 = icmp sgt i64 %1290, 2
  %1355 = add nsw i64 %1291, -1
  %1356 = add i32 %1289, 1
  br i1 %1354, label %1288, label %1357, !llvm.loop !61

1357:                                             ; preds = %1347, %1284
  %1358 = phi i32 [ %1287, %1284 ], [ %1353, %1347 ]
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds double, ptr %2, i64 %1359
  %1361 = load double, ptr %1360, align 8, !tbaa !19
  %1362 = getelementptr inbounds i8, ptr %1249, i64 %1359
  %1363 = load i8, ptr %1362, align 1, !tbaa !12
  %1364 = load i8, ptr %1251, align 1, !tbaa !12
  %1365 = sitofp i8 %1364 to double
  %1366 = sitofp i8 %1363 to double
  %1367 = fmul fast double %1361, %1366
  %1368 = fcmp fast olt double %1367, 0.000000e+00
  %1369 = fneg fast double %1367
  %1370 = select nnan ninf i1 %1368, double %1369, double %1367
  %1371 = fmul fast double %1367, %1367
  %1372 = fmul fast double %1371, %1370
  %1373 = fadd fast double %1372, %1365
  %1374 = fptosi double %1373 to i8
  store i8 %1374, ptr %1251, align 1, !tbaa !12
  %1375 = fadd fast double %1361, %1286
  %1376 = add nuw nsw i32 %1285, 1
  br i1 %1278, label %1377, label %1424

1377:                                             ; preds = %1357
  %1378 = load i32, ptr %4, align 4, !tbaa !6
  %1379 = load i32, ptr %12, align 4, !tbaa !6
  %1380 = add nsw i32 %1379, -1
  %1381 = icmp slt i32 %1378, %1380
  br i1 %1381, label %1401, label %1382

1382:                                             ; preds = %1377
  %1383 = icmp eq i32 %1378, %1380
  br i1 %1383, label %1384, label %1417

1384:                                             ; preds = %1382
  store i32 0, ptr %4, align 4, !tbaa !6
  %1385 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1385, ptr %6, align 4, !tbaa !6
  br i1 %1283, label %1424, label %1386

1386:                                             ; preds = %1384, %1411
  %1387 = phi i64 [ %1415, %1411 ], [ 1, %1384 ]
  %1388 = getelementptr inbounds i32, ptr %4, i64 %1387
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = getelementptr inbounds i32, ptr %12, i64 %1387
  %1391 = load i32, ptr %1390, align 4, !tbaa !6
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1389, %1392
  br i1 %1393, label %1394, label %1409

1394:                                             ; preds = %1386
  br i1 %1381, label %1401, label %1395

1395:                                             ; preds = %1394
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1387
  %1399 = load i32, ptr %1398, align 4, !tbaa !6
  %1400 = add nsw i32 %1399, %1397
  store i32 %1400, ptr %1398, align 4, !tbaa !6
  br label %1419

1401:                                             ; preds = %1377, %1394
  %1402 = phi i32 [ %1389, %1394 ], [ %1378, %1377 ]
  %1403 = phi ptr [ %1388, %1394 ], [ %4, %1377 ]
  %1404 = phi i64 [ %1387, %1394 ], [ 0, %1377 ]
  %1405 = add nsw i32 %1402, 1
  store i32 %1405, ptr %1403, align 4, !tbaa !6
  %1406 = getelementptr inbounds i32, ptr %7, i64 %1404
  %1407 = load i32, ptr %1406, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1404
  br label %1419

1409:                                             ; preds = %1386
  %1410 = icmp eq i32 %1389, %1392
  br i1 %1410, label %1411, label %1417

1411:                                             ; preds = %1409
  store i32 0, ptr %1388, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %8, i64 %1387
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %6, i64 %1387
  store i32 %1413, ptr %1414, align 4, !tbaa !6
  %1415 = add nuw nsw i64 %1387, 1
  %1416 = icmp eq i64 %1415, %1281
  br i1 %1416, label %1424, label %1386, !llvm.loop !62

1417:                                             ; preds = %1382, %1409
  %1418 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1419:                                             ; preds = %1395, %1401
  %1420 = phi ptr [ %1408, %1401 ], [ %1388, %1395 ]
  %1421 = phi i32 [ %1407, %1401 ], [ 1, %1395 ]
  %1422 = load i32, ptr %1420, align 4, !tbaa !6
  %1423 = add nsw i32 %1422, %1421
  store i32 %1423, ptr %1420, align 4, !tbaa !6
  br label %1424

1424:                                             ; preds = %1411, %1419, %1384, %1357
  %1425 = icmp eq i32 %1376, %5
  br i1 %1425, label %5560, label %1284, !llvm.loop !63

1426:                                             ; preds = %1267, %1568
  %1427 = phi i32 [ 0, %1267 ], [ %1517, %1568 ]
  %1428 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1429, label %1498

1429:                                             ; preds = %1426, %1488
  %1430 = phi i32 [ %1497, %1488 ], [ 0, %1426 ]
  %1431 = phi i64 [ %1439, %1488 ], [ %1272, %1426 ]
  %1432 = phi i64 [ %1496, %1488 ], [ %1271, %1426 ]
  %1433 = phi i32 [ %1494, %1488 ], [ %1428, %1426 ]
  %1434 = sub i32 %1270, %1430
  %1435 = tail call i32 @llvm.smin.i32(i32 %1434, i32 0)
  %1436 = sub i32 %1434, %1435
  %1437 = zext i32 %1436 to i64
  %1438 = add nuw nsw i64 %1437, 1
  %1439 = add nsw i64 %1431, -1
  %1440 = icmp ult i32 %1436, 31
  br i1 %1440, label %1476, label %1441

1441:                                             ; preds = %1429
  %1442 = and i64 %1438, 8589934560
  %1443 = sub i64 %1432, %1442
  br label %1444

1444:                                             ; preds = %1444, %1441
  %1445 = phi i64 [ 0, %1441 ], [ %1468, %1444 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1464, %1444 ]
  %1447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1465, %1444 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1466, %1444 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1441 ], [ %1467, %1444 ]
  %1450 = sub i64 %1432, %1445
  %1451 = getelementptr inbounds i32, ptr %11, i64 %1450
  %1452 = getelementptr inbounds i32, ptr %1451, i64 -7
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1451, i64 -15
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1451, i64 -23
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = getelementptr inbounds i32, ptr %1451, i64 -31
  %1462 = load <8 x i32>, ptr %1461, align 4, !tbaa !6
  %1463 = shufflevector <8 x i32> %1462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1464 = mul <8 x i32> %1454, %1446
  %1465 = mul <8 x i32> %1457, %1447
  %1466 = mul <8 x i32> %1460, %1448
  %1467 = mul <8 x i32> %1463, %1449
  %1468 = add nuw i64 %1445, 32
  %1469 = icmp eq i64 %1468, %1442
  br i1 %1469, label %1470, label %1444, !llvm.loop !64

1470:                                             ; preds = %1444
  %1471 = mul <8 x i32> %1465, %1464
  %1472 = mul <8 x i32> %1466, %1471
  %1473 = mul <8 x i32> %1467, %1472
  %1474 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1473)
  %1475 = icmp eq i64 %1438, %1442
  br i1 %1475, label %1488, label %1476

1476:                                             ; preds = %1429, %1470
  %1477 = phi i64 [ %1432, %1429 ], [ %1443, %1470 ]
  %1478 = phi i32 [ 1, %1429 ], [ %1474, %1470 ]
  br label %1479

1479:                                             ; preds = %1476, %1479
  %1480 = phi i64 [ %1485, %1479 ], [ %1477, %1476 ]
  %1481 = phi i32 [ %1484, %1479 ], [ %1478, %1476 ]
  %1482 = getelementptr inbounds i32, ptr %11, i64 %1480
  %1483 = load i32, ptr %1482, align 4, !tbaa !6
  %1484 = mul nsw i32 %1483, %1481
  %1485 = add nsw i64 %1480, -1
  %1486 = trunc i64 %1480 to i32
  %1487 = icmp sgt i32 %1486, 0
  br i1 %1487, label %1479, label %1488, !llvm.loop !65

1488:                                             ; preds = %1479, %1470
  %1489 = phi i32 [ %1474, %1470 ], [ %1484, %1479 ]
  %1490 = and i64 %1439, 4294967295
  %1491 = getelementptr inbounds i32, ptr %6, i64 %1490
  %1492 = load i32, ptr %1491, align 4, !tbaa !6
  %1493 = mul nsw i32 %1492, %1489
  %1494 = add nsw i32 %1493, %1433
  %1495 = icmp sgt i64 %1431, 2
  %1496 = add nsw i64 %1432, -1
  %1497 = add i32 %1430, 1
  br i1 %1495, label %1429, label %1498, !llvm.loop !66

1498:                                             ; preds = %1488, %1426
  %1499 = phi i32 [ %1428, %1426 ], [ %1494, %1488 ]
  %1500 = icmp slt i32 %1499, %5
  br i1 %1500, label %1503, label %1501

1501:                                             ; preds = %1498
  %1502 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

1503:                                             ; preds = %1498
  %1504 = sext i32 %1499 to i64
  %1505 = getelementptr inbounds i8, ptr %1249, i64 %1504
  %1506 = load i8, ptr %1505, align 1, !tbaa !12
  %1507 = load i8, ptr %1251, align 1, !tbaa !12
  %1508 = sitofp i8 %1507 to double
  %1509 = sitofp i8 %1506 to double
  %1510 = icmp slt i8 %1506, 0
  %1511 = fneg fast double %1509
  %1512 = select i1 %1510, double %1511, double %1509
  %1513 = fmul fast double %1509, %1509
  %1514 = fmul fast double %1513, %1512
  %1515 = fadd fast double %1514, %1508
  %1516 = fptosi double %1515 to i8
  store i8 %1516, ptr %1251, align 1, !tbaa !12
  %1517 = add nuw nsw i32 %1427, 1
  br i1 %1269, label %1518, label %1568

1518:                                             ; preds = %1503
  %1519 = load i32, ptr %4, align 4, !tbaa !6
  %1520 = load i32, ptr %12, align 4, !tbaa !6
  %1521 = add nsw i32 %1520, -1
  %1522 = icmp slt i32 %1519, %1521
  br i1 %1522, label %1545, label %1523

1523:                                             ; preds = %1518
  %1524 = icmp eq i32 %1519, %1521
  br i1 %1524, label %1525, label %1561

1525:                                             ; preds = %1523
  store i32 0, ptr %4, align 4, !tbaa !6
  %1526 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1526, ptr %6, align 4, !tbaa !6
  br i1 %1274, label %1568, label %1527

1527:                                             ; preds = %1525, %1555
  %1528 = phi i64 [ %1559, %1555 ], [ 1, %1525 ]
  %1529 = getelementptr inbounds i32, ptr %4, i64 %1528
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = getelementptr inbounds i32, ptr %12, i64 %1528
  %1532 = load i32, ptr %1531, align 4, !tbaa !6
  %1533 = add nsw i32 %1532, -1
  %1534 = icmp slt i32 %1530, %1533
  br i1 %1534, label %1535, label %1553

1535:                                             ; preds = %1527
  br i1 %1522, label %1545, label %1536

1536:                                             ; preds = %1535
  %1537 = shl i64 %1528, 32
  %1538 = add i64 %1537, -4294967296
  %1539 = ashr exact i64 %1538, 32
  %1540 = getelementptr inbounds i32, ptr %7, i64 %1539
  %1541 = load i32, ptr %1540, align 4, !tbaa !6
  %1542 = getelementptr inbounds i32, ptr %6, i64 %1528
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = add nsw i32 %1543, %1541
  store i32 %1544, ptr %1542, align 4, !tbaa !6
  br label %1563

1545:                                             ; preds = %1518, %1535
  %1546 = phi i32 [ %1530, %1535 ], [ %1519, %1518 ]
  %1547 = phi ptr [ %1529, %1535 ], [ %4, %1518 ]
  %1548 = phi i64 [ %1528, %1535 ], [ 0, %1518 ]
  %1549 = add nsw i32 %1546, 1
  store i32 %1549, ptr %1547, align 4, !tbaa !6
  %1550 = getelementptr inbounds i32, ptr %7, i64 %1548
  %1551 = load i32, ptr %1550, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %6, i64 %1548
  br label %1563

1553:                                             ; preds = %1527
  %1554 = icmp eq i32 %1530, %1533
  br i1 %1554, label %1555, label %1561

1555:                                             ; preds = %1553
  store i32 0, ptr %1529, align 4, !tbaa !6
  %1556 = getelementptr inbounds i32, ptr %8, i64 %1528
  %1557 = load i32, ptr %1556, align 4, !tbaa !6
  %1558 = getelementptr inbounds i32, ptr %6, i64 %1528
  store i32 %1557, ptr %1558, align 4, !tbaa !6
  %1559 = add nuw nsw i64 %1528, 1
  %1560 = icmp eq i64 %1559, %1272
  br i1 %1560, label %1568, label %1527, !llvm.loop !67

1561:                                             ; preds = %1523, %1553
  %1562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1563:                                             ; preds = %1536, %1545
  %1564 = phi ptr [ %1552, %1545 ], [ %1529, %1536 ]
  %1565 = phi i32 [ %1551, %1545 ], [ 1, %1536 ]
  %1566 = load i32, ptr %1564, align 4, !tbaa !6
  %1567 = add nsw i32 %1566, %1565
  store i32 %1567, ptr %1564, align 4, !tbaa !6
  br label %1568

1568:                                             ; preds = %1555, %1563, %1525, %1503
  %1569 = icmp eq i32 %1517, %5
  br i1 %1569, label %5560, label %1426, !llvm.loop !68

1570:                                             ; preds = %1260
  %1571 = getelementptr inbounds i32, ptr %3, i64 %19
  %1572 = load i32, ptr %1571, align 4, !tbaa !6
  %1573 = icmp eq i32 %1572, 0
  %1574 = icmp sgt i32 %5, 0
  br i1 %1573, label %1584, label %1575

1575:                                             ; preds = %1570
  br i1 %1574, label %1576, label %5560

1576:                                             ; preds = %1575
  %1577 = icmp sgt i32 %13, 1
  %1578 = icmp sgt i32 %13, 0
  %1579 = add i32 %13, -2
  %1580 = zext i32 %1579 to i64
  %1581 = zext i32 %13 to i64
  %1582 = add nuw i32 %5, 1
  %1583 = icmp eq i32 %13, 1
  br label %1729

1584:                                             ; preds = %1570
  br i1 %1574, label %1585, label %5560

1585:                                             ; preds = %1584
  %1586 = icmp sgt i32 %13, 1
  %1587 = icmp sgt i32 %13, 0
  %1588 = add i32 %13, -2
  %1589 = zext i32 %1588 to i64
  %1590 = zext i32 %13 to i64
  %1591 = add nuw i32 %5, 1
  %1592 = icmp eq i32 %13, 1
  br label %1593

1593:                                             ; preds = %1585, %1727
  %1594 = phi i32 [ 0, %1585 ], [ %1679, %1727 ]
  %1595 = phi double [ 0.000000e+00, %1585 ], [ %1678, %1727 ]
  %1596 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1586, label %1597, label %1666

1597:                                             ; preds = %1593, %1656
  %1598 = phi i32 [ %1665, %1656 ], [ 0, %1593 ]
  %1599 = phi i64 [ %1607, %1656 ], [ %1590, %1593 ]
  %1600 = phi i64 [ %1664, %1656 ], [ %1589, %1593 ]
  %1601 = phi i32 [ %1662, %1656 ], [ %1596, %1593 ]
  %1602 = sub i32 %1588, %1598
  %1603 = tail call i32 @llvm.smin.i32(i32 %1602, i32 0)
  %1604 = sub i32 %1602, %1603
  %1605 = zext i32 %1604 to i64
  %1606 = add nuw nsw i64 %1605, 1
  %1607 = add nsw i64 %1599, -1
  %1608 = icmp ult i32 %1604, 31
  br i1 %1608, label %1644, label %1609

1609:                                             ; preds = %1597
  %1610 = and i64 %1606, 8589934560
  %1611 = sub i64 %1600, %1610
  br label %1612

1612:                                             ; preds = %1612, %1609
  %1613 = phi i64 [ 0, %1609 ], [ %1636, %1612 ]
  %1614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1609 ], [ %1632, %1612 ]
  %1615 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1609 ], [ %1633, %1612 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1609 ], [ %1634, %1612 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1609 ], [ %1635, %1612 ]
  %1618 = sub i64 %1600, %1613
  %1619 = getelementptr inbounds i32, ptr %9, i64 %1618
  %1620 = getelementptr inbounds i32, ptr %1619, i64 -7
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !6
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = getelementptr inbounds i32, ptr %1619, i64 -15
  %1624 = load <8 x i32>, ptr %1623, align 4, !tbaa !6
  %1625 = shufflevector <8 x i32> %1624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1626 = getelementptr inbounds i32, ptr %1619, i64 -23
  %1627 = load <8 x i32>, ptr %1626, align 4, !tbaa !6
  %1628 = shufflevector <8 x i32> %1627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1629 = getelementptr inbounds i32, ptr %1619, i64 -31
  %1630 = load <8 x i32>, ptr %1629, align 4, !tbaa !6
  %1631 = shufflevector <8 x i32> %1630, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1632 = mul <8 x i32> %1622, %1614
  %1633 = mul <8 x i32> %1625, %1615
  %1634 = mul <8 x i32> %1628, %1616
  %1635 = mul <8 x i32> %1631, %1617
  %1636 = add nuw i64 %1613, 32
  %1637 = icmp eq i64 %1636, %1610
  br i1 %1637, label %1638, label %1612, !llvm.loop !69

1638:                                             ; preds = %1612
  %1639 = mul <8 x i32> %1633, %1632
  %1640 = mul <8 x i32> %1634, %1639
  %1641 = mul <8 x i32> %1635, %1640
  %1642 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1641)
  %1643 = icmp eq i64 %1606, %1610
  br i1 %1643, label %1656, label %1644

1644:                                             ; preds = %1597, %1638
  %1645 = phi i64 [ %1600, %1597 ], [ %1611, %1638 ]
  %1646 = phi i32 [ 1, %1597 ], [ %1642, %1638 ]
  br label %1647

1647:                                             ; preds = %1644, %1647
  %1648 = phi i64 [ %1653, %1647 ], [ %1645, %1644 ]
  %1649 = phi i32 [ %1652, %1647 ], [ %1646, %1644 ]
  %1650 = getelementptr inbounds i32, ptr %9, i64 %1648
  %1651 = load i32, ptr %1650, align 4, !tbaa !6
  %1652 = mul nsw i32 %1651, %1649
  %1653 = add nsw i64 %1648, -1
  %1654 = trunc i64 %1648 to i32
  %1655 = icmp sgt i32 %1654, 0
  br i1 %1655, label %1647, label %1656, !llvm.loop !70

1656:                                             ; preds = %1647, %1638
  %1657 = phi i32 [ %1642, %1638 ], [ %1652, %1647 ]
  %1658 = and i64 %1607, 4294967295
  %1659 = getelementptr inbounds i32, ptr %6, i64 %1658
  %1660 = load i32, ptr %1659, align 4, !tbaa !6
  %1661 = mul nsw i32 %1660, %1657
  %1662 = add nsw i32 %1661, %1601
  %1663 = icmp sgt i64 %1599, 2
  %1664 = add nsw i64 %1600, -1
  %1665 = add i32 %1598, 1
  br i1 %1663, label %1597, label %1666, !llvm.loop !71

1666:                                             ; preds = %1656, %1593
  %1667 = phi i32 [ %1596, %1593 ], [ %1662, %1656 ]
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds i8, ptr %1249, i64 %1668
  %1670 = load i8, ptr %1669, align 1, !tbaa !12
  %1671 = load i8, ptr %1251, align 1, !tbaa !12
  %1672 = icmp slt i8 %1670, 0
  %1673 = mul i8 %1670, %1670
  %1674 = sub i8 0, %1673
  %1675 = select i1 %1672, i8 %1674, i8 %1673
  %1676 = mul i8 %1675, %1670
  %1677 = add i8 %1676, %1671
  store i8 %1677, ptr %1251, align 1, !tbaa !12
  %1678 = fadd fast double %1595, 1.000000e+00
  %1679 = add nuw nsw i32 %1594, 1
  br i1 %1587, label %1680, label %1727

1680:                                             ; preds = %1666
  %1681 = load i32, ptr %4, align 4, !tbaa !6
  %1682 = load i32, ptr %12, align 4, !tbaa !6
  %1683 = add nsw i32 %1682, -1
  %1684 = icmp slt i32 %1681, %1683
  br i1 %1684, label %1704, label %1685

1685:                                             ; preds = %1680
  %1686 = icmp eq i32 %1681, %1683
  br i1 %1686, label %1687, label %1720

1687:                                             ; preds = %1685
  store i32 0, ptr %4, align 4, !tbaa !6
  %1688 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1688, ptr %6, align 4, !tbaa !6
  br i1 %1592, label %1727, label %1689

1689:                                             ; preds = %1687, %1714
  %1690 = phi i64 [ %1718, %1714 ], [ 1, %1687 ]
  %1691 = getelementptr inbounds i32, ptr %4, i64 %1690
  %1692 = load i32, ptr %1691, align 4, !tbaa !6
  %1693 = getelementptr inbounds i32, ptr %12, i64 %1690
  %1694 = load i32, ptr %1693, align 4, !tbaa !6
  %1695 = add nsw i32 %1694, -1
  %1696 = icmp slt i32 %1692, %1695
  br i1 %1696, label %1697, label %1712

1697:                                             ; preds = %1689
  br i1 %1684, label %1704, label %1698

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = getelementptr inbounds i32, ptr %6, i64 %1690
  %1702 = load i32, ptr %1701, align 4, !tbaa !6
  %1703 = add nsw i32 %1702, %1700
  store i32 %1703, ptr %1701, align 4, !tbaa !6
  br label %1722

1704:                                             ; preds = %1680, %1697
  %1705 = phi i32 [ %1692, %1697 ], [ %1681, %1680 ]
  %1706 = phi ptr [ %1691, %1697 ], [ %4, %1680 ]
  %1707 = phi i64 [ %1690, %1697 ], [ 0, %1680 ]
  %1708 = add nsw i32 %1705, 1
  store i32 %1708, ptr %1706, align 4, !tbaa !6
  %1709 = getelementptr inbounds i32, ptr %7, i64 %1707
  %1710 = load i32, ptr %1709, align 4, !tbaa !6
  %1711 = getelementptr inbounds i32, ptr %6, i64 %1707
  br label %1722

1712:                                             ; preds = %1689
  %1713 = icmp eq i32 %1692, %1695
  br i1 %1713, label %1714, label %1720

1714:                                             ; preds = %1712
  store i32 0, ptr %1691, align 4, !tbaa !6
  %1715 = getelementptr inbounds i32, ptr %8, i64 %1690
  %1716 = load i32, ptr %1715, align 4, !tbaa !6
  %1717 = getelementptr inbounds i32, ptr %6, i64 %1690
  store i32 %1716, ptr %1717, align 4, !tbaa !6
  %1718 = add nuw nsw i64 %1690, 1
  %1719 = icmp eq i64 %1718, %1590
  br i1 %1719, label %1727, label %1689, !llvm.loop !72

1720:                                             ; preds = %1685, %1712
  %1721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1722:                                             ; preds = %1698, %1704
  %1723 = phi ptr [ %1711, %1704 ], [ %1691, %1698 ]
  %1724 = phi i32 [ %1710, %1704 ], [ 1, %1698 ]
  %1725 = load i32, ptr %1723, align 4, !tbaa !6
  %1726 = add nsw i32 %1725, %1724
  store i32 %1726, ptr %1723, align 4, !tbaa !6
  br label %1727

1727:                                             ; preds = %1714, %1722, %1687, %1666
  %1728 = icmp eq i32 %1679, %5
  br i1 %1728, label %5560, label %1593, !llvm.loop !73

1729:                                             ; preds = %1576, %1868
  %1730 = phi i32 [ 0, %1576 ], [ %1817, %1868 ]
  %1731 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1577, label %1732, label %1801

1732:                                             ; preds = %1729, %1791
  %1733 = phi i32 [ %1800, %1791 ], [ 0, %1729 ]
  %1734 = phi i64 [ %1742, %1791 ], [ %1581, %1729 ]
  %1735 = phi i64 [ %1799, %1791 ], [ %1580, %1729 ]
  %1736 = phi i32 [ %1797, %1791 ], [ %1731, %1729 ]
  %1737 = sub i32 %1579, %1733
  %1738 = tail call i32 @llvm.smin.i32(i32 %1737, i32 0)
  %1739 = sub i32 %1737, %1738
  %1740 = zext i32 %1739 to i64
  %1741 = add nuw nsw i64 %1740, 1
  %1742 = add nsw i64 %1734, -1
  %1743 = icmp ult i32 %1739, 31
  br i1 %1743, label %1779, label %1744

1744:                                             ; preds = %1732
  %1745 = and i64 %1741, 8589934560
  %1746 = sub i64 %1735, %1745
  br label %1747

1747:                                             ; preds = %1747, %1744
  %1748 = phi i64 [ 0, %1744 ], [ %1771, %1747 ]
  %1749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1744 ], [ %1767, %1747 ]
  %1750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1744 ], [ %1768, %1747 ]
  %1751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1744 ], [ %1769, %1747 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1744 ], [ %1770, %1747 ]
  %1753 = sub i64 %1735, %1748
  %1754 = getelementptr inbounds i32, ptr %11, i64 %1753
  %1755 = getelementptr inbounds i32, ptr %1754, i64 -7
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !6
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = getelementptr inbounds i32, ptr %1754, i64 -15
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = getelementptr inbounds i32, ptr %1754, i64 -23
  %1762 = load <8 x i32>, ptr %1761, align 4, !tbaa !6
  %1763 = shufflevector <8 x i32> %1762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1764 = getelementptr inbounds i32, ptr %1754, i64 -31
  %1765 = load <8 x i32>, ptr %1764, align 4, !tbaa !6
  %1766 = shufflevector <8 x i32> %1765, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1767 = mul <8 x i32> %1757, %1749
  %1768 = mul <8 x i32> %1760, %1750
  %1769 = mul <8 x i32> %1763, %1751
  %1770 = mul <8 x i32> %1766, %1752
  %1771 = add nuw i64 %1748, 32
  %1772 = icmp eq i64 %1771, %1745
  br i1 %1772, label %1773, label %1747, !llvm.loop !74

1773:                                             ; preds = %1747
  %1774 = mul <8 x i32> %1768, %1767
  %1775 = mul <8 x i32> %1769, %1774
  %1776 = mul <8 x i32> %1770, %1775
  %1777 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1776)
  %1778 = icmp eq i64 %1741, %1745
  br i1 %1778, label %1791, label %1779

1779:                                             ; preds = %1732, %1773
  %1780 = phi i64 [ %1735, %1732 ], [ %1746, %1773 ]
  %1781 = phi i32 [ 1, %1732 ], [ %1777, %1773 ]
  br label %1782

1782:                                             ; preds = %1779, %1782
  %1783 = phi i64 [ %1788, %1782 ], [ %1780, %1779 ]
  %1784 = phi i32 [ %1787, %1782 ], [ %1781, %1779 ]
  %1785 = getelementptr inbounds i32, ptr %11, i64 %1783
  %1786 = load i32, ptr %1785, align 4, !tbaa !6
  %1787 = mul nsw i32 %1786, %1784
  %1788 = add nsw i64 %1783, -1
  %1789 = trunc i64 %1783 to i32
  %1790 = icmp sgt i32 %1789, 0
  br i1 %1790, label %1782, label %1791, !llvm.loop !75

1791:                                             ; preds = %1782, %1773
  %1792 = phi i32 [ %1777, %1773 ], [ %1787, %1782 ]
  %1793 = and i64 %1742, 4294967295
  %1794 = getelementptr inbounds i32, ptr %6, i64 %1793
  %1795 = load i32, ptr %1794, align 4, !tbaa !6
  %1796 = mul nsw i32 %1795, %1792
  %1797 = add nsw i32 %1796, %1736
  %1798 = icmp sgt i64 %1734, 2
  %1799 = add nsw i64 %1735, -1
  %1800 = add i32 %1733, 1
  br i1 %1798, label %1732, label %1801, !llvm.loop !76

1801:                                             ; preds = %1791, %1729
  %1802 = phi i32 [ %1731, %1729 ], [ %1797, %1791 ]
  %1803 = icmp slt i32 %1802, %5
  br i1 %1803, label %1806, label %1804

1804:                                             ; preds = %1801
  %1805 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

1806:                                             ; preds = %1801
  %1807 = sext i32 %1802 to i64
  %1808 = getelementptr inbounds i8, ptr %1249, i64 %1807
  %1809 = load i8, ptr %1808, align 1, !tbaa !12
  %1810 = load i8, ptr %1251, align 1, !tbaa !12
  %1811 = icmp slt i8 %1809, 0
  %1812 = mul i8 %1809, %1809
  %1813 = sub i8 0, %1812
  %1814 = select i1 %1811, i8 %1813, i8 %1812
  %1815 = mul i8 %1814, %1809
  %1816 = add i8 %1815, %1810
  store i8 %1816, ptr %1251, align 1, !tbaa !12
  %1817 = add nuw nsw i32 %1730, 1
  br i1 %1578, label %1818, label %1868

1818:                                             ; preds = %1806
  %1819 = load i32, ptr %4, align 4, !tbaa !6
  %1820 = load i32, ptr %12, align 4, !tbaa !6
  %1821 = add nsw i32 %1820, -1
  %1822 = icmp slt i32 %1819, %1821
  br i1 %1822, label %1845, label %1823

1823:                                             ; preds = %1818
  %1824 = icmp eq i32 %1819, %1821
  br i1 %1824, label %1825, label %1861

1825:                                             ; preds = %1823
  store i32 0, ptr %4, align 4, !tbaa !6
  %1826 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1826, ptr %6, align 4, !tbaa !6
  br i1 %1583, label %1868, label %1827

1827:                                             ; preds = %1825, %1855
  %1828 = phi i64 [ %1859, %1855 ], [ 1, %1825 ]
  %1829 = getelementptr inbounds i32, ptr %4, i64 %1828
  %1830 = load i32, ptr %1829, align 4, !tbaa !6
  %1831 = getelementptr inbounds i32, ptr %12, i64 %1828
  %1832 = load i32, ptr %1831, align 4, !tbaa !6
  %1833 = add nsw i32 %1832, -1
  %1834 = icmp slt i32 %1830, %1833
  br i1 %1834, label %1835, label %1853

1835:                                             ; preds = %1827
  br i1 %1822, label %1845, label %1836

1836:                                             ; preds = %1835
  %1837 = shl i64 %1828, 32
  %1838 = add i64 %1837, -4294967296
  %1839 = ashr exact i64 %1838, 32
  %1840 = getelementptr inbounds i32, ptr %7, i64 %1839
  %1841 = load i32, ptr %1840, align 4, !tbaa !6
  %1842 = getelementptr inbounds i32, ptr %6, i64 %1828
  %1843 = load i32, ptr %1842, align 4, !tbaa !6
  %1844 = add nsw i32 %1843, %1841
  store i32 %1844, ptr %1842, align 4, !tbaa !6
  br label %1863

1845:                                             ; preds = %1818, %1835
  %1846 = phi i32 [ %1830, %1835 ], [ %1819, %1818 ]
  %1847 = phi ptr [ %1829, %1835 ], [ %4, %1818 ]
  %1848 = phi i64 [ %1828, %1835 ], [ 0, %1818 ]
  %1849 = add nsw i32 %1846, 1
  store i32 %1849, ptr %1847, align 4, !tbaa !6
  %1850 = getelementptr inbounds i32, ptr %7, i64 %1848
  %1851 = load i32, ptr %1850, align 4, !tbaa !6
  %1852 = getelementptr inbounds i32, ptr %6, i64 %1848
  br label %1863

1853:                                             ; preds = %1827
  %1854 = icmp eq i32 %1830, %1833
  br i1 %1854, label %1855, label %1861

1855:                                             ; preds = %1853
  store i32 0, ptr %1829, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %8, i64 %1828
  %1857 = load i32, ptr %1856, align 4, !tbaa !6
  %1858 = getelementptr inbounds i32, ptr %6, i64 %1828
  store i32 %1857, ptr %1858, align 4, !tbaa !6
  %1859 = add nuw nsw i64 %1828, 1
  %1860 = icmp eq i64 %1859, %1581
  br i1 %1860, label %1868, label %1827, !llvm.loop !77

1861:                                             ; preds = %1823, %1853
  %1862 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

1863:                                             ; preds = %1836, %1845
  %1864 = phi ptr [ %1852, %1845 ], [ %1829, %1836 ]
  %1865 = phi i32 [ %1851, %1845 ], [ 1, %1836 ]
  %1866 = load i32, ptr %1864, align 4, !tbaa !6
  %1867 = add nsw i32 %1866, %1865
  store i32 %1867, ptr %1864, align 4, !tbaa !6
  br label %1868

1868:                                             ; preds = %1855, %1863, %1825, %1806
  %1869 = icmp eq i32 %1817, %5
  br i1 %1869, label %5560, label %1729, !llvm.loop !78

1870:                                             ; preds = %1260
  %1871 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

1872:                                             ; preds = %18
  %1873 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1874 = load ptr, ptr %1873, align 8, !tbaa !10
  %1875 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1876 = load ptr, ptr %1875, align 8, !tbaa !10
  store i16 0, ptr %1876, align 2, !tbaa !79
  %1877 = icmp eq i32 %13, 0
  br i1 %1877, label %1878, label %1883

1878:                                             ; preds = %1872
  %1879 = load i8, ptr %1874, align 1, !tbaa !12
  %1880 = zext i8 %1879 to i16
  %1881 = mul nuw i16 %1880, %1880
  %1882 = mul i16 %1881, %1880
  store i16 %1882, ptr %1876, align 2, !tbaa !79
  br label %5560

1883:                                             ; preds = %1872
  switch i32 %1, label %2487 [
    i32 1, label %1884
    i32 0, label %2191
  ]

1884:                                             ; preds = %1883
  %1885 = getelementptr inbounds i32, ptr %3, i64 %19
  %1886 = load i32, ptr %1885, align 4, !tbaa !6
  %1887 = icmp eq i32 %1886, 0
  %1888 = icmp sgt i32 %5, 0
  br i1 %1887, label %1898, label %1889

1889:                                             ; preds = %1884
  br i1 %1888, label %1890, label %5560

1890:                                             ; preds = %1889
  %1891 = icmp sgt i32 %13, 1
  %1892 = icmp sgt i32 %13, 0
  %1893 = add i32 %13, -2
  %1894 = zext i32 %1893 to i64
  %1895 = zext i32 %13 to i64
  %1896 = add nuw i32 %5, 1
  %1897 = icmp eq i32 %13, 1
  br label %2049

1898:                                             ; preds = %1884
  br i1 %1888, label %1899, label %5560

1899:                                             ; preds = %1898
  %1900 = icmp sgt i32 %13, 1
  %1901 = icmp sgt i32 %13, 0
  %1902 = add i32 %13, -2
  %1903 = zext i32 %1902 to i64
  %1904 = zext i32 %13 to i64
  %1905 = add nuw i32 %5, 1
  %1906 = icmp eq i32 %13, 1
  br label %1907

1907:                                             ; preds = %1899, %2047
  %1908 = phi i16 [ 0, %1899 ], [ %1997, %2047 ]
  %1909 = phi i32 [ 0, %1899 ], [ %1999, %2047 ]
  %1910 = phi double [ 0.000000e+00, %1899 ], [ %1998, %2047 ]
  %1911 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1900, label %1912, label %1981

1912:                                             ; preds = %1907, %1971
  %1913 = phi i32 [ %1980, %1971 ], [ 0, %1907 ]
  %1914 = phi i64 [ %1922, %1971 ], [ %1904, %1907 ]
  %1915 = phi i64 [ %1979, %1971 ], [ %1903, %1907 ]
  %1916 = phi i32 [ %1977, %1971 ], [ %1911, %1907 ]
  %1917 = sub i32 %1902, %1913
  %1918 = tail call i32 @llvm.smin.i32(i32 %1917, i32 0)
  %1919 = sub i32 %1917, %1918
  %1920 = zext i32 %1919 to i64
  %1921 = add nuw nsw i64 %1920, 1
  %1922 = add nsw i64 %1914, -1
  %1923 = icmp ult i32 %1919, 31
  br i1 %1923, label %1959, label %1924

1924:                                             ; preds = %1912
  %1925 = and i64 %1921, 8589934560
  %1926 = sub i64 %1915, %1925
  br label %1927

1927:                                             ; preds = %1927, %1924
  %1928 = phi i64 [ 0, %1924 ], [ %1951, %1927 ]
  %1929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1924 ], [ %1947, %1927 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1924 ], [ %1948, %1927 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1924 ], [ %1949, %1927 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1924 ], [ %1950, %1927 ]
  %1933 = sub i64 %1915, %1928
  %1934 = getelementptr inbounds i32, ptr %9, i64 %1933
  %1935 = getelementptr inbounds i32, ptr %1934, i64 -7
  %1936 = load <8 x i32>, ptr %1935, align 4, !tbaa !6
  %1937 = shufflevector <8 x i32> %1936, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1938 = getelementptr inbounds i32, ptr %1934, i64 -15
  %1939 = load <8 x i32>, ptr %1938, align 4, !tbaa !6
  %1940 = shufflevector <8 x i32> %1939, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1941 = getelementptr inbounds i32, ptr %1934, i64 -23
  %1942 = load <8 x i32>, ptr %1941, align 4, !tbaa !6
  %1943 = shufflevector <8 x i32> %1942, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1944 = getelementptr inbounds i32, ptr %1934, i64 -31
  %1945 = load <8 x i32>, ptr %1944, align 4, !tbaa !6
  %1946 = shufflevector <8 x i32> %1945, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1947 = mul <8 x i32> %1937, %1929
  %1948 = mul <8 x i32> %1940, %1930
  %1949 = mul <8 x i32> %1943, %1931
  %1950 = mul <8 x i32> %1946, %1932
  %1951 = add nuw i64 %1928, 32
  %1952 = icmp eq i64 %1951, %1925
  br i1 %1952, label %1953, label %1927, !llvm.loop !81

1953:                                             ; preds = %1927
  %1954 = mul <8 x i32> %1948, %1947
  %1955 = mul <8 x i32> %1949, %1954
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1956)
  %1958 = icmp eq i64 %1921, %1925
  br i1 %1958, label %1971, label %1959

1959:                                             ; preds = %1912, %1953
  %1960 = phi i64 [ %1915, %1912 ], [ %1926, %1953 ]
  %1961 = phi i32 [ 1, %1912 ], [ %1957, %1953 ]
  br label %1962

1962:                                             ; preds = %1959, %1962
  %1963 = phi i64 [ %1968, %1962 ], [ %1960, %1959 ]
  %1964 = phi i32 [ %1967, %1962 ], [ %1961, %1959 ]
  %1965 = getelementptr inbounds i32, ptr %9, i64 %1963
  %1966 = load i32, ptr %1965, align 4, !tbaa !6
  %1967 = mul nsw i32 %1966, %1964
  %1968 = add nsw i64 %1963, -1
  %1969 = trunc i64 %1963 to i32
  %1970 = icmp sgt i32 %1969, 0
  br i1 %1970, label %1962, label %1971, !llvm.loop !82

1971:                                             ; preds = %1962, %1953
  %1972 = phi i32 [ %1957, %1953 ], [ %1967, %1962 ]
  %1973 = and i64 %1922, 4294967295
  %1974 = getelementptr inbounds i32, ptr %6, i64 %1973
  %1975 = load i32, ptr %1974, align 4, !tbaa !6
  %1976 = mul nsw i32 %1975, %1972
  %1977 = add nsw i32 %1976, %1916
  %1978 = icmp sgt i64 %1914, 2
  %1979 = add nsw i64 %1915, -1
  %1980 = add i32 %1913, 1
  br i1 %1978, label %1912, label %1981, !llvm.loop !83

1981:                                             ; preds = %1971, %1907
  %1982 = phi i32 [ %1911, %1907 ], [ %1977, %1971 ]
  %1983 = sext i32 %1982 to i64
  %1984 = getelementptr inbounds double, ptr %2, i64 %1983
  %1985 = load double, ptr %1984, align 8, !tbaa !19
  %1986 = getelementptr inbounds i8, ptr %1874, i64 %1983
  %1987 = load i8, ptr %1986, align 1, !tbaa !12
  %1988 = sitofp i16 %1908 to double
  %1989 = uitofp i8 %1987 to double
  %1990 = fmul fast double %1985, %1989
  %1991 = fcmp fast olt double %1990, 0.000000e+00
  %1992 = fneg fast double %1990
  %1993 = select nnan ninf i1 %1991, double %1992, double %1990
  %1994 = fmul fast double %1990, %1990
  %1995 = fmul fast double %1994, %1993
  %1996 = fadd fast double %1995, %1988
  %1997 = fptosi double %1996 to i16
  store i16 %1997, ptr %1876, align 2, !tbaa !79
  %1998 = fadd fast double %1985, %1910
  %1999 = add nuw nsw i32 %1909, 1
  br i1 %1901, label %2000, label %2047

2000:                                             ; preds = %1981
  %2001 = load i32, ptr %4, align 4, !tbaa !6
  %2002 = load i32, ptr %12, align 4, !tbaa !6
  %2003 = add nsw i32 %2002, -1
  %2004 = icmp slt i32 %2001, %2003
  br i1 %2004, label %2024, label %2005

2005:                                             ; preds = %2000
  %2006 = icmp eq i32 %2001, %2003
  br i1 %2006, label %2007, label %2040

2007:                                             ; preds = %2005
  store i32 0, ptr %4, align 4, !tbaa !6
  %2008 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2008, ptr %6, align 4, !tbaa !6
  br i1 %1906, label %2047, label %2009

2009:                                             ; preds = %2007, %2034
  %2010 = phi i64 [ %2038, %2034 ], [ 1, %2007 ]
  %2011 = getelementptr inbounds i32, ptr %4, i64 %2010
  %2012 = load i32, ptr %2011, align 4, !tbaa !6
  %2013 = getelementptr inbounds i32, ptr %12, i64 %2010
  %2014 = load i32, ptr %2013, align 4, !tbaa !6
  %2015 = add nsw i32 %2014, -1
  %2016 = icmp slt i32 %2012, %2015
  br i1 %2016, label %2017, label %2032

2017:                                             ; preds = %2009
  br i1 %2004, label %2024, label %2018

2018:                                             ; preds = %2017
  %2019 = getelementptr inbounds i32, ptr %7, i64 %2010
  %2020 = load i32, ptr %2019, align 4, !tbaa !6
  %2021 = getelementptr inbounds i32, ptr %6, i64 %2010
  %2022 = load i32, ptr %2021, align 4, !tbaa !6
  %2023 = add nsw i32 %2022, %2020
  store i32 %2023, ptr %2021, align 4, !tbaa !6
  br label %2042

2024:                                             ; preds = %2000, %2017
  %2025 = phi i32 [ %2012, %2017 ], [ %2001, %2000 ]
  %2026 = phi ptr [ %2011, %2017 ], [ %4, %2000 ]
  %2027 = phi i64 [ %2010, %2017 ], [ 0, %2000 ]
  %2028 = add nsw i32 %2025, 1
  store i32 %2028, ptr %2026, align 4, !tbaa !6
  %2029 = getelementptr inbounds i32, ptr %7, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = getelementptr inbounds i32, ptr %6, i64 %2027
  br label %2042

2032:                                             ; preds = %2009
  %2033 = icmp eq i32 %2012, %2015
  br i1 %2033, label %2034, label %2040

2034:                                             ; preds = %2032
  store i32 0, ptr %2011, align 4, !tbaa !6
  %2035 = getelementptr inbounds i32, ptr %8, i64 %2010
  %2036 = load i32, ptr %2035, align 4, !tbaa !6
  %2037 = getelementptr inbounds i32, ptr %6, i64 %2010
  store i32 %2036, ptr %2037, align 4, !tbaa !6
  %2038 = add nuw nsw i64 %2010, 1
  %2039 = icmp eq i64 %2038, %1904
  br i1 %2039, label %2047, label %2009, !llvm.loop !84

2040:                                             ; preds = %2005, %2032
  %2041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2042:                                             ; preds = %2018, %2024
  %2043 = phi ptr [ %2031, %2024 ], [ %2011, %2018 ]
  %2044 = phi i32 [ %2030, %2024 ], [ 1, %2018 ]
  %2045 = load i32, ptr %2043, align 4, !tbaa !6
  %2046 = add nsw i32 %2045, %2044
  store i32 %2046, ptr %2043, align 4, !tbaa !6
  br label %2047

2047:                                             ; preds = %2034, %2042, %2007, %1981
  %2048 = icmp eq i32 %1999, %5
  br i1 %2048, label %5560, label %1907, !llvm.loop !85

2049:                                             ; preds = %1890, %2189
  %2050 = phi i32 [ 0, %1890 ], [ %2136, %2189 ]
  %2051 = phi i32 [ 0, %1890 ], [ %2138, %2189 ]
  %2052 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1891, label %2053, label %2122

2053:                                             ; preds = %2049, %2112
  %2054 = phi i32 [ %2121, %2112 ], [ 0, %2049 ]
  %2055 = phi i64 [ %2063, %2112 ], [ %1895, %2049 ]
  %2056 = phi i64 [ %2120, %2112 ], [ %1894, %2049 ]
  %2057 = phi i32 [ %2118, %2112 ], [ %2052, %2049 ]
  %2058 = sub i32 %1893, %2054
  %2059 = tail call i32 @llvm.smin.i32(i32 %2058, i32 0)
  %2060 = sub i32 %2058, %2059
  %2061 = zext i32 %2060 to i64
  %2062 = add nuw nsw i64 %2061, 1
  %2063 = add nsw i64 %2055, -1
  %2064 = icmp ult i32 %2060, 31
  br i1 %2064, label %2100, label %2065

2065:                                             ; preds = %2053
  %2066 = and i64 %2062, 8589934560
  %2067 = sub i64 %2056, %2066
  br label %2068

2068:                                             ; preds = %2068, %2065
  %2069 = phi i64 [ 0, %2065 ], [ %2092, %2068 ]
  %2070 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2065 ], [ %2088, %2068 ]
  %2071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2065 ], [ %2089, %2068 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2065 ], [ %2090, %2068 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2065 ], [ %2091, %2068 ]
  %2074 = sub i64 %2056, %2069
  %2075 = getelementptr inbounds i32, ptr %11, i64 %2074
  %2076 = getelementptr inbounds i32, ptr %2075, i64 -7
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = getelementptr inbounds i32, ptr %2075, i64 -15
  %2080 = load <8 x i32>, ptr %2079, align 4, !tbaa !6
  %2081 = shufflevector <8 x i32> %2080, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2082 = getelementptr inbounds i32, ptr %2075, i64 -23
  %2083 = load <8 x i32>, ptr %2082, align 4, !tbaa !6
  %2084 = shufflevector <8 x i32> %2083, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2085 = getelementptr inbounds i32, ptr %2075, i64 -31
  %2086 = load <8 x i32>, ptr %2085, align 4, !tbaa !6
  %2087 = shufflevector <8 x i32> %2086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2088 = mul <8 x i32> %2078, %2070
  %2089 = mul <8 x i32> %2081, %2071
  %2090 = mul <8 x i32> %2084, %2072
  %2091 = mul <8 x i32> %2087, %2073
  %2092 = add nuw i64 %2069, 32
  %2093 = icmp eq i64 %2092, %2066
  br i1 %2093, label %2094, label %2068, !llvm.loop !86

2094:                                             ; preds = %2068
  %2095 = mul <8 x i32> %2089, %2088
  %2096 = mul <8 x i32> %2090, %2095
  %2097 = mul <8 x i32> %2091, %2096
  %2098 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2097)
  %2099 = icmp eq i64 %2062, %2066
  br i1 %2099, label %2112, label %2100

2100:                                             ; preds = %2053, %2094
  %2101 = phi i64 [ %2056, %2053 ], [ %2067, %2094 ]
  %2102 = phi i32 [ 1, %2053 ], [ %2098, %2094 ]
  br label %2103

2103:                                             ; preds = %2100, %2103
  %2104 = phi i64 [ %2109, %2103 ], [ %2101, %2100 ]
  %2105 = phi i32 [ %2108, %2103 ], [ %2102, %2100 ]
  %2106 = getelementptr inbounds i32, ptr %11, i64 %2104
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2105
  %2109 = add nsw i64 %2104, -1
  %2110 = trunc i64 %2104 to i32
  %2111 = icmp sgt i32 %2110, 0
  br i1 %2111, label %2103, label %2112, !llvm.loop !87

2112:                                             ; preds = %2103, %2094
  %2113 = phi i32 [ %2098, %2094 ], [ %2108, %2103 ]
  %2114 = and i64 %2063, 4294967295
  %2115 = getelementptr inbounds i32, ptr %6, i64 %2114
  %2116 = load i32, ptr %2115, align 4, !tbaa !6
  %2117 = mul nsw i32 %2116, %2113
  %2118 = add nsw i32 %2117, %2057
  %2119 = icmp sgt i64 %2055, 2
  %2120 = add nsw i64 %2056, -1
  %2121 = add i32 %2054, 1
  br i1 %2119, label %2053, label %2122, !llvm.loop !88

2122:                                             ; preds = %2112, %2049
  %2123 = phi i32 [ %2052, %2049 ], [ %2118, %2112 ]
  %2124 = icmp slt i32 %2123, %5
  br i1 %2124, label %2127, label %2125

2125:                                             ; preds = %2122
  %2126 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

2127:                                             ; preds = %2122
  %2128 = shl i32 %2050, 16
  %2129 = ashr exact i32 %2128, 16
  %2130 = sext i32 %2123 to i64
  %2131 = getelementptr inbounds i8, ptr %1874, i64 %2130
  %2132 = load i8, ptr %2131, align 1, !tbaa !12
  %2133 = zext i8 %2132 to i32
  %2134 = mul nuw nsw i32 %2133, %2133
  %2135 = mul nuw nsw i32 %2134, %2133
  %2136 = add nsw i32 %2135, %2129
  %2137 = trunc i32 %2136 to i16
  store i16 %2137, ptr %1876, align 2, !tbaa !79
  %2138 = add nuw nsw i32 %2051, 1
  br i1 %1892, label %2139, label %2189

2139:                                             ; preds = %2127
  %2140 = load i32, ptr %4, align 4, !tbaa !6
  %2141 = load i32, ptr %12, align 4, !tbaa !6
  %2142 = add nsw i32 %2141, -1
  %2143 = icmp slt i32 %2140, %2142
  br i1 %2143, label %2166, label %2144

2144:                                             ; preds = %2139
  %2145 = icmp eq i32 %2140, %2142
  br i1 %2145, label %2146, label %2182

2146:                                             ; preds = %2144
  store i32 0, ptr %4, align 4, !tbaa !6
  %2147 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2147, ptr %6, align 4, !tbaa !6
  br i1 %1897, label %2189, label %2148

2148:                                             ; preds = %2146, %2176
  %2149 = phi i64 [ %2180, %2176 ], [ 1, %2146 ]
  %2150 = getelementptr inbounds i32, ptr %4, i64 %2149
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %12, i64 %2149
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = add nsw i32 %2153, -1
  %2155 = icmp slt i32 %2151, %2154
  br i1 %2155, label %2156, label %2174

2156:                                             ; preds = %2148
  br i1 %2143, label %2166, label %2157

2157:                                             ; preds = %2156
  %2158 = shl i64 %2149, 32
  %2159 = add i64 %2158, -4294967296
  %2160 = ashr exact i64 %2159, 32
  %2161 = getelementptr inbounds i32, ptr %7, i64 %2160
  %2162 = load i32, ptr %2161, align 4, !tbaa !6
  %2163 = getelementptr inbounds i32, ptr %6, i64 %2149
  %2164 = load i32, ptr %2163, align 4, !tbaa !6
  %2165 = add nsw i32 %2164, %2162
  store i32 %2165, ptr %2163, align 4, !tbaa !6
  br label %2184

2166:                                             ; preds = %2139, %2156
  %2167 = phi i32 [ %2151, %2156 ], [ %2140, %2139 ]
  %2168 = phi ptr [ %2150, %2156 ], [ %4, %2139 ]
  %2169 = phi i64 [ %2149, %2156 ], [ 0, %2139 ]
  %2170 = add nsw i32 %2167, 1
  store i32 %2170, ptr %2168, align 4, !tbaa !6
  %2171 = getelementptr inbounds i32, ptr %7, i64 %2169
  %2172 = load i32, ptr %2171, align 4, !tbaa !6
  %2173 = getelementptr inbounds i32, ptr %6, i64 %2169
  br label %2184

2174:                                             ; preds = %2148
  %2175 = icmp eq i32 %2151, %2154
  br i1 %2175, label %2176, label %2182

2176:                                             ; preds = %2174
  store i32 0, ptr %2150, align 4, !tbaa !6
  %2177 = getelementptr inbounds i32, ptr %8, i64 %2149
  %2178 = load i32, ptr %2177, align 4, !tbaa !6
  %2179 = getelementptr inbounds i32, ptr %6, i64 %2149
  store i32 %2178, ptr %2179, align 4, !tbaa !6
  %2180 = add nuw nsw i64 %2149, 1
  %2181 = icmp eq i64 %2180, %1895
  br i1 %2181, label %2189, label %2148, !llvm.loop !89

2182:                                             ; preds = %2144, %2174
  %2183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2184:                                             ; preds = %2157, %2166
  %2185 = phi ptr [ %2173, %2166 ], [ %2150, %2157 ]
  %2186 = phi i32 [ %2172, %2166 ], [ 1, %2157 ]
  %2187 = load i32, ptr %2185, align 4, !tbaa !6
  %2188 = add nsw i32 %2187, %2186
  store i32 %2188, ptr %2185, align 4, !tbaa !6
  br label %2189

2189:                                             ; preds = %2176, %2184, %2146, %2127
  %2190 = icmp eq i32 %2138, %5
  br i1 %2190, label %5560, label %2049, !llvm.loop !90

2191:                                             ; preds = %1883
  %2192 = getelementptr inbounds i32, ptr %3, i64 %19
  %2193 = load i32, ptr %2192, align 4, !tbaa !6
  %2194 = icmp eq i32 %2193, 0
  %2195 = icmp sgt i32 %5, 0
  br i1 %2194, label %2205, label %2196

2196:                                             ; preds = %2191
  br i1 %2195, label %2197, label %5560

2197:                                             ; preds = %2196
  %2198 = icmp sgt i32 %13, 1
  %2199 = icmp sgt i32 %13, 0
  %2200 = add i32 %13, -2
  %2201 = zext i32 %2200 to i64
  %2202 = zext i32 %13 to i64
  %2203 = add nuw i32 %5, 1
  %2204 = icmp eq i32 %13, 1
  br label %2348

2205:                                             ; preds = %2191
  br i1 %2195, label %2206, label %5560

2206:                                             ; preds = %2205
  %2207 = icmp sgt i32 %13, 1
  %2208 = icmp sgt i32 %13, 0
  %2209 = add i32 %13, -2
  %2210 = zext i32 %2209 to i64
  %2211 = zext i32 %13 to i64
  %2212 = add nuw i32 %5, 1
  %2213 = icmp eq i32 %13, 1
  br label %2214

2214:                                             ; preds = %2206, %2346
  %2215 = phi i16 [ 0, %2206 ], [ %2296, %2346 ]
  %2216 = phi i32 [ 0, %2206 ], [ %2298, %2346 ]
  %2217 = phi double [ 0.000000e+00, %2206 ], [ %2297, %2346 ]
  %2218 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2207, label %2219, label %2288

2219:                                             ; preds = %2214, %2278
  %2220 = phi i32 [ %2287, %2278 ], [ 0, %2214 ]
  %2221 = phi i64 [ %2229, %2278 ], [ %2211, %2214 ]
  %2222 = phi i64 [ %2286, %2278 ], [ %2210, %2214 ]
  %2223 = phi i32 [ %2284, %2278 ], [ %2218, %2214 ]
  %2224 = sub i32 %2209, %2220
  %2225 = tail call i32 @llvm.smin.i32(i32 %2224, i32 0)
  %2226 = sub i32 %2224, %2225
  %2227 = zext i32 %2226 to i64
  %2228 = add nuw nsw i64 %2227, 1
  %2229 = add nsw i64 %2221, -1
  %2230 = icmp ult i32 %2226, 31
  br i1 %2230, label %2266, label %2231

2231:                                             ; preds = %2219
  %2232 = and i64 %2228, 8589934560
  %2233 = sub i64 %2222, %2232
  br label %2234

2234:                                             ; preds = %2234, %2231
  %2235 = phi i64 [ 0, %2231 ], [ %2258, %2234 ]
  %2236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2231 ], [ %2254, %2234 ]
  %2237 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2231 ], [ %2255, %2234 ]
  %2238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2231 ], [ %2256, %2234 ]
  %2239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2231 ], [ %2257, %2234 ]
  %2240 = sub i64 %2222, %2235
  %2241 = getelementptr inbounds i32, ptr %9, i64 %2240
  %2242 = getelementptr inbounds i32, ptr %2241, i64 -7
  %2243 = load <8 x i32>, ptr %2242, align 4, !tbaa !6
  %2244 = shufflevector <8 x i32> %2243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2245 = getelementptr inbounds i32, ptr %2241, i64 -15
  %2246 = load <8 x i32>, ptr %2245, align 4, !tbaa !6
  %2247 = shufflevector <8 x i32> %2246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2248 = getelementptr inbounds i32, ptr %2241, i64 -23
  %2249 = load <8 x i32>, ptr %2248, align 4, !tbaa !6
  %2250 = shufflevector <8 x i32> %2249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2251 = getelementptr inbounds i32, ptr %2241, i64 -31
  %2252 = load <8 x i32>, ptr %2251, align 4, !tbaa !6
  %2253 = shufflevector <8 x i32> %2252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2254 = mul <8 x i32> %2244, %2236
  %2255 = mul <8 x i32> %2247, %2237
  %2256 = mul <8 x i32> %2250, %2238
  %2257 = mul <8 x i32> %2253, %2239
  %2258 = add nuw i64 %2235, 32
  %2259 = icmp eq i64 %2258, %2232
  br i1 %2259, label %2260, label %2234, !llvm.loop !91

2260:                                             ; preds = %2234
  %2261 = mul <8 x i32> %2255, %2254
  %2262 = mul <8 x i32> %2256, %2261
  %2263 = mul <8 x i32> %2257, %2262
  %2264 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2263)
  %2265 = icmp eq i64 %2228, %2232
  br i1 %2265, label %2278, label %2266

2266:                                             ; preds = %2219, %2260
  %2267 = phi i64 [ %2222, %2219 ], [ %2233, %2260 ]
  %2268 = phi i32 [ 1, %2219 ], [ %2264, %2260 ]
  br label %2269

2269:                                             ; preds = %2266, %2269
  %2270 = phi i64 [ %2275, %2269 ], [ %2267, %2266 ]
  %2271 = phi i32 [ %2274, %2269 ], [ %2268, %2266 ]
  %2272 = getelementptr inbounds i32, ptr %9, i64 %2270
  %2273 = load i32, ptr %2272, align 4, !tbaa !6
  %2274 = mul nsw i32 %2273, %2271
  %2275 = add nsw i64 %2270, -1
  %2276 = trunc i64 %2270 to i32
  %2277 = icmp sgt i32 %2276, 0
  br i1 %2277, label %2269, label %2278, !llvm.loop !92

2278:                                             ; preds = %2269, %2260
  %2279 = phi i32 [ %2264, %2260 ], [ %2274, %2269 ]
  %2280 = and i64 %2229, 4294967295
  %2281 = getelementptr inbounds i32, ptr %6, i64 %2280
  %2282 = load i32, ptr %2281, align 4, !tbaa !6
  %2283 = mul nsw i32 %2282, %2279
  %2284 = add nsw i32 %2283, %2223
  %2285 = icmp sgt i64 %2221, 2
  %2286 = add nsw i64 %2222, -1
  %2287 = add i32 %2220, 1
  br i1 %2285, label %2219, label %2288, !llvm.loop !93

2288:                                             ; preds = %2278, %2214
  %2289 = phi i32 [ %2218, %2214 ], [ %2284, %2278 ]
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds i8, ptr %1874, i64 %2290
  %2292 = load i8, ptr %2291, align 1, !tbaa !12
  %2293 = zext i8 %2292 to i16
  %2294 = mul nuw i16 %2293, %2293
  %2295 = mul i16 %2294, %2293
  %2296 = add i16 %2295, %2215
  store i16 %2296, ptr %1876, align 2, !tbaa !79
  %2297 = fadd fast double %2217, 1.000000e+00
  %2298 = add nuw nsw i32 %2216, 1
  br i1 %2208, label %2299, label %2346

2299:                                             ; preds = %2288
  %2300 = load i32, ptr %4, align 4, !tbaa !6
  %2301 = load i32, ptr %12, align 4, !tbaa !6
  %2302 = add nsw i32 %2301, -1
  %2303 = icmp slt i32 %2300, %2302
  br i1 %2303, label %2323, label %2304

2304:                                             ; preds = %2299
  %2305 = icmp eq i32 %2300, %2302
  br i1 %2305, label %2306, label %2339

2306:                                             ; preds = %2304
  store i32 0, ptr %4, align 4, !tbaa !6
  %2307 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2307, ptr %6, align 4, !tbaa !6
  br i1 %2213, label %2346, label %2308

2308:                                             ; preds = %2306, %2333
  %2309 = phi i64 [ %2337, %2333 ], [ 1, %2306 ]
  %2310 = getelementptr inbounds i32, ptr %4, i64 %2309
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = getelementptr inbounds i32, ptr %12, i64 %2309
  %2313 = load i32, ptr %2312, align 4, !tbaa !6
  %2314 = add nsw i32 %2313, -1
  %2315 = icmp slt i32 %2311, %2314
  br i1 %2315, label %2316, label %2331

2316:                                             ; preds = %2308
  br i1 %2303, label %2323, label %2317

2317:                                             ; preds = %2316
  %2318 = getelementptr inbounds i32, ptr %7, i64 %2309
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = getelementptr inbounds i32, ptr %6, i64 %2309
  %2321 = load i32, ptr %2320, align 4, !tbaa !6
  %2322 = add nsw i32 %2321, %2319
  store i32 %2322, ptr %2320, align 4, !tbaa !6
  br label %2341

2323:                                             ; preds = %2299, %2316
  %2324 = phi i32 [ %2311, %2316 ], [ %2300, %2299 ]
  %2325 = phi ptr [ %2310, %2316 ], [ %4, %2299 ]
  %2326 = phi i64 [ %2309, %2316 ], [ 0, %2299 ]
  %2327 = add nsw i32 %2324, 1
  store i32 %2327, ptr %2325, align 4, !tbaa !6
  %2328 = getelementptr inbounds i32, ptr %7, i64 %2326
  %2329 = load i32, ptr %2328, align 4, !tbaa !6
  %2330 = getelementptr inbounds i32, ptr %6, i64 %2326
  br label %2341

2331:                                             ; preds = %2308
  %2332 = icmp eq i32 %2311, %2314
  br i1 %2332, label %2333, label %2339

2333:                                             ; preds = %2331
  store i32 0, ptr %2310, align 4, !tbaa !6
  %2334 = getelementptr inbounds i32, ptr %8, i64 %2309
  %2335 = load i32, ptr %2334, align 4, !tbaa !6
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2309
  store i32 %2335, ptr %2336, align 4, !tbaa !6
  %2337 = add nuw nsw i64 %2309, 1
  %2338 = icmp eq i64 %2337, %2211
  br i1 %2338, label %2346, label %2308, !llvm.loop !94

2339:                                             ; preds = %2304, %2331
  %2340 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2341:                                             ; preds = %2317, %2323
  %2342 = phi ptr [ %2330, %2323 ], [ %2310, %2317 ]
  %2343 = phi i32 [ %2329, %2323 ], [ 1, %2317 ]
  %2344 = load i32, ptr %2342, align 4, !tbaa !6
  %2345 = add nsw i32 %2344, %2343
  store i32 %2345, ptr %2342, align 4, !tbaa !6
  br label %2346

2346:                                             ; preds = %2333, %2341, %2306, %2288
  %2347 = icmp eq i32 %2298, %5
  br i1 %2347, label %5560, label %2214, !llvm.loop !95

2348:                                             ; preds = %2197, %2485
  %2349 = phi i16 [ 0, %2197 ], [ %2433, %2485 ]
  %2350 = phi i32 [ 0, %2197 ], [ %2434, %2485 ]
  %2351 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2198, label %2352, label %2421

2352:                                             ; preds = %2348, %2411
  %2353 = phi i32 [ %2420, %2411 ], [ 0, %2348 ]
  %2354 = phi i64 [ %2362, %2411 ], [ %2202, %2348 ]
  %2355 = phi i64 [ %2419, %2411 ], [ %2201, %2348 ]
  %2356 = phi i32 [ %2417, %2411 ], [ %2351, %2348 ]
  %2357 = sub i32 %2200, %2353
  %2358 = tail call i32 @llvm.smin.i32(i32 %2357, i32 0)
  %2359 = sub i32 %2357, %2358
  %2360 = zext i32 %2359 to i64
  %2361 = add nuw nsw i64 %2360, 1
  %2362 = add nsw i64 %2354, -1
  %2363 = icmp ult i32 %2359, 31
  br i1 %2363, label %2399, label %2364

2364:                                             ; preds = %2352
  %2365 = and i64 %2361, 8589934560
  %2366 = sub i64 %2355, %2365
  br label %2367

2367:                                             ; preds = %2367, %2364
  %2368 = phi i64 [ 0, %2364 ], [ %2391, %2367 ]
  %2369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2364 ], [ %2387, %2367 ]
  %2370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2364 ], [ %2388, %2367 ]
  %2371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2364 ], [ %2389, %2367 ]
  %2372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2364 ], [ %2390, %2367 ]
  %2373 = sub i64 %2355, %2368
  %2374 = getelementptr inbounds i32, ptr %11, i64 %2373
  %2375 = getelementptr inbounds i32, ptr %2374, i64 -7
  %2376 = load <8 x i32>, ptr %2375, align 4, !tbaa !6
  %2377 = shufflevector <8 x i32> %2376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2378 = getelementptr inbounds i32, ptr %2374, i64 -15
  %2379 = load <8 x i32>, ptr %2378, align 4, !tbaa !6
  %2380 = shufflevector <8 x i32> %2379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2381 = getelementptr inbounds i32, ptr %2374, i64 -23
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !6
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2374, i64 -31
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !6
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = mul <8 x i32> %2377, %2369
  %2388 = mul <8 x i32> %2380, %2370
  %2389 = mul <8 x i32> %2383, %2371
  %2390 = mul <8 x i32> %2386, %2372
  %2391 = add nuw i64 %2368, 32
  %2392 = icmp eq i64 %2391, %2365
  br i1 %2392, label %2393, label %2367, !llvm.loop !96

2393:                                             ; preds = %2367
  %2394 = mul <8 x i32> %2388, %2387
  %2395 = mul <8 x i32> %2389, %2394
  %2396 = mul <8 x i32> %2390, %2395
  %2397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2396)
  %2398 = icmp eq i64 %2361, %2365
  br i1 %2398, label %2411, label %2399

2399:                                             ; preds = %2352, %2393
  %2400 = phi i64 [ %2355, %2352 ], [ %2366, %2393 ]
  %2401 = phi i32 [ 1, %2352 ], [ %2397, %2393 ]
  br label %2402

2402:                                             ; preds = %2399, %2402
  %2403 = phi i64 [ %2408, %2402 ], [ %2400, %2399 ]
  %2404 = phi i32 [ %2407, %2402 ], [ %2401, %2399 ]
  %2405 = getelementptr inbounds i32, ptr %11, i64 %2403
  %2406 = load i32, ptr %2405, align 4, !tbaa !6
  %2407 = mul nsw i32 %2406, %2404
  %2408 = add nsw i64 %2403, -1
  %2409 = trunc i64 %2403 to i32
  %2410 = icmp sgt i32 %2409, 0
  br i1 %2410, label %2402, label %2411, !llvm.loop !97

2411:                                             ; preds = %2402, %2393
  %2412 = phi i32 [ %2397, %2393 ], [ %2407, %2402 ]
  %2413 = and i64 %2362, 4294967295
  %2414 = getelementptr inbounds i32, ptr %6, i64 %2413
  %2415 = load i32, ptr %2414, align 4, !tbaa !6
  %2416 = mul nsw i32 %2415, %2412
  %2417 = add nsw i32 %2416, %2356
  %2418 = icmp sgt i64 %2354, 2
  %2419 = add nsw i64 %2355, -1
  %2420 = add i32 %2353, 1
  br i1 %2418, label %2352, label %2421, !llvm.loop !98

2421:                                             ; preds = %2411, %2348
  %2422 = phi i32 [ %2351, %2348 ], [ %2417, %2411 ]
  %2423 = icmp slt i32 %2422, %5
  br i1 %2423, label %2426, label %2424

2424:                                             ; preds = %2421
  %2425 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

2426:                                             ; preds = %2421
  %2427 = sext i32 %2422 to i64
  %2428 = getelementptr inbounds i8, ptr %1874, i64 %2427
  %2429 = load i8, ptr %2428, align 1, !tbaa !12
  %2430 = zext i8 %2429 to i16
  %2431 = mul nuw i16 %2430, %2430
  %2432 = mul i16 %2431, %2430
  %2433 = add i16 %2432, %2349
  store i16 %2433, ptr %1876, align 2, !tbaa !79
  %2434 = add nuw nsw i32 %2350, 1
  br i1 %2199, label %2435, label %2485

2435:                                             ; preds = %2426
  %2436 = load i32, ptr %4, align 4, !tbaa !6
  %2437 = load i32, ptr %12, align 4, !tbaa !6
  %2438 = add nsw i32 %2437, -1
  %2439 = icmp slt i32 %2436, %2438
  br i1 %2439, label %2462, label %2440

2440:                                             ; preds = %2435
  %2441 = icmp eq i32 %2436, %2438
  br i1 %2441, label %2442, label %2478

2442:                                             ; preds = %2440
  store i32 0, ptr %4, align 4, !tbaa !6
  %2443 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2443, ptr %6, align 4, !tbaa !6
  br i1 %2204, label %2485, label %2444

2444:                                             ; preds = %2442, %2472
  %2445 = phi i64 [ %2476, %2472 ], [ 1, %2442 ]
  %2446 = getelementptr inbounds i32, ptr %4, i64 %2445
  %2447 = load i32, ptr %2446, align 4, !tbaa !6
  %2448 = getelementptr inbounds i32, ptr %12, i64 %2445
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = add nsw i32 %2449, -1
  %2451 = icmp slt i32 %2447, %2450
  br i1 %2451, label %2452, label %2470

2452:                                             ; preds = %2444
  br i1 %2439, label %2462, label %2453

2453:                                             ; preds = %2452
  %2454 = shl i64 %2445, 32
  %2455 = add i64 %2454, -4294967296
  %2456 = ashr exact i64 %2455, 32
  %2457 = getelementptr inbounds i32, ptr %7, i64 %2456
  %2458 = load i32, ptr %2457, align 4, !tbaa !6
  %2459 = getelementptr inbounds i32, ptr %6, i64 %2445
  %2460 = load i32, ptr %2459, align 4, !tbaa !6
  %2461 = add nsw i32 %2460, %2458
  store i32 %2461, ptr %2459, align 4, !tbaa !6
  br label %2480

2462:                                             ; preds = %2435, %2452
  %2463 = phi i32 [ %2447, %2452 ], [ %2436, %2435 ]
  %2464 = phi ptr [ %2446, %2452 ], [ %4, %2435 ]
  %2465 = phi i64 [ %2445, %2452 ], [ 0, %2435 ]
  %2466 = add nsw i32 %2463, 1
  store i32 %2466, ptr %2464, align 4, !tbaa !6
  %2467 = getelementptr inbounds i32, ptr %7, i64 %2465
  %2468 = load i32, ptr %2467, align 4, !tbaa !6
  %2469 = getelementptr inbounds i32, ptr %6, i64 %2465
  br label %2480

2470:                                             ; preds = %2444
  %2471 = icmp eq i32 %2447, %2450
  br i1 %2471, label %2472, label %2478

2472:                                             ; preds = %2470
  store i32 0, ptr %2446, align 4, !tbaa !6
  %2473 = getelementptr inbounds i32, ptr %8, i64 %2445
  %2474 = load i32, ptr %2473, align 4, !tbaa !6
  %2475 = getelementptr inbounds i32, ptr %6, i64 %2445
  store i32 %2474, ptr %2475, align 4, !tbaa !6
  %2476 = add nuw nsw i64 %2445, 1
  %2477 = icmp eq i64 %2476, %2202
  br i1 %2477, label %2485, label %2444, !llvm.loop !99

2478:                                             ; preds = %2440, %2470
  %2479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2480:                                             ; preds = %2453, %2462
  %2481 = phi ptr [ %2469, %2462 ], [ %2446, %2453 ]
  %2482 = phi i32 [ %2468, %2462 ], [ 1, %2453 ]
  %2483 = load i32, ptr %2481, align 4, !tbaa !6
  %2484 = add nsw i32 %2483, %2482
  store i32 %2484, ptr %2481, align 4, !tbaa !6
  br label %2485

2485:                                             ; preds = %2472, %2480, %2442, %2426
  %2486 = icmp eq i32 %2434, %5
  br i1 %2486, label %5560, label %2348, !llvm.loop !100

2487:                                             ; preds = %1883
  %2488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

2489:                                             ; preds = %18
  %2490 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2491 = load ptr, ptr %2490, align 8, !tbaa !10
  %2492 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2493 = load ptr, ptr %2492, align 8, !tbaa !10
  store i32 0, ptr %2493, align 4, !tbaa !6
  %2494 = icmp eq i32 %13, 0
  br i1 %2494, label %2495, label %2500

2495:                                             ; preds = %2489
  %2496 = load i8, ptr %2491, align 1, !tbaa !12
  %2497 = zext i8 %2496 to i32
  %2498 = mul nuw nsw i32 %2497, %2497
  %2499 = mul nuw nsw i32 %2498, %2497
  store i32 %2499, ptr %2493, align 4, !tbaa !6
  br label %5560

2500:                                             ; preds = %2489
  switch i32 %1, label %3102 [
    i32 1, label %2501
    i32 0, label %2806
  ]

2501:                                             ; preds = %2500
  %2502 = getelementptr inbounds i32, ptr %3, i64 %19
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = icmp eq i32 %2503, 0
  %2505 = icmp sgt i32 %5, 0
  br i1 %2504, label %2515, label %2506

2506:                                             ; preds = %2501
  br i1 %2505, label %2507, label %5560

2507:                                             ; preds = %2506
  %2508 = icmp sgt i32 %13, 1
  %2509 = icmp sgt i32 %13, 0
  %2510 = add i32 %13, -2
  %2511 = zext i32 %2510 to i64
  %2512 = zext i32 %13 to i64
  %2513 = add nuw i32 %5, 1
  %2514 = icmp eq i32 %13, 1
  br label %2666

2515:                                             ; preds = %2501
  br i1 %2505, label %2516, label %5560

2516:                                             ; preds = %2515
  %2517 = icmp sgt i32 %13, 1
  %2518 = icmp sgt i32 %13, 0
  %2519 = add i32 %13, -2
  %2520 = zext i32 %2519 to i64
  %2521 = zext i32 %13 to i64
  %2522 = add nuw i32 %5, 1
  %2523 = icmp eq i32 %13, 1
  br label %2524

2524:                                             ; preds = %2516, %2664
  %2525 = phi i32 [ 0, %2516 ], [ %2616, %2664 ]
  %2526 = phi double [ 0.000000e+00, %2516 ], [ %2615, %2664 ]
  %2527 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2517, label %2528, label %2597

2528:                                             ; preds = %2524, %2587
  %2529 = phi i32 [ %2596, %2587 ], [ 0, %2524 ]
  %2530 = phi i64 [ %2538, %2587 ], [ %2521, %2524 ]
  %2531 = phi i64 [ %2595, %2587 ], [ %2520, %2524 ]
  %2532 = phi i32 [ %2593, %2587 ], [ %2527, %2524 ]
  %2533 = sub i32 %2519, %2529
  %2534 = tail call i32 @llvm.smin.i32(i32 %2533, i32 0)
  %2535 = sub i32 %2533, %2534
  %2536 = zext i32 %2535 to i64
  %2537 = add nuw nsw i64 %2536, 1
  %2538 = add nsw i64 %2530, -1
  %2539 = icmp ult i32 %2535, 31
  br i1 %2539, label %2575, label %2540

2540:                                             ; preds = %2528
  %2541 = and i64 %2537, 8589934560
  %2542 = sub i64 %2531, %2541
  br label %2543

2543:                                             ; preds = %2543, %2540
  %2544 = phi i64 [ 0, %2540 ], [ %2567, %2543 ]
  %2545 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2540 ], [ %2563, %2543 ]
  %2546 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2540 ], [ %2564, %2543 ]
  %2547 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2540 ], [ %2565, %2543 ]
  %2548 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2540 ], [ %2566, %2543 ]
  %2549 = sub i64 %2531, %2544
  %2550 = getelementptr inbounds i32, ptr %9, i64 %2549
  %2551 = getelementptr inbounds i32, ptr %2550, i64 -7
  %2552 = load <8 x i32>, ptr %2551, align 4, !tbaa !6
  %2553 = shufflevector <8 x i32> %2552, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2554 = getelementptr inbounds i32, ptr %2550, i64 -15
  %2555 = load <8 x i32>, ptr %2554, align 4, !tbaa !6
  %2556 = shufflevector <8 x i32> %2555, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2557 = getelementptr inbounds i32, ptr %2550, i64 -23
  %2558 = load <8 x i32>, ptr %2557, align 4, !tbaa !6
  %2559 = shufflevector <8 x i32> %2558, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2560 = getelementptr inbounds i32, ptr %2550, i64 -31
  %2561 = load <8 x i32>, ptr %2560, align 4, !tbaa !6
  %2562 = shufflevector <8 x i32> %2561, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2563 = mul <8 x i32> %2553, %2545
  %2564 = mul <8 x i32> %2556, %2546
  %2565 = mul <8 x i32> %2559, %2547
  %2566 = mul <8 x i32> %2562, %2548
  %2567 = add nuw i64 %2544, 32
  %2568 = icmp eq i64 %2567, %2541
  br i1 %2568, label %2569, label %2543, !llvm.loop !101

2569:                                             ; preds = %2543
  %2570 = mul <8 x i32> %2564, %2563
  %2571 = mul <8 x i32> %2565, %2570
  %2572 = mul <8 x i32> %2566, %2571
  %2573 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2572)
  %2574 = icmp eq i64 %2537, %2541
  br i1 %2574, label %2587, label %2575

2575:                                             ; preds = %2528, %2569
  %2576 = phi i64 [ %2531, %2528 ], [ %2542, %2569 ]
  %2577 = phi i32 [ 1, %2528 ], [ %2573, %2569 ]
  br label %2578

2578:                                             ; preds = %2575, %2578
  %2579 = phi i64 [ %2584, %2578 ], [ %2576, %2575 ]
  %2580 = phi i32 [ %2583, %2578 ], [ %2577, %2575 ]
  %2581 = getelementptr inbounds i32, ptr %9, i64 %2579
  %2582 = load i32, ptr %2581, align 4, !tbaa !6
  %2583 = mul nsw i32 %2582, %2580
  %2584 = add nsw i64 %2579, -1
  %2585 = trunc i64 %2579 to i32
  %2586 = icmp sgt i32 %2585, 0
  br i1 %2586, label %2578, label %2587, !llvm.loop !102

2587:                                             ; preds = %2578, %2569
  %2588 = phi i32 [ %2573, %2569 ], [ %2583, %2578 ]
  %2589 = and i64 %2538, 4294967295
  %2590 = getelementptr inbounds i32, ptr %6, i64 %2589
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = mul nsw i32 %2591, %2588
  %2593 = add nsw i32 %2592, %2532
  %2594 = icmp sgt i64 %2530, 2
  %2595 = add nsw i64 %2531, -1
  %2596 = add i32 %2529, 1
  br i1 %2594, label %2528, label %2597, !llvm.loop !103

2597:                                             ; preds = %2587, %2524
  %2598 = phi i32 [ %2527, %2524 ], [ %2593, %2587 ]
  %2599 = sext i32 %2598 to i64
  %2600 = getelementptr inbounds double, ptr %2, i64 %2599
  %2601 = load double, ptr %2600, align 8, !tbaa !19
  %2602 = getelementptr inbounds i8, ptr %2491, i64 %2599
  %2603 = load i8, ptr %2602, align 1, !tbaa !12
  %2604 = load i32, ptr %2493, align 4, !tbaa !6
  %2605 = sitofp i32 %2604 to double
  %2606 = uitofp i8 %2603 to double
  %2607 = fmul fast double %2601, %2606
  %2608 = fcmp fast olt double %2607, 0.000000e+00
  %2609 = fneg fast double %2607
  %2610 = select nnan ninf i1 %2608, double %2609, double %2607
  %2611 = fmul fast double %2607, %2607
  %2612 = fmul fast double %2611, %2610
  %2613 = fadd fast double %2612, %2605
  %2614 = fptosi double %2613 to i32
  store i32 %2614, ptr %2493, align 4, !tbaa !6
  %2615 = fadd fast double %2601, %2526
  %2616 = add nuw nsw i32 %2525, 1
  br i1 %2518, label %2617, label %2664

2617:                                             ; preds = %2597
  %2618 = load i32, ptr %4, align 4, !tbaa !6
  %2619 = load i32, ptr %12, align 4, !tbaa !6
  %2620 = add nsw i32 %2619, -1
  %2621 = icmp slt i32 %2618, %2620
  br i1 %2621, label %2641, label %2622

2622:                                             ; preds = %2617
  %2623 = icmp eq i32 %2618, %2620
  br i1 %2623, label %2624, label %2657

2624:                                             ; preds = %2622
  store i32 0, ptr %4, align 4, !tbaa !6
  %2625 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2625, ptr %6, align 4, !tbaa !6
  br i1 %2523, label %2664, label %2626

2626:                                             ; preds = %2624, %2651
  %2627 = phi i64 [ %2655, %2651 ], [ 1, %2624 ]
  %2628 = getelementptr inbounds i32, ptr %4, i64 %2627
  %2629 = load i32, ptr %2628, align 4, !tbaa !6
  %2630 = getelementptr inbounds i32, ptr %12, i64 %2627
  %2631 = load i32, ptr %2630, align 4, !tbaa !6
  %2632 = add nsw i32 %2631, -1
  %2633 = icmp slt i32 %2629, %2632
  br i1 %2633, label %2634, label %2649

2634:                                             ; preds = %2626
  br i1 %2621, label %2641, label %2635

2635:                                             ; preds = %2634
  %2636 = getelementptr inbounds i32, ptr %7, i64 %2627
  %2637 = load i32, ptr %2636, align 4, !tbaa !6
  %2638 = getelementptr inbounds i32, ptr %6, i64 %2627
  %2639 = load i32, ptr %2638, align 4, !tbaa !6
  %2640 = add nsw i32 %2639, %2637
  store i32 %2640, ptr %2638, align 4, !tbaa !6
  br label %2659

2641:                                             ; preds = %2617, %2634
  %2642 = phi i32 [ %2629, %2634 ], [ %2618, %2617 ]
  %2643 = phi ptr [ %2628, %2634 ], [ %4, %2617 ]
  %2644 = phi i64 [ %2627, %2634 ], [ 0, %2617 ]
  %2645 = add nsw i32 %2642, 1
  store i32 %2645, ptr %2643, align 4, !tbaa !6
  %2646 = getelementptr inbounds i32, ptr %7, i64 %2644
  %2647 = load i32, ptr %2646, align 4, !tbaa !6
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2644
  br label %2659

2649:                                             ; preds = %2626
  %2650 = icmp eq i32 %2629, %2632
  br i1 %2650, label %2651, label %2657

2651:                                             ; preds = %2649
  store i32 0, ptr %2628, align 4, !tbaa !6
  %2652 = getelementptr inbounds i32, ptr %8, i64 %2627
  %2653 = load i32, ptr %2652, align 4, !tbaa !6
  %2654 = getelementptr inbounds i32, ptr %6, i64 %2627
  store i32 %2653, ptr %2654, align 4, !tbaa !6
  %2655 = add nuw nsw i64 %2627, 1
  %2656 = icmp eq i64 %2655, %2521
  br i1 %2656, label %2664, label %2626, !llvm.loop !104

2657:                                             ; preds = %2622, %2649
  %2658 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2659:                                             ; preds = %2635, %2641
  %2660 = phi ptr [ %2648, %2641 ], [ %2628, %2635 ]
  %2661 = phi i32 [ %2647, %2641 ], [ 1, %2635 ]
  %2662 = load i32, ptr %2660, align 4, !tbaa !6
  %2663 = add nsw i32 %2662, %2661
  store i32 %2663, ptr %2660, align 4, !tbaa !6
  br label %2664

2664:                                             ; preds = %2651, %2659, %2624, %2597
  %2665 = icmp eq i32 %2616, %5
  br i1 %2665, label %5560, label %2524, !llvm.loop !105

2666:                                             ; preds = %2507, %2804
  %2667 = phi i32 [ 0, %2507 ], [ %2753, %2804 ]
  %2668 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2669, label %2738

2669:                                             ; preds = %2666, %2728
  %2670 = phi i32 [ %2737, %2728 ], [ 0, %2666 ]
  %2671 = phi i64 [ %2679, %2728 ], [ %2512, %2666 ]
  %2672 = phi i64 [ %2736, %2728 ], [ %2511, %2666 ]
  %2673 = phi i32 [ %2734, %2728 ], [ %2668, %2666 ]
  %2674 = sub i32 %2510, %2670
  %2675 = tail call i32 @llvm.smin.i32(i32 %2674, i32 0)
  %2676 = sub i32 %2674, %2675
  %2677 = zext i32 %2676 to i64
  %2678 = add nuw nsw i64 %2677, 1
  %2679 = add nsw i64 %2671, -1
  %2680 = icmp ult i32 %2676, 31
  br i1 %2680, label %2716, label %2681

2681:                                             ; preds = %2669
  %2682 = and i64 %2678, 8589934560
  %2683 = sub i64 %2672, %2682
  br label %2684

2684:                                             ; preds = %2684, %2681
  %2685 = phi i64 [ 0, %2681 ], [ %2708, %2684 ]
  %2686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2704, %2684 ]
  %2687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2705, %2684 ]
  %2688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2706, %2684 ]
  %2689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2707, %2684 ]
  %2690 = sub i64 %2672, %2685
  %2691 = getelementptr inbounds i32, ptr %11, i64 %2690
  %2692 = getelementptr inbounds i32, ptr %2691, i64 -7
  %2693 = load <8 x i32>, ptr %2692, align 4, !tbaa !6
  %2694 = shufflevector <8 x i32> %2693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2695 = getelementptr inbounds i32, ptr %2691, i64 -15
  %2696 = load <8 x i32>, ptr %2695, align 4, !tbaa !6
  %2697 = shufflevector <8 x i32> %2696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2698 = getelementptr inbounds i32, ptr %2691, i64 -23
  %2699 = load <8 x i32>, ptr %2698, align 4, !tbaa !6
  %2700 = shufflevector <8 x i32> %2699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2701 = getelementptr inbounds i32, ptr %2691, i64 -31
  %2702 = load <8 x i32>, ptr %2701, align 4, !tbaa !6
  %2703 = shufflevector <8 x i32> %2702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2704 = mul <8 x i32> %2694, %2686
  %2705 = mul <8 x i32> %2697, %2687
  %2706 = mul <8 x i32> %2700, %2688
  %2707 = mul <8 x i32> %2703, %2689
  %2708 = add nuw i64 %2685, 32
  %2709 = icmp eq i64 %2708, %2682
  br i1 %2709, label %2710, label %2684, !llvm.loop !106

2710:                                             ; preds = %2684
  %2711 = mul <8 x i32> %2705, %2704
  %2712 = mul <8 x i32> %2706, %2711
  %2713 = mul <8 x i32> %2707, %2712
  %2714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2713)
  %2715 = icmp eq i64 %2678, %2682
  br i1 %2715, label %2728, label %2716

2716:                                             ; preds = %2669, %2710
  %2717 = phi i64 [ %2672, %2669 ], [ %2683, %2710 ]
  %2718 = phi i32 [ 1, %2669 ], [ %2714, %2710 ]
  br label %2719

2719:                                             ; preds = %2716, %2719
  %2720 = phi i64 [ %2725, %2719 ], [ %2717, %2716 ]
  %2721 = phi i32 [ %2724, %2719 ], [ %2718, %2716 ]
  %2722 = getelementptr inbounds i32, ptr %11, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !6
  %2724 = mul nsw i32 %2723, %2721
  %2725 = add nsw i64 %2720, -1
  %2726 = trunc i64 %2720 to i32
  %2727 = icmp sgt i32 %2726, 0
  br i1 %2727, label %2719, label %2728, !llvm.loop !107

2728:                                             ; preds = %2719, %2710
  %2729 = phi i32 [ %2714, %2710 ], [ %2724, %2719 ]
  %2730 = and i64 %2679, 4294967295
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2730
  %2732 = load i32, ptr %2731, align 4, !tbaa !6
  %2733 = mul nsw i32 %2732, %2729
  %2734 = add nsw i32 %2733, %2673
  %2735 = icmp sgt i64 %2671, 2
  %2736 = add nsw i64 %2672, -1
  %2737 = add i32 %2670, 1
  br i1 %2735, label %2669, label %2738, !llvm.loop !108

2738:                                             ; preds = %2728, %2666
  %2739 = phi i32 [ %2668, %2666 ], [ %2734, %2728 ]
  %2740 = icmp slt i32 %2739, %5
  br i1 %2740, label %2743, label %2741

2741:                                             ; preds = %2738
  %2742 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

2743:                                             ; preds = %2738
  %2744 = load i32, ptr %2493, align 4, !tbaa !6
  %2745 = sext i32 %2739 to i64
  %2746 = getelementptr inbounds i8, ptr %2491, i64 %2745
  %2747 = load i8, ptr %2746, align 1, !tbaa !12
  %2748 = zext i8 %2747 to i64
  %2749 = mul nuw nsw i64 %2748, %2748
  %2750 = mul nuw nsw i64 %2749, %2748
  %2751 = trunc i64 %2750 to i32
  %2752 = add i32 %2744, %2751
  store i32 %2752, ptr %2493, align 4, !tbaa !6
  %2753 = add nuw nsw i32 %2667, 1
  br i1 %2509, label %2754, label %2804

2754:                                             ; preds = %2743
  %2755 = load i32, ptr %4, align 4, !tbaa !6
  %2756 = load i32, ptr %12, align 4, !tbaa !6
  %2757 = add nsw i32 %2756, -1
  %2758 = icmp slt i32 %2755, %2757
  br i1 %2758, label %2781, label %2759

2759:                                             ; preds = %2754
  %2760 = icmp eq i32 %2755, %2757
  br i1 %2760, label %2761, label %2797

2761:                                             ; preds = %2759
  store i32 0, ptr %4, align 4, !tbaa !6
  %2762 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2762, ptr %6, align 4, !tbaa !6
  br i1 %2514, label %2804, label %2763

2763:                                             ; preds = %2761, %2791
  %2764 = phi i64 [ %2795, %2791 ], [ 1, %2761 ]
  %2765 = getelementptr inbounds i32, ptr %4, i64 %2764
  %2766 = load i32, ptr %2765, align 4, !tbaa !6
  %2767 = getelementptr inbounds i32, ptr %12, i64 %2764
  %2768 = load i32, ptr %2767, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2766, %2769
  br i1 %2770, label %2771, label %2789

2771:                                             ; preds = %2763
  br i1 %2758, label %2781, label %2772

2772:                                             ; preds = %2771
  %2773 = shl i64 %2764, 32
  %2774 = add i64 %2773, -4294967296
  %2775 = ashr exact i64 %2774, 32
  %2776 = getelementptr inbounds i32, ptr %7, i64 %2775
  %2777 = load i32, ptr %2776, align 4, !tbaa !6
  %2778 = getelementptr inbounds i32, ptr %6, i64 %2764
  %2779 = load i32, ptr %2778, align 4, !tbaa !6
  %2780 = add nsw i32 %2779, %2777
  store i32 %2780, ptr %2778, align 4, !tbaa !6
  br label %2799

2781:                                             ; preds = %2754, %2771
  %2782 = phi i32 [ %2766, %2771 ], [ %2755, %2754 ]
  %2783 = phi ptr [ %2765, %2771 ], [ %4, %2754 ]
  %2784 = phi i64 [ %2764, %2771 ], [ 0, %2754 ]
  %2785 = add nsw i32 %2782, 1
  store i32 %2785, ptr %2783, align 4, !tbaa !6
  %2786 = getelementptr inbounds i32, ptr %7, i64 %2784
  %2787 = load i32, ptr %2786, align 4, !tbaa !6
  %2788 = getelementptr inbounds i32, ptr %6, i64 %2784
  br label %2799

2789:                                             ; preds = %2763
  %2790 = icmp eq i32 %2766, %2769
  br i1 %2790, label %2791, label %2797

2791:                                             ; preds = %2789
  store i32 0, ptr %2765, align 4, !tbaa !6
  %2792 = getelementptr inbounds i32, ptr %8, i64 %2764
  %2793 = load i32, ptr %2792, align 4, !tbaa !6
  %2794 = getelementptr inbounds i32, ptr %6, i64 %2764
  store i32 %2793, ptr %2794, align 4, !tbaa !6
  %2795 = add nuw nsw i64 %2764, 1
  %2796 = icmp eq i64 %2795, %2512
  br i1 %2796, label %2804, label %2763, !llvm.loop !109

2797:                                             ; preds = %2759, %2789
  %2798 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2799:                                             ; preds = %2772, %2781
  %2800 = phi ptr [ %2788, %2781 ], [ %2765, %2772 ]
  %2801 = phi i32 [ %2787, %2781 ], [ 1, %2772 ]
  %2802 = load i32, ptr %2800, align 4, !tbaa !6
  %2803 = add nsw i32 %2802, %2801
  store i32 %2803, ptr %2800, align 4, !tbaa !6
  br label %2804

2804:                                             ; preds = %2791, %2799, %2761, %2743
  %2805 = icmp eq i32 %2753, %5
  br i1 %2805, label %5560, label %2666, !llvm.loop !110

2806:                                             ; preds = %2500
  %2807 = getelementptr inbounds i32, ptr %3, i64 %19
  %2808 = load i32, ptr %2807, align 4, !tbaa !6
  %2809 = icmp eq i32 %2808, 0
  %2810 = icmp sgt i32 %5, 0
  br i1 %2809, label %2820, label %2811

2811:                                             ; preds = %2806
  br i1 %2810, label %2812, label %5560

2812:                                             ; preds = %2811
  %2813 = icmp sgt i32 %13, 1
  %2814 = icmp sgt i32 %13, 0
  %2815 = add i32 %13, -2
  %2816 = zext i32 %2815 to i64
  %2817 = zext i32 %13 to i64
  %2818 = add nuw i32 %5, 1
  %2819 = icmp eq i32 %13, 1
  br label %2963

2820:                                             ; preds = %2806
  br i1 %2810, label %2821, label %5560

2821:                                             ; preds = %2820
  %2822 = icmp sgt i32 %13, 1
  %2823 = icmp sgt i32 %13, 0
  %2824 = add i32 %13, -2
  %2825 = zext i32 %2824 to i64
  %2826 = zext i32 %13 to i64
  %2827 = add nuw i32 %5, 1
  %2828 = icmp eq i32 %13, 1
  br label %2829

2829:                                             ; preds = %2821, %2961
  %2830 = phi i32 [ 0, %2821 ], [ %2913, %2961 ]
  %2831 = phi double [ 0.000000e+00, %2821 ], [ %2912, %2961 ]
  %2832 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2822, label %2833, label %2902

2833:                                             ; preds = %2829, %2892
  %2834 = phi i32 [ %2901, %2892 ], [ 0, %2829 ]
  %2835 = phi i64 [ %2843, %2892 ], [ %2826, %2829 ]
  %2836 = phi i64 [ %2900, %2892 ], [ %2825, %2829 ]
  %2837 = phi i32 [ %2898, %2892 ], [ %2832, %2829 ]
  %2838 = sub i32 %2824, %2834
  %2839 = tail call i32 @llvm.smin.i32(i32 %2838, i32 0)
  %2840 = sub i32 %2838, %2839
  %2841 = zext i32 %2840 to i64
  %2842 = add nuw nsw i64 %2841, 1
  %2843 = add nsw i64 %2835, -1
  %2844 = icmp ult i32 %2840, 31
  br i1 %2844, label %2880, label %2845

2845:                                             ; preds = %2833
  %2846 = and i64 %2842, 8589934560
  %2847 = sub i64 %2836, %2846
  br label %2848

2848:                                             ; preds = %2848, %2845
  %2849 = phi i64 [ 0, %2845 ], [ %2872, %2848 ]
  %2850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2868, %2848 ]
  %2851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2869, %2848 ]
  %2852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2870, %2848 ]
  %2853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2871, %2848 ]
  %2854 = sub i64 %2836, %2849
  %2855 = getelementptr inbounds i32, ptr %9, i64 %2854
  %2856 = getelementptr inbounds i32, ptr %2855, i64 -7
  %2857 = load <8 x i32>, ptr %2856, align 4, !tbaa !6
  %2858 = shufflevector <8 x i32> %2857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2859 = getelementptr inbounds i32, ptr %2855, i64 -15
  %2860 = load <8 x i32>, ptr %2859, align 4, !tbaa !6
  %2861 = shufflevector <8 x i32> %2860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2862 = getelementptr inbounds i32, ptr %2855, i64 -23
  %2863 = load <8 x i32>, ptr %2862, align 4, !tbaa !6
  %2864 = shufflevector <8 x i32> %2863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2865 = getelementptr inbounds i32, ptr %2855, i64 -31
  %2866 = load <8 x i32>, ptr %2865, align 4, !tbaa !6
  %2867 = shufflevector <8 x i32> %2866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2868 = mul <8 x i32> %2858, %2850
  %2869 = mul <8 x i32> %2861, %2851
  %2870 = mul <8 x i32> %2864, %2852
  %2871 = mul <8 x i32> %2867, %2853
  %2872 = add nuw i64 %2849, 32
  %2873 = icmp eq i64 %2872, %2846
  br i1 %2873, label %2874, label %2848, !llvm.loop !111

2874:                                             ; preds = %2848
  %2875 = mul <8 x i32> %2869, %2868
  %2876 = mul <8 x i32> %2870, %2875
  %2877 = mul <8 x i32> %2871, %2876
  %2878 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2877)
  %2879 = icmp eq i64 %2842, %2846
  br i1 %2879, label %2892, label %2880

2880:                                             ; preds = %2833, %2874
  %2881 = phi i64 [ %2836, %2833 ], [ %2847, %2874 ]
  %2882 = phi i32 [ 1, %2833 ], [ %2878, %2874 ]
  br label %2883

2883:                                             ; preds = %2880, %2883
  %2884 = phi i64 [ %2889, %2883 ], [ %2881, %2880 ]
  %2885 = phi i32 [ %2888, %2883 ], [ %2882, %2880 ]
  %2886 = getelementptr inbounds i32, ptr %9, i64 %2884
  %2887 = load i32, ptr %2886, align 4, !tbaa !6
  %2888 = mul nsw i32 %2887, %2885
  %2889 = add nsw i64 %2884, -1
  %2890 = trunc i64 %2884 to i32
  %2891 = icmp sgt i32 %2890, 0
  br i1 %2891, label %2883, label %2892, !llvm.loop !112

2892:                                             ; preds = %2883, %2874
  %2893 = phi i32 [ %2878, %2874 ], [ %2888, %2883 ]
  %2894 = and i64 %2843, 4294967295
  %2895 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !6
  %2897 = mul nsw i32 %2896, %2893
  %2898 = add nsw i32 %2897, %2837
  %2899 = icmp sgt i64 %2835, 2
  %2900 = add nsw i64 %2836, -1
  %2901 = add i32 %2834, 1
  br i1 %2899, label %2833, label %2902, !llvm.loop !113

2902:                                             ; preds = %2892, %2829
  %2903 = phi i32 [ %2832, %2829 ], [ %2898, %2892 ]
  %2904 = load i32, ptr %2493, align 4, !tbaa !6
  %2905 = sext i32 %2903 to i64
  %2906 = getelementptr inbounds i8, ptr %2491, i64 %2905
  %2907 = load i8, ptr %2906, align 1, !tbaa !12
  %2908 = zext i8 %2907 to i32
  %2909 = mul nuw nsw i32 %2908, %2908
  %2910 = mul nuw nsw i32 %2909, %2908
  %2911 = add nsw i32 %2910, %2904
  store i32 %2911, ptr %2493, align 4, !tbaa !6
  %2912 = fadd fast double %2831, 1.000000e+00
  %2913 = add nuw nsw i32 %2830, 1
  br i1 %2823, label %2914, label %2961

2914:                                             ; preds = %2902
  %2915 = load i32, ptr %4, align 4, !tbaa !6
  %2916 = load i32, ptr %12, align 4, !tbaa !6
  %2917 = add nsw i32 %2916, -1
  %2918 = icmp slt i32 %2915, %2917
  br i1 %2918, label %2938, label %2919

2919:                                             ; preds = %2914
  %2920 = icmp eq i32 %2915, %2917
  br i1 %2920, label %2921, label %2954

2921:                                             ; preds = %2919
  store i32 0, ptr %4, align 4, !tbaa !6
  %2922 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2922, ptr %6, align 4, !tbaa !6
  br i1 %2828, label %2961, label %2923

2923:                                             ; preds = %2921, %2948
  %2924 = phi i64 [ %2952, %2948 ], [ 1, %2921 ]
  %2925 = getelementptr inbounds i32, ptr %4, i64 %2924
  %2926 = load i32, ptr %2925, align 4, !tbaa !6
  %2927 = getelementptr inbounds i32, ptr %12, i64 %2924
  %2928 = load i32, ptr %2927, align 4, !tbaa !6
  %2929 = add nsw i32 %2928, -1
  %2930 = icmp slt i32 %2926, %2929
  br i1 %2930, label %2931, label %2946

2931:                                             ; preds = %2923
  br i1 %2918, label %2938, label %2932

2932:                                             ; preds = %2931
  %2933 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2934 = load i32, ptr %2933, align 4, !tbaa !6
  %2935 = getelementptr inbounds i32, ptr %6, i64 %2924
  %2936 = load i32, ptr %2935, align 4, !tbaa !6
  %2937 = add nsw i32 %2936, %2934
  store i32 %2937, ptr %2935, align 4, !tbaa !6
  br label %2956

2938:                                             ; preds = %2914, %2931
  %2939 = phi i32 [ %2926, %2931 ], [ %2915, %2914 ]
  %2940 = phi ptr [ %2925, %2931 ], [ %4, %2914 ]
  %2941 = phi i64 [ %2924, %2931 ], [ 0, %2914 ]
  %2942 = add nsw i32 %2939, 1
  store i32 %2942, ptr %2940, align 4, !tbaa !6
  %2943 = getelementptr inbounds i32, ptr %7, i64 %2941
  %2944 = load i32, ptr %2943, align 4, !tbaa !6
  %2945 = getelementptr inbounds i32, ptr %6, i64 %2941
  br label %2956

2946:                                             ; preds = %2923
  %2947 = icmp eq i32 %2926, %2929
  br i1 %2947, label %2948, label %2954

2948:                                             ; preds = %2946
  store i32 0, ptr %2925, align 4, !tbaa !6
  %2949 = getelementptr inbounds i32, ptr %8, i64 %2924
  %2950 = load i32, ptr %2949, align 4, !tbaa !6
  %2951 = getelementptr inbounds i32, ptr %6, i64 %2924
  store i32 %2950, ptr %2951, align 4, !tbaa !6
  %2952 = add nuw nsw i64 %2924, 1
  %2953 = icmp eq i64 %2952, %2826
  br i1 %2953, label %2961, label %2923, !llvm.loop !114

2954:                                             ; preds = %2919, %2946
  %2955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

2956:                                             ; preds = %2932, %2938
  %2957 = phi ptr [ %2945, %2938 ], [ %2925, %2932 ]
  %2958 = phi i32 [ %2944, %2938 ], [ 1, %2932 ]
  %2959 = load i32, ptr %2957, align 4, !tbaa !6
  %2960 = add nsw i32 %2959, %2958
  store i32 %2960, ptr %2957, align 4, !tbaa !6
  br label %2961

2961:                                             ; preds = %2948, %2956, %2921, %2902
  %2962 = icmp eq i32 %2913, %5
  br i1 %2962, label %5560, label %2829, !llvm.loop !115

2963:                                             ; preds = %2812, %3100
  %2964 = phi i32 [ 0, %2812 ], [ %3049, %3100 ]
  %2965 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2813, label %2966, label %3035

2966:                                             ; preds = %2963, %3025
  %2967 = phi i32 [ %3034, %3025 ], [ 0, %2963 ]
  %2968 = phi i64 [ %2976, %3025 ], [ %2817, %2963 ]
  %2969 = phi i64 [ %3033, %3025 ], [ %2816, %2963 ]
  %2970 = phi i32 [ %3031, %3025 ], [ %2965, %2963 ]
  %2971 = sub i32 %2815, %2967
  %2972 = tail call i32 @llvm.smin.i32(i32 %2971, i32 0)
  %2973 = sub i32 %2971, %2972
  %2974 = zext i32 %2973 to i64
  %2975 = add nuw nsw i64 %2974, 1
  %2976 = add nsw i64 %2968, -1
  %2977 = icmp ult i32 %2973, 31
  br i1 %2977, label %3013, label %2978

2978:                                             ; preds = %2966
  %2979 = and i64 %2975, 8589934560
  %2980 = sub i64 %2969, %2979
  br label %2981

2981:                                             ; preds = %2981, %2978
  %2982 = phi i64 [ 0, %2978 ], [ %3005, %2981 ]
  %2983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2978 ], [ %3001, %2981 ]
  %2984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2978 ], [ %3002, %2981 ]
  %2985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2978 ], [ %3003, %2981 ]
  %2986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2978 ], [ %3004, %2981 ]
  %2987 = sub i64 %2969, %2982
  %2988 = getelementptr inbounds i32, ptr %11, i64 %2987
  %2989 = getelementptr inbounds i32, ptr %2988, i64 -7
  %2990 = load <8 x i32>, ptr %2989, align 4, !tbaa !6
  %2991 = shufflevector <8 x i32> %2990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2992 = getelementptr inbounds i32, ptr %2988, i64 -15
  %2993 = load <8 x i32>, ptr %2992, align 4, !tbaa !6
  %2994 = shufflevector <8 x i32> %2993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2995 = getelementptr inbounds i32, ptr %2988, i64 -23
  %2996 = load <8 x i32>, ptr %2995, align 4, !tbaa !6
  %2997 = shufflevector <8 x i32> %2996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2998 = getelementptr inbounds i32, ptr %2988, i64 -31
  %2999 = load <8 x i32>, ptr %2998, align 4, !tbaa !6
  %3000 = shufflevector <8 x i32> %2999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3001 = mul <8 x i32> %2991, %2983
  %3002 = mul <8 x i32> %2994, %2984
  %3003 = mul <8 x i32> %2997, %2985
  %3004 = mul <8 x i32> %3000, %2986
  %3005 = add nuw i64 %2982, 32
  %3006 = icmp eq i64 %3005, %2979
  br i1 %3006, label %3007, label %2981, !llvm.loop !116

3007:                                             ; preds = %2981
  %3008 = mul <8 x i32> %3002, %3001
  %3009 = mul <8 x i32> %3003, %3008
  %3010 = mul <8 x i32> %3004, %3009
  %3011 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3010)
  %3012 = icmp eq i64 %2975, %2979
  br i1 %3012, label %3025, label %3013

3013:                                             ; preds = %2966, %3007
  %3014 = phi i64 [ %2969, %2966 ], [ %2980, %3007 ]
  %3015 = phi i32 [ 1, %2966 ], [ %3011, %3007 ]
  br label %3016

3016:                                             ; preds = %3013, %3016
  %3017 = phi i64 [ %3022, %3016 ], [ %3014, %3013 ]
  %3018 = phi i32 [ %3021, %3016 ], [ %3015, %3013 ]
  %3019 = getelementptr inbounds i32, ptr %11, i64 %3017
  %3020 = load i32, ptr %3019, align 4, !tbaa !6
  %3021 = mul nsw i32 %3020, %3018
  %3022 = add nsw i64 %3017, -1
  %3023 = trunc i64 %3017 to i32
  %3024 = icmp sgt i32 %3023, 0
  br i1 %3024, label %3016, label %3025, !llvm.loop !117

3025:                                             ; preds = %3016, %3007
  %3026 = phi i32 [ %3011, %3007 ], [ %3021, %3016 ]
  %3027 = and i64 %2976, 4294967295
  %3028 = getelementptr inbounds i32, ptr %6, i64 %3027
  %3029 = load i32, ptr %3028, align 4, !tbaa !6
  %3030 = mul nsw i32 %3029, %3026
  %3031 = add nsw i32 %3030, %2970
  %3032 = icmp sgt i64 %2968, 2
  %3033 = add nsw i64 %2969, -1
  %3034 = add i32 %2967, 1
  br i1 %3032, label %2966, label %3035, !llvm.loop !118

3035:                                             ; preds = %3025, %2963
  %3036 = phi i32 [ %2965, %2963 ], [ %3031, %3025 ]
  %3037 = icmp slt i32 %3036, %5
  br i1 %3037, label %3040, label %3038

3038:                                             ; preds = %3035
  %3039 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

3040:                                             ; preds = %3035
  %3041 = load i32, ptr %2493, align 4, !tbaa !6
  %3042 = sext i32 %3036 to i64
  %3043 = getelementptr inbounds i8, ptr %2491, i64 %3042
  %3044 = load i8, ptr %3043, align 1, !tbaa !12
  %3045 = zext i8 %3044 to i32
  %3046 = mul nuw nsw i32 %3045, %3045
  %3047 = mul nuw nsw i32 %3046, %3045
  %3048 = add nsw i32 %3047, %3041
  store i32 %3048, ptr %2493, align 4, !tbaa !6
  %3049 = add nuw nsw i32 %2964, 1
  br i1 %2814, label %3050, label %3100

3050:                                             ; preds = %3040
  %3051 = load i32, ptr %4, align 4, !tbaa !6
  %3052 = load i32, ptr %12, align 4, !tbaa !6
  %3053 = add nsw i32 %3052, -1
  %3054 = icmp slt i32 %3051, %3053
  br i1 %3054, label %3077, label %3055

3055:                                             ; preds = %3050
  %3056 = icmp eq i32 %3051, %3053
  br i1 %3056, label %3057, label %3093

3057:                                             ; preds = %3055
  store i32 0, ptr %4, align 4, !tbaa !6
  %3058 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3058, ptr %6, align 4, !tbaa !6
  br i1 %2819, label %3100, label %3059

3059:                                             ; preds = %3057, %3087
  %3060 = phi i64 [ %3091, %3087 ], [ 1, %3057 ]
  %3061 = getelementptr inbounds i32, ptr %4, i64 %3060
  %3062 = load i32, ptr %3061, align 4, !tbaa !6
  %3063 = getelementptr inbounds i32, ptr %12, i64 %3060
  %3064 = load i32, ptr %3063, align 4, !tbaa !6
  %3065 = add nsw i32 %3064, -1
  %3066 = icmp slt i32 %3062, %3065
  br i1 %3066, label %3067, label %3085

3067:                                             ; preds = %3059
  br i1 %3054, label %3077, label %3068

3068:                                             ; preds = %3067
  %3069 = shl i64 %3060, 32
  %3070 = add i64 %3069, -4294967296
  %3071 = ashr exact i64 %3070, 32
  %3072 = getelementptr inbounds i32, ptr %7, i64 %3071
  %3073 = load i32, ptr %3072, align 4, !tbaa !6
  %3074 = getelementptr inbounds i32, ptr %6, i64 %3060
  %3075 = load i32, ptr %3074, align 4, !tbaa !6
  %3076 = add nsw i32 %3075, %3073
  store i32 %3076, ptr %3074, align 4, !tbaa !6
  br label %3095

3077:                                             ; preds = %3050, %3067
  %3078 = phi i32 [ %3062, %3067 ], [ %3051, %3050 ]
  %3079 = phi ptr [ %3061, %3067 ], [ %4, %3050 ]
  %3080 = phi i64 [ %3060, %3067 ], [ 0, %3050 ]
  %3081 = add nsw i32 %3078, 1
  store i32 %3081, ptr %3079, align 4, !tbaa !6
  %3082 = getelementptr inbounds i32, ptr %7, i64 %3080
  %3083 = load i32, ptr %3082, align 4, !tbaa !6
  %3084 = getelementptr inbounds i32, ptr %6, i64 %3080
  br label %3095

3085:                                             ; preds = %3059
  %3086 = icmp eq i32 %3062, %3065
  br i1 %3086, label %3087, label %3093

3087:                                             ; preds = %3085
  store i32 0, ptr %3061, align 4, !tbaa !6
  %3088 = getelementptr inbounds i32, ptr %8, i64 %3060
  %3089 = load i32, ptr %3088, align 4, !tbaa !6
  %3090 = getelementptr inbounds i32, ptr %6, i64 %3060
  store i32 %3089, ptr %3090, align 4, !tbaa !6
  %3091 = add nuw nsw i64 %3060, 1
  %3092 = icmp eq i64 %3091, %2817
  br i1 %3092, label %3100, label %3059, !llvm.loop !119

3093:                                             ; preds = %3055, %3085
  %3094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3095:                                             ; preds = %3068, %3077
  %3096 = phi ptr [ %3084, %3077 ], [ %3061, %3068 ]
  %3097 = phi i32 [ %3083, %3077 ], [ 1, %3068 ]
  %3098 = load i32, ptr %3096, align 4, !tbaa !6
  %3099 = add nsw i32 %3098, %3097
  store i32 %3099, ptr %3096, align 4, !tbaa !6
  br label %3100

3100:                                             ; preds = %3087, %3095, %3057, %3040
  %3101 = icmp eq i32 %3049, %5
  br i1 %3101, label %5560, label %2963, !llvm.loop !120

3102:                                             ; preds = %2500
  %3103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

3104:                                             ; preds = %18
  %3105 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3106 = load ptr, ptr %3105, align 8, !tbaa !10
  %3107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3108 = load ptr, ptr %3107, align 8, !tbaa !10
  store i64 0, ptr %3108, align 8, !tbaa !121
  %3109 = icmp eq i32 %13, 0
  br i1 %3109, label %3110, label %3115

3110:                                             ; preds = %3104
  %3111 = load i8, ptr %3106, align 1, !tbaa !12
  %3112 = zext i8 %3111 to i64
  %3113 = mul nuw nsw i64 %3112, %3112
  %3114 = mul nuw nsw i64 %3113, %3112
  store i64 %3114, ptr %3108, align 8, !tbaa !121
  br label %5560

3115:                                             ; preds = %3104
  switch i32 %1, label %3718 [
    i32 1, label %3116
    i32 0, label %3422
  ]

3116:                                             ; preds = %3115
  %3117 = getelementptr inbounds i32, ptr %3, i64 %19
  %3118 = load i32, ptr %3117, align 4, !tbaa !6
  %3119 = icmp eq i32 %3118, 0
  %3120 = icmp sgt i32 %5, 0
  br i1 %3119, label %3130, label %3121

3121:                                             ; preds = %3116
  br i1 %3120, label %3122, label %5560

3122:                                             ; preds = %3121
  %3123 = icmp sgt i32 %13, 1
  %3124 = icmp sgt i32 %13, 0
  %3125 = add i32 %13, -2
  %3126 = zext i32 %3125 to i64
  %3127 = zext i32 %13 to i64
  %3128 = add nuw i32 %5, 1
  %3129 = icmp eq i32 %13, 1
  br label %3281

3130:                                             ; preds = %3116
  br i1 %3120, label %3131, label %5560

3131:                                             ; preds = %3130
  %3132 = icmp sgt i32 %13, 1
  %3133 = icmp sgt i32 %13, 0
  %3134 = add i32 %13, -2
  %3135 = zext i32 %3134 to i64
  %3136 = zext i32 %13 to i64
  %3137 = add nuw i32 %5, 1
  %3138 = icmp eq i32 %13, 1
  br label %3139

3139:                                             ; preds = %3131, %3279
  %3140 = phi i64 [ 0, %3131 ], [ %3229, %3279 ]
  %3141 = phi i32 [ 0, %3131 ], [ %3231, %3279 ]
  %3142 = phi double [ 0.000000e+00, %3131 ], [ %3230, %3279 ]
  %3143 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3132, label %3144, label %3213

3144:                                             ; preds = %3139, %3203
  %3145 = phi i32 [ %3212, %3203 ], [ 0, %3139 ]
  %3146 = phi i64 [ %3154, %3203 ], [ %3136, %3139 ]
  %3147 = phi i64 [ %3211, %3203 ], [ %3135, %3139 ]
  %3148 = phi i32 [ %3209, %3203 ], [ %3143, %3139 ]
  %3149 = sub i32 %3134, %3145
  %3150 = tail call i32 @llvm.smin.i32(i32 %3149, i32 0)
  %3151 = sub i32 %3149, %3150
  %3152 = zext i32 %3151 to i64
  %3153 = add nuw nsw i64 %3152, 1
  %3154 = add nsw i64 %3146, -1
  %3155 = icmp ult i32 %3151, 31
  br i1 %3155, label %3191, label %3156

3156:                                             ; preds = %3144
  %3157 = and i64 %3153, 8589934560
  %3158 = sub i64 %3147, %3157
  br label %3159

3159:                                             ; preds = %3159, %3156
  %3160 = phi i64 [ 0, %3156 ], [ %3183, %3159 ]
  %3161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3156 ], [ %3179, %3159 ]
  %3162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3156 ], [ %3180, %3159 ]
  %3163 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3156 ], [ %3181, %3159 ]
  %3164 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3156 ], [ %3182, %3159 ]
  %3165 = sub i64 %3147, %3160
  %3166 = getelementptr inbounds i32, ptr %9, i64 %3165
  %3167 = getelementptr inbounds i32, ptr %3166, i64 -7
  %3168 = load <8 x i32>, ptr %3167, align 4, !tbaa !6
  %3169 = shufflevector <8 x i32> %3168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3170 = getelementptr inbounds i32, ptr %3166, i64 -15
  %3171 = load <8 x i32>, ptr %3170, align 4, !tbaa !6
  %3172 = shufflevector <8 x i32> %3171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3173 = getelementptr inbounds i32, ptr %3166, i64 -23
  %3174 = load <8 x i32>, ptr %3173, align 4, !tbaa !6
  %3175 = shufflevector <8 x i32> %3174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3176 = getelementptr inbounds i32, ptr %3166, i64 -31
  %3177 = load <8 x i32>, ptr %3176, align 4, !tbaa !6
  %3178 = shufflevector <8 x i32> %3177, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3179 = mul <8 x i32> %3169, %3161
  %3180 = mul <8 x i32> %3172, %3162
  %3181 = mul <8 x i32> %3175, %3163
  %3182 = mul <8 x i32> %3178, %3164
  %3183 = add nuw i64 %3160, 32
  %3184 = icmp eq i64 %3183, %3157
  br i1 %3184, label %3185, label %3159, !llvm.loop !123

3185:                                             ; preds = %3159
  %3186 = mul <8 x i32> %3180, %3179
  %3187 = mul <8 x i32> %3181, %3186
  %3188 = mul <8 x i32> %3182, %3187
  %3189 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3188)
  %3190 = icmp eq i64 %3153, %3157
  br i1 %3190, label %3203, label %3191

3191:                                             ; preds = %3144, %3185
  %3192 = phi i64 [ %3147, %3144 ], [ %3158, %3185 ]
  %3193 = phi i32 [ 1, %3144 ], [ %3189, %3185 ]
  br label %3194

3194:                                             ; preds = %3191, %3194
  %3195 = phi i64 [ %3200, %3194 ], [ %3192, %3191 ]
  %3196 = phi i32 [ %3199, %3194 ], [ %3193, %3191 ]
  %3197 = getelementptr inbounds i32, ptr %9, i64 %3195
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = mul nsw i32 %3198, %3196
  %3200 = add nsw i64 %3195, -1
  %3201 = trunc i64 %3195 to i32
  %3202 = icmp sgt i32 %3201, 0
  br i1 %3202, label %3194, label %3203, !llvm.loop !124

3203:                                             ; preds = %3194, %3185
  %3204 = phi i32 [ %3189, %3185 ], [ %3199, %3194 ]
  %3205 = and i64 %3154, 4294967295
  %3206 = getelementptr inbounds i32, ptr %6, i64 %3205
  %3207 = load i32, ptr %3206, align 4, !tbaa !6
  %3208 = mul nsw i32 %3207, %3204
  %3209 = add nsw i32 %3208, %3148
  %3210 = icmp sgt i64 %3146, 2
  %3211 = add nsw i64 %3147, -1
  %3212 = add i32 %3145, 1
  br i1 %3210, label %3144, label %3213, !llvm.loop !125

3213:                                             ; preds = %3203, %3139
  %3214 = phi i32 [ %3143, %3139 ], [ %3209, %3203 ]
  %3215 = sext i32 %3214 to i64
  %3216 = getelementptr inbounds double, ptr %2, i64 %3215
  %3217 = load double, ptr %3216, align 8, !tbaa !19
  %3218 = getelementptr inbounds i8, ptr %3106, i64 %3215
  %3219 = load i8, ptr %3218, align 1, !tbaa !12
  %3220 = sitofp i64 %3140 to double
  %3221 = uitofp i8 %3219 to double
  %3222 = fmul fast double %3217, %3221
  %3223 = fcmp fast olt double %3222, 0.000000e+00
  %3224 = fneg fast double %3222
  %3225 = select nnan ninf i1 %3223, double %3224, double %3222
  %3226 = fmul fast double %3222, %3222
  %3227 = fmul fast double %3226, %3225
  %3228 = fadd fast double %3227, %3220
  %3229 = fptosi double %3228 to i64
  store i64 %3229, ptr %3108, align 8, !tbaa !121
  %3230 = fadd fast double %3217, %3142
  %3231 = add nuw nsw i32 %3141, 1
  br i1 %3133, label %3232, label %3279

3232:                                             ; preds = %3213
  %3233 = load i32, ptr %4, align 4, !tbaa !6
  %3234 = load i32, ptr %12, align 4, !tbaa !6
  %3235 = add nsw i32 %3234, -1
  %3236 = icmp slt i32 %3233, %3235
  br i1 %3236, label %3256, label %3237

3237:                                             ; preds = %3232
  %3238 = icmp eq i32 %3233, %3235
  br i1 %3238, label %3239, label %3272

3239:                                             ; preds = %3237
  store i32 0, ptr %4, align 4, !tbaa !6
  %3240 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3240, ptr %6, align 4, !tbaa !6
  br i1 %3138, label %3279, label %3241

3241:                                             ; preds = %3239, %3266
  %3242 = phi i64 [ %3270, %3266 ], [ 1, %3239 ]
  %3243 = getelementptr inbounds i32, ptr %4, i64 %3242
  %3244 = load i32, ptr %3243, align 4, !tbaa !6
  %3245 = getelementptr inbounds i32, ptr %12, i64 %3242
  %3246 = load i32, ptr %3245, align 4, !tbaa !6
  %3247 = add nsw i32 %3246, -1
  %3248 = icmp slt i32 %3244, %3247
  br i1 %3248, label %3249, label %3264

3249:                                             ; preds = %3241
  br i1 %3236, label %3256, label %3250

3250:                                             ; preds = %3249
  %3251 = getelementptr inbounds i32, ptr %7, i64 %3242
  %3252 = load i32, ptr %3251, align 4, !tbaa !6
  %3253 = getelementptr inbounds i32, ptr %6, i64 %3242
  %3254 = load i32, ptr %3253, align 4, !tbaa !6
  %3255 = add nsw i32 %3254, %3252
  store i32 %3255, ptr %3253, align 4, !tbaa !6
  br label %3274

3256:                                             ; preds = %3232, %3249
  %3257 = phi i32 [ %3244, %3249 ], [ %3233, %3232 ]
  %3258 = phi ptr [ %3243, %3249 ], [ %4, %3232 ]
  %3259 = phi i64 [ %3242, %3249 ], [ 0, %3232 ]
  %3260 = add nsw i32 %3257, 1
  store i32 %3260, ptr %3258, align 4, !tbaa !6
  %3261 = getelementptr inbounds i32, ptr %7, i64 %3259
  %3262 = load i32, ptr %3261, align 4, !tbaa !6
  %3263 = getelementptr inbounds i32, ptr %6, i64 %3259
  br label %3274

3264:                                             ; preds = %3241
  %3265 = icmp eq i32 %3244, %3247
  br i1 %3265, label %3266, label %3272

3266:                                             ; preds = %3264
  store i32 0, ptr %3243, align 4, !tbaa !6
  %3267 = getelementptr inbounds i32, ptr %8, i64 %3242
  %3268 = load i32, ptr %3267, align 4, !tbaa !6
  %3269 = getelementptr inbounds i32, ptr %6, i64 %3242
  store i32 %3268, ptr %3269, align 4, !tbaa !6
  %3270 = add nuw nsw i64 %3242, 1
  %3271 = icmp eq i64 %3270, %3136
  br i1 %3271, label %3279, label %3241, !llvm.loop !126

3272:                                             ; preds = %3237, %3264
  %3273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3274:                                             ; preds = %3250, %3256
  %3275 = phi ptr [ %3263, %3256 ], [ %3243, %3250 ]
  %3276 = phi i32 [ %3262, %3256 ], [ 1, %3250 ]
  %3277 = load i32, ptr %3275, align 4, !tbaa !6
  %3278 = add nsw i32 %3277, %3276
  store i32 %3278, ptr %3275, align 4, !tbaa !6
  br label %3279

3279:                                             ; preds = %3266, %3274, %3239, %3213
  %3280 = icmp eq i32 %3231, %5
  br i1 %3280, label %5560, label %3139, !llvm.loop !127

3281:                                             ; preds = %3122, %3420
  %3282 = phi i64 [ 0, %3122 ], [ %3368, %3420 ]
  %3283 = phi i32 [ 0, %3122 ], [ %3369, %3420 ]
  %3284 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3123, label %3285, label %3354

3285:                                             ; preds = %3281, %3344
  %3286 = phi i32 [ %3353, %3344 ], [ 0, %3281 ]
  %3287 = phi i64 [ %3295, %3344 ], [ %3127, %3281 ]
  %3288 = phi i64 [ %3352, %3344 ], [ %3126, %3281 ]
  %3289 = phi i32 [ %3350, %3344 ], [ %3284, %3281 ]
  %3290 = sub i32 %3125, %3286
  %3291 = tail call i32 @llvm.smin.i32(i32 %3290, i32 0)
  %3292 = sub i32 %3290, %3291
  %3293 = zext i32 %3292 to i64
  %3294 = add nuw nsw i64 %3293, 1
  %3295 = add nsw i64 %3287, -1
  %3296 = icmp ult i32 %3292, 31
  br i1 %3296, label %3332, label %3297

3297:                                             ; preds = %3285
  %3298 = and i64 %3294, 8589934560
  %3299 = sub i64 %3288, %3298
  br label %3300

3300:                                             ; preds = %3300, %3297
  %3301 = phi i64 [ 0, %3297 ], [ %3324, %3300 ]
  %3302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3297 ], [ %3320, %3300 ]
  %3303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3297 ], [ %3321, %3300 ]
  %3304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3297 ], [ %3322, %3300 ]
  %3305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3297 ], [ %3323, %3300 ]
  %3306 = sub i64 %3288, %3301
  %3307 = getelementptr inbounds i32, ptr %11, i64 %3306
  %3308 = getelementptr inbounds i32, ptr %3307, i64 -7
  %3309 = load <8 x i32>, ptr %3308, align 4, !tbaa !6
  %3310 = shufflevector <8 x i32> %3309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3311 = getelementptr inbounds i32, ptr %3307, i64 -15
  %3312 = load <8 x i32>, ptr %3311, align 4, !tbaa !6
  %3313 = shufflevector <8 x i32> %3312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3314 = getelementptr inbounds i32, ptr %3307, i64 -23
  %3315 = load <8 x i32>, ptr %3314, align 4, !tbaa !6
  %3316 = shufflevector <8 x i32> %3315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3317 = getelementptr inbounds i32, ptr %3307, i64 -31
  %3318 = load <8 x i32>, ptr %3317, align 4, !tbaa !6
  %3319 = shufflevector <8 x i32> %3318, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3320 = mul <8 x i32> %3310, %3302
  %3321 = mul <8 x i32> %3313, %3303
  %3322 = mul <8 x i32> %3316, %3304
  %3323 = mul <8 x i32> %3319, %3305
  %3324 = add nuw i64 %3301, 32
  %3325 = icmp eq i64 %3324, %3298
  br i1 %3325, label %3326, label %3300, !llvm.loop !128

3326:                                             ; preds = %3300
  %3327 = mul <8 x i32> %3321, %3320
  %3328 = mul <8 x i32> %3322, %3327
  %3329 = mul <8 x i32> %3323, %3328
  %3330 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3329)
  %3331 = icmp eq i64 %3294, %3298
  br i1 %3331, label %3344, label %3332

3332:                                             ; preds = %3285, %3326
  %3333 = phi i64 [ %3288, %3285 ], [ %3299, %3326 ]
  %3334 = phi i32 [ 1, %3285 ], [ %3330, %3326 ]
  br label %3335

3335:                                             ; preds = %3332, %3335
  %3336 = phi i64 [ %3341, %3335 ], [ %3333, %3332 ]
  %3337 = phi i32 [ %3340, %3335 ], [ %3334, %3332 ]
  %3338 = getelementptr inbounds i32, ptr %11, i64 %3336
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = mul nsw i32 %3339, %3337
  %3341 = add nsw i64 %3336, -1
  %3342 = trunc i64 %3336 to i32
  %3343 = icmp sgt i32 %3342, 0
  br i1 %3343, label %3335, label %3344, !llvm.loop !129

3344:                                             ; preds = %3335, %3326
  %3345 = phi i32 [ %3330, %3326 ], [ %3340, %3335 ]
  %3346 = and i64 %3295, 4294967295
  %3347 = getelementptr inbounds i32, ptr %6, i64 %3346
  %3348 = load i32, ptr %3347, align 4, !tbaa !6
  %3349 = mul nsw i32 %3348, %3345
  %3350 = add nsw i32 %3349, %3289
  %3351 = icmp sgt i64 %3287, 2
  %3352 = add nsw i64 %3288, -1
  %3353 = add i32 %3286, 1
  br i1 %3351, label %3285, label %3354, !llvm.loop !130

3354:                                             ; preds = %3344, %3281
  %3355 = phi i32 [ %3284, %3281 ], [ %3350, %3344 ]
  %3356 = icmp slt i32 %3355, %5
  br i1 %3356, label %3359, label %3357

3357:                                             ; preds = %3354
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

3359:                                             ; preds = %3354
  %3360 = sitofp i64 %3282 to double
  %3361 = sext i32 %3355 to i64
  %3362 = getelementptr inbounds i8, ptr %3106, i64 %3361
  %3363 = load i8, ptr %3362, align 1, !tbaa !12
  %3364 = uitofp i8 %3363 to double
  %3365 = fmul fast double %3364, %3364
  %3366 = fmul fast double %3365, %3364
  %3367 = fadd fast double %3366, %3360
  %3368 = fptosi double %3367 to i64
  store i64 %3368, ptr %3108, align 8, !tbaa !121
  %3369 = add nuw nsw i32 %3283, 1
  br i1 %3124, label %3370, label %3420

3370:                                             ; preds = %3359
  %3371 = load i32, ptr %4, align 4, !tbaa !6
  %3372 = load i32, ptr %12, align 4, !tbaa !6
  %3373 = add nsw i32 %3372, -1
  %3374 = icmp slt i32 %3371, %3373
  br i1 %3374, label %3397, label %3375

3375:                                             ; preds = %3370
  %3376 = icmp eq i32 %3371, %3373
  br i1 %3376, label %3377, label %3413

3377:                                             ; preds = %3375
  store i32 0, ptr %4, align 4, !tbaa !6
  %3378 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3378, ptr %6, align 4, !tbaa !6
  br i1 %3129, label %3420, label %3379

3379:                                             ; preds = %3377, %3407
  %3380 = phi i64 [ %3411, %3407 ], [ 1, %3377 ]
  %3381 = getelementptr inbounds i32, ptr %4, i64 %3380
  %3382 = load i32, ptr %3381, align 4, !tbaa !6
  %3383 = getelementptr inbounds i32, ptr %12, i64 %3380
  %3384 = load i32, ptr %3383, align 4, !tbaa !6
  %3385 = add nsw i32 %3384, -1
  %3386 = icmp slt i32 %3382, %3385
  br i1 %3386, label %3387, label %3405

3387:                                             ; preds = %3379
  br i1 %3374, label %3397, label %3388

3388:                                             ; preds = %3387
  %3389 = shl i64 %3380, 32
  %3390 = add i64 %3389, -4294967296
  %3391 = ashr exact i64 %3390, 32
  %3392 = getelementptr inbounds i32, ptr %7, i64 %3391
  %3393 = load i32, ptr %3392, align 4, !tbaa !6
  %3394 = getelementptr inbounds i32, ptr %6, i64 %3380
  %3395 = load i32, ptr %3394, align 4, !tbaa !6
  %3396 = add nsw i32 %3395, %3393
  store i32 %3396, ptr %3394, align 4, !tbaa !6
  br label %3415

3397:                                             ; preds = %3370, %3387
  %3398 = phi i32 [ %3382, %3387 ], [ %3371, %3370 ]
  %3399 = phi ptr [ %3381, %3387 ], [ %4, %3370 ]
  %3400 = phi i64 [ %3380, %3387 ], [ 0, %3370 ]
  %3401 = add nsw i32 %3398, 1
  store i32 %3401, ptr %3399, align 4, !tbaa !6
  %3402 = getelementptr inbounds i32, ptr %7, i64 %3400
  %3403 = load i32, ptr %3402, align 4, !tbaa !6
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3400
  br label %3415

3405:                                             ; preds = %3379
  %3406 = icmp eq i32 %3382, %3385
  br i1 %3406, label %3407, label %3413

3407:                                             ; preds = %3405
  store i32 0, ptr %3381, align 4, !tbaa !6
  %3408 = getelementptr inbounds i32, ptr %8, i64 %3380
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %6, i64 %3380
  store i32 %3409, ptr %3410, align 4, !tbaa !6
  %3411 = add nuw nsw i64 %3380, 1
  %3412 = icmp eq i64 %3411, %3127
  br i1 %3412, label %3420, label %3379, !llvm.loop !131

3413:                                             ; preds = %3375, %3405
  %3414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3415:                                             ; preds = %3388, %3397
  %3416 = phi ptr [ %3404, %3397 ], [ %3381, %3388 ]
  %3417 = phi i32 [ %3403, %3397 ], [ 1, %3388 ]
  %3418 = load i32, ptr %3416, align 4, !tbaa !6
  %3419 = add nsw i32 %3418, %3417
  store i32 %3419, ptr %3416, align 4, !tbaa !6
  br label %3420

3420:                                             ; preds = %3407, %3415, %3377, %3359
  %3421 = icmp eq i32 %3369, %5
  br i1 %3421, label %5560, label %3281, !llvm.loop !132

3422:                                             ; preds = %3115
  %3423 = getelementptr inbounds i32, ptr %3, i64 %19
  %3424 = load i32, ptr %3423, align 4, !tbaa !6
  %3425 = icmp eq i32 %3424, 0
  %3426 = icmp sgt i32 %5, 0
  br i1 %3425, label %3436, label %3427

3427:                                             ; preds = %3422
  br i1 %3426, label %3428, label %5560

3428:                                             ; preds = %3427
  %3429 = icmp sgt i32 %13, 1
  %3430 = icmp sgt i32 %13, 0
  %3431 = add i32 %13, -2
  %3432 = zext i32 %3431 to i64
  %3433 = zext i32 %13 to i64
  %3434 = add nuw i32 %5, 1
  %3435 = icmp eq i32 %13, 1
  br label %3579

3436:                                             ; preds = %3422
  br i1 %3426, label %3437, label %5560

3437:                                             ; preds = %3436
  %3438 = icmp sgt i32 %13, 1
  %3439 = icmp sgt i32 %13, 0
  %3440 = add i32 %13, -2
  %3441 = zext i32 %3440 to i64
  %3442 = zext i32 %13 to i64
  %3443 = add nuw i32 %5, 1
  %3444 = icmp eq i32 %13, 1
  br label %3445

3445:                                             ; preds = %3437, %3577
  %3446 = phi i64 [ 0, %3437 ], [ %3527, %3577 ]
  %3447 = phi i32 [ 0, %3437 ], [ %3529, %3577 ]
  %3448 = phi double [ 0.000000e+00, %3437 ], [ %3528, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3438, label %3450, label %3519

3450:                                             ; preds = %3445, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3445 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3442, %3445 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3441, %3445 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3445 ]
  %3455 = sub i32 %3440, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %9, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !133

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %9, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !134

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !135

3519:                                             ; preds = %3509, %3445
  %3520 = phi i32 [ %3449, %3445 ], [ %3515, %3509 ]
  %3521 = sext i32 %3520 to i64
  %3522 = getelementptr inbounds i8, ptr %3106, i64 %3521
  %3523 = load i8, ptr %3522, align 1, !tbaa !12
  %3524 = zext i8 %3523 to i64
  %3525 = mul nuw nsw i64 %3524, %3524
  %3526 = mul nuw nsw i64 %3525, %3524
  %3527 = add nuw nsw i64 %3526, %3446
  store i64 %3527, ptr %3108, align 8, !tbaa !121
  %3528 = fadd fast double %3448, 1.000000e+00
  %3529 = add nuw nsw i32 %3447, 1
  br i1 %3439, label %3530, label %3577

3530:                                             ; preds = %3519
  %3531 = load i32, ptr %4, align 4, !tbaa !6
  %3532 = load i32, ptr %12, align 4, !tbaa !6
  %3533 = add nsw i32 %3532, -1
  %3534 = icmp slt i32 %3531, %3533
  br i1 %3534, label %3554, label %3535

3535:                                             ; preds = %3530
  %3536 = icmp eq i32 %3531, %3533
  br i1 %3536, label %3537, label %3570

3537:                                             ; preds = %3535
  store i32 0, ptr %4, align 4, !tbaa !6
  %3538 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3538, ptr %6, align 4, !tbaa !6
  br i1 %3444, label %3577, label %3539

3539:                                             ; preds = %3537, %3564
  %3540 = phi i64 [ %3568, %3564 ], [ 1, %3537 ]
  %3541 = getelementptr inbounds i32, ptr %4, i64 %3540
  %3542 = load i32, ptr %3541, align 4, !tbaa !6
  %3543 = getelementptr inbounds i32, ptr %12, i64 %3540
  %3544 = load i32, ptr %3543, align 4, !tbaa !6
  %3545 = add nsw i32 %3544, -1
  %3546 = icmp slt i32 %3542, %3545
  br i1 %3546, label %3547, label %3562

3547:                                             ; preds = %3539
  br i1 %3534, label %3554, label %3548

3548:                                             ; preds = %3547
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3540
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3540
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3530, %3547
  %3555 = phi i32 [ %3542, %3547 ], [ %3531, %3530 ]
  %3556 = phi ptr [ %3541, %3547 ], [ %4, %3530 ]
  %3557 = phi i64 [ %3540, %3547 ], [ 0, %3530 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3539
  %3563 = icmp eq i32 %3542, %3545
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3541, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3540
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3540
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3540, 1
  %3569 = icmp eq i64 %3568, %3442
  br i1 %3569, label %3577, label %3539, !llvm.loop !136

3570:                                             ; preds = %3535, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3572:                                             ; preds = %3548, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3541, %3548 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3548 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3537, %3519
  %3578 = icmp eq i32 %3529, %5
  br i1 %3578, label %5560, label %3445, !llvm.loop !137

3579:                                             ; preds = %3428, %3716
  %3580 = phi i64 [ 0, %3428 ], [ %3664, %3716 ]
  %3581 = phi i32 [ 0, %3428 ], [ %3665, %3716 ]
  %3582 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3429, label %3583, label %3652

3583:                                             ; preds = %3579, %3642
  %3584 = phi i32 [ %3651, %3642 ], [ 0, %3579 ]
  %3585 = phi i64 [ %3593, %3642 ], [ %3433, %3579 ]
  %3586 = phi i64 [ %3650, %3642 ], [ %3432, %3579 ]
  %3587 = phi i32 [ %3648, %3642 ], [ %3582, %3579 ]
  %3588 = sub i32 %3431, %3584
  %3589 = tail call i32 @llvm.smin.i32(i32 %3588, i32 0)
  %3590 = sub i32 %3588, %3589
  %3591 = zext i32 %3590 to i64
  %3592 = add nuw nsw i64 %3591, 1
  %3593 = add nsw i64 %3585, -1
  %3594 = icmp ult i32 %3590, 31
  br i1 %3594, label %3630, label %3595

3595:                                             ; preds = %3583
  %3596 = and i64 %3592, 8589934560
  %3597 = sub i64 %3586, %3596
  br label %3598

3598:                                             ; preds = %3598, %3595
  %3599 = phi i64 [ 0, %3595 ], [ %3622, %3598 ]
  %3600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3595 ], [ %3618, %3598 ]
  %3601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3595 ], [ %3619, %3598 ]
  %3602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3595 ], [ %3620, %3598 ]
  %3603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3595 ], [ %3621, %3598 ]
  %3604 = sub i64 %3586, %3599
  %3605 = getelementptr inbounds i32, ptr %11, i64 %3604
  %3606 = getelementptr inbounds i32, ptr %3605, i64 -7
  %3607 = load <8 x i32>, ptr %3606, align 4, !tbaa !6
  %3608 = shufflevector <8 x i32> %3607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3609 = getelementptr inbounds i32, ptr %3605, i64 -15
  %3610 = load <8 x i32>, ptr %3609, align 4, !tbaa !6
  %3611 = shufflevector <8 x i32> %3610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3612 = getelementptr inbounds i32, ptr %3605, i64 -23
  %3613 = load <8 x i32>, ptr %3612, align 4, !tbaa !6
  %3614 = shufflevector <8 x i32> %3613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3615 = getelementptr inbounds i32, ptr %3605, i64 -31
  %3616 = load <8 x i32>, ptr %3615, align 4, !tbaa !6
  %3617 = shufflevector <8 x i32> %3616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3618 = mul <8 x i32> %3608, %3600
  %3619 = mul <8 x i32> %3611, %3601
  %3620 = mul <8 x i32> %3614, %3602
  %3621 = mul <8 x i32> %3617, %3603
  %3622 = add nuw i64 %3599, 32
  %3623 = icmp eq i64 %3622, %3596
  br i1 %3623, label %3624, label %3598, !llvm.loop !138

3624:                                             ; preds = %3598
  %3625 = mul <8 x i32> %3619, %3618
  %3626 = mul <8 x i32> %3620, %3625
  %3627 = mul <8 x i32> %3621, %3626
  %3628 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3627)
  %3629 = icmp eq i64 %3592, %3596
  br i1 %3629, label %3642, label %3630

3630:                                             ; preds = %3583, %3624
  %3631 = phi i64 [ %3586, %3583 ], [ %3597, %3624 ]
  %3632 = phi i32 [ 1, %3583 ], [ %3628, %3624 ]
  br label %3633

3633:                                             ; preds = %3630, %3633
  %3634 = phi i64 [ %3639, %3633 ], [ %3631, %3630 ]
  %3635 = phi i32 [ %3638, %3633 ], [ %3632, %3630 ]
  %3636 = getelementptr inbounds i32, ptr %11, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !6
  %3638 = mul nsw i32 %3637, %3635
  %3639 = add nsw i64 %3634, -1
  %3640 = trunc i64 %3634 to i32
  %3641 = icmp sgt i32 %3640, 0
  br i1 %3641, label %3633, label %3642, !llvm.loop !139

3642:                                             ; preds = %3633, %3624
  %3643 = phi i32 [ %3628, %3624 ], [ %3638, %3633 ]
  %3644 = and i64 %3593, 4294967295
  %3645 = getelementptr inbounds i32, ptr %6, i64 %3644
  %3646 = load i32, ptr %3645, align 4, !tbaa !6
  %3647 = mul nsw i32 %3646, %3643
  %3648 = add nsw i32 %3647, %3587
  %3649 = icmp sgt i64 %3585, 2
  %3650 = add nsw i64 %3586, -1
  %3651 = add i32 %3584, 1
  br i1 %3649, label %3583, label %3652, !llvm.loop !140

3652:                                             ; preds = %3642, %3579
  %3653 = phi i32 [ %3582, %3579 ], [ %3648, %3642 ]
  %3654 = icmp slt i32 %3653, %5
  br i1 %3654, label %3657, label %3655

3655:                                             ; preds = %3652
  %3656 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

3657:                                             ; preds = %3652
  %3658 = sext i32 %3653 to i64
  %3659 = getelementptr inbounds i8, ptr %3106, i64 %3658
  %3660 = load i8, ptr %3659, align 1, !tbaa !12
  %3661 = zext i8 %3660 to i64
  %3662 = mul nuw nsw i64 %3661, %3661
  %3663 = mul nuw nsw i64 %3662, %3661
  %3664 = add nuw nsw i64 %3663, %3580
  store i64 %3664, ptr %3108, align 8, !tbaa !121
  %3665 = add nuw nsw i32 %3581, 1
  br i1 %3430, label %3666, label %3716

3666:                                             ; preds = %3657
  %3667 = load i32, ptr %4, align 4, !tbaa !6
  %3668 = load i32, ptr %12, align 4, !tbaa !6
  %3669 = add nsw i32 %3668, -1
  %3670 = icmp slt i32 %3667, %3669
  br i1 %3670, label %3693, label %3671

3671:                                             ; preds = %3666
  %3672 = icmp eq i32 %3667, %3669
  br i1 %3672, label %3673, label %3709

3673:                                             ; preds = %3671
  store i32 0, ptr %4, align 4, !tbaa !6
  %3674 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3674, ptr %6, align 4, !tbaa !6
  br i1 %3435, label %3716, label %3675

3675:                                             ; preds = %3673, %3703
  %3676 = phi i64 [ %3707, %3703 ], [ 1, %3673 ]
  %3677 = getelementptr inbounds i32, ptr %4, i64 %3676
  %3678 = load i32, ptr %3677, align 4, !tbaa !6
  %3679 = getelementptr inbounds i32, ptr %12, i64 %3676
  %3680 = load i32, ptr %3679, align 4, !tbaa !6
  %3681 = add nsw i32 %3680, -1
  %3682 = icmp slt i32 %3678, %3681
  br i1 %3682, label %3683, label %3701

3683:                                             ; preds = %3675
  br i1 %3670, label %3693, label %3684

3684:                                             ; preds = %3683
  %3685 = shl i64 %3676, 32
  %3686 = add i64 %3685, -4294967296
  %3687 = ashr exact i64 %3686, 32
  %3688 = getelementptr inbounds i32, ptr %7, i64 %3687
  %3689 = load i32, ptr %3688, align 4, !tbaa !6
  %3690 = getelementptr inbounds i32, ptr %6, i64 %3676
  %3691 = load i32, ptr %3690, align 4, !tbaa !6
  %3692 = add nsw i32 %3691, %3689
  store i32 %3692, ptr %3690, align 4, !tbaa !6
  br label %3711

3693:                                             ; preds = %3666, %3683
  %3694 = phi i32 [ %3678, %3683 ], [ %3667, %3666 ]
  %3695 = phi ptr [ %3677, %3683 ], [ %4, %3666 ]
  %3696 = phi i64 [ %3676, %3683 ], [ 0, %3666 ]
  %3697 = add nsw i32 %3694, 1
  store i32 %3697, ptr %3695, align 4, !tbaa !6
  %3698 = getelementptr inbounds i32, ptr %7, i64 %3696
  %3699 = load i32, ptr %3698, align 4, !tbaa !6
  %3700 = getelementptr inbounds i32, ptr %6, i64 %3696
  br label %3711

3701:                                             ; preds = %3675
  %3702 = icmp eq i32 %3678, %3681
  br i1 %3702, label %3703, label %3709

3703:                                             ; preds = %3701
  store i32 0, ptr %3677, align 4, !tbaa !6
  %3704 = getelementptr inbounds i32, ptr %8, i64 %3676
  %3705 = load i32, ptr %3704, align 4, !tbaa !6
  %3706 = getelementptr inbounds i32, ptr %6, i64 %3676
  store i32 %3705, ptr %3706, align 4, !tbaa !6
  %3707 = add nuw nsw i64 %3676, 1
  %3708 = icmp eq i64 %3707, %3433
  br i1 %3708, label %3716, label %3675, !llvm.loop !141

3709:                                             ; preds = %3671, %3701
  %3710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3711:                                             ; preds = %3684, %3693
  %3712 = phi ptr [ %3700, %3693 ], [ %3677, %3684 ]
  %3713 = phi i32 [ %3699, %3693 ], [ 1, %3684 ]
  %3714 = load i32, ptr %3712, align 4, !tbaa !6
  %3715 = add nsw i32 %3714, %3713
  store i32 %3715, ptr %3712, align 4, !tbaa !6
  br label %3716

3716:                                             ; preds = %3703, %3711, %3673, %3657
  %3717 = icmp eq i32 %3665, %5
  br i1 %3717, label %5560, label %3579, !llvm.loop !142

3718:                                             ; preds = %3115
  %3719 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

3720:                                             ; preds = %18
  %3721 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3722 = load ptr, ptr %3721, align 8, !tbaa !10
  %3723 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3724 = load ptr, ptr %3723, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3724, align 8, !tbaa !19
  %3725 = icmp eq i32 %13, 0
  br i1 %3725, label %3726, label %3731

3726:                                             ; preds = %3720
  %3727 = load i8, ptr %3722, align 1, !tbaa !12
  %3728 = uitofp i8 %3727 to double
  %3729 = fmul fast double %3728, %3728
  %3730 = fmul fast double %3729, %3728
  store double %3730, ptr %3724, align 8, !tbaa !19
  br label %5560

3731:                                             ; preds = %3720
  switch i32 %1, label %4330 [
    i32 1, label %3732
    i32 0, label %4034
  ]

3732:                                             ; preds = %3731
  %3733 = getelementptr inbounds i32, ptr %3, i64 %19
  %3734 = load i32, ptr %3733, align 4, !tbaa !6
  %3735 = icmp eq i32 %3734, 0
  %3736 = icmp sgt i32 %5, 0
  br i1 %3735, label %3746, label %3737

3737:                                             ; preds = %3732
  br i1 %3736, label %3738, label %5560

3738:                                             ; preds = %3737
  %3739 = icmp sgt i32 %13, 1
  %3740 = icmp sgt i32 %13, 0
  %3741 = add i32 %13, -2
  %3742 = zext i32 %3741 to i64
  %3743 = zext i32 %13 to i64
  %3744 = add nuw i32 %5, 1
  %3745 = icmp eq i32 %13, 1
  br label %3895

3746:                                             ; preds = %3732
  br i1 %3736, label %3747, label %5560

3747:                                             ; preds = %3746
  %3748 = icmp sgt i32 %13, 1
  %3749 = icmp sgt i32 %13, 0
  %3750 = add i32 %13, -2
  %3751 = zext i32 %3750 to i64
  %3752 = zext i32 %13 to i64
  %3753 = add nuw i32 %5, 1
  %3754 = icmp eq i32 %13, 1
  br label %3755

3755:                                             ; preds = %3747, %3893
  %3756 = phi double [ 0.000000e+00, %3747 ], [ %3843, %3893 ]
  %3757 = phi i32 [ 0, %3747 ], [ %3845, %3893 ]
  %3758 = phi double [ 0.000000e+00, %3747 ], [ %3844, %3893 ]
  %3759 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3748, label %3760, label %3829

3760:                                             ; preds = %3755, %3819
  %3761 = phi i32 [ %3828, %3819 ], [ 0, %3755 ]
  %3762 = phi i64 [ %3770, %3819 ], [ %3752, %3755 ]
  %3763 = phi i64 [ %3827, %3819 ], [ %3751, %3755 ]
  %3764 = phi i32 [ %3825, %3819 ], [ %3759, %3755 ]
  %3765 = sub i32 %3750, %3761
  %3766 = tail call i32 @llvm.smin.i32(i32 %3765, i32 0)
  %3767 = sub i32 %3765, %3766
  %3768 = zext i32 %3767 to i64
  %3769 = add nuw nsw i64 %3768, 1
  %3770 = add nsw i64 %3762, -1
  %3771 = icmp ult i32 %3767, 31
  br i1 %3771, label %3807, label %3772

3772:                                             ; preds = %3760
  %3773 = and i64 %3769, 8589934560
  %3774 = sub i64 %3763, %3773
  br label %3775

3775:                                             ; preds = %3775, %3772
  %3776 = phi i64 [ 0, %3772 ], [ %3799, %3775 ]
  %3777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3772 ], [ %3795, %3775 ]
  %3778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3772 ], [ %3796, %3775 ]
  %3779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3772 ], [ %3797, %3775 ]
  %3780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3772 ], [ %3798, %3775 ]
  %3781 = sub i64 %3763, %3776
  %3782 = getelementptr inbounds i32, ptr %9, i64 %3781
  %3783 = getelementptr inbounds i32, ptr %3782, i64 -7
  %3784 = load <8 x i32>, ptr %3783, align 4, !tbaa !6
  %3785 = shufflevector <8 x i32> %3784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3786 = getelementptr inbounds i32, ptr %3782, i64 -15
  %3787 = load <8 x i32>, ptr %3786, align 4, !tbaa !6
  %3788 = shufflevector <8 x i32> %3787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3789 = getelementptr inbounds i32, ptr %3782, i64 -23
  %3790 = load <8 x i32>, ptr %3789, align 4, !tbaa !6
  %3791 = shufflevector <8 x i32> %3790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3792 = getelementptr inbounds i32, ptr %3782, i64 -31
  %3793 = load <8 x i32>, ptr %3792, align 4, !tbaa !6
  %3794 = shufflevector <8 x i32> %3793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3795 = mul <8 x i32> %3785, %3777
  %3796 = mul <8 x i32> %3788, %3778
  %3797 = mul <8 x i32> %3791, %3779
  %3798 = mul <8 x i32> %3794, %3780
  %3799 = add nuw i64 %3776, 32
  %3800 = icmp eq i64 %3799, %3773
  br i1 %3800, label %3801, label %3775, !llvm.loop !143

3801:                                             ; preds = %3775
  %3802 = mul <8 x i32> %3796, %3795
  %3803 = mul <8 x i32> %3797, %3802
  %3804 = mul <8 x i32> %3798, %3803
  %3805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3804)
  %3806 = icmp eq i64 %3769, %3773
  br i1 %3806, label %3819, label %3807

3807:                                             ; preds = %3760, %3801
  %3808 = phi i64 [ %3763, %3760 ], [ %3774, %3801 ]
  %3809 = phi i32 [ 1, %3760 ], [ %3805, %3801 ]
  br label %3810

3810:                                             ; preds = %3807, %3810
  %3811 = phi i64 [ %3816, %3810 ], [ %3808, %3807 ]
  %3812 = phi i32 [ %3815, %3810 ], [ %3809, %3807 ]
  %3813 = getelementptr inbounds i32, ptr %9, i64 %3811
  %3814 = load i32, ptr %3813, align 4, !tbaa !6
  %3815 = mul nsw i32 %3814, %3812
  %3816 = add nsw i64 %3811, -1
  %3817 = trunc i64 %3811 to i32
  %3818 = icmp sgt i32 %3817, 0
  br i1 %3818, label %3810, label %3819, !llvm.loop !144

3819:                                             ; preds = %3810, %3801
  %3820 = phi i32 [ %3805, %3801 ], [ %3815, %3810 ]
  %3821 = and i64 %3770, 4294967295
  %3822 = getelementptr inbounds i32, ptr %6, i64 %3821
  %3823 = load i32, ptr %3822, align 4, !tbaa !6
  %3824 = mul nsw i32 %3823, %3820
  %3825 = add nsw i32 %3824, %3764
  %3826 = icmp sgt i64 %3762, 2
  %3827 = add nsw i64 %3763, -1
  %3828 = add i32 %3761, 1
  br i1 %3826, label %3760, label %3829, !llvm.loop !145

3829:                                             ; preds = %3819, %3755
  %3830 = phi i32 [ %3759, %3755 ], [ %3825, %3819 ]
  %3831 = sext i32 %3830 to i64
  %3832 = getelementptr inbounds double, ptr %2, i64 %3831
  %3833 = load double, ptr %3832, align 8, !tbaa !19
  %3834 = getelementptr inbounds i8, ptr %3722, i64 %3831
  %3835 = load i8, ptr %3834, align 1, !tbaa !12
  %3836 = uitofp i8 %3835 to double
  %3837 = fmul fast double %3833, %3836
  %3838 = fcmp fast olt double %3837, 0.000000e+00
  %3839 = fneg fast double %3837
  %3840 = select nnan ninf i1 %3838, double %3839, double %3837
  %3841 = fmul fast double %3837, %3837
  %3842 = fmul fast double %3841, %3840
  %3843 = fadd fast double %3842, %3756
  store double %3843, ptr %3724, align 8, !tbaa !19
  %3844 = fadd fast double %3833, %3758
  %3845 = add nuw nsw i32 %3757, 1
  br i1 %3749, label %3846, label %3893

3846:                                             ; preds = %3829
  %3847 = load i32, ptr %4, align 4, !tbaa !6
  %3848 = load i32, ptr %12, align 4, !tbaa !6
  %3849 = add nsw i32 %3848, -1
  %3850 = icmp slt i32 %3847, %3849
  br i1 %3850, label %3870, label %3851

3851:                                             ; preds = %3846
  %3852 = icmp eq i32 %3847, %3849
  br i1 %3852, label %3853, label %3886

3853:                                             ; preds = %3851
  store i32 0, ptr %4, align 4, !tbaa !6
  %3854 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3854, ptr %6, align 4, !tbaa !6
  br i1 %3754, label %3893, label %3855

3855:                                             ; preds = %3853, %3880
  %3856 = phi i64 [ %3884, %3880 ], [ 1, %3853 ]
  %3857 = getelementptr inbounds i32, ptr %4, i64 %3856
  %3858 = load i32, ptr %3857, align 4, !tbaa !6
  %3859 = getelementptr inbounds i32, ptr %12, i64 %3856
  %3860 = load i32, ptr %3859, align 4, !tbaa !6
  %3861 = add nsw i32 %3860, -1
  %3862 = icmp slt i32 %3858, %3861
  br i1 %3862, label %3863, label %3878

3863:                                             ; preds = %3855
  br i1 %3850, label %3870, label %3864

3864:                                             ; preds = %3863
  %3865 = getelementptr inbounds i32, ptr %7, i64 %3856
  %3866 = load i32, ptr %3865, align 4, !tbaa !6
  %3867 = getelementptr inbounds i32, ptr %6, i64 %3856
  %3868 = load i32, ptr %3867, align 4, !tbaa !6
  %3869 = add nsw i32 %3868, %3866
  store i32 %3869, ptr %3867, align 4, !tbaa !6
  br label %3888

3870:                                             ; preds = %3846, %3863
  %3871 = phi i32 [ %3858, %3863 ], [ %3847, %3846 ]
  %3872 = phi ptr [ %3857, %3863 ], [ %4, %3846 ]
  %3873 = phi i64 [ %3856, %3863 ], [ 0, %3846 ]
  %3874 = add nsw i32 %3871, 1
  store i32 %3874, ptr %3872, align 4, !tbaa !6
  %3875 = getelementptr inbounds i32, ptr %7, i64 %3873
  %3876 = load i32, ptr %3875, align 4, !tbaa !6
  %3877 = getelementptr inbounds i32, ptr %6, i64 %3873
  br label %3888

3878:                                             ; preds = %3855
  %3879 = icmp eq i32 %3858, %3861
  br i1 %3879, label %3880, label %3886

3880:                                             ; preds = %3878
  store i32 0, ptr %3857, align 4, !tbaa !6
  %3881 = getelementptr inbounds i32, ptr %8, i64 %3856
  %3882 = load i32, ptr %3881, align 4, !tbaa !6
  %3883 = getelementptr inbounds i32, ptr %6, i64 %3856
  store i32 %3882, ptr %3883, align 4, !tbaa !6
  %3884 = add nuw nsw i64 %3856, 1
  %3885 = icmp eq i64 %3884, %3752
  br i1 %3885, label %3893, label %3855, !llvm.loop !146

3886:                                             ; preds = %3851, %3878
  %3887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

3888:                                             ; preds = %3864, %3870
  %3889 = phi ptr [ %3877, %3870 ], [ %3857, %3864 ]
  %3890 = phi i32 [ %3876, %3870 ], [ 1, %3864 ]
  %3891 = load i32, ptr %3889, align 4, !tbaa !6
  %3892 = add nsw i32 %3891, %3890
  store i32 %3892, ptr %3889, align 4, !tbaa !6
  br label %3893

3893:                                             ; preds = %3880, %3888, %3853, %3829
  %3894 = icmp eq i32 %3845, %5
  br i1 %3894, label %5560, label %3755, !llvm.loop !147

3895:                                             ; preds = %3738, %4032
  %3896 = phi double [ 0.000000e+00, %3738 ], [ %3980, %4032 ]
  %3897 = phi i32 [ 0, %3738 ], [ %3981, %4032 ]
  %3898 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3739, label %3899, label %3968

3899:                                             ; preds = %3895, %3958
  %3900 = phi i32 [ %3967, %3958 ], [ 0, %3895 ]
  %3901 = phi i64 [ %3909, %3958 ], [ %3743, %3895 ]
  %3902 = phi i64 [ %3966, %3958 ], [ %3742, %3895 ]
  %3903 = phi i32 [ %3964, %3958 ], [ %3898, %3895 ]
  %3904 = sub i32 %3741, %3900
  %3905 = tail call i32 @llvm.smin.i32(i32 %3904, i32 0)
  %3906 = sub i32 %3904, %3905
  %3907 = zext i32 %3906 to i64
  %3908 = add nuw nsw i64 %3907, 1
  %3909 = add nsw i64 %3901, -1
  %3910 = icmp ult i32 %3906, 31
  br i1 %3910, label %3946, label %3911

3911:                                             ; preds = %3899
  %3912 = and i64 %3908, 8589934560
  %3913 = sub i64 %3902, %3912
  br label %3914

3914:                                             ; preds = %3914, %3911
  %3915 = phi i64 [ 0, %3911 ], [ %3938, %3914 ]
  %3916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3911 ], [ %3934, %3914 ]
  %3917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3911 ], [ %3935, %3914 ]
  %3918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3911 ], [ %3936, %3914 ]
  %3919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3911 ], [ %3937, %3914 ]
  %3920 = sub i64 %3902, %3915
  %3921 = getelementptr inbounds i32, ptr %11, i64 %3920
  %3922 = getelementptr inbounds i32, ptr %3921, i64 -7
  %3923 = load <8 x i32>, ptr %3922, align 4, !tbaa !6
  %3924 = shufflevector <8 x i32> %3923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3925 = getelementptr inbounds i32, ptr %3921, i64 -15
  %3926 = load <8 x i32>, ptr %3925, align 4, !tbaa !6
  %3927 = shufflevector <8 x i32> %3926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3928 = getelementptr inbounds i32, ptr %3921, i64 -23
  %3929 = load <8 x i32>, ptr %3928, align 4, !tbaa !6
  %3930 = shufflevector <8 x i32> %3929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3931 = getelementptr inbounds i32, ptr %3921, i64 -31
  %3932 = load <8 x i32>, ptr %3931, align 4, !tbaa !6
  %3933 = shufflevector <8 x i32> %3932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3934 = mul <8 x i32> %3924, %3916
  %3935 = mul <8 x i32> %3927, %3917
  %3936 = mul <8 x i32> %3930, %3918
  %3937 = mul <8 x i32> %3933, %3919
  %3938 = add nuw i64 %3915, 32
  %3939 = icmp eq i64 %3938, %3912
  br i1 %3939, label %3940, label %3914, !llvm.loop !148

3940:                                             ; preds = %3914
  %3941 = mul <8 x i32> %3935, %3934
  %3942 = mul <8 x i32> %3936, %3941
  %3943 = mul <8 x i32> %3937, %3942
  %3944 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3943)
  %3945 = icmp eq i64 %3908, %3912
  br i1 %3945, label %3958, label %3946

3946:                                             ; preds = %3899, %3940
  %3947 = phi i64 [ %3902, %3899 ], [ %3913, %3940 ]
  %3948 = phi i32 [ 1, %3899 ], [ %3944, %3940 ]
  br label %3949

3949:                                             ; preds = %3946, %3949
  %3950 = phi i64 [ %3955, %3949 ], [ %3947, %3946 ]
  %3951 = phi i32 [ %3954, %3949 ], [ %3948, %3946 ]
  %3952 = getelementptr inbounds i32, ptr %11, i64 %3950
  %3953 = load i32, ptr %3952, align 4, !tbaa !6
  %3954 = mul nsw i32 %3953, %3951
  %3955 = add nsw i64 %3950, -1
  %3956 = trunc i64 %3950 to i32
  %3957 = icmp sgt i32 %3956, 0
  br i1 %3957, label %3949, label %3958, !llvm.loop !149

3958:                                             ; preds = %3949, %3940
  %3959 = phi i32 [ %3944, %3940 ], [ %3954, %3949 ]
  %3960 = and i64 %3909, 4294967295
  %3961 = getelementptr inbounds i32, ptr %6, i64 %3960
  %3962 = load i32, ptr %3961, align 4, !tbaa !6
  %3963 = mul nsw i32 %3962, %3959
  %3964 = add nsw i32 %3963, %3903
  %3965 = icmp sgt i64 %3901, 2
  %3966 = add nsw i64 %3902, -1
  %3967 = add i32 %3900, 1
  br i1 %3965, label %3899, label %3968, !llvm.loop !150

3968:                                             ; preds = %3958, %3895
  %3969 = phi i32 [ %3898, %3895 ], [ %3964, %3958 ]
  %3970 = icmp slt i32 %3969, %5
  br i1 %3970, label %3973, label %3971

3971:                                             ; preds = %3968
  %3972 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

3973:                                             ; preds = %3968
  %3974 = sext i32 %3969 to i64
  %3975 = getelementptr inbounds i8, ptr %3722, i64 %3974
  %3976 = load i8, ptr %3975, align 1, !tbaa !12
  %3977 = uitofp i8 %3976 to double
  %3978 = fmul fast double %3977, %3977
  %3979 = fmul fast double %3978, %3977
  %3980 = fadd fast double %3979, %3896
  store double %3980, ptr %3724, align 8, !tbaa !19
  %3981 = add nuw nsw i32 %3897, 1
  br i1 %3740, label %3982, label %4032

3982:                                             ; preds = %3973
  %3983 = load i32, ptr %4, align 4, !tbaa !6
  %3984 = load i32, ptr %12, align 4, !tbaa !6
  %3985 = add nsw i32 %3984, -1
  %3986 = icmp slt i32 %3983, %3985
  br i1 %3986, label %4009, label %3987

3987:                                             ; preds = %3982
  %3988 = icmp eq i32 %3983, %3985
  br i1 %3988, label %3989, label %4025

3989:                                             ; preds = %3987
  store i32 0, ptr %4, align 4, !tbaa !6
  %3990 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3990, ptr %6, align 4, !tbaa !6
  br i1 %3745, label %4032, label %3991

3991:                                             ; preds = %3989, %4019
  %3992 = phi i64 [ %4023, %4019 ], [ 1, %3989 ]
  %3993 = getelementptr inbounds i32, ptr %4, i64 %3992
  %3994 = load i32, ptr %3993, align 4, !tbaa !6
  %3995 = getelementptr inbounds i32, ptr %12, i64 %3992
  %3996 = load i32, ptr %3995, align 4, !tbaa !6
  %3997 = add nsw i32 %3996, -1
  %3998 = icmp slt i32 %3994, %3997
  br i1 %3998, label %3999, label %4017

3999:                                             ; preds = %3991
  br i1 %3986, label %4009, label %4000

4000:                                             ; preds = %3999
  %4001 = shl i64 %3992, 32
  %4002 = add i64 %4001, -4294967296
  %4003 = ashr exact i64 %4002, 32
  %4004 = getelementptr inbounds i32, ptr %7, i64 %4003
  %4005 = load i32, ptr %4004, align 4, !tbaa !6
  %4006 = getelementptr inbounds i32, ptr %6, i64 %3992
  %4007 = load i32, ptr %4006, align 4, !tbaa !6
  %4008 = add nsw i32 %4007, %4005
  store i32 %4008, ptr %4006, align 4, !tbaa !6
  br label %4027

4009:                                             ; preds = %3982, %3999
  %4010 = phi i32 [ %3994, %3999 ], [ %3983, %3982 ]
  %4011 = phi ptr [ %3993, %3999 ], [ %4, %3982 ]
  %4012 = phi i64 [ %3992, %3999 ], [ 0, %3982 ]
  %4013 = add nsw i32 %4010, 1
  store i32 %4013, ptr %4011, align 4, !tbaa !6
  %4014 = getelementptr inbounds i32, ptr %7, i64 %4012
  %4015 = load i32, ptr %4014, align 4, !tbaa !6
  %4016 = getelementptr inbounds i32, ptr %6, i64 %4012
  br label %4027

4017:                                             ; preds = %3991
  %4018 = icmp eq i32 %3994, %3997
  br i1 %4018, label %4019, label %4025

4019:                                             ; preds = %4017
  store i32 0, ptr %3993, align 4, !tbaa !6
  %4020 = getelementptr inbounds i32, ptr %8, i64 %3992
  %4021 = load i32, ptr %4020, align 4, !tbaa !6
  %4022 = getelementptr inbounds i32, ptr %6, i64 %3992
  store i32 %4021, ptr %4022, align 4, !tbaa !6
  %4023 = add nuw nsw i64 %3992, 1
  %4024 = icmp eq i64 %4023, %3743
  br i1 %4024, label %4032, label %3991, !llvm.loop !151

4025:                                             ; preds = %3987, %4017
  %4026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4027:                                             ; preds = %4000, %4009
  %4028 = phi ptr [ %4016, %4009 ], [ %3993, %4000 ]
  %4029 = phi i32 [ %4015, %4009 ], [ 1, %4000 ]
  %4030 = load i32, ptr %4028, align 4, !tbaa !6
  %4031 = add nsw i32 %4030, %4029
  store i32 %4031, ptr %4028, align 4, !tbaa !6
  br label %4032

4032:                                             ; preds = %4019, %4027, %3989, %3973
  %4033 = icmp eq i32 %3981, %5
  br i1 %4033, label %5560, label %3895, !llvm.loop !152

4034:                                             ; preds = %3731
  %4035 = getelementptr inbounds i32, ptr %3, i64 %19
  %4036 = load i32, ptr %4035, align 4, !tbaa !6
  %4037 = icmp eq i32 %4036, 0
  %4038 = icmp sgt i32 %5, 0
  br i1 %4037, label %4048, label %4039

4039:                                             ; preds = %4034
  br i1 %4038, label %4040, label %5560

4040:                                             ; preds = %4039
  %4041 = icmp sgt i32 %13, 1
  %4042 = icmp sgt i32 %13, 0
  %4043 = add i32 %13, -2
  %4044 = zext i32 %4043 to i64
  %4045 = zext i32 %13 to i64
  %4046 = add nuw i32 %5, 1
  %4047 = icmp eq i32 %13, 1
  br label %4191

4048:                                             ; preds = %4034
  br i1 %4038, label %4049, label %5560

4049:                                             ; preds = %4048
  %4050 = icmp sgt i32 %13, 1
  %4051 = icmp sgt i32 %13, 0
  %4052 = add i32 %13, -2
  %4053 = zext i32 %4052 to i64
  %4054 = zext i32 %13 to i64
  %4055 = add nuw i32 %5, 1
  %4056 = icmp eq i32 %13, 1
  br label %4057

4057:                                             ; preds = %4049, %4189
  %4058 = phi double [ 0.000000e+00, %4049 ], [ %4139, %4189 ]
  %4059 = phi i32 [ 0, %4049 ], [ %4141, %4189 ]
  %4060 = phi double [ 0.000000e+00, %4049 ], [ %4140, %4189 ]
  %4061 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4050, label %4062, label %4131

4062:                                             ; preds = %4057, %4121
  %4063 = phi i32 [ %4130, %4121 ], [ 0, %4057 ]
  %4064 = phi i64 [ %4072, %4121 ], [ %4054, %4057 ]
  %4065 = phi i64 [ %4129, %4121 ], [ %4053, %4057 ]
  %4066 = phi i32 [ %4127, %4121 ], [ %4061, %4057 ]
  %4067 = sub i32 %4052, %4063
  %4068 = tail call i32 @llvm.smin.i32(i32 %4067, i32 0)
  %4069 = sub i32 %4067, %4068
  %4070 = zext i32 %4069 to i64
  %4071 = add nuw nsw i64 %4070, 1
  %4072 = add nsw i64 %4064, -1
  %4073 = icmp ult i32 %4069, 31
  br i1 %4073, label %4109, label %4074

4074:                                             ; preds = %4062
  %4075 = and i64 %4071, 8589934560
  %4076 = sub i64 %4065, %4075
  br label %4077

4077:                                             ; preds = %4077, %4074
  %4078 = phi i64 [ 0, %4074 ], [ %4101, %4077 ]
  %4079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4074 ], [ %4097, %4077 ]
  %4080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4074 ], [ %4098, %4077 ]
  %4081 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4074 ], [ %4099, %4077 ]
  %4082 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4074 ], [ %4100, %4077 ]
  %4083 = sub i64 %4065, %4078
  %4084 = getelementptr inbounds i32, ptr %9, i64 %4083
  %4085 = getelementptr inbounds i32, ptr %4084, i64 -7
  %4086 = load <8 x i32>, ptr %4085, align 4, !tbaa !6
  %4087 = shufflevector <8 x i32> %4086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4088 = getelementptr inbounds i32, ptr %4084, i64 -15
  %4089 = load <8 x i32>, ptr %4088, align 4, !tbaa !6
  %4090 = shufflevector <8 x i32> %4089, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4091 = getelementptr inbounds i32, ptr %4084, i64 -23
  %4092 = load <8 x i32>, ptr %4091, align 4, !tbaa !6
  %4093 = shufflevector <8 x i32> %4092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4094 = getelementptr inbounds i32, ptr %4084, i64 -31
  %4095 = load <8 x i32>, ptr %4094, align 4, !tbaa !6
  %4096 = shufflevector <8 x i32> %4095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4097 = mul <8 x i32> %4087, %4079
  %4098 = mul <8 x i32> %4090, %4080
  %4099 = mul <8 x i32> %4093, %4081
  %4100 = mul <8 x i32> %4096, %4082
  %4101 = add nuw i64 %4078, 32
  %4102 = icmp eq i64 %4101, %4075
  br i1 %4102, label %4103, label %4077, !llvm.loop !153

4103:                                             ; preds = %4077
  %4104 = mul <8 x i32> %4098, %4097
  %4105 = mul <8 x i32> %4099, %4104
  %4106 = mul <8 x i32> %4100, %4105
  %4107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4106)
  %4108 = icmp eq i64 %4071, %4075
  br i1 %4108, label %4121, label %4109

4109:                                             ; preds = %4062, %4103
  %4110 = phi i64 [ %4065, %4062 ], [ %4076, %4103 ]
  %4111 = phi i32 [ 1, %4062 ], [ %4107, %4103 ]
  br label %4112

4112:                                             ; preds = %4109, %4112
  %4113 = phi i64 [ %4118, %4112 ], [ %4110, %4109 ]
  %4114 = phi i32 [ %4117, %4112 ], [ %4111, %4109 ]
  %4115 = getelementptr inbounds i32, ptr %9, i64 %4113
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = mul nsw i32 %4116, %4114
  %4118 = add nsw i64 %4113, -1
  %4119 = trunc i64 %4113 to i32
  %4120 = icmp sgt i32 %4119, 0
  br i1 %4120, label %4112, label %4121, !llvm.loop !154

4121:                                             ; preds = %4112, %4103
  %4122 = phi i32 [ %4107, %4103 ], [ %4117, %4112 ]
  %4123 = and i64 %4072, 4294967295
  %4124 = getelementptr inbounds i32, ptr %6, i64 %4123
  %4125 = load i32, ptr %4124, align 4, !tbaa !6
  %4126 = mul nsw i32 %4125, %4122
  %4127 = add nsw i32 %4126, %4066
  %4128 = icmp sgt i64 %4064, 2
  %4129 = add nsw i64 %4065, -1
  %4130 = add i32 %4063, 1
  br i1 %4128, label %4062, label %4131, !llvm.loop !155

4131:                                             ; preds = %4121, %4057
  %4132 = phi i32 [ %4061, %4057 ], [ %4127, %4121 ]
  %4133 = sext i32 %4132 to i64
  %4134 = getelementptr inbounds i8, ptr %3722, i64 %4133
  %4135 = load i8, ptr %4134, align 1, !tbaa !12
  %4136 = uitofp i8 %4135 to double
  %4137 = fmul fast double %4136, %4136
  %4138 = fmul fast double %4137, %4136
  %4139 = fadd fast double %4138, %4058
  store double %4139, ptr %3724, align 8, !tbaa !19
  %4140 = fadd fast double %4060, 1.000000e+00
  %4141 = add nuw nsw i32 %4059, 1
  br i1 %4051, label %4142, label %4189

4142:                                             ; preds = %4131
  %4143 = load i32, ptr %4, align 4, !tbaa !6
  %4144 = load i32, ptr %12, align 4, !tbaa !6
  %4145 = add nsw i32 %4144, -1
  %4146 = icmp slt i32 %4143, %4145
  br i1 %4146, label %4166, label %4147

4147:                                             ; preds = %4142
  %4148 = icmp eq i32 %4143, %4145
  br i1 %4148, label %4149, label %4182

4149:                                             ; preds = %4147
  store i32 0, ptr %4, align 4, !tbaa !6
  %4150 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4150, ptr %6, align 4, !tbaa !6
  br i1 %4056, label %4189, label %4151

4151:                                             ; preds = %4149, %4176
  %4152 = phi i64 [ %4180, %4176 ], [ 1, %4149 ]
  %4153 = getelementptr inbounds i32, ptr %4, i64 %4152
  %4154 = load i32, ptr %4153, align 4, !tbaa !6
  %4155 = getelementptr inbounds i32, ptr %12, i64 %4152
  %4156 = load i32, ptr %4155, align 4, !tbaa !6
  %4157 = add nsw i32 %4156, -1
  %4158 = icmp slt i32 %4154, %4157
  br i1 %4158, label %4159, label %4174

4159:                                             ; preds = %4151
  br i1 %4146, label %4166, label %4160

4160:                                             ; preds = %4159
  %4161 = getelementptr inbounds i32, ptr %7, i64 %4152
  %4162 = load i32, ptr %4161, align 4, !tbaa !6
  %4163 = getelementptr inbounds i32, ptr %6, i64 %4152
  %4164 = load i32, ptr %4163, align 4, !tbaa !6
  %4165 = add nsw i32 %4164, %4162
  store i32 %4165, ptr %4163, align 4, !tbaa !6
  br label %4184

4166:                                             ; preds = %4142, %4159
  %4167 = phi i32 [ %4154, %4159 ], [ %4143, %4142 ]
  %4168 = phi ptr [ %4153, %4159 ], [ %4, %4142 ]
  %4169 = phi i64 [ %4152, %4159 ], [ 0, %4142 ]
  %4170 = add nsw i32 %4167, 1
  store i32 %4170, ptr %4168, align 4, !tbaa !6
  %4171 = getelementptr inbounds i32, ptr %7, i64 %4169
  %4172 = load i32, ptr %4171, align 4, !tbaa !6
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4169
  br label %4184

4174:                                             ; preds = %4151
  %4175 = icmp eq i32 %4154, %4157
  br i1 %4175, label %4176, label %4182

4176:                                             ; preds = %4174
  store i32 0, ptr %4153, align 4, !tbaa !6
  %4177 = getelementptr inbounds i32, ptr %8, i64 %4152
  %4178 = load i32, ptr %4177, align 4, !tbaa !6
  %4179 = getelementptr inbounds i32, ptr %6, i64 %4152
  store i32 %4178, ptr %4179, align 4, !tbaa !6
  %4180 = add nuw nsw i64 %4152, 1
  %4181 = icmp eq i64 %4180, %4054
  br i1 %4181, label %4189, label %4151, !llvm.loop !156

4182:                                             ; preds = %4147, %4174
  %4183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4184:                                             ; preds = %4160, %4166
  %4185 = phi ptr [ %4173, %4166 ], [ %4153, %4160 ]
  %4186 = phi i32 [ %4172, %4166 ], [ 1, %4160 ]
  %4187 = load i32, ptr %4185, align 4, !tbaa !6
  %4188 = add nsw i32 %4187, %4186
  store i32 %4188, ptr %4185, align 4, !tbaa !6
  br label %4189

4189:                                             ; preds = %4176, %4184, %4149, %4131
  %4190 = icmp eq i32 %4141, %5
  br i1 %4190, label %5560, label %4057, !llvm.loop !157

4191:                                             ; preds = %4040, %4328
  %4192 = phi double [ 0.000000e+00, %4040 ], [ %4276, %4328 ]
  %4193 = phi i32 [ 0, %4040 ], [ %4277, %4328 ]
  %4194 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4041, label %4195, label %4264

4195:                                             ; preds = %4191, %4254
  %4196 = phi i32 [ %4263, %4254 ], [ 0, %4191 ]
  %4197 = phi i64 [ %4205, %4254 ], [ %4045, %4191 ]
  %4198 = phi i64 [ %4262, %4254 ], [ %4044, %4191 ]
  %4199 = phi i32 [ %4260, %4254 ], [ %4194, %4191 ]
  %4200 = sub i32 %4043, %4196
  %4201 = tail call i32 @llvm.smin.i32(i32 %4200, i32 0)
  %4202 = sub i32 %4200, %4201
  %4203 = zext i32 %4202 to i64
  %4204 = add nuw nsw i64 %4203, 1
  %4205 = add nsw i64 %4197, -1
  %4206 = icmp ult i32 %4202, 31
  br i1 %4206, label %4242, label %4207

4207:                                             ; preds = %4195
  %4208 = and i64 %4204, 8589934560
  %4209 = sub i64 %4198, %4208
  br label %4210

4210:                                             ; preds = %4210, %4207
  %4211 = phi i64 [ 0, %4207 ], [ %4234, %4210 ]
  %4212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4207 ], [ %4230, %4210 ]
  %4213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4207 ], [ %4231, %4210 ]
  %4214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4207 ], [ %4232, %4210 ]
  %4215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4207 ], [ %4233, %4210 ]
  %4216 = sub i64 %4198, %4211
  %4217 = getelementptr inbounds i32, ptr %11, i64 %4216
  %4218 = getelementptr inbounds i32, ptr %4217, i64 -7
  %4219 = load <8 x i32>, ptr %4218, align 4, !tbaa !6
  %4220 = shufflevector <8 x i32> %4219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4221 = getelementptr inbounds i32, ptr %4217, i64 -15
  %4222 = load <8 x i32>, ptr %4221, align 4, !tbaa !6
  %4223 = shufflevector <8 x i32> %4222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4224 = getelementptr inbounds i32, ptr %4217, i64 -23
  %4225 = load <8 x i32>, ptr %4224, align 4, !tbaa !6
  %4226 = shufflevector <8 x i32> %4225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4227 = getelementptr inbounds i32, ptr %4217, i64 -31
  %4228 = load <8 x i32>, ptr %4227, align 4, !tbaa !6
  %4229 = shufflevector <8 x i32> %4228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4230 = mul <8 x i32> %4220, %4212
  %4231 = mul <8 x i32> %4223, %4213
  %4232 = mul <8 x i32> %4226, %4214
  %4233 = mul <8 x i32> %4229, %4215
  %4234 = add nuw i64 %4211, 32
  %4235 = icmp eq i64 %4234, %4208
  br i1 %4235, label %4236, label %4210, !llvm.loop !158

4236:                                             ; preds = %4210
  %4237 = mul <8 x i32> %4231, %4230
  %4238 = mul <8 x i32> %4232, %4237
  %4239 = mul <8 x i32> %4233, %4238
  %4240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4239)
  %4241 = icmp eq i64 %4204, %4208
  br i1 %4241, label %4254, label %4242

4242:                                             ; preds = %4195, %4236
  %4243 = phi i64 [ %4198, %4195 ], [ %4209, %4236 ]
  %4244 = phi i32 [ 1, %4195 ], [ %4240, %4236 ]
  br label %4245

4245:                                             ; preds = %4242, %4245
  %4246 = phi i64 [ %4251, %4245 ], [ %4243, %4242 ]
  %4247 = phi i32 [ %4250, %4245 ], [ %4244, %4242 ]
  %4248 = getelementptr inbounds i32, ptr %11, i64 %4246
  %4249 = load i32, ptr %4248, align 4, !tbaa !6
  %4250 = mul nsw i32 %4249, %4247
  %4251 = add nsw i64 %4246, -1
  %4252 = trunc i64 %4246 to i32
  %4253 = icmp sgt i32 %4252, 0
  br i1 %4253, label %4245, label %4254, !llvm.loop !159

4254:                                             ; preds = %4245, %4236
  %4255 = phi i32 [ %4240, %4236 ], [ %4250, %4245 ]
  %4256 = and i64 %4205, 4294967295
  %4257 = getelementptr inbounds i32, ptr %6, i64 %4256
  %4258 = load i32, ptr %4257, align 4, !tbaa !6
  %4259 = mul nsw i32 %4258, %4255
  %4260 = add nsw i32 %4259, %4199
  %4261 = icmp sgt i64 %4197, 2
  %4262 = add nsw i64 %4198, -1
  %4263 = add i32 %4196, 1
  br i1 %4261, label %4195, label %4264, !llvm.loop !160

4264:                                             ; preds = %4254, %4191
  %4265 = phi i32 [ %4194, %4191 ], [ %4260, %4254 ]
  %4266 = icmp slt i32 %4265, %5
  br i1 %4266, label %4269, label %4267

4267:                                             ; preds = %4264
  %4268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

4269:                                             ; preds = %4264
  %4270 = sext i32 %4265 to i64
  %4271 = getelementptr inbounds i8, ptr %3722, i64 %4270
  %4272 = load i8, ptr %4271, align 1, !tbaa !12
  %4273 = uitofp i8 %4272 to double
  %4274 = fmul fast double %4273, %4273
  %4275 = fmul fast double %4274, %4273
  %4276 = fadd fast double %4275, %4192
  store double %4276, ptr %3724, align 8, !tbaa !19
  %4277 = add nuw nsw i32 %4193, 1
  br i1 %4042, label %4278, label %4328

4278:                                             ; preds = %4269
  %4279 = load i32, ptr %4, align 4, !tbaa !6
  %4280 = load i32, ptr %12, align 4, !tbaa !6
  %4281 = add nsw i32 %4280, -1
  %4282 = icmp slt i32 %4279, %4281
  br i1 %4282, label %4305, label %4283

4283:                                             ; preds = %4278
  %4284 = icmp eq i32 %4279, %4281
  br i1 %4284, label %4285, label %4321

4285:                                             ; preds = %4283
  store i32 0, ptr %4, align 4, !tbaa !6
  %4286 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4286, ptr %6, align 4, !tbaa !6
  br i1 %4047, label %4328, label %4287

4287:                                             ; preds = %4285, %4315
  %4288 = phi i64 [ %4319, %4315 ], [ 1, %4285 ]
  %4289 = getelementptr inbounds i32, ptr %4, i64 %4288
  %4290 = load i32, ptr %4289, align 4, !tbaa !6
  %4291 = getelementptr inbounds i32, ptr %12, i64 %4288
  %4292 = load i32, ptr %4291, align 4, !tbaa !6
  %4293 = add nsw i32 %4292, -1
  %4294 = icmp slt i32 %4290, %4293
  br i1 %4294, label %4295, label %4313

4295:                                             ; preds = %4287
  br i1 %4282, label %4305, label %4296

4296:                                             ; preds = %4295
  %4297 = shl i64 %4288, 32
  %4298 = add i64 %4297, -4294967296
  %4299 = ashr exact i64 %4298, 32
  %4300 = getelementptr inbounds i32, ptr %7, i64 %4299
  %4301 = load i32, ptr %4300, align 4, !tbaa !6
  %4302 = getelementptr inbounds i32, ptr %6, i64 %4288
  %4303 = load i32, ptr %4302, align 4, !tbaa !6
  %4304 = add nsw i32 %4303, %4301
  store i32 %4304, ptr %4302, align 4, !tbaa !6
  br label %4323

4305:                                             ; preds = %4278, %4295
  %4306 = phi i32 [ %4290, %4295 ], [ %4279, %4278 ]
  %4307 = phi ptr [ %4289, %4295 ], [ %4, %4278 ]
  %4308 = phi i64 [ %4288, %4295 ], [ 0, %4278 ]
  %4309 = add nsw i32 %4306, 1
  store i32 %4309, ptr %4307, align 4, !tbaa !6
  %4310 = getelementptr inbounds i32, ptr %7, i64 %4308
  %4311 = load i32, ptr %4310, align 4, !tbaa !6
  %4312 = getelementptr inbounds i32, ptr %6, i64 %4308
  br label %4323

4313:                                             ; preds = %4287
  %4314 = icmp eq i32 %4290, %4293
  br i1 %4314, label %4315, label %4321

4315:                                             ; preds = %4313
  store i32 0, ptr %4289, align 4, !tbaa !6
  %4316 = getelementptr inbounds i32, ptr %8, i64 %4288
  %4317 = load i32, ptr %4316, align 4, !tbaa !6
  %4318 = getelementptr inbounds i32, ptr %6, i64 %4288
  store i32 %4317, ptr %4318, align 4, !tbaa !6
  %4319 = add nuw nsw i64 %4288, 1
  %4320 = icmp eq i64 %4319, %4045
  br i1 %4320, label %4328, label %4287, !llvm.loop !161

4321:                                             ; preds = %4283, %4313
  %4322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4323:                                             ; preds = %4296, %4305
  %4324 = phi ptr [ %4312, %4305 ], [ %4289, %4296 ]
  %4325 = phi i32 [ %4311, %4305 ], [ 1, %4296 ]
  %4326 = load i32, ptr %4324, align 4, !tbaa !6
  %4327 = add nsw i32 %4326, %4325
  store i32 %4327, ptr %4324, align 4, !tbaa !6
  br label %4328

4328:                                             ; preds = %4315, %4323, %4285, %4269
  %4329 = icmp eq i32 %4277, %5
  br i1 %4329, label %5560, label %4191, !llvm.loop !162

4330:                                             ; preds = %3731
  %4331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

4332:                                             ; preds = %18
  %4333 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4334 = load ptr, ptr %4333, align 8, !tbaa !10
  %4335 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4336 = load ptr, ptr %4335, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4336, align 4, !tbaa !163
  %4337 = icmp eq i32 %13, 0
  br i1 %4337, label %4338, label %4343

4338:                                             ; preds = %4332
  %4339 = load i8, ptr %4334, align 1, !tbaa !12
  %4340 = uitofp i8 %4339 to float
  %4341 = fmul fast float %4340, %4340
  %4342 = fmul fast float %4341, %4340
  store float %4342, ptr %4336, align 4, !tbaa !163
  br label %5560

4343:                                             ; preds = %4332
  switch i32 %1, label %4946 [
    i32 1, label %4344
    i32 0, label %4650
  ]

4344:                                             ; preds = %4343
  %4345 = getelementptr inbounds i32, ptr %3, i64 %19
  %4346 = load i32, ptr %4345, align 4, !tbaa !6
  %4347 = icmp eq i32 %4346, 0
  %4348 = icmp sgt i32 %5, 0
  br i1 %4347, label %4358, label %4349

4349:                                             ; preds = %4344
  br i1 %4348, label %4350, label %5560

4350:                                             ; preds = %4349
  %4351 = icmp sgt i32 %13, 1
  %4352 = icmp sgt i32 %13, 0
  %4353 = add i32 %13, -2
  %4354 = zext i32 %4353 to i64
  %4355 = zext i32 %13 to i64
  %4356 = add nuw i32 %5, 1
  %4357 = icmp eq i32 %13, 1
  br label %4509

4358:                                             ; preds = %4344
  br i1 %4348, label %4359, label %5560

4359:                                             ; preds = %4358
  %4360 = icmp sgt i32 %13, 1
  %4361 = icmp sgt i32 %13, 0
  %4362 = add i32 %13, -2
  %4363 = zext i32 %4362 to i64
  %4364 = zext i32 %13 to i64
  %4365 = add nuw i32 %5, 1
  %4366 = icmp eq i32 %13, 1
  br label %4367

4367:                                             ; preds = %4359, %4507
  %4368 = phi float [ 0.000000e+00, %4359 ], [ %4457, %4507 ]
  %4369 = phi i32 [ 0, %4359 ], [ %4459, %4507 ]
  %4370 = phi double [ 0.000000e+00, %4359 ], [ %4458, %4507 ]
  %4371 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4360, label %4372, label %4441

4372:                                             ; preds = %4367, %4431
  %4373 = phi i32 [ %4440, %4431 ], [ 0, %4367 ]
  %4374 = phi i64 [ %4382, %4431 ], [ %4364, %4367 ]
  %4375 = phi i64 [ %4439, %4431 ], [ %4363, %4367 ]
  %4376 = phi i32 [ %4437, %4431 ], [ %4371, %4367 ]
  %4377 = sub i32 %4362, %4373
  %4378 = tail call i32 @llvm.smin.i32(i32 %4377, i32 0)
  %4379 = sub i32 %4377, %4378
  %4380 = zext i32 %4379 to i64
  %4381 = add nuw nsw i64 %4380, 1
  %4382 = add nsw i64 %4374, -1
  %4383 = icmp ult i32 %4379, 31
  br i1 %4383, label %4419, label %4384

4384:                                             ; preds = %4372
  %4385 = and i64 %4381, 8589934560
  %4386 = sub i64 %4375, %4385
  br label %4387

4387:                                             ; preds = %4387, %4384
  %4388 = phi i64 [ 0, %4384 ], [ %4411, %4387 ]
  %4389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4384 ], [ %4407, %4387 ]
  %4390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4384 ], [ %4408, %4387 ]
  %4391 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4384 ], [ %4409, %4387 ]
  %4392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4384 ], [ %4410, %4387 ]
  %4393 = sub i64 %4375, %4388
  %4394 = getelementptr inbounds i32, ptr %9, i64 %4393
  %4395 = getelementptr inbounds i32, ptr %4394, i64 -7
  %4396 = load <8 x i32>, ptr %4395, align 4, !tbaa !6
  %4397 = shufflevector <8 x i32> %4396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4398 = getelementptr inbounds i32, ptr %4394, i64 -15
  %4399 = load <8 x i32>, ptr %4398, align 4, !tbaa !6
  %4400 = shufflevector <8 x i32> %4399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4401 = getelementptr inbounds i32, ptr %4394, i64 -23
  %4402 = load <8 x i32>, ptr %4401, align 4, !tbaa !6
  %4403 = shufflevector <8 x i32> %4402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4404 = getelementptr inbounds i32, ptr %4394, i64 -31
  %4405 = load <8 x i32>, ptr %4404, align 4, !tbaa !6
  %4406 = shufflevector <8 x i32> %4405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4407 = mul <8 x i32> %4397, %4389
  %4408 = mul <8 x i32> %4400, %4390
  %4409 = mul <8 x i32> %4403, %4391
  %4410 = mul <8 x i32> %4406, %4392
  %4411 = add nuw i64 %4388, 32
  %4412 = icmp eq i64 %4411, %4385
  br i1 %4412, label %4413, label %4387, !llvm.loop !165

4413:                                             ; preds = %4387
  %4414 = mul <8 x i32> %4408, %4407
  %4415 = mul <8 x i32> %4409, %4414
  %4416 = mul <8 x i32> %4410, %4415
  %4417 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4416)
  %4418 = icmp eq i64 %4381, %4385
  br i1 %4418, label %4431, label %4419

4419:                                             ; preds = %4372, %4413
  %4420 = phi i64 [ %4375, %4372 ], [ %4386, %4413 ]
  %4421 = phi i32 [ 1, %4372 ], [ %4417, %4413 ]
  br label %4422

4422:                                             ; preds = %4419, %4422
  %4423 = phi i64 [ %4428, %4422 ], [ %4420, %4419 ]
  %4424 = phi i32 [ %4427, %4422 ], [ %4421, %4419 ]
  %4425 = getelementptr inbounds i32, ptr %9, i64 %4423
  %4426 = load i32, ptr %4425, align 4, !tbaa !6
  %4427 = mul nsw i32 %4426, %4424
  %4428 = add nsw i64 %4423, -1
  %4429 = trunc i64 %4423 to i32
  %4430 = icmp sgt i32 %4429, 0
  br i1 %4430, label %4422, label %4431, !llvm.loop !166

4431:                                             ; preds = %4422, %4413
  %4432 = phi i32 [ %4417, %4413 ], [ %4427, %4422 ]
  %4433 = and i64 %4382, 4294967295
  %4434 = getelementptr inbounds i32, ptr %6, i64 %4433
  %4435 = load i32, ptr %4434, align 4, !tbaa !6
  %4436 = mul nsw i32 %4435, %4432
  %4437 = add nsw i32 %4436, %4376
  %4438 = icmp sgt i64 %4374, 2
  %4439 = add nsw i64 %4375, -1
  %4440 = add i32 %4373, 1
  br i1 %4438, label %4372, label %4441, !llvm.loop !167

4441:                                             ; preds = %4431, %4367
  %4442 = phi i32 [ %4371, %4367 ], [ %4437, %4431 ]
  %4443 = sext i32 %4442 to i64
  %4444 = getelementptr inbounds double, ptr %2, i64 %4443
  %4445 = load double, ptr %4444, align 8, !tbaa !19
  %4446 = getelementptr inbounds i8, ptr %4334, i64 %4443
  %4447 = load i8, ptr %4446, align 1, !tbaa !12
  %4448 = fpext float %4368 to double
  %4449 = uitofp i8 %4447 to double
  %4450 = fmul fast double %4445, %4449
  %4451 = fcmp fast olt double %4450, 0.000000e+00
  %4452 = fneg fast double %4450
  %4453 = select nnan ninf i1 %4451, double %4452, double %4450
  %4454 = fmul fast double %4450, %4450
  %4455 = fmul fast double %4454, %4453
  %4456 = fadd fast double %4455, %4448
  %4457 = fptrunc double %4456 to float
  store float %4457, ptr %4336, align 4, !tbaa !163
  %4458 = fadd fast double %4445, %4370
  %4459 = add nuw nsw i32 %4369, 1
  br i1 %4361, label %4460, label %4507

4460:                                             ; preds = %4441
  %4461 = load i32, ptr %4, align 4, !tbaa !6
  %4462 = load i32, ptr %12, align 4, !tbaa !6
  %4463 = add nsw i32 %4462, -1
  %4464 = icmp slt i32 %4461, %4463
  br i1 %4464, label %4484, label %4465

4465:                                             ; preds = %4460
  %4466 = icmp eq i32 %4461, %4463
  br i1 %4466, label %4467, label %4500

4467:                                             ; preds = %4465
  store i32 0, ptr %4, align 4, !tbaa !6
  %4468 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4468, ptr %6, align 4, !tbaa !6
  br i1 %4366, label %4507, label %4469

4469:                                             ; preds = %4467, %4494
  %4470 = phi i64 [ %4498, %4494 ], [ 1, %4467 ]
  %4471 = getelementptr inbounds i32, ptr %4, i64 %4470
  %4472 = load i32, ptr %4471, align 4, !tbaa !6
  %4473 = getelementptr inbounds i32, ptr %12, i64 %4470
  %4474 = load i32, ptr %4473, align 4, !tbaa !6
  %4475 = add nsw i32 %4474, -1
  %4476 = icmp slt i32 %4472, %4475
  br i1 %4476, label %4477, label %4492

4477:                                             ; preds = %4469
  br i1 %4464, label %4484, label %4478

4478:                                             ; preds = %4477
  %4479 = getelementptr inbounds i32, ptr %7, i64 %4470
  %4480 = load i32, ptr %4479, align 4, !tbaa !6
  %4481 = getelementptr inbounds i32, ptr %6, i64 %4470
  %4482 = load i32, ptr %4481, align 4, !tbaa !6
  %4483 = add nsw i32 %4482, %4480
  store i32 %4483, ptr %4481, align 4, !tbaa !6
  br label %4502

4484:                                             ; preds = %4460, %4477
  %4485 = phi i32 [ %4472, %4477 ], [ %4461, %4460 ]
  %4486 = phi ptr [ %4471, %4477 ], [ %4, %4460 ]
  %4487 = phi i64 [ %4470, %4477 ], [ 0, %4460 ]
  %4488 = add nsw i32 %4485, 1
  store i32 %4488, ptr %4486, align 4, !tbaa !6
  %4489 = getelementptr inbounds i32, ptr %7, i64 %4487
  %4490 = load i32, ptr %4489, align 4, !tbaa !6
  %4491 = getelementptr inbounds i32, ptr %6, i64 %4487
  br label %4502

4492:                                             ; preds = %4469
  %4493 = icmp eq i32 %4472, %4475
  br i1 %4493, label %4494, label %4500

4494:                                             ; preds = %4492
  store i32 0, ptr %4471, align 4, !tbaa !6
  %4495 = getelementptr inbounds i32, ptr %8, i64 %4470
  %4496 = load i32, ptr %4495, align 4, !tbaa !6
  %4497 = getelementptr inbounds i32, ptr %6, i64 %4470
  store i32 %4496, ptr %4497, align 4, !tbaa !6
  %4498 = add nuw nsw i64 %4470, 1
  %4499 = icmp eq i64 %4498, %4364
  br i1 %4499, label %4507, label %4469, !llvm.loop !168

4500:                                             ; preds = %4465, %4492
  %4501 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4502:                                             ; preds = %4478, %4484
  %4503 = phi ptr [ %4491, %4484 ], [ %4471, %4478 ]
  %4504 = phi i32 [ %4490, %4484 ], [ 1, %4478 ]
  %4505 = load i32, ptr %4503, align 4, !tbaa !6
  %4506 = add nsw i32 %4505, %4504
  store i32 %4506, ptr %4503, align 4, !tbaa !6
  br label %4507

4507:                                             ; preds = %4494, %4502, %4467, %4441
  %4508 = icmp eq i32 %4459, %5
  br i1 %4508, label %5560, label %4367, !llvm.loop !169

4509:                                             ; preds = %4350, %4648
  %4510 = phi float [ 0.000000e+00, %4350 ], [ %4596, %4648 ]
  %4511 = phi i32 [ 0, %4350 ], [ %4597, %4648 ]
  %4512 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4351, label %4513, label %4582

4513:                                             ; preds = %4509, %4572
  %4514 = phi i32 [ %4581, %4572 ], [ 0, %4509 ]
  %4515 = phi i64 [ %4523, %4572 ], [ %4355, %4509 ]
  %4516 = phi i64 [ %4580, %4572 ], [ %4354, %4509 ]
  %4517 = phi i32 [ %4578, %4572 ], [ %4512, %4509 ]
  %4518 = sub i32 %4353, %4514
  %4519 = tail call i32 @llvm.smin.i32(i32 %4518, i32 0)
  %4520 = sub i32 %4518, %4519
  %4521 = zext i32 %4520 to i64
  %4522 = add nuw nsw i64 %4521, 1
  %4523 = add nsw i64 %4515, -1
  %4524 = icmp ult i32 %4520, 31
  br i1 %4524, label %4560, label %4525

4525:                                             ; preds = %4513
  %4526 = and i64 %4522, 8589934560
  %4527 = sub i64 %4516, %4526
  br label %4528

4528:                                             ; preds = %4528, %4525
  %4529 = phi i64 [ 0, %4525 ], [ %4552, %4528 ]
  %4530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4525 ], [ %4548, %4528 ]
  %4531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4525 ], [ %4549, %4528 ]
  %4532 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4525 ], [ %4550, %4528 ]
  %4533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4525 ], [ %4551, %4528 ]
  %4534 = sub i64 %4516, %4529
  %4535 = getelementptr inbounds i32, ptr %11, i64 %4534
  %4536 = getelementptr inbounds i32, ptr %4535, i64 -7
  %4537 = load <8 x i32>, ptr %4536, align 4, !tbaa !6
  %4538 = shufflevector <8 x i32> %4537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4539 = getelementptr inbounds i32, ptr %4535, i64 -15
  %4540 = load <8 x i32>, ptr %4539, align 4, !tbaa !6
  %4541 = shufflevector <8 x i32> %4540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4542 = getelementptr inbounds i32, ptr %4535, i64 -23
  %4543 = load <8 x i32>, ptr %4542, align 4, !tbaa !6
  %4544 = shufflevector <8 x i32> %4543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4545 = getelementptr inbounds i32, ptr %4535, i64 -31
  %4546 = load <8 x i32>, ptr %4545, align 4, !tbaa !6
  %4547 = shufflevector <8 x i32> %4546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4548 = mul <8 x i32> %4538, %4530
  %4549 = mul <8 x i32> %4541, %4531
  %4550 = mul <8 x i32> %4544, %4532
  %4551 = mul <8 x i32> %4547, %4533
  %4552 = add nuw i64 %4529, 32
  %4553 = icmp eq i64 %4552, %4526
  br i1 %4553, label %4554, label %4528, !llvm.loop !170

4554:                                             ; preds = %4528
  %4555 = mul <8 x i32> %4549, %4548
  %4556 = mul <8 x i32> %4550, %4555
  %4557 = mul <8 x i32> %4551, %4556
  %4558 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4557)
  %4559 = icmp eq i64 %4522, %4526
  br i1 %4559, label %4572, label %4560

4560:                                             ; preds = %4513, %4554
  %4561 = phi i64 [ %4516, %4513 ], [ %4527, %4554 ]
  %4562 = phi i32 [ 1, %4513 ], [ %4558, %4554 ]
  br label %4563

4563:                                             ; preds = %4560, %4563
  %4564 = phi i64 [ %4569, %4563 ], [ %4561, %4560 ]
  %4565 = phi i32 [ %4568, %4563 ], [ %4562, %4560 ]
  %4566 = getelementptr inbounds i32, ptr %11, i64 %4564
  %4567 = load i32, ptr %4566, align 4, !tbaa !6
  %4568 = mul nsw i32 %4567, %4565
  %4569 = add nsw i64 %4564, -1
  %4570 = trunc i64 %4564 to i32
  %4571 = icmp sgt i32 %4570, 0
  br i1 %4571, label %4563, label %4572, !llvm.loop !171

4572:                                             ; preds = %4563, %4554
  %4573 = phi i32 [ %4558, %4554 ], [ %4568, %4563 ]
  %4574 = and i64 %4523, 4294967295
  %4575 = getelementptr inbounds i32, ptr %6, i64 %4574
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = mul nsw i32 %4576, %4573
  %4578 = add nsw i32 %4577, %4517
  %4579 = icmp sgt i64 %4515, 2
  %4580 = add nsw i64 %4516, -1
  %4581 = add i32 %4514, 1
  br i1 %4579, label %4513, label %4582, !llvm.loop !172

4582:                                             ; preds = %4572, %4509
  %4583 = phi i32 [ %4512, %4509 ], [ %4578, %4572 ]
  %4584 = icmp slt i32 %4583, %5
  br i1 %4584, label %4587, label %4585

4585:                                             ; preds = %4582
  %4586 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

4587:                                             ; preds = %4582
  %4588 = fpext float %4510 to double
  %4589 = sext i32 %4583 to i64
  %4590 = getelementptr inbounds i8, ptr %4334, i64 %4589
  %4591 = load i8, ptr %4590, align 1, !tbaa !12
  %4592 = uitofp i8 %4591 to double
  %4593 = fmul fast double %4592, %4592
  %4594 = fmul fast double %4593, %4592
  %4595 = fadd fast double %4594, %4588
  %4596 = fptrunc double %4595 to float
  store float %4596, ptr %4336, align 4, !tbaa !163
  %4597 = add nuw nsw i32 %4511, 1
  br i1 %4352, label %4598, label %4648

4598:                                             ; preds = %4587
  %4599 = load i32, ptr %4, align 4, !tbaa !6
  %4600 = load i32, ptr %12, align 4, !tbaa !6
  %4601 = add nsw i32 %4600, -1
  %4602 = icmp slt i32 %4599, %4601
  br i1 %4602, label %4625, label %4603

4603:                                             ; preds = %4598
  %4604 = icmp eq i32 %4599, %4601
  br i1 %4604, label %4605, label %4641

4605:                                             ; preds = %4603
  store i32 0, ptr %4, align 4, !tbaa !6
  %4606 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4606, ptr %6, align 4, !tbaa !6
  br i1 %4357, label %4648, label %4607

4607:                                             ; preds = %4605, %4635
  %4608 = phi i64 [ %4639, %4635 ], [ 1, %4605 ]
  %4609 = getelementptr inbounds i32, ptr %4, i64 %4608
  %4610 = load i32, ptr %4609, align 4, !tbaa !6
  %4611 = getelementptr inbounds i32, ptr %12, i64 %4608
  %4612 = load i32, ptr %4611, align 4, !tbaa !6
  %4613 = add nsw i32 %4612, -1
  %4614 = icmp slt i32 %4610, %4613
  br i1 %4614, label %4615, label %4633

4615:                                             ; preds = %4607
  br i1 %4602, label %4625, label %4616

4616:                                             ; preds = %4615
  %4617 = shl i64 %4608, 32
  %4618 = add i64 %4617, -4294967296
  %4619 = ashr exact i64 %4618, 32
  %4620 = getelementptr inbounds i32, ptr %7, i64 %4619
  %4621 = load i32, ptr %4620, align 4, !tbaa !6
  %4622 = getelementptr inbounds i32, ptr %6, i64 %4608
  %4623 = load i32, ptr %4622, align 4, !tbaa !6
  %4624 = add nsw i32 %4623, %4621
  store i32 %4624, ptr %4622, align 4, !tbaa !6
  br label %4643

4625:                                             ; preds = %4598, %4615
  %4626 = phi i32 [ %4610, %4615 ], [ %4599, %4598 ]
  %4627 = phi ptr [ %4609, %4615 ], [ %4, %4598 ]
  %4628 = phi i64 [ %4608, %4615 ], [ 0, %4598 ]
  %4629 = add nsw i32 %4626, 1
  store i32 %4629, ptr %4627, align 4, !tbaa !6
  %4630 = getelementptr inbounds i32, ptr %7, i64 %4628
  %4631 = load i32, ptr %4630, align 4, !tbaa !6
  %4632 = getelementptr inbounds i32, ptr %6, i64 %4628
  br label %4643

4633:                                             ; preds = %4607
  %4634 = icmp eq i32 %4610, %4613
  br i1 %4634, label %4635, label %4641

4635:                                             ; preds = %4633
  store i32 0, ptr %4609, align 4, !tbaa !6
  %4636 = getelementptr inbounds i32, ptr %8, i64 %4608
  %4637 = load i32, ptr %4636, align 4, !tbaa !6
  %4638 = getelementptr inbounds i32, ptr %6, i64 %4608
  store i32 %4637, ptr %4638, align 4, !tbaa !6
  %4639 = add nuw nsw i64 %4608, 1
  %4640 = icmp eq i64 %4639, %4355
  br i1 %4640, label %4648, label %4607, !llvm.loop !173

4641:                                             ; preds = %4603, %4633
  %4642 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4643:                                             ; preds = %4616, %4625
  %4644 = phi ptr [ %4632, %4625 ], [ %4609, %4616 ]
  %4645 = phi i32 [ %4631, %4625 ], [ 1, %4616 ]
  %4646 = load i32, ptr %4644, align 4, !tbaa !6
  %4647 = add nsw i32 %4646, %4645
  store i32 %4647, ptr %4644, align 4, !tbaa !6
  br label %4648

4648:                                             ; preds = %4635, %4643, %4605, %4587
  %4649 = icmp eq i32 %4597, %5
  br i1 %4649, label %5560, label %4509, !llvm.loop !174

4650:                                             ; preds = %4343
  %4651 = getelementptr inbounds i32, ptr %3, i64 %19
  %4652 = load i32, ptr %4651, align 4, !tbaa !6
  %4653 = icmp eq i32 %4652, 0
  %4654 = icmp sgt i32 %5, 0
  br i1 %4653, label %4664, label %4655

4655:                                             ; preds = %4650
  br i1 %4654, label %4656, label %5560

4656:                                             ; preds = %4655
  %4657 = icmp sgt i32 %13, 1
  %4658 = icmp sgt i32 %13, 0
  %4659 = add i32 %13, -2
  %4660 = zext i32 %4659 to i64
  %4661 = zext i32 %13 to i64
  %4662 = add nuw i32 %5, 1
  %4663 = icmp eq i32 %13, 1
  br label %4807

4664:                                             ; preds = %4650
  br i1 %4654, label %4665, label %5560

4665:                                             ; preds = %4664
  %4666 = icmp sgt i32 %13, 1
  %4667 = icmp sgt i32 %13, 0
  %4668 = add i32 %13, -2
  %4669 = zext i32 %4668 to i64
  %4670 = zext i32 %13 to i64
  %4671 = add nuw i32 %5, 1
  %4672 = icmp eq i32 %13, 1
  br label %4673

4673:                                             ; preds = %4665, %4805
  %4674 = phi float [ 0.000000e+00, %4665 ], [ %4755, %4805 ]
  %4675 = phi i32 [ 0, %4665 ], [ %4757, %4805 ]
  %4676 = phi double [ 0.000000e+00, %4665 ], [ %4756, %4805 ]
  %4677 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4666, label %4678, label %4747

4678:                                             ; preds = %4673, %4737
  %4679 = phi i32 [ %4746, %4737 ], [ 0, %4673 ]
  %4680 = phi i64 [ %4688, %4737 ], [ %4670, %4673 ]
  %4681 = phi i64 [ %4745, %4737 ], [ %4669, %4673 ]
  %4682 = phi i32 [ %4743, %4737 ], [ %4677, %4673 ]
  %4683 = sub i32 %4668, %4679
  %4684 = tail call i32 @llvm.smin.i32(i32 %4683, i32 0)
  %4685 = sub i32 %4683, %4684
  %4686 = zext i32 %4685 to i64
  %4687 = add nuw nsw i64 %4686, 1
  %4688 = add nsw i64 %4680, -1
  %4689 = icmp ult i32 %4685, 31
  br i1 %4689, label %4725, label %4690

4690:                                             ; preds = %4678
  %4691 = and i64 %4687, 8589934560
  %4692 = sub i64 %4681, %4691
  br label %4693

4693:                                             ; preds = %4693, %4690
  %4694 = phi i64 [ 0, %4690 ], [ %4717, %4693 ]
  %4695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4690 ], [ %4713, %4693 ]
  %4696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4690 ], [ %4714, %4693 ]
  %4697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4690 ], [ %4715, %4693 ]
  %4698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4690 ], [ %4716, %4693 ]
  %4699 = sub i64 %4681, %4694
  %4700 = getelementptr inbounds i32, ptr %9, i64 %4699
  %4701 = getelementptr inbounds i32, ptr %4700, i64 -7
  %4702 = load <8 x i32>, ptr %4701, align 4, !tbaa !6
  %4703 = shufflevector <8 x i32> %4702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4704 = getelementptr inbounds i32, ptr %4700, i64 -15
  %4705 = load <8 x i32>, ptr %4704, align 4, !tbaa !6
  %4706 = shufflevector <8 x i32> %4705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4707 = getelementptr inbounds i32, ptr %4700, i64 -23
  %4708 = load <8 x i32>, ptr %4707, align 4, !tbaa !6
  %4709 = shufflevector <8 x i32> %4708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4710 = getelementptr inbounds i32, ptr %4700, i64 -31
  %4711 = load <8 x i32>, ptr %4710, align 4, !tbaa !6
  %4712 = shufflevector <8 x i32> %4711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4713 = mul <8 x i32> %4703, %4695
  %4714 = mul <8 x i32> %4706, %4696
  %4715 = mul <8 x i32> %4709, %4697
  %4716 = mul <8 x i32> %4712, %4698
  %4717 = add nuw i64 %4694, 32
  %4718 = icmp eq i64 %4717, %4691
  br i1 %4718, label %4719, label %4693, !llvm.loop !175

4719:                                             ; preds = %4693
  %4720 = mul <8 x i32> %4714, %4713
  %4721 = mul <8 x i32> %4715, %4720
  %4722 = mul <8 x i32> %4716, %4721
  %4723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4722)
  %4724 = icmp eq i64 %4687, %4691
  br i1 %4724, label %4737, label %4725

4725:                                             ; preds = %4678, %4719
  %4726 = phi i64 [ %4681, %4678 ], [ %4692, %4719 ]
  %4727 = phi i32 [ 1, %4678 ], [ %4723, %4719 ]
  br label %4728

4728:                                             ; preds = %4725, %4728
  %4729 = phi i64 [ %4734, %4728 ], [ %4726, %4725 ]
  %4730 = phi i32 [ %4733, %4728 ], [ %4727, %4725 ]
  %4731 = getelementptr inbounds i32, ptr %9, i64 %4729
  %4732 = load i32, ptr %4731, align 4, !tbaa !6
  %4733 = mul nsw i32 %4732, %4730
  %4734 = add nsw i64 %4729, -1
  %4735 = trunc i64 %4729 to i32
  %4736 = icmp sgt i32 %4735, 0
  br i1 %4736, label %4728, label %4737, !llvm.loop !176

4737:                                             ; preds = %4728, %4719
  %4738 = phi i32 [ %4723, %4719 ], [ %4733, %4728 ]
  %4739 = and i64 %4688, 4294967295
  %4740 = getelementptr inbounds i32, ptr %6, i64 %4739
  %4741 = load i32, ptr %4740, align 4, !tbaa !6
  %4742 = mul nsw i32 %4741, %4738
  %4743 = add nsw i32 %4742, %4682
  %4744 = icmp sgt i64 %4680, 2
  %4745 = add nsw i64 %4681, -1
  %4746 = add i32 %4679, 1
  br i1 %4744, label %4678, label %4747, !llvm.loop !177

4747:                                             ; preds = %4737, %4673
  %4748 = phi i32 [ %4677, %4673 ], [ %4743, %4737 ]
  %4749 = sext i32 %4748 to i64
  %4750 = getelementptr inbounds i8, ptr %4334, i64 %4749
  %4751 = load i8, ptr %4750, align 1, !tbaa !12
  %4752 = uitofp i8 %4751 to float
  %4753 = fmul fast float %4752, %4752
  %4754 = fmul fast float %4753, %4752
  %4755 = fadd fast float %4754, %4674
  store float %4755, ptr %4336, align 4, !tbaa !163
  %4756 = fadd fast double %4676, 1.000000e+00
  %4757 = add nuw nsw i32 %4675, 1
  br i1 %4667, label %4758, label %4805

4758:                                             ; preds = %4747
  %4759 = load i32, ptr %4, align 4, !tbaa !6
  %4760 = load i32, ptr %12, align 4, !tbaa !6
  %4761 = add nsw i32 %4760, -1
  %4762 = icmp slt i32 %4759, %4761
  br i1 %4762, label %4782, label %4763

4763:                                             ; preds = %4758
  %4764 = icmp eq i32 %4759, %4761
  br i1 %4764, label %4765, label %4798

4765:                                             ; preds = %4763
  store i32 0, ptr %4, align 4, !tbaa !6
  %4766 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4766, ptr %6, align 4, !tbaa !6
  br i1 %4672, label %4805, label %4767

4767:                                             ; preds = %4765, %4792
  %4768 = phi i64 [ %4796, %4792 ], [ 1, %4765 ]
  %4769 = getelementptr inbounds i32, ptr %4, i64 %4768
  %4770 = load i32, ptr %4769, align 4, !tbaa !6
  %4771 = getelementptr inbounds i32, ptr %12, i64 %4768
  %4772 = load i32, ptr %4771, align 4, !tbaa !6
  %4773 = add nsw i32 %4772, -1
  %4774 = icmp slt i32 %4770, %4773
  br i1 %4774, label %4775, label %4790

4775:                                             ; preds = %4767
  br i1 %4762, label %4782, label %4776

4776:                                             ; preds = %4775
  %4777 = getelementptr inbounds i32, ptr %7, i64 %4768
  %4778 = load i32, ptr %4777, align 4, !tbaa !6
  %4779 = getelementptr inbounds i32, ptr %6, i64 %4768
  %4780 = load i32, ptr %4779, align 4, !tbaa !6
  %4781 = add nsw i32 %4780, %4778
  store i32 %4781, ptr %4779, align 4, !tbaa !6
  br label %4800

4782:                                             ; preds = %4758, %4775
  %4783 = phi i32 [ %4770, %4775 ], [ %4759, %4758 ]
  %4784 = phi ptr [ %4769, %4775 ], [ %4, %4758 ]
  %4785 = phi i64 [ %4768, %4775 ], [ 0, %4758 ]
  %4786 = add nsw i32 %4783, 1
  store i32 %4786, ptr %4784, align 4, !tbaa !6
  %4787 = getelementptr inbounds i32, ptr %7, i64 %4785
  %4788 = load i32, ptr %4787, align 4, !tbaa !6
  %4789 = getelementptr inbounds i32, ptr %6, i64 %4785
  br label %4800

4790:                                             ; preds = %4767
  %4791 = icmp eq i32 %4770, %4773
  br i1 %4791, label %4792, label %4798

4792:                                             ; preds = %4790
  store i32 0, ptr %4769, align 4, !tbaa !6
  %4793 = getelementptr inbounds i32, ptr %8, i64 %4768
  %4794 = load i32, ptr %4793, align 4, !tbaa !6
  %4795 = getelementptr inbounds i32, ptr %6, i64 %4768
  store i32 %4794, ptr %4795, align 4, !tbaa !6
  %4796 = add nuw nsw i64 %4768, 1
  %4797 = icmp eq i64 %4796, %4670
  br i1 %4797, label %4805, label %4767, !llvm.loop !178

4798:                                             ; preds = %4763, %4790
  %4799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4800:                                             ; preds = %4776, %4782
  %4801 = phi ptr [ %4789, %4782 ], [ %4769, %4776 ]
  %4802 = phi i32 [ %4788, %4782 ], [ 1, %4776 ]
  %4803 = load i32, ptr %4801, align 4, !tbaa !6
  %4804 = add nsw i32 %4803, %4802
  store i32 %4804, ptr %4801, align 4, !tbaa !6
  br label %4805

4805:                                             ; preds = %4792, %4800, %4765, %4747
  %4806 = icmp eq i32 %4757, %5
  br i1 %4806, label %5560, label %4673, !llvm.loop !179

4807:                                             ; preds = %4656, %4944
  %4808 = phi float [ 0.000000e+00, %4656 ], [ %4892, %4944 ]
  %4809 = phi i32 [ 0, %4656 ], [ %4893, %4944 ]
  %4810 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4657, label %4811, label %4880

4811:                                             ; preds = %4807, %4870
  %4812 = phi i32 [ %4879, %4870 ], [ 0, %4807 ]
  %4813 = phi i64 [ %4821, %4870 ], [ %4661, %4807 ]
  %4814 = phi i64 [ %4878, %4870 ], [ %4660, %4807 ]
  %4815 = phi i32 [ %4876, %4870 ], [ %4810, %4807 ]
  %4816 = sub i32 %4659, %4812
  %4817 = tail call i32 @llvm.smin.i32(i32 %4816, i32 0)
  %4818 = sub i32 %4816, %4817
  %4819 = zext i32 %4818 to i64
  %4820 = add nuw nsw i64 %4819, 1
  %4821 = add nsw i64 %4813, -1
  %4822 = icmp ult i32 %4818, 31
  br i1 %4822, label %4858, label %4823

4823:                                             ; preds = %4811
  %4824 = and i64 %4820, 8589934560
  %4825 = sub i64 %4814, %4824
  br label %4826

4826:                                             ; preds = %4826, %4823
  %4827 = phi i64 [ 0, %4823 ], [ %4850, %4826 ]
  %4828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4823 ], [ %4846, %4826 ]
  %4829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4823 ], [ %4847, %4826 ]
  %4830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4823 ], [ %4848, %4826 ]
  %4831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4823 ], [ %4849, %4826 ]
  %4832 = sub i64 %4814, %4827
  %4833 = getelementptr inbounds i32, ptr %11, i64 %4832
  %4834 = getelementptr inbounds i32, ptr %4833, i64 -7
  %4835 = load <8 x i32>, ptr %4834, align 4, !tbaa !6
  %4836 = shufflevector <8 x i32> %4835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4837 = getelementptr inbounds i32, ptr %4833, i64 -15
  %4838 = load <8 x i32>, ptr %4837, align 4, !tbaa !6
  %4839 = shufflevector <8 x i32> %4838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4840 = getelementptr inbounds i32, ptr %4833, i64 -23
  %4841 = load <8 x i32>, ptr %4840, align 4, !tbaa !6
  %4842 = shufflevector <8 x i32> %4841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4843 = getelementptr inbounds i32, ptr %4833, i64 -31
  %4844 = load <8 x i32>, ptr %4843, align 4, !tbaa !6
  %4845 = shufflevector <8 x i32> %4844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4846 = mul <8 x i32> %4836, %4828
  %4847 = mul <8 x i32> %4839, %4829
  %4848 = mul <8 x i32> %4842, %4830
  %4849 = mul <8 x i32> %4845, %4831
  %4850 = add nuw i64 %4827, 32
  %4851 = icmp eq i64 %4850, %4824
  br i1 %4851, label %4852, label %4826, !llvm.loop !180

4852:                                             ; preds = %4826
  %4853 = mul <8 x i32> %4847, %4846
  %4854 = mul <8 x i32> %4848, %4853
  %4855 = mul <8 x i32> %4849, %4854
  %4856 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4855)
  %4857 = icmp eq i64 %4820, %4824
  br i1 %4857, label %4870, label %4858

4858:                                             ; preds = %4811, %4852
  %4859 = phi i64 [ %4814, %4811 ], [ %4825, %4852 ]
  %4860 = phi i32 [ 1, %4811 ], [ %4856, %4852 ]
  br label %4861

4861:                                             ; preds = %4858, %4861
  %4862 = phi i64 [ %4867, %4861 ], [ %4859, %4858 ]
  %4863 = phi i32 [ %4866, %4861 ], [ %4860, %4858 ]
  %4864 = getelementptr inbounds i32, ptr %11, i64 %4862
  %4865 = load i32, ptr %4864, align 4, !tbaa !6
  %4866 = mul nsw i32 %4865, %4863
  %4867 = add nsw i64 %4862, -1
  %4868 = trunc i64 %4862 to i32
  %4869 = icmp sgt i32 %4868, 0
  br i1 %4869, label %4861, label %4870, !llvm.loop !181

4870:                                             ; preds = %4861, %4852
  %4871 = phi i32 [ %4856, %4852 ], [ %4866, %4861 ]
  %4872 = and i64 %4821, 4294967295
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4872
  %4874 = load i32, ptr %4873, align 4, !tbaa !6
  %4875 = mul nsw i32 %4874, %4871
  %4876 = add nsw i32 %4875, %4815
  %4877 = icmp sgt i64 %4813, 2
  %4878 = add nsw i64 %4814, -1
  %4879 = add i32 %4812, 1
  br i1 %4877, label %4811, label %4880, !llvm.loop !182

4880:                                             ; preds = %4870, %4807
  %4881 = phi i32 [ %4810, %4807 ], [ %4876, %4870 ]
  %4882 = icmp slt i32 %4881, %5
  br i1 %4882, label %4885, label %4883

4883:                                             ; preds = %4880
  %4884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

4885:                                             ; preds = %4880
  %4886 = sext i32 %4881 to i64
  %4887 = getelementptr inbounds i8, ptr %4334, i64 %4886
  %4888 = load i8, ptr %4887, align 1, !tbaa !12
  %4889 = uitofp i8 %4888 to float
  %4890 = fmul fast float %4889, %4889
  %4891 = fmul fast float %4890, %4889
  %4892 = fadd fast float %4891, %4808
  store float %4892, ptr %4336, align 4, !tbaa !163
  %4893 = add nuw nsw i32 %4809, 1
  br i1 %4658, label %4894, label %4944

4894:                                             ; preds = %4885
  %4895 = load i32, ptr %4, align 4, !tbaa !6
  %4896 = load i32, ptr %12, align 4, !tbaa !6
  %4897 = add nsw i32 %4896, -1
  %4898 = icmp slt i32 %4895, %4897
  br i1 %4898, label %4921, label %4899

4899:                                             ; preds = %4894
  %4900 = icmp eq i32 %4895, %4897
  br i1 %4900, label %4901, label %4937

4901:                                             ; preds = %4899
  store i32 0, ptr %4, align 4, !tbaa !6
  %4902 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4902, ptr %6, align 4, !tbaa !6
  br i1 %4663, label %4944, label %4903

4903:                                             ; preds = %4901, %4931
  %4904 = phi i64 [ %4935, %4931 ], [ 1, %4901 ]
  %4905 = getelementptr inbounds i32, ptr %4, i64 %4904
  %4906 = load i32, ptr %4905, align 4, !tbaa !6
  %4907 = getelementptr inbounds i32, ptr %12, i64 %4904
  %4908 = load i32, ptr %4907, align 4, !tbaa !6
  %4909 = add nsw i32 %4908, -1
  %4910 = icmp slt i32 %4906, %4909
  br i1 %4910, label %4911, label %4929

4911:                                             ; preds = %4903
  br i1 %4898, label %4921, label %4912

4912:                                             ; preds = %4911
  %4913 = shl i64 %4904, 32
  %4914 = add i64 %4913, -4294967296
  %4915 = ashr exact i64 %4914, 32
  %4916 = getelementptr inbounds i32, ptr %7, i64 %4915
  %4917 = load i32, ptr %4916, align 4, !tbaa !6
  %4918 = getelementptr inbounds i32, ptr %6, i64 %4904
  %4919 = load i32, ptr %4918, align 4, !tbaa !6
  %4920 = add nsw i32 %4919, %4917
  store i32 %4920, ptr %4918, align 4, !tbaa !6
  br label %4939

4921:                                             ; preds = %4894, %4911
  %4922 = phi i32 [ %4906, %4911 ], [ %4895, %4894 ]
  %4923 = phi ptr [ %4905, %4911 ], [ %4, %4894 ]
  %4924 = phi i64 [ %4904, %4911 ], [ 0, %4894 ]
  %4925 = add nsw i32 %4922, 1
  store i32 %4925, ptr %4923, align 4, !tbaa !6
  %4926 = getelementptr inbounds i32, ptr %7, i64 %4924
  %4927 = load i32, ptr %4926, align 4, !tbaa !6
  %4928 = getelementptr inbounds i32, ptr %6, i64 %4924
  br label %4939

4929:                                             ; preds = %4903
  %4930 = icmp eq i32 %4906, %4909
  br i1 %4930, label %4931, label %4937

4931:                                             ; preds = %4929
  store i32 0, ptr %4905, align 4, !tbaa !6
  %4932 = getelementptr inbounds i32, ptr %8, i64 %4904
  %4933 = load i32, ptr %4932, align 4, !tbaa !6
  %4934 = getelementptr inbounds i32, ptr %6, i64 %4904
  store i32 %4933, ptr %4934, align 4, !tbaa !6
  %4935 = add nuw nsw i64 %4904, 1
  %4936 = icmp eq i64 %4935, %4661
  br i1 %4936, label %4944, label %4903, !llvm.loop !183

4937:                                             ; preds = %4899, %4929
  %4938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

4939:                                             ; preds = %4912, %4921
  %4940 = phi ptr [ %4928, %4921 ], [ %4905, %4912 ]
  %4941 = phi i32 [ %4927, %4921 ], [ 1, %4912 ]
  %4942 = load i32, ptr %4940, align 4, !tbaa !6
  %4943 = add nsw i32 %4942, %4941
  store i32 %4943, ptr %4940, align 4, !tbaa !6
  br label %4944

4944:                                             ; preds = %4931, %4939, %4901, %4885
  %4945 = icmp eq i32 %4893, %5
  br i1 %4945, label %5560, label %4807, !llvm.loop !184

4946:                                             ; preds = %4343
  %4947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

4948:                                             ; preds = %18
  %4949 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4950 = load ptr, ptr %4949, align 8, !tbaa !10
  %4951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4952 = load ptr, ptr %4951, align 8, !tbaa !10
  store double 0.000000e+00, ptr %4952, align 8, !tbaa !19
  %4953 = icmp eq i32 %13, 0
  br i1 %4953, label %4954, label %4959

4954:                                             ; preds = %4948
  %4955 = load i8, ptr %4950, align 1, !tbaa !12
  %4956 = uitofp i8 %4955 to double
  %4957 = fmul fast double %4956, %4956
  %4958 = fmul fast double %4957, %4956
  store double %4958, ptr %4952, align 8, !tbaa !19
  br label %5560

4959:                                             ; preds = %4948
  switch i32 %1, label %5558 [
    i32 1, label %4960
    i32 0, label %5262
  ]

4960:                                             ; preds = %4959
  %4961 = getelementptr inbounds i32, ptr %3, i64 %19
  %4962 = load i32, ptr %4961, align 4, !tbaa !6
  %4963 = icmp eq i32 %4962, 0
  %4964 = icmp sgt i32 %5, 0
  br i1 %4963, label %4974, label %4965

4965:                                             ; preds = %4960
  br i1 %4964, label %4966, label %5560

4966:                                             ; preds = %4965
  %4967 = icmp sgt i32 %13, 1
  %4968 = icmp sgt i32 %13, 0
  %4969 = add i32 %13, -2
  %4970 = zext i32 %4969 to i64
  %4971 = zext i32 %13 to i64
  %4972 = add nuw i32 %5, 1
  %4973 = icmp eq i32 %13, 1
  br label %5123

4974:                                             ; preds = %4960
  br i1 %4964, label %4975, label %5560

4975:                                             ; preds = %4974
  %4976 = icmp sgt i32 %13, 1
  %4977 = icmp sgt i32 %13, 0
  %4978 = add i32 %13, -2
  %4979 = zext i32 %4978 to i64
  %4980 = zext i32 %13 to i64
  %4981 = add nuw i32 %5, 1
  %4982 = icmp eq i32 %13, 1
  br label %4983

4983:                                             ; preds = %4975, %5121
  %4984 = phi double [ 0.000000e+00, %4975 ], [ %5071, %5121 ]
  %4985 = phi i32 [ 0, %4975 ], [ %5073, %5121 ]
  %4986 = phi double [ 0.000000e+00, %4975 ], [ %5072, %5121 ]
  %4987 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4976, label %4988, label %5057

4988:                                             ; preds = %4983, %5047
  %4989 = phi i32 [ %5056, %5047 ], [ 0, %4983 ]
  %4990 = phi i64 [ %4998, %5047 ], [ %4980, %4983 ]
  %4991 = phi i64 [ %5055, %5047 ], [ %4979, %4983 ]
  %4992 = phi i32 [ %5053, %5047 ], [ %4987, %4983 ]
  %4993 = sub i32 %4978, %4989
  %4994 = tail call i32 @llvm.smin.i32(i32 %4993, i32 0)
  %4995 = sub i32 %4993, %4994
  %4996 = zext i32 %4995 to i64
  %4997 = add nuw nsw i64 %4996, 1
  %4998 = add nsw i64 %4990, -1
  %4999 = icmp ult i32 %4995, 31
  br i1 %4999, label %5035, label %5000

5000:                                             ; preds = %4988
  %5001 = and i64 %4997, 8589934560
  %5002 = sub i64 %4991, %5001
  br label %5003

5003:                                             ; preds = %5003, %5000
  %5004 = phi i64 [ 0, %5000 ], [ %5027, %5003 ]
  %5005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5000 ], [ %5023, %5003 ]
  %5006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5000 ], [ %5024, %5003 ]
  %5007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5000 ], [ %5025, %5003 ]
  %5008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5000 ], [ %5026, %5003 ]
  %5009 = sub i64 %4991, %5004
  %5010 = getelementptr inbounds i32, ptr %9, i64 %5009
  %5011 = getelementptr inbounds i32, ptr %5010, i64 -7
  %5012 = load <8 x i32>, ptr %5011, align 4, !tbaa !6
  %5013 = shufflevector <8 x i32> %5012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5014 = getelementptr inbounds i32, ptr %5010, i64 -15
  %5015 = load <8 x i32>, ptr %5014, align 4, !tbaa !6
  %5016 = shufflevector <8 x i32> %5015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5017 = getelementptr inbounds i32, ptr %5010, i64 -23
  %5018 = load <8 x i32>, ptr %5017, align 4, !tbaa !6
  %5019 = shufflevector <8 x i32> %5018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5020 = getelementptr inbounds i32, ptr %5010, i64 -31
  %5021 = load <8 x i32>, ptr %5020, align 4, !tbaa !6
  %5022 = shufflevector <8 x i32> %5021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5023 = mul <8 x i32> %5013, %5005
  %5024 = mul <8 x i32> %5016, %5006
  %5025 = mul <8 x i32> %5019, %5007
  %5026 = mul <8 x i32> %5022, %5008
  %5027 = add nuw i64 %5004, 32
  %5028 = icmp eq i64 %5027, %5001
  br i1 %5028, label %5029, label %5003, !llvm.loop !185

5029:                                             ; preds = %5003
  %5030 = mul <8 x i32> %5024, %5023
  %5031 = mul <8 x i32> %5025, %5030
  %5032 = mul <8 x i32> %5026, %5031
  %5033 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5032)
  %5034 = icmp eq i64 %4997, %5001
  br i1 %5034, label %5047, label %5035

5035:                                             ; preds = %4988, %5029
  %5036 = phi i64 [ %4991, %4988 ], [ %5002, %5029 ]
  %5037 = phi i32 [ 1, %4988 ], [ %5033, %5029 ]
  br label %5038

5038:                                             ; preds = %5035, %5038
  %5039 = phi i64 [ %5044, %5038 ], [ %5036, %5035 ]
  %5040 = phi i32 [ %5043, %5038 ], [ %5037, %5035 ]
  %5041 = getelementptr inbounds i32, ptr %9, i64 %5039
  %5042 = load i32, ptr %5041, align 4, !tbaa !6
  %5043 = mul nsw i32 %5042, %5040
  %5044 = add nsw i64 %5039, -1
  %5045 = trunc i64 %5039 to i32
  %5046 = icmp sgt i32 %5045, 0
  br i1 %5046, label %5038, label %5047, !llvm.loop !186

5047:                                             ; preds = %5038, %5029
  %5048 = phi i32 [ %5033, %5029 ], [ %5043, %5038 ]
  %5049 = and i64 %4998, 4294967295
  %5050 = getelementptr inbounds i32, ptr %6, i64 %5049
  %5051 = load i32, ptr %5050, align 4, !tbaa !6
  %5052 = mul nsw i32 %5051, %5048
  %5053 = add nsw i32 %5052, %4992
  %5054 = icmp sgt i64 %4990, 2
  %5055 = add nsw i64 %4991, -1
  %5056 = add i32 %4989, 1
  br i1 %5054, label %4988, label %5057, !llvm.loop !187

5057:                                             ; preds = %5047, %4983
  %5058 = phi i32 [ %4987, %4983 ], [ %5053, %5047 ]
  %5059 = sext i32 %5058 to i64
  %5060 = getelementptr inbounds double, ptr %2, i64 %5059
  %5061 = load double, ptr %5060, align 8, !tbaa !19
  %5062 = getelementptr inbounds i8, ptr %4950, i64 %5059
  %5063 = load i8, ptr %5062, align 1, !tbaa !12
  %5064 = uitofp i8 %5063 to double
  %5065 = fmul fast double %5061, %5064
  %5066 = fcmp fast olt double %5065, 0.000000e+00
  %5067 = fneg fast double %5065
  %5068 = select nnan ninf i1 %5066, double %5067, double %5065
  %5069 = fmul fast double %5065, %5065
  %5070 = fmul fast double %5069, %5068
  %5071 = fadd fast double %5070, %4984
  store double %5071, ptr %4952, align 8, !tbaa !19
  %5072 = fadd fast double %5061, %4986
  %5073 = add nuw nsw i32 %4985, 1
  br i1 %4977, label %5074, label %5121

5074:                                             ; preds = %5057
  %5075 = load i32, ptr %4, align 4, !tbaa !6
  %5076 = load i32, ptr %12, align 4, !tbaa !6
  %5077 = add nsw i32 %5076, -1
  %5078 = icmp slt i32 %5075, %5077
  br i1 %5078, label %5098, label %5079

5079:                                             ; preds = %5074
  %5080 = icmp eq i32 %5075, %5077
  br i1 %5080, label %5081, label %5114

5081:                                             ; preds = %5079
  store i32 0, ptr %4, align 4, !tbaa !6
  %5082 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5082, ptr %6, align 4, !tbaa !6
  br i1 %4982, label %5121, label %5083

5083:                                             ; preds = %5081, %5108
  %5084 = phi i64 [ %5112, %5108 ], [ 1, %5081 ]
  %5085 = getelementptr inbounds i32, ptr %4, i64 %5084
  %5086 = load i32, ptr %5085, align 4, !tbaa !6
  %5087 = getelementptr inbounds i32, ptr %12, i64 %5084
  %5088 = load i32, ptr %5087, align 4, !tbaa !6
  %5089 = add nsw i32 %5088, -1
  %5090 = icmp slt i32 %5086, %5089
  br i1 %5090, label %5091, label %5106

5091:                                             ; preds = %5083
  br i1 %5078, label %5098, label %5092

5092:                                             ; preds = %5091
  %5093 = getelementptr inbounds i32, ptr %7, i64 %5084
  %5094 = load i32, ptr %5093, align 4, !tbaa !6
  %5095 = getelementptr inbounds i32, ptr %6, i64 %5084
  %5096 = load i32, ptr %5095, align 4, !tbaa !6
  %5097 = add nsw i32 %5096, %5094
  store i32 %5097, ptr %5095, align 4, !tbaa !6
  br label %5116

5098:                                             ; preds = %5074, %5091
  %5099 = phi i32 [ %5086, %5091 ], [ %5075, %5074 ]
  %5100 = phi ptr [ %5085, %5091 ], [ %4, %5074 ]
  %5101 = phi i64 [ %5084, %5091 ], [ 0, %5074 ]
  %5102 = add nsw i32 %5099, 1
  store i32 %5102, ptr %5100, align 4, !tbaa !6
  %5103 = getelementptr inbounds i32, ptr %7, i64 %5101
  %5104 = load i32, ptr %5103, align 4, !tbaa !6
  %5105 = getelementptr inbounds i32, ptr %6, i64 %5101
  br label %5116

5106:                                             ; preds = %5083
  %5107 = icmp eq i32 %5086, %5089
  br i1 %5107, label %5108, label %5114

5108:                                             ; preds = %5106
  store i32 0, ptr %5085, align 4, !tbaa !6
  %5109 = getelementptr inbounds i32, ptr %8, i64 %5084
  %5110 = load i32, ptr %5109, align 4, !tbaa !6
  %5111 = getelementptr inbounds i32, ptr %6, i64 %5084
  store i32 %5110, ptr %5111, align 4, !tbaa !6
  %5112 = add nuw nsw i64 %5084, 1
  %5113 = icmp eq i64 %5112, %4980
  br i1 %5113, label %5121, label %5083, !llvm.loop !188

5114:                                             ; preds = %5079, %5106
  %5115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

5116:                                             ; preds = %5092, %5098
  %5117 = phi ptr [ %5105, %5098 ], [ %5085, %5092 ]
  %5118 = phi i32 [ %5104, %5098 ], [ 1, %5092 ]
  %5119 = load i32, ptr %5117, align 4, !tbaa !6
  %5120 = add nsw i32 %5119, %5118
  store i32 %5120, ptr %5117, align 4, !tbaa !6
  br label %5121

5121:                                             ; preds = %5108, %5116, %5081, %5057
  %5122 = icmp eq i32 %5073, %5
  br i1 %5122, label %5560, label %4983, !llvm.loop !189

5123:                                             ; preds = %4966, %5260
  %5124 = phi double [ 0.000000e+00, %4966 ], [ %5208, %5260 ]
  %5125 = phi i32 [ 0, %4966 ], [ %5209, %5260 ]
  %5126 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4967, label %5127, label %5196

5127:                                             ; preds = %5123, %5186
  %5128 = phi i32 [ %5195, %5186 ], [ 0, %5123 ]
  %5129 = phi i64 [ %5137, %5186 ], [ %4971, %5123 ]
  %5130 = phi i64 [ %5194, %5186 ], [ %4970, %5123 ]
  %5131 = phi i32 [ %5192, %5186 ], [ %5126, %5123 ]
  %5132 = sub i32 %4969, %5128
  %5133 = tail call i32 @llvm.smin.i32(i32 %5132, i32 0)
  %5134 = sub i32 %5132, %5133
  %5135 = zext i32 %5134 to i64
  %5136 = add nuw nsw i64 %5135, 1
  %5137 = add nsw i64 %5129, -1
  %5138 = icmp ult i32 %5134, 31
  br i1 %5138, label %5174, label %5139

5139:                                             ; preds = %5127
  %5140 = and i64 %5136, 8589934560
  %5141 = sub i64 %5130, %5140
  br label %5142

5142:                                             ; preds = %5142, %5139
  %5143 = phi i64 [ 0, %5139 ], [ %5166, %5142 ]
  %5144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5139 ], [ %5162, %5142 ]
  %5145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5139 ], [ %5163, %5142 ]
  %5146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5139 ], [ %5164, %5142 ]
  %5147 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5139 ], [ %5165, %5142 ]
  %5148 = sub i64 %5130, %5143
  %5149 = getelementptr inbounds i32, ptr %11, i64 %5148
  %5150 = getelementptr inbounds i32, ptr %5149, i64 -7
  %5151 = load <8 x i32>, ptr %5150, align 4, !tbaa !6
  %5152 = shufflevector <8 x i32> %5151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5153 = getelementptr inbounds i32, ptr %5149, i64 -15
  %5154 = load <8 x i32>, ptr %5153, align 4, !tbaa !6
  %5155 = shufflevector <8 x i32> %5154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5156 = getelementptr inbounds i32, ptr %5149, i64 -23
  %5157 = load <8 x i32>, ptr %5156, align 4, !tbaa !6
  %5158 = shufflevector <8 x i32> %5157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5159 = getelementptr inbounds i32, ptr %5149, i64 -31
  %5160 = load <8 x i32>, ptr %5159, align 4, !tbaa !6
  %5161 = shufflevector <8 x i32> %5160, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5162 = mul <8 x i32> %5152, %5144
  %5163 = mul <8 x i32> %5155, %5145
  %5164 = mul <8 x i32> %5158, %5146
  %5165 = mul <8 x i32> %5161, %5147
  %5166 = add nuw i64 %5143, 32
  %5167 = icmp eq i64 %5166, %5140
  br i1 %5167, label %5168, label %5142, !llvm.loop !190

5168:                                             ; preds = %5142
  %5169 = mul <8 x i32> %5163, %5162
  %5170 = mul <8 x i32> %5164, %5169
  %5171 = mul <8 x i32> %5165, %5170
  %5172 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5171)
  %5173 = icmp eq i64 %5136, %5140
  br i1 %5173, label %5186, label %5174

5174:                                             ; preds = %5127, %5168
  %5175 = phi i64 [ %5130, %5127 ], [ %5141, %5168 ]
  %5176 = phi i32 [ 1, %5127 ], [ %5172, %5168 ]
  br label %5177

5177:                                             ; preds = %5174, %5177
  %5178 = phi i64 [ %5183, %5177 ], [ %5175, %5174 ]
  %5179 = phi i32 [ %5182, %5177 ], [ %5176, %5174 ]
  %5180 = getelementptr inbounds i32, ptr %11, i64 %5178
  %5181 = load i32, ptr %5180, align 4, !tbaa !6
  %5182 = mul nsw i32 %5181, %5179
  %5183 = add nsw i64 %5178, -1
  %5184 = trunc i64 %5178 to i32
  %5185 = icmp sgt i32 %5184, 0
  br i1 %5185, label %5177, label %5186, !llvm.loop !191

5186:                                             ; preds = %5177, %5168
  %5187 = phi i32 [ %5172, %5168 ], [ %5182, %5177 ]
  %5188 = and i64 %5137, 4294967295
  %5189 = getelementptr inbounds i32, ptr %6, i64 %5188
  %5190 = load i32, ptr %5189, align 4, !tbaa !6
  %5191 = mul nsw i32 %5190, %5187
  %5192 = add nsw i32 %5191, %5131
  %5193 = icmp sgt i64 %5129, 2
  %5194 = add nsw i64 %5130, -1
  %5195 = add i32 %5128, 1
  br i1 %5193, label %5127, label %5196, !llvm.loop !192

5196:                                             ; preds = %5186, %5123
  %5197 = phi i32 [ %5126, %5123 ], [ %5192, %5186 ]
  %5198 = icmp slt i32 %5197, %5
  br i1 %5198, label %5201, label %5199

5199:                                             ; preds = %5196
  %5200 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

5201:                                             ; preds = %5196
  %5202 = sext i32 %5197 to i64
  %5203 = getelementptr inbounds i8, ptr %4950, i64 %5202
  %5204 = load i8, ptr %5203, align 1, !tbaa !12
  %5205 = uitofp i8 %5204 to double
  %5206 = fmul fast double %5205, %5205
  %5207 = fmul fast double %5206, %5205
  %5208 = fadd fast double %5207, %5124
  store double %5208, ptr %4952, align 8, !tbaa !19
  %5209 = add nuw nsw i32 %5125, 1
  br i1 %4968, label %5210, label %5260

5210:                                             ; preds = %5201
  %5211 = load i32, ptr %4, align 4, !tbaa !6
  %5212 = load i32, ptr %12, align 4, !tbaa !6
  %5213 = add nsw i32 %5212, -1
  %5214 = icmp slt i32 %5211, %5213
  br i1 %5214, label %5237, label %5215

5215:                                             ; preds = %5210
  %5216 = icmp eq i32 %5211, %5213
  br i1 %5216, label %5217, label %5253

5217:                                             ; preds = %5215
  store i32 0, ptr %4, align 4, !tbaa !6
  %5218 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5218, ptr %6, align 4, !tbaa !6
  br i1 %4973, label %5260, label %5219

5219:                                             ; preds = %5217, %5247
  %5220 = phi i64 [ %5251, %5247 ], [ 1, %5217 ]
  %5221 = getelementptr inbounds i32, ptr %4, i64 %5220
  %5222 = load i32, ptr %5221, align 4, !tbaa !6
  %5223 = getelementptr inbounds i32, ptr %12, i64 %5220
  %5224 = load i32, ptr %5223, align 4, !tbaa !6
  %5225 = add nsw i32 %5224, -1
  %5226 = icmp slt i32 %5222, %5225
  br i1 %5226, label %5227, label %5245

5227:                                             ; preds = %5219
  br i1 %5214, label %5237, label %5228

5228:                                             ; preds = %5227
  %5229 = shl i64 %5220, 32
  %5230 = add i64 %5229, -4294967296
  %5231 = ashr exact i64 %5230, 32
  %5232 = getelementptr inbounds i32, ptr %7, i64 %5231
  %5233 = load i32, ptr %5232, align 4, !tbaa !6
  %5234 = getelementptr inbounds i32, ptr %6, i64 %5220
  %5235 = load i32, ptr %5234, align 4, !tbaa !6
  %5236 = add nsw i32 %5235, %5233
  store i32 %5236, ptr %5234, align 4, !tbaa !6
  br label %5255

5237:                                             ; preds = %5210, %5227
  %5238 = phi i32 [ %5222, %5227 ], [ %5211, %5210 ]
  %5239 = phi ptr [ %5221, %5227 ], [ %4, %5210 ]
  %5240 = phi i64 [ %5220, %5227 ], [ 0, %5210 ]
  %5241 = add nsw i32 %5238, 1
  store i32 %5241, ptr %5239, align 4, !tbaa !6
  %5242 = getelementptr inbounds i32, ptr %7, i64 %5240
  %5243 = load i32, ptr %5242, align 4, !tbaa !6
  %5244 = getelementptr inbounds i32, ptr %6, i64 %5240
  br label %5255

5245:                                             ; preds = %5219
  %5246 = icmp eq i32 %5222, %5225
  br i1 %5246, label %5247, label %5253

5247:                                             ; preds = %5245
  store i32 0, ptr %5221, align 4, !tbaa !6
  %5248 = getelementptr inbounds i32, ptr %8, i64 %5220
  %5249 = load i32, ptr %5248, align 4, !tbaa !6
  %5250 = getelementptr inbounds i32, ptr %6, i64 %5220
  store i32 %5249, ptr %5250, align 4, !tbaa !6
  %5251 = add nuw nsw i64 %5220, 1
  %5252 = icmp eq i64 %5251, %4971
  br i1 %5252, label %5260, label %5219, !llvm.loop !193

5253:                                             ; preds = %5215, %5245
  %5254 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

5255:                                             ; preds = %5228, %5237
  %5256 = phi ptr [ %5244, %5237 ], [ %5221, %5228 ]
  %5257 = phi i32 [ %5243, %5237 ], [ 1, %5228 ]
  %5258 = load i32, ptr %5256, align 4, !tbaa !6
  %5259 = add nsw i32 %5258, %5257
  store i32 %5259, ptr %5256, align 4, !tbaa !6
  br label %5260

5260:                                             ; preds = %5247, %5255, %5217, %5201
  %5261 = icmp eq i32 %5209, %5
  br i1 %5261, label %5560, label %5123, !llvm.loop !194

5262:                                             ; preds = %4959
  %5263 = getelementptr inbounds i32, ptr %3, i64 %19
  %5264 = load i32, ptr %5263, align 4, !tbaa !6
  %5265 = icmp eq i32 %5264, 0
  %5266 = icmp sgt i32 %5, 0
  br i1 %5265, label %5276, label %5267

5267:                                             ; preds = %5262
  br i1 %5266, label %5268, label %5560

5268:                                             ; preds = %5267
  %5269 = icmp sgt i32 %13, 1
  %5270 = icmp sgt i32 %13, 0
  %5271 = add i32 %13, -2
  %5272 = zext i32 %5271 to i64
  %5273 = zext i32 %13 to i64
  %5274 = add nuw i32 %5, 1
  %5275 = icmp eq i32 %13, 1
  br label %5419

5276:                                             ; preds = %5262
  br i1 %5266, label %5277, label %5560

5277:                                             ; preds = %5276
  %5278 = icmp sgt i32 %13, 1
  %5279 = icmp sgt i32 %13, 0
  %5280 = add i32 %13, -2
  %5281 = zext i32 %5280 to i64
  %5282 = zext i32 %13 to i64
  %5283 = add nuw i32 %5, 1
  %5284 = icmp eq i32 %13, 1
  br label %5285

5285:                                             ; preds = %5277, %5417
  %5286 = phi double [ 0.000000e+00, %5277 ], [ %5367, %5417 ]
  %5287 = phi i32 [ 0, %5277 ], [ %5369, %5417 ]
  %5288 = phi double [ 0.000000e+00, %5277 ], [ %5368, %5417 ]
  %5289 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5278, label %5290, label %5359

5290:                                             ; preds = %5285, %5349
  %5291 = phi i32 [ %5358, %5349 ], [ 0, %5285 ]
  %5292 = phi i64 [ %5300, %5349 ], [ %5282, %5285 ]
  %5293 = phi i64 [ %5357, %5349 ], [ %5281, %5285 ]
  %5294 = phi i32 [ %5355, %5349 ], [ %5289, %5285 ]
  %5295 = sub i32 %5280, %5291
  %5296 = tail call i32 @llvm.smin.i32(i32 %5295, i32 0)
  %5297 = sub i32 %5295, %5296
  %5298 = zext i32 %5297 to i64
  %5299 = add nuw nsw i64 %5298, 1
  %5300 = add nsw i64 %5292, -1
  %5301 = icmp ult i32 %5297, 31
  br i1 %5301, label %5337, label %5302

5302:                                             ; preds = %5290
  %5303 = and i64 %5299, 8589934560
  %5304 = sub i64 %5293, %5303
  br label %5305

5305:                                             ; preds = %5305, %5302
  %5306 = phi i64 [ 0, %5302 ], [ %5329, %5305 ]
  %5307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5302 ], [ %5325, %5305 ]
  %5308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5302 ], [ %5326, %5305 ]
  %5309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5302 ], [ %5327, %5305 ]
  %5310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5302 ], [ %5328, %5305 ]
  %5311 = sub i64 %5293, %5306
  %5312 = getelementptr inbounds i32, ptr %9, i64 %5311
  %5313 = getelementptr inbounds i32, ptr %5312, i64 -7
  %5314 = load <8 x i32>, ptr %5313, align 4, !tbaa !6
  %5315 = shufflevector <8 x i32> %5314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5316 = getelementptr inbounds i32, ptr %5312, i64 -15
  %5317 = load <8 x i32>, ptr %5316, align 4, !tbaa !6
  %5318 = shufflevector <8 x i32> %5317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5319 = getelementptr inbounds i32, ptr %5312, i64 -23
  %5320 = load <8 x i32>, ptr %5319, align 4, !tbaa !6
  %5321 = shufflevector <8 x i32> %5320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5322 = getelementptr inbounds i32, ptr %5312, i64 -31
  %5323 = load <8 x i32>, ptr %5322, align 4, !tbaa !6
  %5324 = shufflevector <8 x i32> %5323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5325 = mul <8 x i32> %5315, %5307
  %5326 = mul <8 x i32> %5318, %5308
  %5327 = mul <8 x i32> %5321, %5309
  %5328 = mul <8 x i32> %5324, %5310
  %5329 = add nuw i64 %5306, 32
  %5330 = icmp eq i64 %5329, %5303
  br i1 %5330, label %5331, label %5305, !llvm.loop !195

5331:                                             ; preds = %5305
  %5332 = mul <8 x i32> %5326, %5325
  %5333 = mul <8 x i32> %5327, %5332
  %5334 = mul <8 x i32> %5328, %5333
  %5335 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5334)
  %5336 = icmp eq i64 %5299, %5303
  br i1 %5336, label %5349, label %5337

5337:                                             ; preds = %5290, %5331
  %5338 = phi i64 [ %5293, %5290 ], [ %5304, %5331 ]
  %5339 = phi i32 [ 1, %5290 ], [ %5335, %5331 ]
  br label %5340

5340:                                             ; preds = %5337, %5340
  %5341 = phi i64 [ %5346, %5340 ], [ %5338, %5337 ]
  %5342 = phi i32 [ %5345, %5340 ], [ %5339, %5337 ]
  %5343 = getelementptr inbounds i32, ptr %9, i64 %5341
  %5344 = load i32, ptr %5343, align 4, !tbaa !6
  %5345 = mul nsw i32 %5344, %5342
  %5346 = add nsw i64 %5341, -1
  %5347 = trunc i64 %5341 to i32
  %5348 = icmp sgt i32 %5347, 0
  br i1 %5348, label %5340, label %5349, !llvm.loop !196

5349:                                             ; preds = %5340, %5331
  %5350 = phi i32 [ %5335, %5331 ], [ %5345, %5340 ]
  %5351 = and i64 %5300, 4294967295
  %5352 = getelementptr inbounds i32, ptr %6, i64 %5351
  %5353 = load i32, ptr %5352, align 4, !tbaa !6
  %5354 = mul nsw i32 %5353, %5350
  %5355 = add nsw i32 %5354, %5294
  %5356 = icmp sgt i64 %5292, 2
  %5357 = add nsw i64 %5293, -1
  %5358 = add i32 %5291, 1
  br i1 %5356, label %5290, label %5359, !llvm.loop !197

5359:                                             ; preds = %5349, %5285
  %5360 = phi i32 [ %5289, %5285 ], [ %5355, %5349 ]
  %5361 = sext i32 %5360 to i64
  %5362 = getelementptr inbounds i8, ptr %4950, i64 %5361
  %5363 = load i8, ptr %5362, align 1, !tbaa !12
  %5364 = uitofp i8 %5363 to double
  %5365 = fmul fast double %5364, %5364
  %5366 = fmul fast double %5365, %5364
  %5367 = fadd fast double %5366, %5286
  store double %5367, ptr %4952, align 8, !tbaa !19
  %5368 = fadd fast double %5288, 1.000000e+00
  %5369 = add nuw nsw i32 %5287, 1
  br i1 %5279, label %5370, label %5417

5370:                                             ; preds = %5359
  %5371 = load i32, ptr %4, align 4, !tbaa !6
  %5372 = load i32, ptr %12, align 4, !tbaa !6
  %5373 = add nsw i32 %5372, -1
  %5374 = icmp slt i32 %5371, %5373
  br i1 %5374, label %5394, label %5375

5375:                                             ; preds = %5370
  %5376 = icmp eq i32 %5371, %5373
  br i1 %5376, label %5377, label %5410

5377:                                             ; preds = %5375
  store i32 0, ptr %4, align 4, !tbaa !6
  %5378 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5378, ptr %6, align 4, !tbaa !6
  br i1 %5284, label %5417, label %5379

5379:                                             ; preds = %5377, %5404
  %5380 = phi i64 [ %5408, %5404 ], [ 1, %5377 ]
  %5381 = getelementptr inbounds i32, ptr %4, i64 %5380
  %5382 = load i32, ptr %5381, align 4, !tbaa !6
  %5383 = getelementptr inbounds i32, ptr %12, i64 %5380
  %5384 = load i32, ptr %5383, align 4, !tbaa !6
  %5385 = add nsw i32 %5384, -1
  %5386 = icmp slt i32 %5382, %5385
  br i1 %5386, label %5387, label %5402

5387:                                             ; preds = %5379
  br i1 %5374, label %5394, label %5388

5388:                                             ; preds = %5387
  %5389 = getelementptr inbounds i32, ptr %7, i64 %5380
  %5390 = load i32, ptr %5389, align 4, !tbaa !6
  %5391 = getelementptr inbounds i32, ptr %6, i64 %5380
  %5392 = load i32, ptr %5391, align 4, !tbaa !6
  %5393 = add nsw i32 %5392, %5390
  store i32 %5393, ptr %5391, align 4, !tbaa !6
  br label %5412

5394:                                             ; preds = %5370, %5387
  %5395 = phi i32 [ %5382, %5387 ], [ %5371, %5370 ]
  %5396 = phi ptr [ %5381, %5387 ], [ %4, %5370 ]
  %5397 = phi i64 [ %5380, %5387 ], [ 0, %5370 ]
  %5398 = add nsw i32 %5395, 1
  store i32 %5398, ptr %5396, align 4, !tbaa !6
  %5399 = getelementptr inbounds i32, ptr %7, i64 %5397
  %5400 = load i32, ptr %5399, align 4, !tbaa !6
  %5401 = getelementptr inbounds i32, ptr %6, i64 %5397
  br label %5412

5402:                                             ; preds = %5379
  %5403 = icmp eq i32 %5382, %5385
  br i1 %5403, label %5404, label %5410

5404:                                             ; preds = %5402
  store i32 0, ptr %5381, align 4, !tbaa !6
  %5405 = getelementptr inbounds i32, ptr %8, i64 %5380
  %5406 = load i32, ptr %5405, align 4, !tbaa !6
  %5407 = getelementptr inbounds i32, ptr %6, i64 %5380
  store i32 %5406, ptr %5407, align 4, !tbaa !6
  %5408 = add nuw nsw i64 %5380, 1
  %5409 = icmp eq i64 %5408, %5282
  br i1 %5409, label %5417, label %5379, !llvm.loop !198

5410:                                             ; preds = %5375, %5402
  %5411 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

5412:                                             ; preds = %5388, %5394
  %5413 = phi ptr [ %5401, %5394 ], [ %5381, %5388 ]
  %5414 = phi i32 [ %5400, %5394 ], [ 1, %5388 ]
  %5415 = load i32, ptr %5413, align 4, !tbaa !6
  %5416 = add nsw i32 %5415, %5414
  store i32 %5416, ptr %5413, align 4, !tbaa !6
  br label %5417

5417:                                             ; preds = %5404, %5412, %5377, %5359
  %5418 = icmp eq i32 %5369, %5
  br i1 %5418, label %5560, label %5285, !llvm.loop !199

5419:                                             ; preds = %5268, %5556
  %5420 = phi double [ 0.000000e+00, %5268 ], [ %5504, %5556 ]
  %5421 = phi i32 [ 0, %5268 ], [ %5505, %5556 ]
  %5422 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5269, label %5423, label %5492

5423:                                             ; preds = %5419, %5482
  %5424 = phi i32 [ %5491, %5482 ], [ 0, %5419 ]
  %5425 = phi i64 [ %5433, %5482 ], [ %5273, %5419 ]
  %5426 = phi i64 [ %5490, %5482 ], [ %5272, %5419 ]
  %5427 = phi i32 [ %5488, %5482 ], [ %5422, %5419 ]
  %5428 = sub i32 %5271, %5424
  %5429 = tail call i32 @llvm.smin.i32(i32 %5428, i32 0)
  %5430 = sub i32 %5428, %5429
  %5431 = zext i32 %5430 to i64
  %5432 = add nuw nsw i64 %5431, 1
  %5433 = add nsw i64 %5425, -1
  %5434 = icmp ult i32 %5430, 31
  br i1 %5434, label %5470, label %5435

5435:                                             ; preds = %5423
  %5436 = and i64 %5432, 8589934560
  %5437 = sub i64 %5426, %5436
  br label %5438

5438:                                             ; preds = %5438, %5435
  %5439 = phi i64 [ 0, %5435 ], [ %5462, %5438 ]
  %5440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5435 ], [ %5458, %5438 ]
  %5441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5435 ], [ %5459, %5438 ]
  %5442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5435 ], [ %5460, %5438 ]
  %5443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5435 ], [ %5461, %5438 ]
  %5444 = sub i64 %5426, %5439
  %5445 = getelementptr inbounds i32, ptr %11, i64 %5444
  %5446 = getelementptr inbounds i32, ptr %5445, i64 -7
  %5447 = load <8 x i32>, ptr %5446, align 4, !tbaa !6
  %5448 = shufflevector <8 x i32> %5447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5449 = getelementptr inbounds i32, ptr %5445, i64 -15
  %5450 = load <8 x i32>, ptr %5449, align 4, !tbaa !6
  %5451 = shufflevector <8 x i32> %5450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5452 = getelementptr inbounds i32, ptr %5445, i64 -23
  %5453 = load <8 x i32>, ptr %5452, align 4, !tbaa !6
  %5454 = shufflevector <8 x i32> %5453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5455 = getelementptr inbounds i32, ptr %5445, i64 -31
  %5456 = load <8 x i32>, ptr %5455, align 4, !tbaa !6
  %5457 = shufflevector <8 x i32> %5456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5458 = mul <8 x i32> %5448, %5440
  %5459 = mul <8 x i32> %5451, %5441
  %5460 = mul <8 x i32> %5454, %5442
  %5461 = mul <8 x i32> %5457, %5443
  %5462 = add nuw i64 %5439, 32
  %5463 = icmp eq i64 %5462, %5436
  br i1 %5463, label %5464, label %5438, !llvm.loop !200

5464:                                             ; preds = %5438
  %5465 = mul <8 x i32> %5459, %5458
  %5466 = mul <8 x i32> %5460, %5465
  %5467 = mul <8 x i32> %5461, %5466
  %5468 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5467)
  %5469 = icmp eq i64 %5432, %5436
  br i1 %5469, label %5482, label %5470

5470:                                             ; preds = %5423, %5464
  %5471 = phi i64 [ %5426, %5423 ], [ %5437, %5464 ]
  %5472 = phi i32 [ 1, %5423 ], [ %5468, %5464 ]
  br label %5473

5473:                                             ; preds = %5470, %5473
  %5474 = phi i64 [ %5479, %5473 ], [ %5471, %5470 ]
  %5475 = phi i32 [ %5478, %5473 ], [ %5472, %5470 ]
  %5476 = getelementptr inbounds i32, ptr %11, i64 %5474
  %5477 = load i32, ptr %5476, align 4, !tbaa !6
  %5478 = mul nsw i32 %5477, %5475
  %5479 = add nsw i64 %5474, -1
  %5480 = trunc i64 %5474 to i32
  %5481 = icmp sgt i32 %5480, 0
  br i1 %5481, label %5473, label %5482, !llvm.loop !201

5482:                                             ; preds = %5473, %5464
  %5483 = phi i32 [ %5468, %5464 ], [ %5478, %5473 ]
  %5484 = and i64 %5433, 4294967295
  %5485 = getelementptr inbounds i32, ptr %6, i64 %5484
  %5486 = load i32, ptr %5485, align 4, !tbaa !6
  %5487 = mul nsw i32 %5486, %5483
  %5488 = add nsw i32 %5487, %5427
  %5489 = icmp sgt i64 %5425, 2
  %5490 = add nsw i64 %5426, -1
  %5491 = add i32 %5424, 1
  br i1 %5489, label %5423, label %5492, !llvm.loop !202

5492:                                             ; preds = %5482, %5419
  %5493 = phi i32 [ %5422, %5419 ], [ %5488, %5482 ]
  %5494 = icmp slt i32 %5493, %5
  br i1 %5494, label %5497, label %5495

5495:                                             ; preds = %5492
  %5496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5565

5497:                                             ; preds = %5492
  %5498 = sext i32 %5493 to i64
  %5499 = getelementptr inbounds i8, ptr %4950, i64 %5498
  %5500 = load i8, ptr %5499, align 1, !tbaa !12
  %5501 = uitofp i8 %5500 to double
  %5502 = fmul fast double %5501, %5501
  %5503 = fmul fast double %5502, %5501
  %5504 = fadd fast double %5503, %5420
  store double %5504, ptr %4952, align 8, !tbaa !19
  %5505 = add nuw nsw i32 %5421, 1
  br i1 %5270, label %5506, label %5556

5506:                                             ; preds = %5497
  %5507 = load i32, ptr %4, align 4, !tbaa !6
  %5508 = load i32, ptr %12, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, -1
  %5510 = icmp slt i32 %5507, %5509
  br i1 %5510, label %5533, label %5511

5511:                                             ; preds = %5506
  %5512 = icmp eq i32 %5507, %5509
  br i1 %5512, label %5513, label %5549

5513:                                             ; preds = %5511
  store i32 0, ptr %4, align 4, !tbaa !6
  %5514 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5514, ptr %6, align 4, !tbaa !6
  br i1 %5275, label %5556, label %5515

5515:                                             ; preds = %5513, %5543
  %5516 = phi i64 [ %5547, %5543 ], [ 1, %5513 ]
  %5517 = getelementptr inbounds i32, ptr %4, i64 %5516
  %5518 = load i32, ptr %5517, align 4, !tbaa !6
  %5519 = getelementptr inbounds i32, ptr %12, i64 %5516
  %5520 = load i32, ptr %5519, align 4, !tbaa !6
  %5521 = add nsw i32 %5520, -1
  %5522 = icmp slt i32 %5518, %5521
  br i1 %5522, label %5523, label %5541

5523:                                             ; preds = %5515
  br i1 %5510, label %5533, label %5524

5524:                                             ; preds = %5523
  %5525 = shl i64 %5516, 32
  %5526 = add i64 %5525, -4294967296
  %5527 = ashr exact i64 %5526, 32
  %5528 = getelementptr inbounds i32, ptr %7, i64 %5527
  %5529 = load i32, ptr %5528, align 4, !tbaa !6
  %5530 = getelementptr inbounds i32, ptr %6, i64 %5516
  %5531 = load i32, ptr %5530, align 4, !tbaa !6
  %5532 = add nsw i32 %5531, %5529
  store i32 %5532, ptr %5530, align 4, !tbaa !6
  br label %5551

5533:                                             ; preds = %5506, %5523
  %5534 = phi i32 [ %5518, %5523 ], [ %5507, %5506 ]
  %5535 = phi ptr [ %5517, %5523 ], [ %4, %5506 ]
  %5536 = phi i64 [ %5516, %5523 ], [ 0, %5506 ]
  %5537 = add nsw i32 %5534, 1
  store i32 %5537, ptr %5535, align 4, !tbaa !6
  %5538 = getelementptr inbounds i32, ptr %7, i64 %5536
  %5539 = load i32, ptr %5538, align 4, !tbaa !6
  %5540 = getelementptr inbounds i32, ptr %6, i64 %5536
  br label %5551

5541:                                             ; preds = %5515
  %5542 = icmp eq i32 %5518, %5521
  br i1 %5542, label %5543, label %5549

5543:                                             ; preds = %5541
  store i32 0, ptr %5517, align 4, !tbaa !6
  %5544 = getelementptr inbounds i32, ptr %8, i64 %5516
  %5545 = load i32, ptr %5544, align 4, !tbaa !6
  %5546 = getelementptr inbounds i32, ptr %6, i64 %5516
  store i32 %5545, ptr %5546, align 4, !tbaa !6
  %5547 = add nuw nsw i64 %5516, 1
  %5548 = icmp eq i64 %5547, %5273
  br i1 %5548, label %5556, label %5515, !llvm.loop !203

5549:                                             ; preds = %5511, %5541
  %5550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5565

5551:                                             ; preds = %5524, %5533
  %5552 = phi ptr [ %5540, %5533 ], [ %5517, %5524 ]
  %5553 = phi i32 [ %5539, %5533 ], [ 1, %5524 ]
  %5554 = load i32, ptr %5552, align 4, !tbaa !6
  %5555 = add nsw i32 %5554, %5553
  store i32 %5555, ptr %5552, align 4, !tbaa !6
  br label %5556

5556:                                             ; preds = %5543, %5551, %5513, %5497
  %5557 = icmp eq i32 %5505, %5
  br i1 %5557, label %5560, label %5419, !llvm.loop !204

5558:                                             ; preds = %4959
  %5559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 97, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5560

5560:                                             ; preds = %5556, %5417, %5260, %5121, %4944, %4805, %4648, %4507, %4328, %4189, %4032, %3893, %3716, %3577, %3420, %3279, %3100, %2961, %2804, %2664, %2485, %2346, %2189, %2047, %1868, %1727, %1568, %1424, %1243, %1104, %947, %807, %628, %490, %334, %196, %5267, %5276, %4965, %4974, %4655, %4664, %4349, %4358, %4039, %4048, %3737, %3746, %3427, %3436, %3121, %3130, %2811, %2820, %2506, %2515, %2196, %2205, %1889, %1898, %1575, %1584, %1266, %1275, %954, %963, %649, %658, %341, %350, %38, %47, %4954, %5558, %4338, %4946, %3726, %4330, %3110, %3718, %2495, %3102, %1878, %2487, %1253, %1870, %638, %1245, %28, %630, %18
  %5561 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %1878 ], [ 0.000000e+00, %3102 ], [ 0.000000e+00, %2495 ], [ 0.000000e+00, %3718 ], [ 0.000000e+00, %3110 ], [ 0.000000e+00, %4330 ], [ 0.000000e+00, %3726 ], [ 0.000000e+00, %4946 ], [ 0.000000e+00, %4338 ], [ 0.000000e+00, %5558 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %658 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %963 ], [ 0.000000e+00, %954 ], [ 0.000000e+00, %1275 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %1584 ], [ 0.000000e+00, %1575 ], [ 0.000000e+00, %1898 ], [ 0.000000e+00, %1889 ], [ 0.000000e+00, %2205 ], [ 0.000000e+00, %2196 ], [ 0.000000e+00, %2515 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2820 ], [ 0.000000e+00, %2811 ], [ 0.000000e+00, %3130 ], [ 0.000000e+00, %3121 ], [ 0.000000e+00, %3436 ], [ 0.000000e+00, %3427 ], [ 0.000000e+00, %3746 ], [ 0.000000e+00, %3737 ], [ 0.000000e+00, %4048 ], [ 0.000000e+00, %4039 ], [ 0.000000e+00, %4358 ], [ 0.000000e+00, %4349 ], [ 0.000000e+00, %4664 ], [ 0.000000e+00, %4655 ], [ 0.000000e+00, %4974 ], [ 0.000000e+00, %4965 ], [ 0.000000e+00, %5276 ], [ 0.000000e+00, %5267 ], [ %147, %196 ], [ 0.000000e+00, %334 ], [ %441, %490 ], [ 0.000000e+00, %628 ], [ %758, %807 ], [ 0.000000e+00, %947 ], [ %1055, %1104 ], [ 0.000000e+00, %1243 ], [ %1375, %1424 ], [ 0.000000e+00, %1568 ], [ %1678, %1727 ], [ 0.000000e+00, %1868 ], [ %1998, %2047 ], [ 0.000000e+00, %2189 ], [ %2297, %2346 ], [ 0.000000e+00, %2485 ], [ %2615, %2664 ], [ 0.000000e+00, %2804 ], [ %2912, %2961 ], [ 0.000000e+00, %3100 ], [ %3230, %3279 ], [ 0.000000e+00, %3420 ], [ %3528, %3577 ], [ 0.000000e+00, %3716 ], [ %3844, %3893 ], [ 0.000000e+00, %4032 ], [ %4140, %4189 ], [ 0.000000e+00, %4328 ], [ %4458, %4507 ], [ 0.000000e+00, %4648 ], [ %4756, %4805 ], [ 0.000000e+00, %4944 ], [ %5072, %5121 ], [ 0.000000e+00, %5260 ], [ %5368, %5417 ], [ 0.000000e+00, %5556 ]
  %5562 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1245 ], [ 1, %638 ], [ 1, %1870 ], [ 1, %1253 ], [ 1, %2487 ], [ 1, %1878 ], [ 1, %3102 ], [ 1, %2495 ], [ 1, %3718 ], [ 1, %3110 ], [ 1, %4330 ], [ 1, %3726 ], [ 1, %4946 ], [ 1, %4338 ], [ 1, %5558 ], [ 1, %4954 ], [ 1, %47 ], [ 1, %38 ], [ 1, %350 ], [ 1, %341 ], [ 1, %658 ], [ 1, %649 ], [ 1, %963 ], [ 1, %954 ], [ 1, %1275 ], [ 1, %1266 ], [ 1, %1584 ], [ 1, %1575 ], [ 1, %1898 ], [ 1, %1889 ], [ 1, %2205 ], [ 1, %2196 ], [ 1, %2515 ], [ 1, %2506 ], [ 1, %2820 ], [ 1, %2811 ], [ 1, %3130 ], [ 1, %3121 ], [ 1, %3436 ], [ 1, %3427 ], [ 1, %3746 ], [ 1, %3737 ], [ 1, %4048 ], [ 1, %4039 ], [ 1, %4358 ], [ 1, %4349 ], [ 1, %4664 ], [ 1, %4655 ], [ 1, %4974 ], [ 1, %4965 ], [ 1, %5276 ], [ 1, %5267 ], [ %54, %196 ], [ %45, %334 ], [ %357, %490 ], [ %348, %628 ], [ %665, %807 ], [ %656, %947 ], [ %970, %1104 ], [ %961, %1243 ], [ %1282, %1424 ], [ %1273, %1568 ], [ %1591, %1727 ], [ %1582, %1868 ], [ %1905, %2047 ], [ %1896, %2189 ], [ %2212, %2346 ], [ %2203, %2485 ], [ %2522, %2664 ], [ %2513, %2804 ], [ %2827, %2961 ], [ %2818, %3100 ], [ %3137, %3279 ], [ %3128, %3420 ], [ %3443, %3577 ], [ %3434, %3716 ], [ %3753, %3893 ], [ %3744, %4032 ], [ %4055, %4189 ], [ %4046, %4328 ], [ %4365, %4507 ], [ %4356, %4648 ], [ %4671, %4805 ], [ %4662, %4944 ], [ %4981, %5121 ], [ %4972, %5260 ], [ %5283, %5417 ], [ %5274, %5556 ]
  %5563 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5562, ptr noundef nonnull @.str.5) #3
  %5564 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5561, ptr noundef nonnull @.str.6) #3
  br label %5565

5565:                                             ; preds = %5114, %5199, %5253, %5410, %5495, %5549, %4500, %4585, %4641, %4798, %4883, %4937, %3886, %3971, %4025, %4182, %4267, %4321, %3272, %3357, %3413, %3570, %3655, %3709, %2657, %2741, %2797, %2954, %3038, %3093, %2040, %2125, %2182, %2339, %2424, %2478, %1417, %1501, %1561, %1720, %1804, %1861, %800, %884, %940, %1097, %1181, %1236, %189, %273, %327, %483, %567, %621, %5560
  %5566 = phi i32 [ 0, %5560 ], [ -1, %621 ], [ -1, %567 ], [ -1, %483 ], [ -1, %327 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1236 ], [ -1, %1181 ], [ -1, %1097 ], [ -1, %940 ], [ -1, %884 ], [ -1, %800 ], [ -1, %1861 ], [ -1, %1804 ], [ -1, %1720 ], [ -1, %1561 ], [ -1, %1501 ], [ -1, %1417 ], [ -1, %2478 ], [ -1, %2424 ], [ -1, %2339 ], [ -1, %2182 ], [ -1, %2125 ], [ -1, %2040 ], [ -1, %3093 ], [ -1, %3038 ], [ -1, %2954 ], [ -1, %2797 ], [ -1, %2741 ], [ -1, %2657 ], [ -1, %3709 ], [ -1, %3655 ], [ -1, %3570 ], [ -1, %3413 ], [ -1, %3357 ], [ -1, %3272 ], [ -1, %4321 ], [ -1, %4267 ], [ -1, %4182 ], [ -1, %4025 ], [ -1, %3971 ], [ -1, %3886 ], [ -1, %4937 ], [ -1, %4883 ], [ -1, %4798 ], [ -1, %4641 ], [ -1, %4585 ], [ -1, %4500 ], [ -1, %5549 ], [ -1, %5495 ], [ -1, %5410 ], [ -1, %5253 ], [ -1, %5199 ], [ -1, %5114 ]
  ret i32 %5566
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5686 [
    i32 101, label %22
    i32 102, label %640
    i32 103, label %1265
    i32 104, label %1906
    i32 105, label %2547
    i32 106, label %3172
    i32 107, label %3800
    i32 108, label %4424
    i32 109, label %5054
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !6
  %30 = mul i32 %29, %29
  %31 = mul i32 %30, %29
  %32 = trunc i32 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5686

33:                                               ; preds = %22
  switch i32 %1, label %638 [
    i32 1, label %34
    i32 0, label %342
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5686

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %5686

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !205

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !206

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !207

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i32, ptr %24, i64 %132
  %136 = load i32, ptr %135, align 4, !tbaa !6
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i32 %136, 255
  %140 = sitofp i32 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %138
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !208

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %5686, label %57, !llvm.loop !209

200:                                              ; preds = %40, %340
  %201 = phi i32 [ 0, %40 ], [ %289, %340 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !210

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !211

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !212

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = uitofp i8 %278 to double
  %280 = sext i32 %273 to i64
  %281 = getelementptr inbounds i32, ptr %24, i64 %280
  %282 = load i32, ptr %281, align 4, !tbaa !6
  %283 = and i32 %282, 255
  %284 = sitofp i32 %283 to double
  %285 = fmul fast double %284, %284
  %286 = fmul fast double %285, %284
  %287 = fadd fast double %286, %279
  %288 = fptoui double %287 to i8
  store i8 %288, ptr %26, align 1, !tbaa !12
  %289 = add nuw nsw i32 %201, 1
  br i1 %42, label %290, label %340

290:                                              ; preds = %277
  %291 = load i32, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %12, align 4, !tbaa !6
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %317, label %295

295:                                              ; preds = %290
  %296 = icmp eq i32 %291, %293
  br i1 %296, label %297, label %333

297:                                              ; preds = %295
  store i32 0, ptr %4, align 4, !tbaa !6
  %298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %298, ptr %6, align 4, !tbaa !6
  br i1 %47, label %340, label %299

299:                                              ; preds = %297, %327
  %300 = phi i64 [ %331, %327 ], [ 1, %297 ]
  %301 = getelementptr inbounds i32, ptr %4, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !6
  %303 = getelementptr inbounds i32, ptr %12, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = add nsw i32 %304, -1
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %307, label %325

307:                                              ; preds = %299
  br i1 %294, label %317, label %308

308:                                              ; preds = %307
  %309 = shl i64 %300, 32
  %310 = add i64 %309, -4294967296
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i32, ptr %7, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %300
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = add nsw i32 %315, %313
  store i32 %316, ptr %314, align 4, !tbaa !6
  br label %335

317:                                              ; preds = %290, %307
  %318 = phi i32 [ %302, %307 ], [ %291, %290 ]
  %319 = phi ptr [ %301, %307 ], [ %4, %290 ]
  %320 = phi i64 [ %300, %307 ], [ 0, %290 ]
  %321 = add nsw i32 %318, 1
  store i32 %321, ptr %319, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %7, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %320
  br label %335

325:                                              ; preds = %299
  %326 = icmp eq i32 %302, %305
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  store i32 0, ptr %301, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %8, i64 %300
  %329 = load i32, ptr %328, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %6, i64 %300
  store i32 %329, ptr %330, align 4, !tbaa !6
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %45
  br i1 %332, label %340, label %299, !llvm.loop !213

333:                                              ; preds = %295, %325
  %334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

335:                                              ; preds = %308, %317
  %336 = phi ptr [ %324, %317 ], [ %301, %308 ]
  %337 = phi i32 [ %323, %317 ], [ 1, %308 ]
  %338 = load i32, ptr %336, align 4, !tbaa !6
  %339 = add nsw i32 %338, %337
  store i32 %339, ptr %336, align 4, !tbaa !6
  br label %340

340:                                              ; preds = %327, %335, %297, %277
  %341 = icmp eq i32 %289, %5
  br i1 %341, label %5686, label %200, !llvm.loop !214

342:                                              ; preds = %33
  %343 = getelementptr inbounds i32, ptr %3, i64 %19
  %344 = load i32, ptr %343, align 4, !tbaa !6
  %345 = icmp eq i32 %344, 0
  %346 = icmp sgt i32 %5, 0
  br i1 %345, label %356, label %347

347:                                              ; preds = %342
  br i1 %346, label %348, label %5686

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %499

356:                                              ; preds = %342
  br i1 %346, label %357, label %5686

357:                                              ; preds = %356
  %358 = icmp sgt i32 %13, 1
  %359 = icmp sgt i32 %13, 0
  %360 = add i32 %13, -2
  %361 = zext i32 %360 to i64
  %362 = zext i32 %13 to i64
  %363 = add nuw i32 %5, 1
  %364 = icmp eq i32 %13, 1
  br label %365

365:                                              ; preds = %357, %497
  %366 = phi i32 [ 0, %357 ], [ %449, %497 ]
  %367 = phi double [ 0.000000e+00, %357 ], [ %448, %497 ]
  %368 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %358, label %369, label %438

369:                                              ; preds = %365, %428
  %370 = phi i32 [ %437, %428 ], [ 0, %365 ]
  %371 = phi i64 [ %379, %428 ], [ %362, %365 ]
  %372 = phi i64 [ %436, %428 ], [ %361, %365 ]
  %373 = phi i32 [ %434, %428 ], [ %368, %365 ]
  %374 = sub i32 %360, %370
  %375 = tail call i32 @llvm.smin.i32(i32 %374, i32 0)
  %376 = sub i32 %374, %375
  %377 = zext i32 %376 to i64
  %378 = add nuw nsw i64 %377, 1
  %379 = add nsw i64 %371, -1
  %380 = icmp ult i32 %376, 31
  br i1 %380, label %416, label %381

381:                                              ; preds = %369
  %382 = and i64 %378, 8589934560
  %383 = sub i64 %372, %382
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i64 [ 0, %381 ], [ %408, %384 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %404, %384 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %405, %384 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %406, %384 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %407, %384 ]
  %390 = sub i64 %372, %385
  %391 = getelementptr inbounds i32, ptr %9, i64 %390
  %392 = getelementptr inbounds i32, ptr %391, i64 -7
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %391, i64 -15
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %391, i64 -23
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i32, ptr %391, i64 -31
  %402 = load <8 x i32>, ptr %401, align 4, !tbaa !6
  %403 = shufflevector <8 x i32> %402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %404 = mul <8 x i32> %394, %386
  %405 = mul <8 x i32> %397, %387
  %406 = mul <8 x i32> %400, %388
  %407 = mul <8 x i32> %403, %389
  %408 = add nuw i64 %385, 32
  %409 = icmp eq i64 %408, %382
  br i1 %409, label %410, label %384, !llvm.loop !215

410:                                              ; preds = %384
  %411 = mul <8 x i32> %405, %404
  %412 = mul <8 x i32> %406, %411
  %413 = mul <8 x i32> %407, %412
  %414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %413)
  %415 = icmp eq i64 %378, %382
  br i1 %415, label %428, label %416

416:                                              ; preds = %369, %410
  %417 = phi i64 [ %372, %369 ], [ %383, %410 ]
  %418 = phi i32 [ 1, %369 ], [ %414, %410 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %425, %419 ], [ %417, %416 ]
  %421 = phi i32 [ %424, %419 ], [ %418, %416 ]
  %422 = getelementptr inbounds i32, ptr %9, i64 %420
  %423 = load i32, ptr %422, align 4, !tbaa !6
  %424 = mul nsw i32 %423, %421
  %425 = add nsw i64 %420, -1
  %426 = trunc i64 %420 to i32
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %419, label %428, !llvm.loop !216

428:                                              ; preds = %419, %410
  %429 = phi i32 [ %414, %410 ], [ %424, %419 ]
  %430 = and i64 %379, 4294967295
  %431 = getelementptr inbounds i32, ptr %6, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !6
  %433 = mul nsw i32 %432, %429
  %434 = add nsw i32 %433, %373
  %435 = icmp sgt i64 %371, 2
  %436 = add nsw i64 %372, -1
  %437 = add i32 %370, 1
  br i1 %435, label %369, label %438, !llvm.loop !217

438:                                              ; preds = %428, %365
  %439 = phi i32 [ %368, %365 ], [ %434, %428 ]
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = sext i32 %439 to i64
  %442 = getelementptr inbounds i32, ptr %24, i64 %441
  %443 = load i32, ptr %442, align 4, !tbaa !6
  %444 = mul i32 %443, %443
  %445 = mul i32 %444, %443
  %446 = trunc i32 %445 to i8
  %447 = add i8 %440, %446
  store i8 %447, ptr %26, align 1, !tbaa !12
  %448 = fadd fast double %367, 1.000000e+00
  %449 = add nuw nsw i32 %366, 1
  br i1 %359, label %450, label %497

450:                                              ; preds = %438
  %451 = load i32, ptr %4, align 4, !tbaa !6
  %452 = load i32, ptr %12, align 4, !tbaa !6
  %453 = add nsw i32 %452, -1
  %454 = icmp slt i32 %451, %453
  br i1 %454, label %474, label %455

455:                                              ; preds = %450
  %456 = icmp eq i32 %451, %453
  br i1 %456, label %457, label %490

457:                                              ; preds = %455
  store i32 0, ptr %4, align 4, !tbaa !6
  %458 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %458, ptr %6, align 4, !tbaa !6
  br i1 %364, label %497, label %459

459:                                              ; preds = %457, %484
  %460 = phi i64 [ %488, %484 ], [ 1, %457 ]
  %461 = getelementptr inbounds i32, ptr %4, i64 %460
  %462 = load i32, ptr %461, align 4, !tbaa !6
  %463 = getelementptr inbounds i32, ptr %12, i64 %460
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = add nsw i32 %464, -1
  %466 = icmp slt i32 %462, %465
  br i1 %466, label %467, label %482

467:                                              ; preds = %459
  br i1 %454, label %474, label %468

468:                                              ; preds = %467
  %469 = getelementptr inbounds i32, ptr %7, i64 %460
  %470 = load i32, ptr %469, align 4, !tbaa !6
  %471 = getelementptr inbounds i32, ptr %6, i64 %460
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = add nsw i32 %472, %470
  store i32 %473, ptr %471, align 4, !tbaa !6
  br label %492

474:                                              ; preds = %450, %467
  %475 = phi i32 [ %462, %467 ], [ %451, %450 ]
  %476 = phi ptr [ %461, %467 ], [ %4, %450 ]
  %477 = phi i64 [ %460, %467 ], [ 0, %450 ]
  %478 = add nsw i32 %475, 1
  store i32 %478, ptr %476, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %7, i64 %477
  %480 = load i32, ptr %479, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %6, i64 %477
  br label %492

482:                                              ; preds = %459
  %483 = icmp eq i32 %462, %465
  br i1 %483, label %484, label %490

484:                                              ; preds = %482
  store i32 0, ptr %461, align 4, !tbaa !6
  %485 = getelementptr inbounds i32, ptr %8, i64 %460
  %486 = load i32, ptr %485, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %6, i64 %460
  store i32 %486, ptr %487, align 4, !tbaa !6
  %488 = add nuw nsw i64 %460, 1
  %489 = icmp eq i64 %488, %362
  br i1 %489, label %497, label %459, !llvm.loop !218

490:                                              ; preds = %455, %482
  %491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

492:                                              ; preds = %468, %474
  %493 = phi ptr [ %481, %474 ], [ %461, %468 ]
  %494 = phi i32 [ %480, %474 ], [ 1, %468 ]
  %495 = load i32, ptr %493, align 4, !tbaa !6
  %496 = add nsw i32 %495, %494
  store i32 %496, ptr %493, align 4, !tbaa !6
  br label %497

497:                                              ; preds = %484, %492, %457, %438
  %498 = icmp eq i32 %449, %5
  br i1 %498, label %5686, label %365, !llvm.loop !219

499:                                              ; preds = %348, %636
  %500 = phi i32 [ 0, %348 ], [ %585, %636 ]
  %501 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %349, label %502, label %571

502:                                              ; preds = %499, %561
  %503 = phi i32 [ %570, %561 ], [ 0, %499 ]
  %504 = phi i64 [ %512, %561 ], [ %353, %499 ]
  %505 = phi i64 [ %569, %561 ], [ %352, %499 ]
  %506 = phi i32 [ %567, %561 ], [ %501, %499 ]
  %507 = sub i32 %351, %503
  %508 = tail call i32 @llvm.smin.i32(i32 %507, i32 0)
  %509 = sub i32 %507, %508
  %510 = zext i32 %509 to i64
  %511 = add nuw nsw i64 %510, 1
  %512 = add nsw i64 %504, -1
  %513 = icmp ult i32 %509, 31
  br i1 %513, label %549, label %514

514:                                              ; preds = %502
  %515 = and i64 %511, 8589934560
  %516 = sub i64 %505, %515
  br label %517

517:                                              ; preds = %517, %514
  %518 = phi i64 [ 0, %514 ], [ %541, %517 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %537, %517 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %538, %517 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %539, %517 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %540, %517 ]
  %523 = sub i64 %505, %518
  %524 = getelementptr inbounds i32, ptr %11, i64 %523
  %525 = getelementptr inbounds i32, ptr %524, i64 -7
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %524, i64 -15
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %524, i64 -23
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = getelementptr inbounds i32, ptr %524, i64 -31
  %535 = load <8 x i32>, ptr %534, align 4, !tbaa !6
  %536 = shufflevector <8 x i32> %535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %537 = mul <8 x i32> %527, %519
  %538 = mul <8 x i32> %530, %520
  %539 = mul <8 x i32> %533, %521
  %540 = mul <8 x i32> %536, %522
  %541 = add nuw i64 %518, 32
  %542 = icmp eq i64 %541, %515
  br i1 %542, label %543, label %517, !llvm.loop !220

543:                                              ; preds = %517
  %544 = mul <8 x i32> %538, %537
  %545 = mul <8 x i32> %539, %544
  %546 = mul <8 x i32> %540, %545
  %547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %546)
  %548 = icmp eq i64 %511, %515
  br i1 %548, label %561, label %549

549:                                              ; preds = %502, %543
  %550 = phi i64 [ %505, %502 ], [ %516, %543 ]
  %551 = phi i32 [ 1, %502 ], [ %547, %543 ]
  br label %552

552:                                              ; preds = %549, %552
  %553 = phi i64 [ %558, %552 ], [ %550, %549 ]
  %554 = phi i32 [ %557, %552 ], [ %551, %549 ]
  %555 = getelementptr inbounds i32, ptr %11, i64 %553
  %556 = load i32, ptr %555, align 4, !tbaa !6
  %557 = mul nsw i32 %556, %554
  %558 = add nsw i64 %553, -1
  %559 = trunc i64 %553 to i32
  %560 = icmp sgt i32 %559, 0
  br i1 %560, label %552, label %561, !llvm.loop !221

561:                                              ; preds = %552, %543
  %562 = phi i32 [ %547, %543 ], [ %557, %552 ]
  %563 = and i64 %512, 4294967295
  %564 = getelementptr inbounds i32, ptr %6, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !6
  %566 = mul nsw i32 %565, %562
  %567 = add nsw i32 %566, %506
  %568 = icmp sgt i64 %504, 2
  %569 = add nsw i64 %505, -1
  %570 = add i32 %503, 1
  br i1 %568, label %502, label %571, !llvm.loop !222

571:                                              ; preds = %561, %499
  %572 = phi i32 [ %501, %499 ], [ %567, %561 ]
  %573 = icmp slt i32 %572, %5
  br i1 %573, label %576, label %574

574:                                              ; preds = %571
  %575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

576:                                              ; preds = %571
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = sext i32 %572 to i64
  %579 = getelementptr inbounds i32, ptr %24, i64 %578
  %580 = load i32, ptr %579, align 4, !tbaa !6
  %581 = mul i32 %580, %580
  %582 = mul i32 %581, %580
  %583 = trunc i32 %582 to i8
  %584 = add i8 %577, %583
  store i8 %584, ptr %26, align 1, !tbaa !12
  %585 = add nuw nsw i32 %500, 1
  br i1 %350, label %586, label %636

586:                                              ; preds = %576
  %587 = load i32, ptr %4, align 4, !tbaa !6
  %588 = load i32, ptr %12, align 4, !tbaa !6
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %587, %589
  br i1 %590, label %613, label %591

591:                                              ; preds = %586
  %592 = icmp eq i32 %587, %589
  br i1 %592, label %593, label %629

593:                                              ; preds = %591
  store i32 0, ptr %4, align 4, !tbaa !6
  %594 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %594, ptr %6, align 4, !tbaa !6
  br i1 %355, label %636, label %595

595:                                              ; preds = %593, %623
  %596 = phi i64 [ %627, %623 ], [ 1, %593 ]
  %597 = getelementptr inbounds i32, ptr %4, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !6
  %599 = getelementptr inbounds i32, ptr %12, i64 %596
  %600 = load i32, ptr %599, align 4, !tbaa !6
  %601 = add nsw i32 %600, -1
  %602 = icmp slt i32 %598, %601
  br i1 %602, label %603, label %621

603:                                              ; preds = %595
  br i1 %590, label %613, label %604

604:                                              ; preds = %603
  %605 = shl i64 %596, 32
  %606 = add i64 %605, -4294967296
  %607 = ashr exact i64 %606, 32
  %608 = getelementptr inbounds i32, ptr %7, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %6, i64 %596
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, %609
  store i32 %612, ptr %610, align 4, !tbaa !6
  br label %631

613:                                              ; preds = %586, %603
  %614 = phi i32 [ %598, %603 ], [ %587, %586 ]
  %615 = phi ptr [ %597, %603 ], [ %4, %586 ]
  %616 = phi i64 [ %596, %603 ], [ 0, %586 ]
  %617 = add nsw i32 %614, 1
  store i32 %617, ptr %615, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %7, i64 %616
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %616
  br label %631

621:                                              ; preds = %595
  %622 = icmp eq i32 %598, %601
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  store i32 0, ptr %597, align 4, !tbaa !6
  %624 = getelementptr inbounds i32, ptr %8, i64 %596
  %625 = load i32, ptr %624, align 4, !tbaa !6
  %626 = getelementptr inbounds i32, ptr %6, i64 %596
  store i32 %625, ptr %626, align 4, !tbaa !6
  %627 = add nuw nsw i64 %596, 1
  %628 = icmp eq i64 %627, %353
  br i1 %628, label %636, label %595, !llvm.loop !223

629:                                              ; preds = %591, %621
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

631:                                              ; preds = %604, %613
  %632 = phi ptr [ %620, %613 ], [ %597, %604 ]
  %633 = phi i32 [ %619, %613 ], [ 1, %604 ]
  %634 = load i32, ptr %632, align 4, !tbaa !6
  %635 = add nsw i32 %634, %633
  store i32 %635, ptr %632, align 4, !tbaa !6
  br label %636

636:                                              ; preds = %623, %631, %593, %576
  %637 = icmp eq i32 %585, %5
  br i1 %637, label %5686, label %499, !llvm.loop !224

638:                                              ; preds = %33
  %639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 338, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

640:                                              ; preds = %18
  %641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %642 = load ptr, ptr %641, align 8, !tbaa !10
  %643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !10
  store i32 0, ptr %644, align 4, !tbaa !6
  %645 = icmp eq i32 %13, 0
  br i1 %645, label %646, label %653

646:                                              ; preds = %640
  %647 = load i32, ptr %642, align 4, !tbaa !6
  %648 = icmp slt i32 %647, 0
  %649 = mul nsw i32 %647, %647
  %650 = sub nsw i32 0, %649
  %651 = select i1 %648, i32 %650, i32 %649
  %652 = mul i32 %651, %647
  store i32 %652, ptr %644, align 4, !tbaa !6
  br label %5686

653:                                              ; preds = %640
  switch i32 %1, label %1263 [
    i32 1, label %654
    i32 0, label %963
  ]

654:                                              ; preds = %653
  %655 = getelementptr inbounds i32, ptr %3, i64 %19
  %656 = load i32, ptr %655, align 4, !tbaa !6
  %657 = icmp eq i32 %656, 0
  %658 = icmp sgt i32 %5, 0
  br i1 %657, label %668, label %659

659:                                              ; preds = %654
  br i1 %658, label %660, label %5686

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %819

668:                                              ; preds = %654
  br i1 %658, label %669, label %5686

669:                                              ; preds = %668
  %670 = icmp sgt i32 %13, 1
  %671 = icmp sgt i32 %13, 0
  %672 = add i32 %13, -2
  %673 = zext i32 %672 to i64
  %674 = zext i32 %13 to i64
  %675 = add nuw i32 %5, 1
  %676 = icmp eq i32 %13, 1
  br label %677

677:                                              ; preds = %669, %817
  %678 = phi i32 [ 0, %669 ], [ %769, %817 ]
  %679 = phi double [ 0.000000e+00, %669 ], [ %768, %817 ]
  %680 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %670, label %681, label %750

681:                                              ; preds = %677, %740
  %682 = phi i32 [ %749, %740 ], [ 0, %677 ]
  %683 = phi i64 [ %691, %740 ], [ %674, %677 ]
  %684 = phi i64 [ %748, %740 ], [ %673, %677 ]
  %685 = phi i32 [ %746, %740 ], [ %680, %677 ]
  %686 = sub i32 %672, %682
  %687 = tail call i32 @llvm.smin.i32(i32 %686, i32 0)
  %688 = sub i32 %686, %687
  %689 = zext i32 %688 to i64
  %690 = add nuw nsw i64 %689, 1
  %691 = add nsw i64 %683, -1
  %692 = icmp ult i32 %688, 31
  br i1 %692, label %728, label %693

693:                                              ; preds = %681
  %694 = and i64 %690, 8589934560
  %695 = sub i64 %684, %694
  br label %696

696:                                              ; preds = %696, %693
  %697 = phi i64 [ 0, %693 ], [ %720, %696 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %716, %696 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %717, %696 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %718, %696 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %719, %696 ]
  %702 = sub i64 %684, %697
  %703 = getelementptr inbounds i32, ptr %9, i64 %702
  %704 = getelementptr inbounds i32, ptr %703, i64 -7
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %703, i64 -15
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %703, i64 -23
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !6
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = getelementptr inbounds i32, ptr %703, i64 -31
  %714 = load <8 x i32>, ptr %713, align 4, !tbaa !6
  %715 = shufflevector <8 x i32> %714, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %716 = mul <8 x i32> %706, %698
  %717 = mul <8 x i32> %709, %699
  %718 = mul <8 x i32> %712, %700
  %719 = mul <8 x i32> %715, %701
  %720 = add nuw i64 %697, 32
  %721 = icmp eq i64 %720, %694
  br i1 %721, label %722, label %696, !llvm.loop !225

722:                                              ; preds = %696
  %723 = mul <8 x i32> %717, %716
  %724 = mul <8 x i32> %718, %723
  %725 = mul <8 x i32> %719, %724
  %726 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %725)
  %727 = icmp eq i64 %690, %694
  br i1 %727, label %740, label %728

728:                                              ; preds = %681, %722
  %729 = phi i64 [ %684, %681 ], [ %695, %722 ]
  %730 = phi i32 [ 1, %681 ], [ %726, %722 ]
  br label %731

731:                                              ; preds = %728, %731
  %732 = phi i64 [ %737, %731 ], [ %729, %728 ]
  %733 = phi i32 [ %736, %731 ], [ %730, %728 ]
  %734 = getelementptr inbounds i32, ptr %9, i64 %732
  %735 = load i32, ptr %734, align 4, !tbaa !6
  %736 = mul nsw i32 %735, %733
  %737 = add nsw i64 %732, -1
  %738 = trunc i64 %732 to i32
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %731, label %740, !llvm.loop !226

740:                                              ; preds = %731, %722
  %741 = phi i32 [ %726, %722 ], [ %736, %731 ]
  %742 = and i64 %691, 4294967295
  %743 = getelementptr inbounds i32, ptr %6, i64 %742
  %744 = load i32, ptr %743, align 4, !tbaa !6
  %745 = mul nsw i32 %744, %741
  %746 = add nsw i32 %745, %685
  %747 = icmp sgt i64 %683, 2
  %748 = add nsw i64 %684, -1
  %749 = add i32 %682, 1
  br i1 %747, label %681, label %750, !llvm.loop !227

750:                                              ; preds = %740, %677
  %751 = phi i32 [ %680, %677 ], [ %746, %740 ]
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds double, ptr %2, i64 %752
  %754 = load double, ptr %753, align 8, !tbaa !19
  %755 = getelementptr inbounds i32, ptr %642, i64 %752
  %756 = load i32, ptr %755, align 4, !tbaa !6
  %757 = load i32, ptr %644, align 4, !tbaa !6
  %758 = sitofp i32 %757 to double
  %759 = sitofp i32 %756 to double
  %760 = fmul fast double %754, %759
  %761 = fcmp fast olt double %760, 0.000000e+00
  %762 = fneg fast double %760
  %763 = select nnan ninf i1 %761, double %762, double %760
  %764 = fmul fast double %760, %760
  %765 = fmul fast double %764, %763
  %766 = fadd fast double %765, %758
  %767 = fptosi double %766 to i32
  store i32 %767, ptr %644, align 4, !tbaa !6
  %768 = fadd fast double %754, %679
  %769 = add nuw nsw i32 %678, 1
  br i1 %671, label %770, label %817

770:                                              ; preds = %750
  %771 = load i32, ptr %4, align 4, !tbaa !6
  %772 = load i32, ptr %12, align 4, !tbaa !6
  %773 = add nsw i32 %772, -1
  %774 = icmp slt i32 %771, %773
  br i1 %774, label %794, label %775

775:                                              ; preds = %770
  %776 = icmp eq i32 %771, %773
  br i1 %776, label %777, label %810

777:                                              ; preds = %775
  store i32 0, ptr %4, align 4, !tbaa !6
  %778 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %778, ptr %6, align 4, !tbaa !6
  br i1 %676, label %817, label %779

779:                                              ; preds = %777, %804
  %780 = phi i64 [ %808, %804 ], [ 1, %777 ]
  %781 = getelementptr inbounds i32, ptr %4, i64 %780
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %12, i64 %780
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, -1
  %786 = icmp slt i32 %782, %785
  br i1 %786, label %787, label %802

787:                                              ; preds = %779
  br i1 %774, label %794, label %788

788:                                              ; preds = %787
  %789 = getelementptr inbounds i32, ptr %7, i64 %780
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %6, i64 %780
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = add nsw i32 %792, %790
  store i32 %793, ptr %791, align 4, !tbaa !6
  br label %812

794:                                              ; preds = %770, %787
  %795 = phi i32 [ %782, %787 ], [ %771, %770 ]
  %796 = phi ptr [ %781, %787 ], [ %4, %770 ]
  %797 = phi i64 [ %780, %787 ], [ 0, %770 ]
  %798 = add nsw i32 %795, 1
  store i32 %798, ptr %796, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %7, i64 %797
  %800 = load i32, ptr %799, align 4, !tbaa !6
  %801 = getelementptr inbounds i32, ptr %6, i64 %797
  br label %812

802:                                              ; preds = %779
  %803 = icmp eq i32 %782, %785
  br i1 %803, label %804, label %810

804:                                              ; preds = %802
  store i32 0, ptr %781, align 4, !tbaa !6
  %805 = getelementptr inbounds i32, ptr %8, i64 %780
  %806 = load i32, ptr %805, align 4, !tbaa !6
  %807 = getelementptr inbounds i32, ptr %6, i64 %780
  store i32 %806, ptr %807, align 4, !tbaa !6
  %808 = add nuw nsw i64 %780, 1
  %809 = icmp eq i64 %808, %674
  br i1 %809, label %817, label %779, !llvm.loop !228

810:                                              ; preds = %775, %802
  %811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

812:                                              ; preds = %788, %794
  %813 = phi ptr [ %801, %794 ], [ %781, %788 ]
  %814 = phi i32 [ %800, %794 ], [ 1, %788 ]
  %815 = load i32, ptr %813, align 4, !tbaa !6
  %816 = add nsw i32 %815, %814
  store i32 %816, ptr %813, align 4, !tbaa !6
  br label %817

817:                                              ; preds = %804, %812, %777, %750
  %818 = icmp eq i32 %769, %5
  br i1 %818, label %5686, label %677, !llvm.loop !229

819:                                              ; preds = %660, %961
  %820 = phi i32 [ 0, %660 ], [ %910, %961 ]
  %821 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %661, label %822, label %891

822:                                              ; preds = %819, %881
  %823 = phi i32 [ %890, %881 ], [ 0, %819 ]
  %824 = phi i64 [ %832, %881 ], [ %665, %819 ]
  %825 = phi i64 [ %889, %881 ], [ %664, %819 ]
  %826 = phi i32 [ %887, %881 ], [ %821, %819 ]
  %827 = sub i32 %663, %823
  %828 = tail call i32 @llvm.smin.i32(i32 %827, i32 0)
  %829 = sub i32 %827, %828
  %830 = zext i32 %829 to i64
  %831 = add nuw nsw i64 %830, 1
  %832 = add nsw i64 %824, -1
  %833 = icmp ult i32 %829, 31
  br i1 %833, label %869, label %834

834:                                              ; preds = %822
  %835 = and i64 %831, 8589934560
  %836 = sub i64 %825, %835
  br label %837

837:                                              ; preds = %837, %834
  %838 = phi i64 [ 0, %834 ], [ %861, %837 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %857, %837 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %858, %837 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %859, %837 ]
  %842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %860, %837 ]
  %843 = sub i64 %825, %838
  %844 = getelementptr inbounds i32, ptr %11, i64 %843
  %845 = getelementptr inbounds i32, ptr %844, i64 -7
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %844, i64 -15
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !6
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %844, i64 -23
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !6
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = getelementptr inbounds i32, ptr %844, i64 -31
  %855 = load <8 x i32>, ptr %854, align 4, !tbaa !6
  %856 = shufflevector <8 x i32> %855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %857 = mul <8 x i32> %847, %839
  %858 = mul <8 x i32> %850, %840
  %859 = mul <8 x i32> %853, %841
  %860 = mul <8 x i32> %856, %842
  %861 = add nuw i64 %838, 32
  %862 = icmp eq i64 %861, %835
  br i1 %862, label %863, label %837, !llvm.loop !230

863:                                              ; preds = %837
  %864 = mul <8 x i32> %858, %857
  %865 = mul <8 x i32> %859, %864
  %866 = mul <8 x i32> %860, %865
  %867 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %866)
  %868 = icmp eq i64 %831, %835
  br i1 %868, label %881, label %869

869:                                              ; preds = %822, %863
  %870 = phi i64 [ %825, %822 ], [ %836, %863 ]
  %871 = phi i32 [ 1, %822 ], [ %867, %863 ]
  br label %872

872:                                              ; preds = %869, %872
  %873 = phi i64 [ %878, %872 ], [ %870, %869 ]
  %874 = phi i32 [ %877, %872 ], [ %871, %869 ]
  %875 = getelementptr inbounds i32, ptr %11, i64 %873
  %876 = load i32, ptr %875, align 4, !tbaa !6
  %877 = mul nsw i32 %876, %874
  %878 = add nsw i64 %873, -1
  %879 = trunc i64 %873 to i32
  %880 = icmp sgt i32 %879, 0
  br i1 %880, label %872, label %881, !llvm.loop !231

881:                                              ; preds = %872, %863
  %882 = phi i32 [ %867, %863 ], [ %877, %872 ]
  %883 = and i64 %832, 4294967295
  %884 = getelementptr inbounds i32, ptr %6, i64 %883
  %885 = load i32, ptr %884, align 4, !tbaa !6
  %886 = mul nsw i32 %885, %882
  %887 = add nsw i32 %886, %826
  %888 = icmp sgt i64 %824, 2
  %889 = add nsw i64 %825, -1
  %890 = add i32 %823, 1
  br i1 %888, label %822, label %891, !llvm.loop !232

891:                                              ; preds = %881, %819
  %892 = phi i32 [ %821, %819 ], [ %887, %881 ]
  %893 = icmp slt i32 %892, %5
  br i1 %893, label %896, label %894

894:                                              ; preds = %891
  %895 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

896:                                              ; preds = %891
  %897 = sext i32 %892 to i64
  %898 = getelementptr inbounds i32, ptr %642, i64 %897
  %899 = load i32, ptr %898, align 4, !tbaa !6
  %900 = load i32, ptr %644, align 4, !tbaa !6
  %901 = sitofp i32 %900 to double
  %902 = sitofp i32 %899 to double
  %903 = icmp slt i32 %899, 0
  %904 = fneg fast double %902
  %905 = select i1 %903, double %904, double %902
  %906 = fmul fast double %902, %902
  %907 = fmul fast double %906, %905
  %908 = fadd fast double %907, %901
  %909 = fptosi double %908 to i32
  store i32 %909, ptr %644, align 4, !tbaa !6
  %910 = add nuw nsw i32 %820, 1
  br i1 %662, label %911, label %961

911:                                              ; preds = %896
  %912 = load i32, ptr %4, align 4, !tbaa !6
  %913 = load i32, ptr %12, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %912, %914
  br i1 %915, label %938, label %916

916:                                              ; preds = %911
  %917 = icmp eq i32 %912, %914
  br i1 %917, label %918, label %954

918:                                              ; preds = %916
  store i32 0, ptr %4, align 4, !tbaa !6
  %919 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %919, ptr %6, align 4, !tbaa !6
  br i1 %667, label %961, label %920

920:                                              ; preds = %918, %948
  %921 = phi i64 [ %952, %948 ], [ 1, %918 ]
  %922 = getelementptr inbounds i32, ptr %4, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %12, i64 %921
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, -1
  %927 = icmp slt i32 %923, %926
  br i1 %927, label %928, label %946

928:                                              ; preds = %920
  br i1 %915, label %938, label %929

929:                                              ; preds = %928
  %930 = shl i64 %921, 32
  %931 = add i64 %930, -4294967296
  %932 = ashr exact i64 %931, 32
  %933 = getelementptr inbounds i32, ptr %7, i64 %932
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %921
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = add nsw i32 %936, %934
  store i32 %937, ptr %935, align 4, !tbaa !6
  br label %956

938:                                              ; preds = %911, %928
  %939 = phi i32 [ %923, %928 ], [ %912, %911 ]
  %940 = phi ptr [ %922, %928 ], [ %4, %911 ]
  %941 = phi i64 [ %921, %928 ], [ 0, %911 ]
  %942 = add nsw i32 %939, 1
  store i32 %942, ptr %940, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %7, i64 %941
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %6, i64 %941
  br label %956

946:                                              ; preds = %920
  %947 = icmp eq i32 %923, %926
  br i1 %947, label %948, label %954

948:                                              ; preds = %946
  store i32 0, ptr %922, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %8, i64 %921
  %950 = load i32, ptr %949, align 4, !tbaa !6
  %951 = getelementptr inbounds i32, ptr %6, i64 %921
  store i32 %950, ptr %951, align 4, !tbaa !6
  %952 = add nuw nsw i64 %921, 1
  %953 = icmp eq i64 %952, %665
  br i1 %953, label %961, label %920, !llvm.loop !233

954:                                              ; preds = %916, %946
  %955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

956:                                              ; preds = %929, %938
  %957 = phi ptr [ %945, %938 ], [ %922, %929 ]
  %958 = phi i32 [ %944, %938 ], [ 1, %929 ]
  %959 = load i32, ptr %957, align 4, !tbaa !6
  %960 = add nsw i32 %959, %958
  store i32 %960, ptr %957, align 4, !tbaa !6
  br label %961

961:                                              ; preds = %948, %956, %918, %896
  %962 = icmp eq i32 %910, %5
  br i1 %962, label %5686, label %819, !llvm.loop !234

963:                                              ; preds = %653
  %964 = getelementptr inbounds i32, ptr %3, i64 %19
  %965 = load i32, ptr %964, align 4, !tbaa !6
  %966 = icmp eq i32 %965, 0
  %967 = icmp sgt i32 %5, 0
  br i1 %966, label %977, label %968

968:                                              ; preds = %963
  br i1 %967, label %969, label %5686

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %1122

977:                                              ; preds = %963
  br i1 %967, label %978, label %5686

978:                                              ; preds = %977
  %979 = icmp sgt i32 %13, 1
  %980 = icmp sgt i32 %13, 0
  %981 = add i32 %13, -2
  %982 = zext i32 %981 to i64
  %983 = zext i32 %13 to i64
  %984 = add nuw i32 %5, 1
  %985 = icmp eq i32 %13, 1
  br label %986

986:                                              ; preds = %978, %1120
  %987 = phi i32 [ 0, %978 ], [ %1072, %1120 ]
  %988 = phi double [ 0.000000e+00, %978 ], [ %1071, %1120 ]
  %989 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %979, label %990, label %1059

990:                                              ; preds = %986, %1049
  %991 = phi i32 [ %1058, %1049 ], [ 0, %986 ]
  %992 = phi i64 [ %1000, %1049 ], [ %983, %986 ]
  %993 = phi i64 [ %1057, %1049 ], [ %982, %986 ]
  %994 = phi i32 [ %1055, %1049 ], [ %989, %986 ]
  %995 = sub i32 %981, %991
  %996 = tail call i32 @llvm.smin.i32(i32 %995, i32 0)
  %997 = sub i32 %995, %996
  %998 = zext i32 %997 to i64
  %999 = add nuw nsw i64 %998, 1
  %1000 = add nsw i64 %992, -1
  %1001 = icmp ult i32 %997, 31
  br i1 %1001, label %1037, label %1002

1002:                                             ; preds = %990
  %1003 = and i64 %999, 8589934560
  %1004 = sub i64 %993, %1003
  br label %1005

1005:                                             ; preds = %1005, %1002
  %1006 = phi i64 [ 0, %1002 ], [ %1029, %1005 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1025, %1005 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1026, %1005 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1027, %1005 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1028, %1005 ]
  %1011 = sub i64 %993, %1006
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1013 = getelementptr inbounds i32, ptr %1012, i64 -7
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = getelementptr inbounds i32, ptr %1012, i64 -15
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !6
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1012, i64 -23
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !6
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1012, i64 -31
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !6
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = mul <8 x i32> %1015, %1007
  %1026 = mul <8 x i32> %1018, %1008
  %1027 = mul <8 x i32> %1021, %1009
  %1028 = mul <8 x i32> %1024, %1010
  %1029 = add nuw i64 %1006, 32
  %1030 = icmp eq i64 %1029, %1003
  br i1 %1030, label %1031, label %1005, !llvm.loop !235

1031:                                             ; preds = %1005
  %1032 = mul <8 x i32> %1026, %1025
  %1033 = mul <8 x i32> %1027, %1032
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1034)
  %1036 = icmp eq i64 %999, %1003
  br i1 %1036, label %1049, label %1037

1037:                                             ; preds = %990, %1031
  %1038 = phi i64 [ %993, %990 ], [ %1004, %1031 ]
  %1039 = phi i32 [ 1, %990 ], [ %1035, %1031 ]
  br label %1040

1040:                                             ; preds = %1037, %1040
  %1041 = phi i64 [ %1046, %1040 ], [ %1038, %1037 ]
  %1042 = phi i32 [ %1045, %1040 ], [ %1039, %1037 ]
  %1043 = getelementptr inbounds i32, ptr %9, i64 %1041
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1042
  %1046 = add nsw i64 %1041, -1
  %1047 = trunc i64 %1041 to i32
  %1048 = icmp sgt i32 %1047, 0
  br i1 %1048, label %1040, label %1049, !llvm.loop !236

1049:                                             ; preds = %1040, %1031
  %1050 = phi i32 [ %1035, %1031 ], [ %1045, %1040 ]
  %1051 = and i64 %1000, 4294967295
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !6
  %1054 = mul nsw i32 %1053, %1050
  %1055 = add nsw i32 %1054, %994
  %1056 = icmp sgt i64 %992, 2
  %1057 = add nsw i64 %993, -1
  %1058 = add i32 %991, 1
  br i1 %1056, label %990, label %1059, !llvm.loop !237

1059:                                             ; preds = %1049, %986
  %1060 = phi i32 [ %989, %986 ], [ %1055, %1049 ]
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds i32, ptr %642, i64 %1061
  %1063 = load i32, ptr %1062, align 4, !tbaa !6
  %1064 = load i32, ptr %644, align 4, !tbaa !6
  %1065 = icmp slt i32 %1063, 0
  %1066 = mul nsw i32 %1063, %1063
  %1067 = sub nsw i32 0, %1066
  %1068 = select i1 %1065, i32 %1067, i32 %1066
  %1069 = mul i32 %1068, %1063
  %1070 = add nsw i32 %1069, %1064
  store i32 %1070, ptr %644, align 4, !tbaa !6
  %1071 = fadd fast double %988, 1.000000e+00
  %1072 = add nuw nsw i32 %987, 1
  br i1 %980, label %1073, label %1120

1073:                                             ; preds = %1059
  %1074 = load i32, ptr %4, align 4, !tbaa !6
  %1075 = load i32, ptr %12, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1074, %1076
  br i1 %1077, label %1097, label %1078

1078:                                             ; preds = %1073
  %1079 = icmp eq i32 %1074, %1076
  br i1 %1079, label %1080, label %1113

1080:                                             ; preds = %1078
  store i32 0, ptr %4, align 4, !tbaa !6
  %1081 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1081, ptr %6, align 4, !tbaa !6
  br i1 %985, label %1120, label %1082

1082:                                             ; preds = %1080, %1107
  %1083 = phi i64 [ %1111, %1107 ], [ 1, %1080 ]
  %1084 = getelementptr inbounds i32, ptr %4, i64 %1083
  %1085 = load i32, ptr %1084, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %12, i64 %1083
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = add nsw i32 %1087, -1
  %1089 = icmp slt i32 %1085, %1088
  br i1 %1089, label %1090, label %1105

1090:                                             ; preds = %1082
  br i1 %1077, label %1097, label %1091

1091:                                             ; preds = %1090
  %1092 = getelementptr inbounds i32, ptr %7, i64 %1083
  %1093 = load i32, ptr %1092, align 4, !tbaa !6
  %1094 = getelementptr inbounds i32, ptr %6, i64 %1083
  %1095 = load i32, ptr %1094, align 4, !tbaa !6
  %1096 = add nsw i32 %1095, %1093
  store i32 %1096, ptr %1094, align 4, !tbaa !6
  br label %1115

1097:                                             ; preds = %1073, %1090
  %1098 = phi i32 [ %1085, %1090 ], [ %1074, %1073 ]
  %1099 = phi ptr [ %1084, %1090 ], [ %4, %1073 ]
  %1100 = phi i64 [ %1083, %1090 ], [ 0, %1073 ]
  %1101 = add nsw i32 %1098, 1
  store i32 %1101, ptr %1099, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %7, i64 %1100
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = getelementptr inbounds i32, ptr %6, i64 %1100
  br label %1115

1105:                                             ; preds = %1082
  %1106 = icmp eq i32 %1085, %1088
  br i1 %1106, label %1107, label %1113

1107:                                             ; preds = %1105
  store i32 0, ptr %1084, align 4, !tbaa !6
  %1108 = getelementptr inbounds i32, ptr %8, i64 %1083
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1083
  store i32 %1109, ptr %1110, align 4, !tbaa !6
  %1111 = add nuw nsw i64 %1083, 1
  %1112 = icmp eq i64 %1111, %983
  br i1 %1112, label %1120, label %1082, !llvm.loop !238

1113:                                             ; preds = %1078, %1105
  %1114 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1115:                                             ; preds = %1091, %1097
  %1116 = phi ptr [ %1104, %1097 ], [ %1084, %1091 ]
  %1117 = phi i32 [ %1103, %1097 ], [ 1, %1091 ]
  %1118 = load i32, ptr %1116, align 4, !tbaa !6
  %1119 = add nsw i32 %1118, %1117
  store i32 %1119, ptr %1116, align 4, !tbaa !6
  br label %1120

1120:                                             ; preds = %1107, %1115, %1080, %1059
  %1121 = icmp eq i32 %1072, %5
  br i1 %1121, label %5686, label %986, !llvm.loop !239

1122:                                             ; preds = %969, %1261
  %1123 = phi i32 [ 0, %969 ], [ %1210, %1261 ]
  %1124 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %1125, label %1194

1125:                                             ; preds = %1122, %1184
  %1126 = phi i32 [ %1193, %1184 ], [ 0, %1122 ]
  %1127 = phi i64 [ %1135, %1184 ], [ %974, %1122 ]
  %1128 = phi i64 [ %1192, %1184 ], [ %973, %1122 ]
  %1129 = phi i32 [ %1190, %1184 ], [ %1124, %1122 ]
  %1130 = sub i32 %972, %1126
  %1131 = tail call i32 @llvm.smin.i32(i32 %1130, i32 0)
  %1132 = sub i32 %1130, %1131
  %1133 = zext i32 %1132 to i64
  %1134 = add nuw nsw i64 %1133, 1
  %1135 = add nsw i64 %1127, -1
  %1136 = icmp ult i32 %1132, 31
  br i1 %1136, label %1172, label %1137

1137:                                             ; preds = %1125
  %1138 = and i64 %1134, 8589934560
  %1139 = sub i64 %1128, %1138
  br label %1140

1140:                                             ; preds = %1140, %1137
  %1141 = phi i64 [ 0, %1137 ], [ %1164, %1140 ]
  %1142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1160, %1140 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1161, %1140 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1162, %1140 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1163, %1140 ]
  %1146 = sub i64 %1128, %1141
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1148 = getelementptr inbounds i32, ptr %1147, i64 -7
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !6
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = getelementptr inbounds i32, ptr %1147, i64 -15
  %1152 = load <8 x i32>, ptr %1151, align 4, !tbaa !6
  %1153 = shufflevector <8 x i32> %1152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1154 = getelementptr inbounds i32, ptr %1147, i64 -23
  %1155 = load <8 x i32>, ptr %1154, align 4, !tbaa !6
  %1156 = shufflevector <8 x i32> %1155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1157 = getelementptr inbounds i32, ptr %1147, i64 -31
  %1158 = load <8 x i32>, ptr %1157, align 4, !tbaa !6
  %1159 = shufflevector <8 x i32> %1158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1160 = mul <8 x i32> %1150, %1142
  %1161 = mul <8 x i32> %1153, %1143
  %1162 = mul <8 x i32> %1156, %1144
  %1163 = mul <8 x i32> %1159, %1145
  %1164 = add nuw i64 %1141, 32
  %1165 = icmp eq i64 %1164, %1138
  br i1 %1165, label %1166, label %1140, !llvm.loop !240

1166:                                             ; preds = %1140
  %1167 = mul <8 x i32> %1161, %1160
  %1168 = mul <8 x i32> %1162, %1167
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1169)
  %1171 = icmp eq i64 %1134, %1138
  br i1 %1171, label %1184, label %1172

1172:                                             ; preds = %1125, %1166
  %1173 = phi i64 [ %1128, %1125 ], [ %1139, %1166 ]
  %1174 = phi i32 [ 1, %1125 ], [ %1170, %1166 ]
  br label %1175

1175:                                             ; preds = %1172, %1175
  %1176 = phi i64 [ %1181, %1175 ], [ %1173, %1172 ]
  %1177 = phi i32 [ %1180, %1175 ], [ %1174, %1172 ]
  %1178 = getelementptr inbounds i32, ptr %11, i64 %1176
  %1179 = load i32, ptr %1178, align 4, !tbaa !6
  %1180 = mul nsw i32 %1179, %1177
  %1181 = add nsw i64 %1176, -1
  %1182 = trunc i64 %1176 to i32
  %1183 = icmp sgt i32 %1182, 0
  br i1 %1183, label %1175, label %1184, !llvm.loop !241

1184:                                             ; preds = %1175, %1166
  %1185 = phi i32 [ %1170, %1166 ], [ %1180, %1175 ]
  %1186 = and i64 %1135, 4294967295
  %1187 = getelementptr inbounds i32, ptr %6, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !6
  %1189 = mul nsw i32 %1188, %1185
  %1190 = add nsw i32 %1189, %1129
  %1191 = icmp sgt i64 %1127, 2
  %1192 = add nsw i64 %1128, -1
  %1193 = add i32 %1126, 1
  br i1 %1191, label %1125, label %1194, !llvm.loop !242

1194:                                             ; preds = %1184, %1122
  %1195 = phi i32 [ %1124, %1122 ], [ %1190, %1184 ]
  %1196 = icmp slt i32 %1195, %5
  br i1 %1196, label %1199, label %1197

1197:                                             ; preds = %1194
  %1198 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1199:                                             ; preds = %1194
  %1200 = sext i32 %1195 to i64
  %1201 = getelementptr inbounds i32, ptr %642, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !6
  %1203 = load i32, ptr %644, align 4, !tbaa !6
  %1204 = icmp slt i32 %1202, 0
  %1205 = mul nsw i32 %1202, %1202
  %1206 = sub nsw i32 0, %1205
  %1207 = select i1 %1204, i32 %1206, i32 %1205
  %1208 = mul i32 %1207, %1202
  %1209 = add nsw i32 %1208, %1203
  store i32 %1209, ptr %644, align 4, !tbaa !6
  %1210 = add nuw nsw i32 %1123, 1
  br i1 %971, label %1211, label %1261

1211:                                             ; preds = %1199
  %1212 = load i32, ptr %4, align 4, !tbaa !6
  %1213 = load i32, ptr %12, align 4, !tbaa !6
  %1214 = add nsw i32 %1213, -1
  %1215 = icmp slt i32 %1212, %1214
  br i1 %1215, label %1238, label %1216

1216:                                             ; preds = %1211
  %1217 = icmp eq i32 %1212, %1214
  br i1 %1217, label %1218, label %1254

1218:                                             ; preds = %1216
  store i32 0, ptr %4, align 4, !tbaa !6
  %1219 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1219, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1261, label %1220

1220:                                             ; preds = %1218, %1248
  %1221 = phi i64 [ %1252, %1248 ], [ 1, %1218 ]
  %1222 = getelementptr inbounds i32, ptr %4, i64 %1221
  %1223 = load i32, ptr %1222, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %12, i64 %1221
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = add nsw i32 %1225, -1
  %1227 = icmp slt i32 %1223, %1226
  br i1 %1227, label %1228, label %1246

1228:                                             ; preds = %1220
  br i1 %1215, label %1238, label %1229

1229:                                             ; preds = %1228
  %1230 = shl i64 %1221, 32
  %1231 = add i64 %1230, -4294967296
  %1232 = ashr exact i64 %1231, 32
  %1233 = getelementptr inbounds i32, ptr %7, i64 %1232
  %1234 = load i32, ptr %1233, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %6, i64 %1221
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = add nsw i32 %1236, %1234
  store i32 %1237, ptr %1235, align 4, !tbaa !6
  br label %1256

1238:                                             ; preds = %1211, %1228
  %1239 = phi i32 [ %1223, %1228 ], [ %1212, %1211 ]
  %1240 = phi ptr [ %1222, %1228 ], [ %4, %1211 ]
  %1241 = phi i64 [ %1221, %1228 ], [ 0, %1211 ]
  %1242 = add nsw i32 %1239, 1
  store i32 %1242, ptr %1240, align 4, !tbaa !6
  %1243 = getelementptr inbounds i32, ptr %7, i64 %1241
  %1244 = load i32, ptr %1243, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %6, i64 %1241
  br label %1256

1246:                                             ; preds = %1220
  %1247 = icmp eq i32 %1223, %1226
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1246
  store i32 0, ptr %1222, align 4, !tbaa !6
  %1249 = getelementptr inbounds i32, ptr %8, i64 %1221
  %1250 = load i32, ptr %1249, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %6, i64 %1221
  store i32 %1250, ptr %1251, align 4, !tbaa !6
  %1252 = add nuw nsw i64 %1221, 1
  %1253 = icmp eq i64 %1252, %974
  br i1 %1253, label %1261, label %1220, !llvm.loop !243

1254:                                             ; preds = %1216, %1246
  %1255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1256:                                             ; preds = %1229, %1238
  %1257 = phi ptr [ %1245, %1238 ], [ %1222, %1229 ]
  %1258 = phi i32 [ %1244, %1238 ], [ 1, %1229 ]
  %1259 = load i32, ptr %1257, align 4, !tbaa !6
  %1260 = add nsw i32 %1259, %1258
  store i32 %1260, ptr %1257, align 4, !tbaa !6
  br label %1261

1261:                                             ; preds = %1248, %1256, %1218, %1199
  %1262 = icmp eq i32 %1210, %5
  br i1 %1262, label %5686, label %1122, !llvm.loop !244

1263:                                             ; preds = %653
  %1264 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

1265:                                             ; preds = %18
  %1266 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1267 = load ptr, ptr %1266, align 8, !tbaa !10
  %1268 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  store i8 0, ptr %1269, align 1, !tbaa !12
  %1270 = icmp eq i32 %13, 0
  br i1 %1270, label %1271, label %1282

1271:                                             ; preds = %1265
  %1272 = load i32, ptr %1267, align 4, !tbaa !6
  %1273 = and i32 %1272, 128
  %1274 = icmp eq i32 %1273, 0
  %1275 = shl i32 %1272, 24
  %1276 = ashr exact i32 %1275, 24
  %1277 = mul nsw i32 %1276, %1276
  %1278 = mul nsw i32 %1277, %1276
  %1279 = sub nsw i32 0, %1278
  %1280 = select i1 %1274, i32 %1278, i32 %1279
  %1281 = trunc i32 %1280 to i8
  store i8 %1281, ptr %1269, align 1, !tbaa !12
  br label %5686

1282:                                             ; preds = %1265
  switch i32 %1, label %1904 [
    i32 1, label %1283
    i32 0, label %1596
  ]

1283:                                             ; preds = %1282
  %1284 = getelementptr inbounds i32, ptr %3, i64 %19
  %1285 = load i32, ptr %1284, align 4, !tbaa !6
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp sgt i32 %5, 0
  br i1 %1286, label %1297, label %1288

1288:                                             ; preds = %1283
  br i1 %1287, label %1289, label %5686

1289:                                             ; preds = %1288
  %1290 = icmp sgt i32 %13, 1
  %1291 = icmp sgt i32 %13, 0
  %1292 = add i32 %13, -2
  %1293 = zext i32 %1292 to i64
  %1294 = zext i32 %13 to i64
  %1295 = add nuw i32 %5, 1
  %1296 = icmp eq i32 %13, 1
  br label %1450

1297:                                             ; preds = %1283
  br i1 %1287, label %1298, label %5686

1298:                                             ; preds = %1297
  %1299 = icmp sgt i32 %13, 1
  %1300 = icmp sgt i32 %13, 0
  %1301 = add i32 %13, -2
  %1302 = zext i32 %1301 to i64
  %1303 = zext i32 %13 to i64
  %1304 = add nuw i32 %5, 1
  %1305 = icmp eq i32 %13, 1
  br label %1306

1306:                                             ; preds = %1298, %1448
  %1307 = phi i32 [ 0, %1298 ], [ %1400, %1448 ]
  %1308 = phi double [ 0.000000e+00, %1298 ], [ %1399, %1448 ]
  %1309 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1299, label %1310, label %1379

1310:                                             ; preds = %1306, %1369
  %1311 = phi i32 [ %1378, %1369 ], [ 0, %1306 ]
  %1312 = phi i64 [ %1320, %1369 ], [ %1303, %1306 ]
  %1313 = phi i64 [ %1377, %1369 ], [ %1302, %1306 ]
  %1314 = phi i32 [ %1375, %1369 ], [ %1309, %1306 ]
  %1315 = sub i32 %1301, %1311
  %1316 = tail call i32 @llvm.smin.i32(i32 %1315, i32 0)
  %1317 = sub i32 %1315, %1316
  %1318 = zext i32 %1317 to i64
  %1319 = add nuw nsw i64 %1318, 1
  %1320 = add nsw i64 %1312, -1
  %1321 = icmp ult i32 %1317, 31
  br i1 %1321, label %1357, label %1322

1322:                                             ; preds = %1310
  %1323 = and i64 %1319, 8589934560
  %1324 = sub i64 %1313, %1323
  br label %1325

1325:                                             ; preds = %1325, %1322
  %1326 = phi i64 [ 0, %1322 ], [ %1349, %1325 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1345, %1325 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1346, %1325 ]
  %1329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1347, %1325 ]
  %1330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1348, %1325 ]
  %1331 = sub i64 %1313, %1326
  %1332 = getelementptr inbounds i32, ptr %9, i64 %1331
  %1333 = getelementptr inbounds i32, ptr %1332, i64 -7
  %1334 = load <8 x i32>, ptr %1333, align 4, !tbaa !6
  %1335 = shufflevector <8 x i32> %1334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1336 = getelementptr inbounds i32, ptr %1332, i64 -15
  %1337 = load <8 x i32>, ptr %1336, align 4, !tbaa !6
  %1338 = shufflevector <8 x i32> %1337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1339 = getelementptr inbounds i32, ptr %1332, i64 -23
  %1340 = load <8 x i32>, ptr %1339, align 4, !tbaa !6
  %1341 = shufflevector <8 x i32> %1340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1342 = getelementptr inbounds i32, ptr %1332, i64 -31
  %1343 = load <8 x i32>, ptr %1342, align 4, !tbaa !6
  %1344 = shufflevector <8 x i32> %1343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1345 = mul <8 x i32> %1335, %1327
  %1346 = mul <8 x i32> %1338, %1328
  %1347 = mul <8 x i32> %1341, %1329
  %1348 = mul <8 x i32> %1344, %1330
  %1349 = add nuw i64 %1326, 32
  %1350 = icmp eq i64 %1349, %1323
  br i1 %1350, label %1351, label %1325, !llvm.loop !245

1351:                                             ; preds = %1325
  %1352 = mul <8 x i32> %1346, %1345
  %1353 = mul <8 x i32> %1347, %1352
  %1354 = mul <8 x i32> %1348, %1353
  %1355 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1354)
  %1356 = icmp eq i64 %1319, %1323
  br i1 %1356, label %1369, label %1357

1357:                                             ; preds = %1310, %1351
  %1358 = phi i64 [ %1313, %1310 ], [ %1324, %1351 ]
  %1359 = phi i32 [ 1, %1310 ], [ %1355, %1351 ]
  br label %1360

1360:                                             ; preds = %1357, %1360
  %1361 = phi i64 [ %1366, %1360 ], [ %1358, %1357 ]
  %1362 = phi i32 [ %1365, %1360 ], [ %1359, %1357 ]
  %1363 = getelementptr inbounds i32, ptr %9, i64 %1361
  %1364 = load i32, ptr %1363, align 4, !tbaa !6
  %1365 = mul nsw i32 %1364, %1362
  %1366 = add nsw i64 %1361, -1
  %1367 = trunc i64 %1361 to i32
  %1368 = icmp sgt i32 %1367, 0
  br i1 %1368, label %1360, label %1369, !llvm.loop !246

1369:                                             ; preds = %1360, %1351
  %1370 = phi i32 [ %1355, %1351 ], [ %1365, %1360 ]
  %1371 = and i64 %1320, 4294967295
  %1372 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !6
  %1374 = mul nsw i32 %1373, %1370
  %1375 = add nsw i32 %1374, %1314
  %1376 = icmp sgt i64 %1312, 2
  %1377 = add nsw i64 %1313, -1
  %1378 = add i32 %1311, 1
  br i1 %1376, label %1310, label %1379, !llvm.loop !247

1379:                                             ; preds = %1369, %1306
  %1380 = phi i32 [ %1309, %1306 ], [ %1375, %1369 ]
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds double, ptr %2, i64 %1381
  %1383 = load double, ptr %1382, align 8, !tbaa !19
  %1384 = getelementptr inbounds i32, ptr %1267, i64 %1381
  %1385 = load i32, ptr %1384, align 4, !tbaa !6
  %1386 = load i8, ptr %1269, align 1, !tbaa !12
  %1387 = sitofp i8 %1386 to double
  %1388 = shl i32 %1385, 24
  %1389 = ashr exact i32 %1388, 24
  %1390 = sitofp i32 %1389 to double
  %1391 = fmul fast double %1383, %1390
  %1392 = fcmp fast olt double %1391, 0.000000e+00
  %1393 = fneg fast double %1391
  %1394 = select nnan ninf i1 %1392, double %1393, double %1391
  %1395 = fmul fast double %1391, %1391
  %1396 = fmul fast double %1395, %1394
  %1397 = fadd fast double %1396, %1387
  %1398 = fptosi double %1397 to i8
  store i8 %1398, ptr %1269, align 1, !tbaa !12
  %1399 = fadd fast double %1383, %1308
  %1400 = add nuw nsw i32 %1307, 1
  br i1 %1300, label %1401, label %1448

1401:                                             ; preds = %1379
  %1402 = load i32, ptr %4, align 4, !tbaa !6
  %1403 = load i32, ptr %12, align 4, !tbaa !6
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1402, %1404
  br i1 %1405, label %1425, label %1406

1406:                                             ; preds = %1401
  %1407 = icmp eq i32 %1402, %1404
  br i1 %1407, label %1408, label %1441

1408:                                             ; preds = %1406
  store i32 0, ptr %4, align 4, !tbaa !6
  %1409 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1409, ptr %6, align 4, !tbaa !6
  br i1 %1305, label %1448, label %1410

1410:                                             ; preds = %1408, %1435
  %1411 = phi i64 [ %1439, %1435 ], [ 1, %1408 ]
  %1412 = getelementptr inbounds i32, ptr %4, i64 %1411
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %12, i64 %1411
  %1415 = load i32, ptr %1414, align 4, !tbaa !6
  %1416 = add nsw i32 %1415, -1
  %1417 = icmp slt i32 %1413, %1416
  br i1 %1417, label %1418, label %1433

1418:                                             ; preds = %1410
  br i1 %1405, label %1425, label %1419

1419:                                             ; preds = %1418
  %1420 = getelementptr inbounds i32, ptr %7, i64 %1411
  %1421 = load i32, ptr %1420, align 4, !tbaa !6
  %1422 = getelementptr inbounds i32, ptr %6, i64 %1411
  %1423 = load i32, ptr %1422, align 4, !tbaa !6
  %1424 = add nsw i32 %1423, %1421
  store i32 %1424, ptr %1422, align 4, !tbaa !6
  br label %1443

1425:                                             ; preds = %1401, %1418
  %1426 = phi i32 [ %1413, %1418 ], [ %1402, %1401 ]
  %1427 = phi ptr [ %1412, %1418 ], [ %4, %1401 ]
  %1428 = phi i64 [ %1411, %1418 ], [ 0, %1401 ]
  %1429 = add nsw i32 %1426, 1
  store i32 %1429, ptr %1427, align 4, !tbaa !6
  %1430 = getelementptr inbounds i32, ptr %7, i64 %1428
  %1431 = load i32, ptr %1430, align 4, !tbaa !6
  %1432 = getelementptr inbounds i32, ptr %6, i64 %1428
  br label %1443

1433:                                             ; preds = %1410
  %1434 = icmp eq i32 %1413, %1416
  br i1 %1434, label %1435, label %1441

1435:                                             ; preds = %1433
  store i32 0, ptr %1412, align 4, !tbaa !6
  %1436 = getelementptr inbounds i32, ptr %8, i64 %1411
  %1437 = load i32, ptr %1436, align 4, !tbaa !6
  %1438 = getelementptr inbounds i32, ptr %6, i64 %1411
  store i32 %1437, ptr %1438, align 4, !tbaa !6
  %1439 = add nuw nsw i64 %1411, 1
  %1440 = icmp eq i64 %1439, %1303
  br i1 %1440, label %1448, label %1410, !llvm.loop !248

1441:                                             ; preds = %1406, %1433
  %1442 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1443:                                             ; preds = %1419, %1425
  %1444 = phi ptr [ %1432, %1425 ], [ %1412, %1419 ]
  %1445 = phi i32 [ %1431, %1425 ], [ 1, %1419 ]
  %1446 = load i32, ptr %1444, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, %1445
  store i32 %1447, ptr %1444, align 4, !tbaa !6
  br label %1448

1448:                                             ; preds = %1435, %1443, %1408, %1379
  %1449 = icmp eq i32 %1400, %5
  br i1 %1449, label %5686, label %1306, !llvm.loop !249

1450:                                             ; preds = %1289, %1594
  %1451 = phi i32 [ 0, %1289 ], [ %1543, %1594 ]
  %1452 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1290, label %1453, label %1522

1453:                                             ; preds = %1450, %1512
  %1454 = phi i32 [ %1521, %1512 ], [ 0, %1450 ]
  %1455 = phi i64 [ %1463, %1512 ], [ %1294, %1450 ]
  %1456 = phi i64 [ %1520, %1512 ], [ %1293, %1450 ]
  %1457 = phi i32 [ %1518, %1512 ], [ %1452, %1450 ]
  %1458 = sub i32 %1292, %1454
  %1459 = tail call i32 @llvm.smin.i32(i32 %1458, i32 0)
  %1460 = sub i32 %1458, %1459
  %1461 = zext i32 %1460 to i64
  %1462 = add nuw nsw i64 %1461, 1
  %1463 = add nsw i64 %1455, -1
  %1464 = icmp ult i32 %1460, 31
  br i1 %1464, label %1500, label %1465

1465:                                             ; preds = %1453
  %1466 = and i64 %1462, 8589934560
  %1467 = sub i64 %1456, %1466
  br label %1468

1468:                                             ; preds = %1468, %1465
  %1469 = phi i64 [ 0, %1465 ], [ %1492, %1468 ]
  %1470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1488, %1468 ]
  %1471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1489, %1468 ]
  %1472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1490, %1468 ]
  %1473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1491, %1468 ]
  %1474 = sub i64 %1456, %1469
  %1475 = getelementptr inbounds i32, ptr %11, i64 %1474
  %1476 = getelementptr inbounds i32, ptr %1475, i64 -7
  %1477 = load <8 x i32>, ptr %1476, align 4, !tbaa !6
  %1478 = shufflevector <8 x i32> %1477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1479 = getelementptr inbounds i32, ptr %1475, i64 -15
  %1480 = load <8 x i32>, ptr %1479, align 4, !tbaa !6
  %1481 = shufflevector <8 x i32> %1480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1482 = getelementptr inbounds i32, ptr %1475, i64 -23
  %1483 = load <8 x i32>, ptr %1482, align 4, !tbaa !6
  %1484 = shufflevector <8 x i32> %1483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1485 = getelementptr inbounds i32, ptr %1475, i64 -31
  %1486 = load <8 x i32>, ptr %1485, align 4, !tbaa !6
  %1487 = shufflevector <8 x i32> %1486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1488 = mul <8 x i32> %1478, %1470
  %1489 = mul <8 x i32> %1481, %1471
  %1490 = mul <8 x i32> %1484, %1472
  %1491 = mul <8 x i32> %1487, %1473
  %1492 = add nuw i64 %1469, 32
  %1493 = icmp eq i64 %1492, %1466
  br i1 %1493, label %1494, label %1468, !llvm.loop !250

1494:                                             ; preds = %1468
  %1495 = mul <8 x i32> %1489, %1488
  %1496 = mul <8 x i32> %1490, %1495
  %1497 = mul <8 x i32> %1491, %1496
  %1498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1497)
  %1499 = icmp eq i64 %1462, %1466
  br i1 %1499, label %1512, label %1500

1500:                                             ; preds = %1453, %1494
  %1501 = phi i64 [ %1456, %1453 ], [ %1467, %1494 ]
  %1502 = phi i32 [ 1, %1453 ], [ %1498, %1494 ]
  br label %1503

1503:                                             ; preds = %1500, %1503
  %1504 = phi i64 [ %1509, %1503 ], [ %1501, %1500 ]
  %1505 = phi i32 [ %1508, %1503 ], [ %1502, %1500 ]
  %1506 = getelementptr inbounds i32, ptr %11, i64 %1504
  %1507 = load i32, ptr %1506, align 4, !tbaa !6
  %1508 = mul nsw i32 %1507, %1505
  %1509 = add nsw i64 %1504, -1
  %1510 = trunc i64 %1504 to i32
  %1511 = icmp sgt i32 %1510, 0
  br i1 %1511, label %1503, label %1512, !llvm.loop !251

1512:                                             ; preds = %1503, %1494
  %1513 = phi i32 [ %1498, %1494 ], [ %1508, %1503 ]
  %1514 = and i64 %1463, 4294967295
  %1515 = getelementptr inbounds i32, ptr %6, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !6
  %1517 = mul nsw i32 %1516, %1513
  %1518 = add nsw i32 %1517, %1457
  %1519 = icmp sgt i64 %1455, 2
  %1520 = add nsw i64 %1456, -1
  %1521 = add i32 %1454, 1
  br i1 %1519, label %1453, label %1522, !llvm.loop !252

1522:                                             ; preds = %1512, %1450
  %1523 = phi i32 [ %1452, %1450 ], [ %1518, %1512 ]
  %1524 = icmp slt i32 %1523, %5
  br i1 %1524, label %1527, label %1525

1525:                                             ; preds = %1522
  %1526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1527:                                             ; preds = %1522
  %1528 = sext i32 %1523 to i64
  %1529 = getelementptr inbounds i32, ptr %1267, i64 %1528
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = load i8, ptr %1269, align 1, !tbaa !12
  %1532 = sitofp i8 %1531 to double
  %1533 = shl i32 %1530, 24
  %1534 = ashr exact i32 %1533, 24
  %1535 = sitofp i32 %1534 to double
  %1536 = icmp slt i32 %1533, 0
  %1537 = fneg fast double %1535
  %1538 = select i1 %1536, double %1537, double %1535
  %1539 = fmul fast double %1535, %1535
  %1540 = fmul fast double %1539, %1538
  %1541 = fadd fast double %1540, %1532
  %1542 = fptosi double %1541 to i8
  store i8 %1542, ptr %1269, align 1, !tbaa !12
  %1543 = add nuw nsw i32 %1451, 1
  br i1 %1291, label %1544, label %1594

1544:                                             ; preds = %1527
  %1545 = load i32, ptr %4, align 4, !tbaa !6
  %1546 = load i32, ptr %12, align 4, !tbaa !6
  %1547 = add nsw i32 %1546, -1
  %1548 = icmp slt i32 %1545, %1547
  br i1 %1548, label %1571, label %1549

1549:                                             ; preds = %1544
  %1550 = icmp eq i32 %1545, %1547
  br i1 %1550, label %1551, label %1587

1551:                                             ; preds = %1549
  store i32 0, ptr %4, align 4, !tbaa !6
  %1552 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1552, ptr %6, align 4, !tbaa !6
  br i1 %1296, label %1594, label %1553

1553:                                             ; preds = %1551, %1581
  %1554 = phi i64 [ %1585, %1581 ], [ 1, %1551 ]
  %1555 = getelementptr inbounds i32, ptr %4, i64 %1554
  %1556 = load i32, ptr %1555, align 4, !tbaa !6
  %1557 = getelementptr inbounds i32, ptr %12, i64 %1554
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = add nsw i32 %1558, -1
  %1560 = icmp slt i32 %1556, %1559
  br i1 %1560, label %1561, label %1579

1561:                                             ; preds = %1553
  br i1 %1548, label %1571, label %1562

1562:                                             ; preds = %1561
  %1563 = shl i64 %1554, 32
  %1564 = add i64 %1563, -4294967296
  %1565 = ashr exact i64 %1564, 32
  %1566 = getelementptr inbounds i32, ptr %7, i64 %1565
  %1567 = load i32, ptr %1566, align 4, !tbaa !6
  %1568 = getelementptr inbounds i32, ptr %6, i64 %1554
  %1569 = load i32, ptr %1568, align 4, !tbaa !6
  %1570 = add nsw i32 %1569, %1567
  store i32 %1570, ptr %1568, align 4, !tbaa !6
  br label %1589

1571:                                             ; preds = %1544, %1561
  %1572 = phi i32 [ %1556, %1561 ], [ %1545, %1544 ]
  %1573 = phi ptr [ %1555, %1561 ], [ %4, %1544 ]
  %1574 = phi i64 [ %1554, %1561 ], [ 0, %1544 ]
  %1575 = add nsw i32 %1572, 1
  store i32 %1575, ptr %1573, align 4, !tbaa !6
  %1576 = getelementptr inbounds i32, ptr %7, i64 %1574
  %1577 = load i32, ptr %1576, align 4, !tbaa !6
  %1578 = getelementptr inbounds i32, ptr %6, i64 %1574
  br label %1589

1579:                                             ; preds = %1553
  %1580 = icmp eq i32 %1556, %1559
  br i1 %1580, label %1581, label %1587

1581:                                             ; preds = %1579
  store i32 0, ptr %1555, align 4, !tbaa !6
  %1582 = getelementptr inbounds i32, ptr %8, i64 %1554
  %1583 = load i32, ptr %1582, align 4, !tbaa !6
  %1584 = getelementptr inbounds i32, ptr %6, i64 %1554
  store i32 %1583, ptr %1584, align 4, !tbaa !6
  %1585 = add nuw nsw i64 %1554, 1
  %1586 = icmp eq i64 %1585, %1294
  br i1 %1586, label %1594, label %1553, !llvm.loop !253

1587:                                             ; preds = %1549, %1579
  %1588 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1589:                                             ; preds = %1562, %1571
  %1590 = phi ptr [ %1578, %1571 ], [ %1555, %1562 ]
  %1591 = phi i32 [ %1577, %1571 ], [ 1, %1562 ]
  %1592 = load i32, ptr %1590, align 4, !tbaa !6
  %1593 = add nsw i32 %1592, %1591
  store i32 %1593, ptr %1590, align 4, !tbaa !6
  br label %1594

1594:                                             ; preds = %1581, %1589, %1551, %1527
  %1595 = icmp eq i32 %1543, %5
  br i1 %1595, label %5686, label %1450, !llvm.loop !254

1596:                                             ; preds = %1282
  %1597 = getelementptr inbounds i32, ptr %3, i64 %19
  %1598 = load i32, ptr %1597, align 4, !tbaa !6
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp sgt i32 %5, 0
  br i1 %1599, label %1610, label %1601

1601:                                             ; preds = %1596
  br i1 %1600, label %1602, label %5686

1602:                                             ; preds = %1601
  %1603 = icmp sgt i32 %13, 1
  %1604 = icmp sgt i32 %13, 0
  %1605 = add i32 %13, -2
  %1606 = zext i32 %1605 to i64
  %1607 = zext i32 %13 to i64
  %1608 = add nuw i32 %5, 1
  %1609 = icmp eq i32 %13, 1
  br label %1759

1610:                                             ; preds = %1596
  br i1 %1600, label %1611, label %5686

1611:                                             ; preds = %1610
  %1612 = icmp sgt i32 %13, 1
  %1613 = icmp sgt i32 %13, 0
  %1614 = add i32 %13, -2
  %1615 = zext i32 %1614 to i64
  %1616 = zext i32 %13 to i64
  %1617 = add nuw i32 %5, 1
  %1618 = icmp eq i32 %13, 1
  br label %1619

1619:                                             ; preds = %1611, %1757
  %1620 = phi i32 [ 0, %1611 ], [ %1709, %1757 ]
  %1621 = phi double [ 0.000000e+00, %1611 ], [ %1708, %1757 ]
  %1622 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1612, label %1623, label %1692

1623:                                             ; preds = %1619, %1682
  %1624 = phi i32 [ %1691, %1682 ], [ 0, %1619 ]
  %1625 = phi i64 [ %1633, %1682 ], [ %1616, %1619 ]
  %1626 = phi i64 [ %1690, %1682 ], [ %1615, %1619 ]
  %1627 = phi i32 [ %1688, %1682 ], [ %1622, %1619 ]
  %1628 = sub i32 %1614, %1624
  %1629 = tail call i32 @llvm.smin.i32(i32 %1628, i32 0)
  %1630 = sub i32 %1628, %1629
  %1631 = zext i32 %1630 to i64
  %1632 = add nuw nsw i64 %1631, 1
  %1633 = add nsw i64 %1625, -1
  %1634 = icmp ult i32 %1630, 31
  br i1 %1634, label %1670, label %1635

1635:                                             ; preds = %1623
  %1636 = and i64 %1632, 8589934560
  %1637 = sub i64 %1626, %1636
  br label %1638

1638:                                             ; preds = %1638, %1635
  %1639 = phi i64 [ 0, %1635 ], [ %1662, %1638 ]
  %1640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1658, %1638 ]
  %1641 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1659, %1638 ]
  %1642 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1660, %1638 ]
  %1643 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1661, %1638 ]
  %1644 = sub i64 %1626, %1639
  %1645 = getelementptr inbounds i32, ptr %9, i64 %1644
  %1646 = getelementptr inbounds i32, ptr %1645, i64 -7
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !6
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = getelementptr inbounds i32, ptr %1645, i64 -15
  %1650 = load <8 x i32>, ptr %1649, align 4, !tbaa !6
  %1651 = shufflevector <8 x i32> %1650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1652 = getelementptr inbounds i32, ptr %1645, i64 -23
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = getelementptr inbounds i32, ptr %1645, i64 -31
  %1656 = load <8 x i32>, ptr %1655, align 4, !tbaa !6
  %1657 = shufflevector <8 x i32> %1656, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1658 = mul <8 x i32> %1648, %1640
  %1659 = mul <8 x i32> %1651, %1641
  %1660 = mul <8 x i32> %1654, %1642
  %1661 = mul <8 x i32> %1657, %1643
  %1662 = add nuw i64 %1639, 32
  %1663 = icmp eq i64 %1662, %1636
  br i1 %1663, label %1664, label %1638, !llvm.loop !255

1664:                                             ; preds = %1638
  %1665 = mul <8 x i32> %1659, %1658
  %1666 = mul <8 x i32> %1660, %1665
  %1667 = mul <8 x i32> %1661, %1666
  %1668 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1667)
  %1669 = icmp eq i64 %1632, %1636
  br i1 %1669, label %1682, label %1670

1670:                                             ; preds = %1623, %1664
  %1671 = phi i64 [ %1626, %1623 ], [ %1637, %1664 ]
  %1672 = phi i32 [ 1, %1623 ], [ %1668, %1664 ]
  br label %1673

1673:                                             ; preds = %1670, %1673
  %1674 = phi i64 [ %1679, %1673 ], [ %1671, %1670 ]
  %1675 = phi i32 [ %1678, %1673 ], [ %1672, %1670 ]
  %1676 = getelementptr inbounds i32, ptr %9, i64 %1674
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = mul nsw i32 %1677, %1675
  %1679 = add nsw i64 %1674, -1
  %1680 = trunc i64 %1674 to i32
  %1681 = icmp sgt i32 %1680, 0
  br i1 %1681, label %1673, label %1682, !llvm.loop !256

1682:                                             ; preds = %1673, %1664
  %1683 = phi i32 [ %1668, %1664 ], [ %1678, %1673 ]
  %1684 = and i64 %1633, 4294967295
  %1685 = getelementptr inbounds i32, ptr %6, i64 %1684
  %1686 = load i32, ptr %1685, align 4, !tbaa !6
  %1687 = mul nsw i32 %1686, %1683
  %1688 = add nsw i32 %1687, %1627
  %1689 = icmp sgt i64 %1625, 2
  %1690 = add nsw i64 %1626, -1
  %1691 = add i32 %1624, 1
  br i1 %1689, label %1623, label %1692, !llvm.loop !257

1692:                                             ; preds = %1682, %1619
  %1693 = phi i32 [ %1622, %1619 ], [ %1688, %1682 ]
  %1694 = sext i32 %1693 to i64
  %1695 = getelementptr inbounds i32, ptr %1267, i64 %1694
  %1696 = load i32, ptr %1695, align 4, !tbaa !6
  %1697 = load i8, ptr %1269, align 1, !tbaa !12
  %1698 = and i32 %1696, 128
  %1699 = icmp eq i32 %1698, 0
  %1700 = shl i32 %1696, 24
  %1701 = ashr exact i32 %1700, 24
  %1702 = mul nsw i32 %1701, %1701
  %1703 = mul nsw i32 %1702, %1701
  %1704 = sub nsw i32 0, %1703
  %1705 = select i1 %1699, i32 %1703, i32 %1704
  %1706 = trunc i32 %1705 to i8
  %1707 = add i8 %1697, %1706
  store i8 %1707, ptr %1269, align 1, !tbaa !12
  %1708 = fadd fast double %1621, 1.000000e+00
  %1709 = add nuw nsw i32 %1620, 1
  br i1 %1613, label %1710, label %1757

1710:                                             ; preds = %1692
  %1711 = load i32, ptr %4, align 4, !tbaa !6
  %1712 = load i32, ptr %12, align 4, !tbaa !6
  %1713 = add nsw i32 %1712, -1
  %1714 = icmp slt i32 %1711, %1713
  br i1 %1714, label %1734, label %1715

1715:                                             ; preds = %1710
  %1716 = icmp eq i32 %1711, %1713
  br i1 %1716, label %1717, label %1750

1717:                                             ; preds = %1715
  store i32 0, ptr %4, align 4, !tbaa !6
  %1718 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1718, ptr %6, align 4, !tbaa !6
  br i1 %1618, label %1757, label %1719

1719:                                             ; preds = %1717, %1744
  %1720 = phi i64 [ %1748, %1744 ], [ 1, %1717 ]
  %1721 = getelementptr inbounds i32, ptr %4, i64 %1720
  %1722 = load i32, ptr %1721, align 4, !tbaa !6
  %1723 = getelementptr inbounds i32, ptr %12, i64 %1720
  %1724 = load i32, ptr %1723, align 4, !tbaa !6
  %1725 = add nsw i32 %1724, -1
  %1726 = icmp slt i32 %1722, %1725
  br i1 %1726, label %1727, label %1742

1727:                                             ; preds = %1719
  br i1 %1714, label %1734, label %1728

1728:                                             ; preds = %1727
  %1729 = getelementptr inbounds i32, ptr %7, i64 %1720
  %1730 = load i32, ptr %1729, align 4, !tbaa !6
  %1731 = getelementptr inbounds i32, ptr %6, i64 %1720
  %1732 = load i32, ptr %1731, align 4, !tbaa !6
  %1733 = add nsw i32 %1732, %1730
  store i32 %1733, ptr %1731, align 4, !tbaa !6
  br label %1752

1734:                                             ; preds = %1710, %1727
  %1735 = phi i32 [ %1722, %1727 ], [ %1711, %1710 ]
  %1736 = phi ptr [ %1721, %1727 ], [ %4, %1710 ]
  %1737 = phi i64 [ %1720, %1727 ], [ 0, %1710 ]
  %1738 = add nsw i32 %1735, 1
  store i32 %1738, ptr %1736, align 4, !tbaa !6
  %1739 = getelementptr inbounds i32, ptr %7, i64 %1737
  %1740 = load i32, ptr %1739, align 4, !tbaa !6
  %1741 = getelementptr inbounds i32, ptr %6, i64 %1737
  br label %1752

1742:                                             ; preds = %1719
  %1743 = icmp eq i32 %1722, %1725
  br i1 %1743, label %1744, label %1750

1744:                                             ; preds = %1742
  store i32 0, ptr %1721, align 4, !tbaa !6
  %1745 = getelementptr inbounds i32, ptr %8, i64 %1720
  %1746 = load i32, ptr %1745, align 4, !tbaa !6
  %1747 = getelementptr inbounds i32, ptr %6, i64 %1720
  store i32 %1746, ptr %1747, align 4, !tbaa !6
  %1748 = add nuw nsw i64 %1720, 1
  %1749 = icmp eq i64 %1748, %1616
  br i1 %1749, label %1757, label %1719, !llvm.loop !258

1750:                                             ; preds = %1715, %1742
  %1751 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1752:                                             ; preds = %1728, %1734
  %1753 = phi ptr [ %1741, %1734 ], [ %1721, %1728 ]
  %1754 = phi i32 [ %1740, %1734 ], [ 1, %1728 ]
  %1755 = load i32, ptr %1753, align 4, !tbaa !6
  %1756 = add nsw i32 %1755, %1754
  store i32 %1756, ptr %1753, align 4, !tbaa !6
  br label %1757

1757:                                             ; preds = %1744, %1752, %1717, %1692
  %1758 = icmp eq i32 %1709, %5
  br i1 %1758, label %5686, label %1619, !llvm.loop !259

1759:                                             ; preds = %1602, %1902
  %1760 = phi i32 [ 0, %1602 ], [ %1851, %1902 ]
  %1761 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1603, label %1762, label %1831

1762:                                             ; preds = %1759, %1821
  %1763 = phi i32 [ %1830, %1821 ], [ 0, %1759 ]
  %1764 = phi i64 [ %1772, %1821 ], [ %1607, %1759 ]
  %1765 = phi i64 [ %1829, %1821 ], [ %1606, %1759 ]
  %1766 = phi i32 [ %1827, %1821 ], [ %1761, %1759 ]
  %1767 = sub i32 %1605, %1763
  %1768 = tail call i32 @llvm.smin.i32(i32 %1767, i32 0)
  %1769 = sub i32 %1767, %1768
  %1770 = zext i32 %1769 to i64
  %1771 = add nuw nsw i64 %1770, 1
  %1772 = add nsw i64 %1764, -1
  %1773 = icmp ult i32 %1769, 31
  br i1 %1773, label %1809, label %1774

1774:                                             ; preds = %1762
  %1775 = and i64 %1771, 8589934560
  %1776 = sub i64 %1765, %1775
  br label %1777

1777:                                             ; preds = %1777, %1774
  %1778 = phi i64 [ 0, %1774 ], [ %1801, %1777 ]
  %1779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1797, %1777 ]
  %1780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1798, %1777 ]
  %1781 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1799, %1777 ]
  %1782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1800, %1777 ]
  %1783 = sub i64 %1765, %1778
  %1784 = getelementptr inbounds i32, ptr %11, i64 %1783
  %1785 = getelementptr inbounds i32, ptr %1784, i64 -7
  %1786 = load <8 x i32>, ptr %1785, align 4, !tbaa !6
  %1787 = shufflevector <8 x i32> %1786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1788 = getelementptr inbounds i32, ptr %1784, i64 -15
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = getelementptr inbounds i32, ptr %1784, i64 -23
  %1792 = load <8 x i32>, ptr %1791, align 4, !tbaa !6
  %1793 = shufflevector <8 x i32> %1792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1794 = getelementptr inbounds i32, ptr %1784, i64 -31
  %1795 = load <8 x i32>, ptr %1794, align 4, !tbaa !6
  %1796 = shufflevector <8 x i32> %1795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1797 = mul <8 x i32> %1787, %1779
  %1798 = mul <8 x i32> %1790, %1780
  %1799 = mul <8 x i32> %1793, %1781
  %1800 = mul <8 x i32> %1796, %1782
  %1801 = add nuw i64 %1778, 32
  %1802 = icmp eq i64 %1801, %1775
  br i1 %1802, label %1803, label %1777, !llvm.loop !260

1803:                                             ; preds = %1777
  %1804 = mul <8 x i32> %1798, %1797
  %1805 = mul <8 x i32> %1799, %1804
  %1806 = mul <8 x i32> %1800, %1805
  %1807 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1806)
  %1808 = icmp eq i64 %1771, %1775
  br i1 %1808, label %1821, label %1809

1809:                                             ; preds = %1762, %1803
  %1810 = phi i64 [ %1765, %1762 ], [ %1776, %1803 ]
  %1811 = phi i32 [ 1, %1762 ], [ %1807, %1803 ]
  br label %1812

1812:                                             ; preds = %1809, %1812
  %1813 = phi i64 [ %1818, %1812 ], [ %1810, %1809 ]
  %1814 = phi i32 [ %1817, %1812 ], [ %1811, %1809 ]
  %1815 = getelementptr inbounds i32, ptr %11, i64 %1813
  %1816 = load i32, ptr %1815, align 4, !tbaa !6
  %1817 = mul nsw i32 %1816, %1814
  %1818 = add nsw i64 %1813, -1
  %1819 = trunc i64 %1813 to i32
  %1820 = icmp sgt i32 %1819, 0
  br i1 %1820, label %1812, label %1821, !llvm.loop !261

1821:                                             ; preds = %1812, %1803
  %1822 = phi i32 [ %1807, %1803 ], [ %1817, %1812 ]
  %1823 = and i64 %1772, 4294967295
  %1824 = getelementptr inbounds i32, ptr %6, i64 %1823
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = mul nsw i32 %1825, %1822
  %1827 = add nsw i32 %1826, %1766
  %1828 = icmp sgt i64 %1764, 2
  %1829 = add nsw i64 %1765, -1
  %1830 = add i32 %1763, 1
  br i1 %1828, label %1762, label %1831, !llvm.loop !262

1831:                                             ; preds = %1821, %1759
  %1832 = phi i32 [ %1761, %1759 ], [ %1827, %1821 ]
  %1833 = icmp slt i32 %1832, %5
  br i1 %1833, label %1836, label %1834

1834:                                             ; preds = %1831
  %1835 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1836:                                             ; preds = %1831
  %1837 = sext i32 %1832 to i64
  %1838 = getelementptr inbounds i32, ptr %1267, i64 %1837
  %1839 = load i32, ptr %1838, align 4, !tbaa !6
  %1840 = load i8, ptr %1269, align 1, !tbaa !12
  %1841 = and i32 %1839, 128
  %1842 = icmp eq i32 %1841, 0
  %1843 = shl i32 %1839, 24
  %1844 = ashr exact i32 %1843, 24
  %1845 = mul nsw i32 %1844, %1844
  %1846 = mul nsw i32 %1845, %1844
  %1847 = sub nsw i32 0, %1846
  %1848 = select i1 %1842, i32 %1846, i32 %1847
  %1849 = trunc i32 %1848 to i8
  %1850 = add i8 %1840, %1849
  store i8 %1850, ptr %1269, align 1, !tbaa !12
  %1851 = add nuw nsw i32 %1760, 1
  br i1 %1604, label %1852, label %1902

1852:                                             ; preds = %1836
  %1853 = load i32, ptr %4, align 4, !tbaa !6
  %1854 = load i32, ptr %12, align 4, !tbaa !6
  %1855 = add nsw i32 %1854, -1
  %1856 = icmp slt i32 %1853, %1855
  br i1 %1856, label %1879, label %1857

1857:                                             ; preds = %1852
  %1858 = icmp eq i32 %1853, %1855
  br i1 %1858, label %1859, label %1895

1859:                                             ; preds = %1857
  store i32 0, ptr %4, align 4, !tbaa !6
  %1860 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1860, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1902, label %1861

1861:                                             ; preds = %1859, %1889
  %1862 = phi i64 [ %1893, %1889 ], [ 1, %1859 ]
  %1863 = getelementptr inbounds i32, ptr %4, i64 %1862
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = getelementptr inbounds i32, ptr %12, i64 %1862
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = add nsw i32 %1866, -1
  %1868 = icmp slt i32 %1864, %1867
  br i1 %1868, label %1869, label %1887

1869:                                             ; preds = %1861
  br i1 %1856, label %1879, label %1870

1870:                                             ; preds = %1869
  %1871 = shl i64 %1862, 32
  %1872 = add i64 %1871, -4294967296
  %1873 = ashr exact i64 %1872, 32
  %1874 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1875 = load i32, ptr %1874, align 4, !tbaa !6
  %1876 = getelementptr inbounds i32, ptr %6, i64 %1862
  %1877 = load i32, ptr %1876, align 4, !tbaa !6
  %1878 = add nsw i32 %1877, %1875
  store i32 %1878, ptr %1876, align 4, !tbaa !6
  br label %1897

1879:                                             ; preds = %1852, %1869
  %1880 = phi i32 [ %1864, %1869 ], [ %1853, %1852 ]
  %1881 = phi ptr [ %1863, %1869 ], [ %4, %1852 ]
  %1882 = phi i64 [ %1862, %1869 ], [ 0, %1852 ]
  %1883 = add nsw i32 %1880, 1
  store i32 %1883, ptr %1881, align 4, !tbaa !6
  %1884 = getelementptr inbounds i32, ptr %7, i64 %1882
  %1885 = load i32, ptr %1884, align 4, !tbaa !6
  %1886 = getelementptr inbounds i32, ptr %6, i64 %1882
  br label %1897

1887:                                             ; preds = %1861
  %1888 = icmp eq i32 %1864, %1867
  br i1 %1888, label %1889, label %1895

1889:                                             ; preds = %1887
  store i32 0, ptr %1863, align 4, !tbaa !6
  %1890 = getelementptr inbounds i32, ptr %8, i64 %1862
  %1891 = load i32, ptr %1890, align 4, !tbaa !6
  %1892 = getelementptr inbounds i32, ptr %6, i64 %1862
  store i32 %1891, ptr %1892, align 4, !tbaa !6
  %1893 = add nuw nsw i64 %1862, 1
  %1894 = icmp eq i64 %1893, %1607
  br i1 %1894, label %1902, label %1861, !llvm.loop !263

1895:                                             ; preds = %1857, %1887
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1897:                                             ; preds = %1870, %1879
  %1898 = phi ptr [ %1886, %1879 ], [ %1863, %1870 ]
  %1899 = phi i32 [ %1885, %1879 ], [ 1, %1870 ]
  %1900 = load i32, ptr %1898, align 4, !tbaa !6
  %1901 = add nsw i32 %1900, %1899
  store i32 %1901, ptr %1898, align 4, !tbaa !6
  br label %1902

1902:                                             ; preds = %1889, %1897, %1859, %1836
  %1903 = icmp eq i32 %1851, %5
  br i1 %1903, label %5686, label %1759, !llvm.loop !264

1904:                                             ; preds = %1282
  %1905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 345, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

1906:                                             ; preds = %18
  %1907 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1908 = load ptr, ptr %1907, align 8, !tbaa !10
  %1909 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1910 = load ptr, ptr %1909, align 8, !tbaa !10
  store i16 0, ptr %1910, align 2, !tbaa !79
  %1911 = icmp eq i32 %13, 0
  br i1 %1911, label %1912, label %1923

1912:                                             ; preds = %1906
  %1913 = load i32, ptr %1908, align 4, !tbaa !6
  %1914 = and i32 %1913, 32768
  %1915 = icmp eq i32 %1914, 0
  %1916 = shl i32 %1913, 16
  %1917 = ashr exact i32 %1916, 16
  %1918 = mul nsw i32 %1917, %1917
  %1919 = mul i32 %1918, %1917
  %1920 = sub i32 0, %1919
  %1921 = select i1 %1915, i32 %1919, i32 %1920
  %1922 = trunc i32 %1921 to i16
  store i16 %1922, ptr %1910, align 2, !tbaa !79
  br label %5686

1923:                                             ; preds = %1906
  switch i32 %1, label %2545 [
    i32 1, label %1924
    i32 0, label %2237
  ]

1924:                                             ; preds = %1923
  %1925 = getelementptr inbounds i32, ptr %3, i64 %19
  %1926 = load i32, ptr %1925, align 4, !tbaa !6
  %1927 = icmp eq i32 %1926, 0
  %1928 = icmp sgt i32 %5, 0
  br i1 %1927, label %1938, label %1929

1929:                                             ; preds = %1924
  br i1 %1928, label %1930, label %5686

1930:                                             ; preds = %1929
  %1931 = icmp sgt i32 %13, 1
  %1932 = icmp sgt i32 %13, 0
  %1933 = add i32 %13, -2
  %1934 = zext i32 %1933 to i64
  %1935 = zext i32 %13 to i64
  %1936 = add nuw i32 %5, 1
  %1937 = icmp eq i32 %13, 1
  br label %2091

1938:                                             ; preds = %1924
  br i1 %1928, label %1939, label %5686

1939:                                             ; preds = %1938
  %1940 = icmp sgt i32 %13, 1
  %1941 = icmp sgt i32 %13, 0
  %1942 = add i32 %13, -2
  %1943 = zext i32 %1942 to i64
  %1944 = zext i32 %13 to i64
  %1945 = add nuw i32 %5, 1
  %1946 = icmp eq i32 %13, 1
  br label %1947

1947:                                             ; preds = %1939, %2089
  %1948 = phi i16 [ 0, %1939 ], [ %2039, %2089 ]
  %1949 = phi i32 [ 0, %1939 ], [ %2041, %2089 ]
  %1950 = phi double [ 0.000000e+00, %1939 ], [ %2040, %2089 ]
  %1951 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1940, label %1952, label %2021

1952:                                             ; preds = %1947, %2011
  %1953 = phi i32 [ %2020, %2011 ], [ 0, %1947 ]
  %1954 = phi i64 [ %1962, %2011 ], [ %1944, %1947 ]
  %1955 = phi i64 [ %2019, %2011 ], [ %1943, %1947 ]
  %1956 = phi i32 [ %2017, %2011 ], [ %1951, %1947 ]
  %1957 = sub i32 %1942, %1953
  %1958 = tail call i32 @llvm.smin.i32(i32 %1957, i32 0)
  %1959 = sub i32 %1957, %1958
  %1960 = zext i32 %1959 to i64
  %1961 = add nuw nsw i64 %1960, 1
  %1962 = add nsw i64 %1954, -1
  %1963 = icmp ult i32 %1959, 31
  br i1 %1963, label %1999, label %1964

1964:                                             ; preds = %1952
  %1965 = and i64 %1961, 8589934560
  %1966 = sub i64 %1955, %1965
  br label %1967

1967:                                             ; preds = %1967, %1964
  %1968 = phi i64 [ 0, %1964 ], [ %1991, %1967 ]
  %1969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1987, %1967 ]
  %1970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1988, %1967 ]
  %1971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1989, %1967 ]
  %1972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1990, %1967 ]
  %1973 = sub i64 %1955, %1968
  %1974 = getelementptr inbounds i32, ptr %9, i64 %1973
  %1975 = getelementptr inbounds i32, ptr %1974, i64 -7
  %1976 = load <8 x i32>, ptr %1975, align 4, !tbaa !6
  %1977 = shufflevector <8 x i32> %1976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1978 = getelementptr inbounds i32, ptr %1974, i64 -15
  %1979 = load <8 x i32>, ptr %1978, align 4, !tbaa !6
  %1980 = shufflevector <8 x i32> %1979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1981 = getelementptr inbounds i32, ptr %1974, i64 -23
  %1982 = load <8 x i32>, ptr %1981, align 4, !tbaa !6
  %1983 = shufflevector <8 x i32> %1982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1984 = getelementptr inbounds i32, ptr %1974, i64 -31
  %1985 = load <8 x i32>, ptr %1984, align 4, !tbaa !6
  %1986 = shufflevector <8 x i32> %1985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1987 = mul <8 x i32> %1977, %1969
  %1988 = mul <8 x i32> %1980, %1970
  %1989 = mul <8 x i32> %1983, %1971
  %1990 = mul <8 x i32> %1986, %1972
  %1991 = add nuw i64 %1968, 32
  %1992 = icmp eq i64 %1991, %1965
  br i1 %1992, label %1993, label %1967, !llvm.loop !265

1993:                                             ; preds = %1967
  %1994 = mul <8 x i32> %1988, %1987
  %1995 = mul <8 x i32> %1989, %1994
  %1996 = mul <8 x i32> %1990, %1995
  %1997 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1996)
  %1998 = icmp eq i64 %1961, %1965
  br i1 %1998, label %2011, label %1999

1999:                                             ; preds = %1952, %1993
  %2000 = phi i64 [ %1955, %1952 ], [ %1966, %1993 ]
  %2001 = phi i32 [ 1, %1952 ], [ %1997, %1993 ]
  br label %2002

2002:                                             ; preds = %1999, %2002
  %2003 = phi i64 [ %2008, %2002 ], [ %2000, %1999 ]
  %2004 = phi i32 [ %2007, %2002 ], [ %2001, %1999 ]
  %2005 = getelementptr inbounds i32, ptr %9, i64 %2003
  %2006 = load i32, ptr %2005, align 4, !tbaa !6
  %2007 = mul nsw i32 %2006, %2004
  %2008 = add nsw i64 %2003, -1
  %2009 = trunc i64 %2003 to i32
  %2010 = icmp sgt i32 %2009, 0
  br i1 %2010, label %2002, label %2011, !llvm.loop !266

2011:                                             ; preds = %2002, %1993
  %2012 = phi i32 [ %1997, %1993 ], [ %2007, %2002 ]
  %2013 = and i64 %1962, 4294967295
  %2014 = getelementptr inbounds i32, ptr %6, i64 %2013
  %2015 = load i32, ptr %2014, align 4, !tbaa !6
  %2016 = mul nsw i32 %2015, %2012
  %2017 = add nsw i32 %2016, %1956
  %2018 = icmp sgt i64 %1954, 2
  %2019 = add nsw i64 %1955, -1
  %2020 = add i32 %1953, 1
  br i1 %2018, label %1952, label %2021, !llvm.loop !267

2021:                                             ; preds = %2011, %1947
  %2022 = phi i32 [ %1951, %1947 ], [ %2017, %2011 ]
  %2023 = sext i32 %2022 to i64
  %2024 = getelementptr inbounds double, ptr %2, i64 %2023
  %2025 = load double, ptr %2024, align 8, !tbaa !19
  %2026 = getelementptr inbounds i32, ptr %1908, i64 %2023
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = sitofp i16 %1948 to double
  %2029 = shl i32 %2027, 16
  %2030 = ashr exact i32 %2029, 16
  %2031 = sitofp i32 %2030 to double
  %2032 = fmul fast double %2025, %2031
  %2033 = fcmp fast olt double %2032, 0.000000e+00
  %2034 = fneg fast double %2032
  %2035 = select nnan ninf i1 %2033, double %2034, double %2032
  %2036 = fmul fast double %2032, %2032
  %2037 = fmul fast double %2036, %2035
  %2038 = fadd fast double %2037, %2028
  %2039 = fptosi double %2038 to i16
  %2040 = fadd fast double %2025, %1950
  %2041 = add nuw nsw i32 %1949, 1
  br i1 %1941, label %2042, label %2089

2042:                                             ; preds = %2021
  %2043 = load i32, ptr %4, align 4, !tbaa !6
  %2044 = load i32, ptr %12, align 4, !tbaa !6
  %2045 = add nsw i32 %2044, -1
  %2046 = icmp slt i32 %2043, %2045
  br i1 %2046, label %2066, label %2047

2047:                                             ; preds = %2042
  %2048 = icmp eq i32 %2043, %2045
  br i1 %2048, label %2049, label %2082

2049:                                             ; preds = %2047
  store i32 0, ptr %4, align 4, !tbaa !6
  %2050 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2050, ptr %6, align 4, !tbaa !6
  br i1 %1946, label %2089, label %2051

2051:                                             ; preds = %2049, %2076
  %2052 = phi i64 [ %2080, %2076 ], [ 1, %2049 ]
  %2053 = getelementptr inbounds i32, ptr %4, i64 %2052
  %2054 = load i32, ptr %2053, align 4, !tbaa !6
  %2055 = getelementptr inbounds i32, ptr %12, i64 %2052
  %2056 = load i32, ptr %2055, align 4, !tbaa !6
  %2057 = add nsw i32 %2056, -1
  %2058 = icmp slt i32 %2054, %2057
  br i1 %2058, label %2059, label %2074

2059:                                             ; preds = %2051
  br i1 %2046, label %2066, label %2060

2060:                                             ; preds = %2059
  %2061 = getelementptr inbounds i32, ptr %7, i64 %2052
  %2062 = load i32, ptr %2061, align 4, !tbaa !6
  %2063 = getelementptr inbounds i32, ptr %6, i64 %2052
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = add nsw i32 %2064, %2062
  store i32 %2065, ptr %2063, align 4, !tbaa !6
  br label %2084

2066:                                             ; preds = %2042, %2059
  %2067 = phi i32 [ %2054, %2059 ], [ %2043, %2042 ]
  %2068 = phi ptr [ %2053, %2059 ], [ %4, %2042 ]
  %2069 = phi i64 [ %2052, %2059 ], [ 0, %2042 ]
  %2070 = add nsw i32 %2067, 1
  store i32 %2070, ptr %2068, align 4, !tbaa !6
  %2071 = getelementptr inbounds i32, ptr %7, i64 %2069
  %2072 = load i32, ptr %2071, align 4, !tbaa !6
  %2073 = getelementptr inbounds i32, ptr %6, i64 %2069
  br label %2084

2074:                                             ; preds = %2051
  %2075 = icmp eq i32 %2054, %2057
  br i1 %2075, label %2076, label %2082

2076:                                             ; preds = %2074
  store i32 0, ptr %2053, align 4, !tbaa !6
  %2077 = getelementptr inbounds i32, ptr %8, i64 %2052
  %2078 = load i32, ptr %2077, align 4, !tbaa !6
  %2079 = getelementptr inbounds i32, ptr %6, i64 %2052
  store i32 %2078, ptr %2079, align 4, !tbaa !6
  %2080 = add nuw nsw i64 %2052, 1
  %2081 = icmp eq i64 %2080, %1944
  br i1 %2081, label %2089, label %2051, !llvm.loop !268

2082:                                             ; preds = %2047, %2074
  store i16 %2039, ptr %1910, align 2, !tbaa !79
  %2083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2084:                                             ; preds = %2060, %2066
  %2085 = phi ptr [ %2073, %2066 ], [ %2053, %2060 ]
  %2086 = phi i32 [ %2072, %2066 ], [ 1, %2060 ]
  %2087 = load i32, ptr %2085, align 4, !tbaa !6
  %2088 = add nsw i32 %2087, %2086
  store i32 %2088, ptr %2085, align 4, !tbaa !6
  br label %2089

2089:                                             ; preds = %2076, %2084, %2049, %2021
  %2090 = icmp eq i32 %2041, %5
  br i1 %2090, label %5678, label %1947, !llvm.loop !269

2091:                                             ; preds = %1930, %2235
  %2092 = phi i16 [ 0, %1930 ], [ %2183, %2235 ]
  %2093 = phi i32 [ 0, %1930 ], [ %2184, %2235 ]
  %2094 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1931, label %2095, label %2164

2095:                                             ; preds = %2091, %2154
  %2096 = phi i32 [ %2163, %2154 ], [ 0, %2091 ]
  %2097 = phi i64 [ %2105, %2154 ], [ %1935, %2091 ]
  %2098 = phi i64 [ %2162, %2154 ], [ %1934, %2091 ]
  %2099 = phi i32 [ %2160, %2154 ], [ %2094, %2091 ]
  %2100 = sub i32 %1933, %2096
  %2101 = tail call i32 @llvm.smin.i32(i32 %2100, i32 0)
  %2102 = sub i32 %2100, %2101
  %2103 = zext i32 %2102 to i64
  %2104 = add nuw nsw i64 %2103, 1
  %2105 = add nsw i64 %2097, -1
  %2106 = icmp ult i32 %2102, 31
  br i1 %2106, label %2142, label %2107

2107:                                             ; preds = %2095
  %2108 = and i64 %2104, 8589934560
  %2109 = sub i64 %2098, %2108
  br label %2110

2110:                                             ; preds = %2110, %2107
  %2111 = phi i64 [ 0, %2107 ], [ %2134, %2110 ]
  %2112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2130, %2110 ]
  %2113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2131, %2110 ]
  %2114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2132, %2110 ]
  %2115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2133, %2110 ]
  %2116 = sub i64 %2098, %2111
  %2117 = getelementptr inbounds i32, ptr %11, i64 %2116
  %2118 = getelementptr inbounds i32, ptr %2117, i64 -7
  %2119 = load <8 x i32>, ptr %2118, align 4, !tbaa !6
  %2120 = shufflevector <8 x i32> %2119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2121 = getelementptr inbounds i32, ptr %2117, i64 -15
  %2122 = load <8 x i32>, ptr %2121, align 4, !tbaa !6
  %2123 = shufflevector <8 x i32> %2122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2124 = getelementptr inbounds i32, ptr %2117, i64 -23
  %2125 = load <8 x i32>, ptr %2124, align 4, !tbaa !6
  %2126 = shufflevector <8 x i32> %2125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2127 = getelementptr inbounds i32, ptr %2117, i64 -31
  %2128 = load <8 x i32>, ptr %2127, align 4, !tbaa !6
  %2129 = shufflevector <8 x i32> %2128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2130 = mul <8 x i32> %2120, %2112
  %2131 = mul <8 x i32> %2123, %2113
  %2132 = mul <8 x i32> %2126, %2114
  %2133 = mul <8 x i32> %2129, %2115
  %2134 = add nuw i64 %2111, 32
  %2135 = icmp eq i64 %2134, %2108
  br i1 %2135, label %2136, label %2110, !llvm.loop !270

2136:                                             ; preds = %2110
  %2137 = mul <8 x i32> %2131, %2130
  %2138 = mul <8 x i32> %2132, %2137
  %2139 = mul <8 x i32> %2133, %2138
  %2140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2139)
  %2141 = icmp eq i64 %2104, %2108
  br i1 %2141, label %2154, label %2142

2142:                                             ; preds = %2095, %2136
  %2143 = phi i64 [ %2098, %2095 ], [ %2109, %2136 ]
  %2144 = phi i32 [ 1, %2095 ], [ %2140, %2136 ]
  br label %2145

2145:                                             ; preds = %2142, %2145
  %2146 = phi i64 [ %2151, %2145 ], [ %2143, %2142 ]
  %2147 = phi i32 [ %2150, %2145 ], [ %2144, %2142 ]
  %2148 = getelementptr inbounds i32, ptr %11, i64 %2146
  %2149 = load i32, ptr %2148, align 4, !tbaa !6
  %2150 = mul nsw i32 %2149, %2147
  %2151 = add nsw i64 %2146, -1
  %2152 = trunc i64 %2146 to i32
  %2153 = icmp sgt i32 %2152, 0
  br i1 %2153, label %2145, label %2154, !llvm.loop !271

2154:                                             ; preds = %2145, %2136
  %2155 = phi i32 [ %2140, %2136 ], [ %2150, %2145 ]
  %2156 = and i64 %2105, 4294967295
  %2157 = getelementptr inbounds i32, ptr %6, i64 %2156
  %2158 = load i32, ptr %2157, align 4, !tbaa !6
  %2159 = mul nsw i32 %2158, %2155
  %2160 = add nsw i32 %2159, %2099
  %2161 = icmp sgt i64 %2097, 2
  %2162 = add nsw i64 %2098, -1
  %2163 = add i32 %2096, 1
  br i1 %2161, label %2095, label %2164, !llvm.loop !272

2164:                                             ; preds = %2154, %2091
  %2165 = phi i32 [ %2094, %2091 ], [ %2160, %2154 ]
  %2166 = icmp slt i32 %2165, %5
  br i1 %2166, label %2169, label %2167

2167:                                             ; preds = %2164
  %2168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2169:                                             ; preds = %2164
  %2170 = sext i32 %2165 to i64
  %2171 = getelementptr inbounds i32, ptr %1908, i64 %2170
  %2172 = load i32, ptr %2171, align 4, !tbaa !6
  %2173 = sitofp i16 %2092 to double
  %2174 = shl i32 %2172, 16
  %2175 = ashr exact i32 %2174, 16
  %2176 = sitofp i32 %2175 to double
  %2177 = icmp slt i32 %2174, 0
  %2178 = fneg fast double %2176
  %2179 = select i1 %2177, double %2178, double %2176
  %2180 = fmul fast double %2176, %2176
  %2181 = fmul fast double %2180, %2179
  %2182 = fadd fast double %2181, %2173
  %2183 = fptosi double %2182 to i16
  store i16 %2183, ptr %1910, align 2, !tbaa !79
  %2184 = add nuw nsw i32 %2093, 1
  br i1 %1932, label %2185, label %2235

2185:                                             ; preds = %2169
  %2186 = load i32, ptr %4, align 4, !tbaa !6
  %2187 = load i32, ptr %12, align 4, !tbaa !6
  %2188 = add nsw i32 %2187, -1
  %2189 = icmp slt i32 %2186, %2188
  br i1 %2189, label %2212, label %2190

2190:                                             ; preds = %2185
  %2191 = icmp eq i32 %2186, %2188
  br i1 %2191, label %2192, label %2228

2192:                                             ; preds = %2190
  store i32 0, ptr %4, align 4, !tbaa !6
  %2193 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2193, ptr %6, align 4, !tbaa !6
  br i1 %1937, label %2235, label %2194

2194:                                             ; preds = %2192, %2222
  %2195 = phi i64 [ %2226, %2222 ], [ 1, %2192 ]
  %2196 = getelementptr inbounds i32, ptr %4, i64 %2195
  %2197 = load i32, ptr %2196, align 4, !tbaa !6
  %2198 = getelementptr inbounds i32, ptr %12, i64 %2195
  %2199 = load i32, ptr %2198, align 4, !tbaa !6
  %2200 = add nsw i32 %2199, -1
  %2201 = icmp slt i32 %2197, %2200
  br i1 %2201, label %2202, label %2220

2202:                                             ; preds = %2194
  br i1 %2189, label %2212, label %2203

2203:                                             ; preds = %2202
  %2204 = shl i64 %2195, 32
  %2205 = add i64 %2204, -4294967296
  %2206 = ashr exact i64 %2205, 32
  %2207 = getelementptr inbounds i32, ptr %7, i64 %2206
  %2208 = load i32, ptr %2207, align 4, !tbaa !6
  %2209 = getelementptr inbounds i32, ptr %6, i64 %2195
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = add nsw i32 %2210, %2208
  store i32 %2211, ptr %2209, align 4, !tbaa !6
  br label %2230

2212:                                             ; preds = %2185, %2202
  %2213 = phi i32 [ %2197, %2202 ], [ %2186, %2185 ]
  %2214 = phi ptr [ %2196, %2202 ], [ %4, %2185 ]
  %2215 = phi i64 [ %2195, %2202 ], [ 0, %2185 ]
  %2216 = add nsw i32 %2213, 1
  store i32 %2216, ptr %2214, align 4, !tbaa !6
  %2217 = getelementptr inbounds i32, ptr %7, i64 %2215
  %2218 = load i32, ptr %2217, align 4, !tbaa !6
  %2219 = getelementptr inbounds i32, ptr %6, i64 %2215
  br label %2230

2220:                                             ; preds = %2194
  %2221 = icmp eq i32 %2197, %2200
  br i1 %2221, label %2222, label %2228

2222:                                             ; preds = %2220
  store i32 0, ptr %2196, align 4, !tbaa !6
  %2223 = getelementptr inbounds i32, ptr %8, i64 %2195
  %2224 = load i32, ptr %2223, align 4, !tbaa !6
  %2225 = getelementptr inbounds i32, ptr %6, i64 %2195
  store i32 %2224, ptr %2225, align 4, !tbaa !6
  %2226 = add nuw nsw i64 %2195, 1
  %2227 = icmp eq i64 %2226, %1935
  br i1 %2227, label %2235, label %2194, !llvm.loop !273

2228:                                             ; preds = %2190, %2220
  %2229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2230:                                             ; preds = %2203, %2212
  %2231 = phi ptr [ %2219, %2212 ], [ %2196, %2203 ]
  %2232 = phi i32 [ %2218, %2212 ], [ 1, %2203 ]
  %2233 = load i32, ptr %2231, align 4, !tbaa !6
  %2234 = add nsw i32 %2233, %2232
  store i32 %2234, ptr %2231, align 4, !tbaa !6
  br label %2235

2235:                                             ; preds = %2222, %2230, %2192, %2169
  %2236 = icmp eq i32 %2184, %5
  br i1 %2236, label %5686, label %2091, !llvm.loop !274

2237:                                             ; preds = %1923
  %2238 = getelementptr inbounds i32, ptr %3, i64 %19
  %2239 = load i32, ptr %2238, align 4, !tbaa !6
  %2240 = icmp eq i32 %2239, 0
  %2241 = icmp sgt i32 %5, 0
  br i1 %2240, label %2251, label %2242

2242:                                             ; preds = %2237
  br i1 %2241, label %2243, label %5686

2243:                                             ; preds = %2242
  %2244 = icmp sgt i32 %13, 1
  %2245 = icmp sgt i32 %13, 0
  %2246 = add i32 %13, -2
  %2247 = zext i32 %2246 to i64
  %2248 = zext i32 %13 to i64
  %2249 = add nuw i32 %5, 1
  %2250 = icmp eq i32 %13, 1
  br label %2400

2251:                                             ; preds = %2237
  br i1 %2241, label %2252, label %5686

2252:                                             ; preds = %2251
  %2253 = icmp sgt i32 %13, 1
  %2254 = icmp sgt i32 %13, 0
  %2255 = add i32 %13, -2
  %2256 = zext i32 %2255 to i64
  %2257 = zext i32 %13 to i64
  %2258 = add nuw i32 %5, 1
  %2259 = icmp eq i32 %13, 1
  br label %2260

2260:                                             ; preds = %2252, %2398
  %2261 = phi i16 [ 0, %2252 ], [ %2348, %2398 ]
  %2262 = phi i32 [ 0, %2252 ], [ %2350, %2398 ]
  %2263 = phi double [ 0.000000e+00, %2252 ], [ %2349, %2398 ]
  %2264 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2253, label %2265, label %2334

2265:                                             ; preds = %2260, %2324
  %2266 = phi i32 [ %2333, %2324 ], [ 0, %2260 ]
  %2267 = phi i64 [ %2275, %2324 ], [ %2257, %2260 ]
  %2268 = phi i64 [ %2332, %2324 ], [ %2256, %2260 ]
  %2269 = phi i32 [ %2330, %2324 ], [ %2264, %2260 ]
  %2270 = sub i32 %2255, %2266
  %2271 = tail call i32 @llvm.smin.i32(i32 %2270, i32 0)
  %2272 = sub i32 %2270, %2271
  %2273 = zext i32 %2272 to i64
  %2274 = add nuw nsw i64 %2273, 1
  %2275 = add nsw i64 %2267, -1
  %2276 = icmp ult i32 %2272, 31
  br i1 %2276, label %2312, label %2277

2277:                                             ; preds = %2265
  %2278 = and i64 %2274, 8589934560
  %2279 = sub i64 %2268, %2278
  br label %2280

2280:                                             ; preds = %2280, %2277
  %2281 = phi i64 [ 0, %2277 ], [ %2304, %2280 ]
  %2282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2300, %2280 ]
  %2283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2301, %2280 ]
  %2284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2302, %2280 ]
  %2285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2303, %2280 ]
  %2286 = sub i64 %2268, %2281
  %2287 = getelementptr inbounds i32, ptr %9, i64 %2286
  %2288 = getelementptr inbounds i32, ptr %2287, i64 -7
  %2289 = load <8 x i32>, ptr %2288, align 4, !tbaa !6
  %2290 = shufflevector <8 x i32> %2289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2291 = getelementptr inbounds i32, ptr %2287, i64 -15
  %2292 = load <8 x i32>, ptr %2291, align 4, !tbaa !6
  %2293 = shufflevector <8 x i32> %2292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2294 = getelementptr inbounds i32, ptr %2287, i64 -23
  %2295 = load <8 x i32>, ptr %2294, align 4, !tbaa !6
  %2296 = shufflevector <8 x i32> %2295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2297 = getelementptr inbounds i32, ptr %2287, i64 -31
  %2298 = load <8 x i32>, ptr %2297, align 4, !tbaa !6
  %2299 = shufflevector <8 x i32> %2298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2300 = mul <8 x i32> %2290, %2282
  %2301 = mul <8 x i32> %2293, %2283
  %2302 = mul <8 x i32> %2296, %2284
  %2303 = mul <8 x i32> %2299, %2285
  %2304 = add nuw i64 %2281, 32
  %2305 = icmp eq i64 %2304, %2278
  br i1 %2305, label %2306, label %2280, !llvm.loop !275

2306:                                             ; preds = %2280
  %2307 = mul <8 x i32> %2301, %2300
  %2308 = mul <8 x i32> %2302, %2307
  %2309 = mul <8 x i32> %2303, %2308
  %2310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2309)
  %2311 = icmp eq i64 %2274, %2278
  br i1 %2311, label %2324, label %2312

2312:                                             ; preds = %2265, %2306
  %2313 = phi i64 [ %2268, %2265 ], [ %2279, %2306 ]
  %2314 = phi i32 [ 1, %2265 ], [ %2310, %2306 ]
  br label %2315

2315:                                             ; preds = %2312, %2315
  %2316 = phi i64 [ %2321, %2315 ], [ %2313, %2312 ]
  %2317 = phi i32 [ %2320, %2315 ], [ %2314, %2312 ]
  %2318 = getelementptr inbounds i32, ptr %9, i64 %2316
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = mul nsw i32 %2319, %2317
  %2321 = add nsw i64 %2316, -1
  %2322 = trunc i64 %2316 to i32
  %2323 = icmp sgt i32 %2322, 0
  br i1 %2323, label %2315, label %2324, !llvm.loop !276

2324:                                             ; preds = %2315, %2306
  %2325 = phi i32 [ %2310, %2306 ], [ %2320, %2315 ]
  %2326 = and i64 %2275, 4294967295
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2326
  %2328 = load i32, ptr %2327, align 4, !tbaa !6
  %2329 = mul nsw i32 %2328, %2325
  %2330 = add nsw i32 %2329, %2269
  %2331 = icmp sgt i64 %2267, 2
  %2332 = add nsw i64 %2268, -1
  %2333 = add i32 %2266, 1
  br i1 %2331, label %2265, label %2334, !llvm.loop !277

2334:                                             ; preds = %2324, %2260
  %2335 = phi i32 [ %2264, %2260 ], [ %2330, %2324 ]
  %2336 = sext i32 %2335 to i64
  %2337 = getelementptr inbounds i32, ptr %1908, i64 %2336
  %2338 = load i32, ptr %2337, align 4, !tbaa !6
  %2339 = and i32 %2338, 32768
  %2340 = icmp eq i32 %2339, 0
  %2341 = shl i32 %2338, 16
  %2342 = ashr exact i32 %2341, 16
  %2343 = mul nsw i32 %2342, %2342
  %2344 = mul i32 %2343, %2342
  %2345 = sub i32 0, %2344
  %2346 = select i1 %2340, i32 %2344, i32 %2345
  %2347 = trunc i32 %2346 to i16
  %2348 = add i16 %2261, %2347
  %2349 = fadd fast double %2263, 1.000000e+00
  %2350 = add nuw nsw i32 %2262, 1
  br i1 %2254, label %2351, label %2398

2351:                                             ; preds = %2334
  %2352 = load i32, ptr %4, align 4, !tbaa !6
  %2353 = load i32, ptr %12, align 4, !tbaa !6
  %2354 = add nsw i32 %2353, -1
  %2355 = icmp slt i32 %2352, %2354
  br i1 %2355, label %2375, label %2356

2356:                                             ; preds = %2351
  %2357 = icmp eq i32 %2352, %2354
  br i1 %2357, label %2358, label %2391

2358:                                             ; preds = %2356
  store i32 0, ptr %4, align 4, !tbaa !6
  %2359 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2359, ptr %6, align 4, !tbaa !6
  br i1 %2259, label %2398, label %2360

2360:                                             ; preds = %2358, %2385
  %2361 = phi i64 [ %2389, %2385 ], [ 1, %2358 ]
  %2362 = getelementptr inbounds i32, ptr %4, i64 %2361
  %2363 = load i32, ptr %2362, align 4, !tbaa !6
  %2364 = getelementptr inbounds i32, ptr %12, i64 %2361
  %2365 = load i32, ptr %2364, align 4, !tbaa !6
  %2366 = add nsw i32 %2365, -1
  %2367 = icmp slt i32 %2363, %2366
  br i1 %2367, label %2368, label %2383

2368:                                             ; preds = %2360
  br i1 %2355, label %2375, label %2369

2369:                                             ; preds = %2368
  %2370 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2371 = load i32, ptr %2370, align 4, !tbaa !6
  %2372 = getelementptr inbounds i32, ptr %6, i64 %2361
  %2373 = load i32, ptr %2372, align 4, !tbaa !6
  %2374 = add nsw i32 %2373, %2371
  store i32 %2374, ptr %2372, align 4, !tbaa !6
  br label %2393

2375:                                             ; preds = %2351, %2368
  %2376 = phi i32 [ %2363, %2368 ], [ %2352, %2351 ]
  %2377 = phi ptr [ %2362, %2368 ], [ %4, %2351 ]
  %2378 = phi i64 [ %2361, %2368 ], [ 0, %2351 ]
  %2379 = add nsw i32 %2376, 1
  store i32 %2379, ptr %2377, align 4, !tbaa !6
  %2380 = getelementptr inbounds i32, ptr %7, i64 %2378
  %2381 = load i32, ptr %2380, align 4, !tbaa !6
  %2382 = getelementptr inbounds i32, ptr %6, i64 %2378
  br label %2393

2383:                                             ; preds = %2360
  %2384 = icmp eq i32 %2363, %2366
  br i1 %2384, label %2385, label %2391

2385:                                             ; preds = %2383
  store i32 0, ptr %2362, align 4, !tbaa !6
  %2386 = getelementptr inbounds i32, ptr %8, i64 %2361
  %2387 = load i32, ptr %2386, align 4, !tbaa !6
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2361
  store i32 %2387, ptr %2388, align 4, !tbaa !6
  %2389 = add nuw nsw i64 %2361, 1
  %2390 = icmp eq i64 %2389, %2257
  br i1 %2390, label %2398, label %2360, !llvm.loop !278

2391:                                             ; preds = %2356, %2383
  store i16 %2348, ptr %1910, align 2, !tbaa !79
  %2392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2393:                                             ; preds = %2369, %2375
  %2394 = phi ptr [ %2382, %2375 ], [ %2362, %2369 ]
  %2395 = phi i32 [ %2381, %2375 ], [ 1, %2369 ]
  %2396 = load i32, ptr %2394, align 4, !tbaa !6
  %2397 = add nsw i32 %2396, %2395
  store i32 %2397, ptr %2394, align 4, !tbaa !6
  br label %2398

2398:                                             ; preds = %2385, %2393, %2358, %2334
  %2399 = icmp eq i32 %2350, %5
  br i1 %2399, label %5679, label %2260, !llvm.loop !279

2400:                                             ; preds = %2243, %2543
  %2401 = phi i16 [ 0, %2243 ], [ %2491, %2543 ]
  %2402 = phi i32 [ 0, %2243 ], [ %2492, %2543 ]
  %2403 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2244, label %2404, label %2473

2404:                                             ; preds = %2400, %2463
  %2405 = phi i32 [ %2472, %2463 ], [ 0, %2400 ]
  %2406 = phi i64 [ %2414, %2463 ], [ %2248, %2400 ]
  %2407 = phi i64 [ %2471, %2463 ], [ %2247, %2400 ]
  %2408 = phi i32 [ %2469, %2463 ], [ %2403, %2400 ]
  %2409 = sub i32 %2246, %2405
  %2410 = tail call i32 @llvm.smin.i32(i32 %2409, i32 0)
  %2411 = sub i32 %2409, %2410
  %2412 = zext i32 %2411 to i64
  %2413 = add nuw nsw i64 %2412, 1
  %2414 = add nsw i64 %2406, -1
  %2415 = icmp ult i32 %2411, 31
  br i1 %2415, label %2451, label %2416

2416:                                             ; preds = %2404
  %2417 = and i64 %2413, 8589934560
  %2418 = sub i64 %2407, %2417
  br label %2419

2419:                                             ; preds = %2419, %2416
  %2420 = phi i64 [ 0, %2416 ], [ %2443, %2419 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2439, %2419 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2440, %2419 ]
  %2423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2441, %2419 ]
  %2424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2442, %2419 ]
  %2425 = sub i64 %2407, %2420
  %2426 = getelementptr inbounds i32, ptr %11, i64 %2425
  %2427 = getelementptr inbounds i32, ptr %2426, i64 -7
  %2428 = load <8 x i32>, ptr %2427, align 4, !tbaa !6
  %2429 = shufflevector <8 x i32> %2428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2430 = getelementptr inbounds i32, ptr %2426, i64 -15
  %2431 = load <8 x i32>, ptr %2430, align 4, !tbaa !6
  %2432 = shufflevector <8 x i32> %2431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2433 = getelementptr inbounds i32, ptr %2426, i64 -23
  %2434 = load <8 x i32>, ptr %2433, align 4, !tbaa !6
  %2435 = shufflevector <8 x i32> %2434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2436 = getelementptr inbounds i32, ptr %2426, i64 -31
  %2437 = load <8 x i32>, ptr %2436, align 4, !tbaa !6
  %2438 = shufflevector <8 x i32> %2437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2439 = mul <8 x i32> %2429, %2421
  %2440 = mul <8 x i32> %2432, %2422
  %2441 = mul <8 x i32> %2435, %2423
  %2442 = mul <8 x i32> %2438, %2424
  %2443 = add nuw i64 %2420, 32
  %2444 = icmp eq i64 %2443, %2417
  br i1 %2444, label %2445, label %2419, !llvm.loop !280

2445:                                             ; preds = %2419
  %2446 = mul <8 x i32> %2440, %2439
  %2447 = mul <8 x i32> %2441, %2446
  %2448 = mul <8 x i32> %2442, %2447
  %2449 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2448)
  %2450 = icmp eq i64 %2413, %2417
  br i1 %2450, label %2463, label %2451

2451:                                             ; preds = %2404, %2445
  %2452 = phi i64 [ %2407, %2404 ], [ %2418, %2445 ]
  %2453 = phi i32 [ 1, %2404 ], [ %2449, %2445 ]
  br label %2454

2454:                                             ; preds = %2451, %2454
  %2455 = phi i64 [ %2460, %2454 ], [ %2452, %2451 ]
  %2456 = phi i32 [ %2459, %2454 ], [ %2453, %2451 ]
  %2457 = getelementptr inbounds i32, ptr %11, i64 %2455
  %2458 = load i32, ptr %2457, align 4, !tbaa !6
  %2459 = mul nsw i32 %2458, %2456
  %2460 = add nsw i64 %2455, -1
  %2461 = trunc i64 %2455 to i32
  %2462 = icmp sgt i32 %2461, 0
  br i1 %2462, label %2454, label %2463, !llvm.loop !281

2463:                                             ; preds = %2454, %2445
  %2464 = phi i32 [ %2449, %2445 ], [ %2459, %2454 ]
  %2465 = and i64 %2414, 4294967295
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2465
  %2467 = load i32, ptr %2466, align 4, !tbaa !6
  %2468 = mul nsw i32 %2467, %2464
  %2469 = add nsw i32 %2468, %2408
  %2470 = icmp sgt i64 %2406, 2
  %2471 = add nsw i64 %2407, -1
  %2472 = add i32 %2405, 1
  br i1 %2470, label %2404, label %2473, !llvm.loop !282

2473:                                             ; preds = %2463, %2400
  %2474 = phi i32 [ %2403, %2400 ], [ %2469, %2463 ]
  %2475 = icmp slt i32 %2474, %5
  br i1 %2475, label %2478, label %2476

2476:                                             ; preds = %2473
  %2477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2478:                                             ; preds = %2473
  %2479 = sext i32 %2474 to i64
  %2480 = getelementptr inbounds i32, ptr %1908, i64 %2479
  %2481 = load i32, ptr %2480, align 4, !tbaa !6
  %2482 = and i32 %2481, 32768
  %2483 = icmp eq i32 %2482, 0
  %2484 = shl i32 %2481, 16
  %2485 = ashr exact i32 %2484, 16
  %2486 = mul nsw i32 %2485, %2485
  %2487 = mul i32 %2486, %2485
  %2488 = sub i32 0, %2487
  %2489 = select i1 %2483, i32 %2487, i32 %2488
  %2490 = trunc i32 %2489 to i16
  %2491 = add i16 %2401, %2490
  store i16 %2491, ptr %1910, align 2, !tbaa !79
  %2492 = add nuw nsw i32 %2402, 1
  br i1 %2245, label %2493, label %2543

2493:                                             ; preds = %2478
  %2494 = load i32, ptr %4, align 4, !tbaa !6
  %2495 = load i32, ptr %12, align 4, !tbaa !6
  %2496 = add nsw i32 %2495, -1
  %2497 = icmp slt i32 %2494, %2496
  br i1 %2497, label %2520, label %2498

2498:                                             ; preds = %2493
  %2499 = icmp eq i32 %2494, %2496
  br i1 %2499, label %2500, label %2536

2500:                                             ; preds = %2498
  store i32 0, ptr %4, align 4, !tbaa !6
  %2501 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2501, ptr %6, align 4, !tbaa !6
  br i1 %2250, label %2543, label %2502

2502:                                             ; preds = %2500, %2530
  %2503 = phi i64 [ %2534, %2530 ], [ 1, %2500 ]
  %2504 = getelementptr inbounds i32, ptr %4, i64 %2503
  %2505 = load i32, ptr %2504, align 4, !tbaa !6
  %2506 = getelementptr inbounds i32, ptr %12, i64 %2503
  %2507 = load i32, ptr %2506, align 4, !tbaa !6
  %2508 = add nsw i32 %2507, -1
  %2509 = icmp slt i32 %2505, %2508
  br i1 %2509, label %2510, label %2528

2510:                                             ; preds = %2502
  br i1 %2497, label %2520, label %2511

2511:                                             ; preds = %2510
  %2512 = shl i64 %2503, 32
  %2513 = add i64 %2512, -4294967296
  %2514 = ashr exact i64 %2513, 32
  %2515 = getelementptr inbounds i32, ptr %7, i64 %2514
  %2516 = load i32, ptr %2515, align 4, !tbaa !6
  %2517 = getelementptr inbounds i32, ptr %6, i64 %2503
  %2518 = load i32, ptr %2517, align 4, !tbaa !6
  %2519 = add nsw i32 %2518, %2516
  store i32 %2519, ptr %2517, align 4, !tbaa !6
  br label %2538

2520:                                             ; preds = %2493, %2510
  %2521 = phi i32 [ %2505, %2510 ], [ %2494, %2493 ]
  %2522 = phi ptr [ %2504, %2510 ], [ %4, %2493 ]
  %2523 = phi i64 [ %2503, %2510 ], [ 0, %2493 ]
  %2524 = add nsw i32 %2521, 1
  store i32 %2524, ptr %2522, align 4, !tbaa !6
  %2525 = getelementptr inbounds i32, ptr %7, i64 %2523
  %2526 = load i32, ptr %2525, align 4, !tbaa !6
  %2527 = getelementptr inbounds i32, ptr %6, i64 %2523
  br label %2538

2528:                                             ; preds = %2502
  %2529 = icmp eq i32 %2505, %2508
  br i1 %2529, label %2530, label %2536

2530:                                             ; preds = %2528
  store i32 0, ptr %2504, align 4, !tbaa !6
  %2531 = getelementptr inbounds i32, ptr %8, i64 %2503
  %2532 = load i32, ptr %2531, align 4, !tbaa !6
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2503
  store i32 %2532, ptr %2533, align 4, !tbaa !6
  %2534 = add nuw nsw i64 %2503, 1
  %2535 = icmp eq i64 %2534, %2248
  br i1 %2535, label %2543, label %2502, !llvm.loop !283

2536:                                             ; preds = %2498, %2528
  %2537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2538:                                             ; preds = %2511, %2520
  %2539 = phi ptr [ %2527, %2520 ], [ %2504, %2511 ]
  %2540 = phi i32 [ %2526, %2520 ], [ 1, %2511 ]
  %2541 = load i32, ptr %2539, align 4, !tbaa !6
  %2542 = add nsw i32 %2541, %2540
  store i32 %2542, ptr %2539, align 4, !tbaa !6
  br label %2543

2543:                                             ; preds = %2530, %2538, %2500, %2478
  %2544 = icmp eq i32 %2492, %5
  br i1 %2544, label %5686, label %2400, !llvm.loop !284

2545:                                             ; preds = %1923
  %2546 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 350, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

2547:                                             ; preds = %18
  %2548 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2549 = load ptr, ptr %2548, align 8, !tbaa !10
  %2550 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2551 = load ptr, ptr %2550, align 8, !tbaa !10
  store i32 0, ptr %2551, align 4, !tbaa !6
  %2552 = icmp eq i32 %13, 0
  br i1 %2552, label %2553, label %2560

2553:                                             ; preds = %2547
  %2554 = load i32, ptr %2549, align 4, !tbaa !6
  %2555 = icmp slt i32 %2554, 0
  %2556 = mul nsw i32 %2554, %2554
  %2557 = sub nsw i32 0, %2556
  %2558 = select i1 %2555, i32 %2557, i32 %2556
  %2559 = mul i32 %2558, %2554
  store i32 %2559, ptr %2551, align 4, !tbaa !6
  br label %5686

2560:                                             ; preds = %2547
  switch i32 %1, label %3170 [
    i32 1, label %2561
    i32 0, label %2870
  ]

2561:                                             ; preds = %2560
  %2562 = getelementptr inbounds i32, ptr %3, i64 %19
  %2563 = load i32, ptr %2562, align 4, !tbaa !6
  %2564 = icmp eq i32 %2563, 0
  %2565 = icmp sgt i32 %5, 0
  br i1 %2564, label %2575, label %2566

2566:                                             ; preds = %2561
  br i1 %2565, label %2567, label %5686

2567:                                             ; preds = %2566
  %2568 = icmp sgt i32 %13, 1
  %2569 = icmp sgt i32 %13, 0
  %2570 = add i32 %13, -2
  %2571 = zext i32 %2570 to i64
  %2572 = zext i32 %13 to i64
  %2573 = add nuw i32 %5, 1
  %2574 = icmp eq i32 %13, 1
  br label %2726

2575:                                             ; preds = %2561
  br i1 %2565, label %2576, label %5686

2576:                                             ; preds = %2575
  %2577 = icmp sgt i32 %13, 1
  %2578 = icmp sgt i32 %13, 0
  %2579 = add i32 %13, -2
  %2580 = zext i32 %2579 to i64
  %2581 = zext i32 %13 to i64
  %2582 = add nuw i32 %5, 1
  %2583 = icmp eq i32 %13, 1
  br label %2584

2584:                                             ; preds = %2576, %2724
  %2585 = phi i32 [ 0, %2576 ], [ %2676, %2724 ]
  %2586 = phi double [ 0.000000e+00, %2576 ], [ %2675, %2724 ]
  %2587 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2577, label %2588, label %2657

2588:                                             ; preds = %2584, %2647
  %2589 = phi i32 [ %2656, %2647 ], [ 0, %2584 ]
  %2590 = phi i64 [ %2598, %2647 ], [ %2581, %2584 ]
  %2591 = phi i64 [ %2655, %2647 ], [ %2580, %2584 ]
  %2592 = phi i32 [ %2653, %2647 ], [ %2587, %2584 ]
  %2593 = sub i32 %2579, %2589
  %2594 = tail call i32 @llvm.smin.i32(i32 %2593, i32 0)
  %2595 = sub i32 %2593, %2594
  %2596 = zext i32 %2595 to i64
  %2597 = add nuw nsw i64 %2596, 1
  %2598 = add nsw i64 %2590, -1
  %2599 = icmp ult i32 %2595, 31
  br i1 %2599, label %2635, label %2600

2600:                                             ; preds = %2588
  %2601 = and i64 %2597, 8589934560
  %2602 = sub i64 %2591, %2601
  br label %2603

2603:                                             ; preds = %2603, %2600
  %2604 = phi i64 [ 0, %2600 ], [ %2627, %2603 ]
  %2605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2623, %2603 ]
  %2606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2624, %2603 ]
  %2607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2625, %2603 ]
  %2608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2626, %2603 ]
  %2609 = sub i64 %2591, %2604
  %2610 = getelementptr inbounds i32, ptr %9, i64 %2609
  %2611 = getelementptr inbounds i32, ptr %2610, i64 -7
  %2612 = load <8 x i32>, ptr %2611, align 4, !tbaa !6
  %2613 = shufflevector <8 x i32> %2612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2614 = getelementptr inbounds i32, ptr %2610, i64 -15
  %2615 = load <8 x i32>, ptr %2614, align 4, !tbaa !6
  %2616 = shufflevector <8 x i32> %2615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2617 = getelementptr inbounds i32, ptr %2610, i64 -23
  %2618 = load <8 x i32>, ptr %2617, align 4, !tbaa !6
  %2619 = shufflevector <8 x i32> %2618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2620 = getelementptr inbounds i32, ptr %2610, i64 -31
  %2621 = load <8 x i32>, ptr %2620, align 4, !tbaa !6
  %2622 = shufflevector <8 x i32> %2621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2623 = mul <8 x i32> %2613, %2605
  %2624 = mul <8 x i32> %2616, %2606
  %2625 = mul <8 x i32> %2619, %2607
  %2626 = mul <8 x i32> %2622, %2608
  %2627 = add nuw i64 %2604, 32
  %2628 = icmp eq i64 %2627, %2601
  br i1 %2628, label %2629, label %2603, !llvm.loop !285

2629:                                             ; preds = %2603
  %2630 = mul <8 x i32> %2624, %2623
  %2631 = mul <8 x i32> %2625, %2630
  %2632 = mul <8 x i32> %2626, %2631
  %2633 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2632)
  %2634 = icmp eq i64 %2597, %2601
  br i1 %2634, label %2647, label %2635

2635:                                             ; preds = %2588, %2629
  %2636 = phi i64 [ %2591, %2588 ], [ %2602, %2629 ]
  %2637 = phi i32 [ 1, %2588 ], [ %2633, %2629 ]
  br label %2638

2638:                                             ; preds = %2635, %2638
  %2639 = phi i64 [ %2644, %2638 ], [ %2636, %2635 ]
  %2640 = phi i32 [ %2643, %2638 ], [ %2637, %2635 ]
  %2641 = getelementptr inbounds i32, ptr %9, i64 %2639
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = mul nsw i32 %2642, %2640
  %2644 = add nsw i64 %2639, -1
  %2645 = trunc i64 %2639 to i32
  %2646 = icmp sgt i32 %2645, 0
  br i1 %2646, label %2638, label %2647, !llvm.loop !286

2647:                                             ; preds = %2638, %2629
  %2648 = phi i32 [ %2633, %2629 ], [ %2643, %2638 ]
  %2649 = and i64 %2598, 4294967295
  %2650 = getelementptr inbounds i32, ptr %6, i64 %2649
  %2651 = load i32, ptr %2650, align 4, !tbaa !6
  %2652 = mul nsw i32 %2651, %2648
  %2653 = add nsw i32 %2652, %2592
  %2654 = icmp sgt i64 %2590, 2
  %2655 = add nsw i64 %2591, -1
  %2656 = add i32 %2589, 1
  br i1 %2654, label %2588, label %2657, !llvm.loop !287

2657:                                             ; preds = %2647, %2584
  %2658 = phi i32 [ %2587, %2584 ], [ %2653, %2647 ]
  %2659 = sext i32 %2658 to i64
  %2660 = getelementptr inbounds double, ptr %2, i64 %2659
  %2661 = load double, ptr %2660, align 8, !tbaa !19
  %2662 = getelementptr inbounds i32, ptr %2549, i64 %2659
  %2663 = load i32, ptr %2662, align 4, !tbaa !6
  %2664 = load i32, ptr %2551, align 4, !tbaa !6
  %2665 = sitofp i32 %2664 to double
  %2666 = sitofp i32 %2663 to double
  %2667 = fmul fast double %2661, %2666
  %2668 = fcmp fast olt double %2667, 0.000000e+00
  %2669 = fneg fast double %2667
  %2670 = select nnan ninf i1 %2668, double %2669, double %2667
  %2671 = fmul fast double %2667, %2667
  %2672 = fmul fast double %2671, %2670
  %2673 = fadd fast double %2672, %2665
  %2674 = fptosi double %2673 to i32
  store i32 %2674, ptr %2551, align 4, !tbaa !6
  %2675 = fadd fast double %2661, %2586
  %2676 = add nuw nsw i32 %2585, 1
  br i1 %2578, label %2677, label %2724

2677:                                             ; preds = %2657
  %2678 = load i32, ptr %4, align 4, !tbaa !6
  %2679 = load i32, ptr %12, align 4, !tbaa !6
  %2680 = add nsw i32 %2679, -1
  %2681 = icmp slt i32 %2678, %2680
  br i1 %2681, label %2701, label %2682

2682:                                             ; preds = %2677
  %2683 = icmp eq i32 %2678, %2680
  br i1 %2683, label %2684, label %2717

2684:                                             ; preds = %2682
  store i32 0, ptr %4, align 4, !tbaa !6
  %2685 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2685, ptr %6, align 4, !tbaa !6
  br i1 %2583, label %2724, label %2686

2686:                                             ; preds = %2684, %2711
  %2687 = phi i64 [ %2715, %2711 ], [ 1, %2684 ]
  %2688 = getelementptr inbounds i32, ptr %4, i64 %2687
  %2689 = load i32, ptr %2688, align 4, !tbaa !6
  %2690 = getelementptr inbounds i32, ptr %12, i64 %2687
  %2691 = load i32, ptr %2690, align 4, !tbaa !6
  %2692 = add nsw i32 %2691, -1
  %2693 = icmp slt i32 %2689, %2692
  br i1 %2693, label %2694, label %2709

2694:                                             ; preds = %2686
  br i1 %2681, label %2701, label %2695

2695:                                             ; preds = %2694
  %2696 = getelementptr inbounds i32, ptr %7, i64 %2687
  %2697 = load i32, ptr %2696, align 4, !tbaa !6
  %2698 = getelementptr inbounds i32, ptr %6, i64 %2687
  %2699 = load i32, ptr %2698, align 4, !tbaa !6
  %2700 = add nsw i32 %2699, %2697
  store i32 %2700, ptr %2698, align 4, !tbaa !6
  br label %2719

2701:                                             ; preds = %2677, %2694
  %2702 = phi i32 [ %2689, %2694 ], [ %2678, %2677 ]
  %2703 = phi ptr [ %2688, %2694 ], [ %4, %2677 ]
  %2704 = phi i64 [ %2687, %2694 ], [ 0, %2677 ]
  %2705 = add nsw i32 %2702, 1
  store i32 %2705, ptr %2703, align 4, !tbaa !6
  %2706 = getelementptr inbounds i32, ptr %7, i64 %2704
  %2707 = load i32, ptr %2706, align 4, !tbaa !6
  %2708 = getelementptr inbounds i32, ptr %6, i64 %2704
  br label %2719

2709:                                             ; preds = %2686
  %2710 = icmp eq i32 %2689, %2692
  br i1 %2710, label %2711, label %2717

2711:                                             ; preds = %2709
  store i32 0, ptr %2688, align 4, !tbaa !6
  %2712 = getelementptr inbounds i32, ptr %8, i64 %2687
  %2713 = load i32, ptr %2712, align 4, !tbaa !6
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2687
  store i32 %2713, ptr %2714, align 4, !tbaa !6
  %2715 = add nuw nsw i64 %2687, 1
  %2716 = icmp eq i64 %2715, %2581
  br i1 %2716, label %2724, label %2686, !llvm.loop !288

2717:                                             ; preds = %2682, %2709
  %2718 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2719:                                             ; preds = %2695, %2701
  %2720 = phi ptr [ %2708, %2701 ], [ %2688, %2695 ]
  %2721 = phi i32 [ %2707, %2701 ], [ 1, %2695 ]
  %2722 = load i32, ptr %2720, align 4, !tbaa !6
  %2723 = add nsw i32 %2722, %2721
  store i32 %2723, ptr %2720, align 4, !tbaa !6
  br label %2724

2724:                                             ; preds = %2711, %2719, %2684, %2657
  %2725 = icmp eq i32 %2676, %5
  br i1 %2725, label %5686, label %2584, !llvm.loop !289

2726:                                             ; preds = %2567, %2868
  %2727 = phi i32 [ 0, %2567 ], [ %2817, %2868 ]
  %2728 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2568, label %2729, label %2798

2729:                                             ; preds = %2726, %2788
  %2730 = phi i32 [ %2797, %2788 ], [ 0, %2726 ]
  %2731 = phi i64 [ %2739, %2788 ], [ %2572, %2726 ]
  %2732 = phi i64 [ %2796, %2788 ], [ %2571, %2726 ]
  %2733 = phi i32 [ %2794, %2788 ], [ %2728, %2726 ]
  %2734 = sub i32 %2570, %2730
  %2735 = tail call i32 @llvm.smin.i32(i32 %2734, i32 0)
  %2736 = sub i32 %2734, %2735
  %2737 = zext i32 %2736 to i64
  %2738 = add nuw nsw i64 %2737, 1
  %2739 = add nsw i64 %2731, -1
  %2740 = icmp ult i32 %2736, 31
  br i1 %2740, label %2776, label %2741

2741:                                             ; preds = %2729
  %2742 = and i64 %2738, 8589934560
  %2743 = sub i64 %2732, %2742
  br label %2744

2744:                                             ; preds = %2744, %2741
  %2745 = phi i64 [ 0, %2741 ], [ %2768, %2744 ]
  %2746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2764, %2744 ]
  %2747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2765, %2744 ]
  %2748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2766, %2744 ]
  %2749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2767, %2744 ]
  %2750 = sub i64 %2732, %2745
  %2751 = getelementptr inbounds i32, ptr %11, i64 %2750
  %2752 = getelementptr inbounds i32, ptr %2751, i64 -7
  %2753 = load <8 x i32>, ptr %2752, align 4, !tbaa !6
  %2754 = shufflevector <8 x i32> %2753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2755 = getelementptr inbounds i32, ptr %2751, i64 -15
  %2756 = load <8 x i32>, ptr %2755, align 4, !tbaa !6
  %2757 = shufflevector <8 x i32> %2756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2758 = getelementptr inbounds i32, ptr %2751, i64 -23
  %2759 = load <8 x i32>, ptr %2758, align 4, !tbaa !6
  %2760 = shufflevector <8 x i32> %2759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2761 = getelementptr inbounds i32, ptr %2751, i64 -31
  %2762 = load <8 x i32>, ptr %2761, align 4, !tbaa !6
  %2763 = shufflevector <8 x i32> %2762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2764 = mul <8 x i32> %2754, %2746
  %2765 = mul <8 x i32> %2757, %2747
  %2766 = mul <8 x i32> %2760, %2748
  %2767 = mul <8 x i32> %2763, %2749
  %2768 = add nuw i64 %2745, 32
  %2769 = icmp eq i64 %2768, %2742
  br i1 %2769, label %2770, label %2744, !llvm.loop !290

2770:                                             ; preds = %2744
  %2771 = mul <8 x i32> %2765, %2764
  %2772 = mul <8 x i32> %2766, %2771
  %2773 = mul <8 x i32> %2767, %2772
  %2774 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2773)
  %2775 = icmp eq i64 %2738, %2742
  br i1 %2775, label %2788, label %2776

2776:                                             ; preds = %2729, %2770
  %2777 = phi i64 [ %2732, %2729 ], [ %2743, %2770 ]
  %2778 = phi i32 [ 1, %2729 ], [ %2774, %2770 ]
  br label %2779

2779:                                             ; preds = %2776, %2779
  %2780 = phi i64 [ %2785, %2779 ], [ %2777, %2776 ]
  %2781 = phi i32 [ %2784, %2779 ], [ %2778, %2776 ]
  %2782 = getelementptr inbounds i32, ptr %11, i64 %2780
  %2783 = load i32, ptr %2782, align 4, !tbaa !6
  %2784 = mul nsw i32 %2783, %2781
  %2785 = add nsw i64 %2780, -1
  %2786 = trunc i64 %2780 to i32
  %2787 = icmp sgt i32 %2786, 0
  br i1 %2787, label %2779, label %2788, !llvm.loop !291

2788:                                             ; preds = %2779, %2770
  %2789 = phi i32 [ %2774, %2770 ], [ %2784, %2779 ]
  %2790 = and i64 %2739, 4294967295
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2790
  %2792 = load i32, ptr %2791, align 4, !tbaa !6
  %2793 = mul nsw i32 %2792, %2789
  %2794 = add nsw i32 %2793, %2733
  %2795 = icmp sgt i64 %2731, 2
  %2796 = add nsw i64 %2732, -1
  %2797 = add i32 %2730, 1
  br i1 %2795, label %2729, label %2798, !llvm.loop !292

2798:                                             ; preds = %2788, %2726
  %2799 = phi i32 [ %2728, %2726 ], [ %2794, %2788 ]
  %2800 = icmp slt i32 %2799, %5
  br i1 %2800, label %2803, label %2801

2801:                                             ; preds = %2798
  %2802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2803:                                             ; preds = %2798
  %2804 = sext i32 %2799 to i64
  %2805 = getelementptr inbounds i32, ptr %2549, i64 %2804
  %2806 = load i32, ptr %2805, align 4, !tbaa !6
  %2807 = load i32, ptr %2551, align 4, !tbaa !6
  %2808 = sitofp i32 %2807 to double
  %2809 = sitofp i32 %2806 to double
  %2810 = icmp slt i32 %2806, 0
  %2811 = fneg fast double %2809
  %2812 = select i1 %2810, double %2811, double %2809
  %2813 = fmul fast double %2809, %2809
  %2814 = fmul fast double %2813, %2812
  %2815 = fadd fast double %2814, %2808
  %2816 = fptosi double %2815 to i32
  store i32 %2816, ptr %2551, align 4, !tbaa !6
  %2817 = add nuw nsw i32 %2727, 1
  br i1 %2569, label %2818, label %2868

2818:                                             ; preds = %2803
  %2819 = load i32, ptr %4, align 4, !tbaa !6
  %2820 = load i32, ptr %12, align 4, !tbaa !6
  %2821 = add nsw i32 %2820, -1
  %2822 = icmp slt i32 %2819, %2821
  br i1 %2822, label %2845, label %2823

2823:                                             ; preds = %2818
  %2824 = icmp eq i32 %2819, %2821
  br i1 %2824, label %2825, label %2861

2825:                                             ; preds = %2823
  store i32 0, ptr %4, align 4, !tbaa !6
  %2826 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2826, ptr %6, align 4, !tbaa !6
  br i1 %2574, label %2868, label %2827

2827:                                             ; preds = %2825, %2855
  %2828 = phi i64 [ %2859, %2855 ], [ 1, %2825 ]
  %2829 = getelementptr inbounds i32, ptr %4, i64 %2828
  %2830 = load i32, ptr %2829, align 4, !tbaa !6
  %2831 = getelementptr inbounds i32, ptr %12, i64 %2828
  %2832 = load i32, ptr %2831, align 4, !tbaa !6
  %2833 = add nsw i32 %2832, -1
  %2834 = icmp slt i32 %2830, %2833
  br i1 %2834, label %2835, label %2853

2835:                                             ; preds = %2827
  br i1 %2822, label %2845, label %2836

2836:                                             ; preds = %2835
  %2837 = shl i64 %2828, 32
  %2838 = add i64 %2837, -4294967296
  %2839 = ashr exact i64 %2838, 32
  %2840 = getelementptr inbounds i32, ptr %7, i64 %2839
  %2841 = load i32, ptr %2840, align 4, !tbaa !6
  %2842 = getelementptr inbounds i32, ptr %6, i64 %2828
  %2843 = load i32, ptr %2842, align 4, !tbaa !6
  %2844 = add nsw i32 %2843, %2841
  store i32 %2844, ptr %2842, align 4, !tbaa !6
  br label %2863

2845:                                             ; preds = %2818, %2835
  %2846 = phi i32 [ %2830, %2835 ], [ %2819, %2818 ]
  %2847 = phi ptr [ %2829, %2835 ], [ %4, %2818 ]
  %2848 = phi i64 [ %2828, %2835 ], [ 0, %2818 ]
  %2849 = add nsw i32 %2846, 1
  store i32 %2849, ptr %2847, align 4, !tbaa !6
  %2850 = getelementptr inbounds i32, ptr %7, i64 %2848
  %2851 = load i32, ptr %2850, align 4, !tbaa !6
  %2852 = getelementptr inbounds i32, ptr %6, i64 %2848
  br label %2863

2853:                                             ; preds = %2827
  %2854 = icmp eq i32 %2830, %2833
  br i1 %2854, label %2855, label %2861

2855:                                             ; preds = %2853
  store i32 0, ptr %2829, align 4, !tbaa !6
  %2856 = getelementptr inbounds i32, ptr %8, i64 %2828
  %2857 = load i32, ptr %2856, align 4, !tbaa !6
  %2858 = getelementptr inbounds i32, ptr %6, i64 %2828
  store i32 %2857, ptr %2858, align 4, !tbaa !6
  %2859 = add nuw nsw i64 %2828, 1
  %2860 = icmp eq i64 %2859, %2572
  br i1 %2860, label %2868, label %2827, !llvm.loop !293

2861:                                             ; preds = %2823, %2853
  %2862 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2863:                                             ; preds = %2836, %2845
  %2864 = phi ptr [ %2852, %2845 ], [ %2829, %2836 ]
  %2865 = phi i32 [ %2851, %2845 ], [ 1, %2836 ]
  %2866 = load i32, ptr %2864, align 4, !tbaa !6
  %2867 = add nsw i32 %2866, %2865
  store i32 %2867, ptr %2864, align 4, !tbaa !6
  br label %2868

2868:                                             ; preds = %2855, %2863, %2825, %2803
  %2869 = icmp eq i32 %2817, %5
  br i1 %2869, label %5686, label %2726, !llvm.loop !294

2870:                                             ; preds = %2560
  %2871 = getelementptr inbounds i32, ptr %3, i64 %19
  %2872 = load i32, ptr %2871, align 4, !tbaa !6
  %2873 = icmp eq i32 %2872, 0
  %2874 = icmp sgt i32 %5, 0
  br i1 %2873, label %2884, label %2875

2875:                                             ; preds = %2870
  br i1 %2874, label %2876, label %5686

2876:                                             ; preds = %2875
  %2877 = icmp sgt i32 %13, 1
  %2878 = icmp sgt i32 %13, 0
  %2879 = add i32 %13, -2
  %2880 = zext i32 %2879 to i64
  %2881 = zext i32 %13 to i64
  %2882 = add nuw i32 %5, 1
  %2883 = icmp eq i32 %13, 1
  br label %3029

2884:                                             ; preds = %2870
  br i1 %2874, label %2885, label %5686

2885:                                             ; preds = %2884
  %2886 = icmp sgt i32 %13, 1
  %2887 = icmp sgt i32 %13, 0
  %2888 = add i32 %13, -2
  %2889 = zext i32 %2888 to i64
  %2890 = zext i32 %13 to i64
  %2891 = add nuw i32 %5, 1
  %2892 = icmp eq i32 %13, 1
  br label %2893

2893:                                             ; preds = %2885, %3027
  %2894 = phi i32 [ 0, %2885 ], [ %2979, %3027 ]
  %2895 = phi double [ 0.000000e+00, %2885 ], [ %2978, %3027 ]
  %2896 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2886, label %2897, label %2966

2897:                                             ; preds = %2893, %2956
  %2898 = phi i32 [ %2965, %2956 ], [ 0, %2893 ]
  %2899 = phi i64 [ %2907, %2956 ], [ %2890, %2893 ]
  %2900 = phi i64 [ %2964, %2956 ], [ %2889, %2893 ]
  %2901 = phi i32 [ %2962, %2956 ], [ %2896, %2893 ]
  %2902 = sub i32 %2888, %2898
  %2903 = tail call i32 @llvm.smin.i32(i32 %2902, i32 0)
  %2904 = sub i32 %2902, %2903
  %2905 = zext i32 %2904 to i64
  %2906 = add nuw nsw i64 %2905, 1
  %2907 = add nsw i64 %2899, -1
  %2908 = icmp ult i32 %2904, 31
  br i1 %2908, label %2944, label %2909

2909:                                             ; preds = %2897
  %2910 = and i64 %2906, 8589934560
  %2911 = sub i64 %2900, %2910
  br label %2912

2912:                                             ; preds = %2912, %2909
  %2913 = phi i64 [ 0, %2909 ], [ %2936, %2912 ]
  %2914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2932, %2912 ]
  %2915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2933, %2912 ]
  %2916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2934, %2912 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2935, %2912 ]
  %2918 = sub i64 %2900, %2913
  %2919 = getelementptr inbounds i32, ptr %9, i64 %2918
  %2920 = getelementptr inbounds i32, ptr %2919, i64 -7
  %2921 = load <8 x i32>, ptr %2920, align 4, !tbaa !6
  %2922 = shufflevector <8 x i32> %2921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2923 = getelementptr inbounds i32, ptr %2919, i64 -15
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !6
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2919, i64 -23
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !6
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2919, i64 -31
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !6
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = mul <8 x i32> %2922, %2914
  %2933 = mul <8 x i32> %2925, %2915
  %2934 = mul <8 x i32> %2928, %2916
  %2935 = mul <8 x i32> %2931, %2917
  %2936 = add nuw i64 %2913, 32
  %2937 = icmp eq i64 %2936, %2910
  br i1 %2937, label %2938, label %2912, !llvm.loop !295

2938:                                             ; preds = %2912
  %2939 = mul <8 x i32> %2933, %2932
  %2940 = mul <8 x i32> %2934, %2939
  %2941 = mul <8 x i32> %2935, %2940
  %2942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2941)
  %2943 = icmp eq i64 %2906, %2910
  br i1 %2943, label %2956, label %2944

2944:                                             ; preds = %2897, %2938
  %2945 = phi i64 [ %2900, %2897 ], [ %2911, %2938 ]
  %2946 = phi i32 [ 1, %2897 ], [ %2942, %2938 ]
  br label %2947

2947:                                             ; preds = %2944, %2947
  %2948 = phi i64 [ %2953, %2947 ], [ %2945, %2944 ]
  %2949 = phi i32 [ %2952, %2947 ], [ %2946, %2944 ]
  %2950 = getelementptr inbounds i32, ptr %9, i64 %2948
  %2951 = load i32, ptr %2950, align 4, !tbaa !6
  %2952 = mul nsw i32 %2951, %2949
  %2953 = add nsw i64 %2948, -1
  %2954 = trunc i64 %2948 to i32
  %2955 = icmp sgt i32 %2954, 0
  br i1 %2955, label %2947, label %2956, !llvm.loop !296

2956:                                             ; preds = %2947, %2938
  %2957 = phi i32 [ %2942, %2938 ], [ %2952, %2947 ]
  %2958 = and i64 %2907, 4294967295
  %2959 = getelementptr inbounds i32, ptr %6, i64 %2958
  %2960 = load i32, ptr %2959, align 4, !tbaa !6
  %2961 = mul nsw i32 %2960, %2957
  %2962 = add nsw i32 %2961, %2901
  %2963 = icmp sgt i64 %2899, 2
  %2964 = add nsw i64 %2900, -1
  %2965 = add i32 %2898, 1
  br i1 %2963, label %2897, label %2966, !llvm.loop !297

2966:                                             ; preds = %2956, %2893
  %2967 = phi i32 [ %2896, %2893 ], [ %2962, %2956 ]
  %2968 = sext i32 %2967 to i64
  %2969 = getelementptr inbounds i32, ptr %2549, i64 %2968
  %2970 = load i32, ptr %2969, align 4, !tbaa !6
  %2971 = load i32, ptr %2551, align 4, !tbaa !6
  %2972 = icmp slt i32 %2970, 0
  %2973 = mul nsw i32 %2970, %2970
  %2974 = sub nsw i32 0, %2973
  %2975 = select i1 %2972, i32 %2974, i32 %2973
  %2976 = mul i32 %2975, %2970
  %2977 = add nsw i32 %2976, %2971
  store i32 %2977, ptr %2551, align 4, !tbaa !6
  %2978 = fadd fast double %2895, 1.000000e+00
  %2979 = add nuw nsw i32 %2894, 1
  br i1 %2887, label %2980, label %3027

2980:                                             ; preds = %2966
  %2981 = load i32, ptr %4, align 4, !tbaa !6
  %2982 = load i32, ptr %12, align 4, !tbaa !6
  %2983 = add nsw i32 %2982, -1
  %2984 = icmp slt i32 %2981, %2983
  br i1 %2984, label %3004, label %2985

2985:                                             ; preds = %2980
  %2986 = icmp eq i32 %2981, %2983
  br i1 %2986, label %2987, label %3020

2987:                                             ; preds = %2985
  store i32 0, ptr %4, align 4, !tbaa !6
  %2988 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2988, ptr %6, align 4, !tbaa !6
  br i1 %2892, label %3027, label %2989

2989:                                             ; preds = %2987, %3014
  %2990 = phi i64 [ %3018, %3014 ], [ 1, %2987 ]
  %2991 = getelementptr inbounds i32, ptr %4, i64 %2990
  %2992 = load i32, ptr %2991, align 4, !tbaa !6
  %2993 = getelementptr inbounds i32, ptr %12, i64 %2990
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = add nsw i32 %2994, -1
  %2996 = icmp slt i32 %2992, %2995
  br i1 %2996, label %2997, label %3012

2997:                                             ; preds = %2989
  br i1 %2984, label %3004, label %2998

2998:                                             ; preds = %2997
  %2999 = getelementptr inbounds i32, ptr %7, i64 %2990
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2990
  %3002 = load i32, ptr %3001, align 4, !tbaa !6
  %3003 = add nsw i32 %3002, %3000
  store i32 %3003, ptr %3001, align 4, !tbaa !6
  br label %3022

3004:                                             ; preds = %2980, %2997
  %3005 = phi i32 [ %2992, %2997 ], [ %2981, %2980 ]
  %3006 = phi ptr [ %2991, %2997 ], [ %4, %2980 ]
  %3007 = phi i64 [ %2990, %2997 ], [ 0, %2980 ]
  %3008 = add nsw i32 %3005, 1
  store i32 %3008, ptr %3006, align 4, !tbaa !6
  %3009 = getelementptr inbounds i32, ptr %7, i64 %3007
  %3010 = load i32, ptr %3009, align 4, !tbaa !6
  %3011 = getelementptr inbounds i32, ptr %6, i64 %3007
  br label %3022

3012:                                             ; preds = %2989
  %3013 = icmp eq i32 %2992, %2995
  br i1 %3013, label %3014, label %3020

3014:                                             ; preds = %3012
  store i32 0, ptr %2991, align 4, !tbaa !6
  %3015 = getelementptr inbounds i32, ptr %8, i64 %2990
  %3016 = load i32, ptr %3015, align 4, !tbaa !6
  %3017 = getelementptr inbounds i32, ptr %6, i64 %2990
  store i32 %3016, ptr %3017, align 4, !tbaa !6
  %3018 = add nuw nsw i64 %2990, 1
  %3019 = icmp eq i64 %3018, %2890
  br i1 %3019, label %3027, label %2989, !llvm.loop !298

3020:                                             ; preds = %2985, %3012
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3022:                                             ; preds = %2998, %3004
  %3023 = phi ptr [ %3011, %3004 ], [ %2991, %2998 ]
  %3024 = phi i32 [ %3010, %3004 ], [ 1, %2998 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3014, %3022, %2987, %2966
  %3028 = icmp eq i32 %2979, %5
  br i1 %3028, label %5686, label %2893, !llvm.loop !299

3029:                                             ; preds = %2876, %3168
  %3030 = phi i32 [ 0, %2876 ], [ %3117, %3168 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2877, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2881, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2880, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2879, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !300

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !301

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !302

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3106:                                             ; preds = %3101
  %3107 = sext i32 %3102 to i64
  %3108 = getelementptr inbounds i32, ptr %2549, i64 %3107
  %3109 = load i32, ptr %3108, align 4, !tbaa !6
  %3110 = load i32, ptr %2551, align 4, !tbaa !6
  %3111 = icmp slt i32 %3109, 0
  %3112 = mul nsw i32 %3109, %3109
  %3113 = sub nsw i32 0, %3112
  %3114 = select i1 %3111, i32 %3113, i32 %3112
  %3115 = mul i32 %3114, %3109
  %3116 = add nsw i32 %3115, %3110
  store i32 %3116, ptr %2551, align 4, !tbaa !6
  %3117 = add nuw nsw i32 %3030, 1
  br i1 %2878, label %3118, label %3168

3118:                                             ; preds = %3106
  %3119 = load i32, ptr %4, align 4, !tbaa !6
  %3120 = load i32, ptr %12, align 4, !tbaa !6
  %3121 = add nsw i32 %3120, -1
  %3122 = icmp slt i32 %3119, %3121
  br i1 %3122, label %3145, label %3123

3123:                                             ; preds = %3118
  %3124 = icmp eq i32 %3119, %3121
  br i1 %3124, label %3125, label %3161

3125:                                             ; preds = %3123
  store i32 0, ptr %4, align 4, !tbaa !6
  %3126 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3126, ptr %6, align 4, !tbaa !6
  br i1 %2883, label %3168, label %3127

3127:                                             ; preds = %3125, %3155
  %3128 = phi i64 [ %3159, %3155 ], [ 1, %3125 ]
  %3129 = getelementptr inbounds i32, ptr %4, i64 %3128
  %3130 = load i32, ptr %3129, align 4, !tbaa !6
  %3131 = getelementptr inbounds i32, ptr %12, i64 %3128
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = add nsw i32 %3132, -1
  %3134 = icmp slt i32 %3130, %3133
  br i1 %3134, label %3135, label %3153

3135:                                             ; preds = %3127
  br i1 %3122, label %3145, label %3136

3136:                                             ; preds = %3135
  %3137 = shl i64 %3128, 32
  %3138 = add i64 %3137, -4294967296
  %3139 = ashr exact i64 %3138, 32
  %3140 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3141 = load i32, ptr %3140, align 4, !tbaa !6
  %3142 = getelementptr inbounds i32, ptr %6, i64 %3128
  %3143 = load i32, ptr %3142, align 4, !tbaa !6
  %3144 = add nsw i32 %3143, %3141
  store i32 %3144, ptr %3142, align 4, !tbaa !6
  br label %3163

3145:                                             ; preds = %3118, %3135
  %3146 = phi i32 [ %3130, %3135 ], [ %3119, %3118 ]
  %3147 = phi ptr [ %3129, %3135 ], [ %4, %3118 ]
  %3148 = phi i64 [ %3128, %3135 ], [ 0, %3118 ]
  %3149 = add nsw i32 %3146, 1
  store i32 %3149, ptr %3147, align 4, !tbaa !6
  %3150 = getelementptr inbounds i32, ptr %7, i64 %3148
  %3151 = load i32, ptr %3150, align 4, !tbaa !6
  %3152 = getelementptr inbounds i32, ptr %6, i64 %3148
  br label %3163

3153:                                             ; preds = %3127
  %3154 = icmp eq i32 %3130, %3133
  br i1 %3154, label %3155, label %3161

3155:                                             ; preds = %3153
  store i32 0, ptr %3129, align 4, !tbaa !6
  %3156 = getelementptr inbounds i32, ptr %8, i64 %3128
  %3157 = load i32, ptr %3156, align 4, !tbaa !6
  %3158 = getelementptr inbounds i32, ptr %6, i64 %3128
  store i32 %3157, ptr %3158, align 4, !tbaa !6
  %3159 = add nuw nsw i64 %3128, 1
  %3160 = icmp eq i64 %3159, %2881
  br i1 %3160, label %3168, label %3127, !llvm.loop !303

3161:                                             ; preds = %3123, %3153
  %3162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3163:                                             ; preds = %3136, %3145
  %3164 = phi ptr [ %3152, %3145 ], [ %3129, %3136 ]
  %3165 = phi i32 [ %3151, %3145 ], [ 1, %3136 ]
  %3166 = load i32, ptr %3164, align 4, !tbaa !6
  %3167 = add nsw i32 %3166, %3165
  store i32 %3167, ptr %3164, align 4, !tbaa !6
  br label %3168

3168:                                             ; preds = %3155, %3163, %3125, %3106
  %3169 = icmp eq i32 %3117, %5
  br i1 %3169, label %5686, label %3029, !llvm.loop !304

3170:                                             ; preds = %2560
  %3171 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 355, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

3172:                                             ; preds = %18
  %3173 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3174 = load ptr, ptr %3173, align 8, !tbaa !10
  %3175 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3176 = load ptr, ptr %3175, align 8, !tbaa !10
  store i64 0, ptr %3176, align 8, !tbaa !121
  %3177 = icmp eq i32 %13, 0
  br i1 %3177, label %3178, label %3186

3178:                                             ; preds = %3172
  %3179 = load i32, ptr %3174, align 4, !tbaa !6
  %3180 = sext i32 %3179 to i64
  %3181 = icmp slt i32 %3179, 0
  %3182 = mul nsw i64 %3180, %3180
  %3183 = sub nsw i64 0, %3182
  %3184 = select i1 %3181, i64 %3183, i64 %3182
  %3185 = mul i64 %3184, %3180
  store i64 %3185, ptr %3176, align 8, !tbaa !121
  br label %5686

3186:                                             ; preds = %3172
  switch i32 %1, label %3798 [
    i32 1, label %3187
    i32 0, label %3496
  ]

3187:                                             ; preds = %3186
  %3188 = getelementptr inbounds i32, ptr %3, i64 %19
  %3189 = load i32, ptr %3188, align 4, !tbaa !6
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp sgt i32 %5, 0
  br i1 %3190, label %3201, label %3192

3192:                                             ; preds = %3187
  br i1 %3191, label %3193, label %5686

3193:                                             ; preds = %3192
  %3194 = icmp sgt i32 %13, 1
  %3195 = icmp sgt i32 %13, 0
  %3196 = add i32 %13, -2
  %3197 = zext i32 %3196 to i64
  %3198 = zext i32 %13 to i64
  %3199 = add nuw i32 %5, 1
  %3200 = icmp eq i32 %13, 1
  br label %3352

3201:                                             ; preds = %3187
  br i1 %3191, label %3202, label %5686

3202:                                             ; preds = %3201
  %3203 = icmp sgt i32 %13, 1
  %3204 = icmp sgt i32 %13, 0
  %3205 = add i32 %13, -2
  %3206 = zext i32 %3205 to i64
  %3207 = zext i32 %13 to i64
  %3208 = add nuw i32 %5, 1
  %3209 = icmp eq i32 %13, 1
  br label %3210

3210:                                             ; preds = %3202, %3350
  %3211 = phi i64 [ 0, %3202 ], [ %3300, %3350 ]
  %3212 = phi i32 [ 0, %3202 ], [ %3302, %3350 ]
  %3213 = phi double [ 0.000000e+00, %3202 ], [ %3301, %3350 ]
  %3214 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3203, label %3215, label %3284

3215:                                             ; preds = %3210, %3274
  %3216 = phi i32 [ %3283, %3274 ], [ 0, %3210 ]
  %3217 = phi i64 [ %3225, %3274 ], [ %3207, %3210 ]
  %3218 = phi i64 [ %3282, %3274 ], [ %3206, %3210 ]
  %3219 = phi i32 [ %3280, %3274 ], [ %3214, %3210 ]
  %3220 = sub i32 %3205, %3216
  %3221 = tail call i32 @llvm.smin.i32(i32 %3220, i32 0)
  %3222 = sub i32 %3220, %3221
  %3223 = zext i32 %3222 to i64
  %3224 = add nuw nsw i64 %3223, 1
  %3225 = add nsw i64 %3217, -1
  %3226 = icmp ult i32 %3222, 31
  br i1 %3226, label %3262, label %3227

3227:                                             ; preds = %3215
  %3228 = and i64 %3224, 8589934560
  %3229 = sub i64 %3218, %3228
  br label %3230

3230:                                             ; preds = %3230, %3227
  %3231 = phi i64 [ 0, %3227 ], [ %3254, %3230 ]
  %3232 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3250, %3230 ]
  %3233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3251, %3230 ]
  %3234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3252, %3230 ]
  %3235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3253, %3230 ]
  %3236 = sub i64 %3218, %3231
  %3237 = getelementptr inbounds i32, ptr %9, i64 %3236
  %3238 = getelementptr inbounds i32, ptr %3237, i64 -7
  %3239 = load <8 x i32>, ptr %3238, align 4, !tbaa !6
  %3240 = shufflevector <8 x i32> %3239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3241 = getelementptr inbounds i32, ptr %3237, i64 -15
  %3242 = load <8 x i32>, ptr %3241, align 4, !tbaa !6
  %3243 = shufflevector <8 x i32> %3242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3244 = getelementptr inbounds i32, ptr %3237, i64 -23
  %3245 = load <8 x i32>, ptr %3244, align 4, !tbaa !6
  %3246 = shufflevector <8 x i32> %3245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3247 = getelementptr inbounds i32, ptr %3237, i64 -31
  %3248 = load <8 x i32>, ptr %3247, align 4, !tbaa !6
  %3249 = shufflevector <8 x i32> %3248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3250 = mul <8 x i32> %3240, %3232
  %3251 = mul <8 x i32> %3243, %3233
  %3252 = mul <8 x i32> %3246, %3234
  %3253 = mul <8 x i32> %3249, %3235
  %3254 = add nuw i64 %3231, 32
  %3255 = icmp eq i64 %3254, %3228
  br i1 %3255, label %3256, label %3230, !llvm.loop !305

3256:                                             ; preds = %3230
  %3257 = mul <8 x i32> %3251, %3250
  %3258 = mul <8 x i32> %3252, %3257
  %3259 = mul <8 x i32> %3253, %3258
  %3260 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3259)
  %3261 = icmp eq i64 %3224, %3228
  br i1 %3261, label %3274, label %3262

3262:                                             ; preds = %3215, %3256
  %3263 = phi i64 [ %3218, %3215 ], [ %3229, %3256 ]
  %3264 = phi i32 [ 1, %3215 ], [ %3260, %3256 ]
  br label %3265

3265:                                             ; preds = %3262, %3265
  %3266 = phi i64 [ %3271, %3265 ], [ %3263, %3262 ]
  %3267 = phi i32 [ %3270, %3265 ], [ %3264, %3262 ]
  %3268 = getelementptr inbounds i32, ptr %9, i64 %3266
  %3269 = load i32, ptr %3268, align 4, !tbaa !6
  %3270 = mul nsw i32 %3269, %3267
  %3271 = add nsw i64 %3266, -1
  %3272 = trunc i64 %3266 to i32
  %3273 = icmp sgt i32 %3272, 0
  br i1 %3273, label %3265, label %3274, !llvm.loop !306

3274:                                             ; preds = %3265, %3256
  %3275 = phi i32 [ %3260, %3256 ], [ %3270, %3265 ]
  %3276 = and i64 %3225, 4294967295
  %3277 = getelementptr inbounds i32, ptr %6, i64 %3276
  %3278 = load i32, ptr %3277, align 4, !tbaa !6
  %3279 = mul nsw i32 %3278, %3275
  %3280 = add nsw i32 %3279, %3219
  %3281 = icmp sgt i64 %3217, 2
  %3282 = add nsw i64 %3218, -1
  %3283 = add i32 %3216, 1
  br i1 %3281, label %3215, label %3284, !llvm.loop !307

3284:                                             ; preds = %3274, %3210
  %3285 = phi i32 [ %3214, %3210 ], [ %3280, %3274 ]
  %3286 = sext i32 %3285 to i64
  %3287 = getelementptr inbounds double, ptr %2, i64 %3286
  %3288 = load double, ptr %3287, align 8, !tbaa !19
  %3289 = getelementptr inbounds i32, ptr %3174, i64 %3286
  %3290 = load i32, ptr %3289, align 4, !tbaa !6
  %3291 = sitofp i64 %3211 to double
  %3292 = sitofp i32 %3290 to double
  %3293 = fmul fast double %3288, %3292
  %3294 = fcmp fast olt double %3293, 0.000000e+00
  %3295 = fneg fast double %3293
  %3296 = select nnan ninf i1 %3294, double %3295, double %3293
  %3297 = fmul fast double %3293, %3293
  %3298 = fmul fast double %3297, %3296
  %3299 = fadd fast double %3298, %3291
  %3300 = fptosi double %3299 to i64
  %3301 = fadd fast double %3288, %3213
  %3302 = add nuw nsw i32 %3212, 1
  br i1 %3204, label %3303, label %3350

3303:                                             ; preds = %3284
  %3304 = load i32, ptr %4, align 4, !tbaa !6
  %3305 = load i32, ptr %12, align 4, !tbaa !6
  %3306 = add nsw i32 %3305, -1
  %3307 = icmp slt i32 %3304, %3306
  br i1 %3307, label %3327, label %3308

3308:                                             ; preds = %3303
  %3309 = icmp eq i32 %3304, %3306
  br i1 %3309, label %3310, label %3343

3310:                                             ; preds = %3308
  store i32 0, ptr %4, align 4, !tbaa !6
  %3311 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3311, ptr %6, align 4, !tbaa !6
  br i1 %3209, label %3350, label %3312

3312:                                             ; preds = %3310, %3337
  %3313 = phi i64 [ %3341, %3337 ], [ 1, %3310 ]
  %3314 = getelementptr inbounds i32, ptr %4, i64 %3313
  %3315 = load i32, ptr %3314, align 4, !tbaa !6
  %3316 = getelementptr inbounds i32, ptr %12, i64 %3313
  %3317 = load i32, ptr %3316, align 4, !tbaa !6
  %3318 = add nsw i32 %3317, -1
  %3319 = icmp slt i32 %3315, %3318
  br i1 %3319, label %3320, label %3335

3320:                                             ; preds = %3312
  br i1 %3307, label %3327, label %3321

3321:                                             ; preds = %3320
  %3322 = getelementptr inbounds i32, ptr %7, i64 %3313
  %3323 = load i32, ptr %3322, align 4, !tbaa !6
  %3324 = getelementptr inbounds i32, ptr %6, i64 %3313
  %3325 = load i32, ptr %3324, align 4, !tbaa !6
  %3326 = add nsw i32 %3325, %3323
  store i32 %3326, ptr %3324, align 4, !tbaa !6
  br label %3345

3327:                                             ; preds = %3303, %3320
  %3328 = phi i32 [ %3315, %3320 ], [ %3304, %3303 ]
  %3329 = phi ptr [ %3314, %3320 ], [ %4, %3303 ]
  %3330 = phi i64 [ %3313, %3320 ], [ 0, %3303 ]
  %3331 = add nsw i32 %3328, 1
  store i32 %3331, ptr %3329, align 4, !tbaa !6
  %3332 = getelementptr inbounds i32, ptr %7, i64 %3330
  %3333 = load i32, ptr %3332, align 4, !tbaa !6
  %3334 = getelementptr inbounds i32, ptr %6, i64 %3330
  br label %3345

3335:                                             ; preds = %3312
  %3336 = icmp eq i32 %3315, %3318
  br i1 %3336, label %3337, label %3343

3337:                                             ; preds = %3335
  store i32 0, ptr %3314, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %8, i64 %3313
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = getelementptr inbounds i32, ptr %6, i64 %3313
  store i32 %3339, ptr %3340, align 4, !tbaa !6
  %3341 = add nuw nsw i64 %3313, 1
  %3342 = icmp eq i64 %3341, %3207
  br i1 %3342, label %3350, label %3312, !llvm.loop !308

3343:                                             ; preds = %3308, %3335
  store i64 %3300, ptr %3176, align 8, !tbaa !121
  %3344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3345:                                             ; preds = %3321, %3327
  %3346 = phi ptr [ %3334, %3327 ], [ %3314, %3321 ]
  %3347 = phi i32 [ %3333, %3327 ], [ 1, %3321 ]
  %3348 = load i32, ptr %3346, align 4, !tbaa !6
  %3349 = add nsw i32 %3348, %3347
  store i32 %3349, ptr %3346, align 4, !tbaa !6
  br label %3350

3350:                                             ; preds = %3337, %3345, %3310, %3284
  %3351 = icmp eq i32 %3302, %5
  br i1 %3351, label %5680, label %3210, !llvm.loop !309

3352:                                             ; preds = %3193, %3494
  %3353 = phi i64 [ 0, %3193 ], [ %3442, %3494 ]
  %3354 = phi i32 [ 0, %3193 ], [ %3443, %3494 ]
  %3355 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3194, label %3356, label %3425

3356:                                             ; preds = %3352, %3415
  %3357 = phi i32 [ %3424, %3415 ], [ 0, %3352 ]
  %3358 = phi i64 [ %3366, %3415 ], [ %3198, %3352 ]
  %3359 = phi i64 [ %3423, %3415 ], [ %3197, %3352 ]
  %3360 = phi i32 [ %3421, %3415 ], [ %3355, %3352 ]
  %3361 = sub i32 %3196, %3357
  %3362 = tail call i32 @llvm.smin.i32(i32 %3361, i32 0)
  %3363 = sub i32 %3361, %3362
  %3364 = zext i32 %3363 to i64
  %3365 = add nuw nsw i64 %3364, 1
  %3366 = add nsw i64 %3358, -1
  %3367 = icmp ult i32 %3363, 31
  br i1 %3367, label %3403, label %3368

3368:                                             ; preds = %3356
  %3369 = and i64 %3365, 8589934560
  %3370 = sub i64 %3359, %3369
  br label %3371

3371:                                             ; preds = %3371, %3368
  %3372 = phi i64 [ 0, %3368 ], [ %3395, %3371 ]
  %3373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3391, %3371 ]
  %3374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3392, %3371 ]
  %3375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3393, %3371 ]
  %3376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3394, %3371 ]
  %3377 = sub i64 %3359, %3372
  %3378 = getelementptr inbounds i32, ptr %11, i64 %3377
  %3379 = getelementptr inbounds i32, ptr %3378, i64 -7
  %3380 = load <8 x i32>, ptr %3379, align 4, !tbaa !6
  %3381 = shufflevector <8 x i32> %3380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3382 = getelementptr inbounds i32, ptr %3378, i64 -15
  %3383 = load <8 x i32>, ptr %3382, align 4, !tbaa !6
  %3384 = shufflevector <8 x i32> %3383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3385 = getelementptr inbounds i32, ptr %3378, i64 -23
  %3386 = load <8 x i32>, ptr %3385, align 4, !tbaa !6
  %3387 = shufflevector <8 x i32> %3386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3388 = getelementptr inbounds i32, ptr %3378, i64 -31
  %3389 = load <8 x i32>, ptr %3388, align 4, !tbaa !6
  %3390 = shufflevector <8 x i32> %3389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3391 = mul <8 x i32> %3381, %3373
  %3392 = mul <8 x i32> %3384, %3374
  %3393 = mul <8 x i32> %3387, %3375
  %3394 = mul <8 x i32> %3390, %3376
  %3395 = add nuw i64 %3372, 32
  %3396 = icmp eq i64 %3395, %3369
  br i1 %3396, label %3397, label %3371, !llvm.loop !310

3397:                                             ; preds = %3371
  %3398 = mul <8 x i32> %3392, %3391
  %3399 = mul <8 x i32> %3393, %3398
  %3400 = mul <8 x i32> %3394, %3399
  %3401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3400)
  %3402 = icmp eq i64 %3365, %3369
  br i1 %3402, label %3415, label %3403

3403:                                             ; preds = %3356, %3397
  %3404 = phi i64 [ %3359, %3356 ], [ %3370, %3397 ]
  %3405 = phi i32 [ 1, %3356 ], [ %3401, %3397 ]
  br label %3406

3406:                                             ; preds = %3403, %3406
  %3407 = phi i64 [ %3412, %3406 ], [ %3404, %3403 ]
  %3408 = phi i32 [ %3411, %3406 ], [ %3405, %3403 ]
  %3409 = getelementptr inbounds i32, ptr %11, i64 %3407
  %3410 = load i32, ptr %3409, align 4, !tbaa !6
  %3411 = mul nsw i32 %3410, %3408
  %3412 = add nsw i64 %3407, -1
  %3413 = trunc i64 %3407 to i32
  %3414 = icmp sgt i32 %3413, 0
  br i1 %3414, label %3406, label %3415, !llvm.loop !311

3415:                                             ; preds = %3406, %3397
  %3416 = phi i32 [ %3401, %3397 ], [ %3411, %3406 ]
  %3417 = and i64 %3366, 4294967295
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3417
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = mul nsw i32 %3419, %3416
  %3421 = add nsw i32 %3420, %3360
  %3422 = icmp sgt i64 %3358, 2
  %3423 = add nsw i64 %3359, -1
  %3424 = add i32 %3357, 1
  br i1 %3422, label %3356, label %3425, !llvm.loop !312

3425:                                             ; preds = %3415, %3352
  %3426 = phi i32 [ %3355, %3352 ], [ %3421, %3415 ]
  %3427 = icmp slt i32 %3426, %5
  br i1 %3427, label %3430, label %3428

3428:                                             ; preds = %3425
  %3429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3430:                                             ; preds = %3425
  %3431 = sext i32 %3426 to i64
  %3432 = getelementptr inbounds i32, ptr %3174, i64 %3431
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = sitofp i64 %3353 to double
  %3435 = sitofp i32 %3433 to double
  %3436 = icmp slt i32 %3433, 0
  %3437 = fneg fast double %3435
  %3438 = select i1 %3436, double %3437, double %3435
  %3439 = fmul fast double %3435, %3435
  %3440 = fmul fast double %3439, %3438
  %3441 = fadd fast double %3440, %3434
  %3442 = fptosi double %3441 to i64
  store i64 %3442, ptr %3176, align 8, !tbaa !121
  %3443 = add nuw nsw i32 %3354, 1
  br i1 %3195, label %3444, label %3494

3444:                                             ; preds = %3430
  %3445 = load i32, ptr %4, align 4, !tbaa !6
  %3446 = load i32, ptr %12, align 4, !tbaa !6
  %3447 = add nsw i32 %3446, -1
  %3448 = icmp slt i32 %3445, %3447
  br i1 %3448, label %3471, label %3449

3449:                                             ; preds = %3444
  %3450 = icmp eq i32 %3445, %3447
  br i1 %3450, label %3451, label %3487

3451:                                             ; preds = %3449
  store i32 0, ptr %4, align 4, !tbaa !6
  %3452 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3452, ptr %6, align 4, !tbaa !6
  br i1 %3200, label %3494, label %3453

3453:                                             ; preds = %3451, %3481
  %3454 = phi i64 [ %3485, %3481 ], [ 1, %3451 ]
  %3455 = getelementptr inbounds i32, ptr %4, i64 %3454
  %3456 = load i32, ptr %3455, align 4, !tbaa !6
  %3457 = getelementptr inbounds i32, ptr %12, i64 %3454
  %3458 = load i32, ptr %3457, align 4, !tbaa !6
  %3459 = add nsw i32 %3458, -1
  %3460 = icmp slt i32 %3456, %3459
  br i1 %3460, label %3461, label %3479

3461:                                             ; preds = %3453
  br i1 %3448, label %3471, label %3462

3462:                                             ; preds = %3461
  %3463 = shl i64 %3454, 32
  %3464 = add i64 %3463, -4294967296
  %3465 = ashr exact i64 %3464, 32
  %3466 = getelementptr inbounds i32, ptr %7, i64 %3465
  %3467 = load i32, ptr %3466, align 4, !tbaa !6
  %3468 = getelementptr inbounds i32, ptr %6, i64 %3454
  %3469 = load i32, ptr %3468, align 4, !tbaa !6
  %3470 = add nsw i32 %3469, %3467
  store i32 %3470, ptr %3468, align 4, !tbaa !6
  br label %3489

3471:                                             ; preds = %3444, %3461
  %3472 = phi i32 [ %3456, %3461 ], [ %3445, %3444 ]
  %3473 = phi ptr [ %3455, %3461 ], [ %4, %3444 ]
  %3474 = phi i64 [ %3454, %3461 ], [ 0, %3444 ]
  %3475 = add nsw i32 %3472, 1
  store i32 %3475, ptr %3473, align 4, !tbaa !6
  %3476 = getelementptr inbounds i32, ptr %7, i64 %3474
  %3477 = load i32, ptr %3476, align 4, !tbaa !6
  %3478 = getelementptr inbounds i32, ptr %6, i64 %3474
  br label %3489

3479:                                             ; preds = %3453
  %3480 = icmp eq i32 %3456, %3459
  br i1 %3480, label %3481, label %3487

3481:                                             ; preds = %3479
  store i32 0, ptr %3455, align 4, !tbaa !6
  %3482 = getelementptr inbounds i32, ptr %8, i64 %3454
  %3483 = load i32, ptr %3482, align 4, !tbaa !6
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3454
  store i32 %3483, ptr %3484, align 4, !tbaa !6
  %3485 = add nuw nsw i64 %3454, 1
  %3486 = icmp eq i64 %3485, %3198
  br i1 %3486, label %3494, label %3453, !llvm.loop !313

3487:                                             ; preds = %3449, %3479
  %3488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3489:                                             ; preds = %3462, %3471
  %3490 = phi ptr [ %3478, %3471 ], [ %3455, %3462 ]
  %3491 = phi i32 [ %3477, %3471 ], [ 1, %3462 ]
  %3492 = load i32, ptr %3490, align 4, !tbaa !6
  %3493 = add nsw i32 %3492, %3491
  store i32 %3493, ptr %3490, align 4, !tbaa !6
  br label %3494

3494:                                             ; preds = %3481, %3489, %3451, %3430
  %3495 = icmp eq i32 %3443, %5
  br i1 %3495, label %5686, label %3352, !llvm.loop !314

3496:                                             ; preds = %3186
  %3497 = getelementptr inbounds i32, ptr %3, i64 %19
  %3498 = load i32, ptr %3497, align 4, !tbaa !6
  %3499 = icmp eq i32 %3498, 0
  %3500 = icmp sgt i32 %5, 0
  br i1 %3499, label %3510, label %3501

3501:                                             ; preds = %3496
  br i1 %3500, label %3502, label %5686

3502:                                             ; preds = %3501
  %3503 = icmp sgt i32 %13, 1
  %3504 = icmp sgt i32 %13, 0
  %3505 = add i32 %13, -2
  %3506 = zext i32 %3505 to i64
  %3507 = zext i32 %13 to i64
  %3508 = add nuw i32 %5, 1
  %3509 = icmp eq i32 %13, 1
  br label %3656

3510:                                             ; preds = %3496
  br i1 %3500, label %3511, label %5686

3511:                                             ; preds = %3510
  %3512 = icmp sgt i32 %13, 1
  %3513 = icmp sgt i32 %13, 0
  %3514 = add i32 %13, -2
  %3515 = zext i32 %3514 to i64
  %3516 = zext i32 %13 to i64
  %3517 = add nuw i32 %5, 1
  %3518 = icmp eq i32 %13, 1
  br label %3519

3519:                                             ; preds = %3511, %3654
  %3520 = phi i64 [ 0, %3511 ], [ %3604, %3654 ]
  %3521 = phi i32 [ 0, %3511 ], [ %3606, %3654 ]
  %3522 = phi double [ 0.000000e+00, %3511 ], [ %3605, %3654 ]
  %3523 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3512, label %3524, label %3593

3524:                                             ; preds = %3519, %3583
  %3525 = phi i32 [ %3592, %3583 ], [ 0, %3519 ]
  %3526 = phi i64 [ %3534, %3583 ], [ %3516, %3519 ]
  %3527 = phi i64 [ %3591, %3583 ], [ %3515, %3519 ]
  %3528 = phi i32 [ %3589, %3583 ], [ %3523, %3519 ]
  %3529 = sub i32 %3514, %3525
  %3530 = tail call i32 @llvm.smin.i32(i32 %3529, i32 0)
  %3531 = sub i32 %3529, %3530
  %3532 = zext i32 %3531 to i64
  %3533 = add nuw nsw i64 %3532, 1
  %3534 = add nsw i64 %3526, -1
  %3535 = icmp ult i32 %3531, 31
  br i1 %3535, label %3571, label %3536

3536:                                             ; preds = %3524
  %3537 = and i64 %3533, 8589934560
  %3538 = sub i64 %3527, %3537
  br label %3539

3539:                                             ; preds = %3539, %3536
  %3540 = phi i64 [ 0, %3536 ], [ %3563, %3539 ]
  %3541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3559, %3539 ]
  %3542 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3560, %3539 ]
  %3543 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3561, %3539 ]
  %3544 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3562, %3539 ]
  %3545 = sub i64 %3527, %3540
  %3546 = getelementptr inbounds i32, ptr %9, i64 %3545
  %3547 = getelementptr inbounds i32, ptr %3546, i64 -7
  %3548 = load <8 x i32>, ptr %3547, align 4, !tbaa !6
  %3549 = shufflevector <8 x i32> %3548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3550 = getelementptr inbounds i32, ptr %3546, i64 -15
  %3551 = load <8 x i32>, ptr %3550, align 4, !tbaa !6
  %3552 = shufflevector <8 x i32> %3551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3553 = getelementptr inbounds i32, ptr %3546, i64 -23
  %3554 = load <8 x i32>, ptr %3553, align 4, !tbaa !6
  %3555 = shufflevector <8 x i32> %3554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3556 = getelementptr inbounds i32, ptr %3546, i64 -31
  %3557 = load <8 x i32>, ptr %3556, align 4, !tbaa !6
  %3558 = shufflevector <8 x i32> %3557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3559 = mul <8 x i32> %3549, %3541
  %3560 = mul <8 x i32> %3552, %3542
  %3561 = mul <8 x i32> %3555, %3543
  %3562 = mul <8 x i32> %3558, %3544
  %3563 = add nuw i64 %3540, 32
  %3564 = icmp eq i64 %3563, %3537
  br i1 %3564, label %3565, label %3539, !llvm.loop !315

3565:                                             ; preds = %3539
  %3566 = mul <8 x i32> %3560, %3559
  %3567 = mul <8 x i32> %3561, %3566
  %3568 = mul <8 x i32> %3562, %3567
  %3569 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3568)
  %3570 = icmp eq i64 %3533, %3537
  br i1 %3570, label %3583, label %3571

3571:                                             ; preds = %3524, %3565
  %3572 = phi i64 [ %3527, %3524 ], [ %3538, %3565 ]
  %3573 = phi i32 [ 1, %3524 ], [ %3569, %3565 ]
  br label %3574

3574:                                             ; preds = %3571, %3574
  %3575 = phi i64 [ %3580, %3574 ], [ %3572, %3571 ]
  %3576 = phi i32 [ %3579, %3574 ], [ %3573, %3571 ]
  %3577 = getelementptr inbounds i32, ptr %9, i64 %3575
  %3578 = load i32, ptr %3577, align 4, !tbaa !6
  %3579 = mul nsw i32 %3578, %3576
  %3580 = add nsw i64 %3575, -1
  %3581 = trunc i64 %3575 to i32
  %3582 = icmp sgt i32 %3581, 0
  br i1 %3582, label %3574, label %3583, !llvm.loop !316

3583:                                             ; preds = %3574, %3565
  %3584 = phi i32 [ %3569, %3565 ], [ %3579, %3574 ]
  %3585 = and i64 %3534, 4294967295
  %3586 = getelementptr inbounds i32, ptr %6, i64 %3585
  %3587 = load i32, ptr %3586, align 4, !tbaa !6
  %3588 = mul nsw i32 %3587, %3584
  %3589 = add nsw i32 %3588, %3528
  %3590 = icmp sgt i64 %3526, 2
  %3591 = add nsw i64 %3527, -1
  %3592 = add i32 %3525, 1
  br i1 %3590, label %3524, label %3593, !llvm.loop !317

3593:                                             ; preds = %3583, %3519
  %3594 = phi i32 [ %3523, %3519 ], [ %3589, %3583 ]
  %3595 = sext i32 %3594 to i64
  %3596 = getelementptr inbounds i32, ptr %3174, i64 %3595
  %3597 = load i32, ptr %3596, align 4, !tbaa !6
  %3598 = sext i32 %3597 to i64
  %3599 = icmp slt i32 %3597, 0
  %3600 = mul nsw i64 %3598, %3598
  %3601 = sub nsw i64 0, %3600
  %3602 = select i1 %3599, i64 %3601, i64 %3600
  %3603 = mul i64 %3602, %3598
  %3604 = add nsw i64 %3603, %3520
  %3605 = fadd fast double %3522, 1.000000e+00
  %3606 = add nuw nsw i32 %3521, 1
  br i1 %3513, label %3607, label %3654

3607:                                             ; preds = %3593
  %3608 = load i32, ptr %4, align 4, !tbaa !6
  %3609 = load i32, ptr %12, align 4, !tbaa !6
  %3610 = add nsw i32 %3609, -1
  %3611 = icmp slt i32 %3608, %3610
  br i1 %3611, label %3631, label %3612

3612:                                             ; preds = %3607
  %3613 = icmp eq i32 %3608, %3610
  br i1 %3613, label %3614, label %3647

3614:                                             ; preds = %3612
  store i32 0, ptr %4, align 4, !tbaa !6
  %3615 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3615, ptr %6, align 4, !tbaa !6
  br i1 %3518, label %3654, label %3616

3616:                                             ; preds = %3614, %3641
  %3617 = phi i64 [ %3645, %3641 ], [ 1, %3614 ]
  %3618 = getelementptr inbounds i32, ptr %4, i64 %3617
  %3619 = load i32, ptr %3618, align 4, !tbaa !6
  %3620 = getelementptr inbounds i32, ptr %12, i64 %3617
  %3621 = load i32, ptr %3620, align 4, !tbaa !6
  %3622 = add nsw i32 %3621, -1
  %3623 = icmp slt i32 %3619, %3622
  br i1 %3623, label %3624, label %3639

3624:                                             ; preds = %3616
  br i1 %3611, label %3631, label %3625

3625:                                             ; preds = %3624
  %3626 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3627 = load i32, ptr %3626, align 4, !tbaa !6
  %3628 = getelementptr inbounds i32, ptr %6, i64 %3617
  %3629 = load i32, ptr %3628, align 4, !tbaa !6
  %3630 = add nsw i32 %3629, %3627
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  br label %3649

3631:                                             ; preds = %3607, %3624
  %3632 = phi i32 [ %3619, %3624 ], [ %3608, %3607 ]
  %3633 = phi ptr [ %3618, %3624 ], [ %4, %3607 ]
  %3634 = phi i64 [ %3617, %3624 ], [ 0, %3607 ]
  %3635 = add nsw i32 %3632, 1
  store i32 %3635, ptr %3633, align 4, !tbaa !6
  %3636 = getelementptr inbounds i32, ptr %7, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !6
  %3638 = getelementptr inbounds i32, ptr %6, i64 %3634
  br label %3649

3639:                                             ; preds = %3616
  %3640 = icmp eq i32 %3619, %3622
  br i1 %3640, label %3641, label %3647

3641:                                             ; preds = %3639
  store i32 0, ptr %3618, align 4, !tbaa !6
  %3642 = getelementptr inbounds i32, ptr %8, i64 %3617
  %3643 = load i32, ptr %3642, align 4, !tbaa !6
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3617
  store i32 %3643, ptr %3644, align 4, !tbaa !6
  %3645 = add nuw nsw i64 %3617, 1
  %3646 = icmp eq i64 %3645, %3516
  br i1 %3646, label %3654, label %3616, !llvm.loop !318

3647:                                             ; preds = %3612, %3639
  store i64 %3604, ptr %3176, align 8, !tbaa !121
  %3648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3649:                                             ; preds = %3625, %3631
  %3650 = phi ptr [ %3638, %3631 ], [ %3618, %3625 ]
  %3651 = phi i32 [ %3637, %3631 ], [ 1, %3625 ]
  %3652 = load i32, ptr %3650, align 4, !tbaa !6
  %3653 = add nsw i32 %3652, %3651
  store i32 %3653, ptr %3650, align 4, !tbaa !6
  br label %3654

3654:                                             ; preds = %3641, %3649, %3614, %3593
  %3655 = icmp eq i32 %3606, %5
  br i1 %3655, label %5681, label %3519, !llvm.loop !319

3656:                                             ; preds = %3502, %3796
  %3657 = phi i64 [ 0, %3502 ], [ %3744, %3796 ]
  %3658 = phi i32 [ 0, %3502 ], [ %3745, %3796 ]
  %3659 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3503, label %3660, label %3729

3660:                                             ; preds = %3656, %3719
  %3661 = phi i32 [ %3728, %3719 ], [ 0, %3656 ]
  %3662 = phi i64 [ %3670, %3719 ], [ %3507, %3656 ]
  %3663 = phi i64 [ %3727, %3719 ], [ %3506, %3656 ]
  %3664 = phi i32 [ %3725, %3719 ], [ %3659, %3656 ]
  %3665 = sub i32 %3505, %3661
  %3666 = tail call i32 @llvm.smin.i32(i32 %3665, i32 0)
  %3667 = sub i32 %3665, %3666
  %3668 = zext i32 %3667 to i64
  %3669 = add nuw nsw i64 %3668, 1
  %3670 = add nsw i64 %3662, -1
  %3671 = icmp ult i32 %3667, 31
  br i1 %3671, label %3707, label %3672

3672:                                             ; preds = %3660
  %3673 = and i64 %3669, 8589934560
  %3674 = sub i64 %3663, %3673
  br label %3675

3675:                                             ; preds = %3675, %3672
  %3676 = phi i64 [ 0, %3672 ], [ %3699, %3675 ]
  %3677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3695, %3675 ]
  %3678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3696, %3675 ]
  %3679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3697, %3675 ]
  %3680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3698, %3675 ]
  %3681 = sub i64 %3663, %3676
  %3682 = getelementptr inbounds i32, ptr %11, i64 %3681
  %3683 = getelementptr inbounds i32, ptr %3682, i64 -7
  %3684 = load <8 x i32>, ptr %3683, align 4, !tbaa !6
  %3685 = shufflevector <8 x i32> %3684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3686 = getelementptr inbounds i32, ptr %3682, i64 -15
  %3687 = load <8 x i32>, ptr %3686, align 4, !tbaa !6
  %3688 = shufflevector <8 x i32> %3687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3689 = getelementptr inbounds i32, ptr %3682, i64 -23
  %3690 = load <8 x i32>, ptr %3689, align 4, !tbaa !6
  %3691 = shufflevector <8 x i32> %3690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3692 = getelementptr inbounds i32, ptr %3682, i64 -31
  %3693 = load <8 x i32>, ptr %3692, align 4, !tbaa !6
  %3694 = shufflevector <8 x i32> %3693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3695 = mul <8 x i32> %3685, %3677
  %3696 = mul <8 x i32> %3688, %3678
  %3697 = mul <8 x i32> %3691, %3679
  %3698 = mul <8 x i32> %3694, %3680
  %3699 = add nuw i64 %3676, 32
  %3700 = icmp eq i64 %3699, %3673
  br i1 %3700, label %3701, label %3675, !llvm.loop !320

3701:                                             ; preds = %3675
  %3702 = mul <8 x i32> %3696, %3695
  %3703 = mul <8 x i32> %3697, %3702
  %3704 = mul <8 x i32> %3698, %3703
  %3705 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3704)
  %3706 = icmp eq i64 %3669, %3673
  br i1 %3706, label %3719, label %3707

3707:                                             ; preds = %3660, %3701
  %3708 = phi i64 [ %3663, %3660 ], [ %3674, %3701 ]
  %3709 = phi i32 [ 1, %3660 ], [ %3705, %3701 ]
  br label %3710

3710:                                             ; preds = %3707, %3710
  %3711 = phi i64 [ %3716, %3710 ], [ %3708, %3707 ]
  %3712 = phi i32 [ %3715, %3710 ], [ %3709, %3707 ]
  %3713 = getelementptr inbounds i32, ptr %11, i64 %3711
  %3714 = load i32, ptr %3713, align 4, !tbaa !6
  %3715 = mul nsw i32 %3714, %3712
  %3716 = add nsw i64 %3711, -1
  %3717 = trunc i64 %3711 to i32
  %3718 = icmp sgt i32 %3717, 0
  br i1 %3718, label %3710, label %3719, !llvm.loop !321

3719:                                             ; preds = %3710, %3701
  %3720 = phi i32 [ %3705, %3701 ], [ %3715, %3710 ]
  %3721 = and i64 %3670, 4294967295
  %3722 = getelementptr inbounds i32, ptr %6, i64 %3721
  %3723 = load i32, ptr %3722, align 4, !tbaa !6
  %3724 = mul nsw i32 %3723, %3720
  %3725 = add nsw i32 %3724, %3664
  %3726 = icmp sgt i64 %3662, 2
  %3727 = add nsw i64 %3663, -1
  %3728 = add i32 %3661, 1
  br i1 %3726, label %3660, label %3729, !llvm.loop !322

3729:                                             ; preds = %3719, %3656
  %3730 = phi i32 [ %3659, %3656 ], [ %3725, %3719 ]
  %3731 = icmp slt i32 %3730, %5
  br i1 %3731, label %3734, label %3732

3732:                                             ; preds = %3729
  %3733 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3734:                                             ; preds = %3729
  %3735 = sext i32 %3730 to i64
  %3736 = getelementptr inbounds i32, ptr %3174, i64 %3735
  %3737 = load i32, ptr %3736, align 4, !tbaa !6
  %3738 = sext i32 %3737 to i64
  %3739 = icmp slt i32 %3737, 0
  %3740 = mul nsw i64 %3738, %3738
  %3741 = sub nsw i64 0, %3740
  %3742 = select i1 %3739, i64 %3741, i64 %3740
  %3743 = mul i64 %3742, %3738
  %3744 = add nsw i64 %3743, %3657
  store i64 %3744, ptr %3176, align 8, !tbaa !121
  %3745 = add nuw nsw i32 %3658, 1
  br i1 %3504, label %3746, label %3796

3746:                                             ; preds = %3734
  %3747 = load i32, ptr %4, align 4, !tbaa !6
  %3748 = load i32, ptr %12, align 4, !tbaa !6
  %3749 = add nsw i32 %3748, -1
  %3750 = icmp slt i32 %3747, %3749
  br i1 %3750, label %3773, label %3751

3751:                                             ; preds = %3746
  %3752 = icmp eq i32 %3747, %3749
  br i1 %3752, label %3753, label %3789

3753:                                             ; preds = %3751
  store i32 0, ptr %4, align 4, !tbaa !6
  %3754 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3754, ptr %6, align 4, !tbaa !6
  br i1 %3509, label %3796, label %3755

3755:                                             ; preds = %3753, %3783
  %3756 = phi i64 [ %3787, %3783 ], [ 1, %3753 ]
  %3757 = getelementptr inbounds i32, ptr %4, i64 %3756
  %3758 = load i32, ptr %3757, align 4, !tbaa !6
  %3759 = getelementptr inbounds i32, ptr %12, i64 %3756
  %3760 = load i32, ptr %3759, align 4, !tbaa !6
  %3761 = add nsw i32 %3760, -1
  %3762 = icmp slt i32 %3758, %3761
  br i1 %3762, label %3763, label %3781

3763:                                             ; preds = %3755
  br i1 %3750, label %3773, label %3764

3764:                                             ; preds = %3763
  %3765 = shl i64 %3756, 32
  %3766 = add i64 %3765, -4294967296
  %3767 = ashr exact i64 %3766, 32
  %3768 = getelementptr inbounds i32, ptr %7, i64 %3767
  %3769 = load i32, ptr %3768, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %6, i64 %3756
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = add nsw i32 %3771, %3769
  store i32 %3772, ptr %3770, align 4, !tbaa !6
  br label %3791

3773:                                             ; preds = %3746, %3763
  %3774 = phi i32 [ %3758, %3763 ], [ %3747, %3746 ]
  %3775 = phi ptr [ %3757, %3763 ], [ %4, %3746 ]
  %3776 = phi i64 [ %3756, %3763 ], [ 0, %3746 ]
  %3777 = add nsw i32 %3774, 1
  store i32 %3777, ptr %3775, align 4, !tbaa !6
  %3778 = getelementptr inbounds i32, ptr %7, i64 %3776
  %3779 = load i32, ptr %3778, align 4, !tbaa !6
  %3780 = getelementptr inbounds i32, ptr %6, i64 %3776
  br label %3791

3781:                                             ; preds = %3755
  %3782 = icmp eq i32 %3758, %3761
  br i1 %3782, label %3783, label %3789

3783:                                             ; preds = %3781
  store i32 0, ptr %3757, align 4, !tbaa !6
  %3784 = getelementptr inbounds i32, ptr %8, i64 %3756
  %3785 = load i32, ptr %3784, align 4, !tbaa !6
  %3786 = getelementptr inbounds i32, ptr %6, i64 %3756
  store i32 %3785, ptr %3786, align 4, !tbaa !6
  %3787 = add nuw nsw i64 %3756, 1
  %3788 = icmp eq i64 %3787, %3507
  br i1 %3788, label %3796, label %3755, !llvm.loop !323

3789:                                             ; preds = %3751, %3781
  %3790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3791:                                             ; preds = %3764, %3773
  %3792 = phi ptr [ %3780, %3773 ], [ %3757, %3764 ]
  %3793 = phi i32 [ %3779, %3773 ], [ 1, %3764 ]
  %3794 = load i32, ptr %3792, align 4, !tbaa !6
  %3795 = add nsw i32 %3794, %3793
  store i32 %3795, ptr %3792, align 4, !tbaa !6
  br label %3796

3796:                                             ; preds = %3783, %3791, %3753, %3734
  %3797 = icmp eq i32 %3745, %5
  br i1 %3797, label %5686, label %3656, !llvm.loop !324

3798:                                             ; preds = %3186
  %3799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

3800:                                             ; preds = %18
  %3801 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3802 = load ptr, ptr %3801, align 8, !tbaa !10
  %3803 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3804 = load ptr, ptr %3803, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3804, align 8, !tbaa !19
  %3805 = icmp eq i32 %13, 0
  br i1 %3805, label %3806, label %3814

3806:                                             ; preds = %3800
  %3807 = load i32, ptr %3802, align 4, !tbaa !6
  %3808 = sitofp i32 %3807 to double
  %3809 = icmp slt i32 %3807, 0
  %3810 = fneg fast double %3808
  %3811 = select i1 %3809, double %3810, double %3808
  %3812 = fmul fast double %3808, %3808
  %3813 = fmul fast double %3812, %3811
  store double %3813, ptr %3804, align 8, !tbaa !19
  br label %5686

3814:                                             ; preds = %3800
  switch i32 %1, label %4422 [
    i32 1, label %3815
    i32 0, label %4120
  ]

3815:                                             ; preds = %3814
  %3816 = getelementptr inbounds i32, ptr %3, i64 %19
  %3817 = load i32, ptr %3816, align 4, !tbaa !6
  %3818 = icmp eq i32 %3817, 0
  %3819 = icmp sgt i32 %5, 0
  br i1 %3818, label %3829, label %3820

3820:                                             ; preds = %3815
  br i1 %3819, label %3821, label %5686

3821:                                             ; preds = %3820
  %3822 = icmp sgt i32 %13, 1
  %3823 = icmp sgt i32 %13, 0
  %3824 = add i32 %13, -2
  %3825 = zext i32 %3824 to i64
  %3826 = zext i32 %13 to i64
  %3827 = add nuw i32 %5, 1
  %3828 = icmp eq i32 %13, 1
  br label %3978

3829:                                             ; preds = %3815
  br i1 %3819, label %3830, label %5686

3830:                                             ; preds = %3829
  %3831 = icmp sgt i32 %13, 1
  %3832 = icmp sgt i32 %13, 0
  %3833 = add i32 %13, -2
  %3834 = zext i32 %3833 to i64
  %3835 = zext i32 %13 to i64
  %3836 = add nuw i32 %5, 1
  %3837 = icmp eq i32 %13, 1
  br label %3838

3838:                                             ; preds = %3830, %3976
  %3839 = phi double [ 0.000000e+00, %3830 ], [ %3926, %3976 ]
  %3840 = phi i32 [ 0, %3830 ], [ %3928, %3976 ]
  %3841 = phi double [ 0.000000e+00, %3830 ], [ %3927, %3976 ]
  %3842 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3831, label %3843, label %3912

3843:                                             ; preds = %3838, %3902
  %3844 = phi i32 [ %3911, %3902 ], [ 0, %3838 ]
  %3845 = phi i64 [ %3853, %3902 ], [ %3835, %3838 ]
  %3846 = phi i64 [ %3910, %3902 ], [ %3834, %3838 ]
  %3847 = phi i32 [ %3908, %3902 ], [ %3842, %3838 ]
  %3848 = sub i32 %3833, %3844
  %3849 = tail call i32 @llvm.smin.i32(i32 %3848, i32 0)
  %3850 = sub i32 %3848, %3849
  %3851 = zext i32 %3850 to i64
  %3852 = add nuw nsw i64 %3851, 1
  %3853 = add nsw i64 %3845, -1
  %3854 = icmp ult i32 %3850, 31
  br i1 %3854, label %3890, label %3855

3855:                                             ; preds = %3843
  %3856 = and i64 %3852, 8589934560
  %3857 = sub i64 %3846, %3856
  br label %3858

3858:                                             ; preds = %3858, %3855
  %3859 = phi i64 [ 0, %3855 ], [ %3882, %3858 ]
  %3860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3878, %3858 ]
  %3861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3879, %3858 ]
  %3862 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3880, %3858 ]
  %3863 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3881, %3858 ]
  %3864 = sub i64 %3846, %3859
  %3865 = getelementptr inbounds i32, ptr %9, i64 %3864
  %3866 = getelementptr inbounds i32, ptr %3865, i64 -7
  %3867 = load <8 x i32>, ptr %3866, align 4, !tbaa !6
  %3868 = shufflevector <8 x i32> %3867, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3869 = getelementptr inbounds i32, ptr %3865, i64 -15
  %3870 = load <8 x i32>, ptr %3869, align 4, !tbaa !6
  %3871 = shufflevector <8 x i32> %3870, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3872 = getelementptr inbounds i32, ptr %3865, i64 -23
  %3873 = load <8 x i32>, ptr %3872, align 4, !tbaa !6
  %3874 = shufflevector <8 x i32> %3873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3875 = getelementptr inbounds i32, ptr %3865, i64 -31
  %3876 = load <8 x i32>, ptr %3875, align 4, !tbaa !6
  %3877 = shufflevector <8 x i32> %3876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3878 = mul <8 x i32> %3868, %3860
  %3879 = mul <8 x i32> %3871, %3861
  %3880 = mul <8 x i32> %3874, %3862
  %3881 = mul <8 x i32> %3877, %3863
  %3882 = add nuw i64 %3859, 32
  %3883 = icmp eq i64 %3882, %3856
  br i1 %3883, label %3884, label %3858, !llvm.loop !325

3884:                                             ; preds = %3858
  %3885 = mul <8 x i32> %3879, %3878
  %3886 = mul <8 x i32> %3880, %3885
  %3887 = mul <8 x i32> %3881, %3886
  %3888 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3887)
  %3889 = icmp eq i64 %3852, %3856
  br i1 %3889, label %3902, label %3890

3890:                                             ; preds = %3843, %3884
  %3891 = phi i64 [ %3846, %3843 ], [ %3857, %3884 ]
  %3892 = phi i32 [ 1, %3843 ], [ %3888, %3884 ]
  br label %3893

3893:                                             ; preds = %3890, %3893
  %3894 = phi i64 [ %3899, %3893 ], [ %3891, %3890 ]
  %3895 = phi i32 [ %3898, %3893 ], [ %3892, %3890 ]
  %3896 = getelementptr inbounds i32, ptr %9, i64 %3894
  %3897 = load i32, ptr %3896, align 4, !tbaa !6
  %3898 = mul nsw i32 %3897, %3895
  %3899 = add nsw i64 %3894, -1
  %3900 = trunc i64 %3894 to i32
  %3901 = icmp sgt i32 %3900, 0
  br i1 %3901, label %3893, label %3902, !llvm.loop !326

3902:                                             ; preds = %3893, %3884
  %3903 = phi i32 [ %3888, %3884 ], [ %3898, %3893 ]
  %3904 = and i64 %3853, 4294967295
  %3905 = getelementptr inbounds i32, ptr %6, i64 %3904
  %3906 = load i32, ptr %3905, align 4, !tbaa !6
  %3907 = mul nsw i32 %3906, %3903
  %3908 = add nsw i32 %3907, %3847
  %3909 = icmp sgt i64 %3845, 2
  %3910 = add nsw i64 %3846, -1
  %3911 = add i32 %3844, 1
  br i1 %3909, label %3843, label %3912, !llvm.loop !327

3912:                                             ; preds = %3902, %3838
  %3913 = phi i32 [ %3842, %3838 ], [ %3908, %3902 ]
  %3914 = sext i32 %3913 to i64
  %3915 = getelementptr inbounds double, ptr %2, i64 %3914
  %3916 = load double, ptr %3915, align 8, !tbaa !19
  %3917 = getelementptr inbounds i32, ptr %3802, i64 %3914
  %3918 = load i32, ptr %3917, align 4, !tbaa !6
  %3919 = sitofp i32 %3918 to double
  %3920 = fmul fast double %3916, %3919
  %3921 = fcmp fast olt double %3920, 0.000000e+00
  %3922 = fneg fast double %3920
  %3923 = select nnan ninf i1 %3921, double %3922, double %3920
  %3924 = fmul fast double %3920, %3920
  %3925 = fmul fast double %3924, %3923
  %3926 = fadd fast double %3925, %3839
  store double %3926, ptr %3804, align 8, !tbaa !19
  %3927 = fadd fast double %3916, %3841
  %3928 = add nuw nsw i32 %3840, 1
  br i1 %3832, label %3929, label %3976

3929:                                             ; preds = %3912
  %3930 = load i32, ptr %4, align 4, !tbaa !6
  %3931 = load i32, ptr %12, align 4, !tbaa !6
  %3932 = add nsw i32 %3931, -1
  %3933 = icmp slt i32 %3930, %3932
  br i1 %3933, label %3953, label %3934

3934:                                             ; preds = %3929
  %3935 = icmp eq i32 %3930, %3932
  br i1 %3935, label %3936, label %3969

3936:                                             ; preds = %3934
  store i32 0, ptr %4, align 4, !tbaa !6
  %3937 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3937, ptr %6, align 4, !tbaa !6
  br i1 %3837, label %3976, label %3938

3938:                                             ; preds = %3936, %3963
  %3939 = phi i64 [ %3967, %3963 ], [ 1, %3936 ]
  %3940 = getelementptr inbounds i32, ptr %4, i64 %3939
  %3941 = load i32, ptr %3940, align 4, !tbaa !6
  %3942 = getelementptr inbounds i32, ptr %12, i64 %3939
  %3943 = load i32, ptr %3942, align 4, !tbaa !6
  %3944 = add nsw i32 %3943, -1
  %3945 = icmp slt i32 %3941, %3944
  br i1 %3945, label %3946, label %3961

3946:                                             ; preds = %3938
  br i1 %3933, label %3953, label %3947

3947:                                             ; preds = %3946
  %3948 = getelementptr inbounds i32, ptr %7, i64 %3939
  %3949 = load i32, ptr %3948, align 4, !tbaa !6
  %3950 = getelementptr inbounds i32, ptr %6, i64 %3939
  %3951 = load i32, ptr %3950, align 4, !tbaa !6
  %3952 = add nsw i32 %3951, %3949
  store i32 %3952, ptr %3950, align 4, !tbaa !6
  br label %3971

3953:                                             ; preds = %3929, %3946
  %3954 = phi i32 [ %3941, %3946 ], [ %3930, %3929 ]
  %3955 = phi ptr [ %3940, %3946 ], [ %4, %3929 ]
  %3956 = phi i64 [ %3939, %3946 ], [ 0, %3929 ]
  %3957 = add nsw i32 %3954, 1
  store i32 %3957, ptr %3955, align 4, !tbaa !6
  %3958 = getelementptr inbounds i32, ptr %7, i64 %3956
  %3959 = load i32, ptr %3958, align 4, !tbaa !6
  %3960 = getelementptr inbounds i32, ptr %6, i64 %3956
  br label %3971

3961:                                             ; preds = %3938
  %3962 = icmp eq i32 %3941, %3944
  br i1 %3962, label %3963, label %3969

3963:                                             ; preds = %3961
  store i32 0, ptr %3940, align 4, !tbaa !6
  %3964 = getelementptr inbounds i32, ptr %8, i64 %3939
  %3965 = load i32, ptr %3964, align 4, !tbaa !6
  %3966 = getelementptr inbounds i32, ptr %6, i64 %3939
  store i32 %3965, ptr %3966, align 4, !tbaa !6
  %3967 = add nuw nsw i64 %3939, 1
  %3968 = icmp eq i64 %3967, %3835
  br i1 %3968, label %3976, label %3938, !llvm.loop !328

3969:                                             ; preds = %3934, %3961
  %3970 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3971:                                             ; preds = %3947, %3953
  %3972 = phi ptr [ %3960, %3953 ], [ %3940, %3947 ]
  %3973 = phi i32 [ %3959, %3953 ], [ 1, %3947 ]
  %3974 = load i32, ptr %3972, align 4, !tbaa !6
  %3975 = add nsw i32 %3974, %3973
  store i32 %3975, ptr %3972, align 4, !tbaa !6
  br label %3976

3976:                                             ; preds = %3963, %3971, %3936, %3912
  %3977 = icmp eq i32 %3928, %5
  br i1 %3977, label %5686, label %3838, !llvm.loop !329

3978:                                             ; preds = %3821, %4118
  %3979 = phi double [ 0.000000e+00, %3821 ], [ %4066, %4118 ]
  %3980 = phi i32 [ 0, %3821 ], [ %4067, %4118 ]
  %3981 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3822, label %3982, label %4051

3982:                                             ; preds = %3978, %4041
  %3983 = phi i32 [ %4050, %4041 ], [ 0, %3978 ]
  %3984 = phi i64 [ %3992, %4041 ], [ %3826, %3978 ]
  %3985 = phi i64 [ %4049, %4041 ], [ %3825, %3978 ]
  %3986 = phi i32 [ %4047, %4041 ], [ %3981, %3978 ]
  %3987 = sub i32 %3824, %3983
  %3988 = tail call i32 @llvm.smin.i32(i32 %3987, i32 0)
  %3989 = sub i32 %3987, %3988
  %3990 = zext i32 %3989 to i64
  %3991 = add nuw nsw i64 %3990, 1
  %3992 = add nsw i64 %3984, -1
  %3993 = icmp ult i32 %3989, 31
  br i1 %3993, label %4029, label %3994

3994:                                             ; preds = %3982
  %3995 = and i64 %3991, 8589934560
  %3996 = sub i64 %3985, %3995
  br label %3997

3997:                                             ; preds = %3997, %3994
  %3998 = phi i64 [ 0, %3994 ], [ %4021, %3997 ]
  %3999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4017, %3997 ]
  %4000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4018, %3997 ]
  %4001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4019, %3997 ]
  %4002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4020, %3997 ]
  %4003 = sub i64 %3985, %3998
  %4004 = getelementptr inbounds i32, ptr %11, i64 %4003
  %4005 = getelementptr inbounds i32, ptr %4004, i64 -7
  %4006 = load <8 x i32>, ptr %4005, align 4, !tbaa !6
  %4007 = shufflevector <8 x i32> %4006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4008 = getelementptr inbounds i32, ptr %4004, i64 -15
  %4009 = load <8 x i32>, ptr %4008, align 4, !tbaa !6
  %4010 = shufflevector <8 x i32> %4009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4011 = getelementptr inbounds i32, ptr %4004, i64 -23
  %4012 = load <8 x i32>, ptr %4011, align 4, !tbaa !6
  %4013 = shufflevector <8 x i32> %4012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4014 = getelementptr inbounds i32, ptr %4004, i64 -31
  %4015 = load <8 x i32>, ptr %4014, align 4, !tbaa !6
  %4016 = shufflevector <8 x i32> %4015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4017 = mul <8 x i32> %4007, %3999
  %4018 = mul <8 x i32> %4010, %4000
  %4019 = mul <8 x i32> %4013, %4001
  %4020 = mul <8 x i32> %4016, %4002
  %4021 = add nuw i64 %3998, 32
  %4022 = icmp eq i64 %4021, %3995
  br i1 %4022, label %4023, label %3997, !llvm.loop !330

4023:                                             ; preds = %3997
  %4024 = mul <8 x i32> %4018, %4017
  %4025 = mul <8 x i32> %4019, %4024
  %4026 = mul <8 x i32> %4020, %4025
  %4027 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4026)
  %4028 = icmp eq i64 %3991, %3995
  br i1 %4028, label %4041, label %4029

4029:                                             ; preds = %3982, %4023
  %4030 = phi i64 [ %3985, %3982 ], [ %3996, %4023 ]
  %4031 = phi i32 [ 1, %3982 ], [ %4027, %4023 ]
  br label %4032

4032:                                             ; preds = %4029, %4032
  %4033 = phi i64 [ %4038, %4032 ], [ %4030, %4029 ]
  %4034 = phi i32 [ %4037, %4032 ], [ %4031, %4029 ]
  %4035 = getelementptr inbounds i32, ptr %11, i64 %4033
  %4036 = load i32, ptr %4035, align 4, !tbaa !6
  %4037 = mul nsw i32 %4036, %4034
  %4038 = add nsw i64 %4033, -1
  %4039 = trunc i64 %4033 to i32
  %4040 = icmp sgt i32 %4039, 0
  br i1 %4040, label %4032, label %4041, !llvm.loop !331

4041:                                             ; preds = %4032, %4023
  %4042 = phi i32 [ %4027, %4023 ], [ %4037, %4032 ]
  %4043 = and i64 %3992, 4294967295
  %4044 = getelementptr inbounds i32, ptr %6, i64 %4043
  %4045 = load i32, ptr %4044, align 4, !tbaa !6
  %4046 = mul nsw i32 %4045, %4042
  %4047 = add nsw i32 %4046, %3986
  %4048 = icmp sgt i64 %3984, 2
  %4049 = add nsw i64 %3985, -1
  %4050 = add i32 %3983, 1
  br i1 %4048, label %3982, label %4051, !llvm.loop !332

4051:                                             ; preds = %4041, %3978
  %4052 = phi i32 [ %3981, %3978 ], [ %4047, %4041 ]
  %4053 = icmp slt i32 %4052, %5
  br i1 %4053, label %4056, label %4054

4054:                                             ; preds = %4051
  %4055 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4056:                                             ; preds = %4051
  %4057 = sext i32 %4052 to i64
  %4058 = getelementptr inbounds i32, ptr %3802, i64 %4057
  %4059 = load i32, ptr %4058, align 4, !tbaa !6
  %4060 = sitofp i32 %4059 to double
  %4061 = icmp slt i32 %4059, 0
  %4062 = fneg fast double %4060
  %4063 = select i1 %4061, double %4062, double %4060
  %4064 = fmul fast double %4060, %4060
  %4065 = fmul fast double %4064, %4063
  %4066 = fadd fast double %4065, %3979
  store double %4066, ptr %3804, align 8, !tbaa !19
  %4067 = add nuw nsw i32 %3980, 1
  br i1 %3823, label %4068, label %4118

4068:                                             ; preds = %4056
  %4069 = load i32, ptr %4, align 4, !tbaa !6
  %4070 = load i32, ptr %12, align 4, !tbaa !6
  %4071 = add nsw i32 %4070, -1
  %4072 = icmp slt i32 %4069, %4071
  br i1 %4072, label %4095, label %4073

4073:                                             ; preds = %4068
  %4074 = icmp eq i32 %4069, %4071
  br i1 %4074, label %4075, label %4111

4075:                                             ; preds = %4073
  store i32 0, ptr %4, align 4, !tbaa !6
  %4076 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4076, ptr %6, align 4, !tbaa !6
  br i1 %3828, label %4118, label %4077

4077:                                             ; preds = %4075, %4105
  %4078 = phi i64 [ %4109, %4105 ], [ 1, %4075 ]
  %4079 = getelementptr inbounds i32, ptr %4, i64 %4078
  %4080 = load i32, ptr %4079, align 4, !tbaa !6
  %4081 = getelementptr inbounds i32, ptr %12, i64 %4078
  %4082 = load i32, ptr %4081, align 4, !tbaa !6
  %4083 = add nsw i32 %4082, -1
  %4084 = icmp slt i32 %4080, %4083
  br i1 %4084, label %4085, label %4103

4085:                                             ; preds = %4077
  br i1 %4072, label %4095, label %4086

4086:                                             ; preds = %4085
  %4087 = shl i64 %4078, 32
  %4088 = add i64 %4087, -4294967296
  %4089 = ashr exact i64 %4088, 32
  %4090 = getelementptr inbounds i32, ptr %7, i64 %4089
  %4091 = load i32, ptr %4090, align 4, !tbaa !6
  %4092 = getelementptr inbounds i32, ptr %6, i64 %4078
  %4093 = load i32, ptr %4092, align 4, !tbaa !6
  %4094 = add nsw i32 %4093, %4091
  store i32 %4094, ptr %4092, align 4, !tbaa !6
  br label %4113

4095:                                             ; preds = %4068, %4085
  %4096 = phi i32 [ %4080, %4085 ], [ %4069, %4068 ]
  %4097 = phi ptr [ %4079, %4085 ], [ %4, %4068 ]
  %4098 = phi i64 [ %4078, %4085 ], [ 0, %4068 ]
  %4099 = add nsw i32 %4096, 1
  store i32 %4099, ptr %4097, align 4, !tbaa !6
  %4100 = getelementptr inbounds i32, ptr %7, i64 %4098
  %4101 = load i32, ptr %4100, align 4, !tbaa !6
  %4102 = getelementptr inbounds i32, ptr %6, i64 %4098
  br label %4113

4103:                                             ; preds = %4077
  %4104 = icmp eq i32 %4080, %4083
  br i1 %4104, label %4105, label %4111

4105:                                             ; preds = %4103
  store i32 0, ptr %4079, align 4, !tbaa !6
  %4106 = getelementptr inbounds i32, ptr %8, i64 %4078
  %4107 = load i32, ptr %4106, align 4, !tbaa !6
  %4108 = getelementptr inbounds i32, ptr %6, i64 %4078
  store i32 %4107, ptr %4108, align 4, !tbaa !6
  %4109 = add nuw nsw i64 %4078, 1
  %4110 = icmp eq i64 %4109, %3826
  br i1 %4110, label %4118, label %4077, !llvm.loop !333

4111:                                             ; preds = %4073, %4103
  %4112 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4113:                                             ; preds = %4086, %4095
  %4114 = phi ptr [ %4102, %4095 ], [ %4079, %4086 ]
  %4115 = phi i32 [ %4101, %4095 ], [ 1, %4086 ]
  %4116 = load i32, ptr %4114, align 4, !tbaa !6
  %4117 = add nsw i32 %4116, %4115
  store i32 %4117, ptr %4114, align 4, !tbaa !6
  br label %4118

4118:                                             ; preds = %4105, %4113, %4075, %4056
  %4119 = icmp eq i32 %4067, %5
  br i1 %4119, label %5686, label %3978, !llvm.loop !334

4120:                                             ; preds = %3814
  %4121 = getelementptr inbounds i32, ptr %3, i64 %19
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = icmp eq i32 %4122, 0
  %4124 = icmp sgt i32 %5, 0
  br i1 %4123, label %4134, label %4125

4125:                                             ; preds = %4120
  br i1 %4124, label %4126, label %5686

4126:                                             ; preds = %4125
  %4127 = icmp sgt i32 %13, 1
  %4128 = icmp sgt i32 %13, 0
  %4129 = add i32 %13, -2
  %4130 = zext i32 %4129 to i64
  %4131 = zext i32 %13 to i64
  %4132 = add nuw i32 %5, 1
  %4133 = icmp eq i32 %13, 1
  br label %4280

4134:                                             ; preds = %4120
  br i1 %4124, label %4135, label %5686

4135:                                             ; preds = %4134
  %4136 = icmp sgt i32 %13, 1
  %4137 = icmp sgt i32 %13, 0
  %4138 = add i32 %13, -2
  %4139 = zext i32 %4138 to i64
  %4140 = zext i32 %13 to i64
  %4141 = add nuw i32 %5, 1
  %4142 = icmp eq i32 %13, 1
  br label %4143

4143:                                             ; preds = %4135, %4278
  %4144 = phi double [ 0.000000e+00, %4135 ], [ %4228, %4278 ]
  %4145 = phi i32 [ 0, %4135 ], [ %4230, %4278 ]
  %4146 = phi double [ 0.000000e+00, %4135 ], [ %4229, %4278 ]
  %4147 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4136, label %4148, label %4217

4148:                                             ; preds = %4143, %4207
  %4149 = phi i32 [ %4216, %4207 ], [ 0, %4143 ]
  %4150 = phi i64 [ %4158, %4207 ], [ %4140, %4143 ]
  %4151 = phi i64 [ %4215, %4207 ], [ %4139, %4143 ]
  %4152 = phi i32 [ %4213, %4207 ], [ %4147, %4143 ]
  %4153 = sub i32 %4138, %4149
  %4154 = tail call i32 @llvm.smin.i32(i32 %4153, i32 0)
  %4155 = sub i32 %4153, %4154
  %4156 = zext i32 %4155 to i64
  %4157 = add nuw nsw i64 %4156, 1
  %4158 = add nsw i64 %4150, -1
  %4159 = icmp ult i32 %4155, 31
  br i1 %4159, label %4195, label %4160

4160:                                             ; preds = %4148
  %4161 = and i64 %4157, 8589934560
  %4162 = sub i64 %4151, %4161
  br label %4163

4163:                                             ; preds = %4163, %4160
  %4164 = phi i64 [ 0, %4160 ], [ %4187, %4163 ]
  %4165 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4183, %4163 ]
  %4166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4184, %4163 ]
  %4167 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4185, %4163 ]
  %4168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4186, %4163 ]
  %4169 = sub i64 %4151, %4164
  %4170 = getelementptr inbounds i32, ptr %9, i64 %4169
  %4171 = getelementptr inbounds i32, ptr %4170, i64 -7
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !6
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4170, i64 -15
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !6
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = getelementptr inbounds i32, ptr %4170, i64 -23
  %4178 = load <8 x i32>, ptr %4177, align 4, !tbaa !6
  %4179 = shufflevector <8 x i32> %4178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4180 = getelementptr inbounds i32, ptr %4170, i64 -31
  %4181 = load <8 x i32>, ptr %4180, align 4, !tbaa !6
  %4182 = shufflevector <8 x i32> %4181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4183 = mul <8 x i32> %4173, %4165
  %4184 = mul <8 x i32> %4176, %4166
  %4185 = mul <8 x i32> %4179, %4167
  %4186 = mul <8 x i32> %4182, %4168
  %4187 = add nuw i64 %4164, 32
  %4188 = icmp eq i64 %4187, %4161
  br i1 %4188, label %4189, label %4163, !llvm.loop !335

4189:                                             ; preds = %4163
  %4190 = mul <8 x i32> %4184, %4183
  %4191 = mul <8 x i32> %4185, %4190
  %4192 = mul <8 x i32> %4186, %4191
  %4193 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4192)
  %4194 = icmp eq i64 %4157, %4161
  br i1 %4194, label %4207, label %4195

4195:                                             ; preds = %4148, %4189
  %4196 = phi i64 [ %4151, %4148 ], [ %4162, %4189 ]
  %4197 = phi i32 [ 1, %4148 ], [ %4193, %4189 ]
  br label %4198

4198:                                             ; preds = %4195, %4198
  %4199 = phi i64 [ %4204, %4198 ], [ %4196, %4195 ]
  %4200 = phi i32 [ %4203, %4198 ], [ %4197, %4195 ]
  %4201 = getelementptr inbounds i32, ptr %9, i64 %4199
  %4202 = load i32, ptr %4201, align 4, !tbaa !6
  %4203 = mul nsw i32 %4202, %4200
  %4204 = add nsw i64 %4199, -1
  %4205 = trunc i64 %4199 to i32
  %4206 = icmp sgt i32 %4205, 0
  br i1 %4206, label %4198, label %4207, !llvm.loop !336

4207:                                             ; preds = %4198, %4189
  %4208 = phi i32 [ %4193, %4189 ], [ %4203, %4198 ]
  %4209 = and i64 %4158, 4294967295
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4209
  %4211 = load i32, ptr %4210, align 4, !tbaa !6
  %4212 = mul nsw i32 %4211, %4208
  %4213 = add nsw i32 %4212, %4152
  %4214 = icmp sgt i64 %4150, 2
  %4215 = add nsw i64 %4151, -1
  %4216 = add i32 %4149, 1
  br i1 %4214, label %4148, label %4217, !llvm.loop !337

4217:                                             ; preds = %4207, %4143
  %4218 = phi i32 [ %4147, %4143 ], [ %4213, %4207 ]
  %4219 = sext i32 %4218 to i64
  %4220 = getelementptr inbounds i32, ptr %3802, i64 %4219
  %4221 = load i32, ptr %4220, align 4, !tbaa !6
  %4222 = sitofp i32 %4221 to double
  %4223 = icmp slt i32 %4221, 0
  %4224 = fneg fast double %4222
  %4225 = select i1 %4223, double %4224, double %4222
  %4226 = fmul fast double %4222, %4222
  %4227 = fmul fast double %4226, %4225
  %4228 = fadd fast double %4227, %4144
  %4229 = fadd fast double %4146, 1.000000e+00
  %4230 = add nuw nsw i32 %4145, 1
  br i1 %4137, label %4231, label %4278

4231:                                             ; preds = %4217
  %4232 = load i32, ptr %4, align 4, !tbaa !6
  %4233 = load i32, ptr %12, align 4, !tbaa !6
  %4234 = add nsw i32 %4233, -1
  %4235 = icmp slt i32 %4232, %4234
  br i1 %4235, label %4255, label %4236

4236:                                             ; preds = %4231
  %4237 = icmp eq i32 %4232, %4234
  br i1 %4237, label %4238, label %4271

4238:                                             ; preds = %4236
  store i32 0, ptr %4, align 4, !tbaa !6
  %4239 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4239, ptr %6, align 4, !tbaa !6
  br i1 %4142, label %4278, label %4240

4240:                                             ; preds = %4238, %4265
  %4241 = phi i64 [ %4269, %4265 ], [ 1, %4238 ]
  %4242 = getelementptr inbounds i32, ptr %4, i64 %4241
  %4243 = load i32, ptr %4242, align 4, !tbaa !6
  %4244 = getelementptr inbounds i32, ptr %12, i64 %4241
  %4245 = load i32, ptr %4244, align 4, !tbaa !6
  %4246 = add nsw i32 %4245, -1
  %4247 = icmp slt i32 %4243, %4246
  br i1 %4247, label %4248, label %4263

4248:                                             ; preds = %4240
  br i1 %4235, label %4255, label %4249

4249:                                             ; preds = %4248
  %4250 = getelementptr inbounds i32, ptr %7, i64 %4241
  %4251 = load i32, ptr %4250, align 4, !tbaa !6
  %4252 = getelementptr inbounds i32, ptr %6, i64 %4241
  %4253 = load i32, ptr %4252, align 4, !tbaa !6
  %4254 = add nsw i32 %4253, %4251
  store i32 %4254, ptr %4252, align 4, !tbaa !6
  br label %4273

4255:                                             ; preds = %4231, %4248
  %4256 = phi i32 [ %4243, %4248 ], [ %4232, %4231 ]
  %4257 = phi ptr [ %4242, %4248 ], [ %4, %4231 ]
  %4258 = phi i64 [ %4241, %4248 ], [ 0, %4231 ]
  %4259 = add nsw i32 %4256, 1
  store i32 %4259, ptr %4257, align 4, !tbaa !6
  %4260 = getelementptr inbounds i32, ptr %7, i64 %4258
  %4261 = load i32, ptr %4260, align 4, !tbaa !6
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4258
  br label %4273

4263:                                             ; preds = %4240
  %4264 = icmp eq i32 %4243, %4246
  br i1 %4264, label %4265, label %4271

4265:                                             ; preds = %4263
  store i32 0, ptr %4242, align 4, !tbaa !6
  %4266 = getelementptr inbounds i32, ptr %8, i64 %4241
  %4267 = load i32, ptr %4266, align 4, !tbaa !6
  %4268 = getelementptr inbounds i32, ptr %6, i64 %4241
  store i32 %4267, ptr %4268, align 4, !tbaa !6
  %4269 = add nuw nsw i64 %4241, 1
  %4270 = icmp eq i64 %4269, %4140
  br i1 %4270, label %4278, label %4240, !llvm.loop !338

4271:                                             ; preds = %4236, %4263
  store double %4228, ptr %3804, align 8, !tbaa !19
  %4272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4273:                                             ; preds = %4249, %4255
  %4274 = phi ptr [ %4262, %4255 ], [ %4242, %4249 ]
  %4275 = phi i32 [ %4261, %4255 ], [ 1, %4249 ]
  %4276 = load i32, ptr %4274, align 4, !tbaa !6
  %4277 = add nsw i32 %4276, %4275
  store i32 %4277, ptr %4274, align 4, !tbaa !6
  br label %4278

4278:                                             ; preds = %4265, %4273, %4238, %4217
  %4279 = icmp eq i32 %4230, %5
  br i1 %4279, label %5682, label %4143, !llvm.loop !339

4280:                                             ; preds = %4126, %4420
  %4281 = phi double [ 0.000000e+00, %4126 ], [ %4368, %4420 ]
  %4282 = phi i32 [ 0, %4126 ], [ %4369, %4420 ]
  %4283 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4127, label %4284, label %4353

4284:                                             ; preds = %4280, %4343
  %4285 = phi i32 [ %4352, %4343 ], [ 0, %4280 ]
  %4286 = phi i64 [ %4294, %4343 ], [ %4131, %4280 ]
  %4287 = phi i64 [ %4351, %4343 ], [ %4130, %4280 ]
  %4288 = phi i32 [ %4349, %4343 ], [ %4283, %4280 ]
  %4289 = sub i32 %4129, %4285
  %4290 = tail call i32 @llvm.smin.i32(i32 %4289, i32 0)
  %4291 = sub i32 %4289, %4290
  %4292 = zext i32 %4291 to i64
  %4293 = add nuw nsw i64 %4292, 1
  %4294 = add nsw i64 %4286, -1
  %4295 = icmp ult i32 %4291, 31
  br i1 %4295, label %4331, label %4296

4296:                                             ; preds = %4284
  %4297 = and i64 %4293, 8589934560
  %4298 = sub i64 %4287, %4297
  br label %4299

4299:                                             ; preds = %4299, %4296
  %4300 = phi i64 [ 0, %4296 ], [ %4323, %4299 ]
  %4301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4319, %4299 ]
  %4302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4320, %4299 ]
  %4303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4321, %4299 ]
  %4304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4322, %4299 ]
  %4305 = sub i64 %4287, %4300
  %4306 = getelementptr inbounds i32, ptr %11, i64 %4305
  %4307 = getelementptr inbounds i32, ptr %4306, i64 -7
  %4308 = load <8 x i32>, ptr %4307, align 4, !tbaa !6
  %4309 = shufflevector <8 x i32> %4308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4310 = getelementptr inbounds i32, ptr %4306, i64 -15
  %4311 = load <8 x i32>, ptr %4310, align 4, !tbaa !6
  %4312 = shufflevector <8 x i32> %4311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4313 = getelementptr inbounds i32, ptr %4306, i64 -23
  %4314 = load <8 x i32>, ptr %4313, align 4, !tbaa !6
  %4315 = shufflevector <8 x i32> %4314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4316 = getelementptr inbounds i32, ptr %4306, i64 -31
  %4317 = load <8 x i32>, ptr %4316, align 4, !tbaa !6
  %4318 = shufflevector <8 x i32> %4317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4319 = mul <8 x i32> %4309, %4301
  %4320 = mul <8 x i32> %4312, %4302
  %4321 = mul <8 x i32> %4315, %4303
  %4322 = mul <8 x i32> %4318, %4304
  %4323 = add nuw i64 %4300, 32
  %4324 = icmp eq i64 %4323, %4297
  br i1 %4324, label %4325, label %4299, !llvm.loop !340

4325:                                             ; preds = %4299
  %4326 = mul <8 x i32> %4320, %4319
  %4327 = mul <8 x i32> %4321, %4326
  %4328 = mul <8 x i32> %4322, %4327
  %4329 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4328)
  %4330 = icmp eq i64 %4293, %4297
  br i1 %4330, label %4343, label %4331

4331:                                             ; preds = %4284, %4325
  %4332 = phi i64 [ %4287, %4284 ], [ %4298, %4325 ]
  %4333 = phi i32 [ 1, %4284 ], [ %4329, %4325 ]
  br label %4334

4334:                                             ; preds = %4331, %4334
  %4335 = phi i64 [ %4340, %4334 ], [ %4332, %4331 ]
  %4336 = phi i32 [ %4339, %4334 ], [ %4333, %4331 ]
  %4337 = getelementptr inbounds i32, ptr %11, i64 %4335
  %4338 = load i32, ptr %4337, align 4, !tbaa !6
  %4339 = mul nsw i32 %4338, %4336
  %4340 = add nsw i64 %4335, -1
  %4341 = trunc i64 %4335 to i32
  %4342 = icmp sgt i32 %4341, 0
  br i1 %4342, label %4334, label %4343, !llvm.loop !341

4343:                                             ; preds = %4334, %4325
  %4344 = phi i32 [ %4329, %4325 ], [ %4339, %4334 ]
  %4345 = and i64 %4294, 4294967295
  %4346 = getelementptr inbounds i32, ptr %6, i64 %4345
  %4347 = load i32, ptr %4346, align 4, !tbaa !6
  %4348 = mul nsw i32 %4347, %4344
  %4349 = add nsw i32 %4348, %4288
  %4350 = icmp sgt i64 %4286, 2
  %4351 = add nsw i64 %4287, -1
  %4352 = add i32 %4285, 1
  br i1 %4350, label %4284, label %4353, !llvm.loop !342

4353:                                             ; preds = %4343, %4280
  %4354 = phi i32 [ %4283, %4280 ], [ %4349, %4343 ]
  %4355 = icmp slt i32 %4354, %5
  br i1 %4355, label %4358, label %4356

4356:                                             ; preds = %4353
  %4357 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4358:                                             ; preds = %4353
  %4359 = sext i32 %4354 to i64
  %4360 = getelementptr inbounds i32, ptr %3802, i64 %4359
  %4361 = load i32, ptr %4360, align 4, !tbaa !6
  %4362 = sitofp i32 %4361 to double
  %4363 = icmp slt i32 %4361, 0
  %4364 = fneg fast double %4362
  %4365 = select i1 %4363, double %4364, double %4362
  %4366 = fmul fast double %4362, %4362
  %4367 = fmul fast double %4366, %4365
  %4368 = fadd fast double %4367, %4281
  store double %4368, ptr %3804, align 8, !tbaa !19
  %4369 = add nuw nsw i32 %4282, 1
  br i1 %4128, label %4370, label %4420

4370:                                             ; preds = %4358
  %4371 = load i32, ptr %4, align 4, !tbaa !6
  %4372 = load i32, ptr %12, align 4, !tbaa !6
  %4373 = add nsw i32 %4372, -1
  %4374 = icmp slt i32 %4371, %4373
  br i1 %4374, label %4397, label %4375

4375:                                             ; preds = %4370
  %4376 = icmp eq i32 %4371, %4373
  br i1 %4376, label %4377, label %4413

4377:                                             ; preds = %4375
  store i32 0, ptr %4, align 4, !tbaa !6
  %4378 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4378, ptr %6, align 4, !tbaa !6
  br i1 %4133, label %4420, label %4379

4379:                                             ; preds = %4377, %4407
  %4380 = phi i64 [ %4411, %4407 ], [ 1, %4377 ]
  %4381 = getelementptr inbounds i32, ptr %4, i64 %4380
  %4382 = load i32, ptr %4381, align 4, !tbaa !6
  %4383 = getelementptr inbounds i32, ptr %12, i64 %4380
  %4384 = load i32, ptr %4383, align 4, !tbaa !6
  %4385 = add nsw i32 %4384, -1
  %4386 = icmp slt i32 %4382, %4385
  br i1 %4386, label %4387, label %4405

4387:                                             ; preds = %4379
  br i1 %4374, label %4397, label %4388

4388:                                             ; preds = %4387
  %4389 = shl i64 %4380, 32
  %4390 = add i64 %4389, -4294967296
  %4391 = ashr exact i64 %4390, 32
  %4392 = getelementptr inbounds i32, ptr %7, i64 %4391
  %4393 = load i32, ptr %4392, align 4, !tbaa !6
  %4394 = getelementptr inbounds i32, ptr %6, i64 %4380
  %4395 = load i32, ptr %4394, align 4, !tbaa !6
  %4396 = add nsw i32 %4395, %4393
  store i32 %4396, ptr %4394, align 4, !tbaa !6
  br label %4415

4397:                                             ; preds = %4370, %4387
  %4398 = phi i32 [ %4382, %4387 ], [ %4371, %4370 ]
  %4399 = phi ptr [ %4381, %4387 ], [ %4, %4370 ]
  %4400 = phi i64 [ %4380, %4387 ], [ 0, %4370 ]
  %4401 = add nsw i32 %4398, 1
  store i32 %4401, ptr %4399, align 4, !tbaa !6
  %4402 = getelementptr inbounds i32, ptr %7, i64 %4400
  %4403 = load i32, ptr %4402, align 4, !tbaa !6
  %4404 = getelementptr inbounds i32, ptr %6, i64 %4400
  br label %4415

4405:                                             ; preds = %4379
  %4406 = icmp eq i32 %4382, %4385
  br i1 %4406, label %4407, label %4413

4407:                                             ; preds = %4405
  store i32 0, ptr %4381, align 4, !tbaa !6
  %4408 = getelementptr inbounds i32, ptr %8, i64 %4380
  %4409 = load i32, ptr %4408, align 4, !tbaa !6
  %4410 = getelementptr inbounds i32, ptr %6, i64 %4380
  store i32 %4409, ptr %4410, align 4, !tbaa !6
  %4411 = add nuw nsw i64 %4380, 1
  %4412 = icmp eq i64 %4411, %4131
  br i1 %4412, label %4420, label %4379, !llvm.loop !343

4413:                                             ; preds = %4375, %4405
  %4414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4415:                                             ; preds = %4388, %4397
  %4416 = phi ptr [ %4404, %4397 ], [ %4381, %4388 ]
  %4417 = phi i32 [ %4403, %4397 ], [ 1, %4388 ]
  %4418 = load i32, ptr %4416, align 4, !tbaa !6
  %4419 = add nsw i32 %4418, %4417
  store i32 %4419, ptr %4416, align 4, !tbaa !6
  br label %4420

4420:                                             ; preds = %4407, %4415, %4377, %4358
  %4421 = icmp eq i32 %4369, %5
  br i1 %4421, label %5686, label %4280, !llvm.loop !344

4422:                                             ; preds = %3814
  %4423 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

4424:                                             ; preds = %18
  %4425 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4426 = load ptr, ptr %4425, align 8, !tbaa !10
  %4427 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4428 = load ptr, ptr %4427, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4428, align 4, !tbaa !163
  %4429 = icmp eq i32 %13, 0
  br i1 %4429, label %4430, label %4438

4430:                                             ; preds = %4424
  %4431 = load i32, ptr %4426, align 4, !tbaa !6
  %4432 = sitofp i32 %4431 to float
  %4433 = icmp slt i32 %4431, 0
  %4434 = fneg fast float %4432
  %4435 = select i1 %4433, float %4434, float %4432
  %4436 = fmul fast float %4432, %4432
  %4437 = fmul fast float %4436, %4435
  store float %4437, ptr %4428, align 4, !tbaa !163
  br label %5686

4438:                                             ; preds = %4424
  switch i32 %1, label %5052 [
    i32 1, label %4439
    i32 0, label %4750
  ]

4439:                                             ; preds = %4438
  %4440 = getelementptr inbounds i32, ptr %3, i64 %19
  %4441 = load i32, ptr %4440, align 4, !tbaa !6
  %4442 = icmp eq i32 %4441, 0
  %4443 = icmp sgt i32 %5, 0
  br i1 %4442, label %4453, label %4444

4444:                                             ; preds = %4439
  br i1 %4443, label %4445, label %5686

4445:                                             ; preds = %4444
  %4446 = icmp sgt i32 %13, 1
  %4447 = icmp sgt i32 %13, 0
  %4448 = add i32 %13, -2
  %4449 = zext i32 %4448 to i64
  %4450 = zext i32 %13 to i64
  %4451 = add nuw i32 %5, 1
  %4452 = icmp eq i32 %13, 1
  br label %4605

4453:                                             ; preds = %4439
  br i1 %4443, label %4454, label %5686

4454:                                             ; preds = %4453
  %4455 = icmp sgt i32 %13, 1
  %4456 = icmp sgt i32 %13, 0
  %4457 = add i32 %13, -2
  %4458 = zext i32 %4457 to i64
  %4459 = zext i32 %13 to i64
  %4460 = add nuw i32 %5, 1
  %4461 = icmp eq i32 %13, 1
  br label %4462

4462:                                             ; preds = %4454, %4603
  %4463 = phi float [ 0.000000e+00, %4454 ], [ %4553, %4603 ]
  %4464 = phi i32 [ 0, %4454 ], [ %4555, %4603 ]
  %4465 = phi double [ 0.000000e+00, %4454 ], [ %4554, %4603 ]
  %4466 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4455, label %4467, label %4536

4467:                                             ; preds = %4462, %4526
  %4468 = phi i32 [ %4535, %4526 ], [ 0, %4462 ]
  %4469 = phi i64 [ %4477, %4526 ], [ %4459, %4462 ]
  %4470 = phi i64 [ %4534, %4526 ], [ %4458, %4462 ]
  %4471 = phi i32 [ %4532, %4526 ], [ %4466, %4462 ]
  %4472 = sub i32 %4457, %4468
  %4473 = tail call i32 @llvm.smin.i32(i32 %4472, i32 0)
  %4474 = sub i32 %4472, %4473
  %4475 = zext i32 %4474 to i64
  %4476 = add nuw nsw i64 %4475, 1
  %4477 = add nsw i64 %4469, -1
  %4478 = icmp ult i32 %4474, 31
  br i1 %4478, label %4514, label %4479

4479:                                             ; preds = %4467
  %4480 = and i64 %4476, 8589934560
  %4481 = sub i64 %4470, %4480
  br label %4482

4482:                                             ; preds = %4482, %4479
  %4483 = phi i64 [ 0, %4479 ], [ %4506, %4482 ]
  %4484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4502, %4482 ]
  %4485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4503, %4482 ]
  %4486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4504, %4482 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4505, %4482 ]
  %4488 = sub i64 %4470, %4483
  %4489 = getelementptr inbounds i32, ptr %9, i64 %4488
  %4490 = getelementptr inbounds i32, ptr %4489, i64 -7
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !6
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4489, i64 -15
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !6
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4489, i64 -23
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !6
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = getelementptr inbounds i32, ptr %4489, i64 -31
  %4500 = load <8 x i32>, ptr %4499, align 4, !tbaa !6
  %4501 = shufflevector <8 x i32> %4500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4502 = mul <8 x i32> %4492, %4484
  %4503 = mul <8 x i32> %4495, %4485
  %4504 = mul <8 x i32> %4498, %4486
  %4505 = mul <8 x i32> %4501, %4487
  %4506 = add nuw i64 %4483, 32
  %4507 = icmp eq i64 %4506, %4480
  br i1 %4507, label %4508, label %4482, !llvm.loop !345

4508:                                             ; preds = %4482
  %4509 = mul <8 x i32> %4503, %4502
  %4510 = mul <8 x i32> %4504, %4509
  %4511 = mul <8 x i32> %4505, %4510
  %4512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4511)
  %4513 = icmp eq i64 %4476, %4480
  br i1 %4513, label %4526, label %4514

4514:                                             ; preds = %4467, %4508
  %4515 = phi i64 [ %4470, %4467 ], [ %4481, %4508 ]
  %4516 = phi i32 [ 1, %4467 ], [ %4512, %4508 ]
  br label %4517

4517:                                             ; preds = %4514, %4517
  %4518 = phi i64 [ %4523, %4517 ], [ %4515, %4514 ]
  %4519 = phi i32 [ %4522, %4517 ], [ %4516, %4514 ]
  %4520 = getelementptr inbounds i32, ptr %9, i64 %4518
  %4521 = load i32, ptr %4520, align 4, !tbaa !6
  %4522 = mul nsw i32 %4521, %4519
  %4523 = add nsw i64 %4518, -1
  %4524 = trunc i64 %4518 to i32
  %4525 = icmp sgt i32 %4524, 0
  br i1 %4525, label %4517, label %4526, !llvm.loop !346

4526:                                             ; preds = %4517, %4508
  %4527 = phi i32 [ %4512, %4508 ], [ %4522, %4517 ]
  %4528 = and i64 %4477, 4294967295
  %4529 = getelementptr inbounds i32, ptr %6, i64 %4528
  %4530 = load i32, ptr %4529, align 4, !tbaa !6
  %4531 = mul nsw i32 %4530, %4527
  %4532 = add nsw i32 %4531, %4471
  %4533 = icmp sgt i64 %4469, 2
  %4534 = add nsw i64 %4470, -1
  %4535 = add i32 %4468, 1
  br i1 %4533, label %4467, label %4536, !llvm.loop !347

4536:                                             ; preds = %4526, %4462
  %4537 = phi i32 [ %4466, %4462 ], [ %4532, %4526 ]
  %4538 = sext i32 %4537 to i64
  %4539 = getelementptr inbounds double, ptr %2, i64 %4538
  %4540 = load double, ptr %4539, align 8, !tbaa !19
  %4541 = getelementptr inbounds i32, ptr %4426, i64 %4538
  %4542 = load i32, ptr %4541, align 4, !tbaa !6
  %4543 = sitofp i32 %4542 to float
  %4544 = fpext float %4463 to double
  %4545 = fpext float %4543 to double
  %4546 = fmul fast double %4540, %4545
  %4547 = fcmp fast olt double %4546, 0.000000e+00
  %4548 = fneg fast double %4546
  %4549 = select nnan ninf i1 %4547, double %4548, double %4546
  %4550 = fmul fast double %4546, %4546
  %4551 = fmul fast double %4550, %4549
  %4552 = fadd fast double %4551, %4544
  %4553 = fptrunc double %4552 to float
  %4554 = fadd fast double %4540, %4465
  %4555 = add nuw nsw i32 %4464, 1
  br i1 %4456, label %4556, label %4603

4556:                                             ; preds = %4536
  %4557 = load i32, ptr %4, align 4, !tbaa !6
  %4558 = load i32, ptr %12, align 4, !tbaa !6
  %4559 = add nsw i32 %4558, -1
  %4560 = icmp slt i32 %4557, %4559
  br i1 %4560, label %4580, label %4561

4561:                                             ; preds = %4556
  %4562 = icmp eq i32 %4557, %4559
  br i1 %4562, label %4563, label %4596

4563:                                             ; preds = %4561
  store i32 0, ptr %4, align 4, !tbaa !6
  %4564 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4564, ptr %6, align 4, !tbaa !6
  br i1 %4461, label %4603, label %4565

4565:                                             ; preds = %4563, %4590
  %4566 = phi i64 [ %4594, %4590 ], [ 1, %4563 ]
  %4567 = getelementptr inbounds i32, ptr %4, i64 %4566
  %4568 = load i32, ptr %4567, align 4, !tbaa !6
  %4569 = getelementptr inbounds i32, ptr %12, i64 %4566
  %4570 = load i32, ptr %4569, align 4, !tbaa !6
  %4571 = add nsw i32 %4570, -1
  %4572 = icmp slt i32 %4568, %4571
  br i1 %4572, label %4573, label %4588

4573:                                             ; preds = %4565
  br i1 %4560, label %4580, label %4574

4574:                                             ; preds = %4573
  %4575 = getelementptr inbounds i32, ptr %7, i64 %4566
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = getelementptr inbounds i32, ptr %6, i64 %4566
  %4578 = load i32, ptr %4577, align 4, !tbaa !6
  %4579 = add nsw i32 %4578, %4576
  store i32 %4579, ptr %4577, align 4, !tbaa !6
  br label %4598

4580:                                             ; preds = %4556, %4573
  %4581 = phi i32 [ %4568, %4573 ], [ %4557, %4556 ]
  %4582 = phi ptr [ %4567, %4573 ], [ %4, %4556 ]
  %4583 = phi i64 [ %4566, %4573 ], [ 0, %4556 ]
  %4584 = add nsw i32 %4581, 1
  store i32 %4584, ptr %4582, align 4, !tbaa !6
  %4585 = getelementptr inbounds i32, ptr %7, i64 %4583
  %4586 = load i32, ptr %4585, align 4, !tbaa !6
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4583
  br label %4598

4588:                                             ; preds = %4565
  %4589 = icmp eq i32 %4568, %4571
  br i1 %4589, label %4590, label %4596

4590:                                             ; preds = %4588
  store i32 0, ptr %4567, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %8, i64 %4566
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = getelementptr inbounds i32, ptr %6, i64 %4566
  store i32 %4592, ptr %4593, align 4, !tbaa !6
  %4594 = add nuw nsw i64 %4566, 1
  %4595 = icmp eq i64 %4594, %4459
  br i1 %4595, label %4603, label %4565, !llvm.loop !348

4596:                                             ; preds = %4561, %4588
  store float %4553, ptr %4428, align 4, !tbaa !163
  %4597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4598:                                             ; preds = %4574, %4580
  %4599 = phi ptr [ %4587, %4580 ], [ %4567, %4574 ]
  %4600 = phi i32 [ %4586, %4580 ], [ 1, %4574 ]
  %4601 = load i32, ptr %4599, align 4, !tbaa !6
  %4602 = add nsw i32 %4601, %4600
  store i32 %4602, ptr %4599, align 4, !tbaa !6
  br label %4603

4603:                                             ; preds = %4590, %4598, %4563, %4536
  %4604 = icmp eq i32 %4555, %5
  br i1 %4604, label %5683, label %4462, !llvm.loop !349

4605:                                             ; preds = %4445, %4748
  %4606 = phi float [ 0.000000e+00, %4445 ], [ %4696, %4748 ]
  %4607 = phi i32 [ 0, %4445 ], [ %4697, %4748 ]
  %4608 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4446, label %4609, label %4678

4609:                                             ; preds = %4605, %4668
  %4610 = phi i32 [ %4677, %4668 ], [ 0, %4605 ]
  %4611 = phi i64 [ %4619, %4668 ], [ %4450, %4605 ]
  %4612 = phi i64 [ %4676, %4668 ], [ %4449, %4605 ]
  %4613 = phi i32 [ %4674, %4668 ], [ %4608, %4605 ]
  %4614 = sub i32 %4448, %4610
  %4615 = tail call i32 @llvm.smin.i32(i32 %4614, i32 0)
  %4616 = sub i32 %4614, %4615
  %4617 = zext i32 %4616 to i64
  %4618 = add nuw nsw i64 %4617, 1
  %4619 = add nsw i64 %4611, -1
  %4620 = icmp ult i32 %4616, 31
  br i1 %4620, label %4656, label %4621

4621:                                             ; preds = %4609
  %4622 = and i64 %4618, 8589934560
  %4623 = sub i64 %4612, %4622
  br label %4624

4624:                                             ; preds = %4624, %4621
  %4625 = phi i64 [ 0, %4621 ], [ %4648, %4624 ]
  %4626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4644, %4624 ]
  %4627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4645, %4624 ]
  %4628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4646, %4624 ]
  %4629 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4647, %4624 ]
  %4630 = sub i64 %4612, %4625
  %4631 = getelementptr inbounds i32, ptr %11, i64 %4630
  %4632 = getelementptr inbounds i32, ptr %4631, i64 -7
  %4633 = load <8 x i32>, ptr %4632, align 4, !tbaa !6
  %4634 = shufflevector <8 x i32> %4633, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4635 = getelementptr inbounds i32, ptr %4631, i64 -15
  %4636 = load <8 x i32>, ptr %4635, align 4, !tbaa !6
  %4637 = shufflevector <8 x i32> %4636, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4638 = getelementptr inbounds i32, ptr %4631, i64 -23
  %4639 = load <8 x i32>, ptr %4638, align 4, !tbaa !6
  %4640 = shufflevector <8 x i32> %4639, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4641 = getelementptr inbounds i32, ptr %4631, i64 -31
  %4642 = load <8 x i32>, ptr %4641, align 4, !tbaa !6
  %4643 = shufflevector <8 x i32> %4642, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4644 = mul <8 x i32> %4634, %4626
  %4645 = mul <8 x i32> %4637, %4627
  %4646 = mul <8 x i32> %4640, %4628
  %4647 = mul <8 x i32> %4643, %4629
  %4648 = add nuw i64 %4625, 32
  %4649 = icmp eq i64 %4648, %4622
  br i1 %4649, label %4650, label %4624, !llvm.loop !350

4650:                                             ; preds = %4624
  %4651 = mul <8 x i32> %4645, %4644
  %4652 = mul <8 x i32> %4646, %4651
  %4653 = mul <8 x i32> %4647, %4652
  %4654 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4653)
  %4655 = icmp eq i64 %4618, %4622
  br i1 %4655, label %4668, label %4656

4656:                                             ; preds = %4609, %4650
  %4657 = phi i64 [ %4612, %4609 ], [ %4623, %4650 ]
  %4658 = phi i32 [ 1, %4609 ], [ %4654, %4650 ]
  br label %4659

4659:                                             ; preds = %4656, %4659
  %4660 = phi i64 [ %4665, %4659 ], [ %4657, %4656 ]
  %4661 = phi i32 [ %4664, %4659 ], [ %4658, %4656 ]
  %4662 = getelementptr inbounds i32, ptr %11, i64 %4660
  %4663 = load i32, ptr %4662, align 4, !tbaa !6
  %4664 = mul nsw i32 %4663, %4661
  %4665 = add nsw i64 %4660, -1
  %4666 = trunc i64 %4660 to i32
  %4667 = icmp sgt i32 %4666, 0
  br i1 %4667, label %4659, label %4668, !llvm.loop !351

4668:                                             ; preds = %4659, %4650
  %4669 = phi i32 [ %4654, %4650 ], [ %4664, %4659 ]
  %4670 = and i64 %4619, 4294967295
  %4671 = getelementptr inbounds i32, ptr %6, i64 %4670
  %4672 = load i32, ptr %4671, align 4, !tbaa !6
  %4673 = mul nsw i32 %4672, %4669
  %4674 = add nsw i32 %4673, %4613
  %4675 = icmp sgt i64 %4611, 2
  %4676 = add nsw i64 %4612, -1
  %4677 = add i32 %4610, 1
  br i1 %4675, label %4609, label %4678, !llvm.loop !352

4678:                                             ; preds = %4668, %4605
  %4679 = phi i32 [ %4608, %4605 ], [ %4674, %4668 ]
  %4680 = icmp slt i32 %4679, %5
  br i1 %4680, label %4683, label %4681

4681:                                             ; preds = %4678
  %4682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4683:                                             ; preds = %4678
  %4684 = sext i32 %4679 to i64
  %4685 = getelementptr inbounds i32, ptr %4426, i64 %4684
  %4686 = load i32, ptr %4685, align 4, !tbaa !6
  %4687 = sitofp i32 %4686 to float
  %4688 = fpext float %4606 to double
  %4689 = fpext float %4687 to double
  %4690 = icmp slt i32 %4686, 0
  %4691 = fneg fast double %4689
  %4692 = select i1 %4690, double %4691, double %4689
  %4693 = fmul fast double %4689, %4689
  %4694 = fmul fast double %4693, %4692
  %4695 = fadd fast double %4694, %4688
  %4696 = fptrunc double %4695 to float
  store float %4696, ptr %4428, align 4, !tbaa !163
  %4697 = add nuw nsw i32 %4607, 1
  br i1 %4447, label %4698, label %4748

4698:                                             ; preds = %4683
  %4699 = load i32, ptr %4, align 4, !tbaa !6
  %4700 = load i32, ptr %12, align 4, !tbaa !6
  %4701 = add nsw i32 %4700, -1
  %4702 = icmp slt i32 %4699, %4701
  br i1 %4702, label %4725, label %4703

4703:                                             ; preds = %4698
  %4704 = icmp eq i32 %4699, %4701
  br i1 %4704, label %4705, label %4741

4705:                                             ; preds = %4703
  store i32 0, ptr %4, align 4, !tbaa !6
  %4706 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4706, ptr %6, align 4, !tbaa !6
  br i1 %4452, label %4748, label %4707

4707:                                             ; preds = %4705, %4735
  %4708 = phi i64 [ %4739, %4735 ], [ 1, %4705 ]
  %4709 = getelementptr inbounds i32, ptr %4, i64 %4708
  %4710 = load i32, ptr %4709, align 4, !tbaa !6
  %4711 = getelementptr inbounds i32, ptr %12, i64 %4708
  %4712 = load i32, ptr %4711, align 4, !tbaa !6
  %4713 = add nsw i32 %4712, -1
  %4714 = icmp slt i32 %4710, %4713
  br i1 %4714, label %4715, label %4733

4715:                                             ; preds = %4707
  br i1 %4702, label %4725, label %4716

4716:                                             ; preds = %4715
  %4717 = shl i64 %4708, 32
  %4718 = add i64 %4717, -4294967296
  %4719 = ashr exact i64 %4718, 32
  %4720 = getelementptr inbounds i32, ptr %7, i64 %4719
  %4721 = load i32, ptr %4720, align 4, !tbaa !6
  %4722 = getelementptr inbounds i32, ptr %6, i64 %4708
  %4723 = load i32, ptr %4722, align 4, !tbaa !6
  %4724 = add nsw i32 %4723, %4721
  store i32 %4724, ptr %4722, align 4, !tbaa !6
  br label %4743

4725:                                             ; preds = %4698, %4715
  %4726 = phi i32 [ %4710, %4715 ], [ %4699, %4698 ]
  %4727 = phi ptr [ %4709, %4715 ], [ %4, %4698 ]
  %4728 = phi i64 [ %4708, %4715 ], [ 0, %4698 ]
  %4729 = add nsw i32 %4726, 1
  store i32 %4729, ptr %4727, align 4, !tbaa !6
  %4730 = getelementptr inbounds i32, ptr %7, i64 %4728
  %4731 = load i32, ptr %4730, align 4, !tbaa !6
  %4732 = getelementptr inbounds i32, ptr %6, i64 %4728
  br label %4743

4733:                                             ; preds = %4707
  %4734 = icmp eq i32 %4710, %4713
  br i1 %4734, label %4735, label %4741

4735:                                             ; preds = %4733
  store i32 0, ptr %4709, align 4, !tbaa !6
  %4736 = getelementptr inbounds i32, ptr %8, i64 %4708
  %4737 = load i32, ptr %4736, align 4, !tbaa !6
  %4738 = getelementptr inbounds i32, ptr %6, i64 %4708
  store i32 %4737, ptr %4738, align 4, !tbaa !6
  %4739 = add nuw nsw i64 %4708, 1
  %4740 = icmp eq i64 %4739, %4450
  br i1 %4740, label %4748, label %4707, !llvm.loop !353

4741:                                             ; preds = %4703, %4733
  %4742 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4743:                                             ; preds = %4716, %4725
  %4744 = phi ptr [ %4732, %4725 ], [ %4709, %4716 ]
  %4745 = phi i32 [ %4731, %4725 ], [ 1, %4716 ]
  %4746 = load i32, ptr %4744, align 4, !tbaa !6
  %4747 = add nsw i32 %4746, %4745
  store i32 %4747, ptr %4744, align 4, !tbaa !6
  br label %4748

4748:                                             ; preds = %4735, %4743, %4705, %4683
  %4749 = icmp eq i32 %4697, %5
  br i1 %4749, label %5686, label %4605, !llvm.loop !354

4750:                                             ; preds = %4438
  %4751 = getelementptr inbounds i32, ptr %3, i64 %19
  %4752 = load i32, ptr %4751, align 4, !tbaa !6
  %4753 = icmp eq i32 %4752, 0
  %4754 = icmp sgt i32 %5, 0
  br i1 %4753, label %4764, label %4755

4755:                                             ; preds = %4750
  br i1 %4754, label %4756, label %5686

4756:                                             ; preds = %4755
  %4757 = icmp sgt i32 %13, 1
  %4758 = icmp sgt i32 %13, 0
  %4759 = add i32 %13, -2
  %4760 = zext i32 %4759 to i64
  %4761 = zext i32 %13 to i64
  %4762 = add nuw i32 %5, 1
  %4763 = icmp eq i32 %13, 1
  br label %4910

4764:                                             ; preds = %4750
  br i1 %4754, label %4765, label %5686

4765:                                             ; preds = %4764
  %4766 = icmp sgt i32 %13, 1
  %4767 = icmp sgt i32 %13, 0
  %4768 = add i32 %13, -2
  %4769 = zext i32 %4768 to i64
  %4770 = zext i32 %13 to i64
  %4771 = add nuw i32 %5, 1
  %4772 = icmp eq i32 %13, 1
  br label %4773

4773:                                             ; preds = %4765, %4908
  %4774 = phi float [ 0.000000e+00, %4765 ], [ %4858, %4908 ]
  %4775 = phi i32 [ 0, %4765 ], [ %4860, %4908 ]
  %4776 = phi double [ 0.000000e+00, %4765 ], [ %4859, %4908 ]
  %4777 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4766, label %4778, label %4847

4778:                                             ; preds = %4773, %4837
  %4779 = phi i32 [ %4846, %4837 ], [ 0, %4773 ]
  %4780 = phi i64 [ %4788, %4837 ], [ %4770, %4773 ]
  %4781 = phi i64 [ %4845, %4837 ], [ %4769, %4773 ]
  %4782 = phi i32 [ %4843, %4837 ], [ %4777, %4773 ]
  %4783 = sub i32 %4768, %4779
  %4784 = tail call i32 @llvm.smin.i32(i32 %4783, i32 0)
  %4785 = sub i32 %4783, %4784
  %4786 = zext i32 %4785 to i64
  %4787 = add nuw nsw i64 %4786, 1
  %4788 = add nsw i64 %4780, -1
  %4789 = icmp ult i32 %4785, 31
  br i1 %4789, label %4825, label %4790

4790:                                             ; preds = %4778
  %4791 = and i64 %4787, 8589934560
  %4792 = sub i64 %4781, %4791
  br label %4793

4793:                                             ; preds = %4793, %4790
  %4794 = phi i64 [ 0, %4790 ], [ %4817, %4793 ]
  %4795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4813, %4793 ]
  %4796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4814, %4793 ]
  %4797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4815, %4793 ]
  %4798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4816, %4793 ]
  %4799 = sub i64 %4781, %4794
  %4800 = getelementptr inbounds i32, ptr %9, i64 %4799
  %4801 = getelementptr inbounds i32, ptr %4800, i64 -7
  %4802 = load <8 x i32>, ptr %4801, align 4, !tbaa !6
  %4803 = shufflevector <8 x i32> %4802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4804 = getelementptr inbounds i32, ptr %4800, i64 -15
  %4805 = load <8 x i32>, ptr %4804, align 4, !tbaa !6
  %4806 = shufflevector <8 x i32> %4805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4807 = getelementptr inbounds i32, ptr %4800, i64 -23
  %4808 = load <8 x i32>, ptr %4807, align 4, !tbaa !6
  %4809 = shufflevector <8 x i32> %4808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4810 = getelementptr inbounds i32, ptr %4800, i64 -31
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !6
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = mul <8 x i32> %4803, %4795
  %4814 = mul <8 x i32> %4806, %4796
  %4815 = mul <8 x i32> %4809, %4797
  %4816 = mul <8 x i32> %4812, %4798
  %4817 = add nuw i64 %4794, 32
  %4818 = icmp eq i64 %4817, %4791
  br i1 %4818, label %4819, label %4793, !llvm.loop !355

4819:                                             ; preds = %4793
  %4820 = mul <8 x i32> %4814, %4813
  %4821 = mul <8 x i32> %4815, %4820
  %4822 = mul <8 x i32> %4816, %4821
  %4823 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4822)
  %4824 = icmp eq i64 %4787, %4791
  br i1 %4824, label %4837, label %4825

4825:                                             ; preds = %4778, %4819
  %4826 = phi i64 [ %4781, %4778 ], [ %4792, %4819 ]
  %4827 = phi i32 [ 1, %4778 ], [ %4823, %4819 ]
  br label %4828

4828:                                             ; preds = %4825, %4828
  %4829 = phi i64 [ %4834, %4828 ], [ %4826, %4825 ]
  %4830 = phi i32 [ %4833, %4828 ], [ %4827, %4825 ]
  %4831 = getelementptr inbounds i32, ptr %9, i64 %4829
  %4832 = load i32, ptr %4831, align 4, !tbaa !6
  %4833 = mul nsw i32 %4832, %4830
  %4834 = add nsw i64 %4829, -1
  %4835 = trunc i64 %4829 to i32
  %4836 = icmp sgt i32 %4835, 0
  br i1 %4836, label %4828, label %4837, !llvm.loop !356

4837:                                             ; preds = %4828, %4819
  %4838 = phi i32 [ %4823, %4819 ], [ %4833, %4828 ]
  %4839 = and i64 %4788, 4294967295
  %4840 = getelementptr inbounds i32, ptr %6, i64 %4839
  %4841 = load i32, ptr %4840, align 4, !tbaa !6
  %4842 = mul nsw i32 %4841, %4838
  %4843 = add nsw i32 %4842, %4782
  %4844 = icmp sgt i64 %4780, 2
  %4845 = add nsw i64 %4781, -1
  %4846 = add i32 %4779, 1
  br i1 %4844, label %4778, label %4847, !llvm.loop !357

4847:                                             ; preds = %4837, %4773
  %4848 = phi i32 [ %4777, %4773 ], [ %4843, %4837 ]
  %4849 = sext i32 %4848 to i64
  %4850 = getelementptr inbounds i32, ptr %4426, i64 %4849
  %4851 = load i32, ptr %4850, align 4, !tbaa !6
  %4852 = sitofp i32 %4851 to float
  %4853 = icmp slt i32 %4851, 0
  %4854 = fneg fast float %4852
  %4855 = select i1 %4853, float %4854, float %4852
  %4856 = fmul fast float %4852, %4852
  %4857 = fmul fast float %4856, %4855
  %4858 = fadd fast float %4857, %4774
  %4859 = fadd fast double %4776, 1.000000e+00
  %4860 = add nuw nsw i32 %4775, 1
  br i1 %4767, label %4861, label %4908

4861:                                             ; preds = %4847
  %4862 = load i32, ptr %4, align 4, !tbaa !6
  %4863 = load i32, ptr %12, align 4, !tbaa !6
  %4864 = add nsw i32 %4863, -1
  %4865 = icmp slt i32 %4862, %4864
  br i1 %4865, label %4885, label %4866

4866:                                             ; preds = %4861
  %4867 = icmp eq i32 %4862, %4864
  br i1 %4867, label %4868, label %4901

4868:                                             ; preds = %4866
  store i32 0, ptr %4, align 4, !tbaa !6
  %4869 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4869, ptr %6, align 4, !tbaa !6
  br i1 %4772, label %4908, label %4870

4870:                                             ; preds = %4868, %4895
  %4871 = phi i64 [ %4899, %4895 ], [ 1, %4868 ]
  %4872 = getelementptr inbounds i32, ptr %4, i64 %4871
  %4873 = load i32, ptr %4872, align 4, !tbaa !6
  %4874 = getelementptr inbounds i32, ptr %12, i64 %4871
  %4875 = load i32, ptr %4874, align 4, !tbaa !6
  %4876 = add nsw i32 %4875, -1
  %4877 = icmp slt i32 %4873, %4876
  br i1 %4877, label %4878, label %4893

4878:                                             ; preds = %4870
  br i1 %4865, label %4885, label %4879

4879:                                             ; preds = %4878
  %4880 = getelementptr inbounds i32, ptr %7, i64 %4871
  %4881 = load i32, ptr %4880, align 4, !tbaa !6
  %4882 = getelementptr inbounds i32, ptr %6, i64 %4871
  %4883 = load i32, ptr %4882, align 4, !tbaa !6
  %4884 = add nsw i32 %4883, %4881
  store i32 %4884, ptr %4882, align 4, !tbaa !6
  br label %4903

4885:                                             ; preds = %4861, %4878
  %4886 = phi i32 [ %4873, %4878 ], [ %4862, %4861 ]
  %4887 = phi ptr [ %4872, %4878 ], [ %4, %4861 ]
  %4888 = phi i64 [ %4871, %4878 ], [ 0, %4861 ]
  %4889 = add nsw i32 %4886, 1
  store i32 %4889, ptr %4887, align 4, !tbaa !6
  %4890 = getelementptr inbounds i32, ptr %7, i64 %4888
  %4891 = load i32, ptr %4890, align 4, !tbaa !6
  %4892 = getelementptr inbounds i32, ptr %6, i64 %4888
  br label %4903

4893:                                             ; preds = %4870
  %4894 = icmp eq i32 %4873, %4876
  br i1 %4894, label %4895, label %4901

4895:                                             ; preds = %4893
  store i32 0, ptr %4872, align 4, !tbaa !6
  %4896 = getelementptr inbounds i32, ptr %8, i64 %4871
  %4897 = load i32, ptr %4896, align 4, !tbaa !6
  %4898 = getelementptr inbounds i32, ptr %6, i64 %4871
  store i32 %4897, ptr %4898, align 4, !tbaa !6
  %4899 = add nuw nsw i64 %4871, 1
  %4900 = icmp eq i64 %4899, %4770
  br i1 %4900, label %4908, label %4870, !llvm.loop !358

4901:                                             ; preds = %4866, %4893
  store float %4858, ptr %4428, align 4, !tbaa !163
  %4902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4903:                                             ; preds = %4879, %4885
  %4904 = phi ptr [ %4892, %4885 ], [ %4872, %4879 ]
  %4905 = phi i32 [ %4891, %4885 ], [ 1, %4879 ]
  %4906 = load i32, ptr %4904, align 4, !tbaa !6
  %4907 = add nsw i32 %4906, %4905
  store i32 %4907, ptr %4904, align 4, !tbaa !6
  br label %4908

4908:                                             ; preds = %4895, %4903, %4868, %4847
  %4909 = icmp eq i32 %4860, %5
  br i1 %4909, label %5684, label %4773, !llvm.loop !359

4910:                                             ; preds = %4756, %5050
  %4911 = phi float [ 0.000000e+00, %4756 ], [ %4998, %5050 ]
  %4912 = phi i32 [ 0, %4756 ], [ %4999, %5050 ]
  %4913 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4757, label %4914, label %4983

4914:                                             ; preds = %4910, %4973
  %4915 = phi i32 [ %4982, %4973 ], [ 0, %4910 ]
  %4916 = phi i64 [ %4924, %4973 ], [ %4761, %4910 ]
  %4917 = phi i64 [ %4981, %4973 ], [ %4760, %4910 ]
  %4918 = phi i32 [ %4979, %4973 ], [ %4913, %4910 ]
  %4919 = sub i32 %4759, %4915
  %4920 = tail call i32 @llvm.smin.i32(i32 %4919, i32 0)
  %4921 = sub i32 %4919, %4920
  %4922 = zext i32 %4921 to i64
  %4923 = add nuw nsw i64 %4922, 1
  %4924 = add nsw i64 %4916, -1
  %4925 = icmp ult i32 %4921, 31
  br i1 %4925, label %4961, label %4926

4926:                                             ; preds = %4914
  %4927 = and i64 %4923, 8589934560
  %4928 = sub i64 %4917, %4927
  br label %4929

4929:                                             ; preds = %4929, %4926
  %4930 = phi i64 [ 0, %4926 ], [ %4953, %4929 ]
  %4931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4949, %4929 ]
  %4932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4950, %4929 ]
  %4933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4951, %4929 ]
  %4934 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4952, %4929 ]
  %4935 = sub i64 %4917, %4930
  %4936 = getelementptr inbounds i32, ptr %11, i64 %4935
  %4937 = getelementptr inbounds i32, ptr %4936, i64 -7
  %4938 = load <8 x i32>, ptr %4937, align 4, !tbaa !6
  %4939 = shufflevector <8 x i32> %4938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4940 = getelementptr inbounds i32, ptr %4936, i64 -15
  %4941 = load <8 x i32>, ptr %4940, align 4, !tbaa !6
  %4942 = shufflevector <8 x i32> %4941, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4943 = getelementptr inbounds i32, ptr %4936, i64 -23
  %4944 = load <8 x i32>, ptr %4943, align 4, !tbaa !6
  %4945 = shufflevector <8 x i32> %4944, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4946 = getelementptr inbounds i32, ptr %4936, i64 -31
  %4947 = load <8 x i32>, ptr %4946, align 4, !tbaa !6
  %4948 = shufflevector <8 x i32> %4947, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4949 = mul <8 x i32> %4939, %4931
  %4950 = mul <8 x i32> %4942, %4932
  %4951 = mul <8 x i32> %4945, %4933
  %4952 = mul <8 x i32> %4948, %4934
  %4953 = add nuw i64 %4930, 32
  %4954 = icmp eq i64 %4953, %4927
  br i1 %4954, label %4955, label %4929, !llvm.loop !360

4955:                                             ; preds = %4929
  %4956 = mul <8 x i32> %4950, %4949
  %4957 = mul <8 x i32> %4951, %4956
  %4958 = mul <8 x i32> %4952, %4957
  %4959 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4958)
  %4960 = icmp eq i64 %4923, %4927
  br i1 %4960, label %4973, label %4961

4961:                                             ; preds = %4914, %4955
  %4962 = phi i64 [ %4917, %4914 ], [ %4928, %4955 ]
  %4963 = phi i32 [ 1, %4914 ], [ %4959, %4955 ]
  br label %4964

4964:                                             ; preds = %4961, %4964
  %4965 = phi i64 [ %4970, %4964 ], [ %4962, %4961 ]
  %4966 = phi i32 [ %4969, %4964 ], [ %4963, %4961 ]
  %4967 = getelementptr inbounds i32, ptr %11, i64 %4965
  %4968 = load i32, ptr %4967, align 4, !tbaa !6
  %4969 = mul nsw i32 %4968, %4966
  %4970 = add nsw i64 %4965, -1
  %4971 = trunc i64 %4965 to i32
  %4972 = icmp sgt i32 %4971, 0
  br i1 %4972, label %4964, label %4973, !llvm.loop !361

4973:                                             ; preds = %4964, %4955
  %4974 = phi i32 [ %4959, %4955 ], [ %4969, %4964 ]
  %4975 = and i64 %4924, 4294967295
  %4976 = getelementptr inbounds i32, ptr %6, i64 %4975
  %4977 = load i32, ptr %4976, align 4, !tbaa !6
  %4978 = mul nsw i32 %4977, %4974
  %4979 = add nsw i32 %4978, %4918
  %4980 = icmp sgt i64 %4916, 2
  %4981 = add nsw i64 %4917, -1
  %4982 = add i32 %4915, 1
  br i1 %4980, label %4914, label %4983, !llvm.loop !362

4983:                                             ; preds = %4973, %4910
  %4984 = phi i32 [ %4913, %4910 ], [ %4979, %4973 ]
  %4985 = icmp slt i32 %4984, %5
  br i1 %4985, label %4988, label %4986

4986:                                             ; preds = %4983
  %4987 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4988:                                             ; preds = %4983
  %4989 = sext i32 %4984 to i64
  %4990 = getelementptr inbounds i32, ptr %4426, i64 %4989
  %4991 = load i32, ptr %4990, align 4, !tbaa !6
  %4992 = sitofp i32 %4991 to float
  %4993 = icmp slt i32 %4991, 0
  %4994 = fneg fast float %4992
  %4995 = select i1 %4993, float %4994, float %4992
  %4996 = fmul fast float %4992, %4992
  %4997 = fmul fast float %4996, %4995
  %4998 = fadd fast float %4997, %4911
  store float %4998, ptr %4428, align 4, !tbaa !163
  %4999 = add nuw nsw i32 %4912, 1
  br i1 %4758, label %5000, label %5050

5000:                                             ; preds = %4988
  %5001 = load i32, ptr %4, align 4, !tbaa !6
  %5002 = load i32, ptr %12, align 4, !tbaa !6
  %5003 = add nsw i32 %5002, -1
  %5004 = icmp slt i32 %5001, %5003
  br i1 %5004, label %5027, label %5005

5005:                                             ; preds = %5000
  %5006 = icmp eq i32 %5001, %5003
  br i1 %5006, label %5007, label %5043

5007:                                             ; preds = %5005
  store i32 0, ptr %4, align 4, !tbaa !6
  %5008 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5008, ptr %6, align 4, !tbaa !6
  br i1 %4763, label %5050, label %5009

5009:                                             ; preds = %5007, %5037
  %5010 = phi i64 [ %5041, %5037 ], [ 1, %5007 ]
  %5011 = getelementptr inbounds i32, ptr %4, i64 %5010
  %5012 = load i32, ptr %5011, align 4, !tbaa !6
  %5013 = getelementptr inbounds i32, ptr %12, i64 %5010
  %5014 = load i32, ptr %5013, align 4, !tbaa !6
  %5015 = add nsw i32 %5014, -1
  %5016 = icmp slt i32 %5012, %5015
  br i1 %5016, label %5017, label %5035

5017:                                             ; preds = %5009
  br i1 %5004, label %5027, label %5018

5018:                                             ; preds = %5017
  %5019 = shl i64 %5010, 32
  %5020 = add i64 %5019, -4294967296
  %5021 = ashr exact i64 %5020, 32
  %5022 = getelementptr inbounds i32, ptr %7, i64 %5021
  %5023 = load i32, ptr %5022, align 4, !tbaa !6
  %5024 = getelementptr inbounds i32, ptr %6, i64 %5010
  %5025 = load i32, ptr %5024, align 4, !tbaa !6
  %5026 = add nsw i32 %5025, %5023
  store i32 %5026, ptr %5024, align 4, !tbaa !6
  br label %5045

5027:                                             ; preds = %5000, %5017
  %5028 = phi i32 [ %5012, %5017 ], [ %5001, %5000 ]
  %5029 = phi ptr [ %5011, %5017 ], [ %4, %5000 ]
  %5030 = phi i64 [ %5010, %5017 ], [ 0, %5000 ]
  %5031 = add nsw i32 %5028, 1
  store i32 %5031, ptr %5029, align 4, !tbaa !6
  %5032 = getelementptr inbounds i32, ptr %7, i64 %5030
  %5033 = load i32, ptr %5032, align 4, !tbaa !6
  %5034 = getelementptr inbounds i32, ptr %6, i64 %5030
  br label %5045

5035:                                             ; preds = %5009
  %5036 = icmp eq i32 %5012, %5015
  br i1 %5036, label %5037, label %5043

5037:                                             ; preds = %5035
  store i32 0, ptr %5011, align 4, !tbaa !6
  %5038 = getelementptr inbounds i32, ptr %8, i64 %5010
  %5039 = load i32, ptr %5038, align 4, !tbaa !6
  %5040 = getelementptr inbounds i32, ptr %6, i64 %5010
  store i32 %5039, ptr %5040, align 4, !tbaa !6
  %5041 = add nuw nsw i64 %5010, 1
  %5042 = icmp eq i64 %5041, %4761
  br i1 %5042, label %5050, label %5009, !llvm.loop !363

5043:                                             ; preds = %5005, %5035
  %5044 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5045:                                             ; preds = %5018, %5027
  %5046 = phi ptr [ %5034, %5027 ], [ %5011, %5018 ]
  %5047 = phi i32 [ %5033, %5027 ], [ 1, %5018 ]
  %5048 = load i32, ptr %5046, align 4, !tbaa !6
  %5049 = add nsw i32 %5048, %5047
  store i32 %5049, ptr %5046, align 4, !tbaa !6
  br label %5050

5050:                                             ; preds = %5037, %5045, %5007, %4988
  %5051 = icmp eq i32 %4999, %5
  br i1 %5051, label %5686, label %4910, !llvm.loop !364

5052:                                             ; preds = %4438
  %5053 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 368, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

5054:                                             ; preds = %18
  %5055 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5056 = load ptr, ptr %5055, align 8, !tbaa !10
  %5057 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5058 = load ptr, ptr %5057, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5058, align 8, !tbaa !19
  %5059 = icmp eq i32 %13, 0
  br i1 %5059, label %5060, label %5068

5060:                                             ; preds = %5054
  %5061 = load i32, ptr %5056, align 4, !tbaa !6
  %5062 = sitofp i32 %5061 to double
  %5063 = icmp slt i32 %5061, 0
  %5064 = fneg fast double %5062
  %5065 = select i1 %5063, double %5064, double %5062
  %5066 = fmul fast double %5062, %5062
  %5067 = fmul fast double %5066, %5065
  store double %5067, ptr %5058, align 8, !tbaa !19
  br label %5686

5068:                                             ; preds = %5054
  switch i32 %1, label %5676 [
    i32 1, label %5069
    i32 0, label %5374
  ]

5069:                                             ; preds = %5068
  %5070 = getelementptr inbounds i32, ptr %3, i64 %19
  %5071 = load i32, ptr %5070, align 4, !tbaa !6
  %5072 = icmp eq i32 %5071, 0
  %5073 = icmp sgt i32 %5, 0
  br i1 %5072, label %5083, label %5074

5074:                                             ; preds = %5069
  br i1 %5073, label %5075, label %5686

5075:                                             ; preds = %5074
  %5076 = icmp sgt i32 %13, 1
  %5077 = icmp sgt i32 %13, 0
  %5078 = add i32 %13, -2
  %5079 = zext i32 %5078 to i64
  %5080 = zext i32 %13 to i64
  %5081 = add nuw i32 %5, 1
  %5082 = icmp eq i32 %13, 1
  br label %5232

5083:                                             ; preds = %5069
  br i1 %5073, label %5084, label %5686

5084:                                             ; preds = %5083
  %5085 = icmp sgt i32 %13, 1
  %5086 = icmp sgt i32 %13, 0
  %5087 = add i32 %13, -2
  %5088 = zext i32 %5087 to i64
  %5089 = zext i32 %13 to i64
  %5090 = add nuw i32 %5, 1
  %5091 = icmp eq i32 %13, 1
  br label %5092

5092:                                             ; preds = %5084, %5230
  %5093 = phi double [ 0.000000e+00, %5084 ], [ %5180, %5230 ]
  %5094 = phi i32 [ 0, %5084 ], [ %5182, %5230 ]
  %5095 = phi double [ 0.000000e+00, %5084 ], [ %5181, %5230 ]
  %5096 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5085, label %5097, label %5166

5097:                                             ; preds = %5092, %5156
  %5098 = phi i32 [ %5165, %5156 ], [ 0, %5092 ]
  %5099 = phi i64 [ %5107, %5156 ], [ %5089, %5092 ]
  %5100 = phi i64 [ %5164, %5156 ], [ %5088, %5092 ]
  %5101 = phi i32 [ %5162, %5156 ], [ %5096, %5092 ]
  %5102 = sub i32 %5087, %5098
  %5103 = tail call i32 @llvm.smin.i32(i32 %5102, i32 0)
  %5104 = sub i32 %5102, %5103
  %5105 = zext i32 %5104 to i64
  %5106 = add nuw nsw i64 %5105, 1
  %5107 = add nsw i64 %5099, -1
  %5108 = icmp ult i32 %5104, 31
  br i1 %5108, label %5144, label %5109

5109:                                             ; preds = %5097
  %5110 = and i64 %5106, 8589934560
  %5111 = sub i64 %5100, %5110
  br label %5112

5112:                                             ; preds = %5112, %5109
  %5113 = phi i64 [ 0, %5109 ], [ %5136, %5112 ]
  %5114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5132, %5112 ]
  %5115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5133, %5112 ]
  %5116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5134, %5112 ]
  %5117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5135, %5112 ]
  %5118 = sub i64 %5100, %5113
  %5119 = getelementptr inbounds i32, ptr %9, i64 %5118
  %5120 = getelementptr inbounds i32, ptr %5119, i64 -7
  %5121 = load <8 x i32>, ptr %5120, align 4, !tbaa !6
  %5122 = shufflevector <8 x i32> %5121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5123 = getelementptr inbounds i32, ptr %5119, i64 -15
  %5124 = load <8 x i32>, ptr %5123, align 4, !tbaa !6
  %5125 = shufflevector <8 x i32> %5124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5126 = getelementptr inbounds i32, ptr %5119, i64 -23
  %5127 = load <8 x i32>, ptr %5126, align 4, !tbaa !6
  %5128 = shufflevector <8 x i32> %5127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5129 = getelementptr inbounds i32, ptr %5119, i64 -31
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !6
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = mul <8 x i32> %5122, %5114
  %5133 = mul <8 x i32> %5125, %5115
  %5134 = mul <8 x i32> %5128, %5116
  %5135 = mul <8 x i32> %5131, %5117
  %5136 = add nuw i64 %5113, 32
  %5137 = icmp eq i64 %5136, %5110
  br i1 %5137, label %5138, label %5112, !llvm.loop !365

5138:                                             ; preds = %5112
  %5139 = mul <8 x i32> %5133, %5132
  %5140 = mul <8 x i32> %5134, %5139
  %5141 = mul <8 x i32> %5135, %5140
  %5142 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5141)
  %5143 = icmp eq i64 %5106, %5110
  br i1 %5143, label %5156, label %5144

5144:                                             ; preds = %5097, %5138
  %5145 = phi i64 [ %5100, %5097 ], [ %5111, %5138 ]
  %5146 = phi i32 [ 1, %5097 ], [ %5142, %5138 ]
  br label %5147

5147:                                             ; preds = %5144, %5147
  %5148 = phi i64 [ %5153, %5147 ], [ %5145, %5144 ]
  %5149 = phi i32 [ %5152, %5147 ], [ %5146, %5144 ]
  %5150 = getelementptr inbounds i32, ptr %9, i64 %5148
  %5151 = load i32, ptr %5150, align 4, !tbaa !6
  %5152 = mul nsw i32 %5151, %5149
  %5153 = add nsw i64 %5148, -1
  %5154 = trunc i64 %5148 to i32
  %5155 = icmp sgt i32 %5154, 0
  br i1 %5155, label %5147, label %5156, !llvm.loop !366

5156:                                             ; preds = %5147, %5138
  %5157 = phi i32 [ %5142, %5138 ], [ %5152, %5147 ]
  %5158 = and i64 %5107, 4294967295
  %5159 = getelementptr inbounds i32, ptr %6, i64 %5158
  %5160 = load i32, ptr %5159, align 4, !tbaa !6
  %5161 = mul nsw i32 %5160, %5157
  %5162 = add nsw i32 %5161, %5101
  %5163 = icmp sgt i64 %5099, 2
  %5164 = add nsw i64 %5100, -1
  %5165 = add i32 %5098, 1
  br i1 %5163, label %5097, label %5166, !llvm.loop !367

5166:                                             ; preds = %5156, %5092
  %5167 = phi i32 [ %5096, %5092 ], [ %5162, %5156 ]
  %5168 = sext i32 %5167 to i64
  %5169 = getelementptr inbounds double, ptr %2, i64 %5168
  %5170 = load double, ptr %5169, align 8, !tbaa !19
  %5171 = getelementptr inbounds i32, ptr %5056, i64 %5168
  %5172 = load i32, ptr %5171, align 4, !tbaa !6
  %5173 = sitofp i32 %5172 to double
  %5174 = fmul fast double %5170, %5173
  %5175 = fcmp fast olt double %5174, 0.000000e+00
  %5176 = fneg fast double %5174
  %5177 = select nnan ninf i1 %5175, double %5176, double %5174
  %5178 = fmul fast double %5174, %5174
  %5179 = fmul fast double %5178, %5177
  %5180 = fadd fast double %5179, %5093
  store double %5180, ptr %5058, align 8, !tbaa !19
  %5181 = fadd fast double %5170, %5095
  %5182 = add nuw nsw i32 %5094, 1
  br i1 %5086, label %5183, label %5230

5183:                                             ; preds = %5166
  %5184 = load i32, ptr %4, align 4, !tbaa !6
  %5185 = load i32, ptr %12, align 4, !tbaa !6
  %5186 = add nsw i32 %5185, -1
  %5187 = icmp slt i32 %5184, %5186
  br i1 %5187, label %5207, label %5188

5188:                                             ; preds = %5183
  %5189 = icmp eq i32 %5184, %5186
  br i1 %5189, label %5190, label %5223

5190:                                             ; preds = %5188
  store i32 0, ptr %4, align 4, !tbaa !6
  %5191 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5191, ptr %6, align 4, !tbaa !6
  br i1 %5091, label %5230, label %5192

5192:                                             ; preds = %5190, %5217
  %5193 = phi i64 [ %5221, %5217 ], [ 1, %5190 ]
  %5194 = getelementptr inbounds i32, ptr %4, i64 %5193
  %5195 = load i32, ptr %5194, align 4, !tbaa !6
  %5196 = getelementptr inbounds i32, ptr %12, i64 %5193
  %5197 = load i32, ptr %5196, align 4, !tbaa !6
  %5198 = add nsw i32 %5197, -1
  %5199 = icmp slt i32 %5195, %5198
  br i1 %5199, label %5200, label %5215

5200:                                             ; preds = %5192
  br i1 %5187, label %5207, label %5201

5201:                                             ; preds = %5200
  %5202 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5203 = load i32, ptr %5202, align 4, !tbaa !6
  %5204 = getelementptr inbounds i32, ptr %6, i64 %5193
  %5205 = load i32, ptr %5204, align 4, !tbaa !6
  %5206 = add nsw i32 %5205, %5203
  store i32 %5206, ptr %5204, align 4, !tbaa !6
  br label %5225

5207:                                             ; preds = %5183, %5200
  %5208 = phi i32 [ %5195, %5200 ], [ %5184, %5183 ]
  %5209 = phi ptr [ %5194, %5200 ], [ %4, %5183 ]
  %5210 = phi i64 [ %5193, %5200 ], [ 0, %5183 ]
  %5211 = add nsw i32 %5208, 1
  store i32 %5211, ptr %5209, align 4, !tbaa !6
  %5212 = getelementptr inbounds i32, ptr %7, i64 %5210
  %5213 = load i32, ptr %5212, align 4, !tbaa !6
  %5214 = getelementptr inbounds i32, ptr %6, i64 %5210
  br label %5225

5215:                                             ; preds = %5192
  %5216 = icmp eq i32 %5195, %5198
  br i1 %5216, label %5217, label %5223

5217:                                             ; preds = %5215
  store i32 0, ptr %5194, align 4, !tbaa !6
  %5218 = getelementptr inbounds i32, ptr %8, i64 %5193
  %5219 = load i32, ptr %5218, align 4, !tbaa !6
  %5220 = getelementptr inbounds i32, ptr %6, i64 %5193
  store i32 %5219, ptr %5220, align 4, !tbaa !6
  %5221 = add nuw nsw i64 %5193, 1
  %5222 = icmp eq i64 %5221, %5089
  br i1 %5222, label %5230, label %5192, !llvm.loop !368

5223:                                             ; preds = %5188, %5215
  %5224 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5225:                                             ; preds = %5201, %5207
  %5226 = phi ptr [ %5214, %5207 ], [ %5194, %5201 ]
  %5227 = phi i32 [ %5213, %5207 ], [ 1, %5201 ]
  %5228 = load i32, ptr %5226, align 4, !tbaa !6
  %5229 = add nsw i32 %5228, %5227
  store i32 %5229, ptr %5226, align 4, !tbaa !6
  br label %5230

5230:                                             ; preds = %5217, %5225, %5190, %5166
  %5231 = icmp eq i32 %5182, %5
  br i1 %5231, label %5686, label %5092, !llvm.loop !369

5232:                                             ; preds = %5075, %5372
  %5233 = phi double [ 0.000000e+00, %5075 ], [ %5320, %5372 ]
  %5234 = phi i32 [ 0, %5075 ], [ %5321, %5372 ]
  %5235 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5076, label %5236, label %5305

5236:                                             ; preds = %5232, %5295
  %5237 = phi i32 [ %5304, %5295 ], [ 0, %5232 ]
  %5238 = phi i64 [ %5246, %5295 ], [ %5080, %5232 ]
  %5239 = phi i64 [ %5303, %5295 ], [ %5079, %5232 ]
  %5240 = phi i32 [ %5301, %5295 ], [ %5235, %5232 ]
  %5241 = sub i32 %5078, %5237
  %5242 = tail call i32 @llvm.smin.i32(i32 %5241, i32 0)
  %5243 = sub i32 %5241, %5242
  %5244 = zext i32 %5243 to i64
  %5245 = add nuw nsw i64 %5244, 1
  %5246 = add nsw i64 %5238, -1
  %5247 = icmp ult i32 %5243, 31
  br i1 %5247, label %5283, label %5248

5248:                                             ; preds = %5236
  %5249 = and i64 %5245, 8589934560
  %5250 = sub i64 %5239, %5249
  br label %5251

5251:                                             ; preds = %5251, %5248
  %5252 = phi i64 [ 0, %5248 ], [ %5275, %5251 ]
  %5253 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5271, %5251 ]
  %5254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5272, %5251 ]
  %5255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5273, %5251 ]
  %5256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5274, %5251 ]
  %5257 = sub i64 %5239, %5252
  %5258 = getelementptr inbounds i32, ptr %11, i64 %5257
  %5259 = getelementptr inbounds i32, ptr %5258, i64 -7
  %5260 = load <8 x i32>, ptr %5259, align 4, !tbaa !6
  %5261 = shufflevector <8 x i32> %5260, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5262 = getelementptr inbounds i32, ptr %5258, i64 -15
  %5263 = load <8 x i32>, ptr %5262, align 4, !tbaa !6
  %5264 = shufflevector <8 x i32> %5263, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5265 = getelementptr inbounds i32, ptr %5258, i64 -23
  %5266 = load <8 x i32>, ptr %5265, align 4, !tbaa !6
  %5267 = shufflevector <8 x i32> %5266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5268 = getelementptr inbounds i32, ptr %5258, i64 -31
  %5269 = load <8 x i32>, ptr %5268, align 4, !tbaa !6
  %5270 = shufflevector <8 x i32> %5269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5271 = mul <8 x i32> %5261, %5253
  %5272 = mul <8 x i32> %5264, %5254
  %5273 = mul <8 x i32> %5267, %5255
  %5274 = mul <8 x i32> %5270, %5256
  %5275 = add nuw i64 %5252, 32
  %5276 = icmp eq i64 %5275, %5249
  br i1 %5276, label %5277, label %5251, !llvm.loop !370

5277:                                             ; preds = %5251
  %5278 = mul <8 x i32> %5272, %5271
  %5279 = mul <8 x i32> %5273, %5278
  %5280 = mul <8 x i32> %5274, %5279
  %5281 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5280)
  %5282 = icmp eq i64 %5245, %5249
  br i1 %5282, label %5295, label %5283

5283:                                             ; preds = %5236, %5277
  %5284 = phi i64 [ %5239, %5236 ], [ %5250, %5277 ]
  %5285 = phi i32 [ 1, %5236 ], [ %5281, %5277 ]
  br label %5286

5286:                                             ; preds = %5283, %5286
  %5287 = phi i64 [ %5292, %5286 ], [ %5284, %5283 ]
  %5288 = phi i32 [ %5291, %5286 ], [ %5285, %5283 ]
  %5289 = getelementptr inbounds i32, ptr %11, i64 %5287
  %5290 = load i32, ptr %5289, align 4, !tbaa !6
  %5291 = mul nsw i32 %5290, %5288
  %5292 = add nsw i64 %5287, -1
  %5293 = trunc i64 %5287 to i32
  %5294 = icmp sgt i32 %5293, 0
  br i1 %5294, label %5286, label %5295, !llvm.loop !371

5295:                                             ; preds = %5286, %5277
  %5296 = phi i32 [ %5281, %5277 ], [ %5291, %5286 ]
  %5297 = and i64 %5246, 4294967295
  %5298 = getelementptr inbounds i32, ptr %6, i64 %5297
  %5299 = load i32, ptr %5298, align 4, !tbaa !6
  %5300 = mul nsw i32 %5299, %5296
  %5301 = add nsw i32 %5300, %5240
  %5302 = icmp sgt i64 %5238, 2
  %5303 = add nsw i64 %5239, -1
  %5304 = add i32 %5237, 1
  br i1 %5302, label %5236, label %5305, !llvm.loop !372

5305:                                             ; preds = %5295, %5232
  %5306 = phi i32 [ %5235, %5232 ], [ %5301, %5295 ]
  %5307 = icmp slt i32 %5306, %5
  br i1 %5307, label %5310, label %5308

5308:                                             ; preds = %5305
  %5309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

5310:                                             ; preds = %5305
  %5311 = sext i32 %5306 to i64
  %5312 = getelementptr inbounds i32, ptr %5056, i64 %5311
  %5313 = load i32, ptr %5312, align 4, !tbaa !6
  %5314 = sitofp i32 %5313 to double
  %5315 = icmp slt i32 %5313, 0
  %5316 = fneg fast double %5314
  %5317 = select i1 %5315, double %5316, double %5314
  %5318 = fmul fast double %5314, %5314
  %5319 = fmul fast double %5318, %5317
  %5320 = fadd fast double %5319, %5233
  store double %5320, ptr %5058, align 8, !tbaa !19
  %5321 = add nuw nsw i32 %5234, 1
  br i1 %5077, label %5322, label %5372

5322:                                             ; preds = %5310
  %5323 = load i32, ptr %4, align 4, !tbaa !6
  %5324 = load i32, ptr %12, align 4, !tbaa !6
  %5325 = add nsw i32 %5324, -1
  %5326 = icmp slt i32 %5323, %5325
  br i1 %5326, label %5349, label %5327

5327:                                             ; preds = %5322
  %5328 = icmp eq i32 %5323, %5325
  br i1 %5328, label %5329, label %5365

5329:                                             ; preds = %5327
  store i32 0, ptr %4, align 4, !tbaa !6
  %5330 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5330, ptr %6, align 4, !tbaa !6
  br i1 %5082, label %5372, label %5331

5331:                                             ; preds = %5329, %5359
  %5332 = phi i64 [ %5363, %5359 ], [ 1, %5329 ]
  %5333 = getelementptr inbounds i32, ptr %4, i64 %5332
  %5334 = load i32, ptr %5333, align 4, !tbaa !6
  %5335 = getelementptr inbounds i32, ptr %12, i64 %5332
  %5336 = load i32, ptr %5335, align 4, !tbaa !6
  %5337 = add nsw i32 %5336, -1
  %5338 = icmp slt i32 %5334, %5337
  br i1 %5338, label %5339, label %5357

5339:                                             ; preds = %5331
  br i1 %5326, label %5349, label %5340

5340:                                             ; preds = %5339
  %5341 = shl i64 %5332, 32
  %5342 = add i64 %5341, -4294967296
  %5343 = ashr exact i64 %5342, 32
  %5344 = getelementptr inbounds i32, ptr %7, i64 %5343
  %5345 = load i32, ptr %5344, align 4, !tbaa !6
  %5346 = getelementptr inbounds i32, ptr %6, i64 %5332
  %5347 = load i32, ptr %5346, align 4, !tbaa !6
  %5348 = add nsw i32 %5347, %5345
  store i32 %5348, ptr %5346, align 4, !tbaa !6
  br label %5367

5349:                                             ; preds = %5322, %5339
  %5350 = phi i32 [ %5334, %5339 ], [ %5323, %5322 ]
  %5351 = phi ptr [ %5333, %5339 ], [ %4, %5322 ]
  %5352 = phi i64 [ %5332, %5339 ], [ 0, %5322 ]
  %5353 = add nsw i32 %5350, 1
  store i32 %5353, ptr %5351, align 4, !tbaa !6
  %5354 = getelementptr inbounds i32, ptr %7, i64 %5352
  %5355 = load i32, ptr %5354, align 4, !tbaa !6
  %5356 = getelementptr inbounds i32, ptr %6, i64 %5352
  br label %5367

5357:                                             ; preds = %5331
  %5358 = icmp eq i32 %5334, %5337
  br i1 %5358, label %5359, label %5365

5359:                                             ; preds = %5357
  store i32 0, ptr %5333, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %8, i64 %5332
  %5361 = load i32, ptr %5360, align 4, !tbaa !6
  %5362 = getelementptr inbounds i32, ptr %6, i64 %5332
  store i32 %5361, ptr %5362, align 4, !tbaa !6
  %5363 = add nuw nsw i64 %5332, 1
  %5364 = icmp eq i64 %5363, %5080
  br i1 %5364, label %5372, label %5331, !llvm.loop !373

5365:                                             ; preds = %5327, %5357
  %5366 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5367:                                             ; preds = %5340, %5349
  %5368 = phi ptr [ %5356, %5349 ], [ %5333, %5340 ]
  %5369 = phi i32 [ %5355, %5349 ], [ 1, %5340 ]
  %5370 = load i32, ptr %5368, align 4, !tbaa !6
  %5371 = add nsw i32 %5370, %5369
  store i32 %5371, ptr %5368, align 4, !tbaa !6
  br label %5372

5372:                                             ; preds = %5359, %5367, %5329, %5310
  %5373 = icmp eq i32 %5321, %5
  br i1 %5373, label %5686, label %5232, !llvm.loop !374

5374:                                             ; preds = %5068
  %5375 = getelementptr inbounds i32, ptr %3, i64 %19
  %5376 = load i32, ptr %5375, align 4, !tbaa !6
  %5377 = icmp eq i32 %5376, 0
  %5378 = icmp sgt i32 %5, 0
  br i1 %5377, label %5388, label %5379

5379:                                             ; preds = %5374
  br i1 %5378, label %5380, label %5686

5380:                                             ; preds = %5379
  %5381 = icmp sgt i32 %13, 1
  %5382 = icmp sgt i32 %13, 0
  %5383 = add i32 %13, -2
  %5384 = zext i32 %5383 to i64
  %5385 = zext i32 %13 to i64
  %5386 = add nuw i32 %5, 1
  %5387 = icmp eq i32 %13, 1
  br label %5534

5388:                                             ; preds = %5374
  br i1 %5378, label %5389, label %5686

5389:                                             ; preds = %5388
  %5390 = icmp sgt i32 %13, 1
  %5391 = icmp sgt i32 %13, 0
  %5392 = add i32 %13, -2
  %5393 = zext i32 %5392 to i64
  %5394 = zext i32 %13 to i64
  %5395 = add nuw i32 %5, 1
  %5396 = icmp eq i32 %13, 1
  br label %5397

5397:                                             ; preds = %5389, %5532
  %5398 = phi double [ 0.000000e+00, %5389 ], [ %5482, %5532 ]
  %5399 = phi i32 [ 0, %5389 ], [ %5484, %5532 ]
  %5400 = phi double [ 0.000000e+00, %5389 ], [ %5483, %5532 ]
  %5401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5390, label %5402, label %5471

5402:                                             ; preds = %5397, %5461
  %5403 = phi i32 [ %5470, %5461 ], [ 0, %5397 ]
  %5404 = phi i64 [ %5412, %5461 ], [ %5394, %5397 ]
  %5405 = phi i64 [ %5469, %5461 ], [ %5393, %5397 ]
  %5406 = phi i32 [ %5467, %5461 ], [ %5401, %5397 ]
  %5407 = sub i32 %5392, %5403
  %5408 = tail call i32 @llvm.smin.i32(i32 %5407, i32 0)
  %5409 = sub i32 %5407, %5408
  %5410 = zext i32 %5409 to i64
  %5411 = add nuw nsw i64 %5410, 1
  %5412 = add nsw i64 %5404, -1
  %5413 = icmp ult i32 %5409, 31
  br i1 %5413, label %5449, label %5414

5414:                                             ; preds = %5402
  %5415 = and i64 %5411, 8589934560
  %5416 = sub i64 %5405, %5415
  br label %5417

5417:                                             ; preds = %5417, %5414
  %5418 = phi i64 [ 0, %5414 ], [ %5441, %5417 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5437, %5417 ]
  %5420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5438, %5417 ]
  %5421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5439, %5417 ]
  %5422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5440, %5417 ]
  %5423 = sub i64 %5405, %5418
  %5424 = getelementptr inbounds i32, ptr %9, i64 %5423
  %5425 = getelementptr inbounds i32, ptr %5424, i64 -7
  %5426 = load <8 x i32>, ptr %5425, align 4, !tbaa !6
  %5427 = shufflevector <8 x i32> %5426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5428 = getelementptr inbounds i32, ptr %5424, i64 -15
  %5429 = load <8 x i32>, ptr %5428, align 4, !tbaa !6
  %5430 = shufflevector <8 x i32> %5429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5431 = getelementptr inbounds i32, ptr %5424, i64 -23
  %5432 = load <8 x i32>, ptr %5431, align 4, !tbaa !6
  %5433 = shufflevector <8 x i32> %5432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5434 = getelementptr inbounds i32, ptr %5424, i64 -31
  %5435 = load <8 x i32>, ptr %5434, align 4, !tbaa !6
  %5436 = shufflevector <8 x i32> %5435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5437 = mul <8 x i32> %5427, %5419
  %5438 = mul <8 x i32> %5430, %5420
  %5439 = mul <8 x i32> %5433, %5421
  %5440 = mul <8 x i32> %5436, %5422
  %5441 = add nuw i64 %5418, 32
  %5442 = icmp eq i64 %5441, %5415
  br i1 %5442, label %5443, label %5417, !llvm.loop !375

5443:                                             ; preds = %5417
  %5444 = mul <8 x i32> %5438, %5437
  %5445 = mul <8 x i32> %5439, %5444
  %5446 = mul <8 x i32> %5440, %5445
  %5447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5446)
  %5448 = icmp eq i64 %5411, %5415
  br i1 %5448, label %5461, label %5449

5449:                                             ; preds = %5402, %5443
  %5450 = phi i64 [ %5405, %5402 ], [ %5416, %5443 ]
  %5451 = phi i32 [ 1, %5402 ], [ %5447, %5443 ]
  br label %5452

5452:                                             ; preds = %5449, %5452
  %5453 = phi i64 [ %5458, %5452 ], [ %5450, %5449 ]
  %5454 = phi i32 [ %5457, %5452 ], [ %5451, %5449 ]
  %5455 = getelementptr inbounds i32, ptr %9, i64 %5453
  %5456 = load i32, ptr %5455, align 4, !tbaa !6
  %5457 = mul nsw i32 %5456, %5454
  %5458 = add nsw i64 %5453, -1
  %5459 = trunc i64 %5453 to i32
  %5460 = icmp sgt i32 %5459, 0
  br i1 %5460, label %5452, label %5461, !llvm.loop !376

5461:                                             ; preds = %5452, %5443
  %5462 = phi i32 [ %5447, %5443 ], [ %5457, %5452 ]
  %5463 = and i64 %5412, 4294967295
  %5464 = getelementptr inbounds i32, ptr %6, i64 %5463
  %5465 = load i32, ptr %5464, align 4, !tbaa !6
  %5466 = mul nsw i32 %5465, %5462
  %5467 = add nsw i32 %5466, %5406
  %5468 = icmp sgt i64 %5404, 2
  %5469 = add nsw i64 %5405, -1
  %5470 = add i32 %5403, 1
  br i1 %5468, label %5402, label %5471, !llvm.loop !377

5471:                                             ; preds = %5461, %5397
  %5472 = phi i32 [ %5401, %5397 ], [ %5467, %5461 ]
  %5473 = sext i32 %5472 to i64
  %5474 = getelementptr inbounds i32, ptr %5056, i64 %5473
  %5475 = load i32, ptr %5474, align 4, !tbaa !6
  %5476 = sitofp i32 %5475 to double
  %5477 = icmp slt i32 %5475, 0
  %5478 = fneg fast double %5476
  %5479 = select i1 %5477, double %5478, double %5476
  %5480 = fmul fast double %5476, %5476
  %5481 = fmul fast double %5480, %5479
  %5482 = fadd fast double %5481, %5398
  %5483 = fadd fast double %5400, 1.000000e+00
  %5484 = add nuw nsw i32 %5399, 1
  br i1 %5391, label %5485, label %5532

5485:                                             ; preds = %5471
  %5486 = load i32, ptr %4, align 4, !tbaa !6
  %5487 = load i32, ptr %12, align 4, !tbaa !6
  %5488 = add nsw i32 %5487, -1
  %5489 = icmp slt i32 %5486, %5488
  br i1 %5489, label %5509, label %5490

5490:                                             ; preds = %5485
  %5491 = icmp eq i32 %5486, %5488
  br i1 %5491, label %5492, label %5525

5492:                                             ; preds = %5490
  store i32 0, ptr %4, align 4, !tbaa !6
  %5493 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5493, ptr %6, align 4, !tbaa !6
  br i1 %5396, label %5532, label %5494

5494:                                             ; preds = %5492, %5519
  %5495 = phi i64 [ %5523, %5519 ], [ 1, %5492 ]
  %5496 = getelementptr inbounds i32, ptr %4, i64 %5495
  %5497 = load i32, ptr %5496, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %12, i64 %5495
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = add nsw i32 %5499, -1
  %5501 = icmp slt i32 %5497, %5500
  br i1 %5501, label %5502, label %5517

5502:                                             ; preds = %5494
  br i1 %5489, label %5509, label %5503

5503:                                             ; preds = %5502
  %5504 = getelementptr inbounds i32, ptr %7, i64 %5495
  %5505 = load i32, ptr %5504, align 4, !tbaa !6
  %5506 = getelementptr inbounds i32, ptr %6, i64 %5495
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = add nsw i32 %5507, %5505
  store i32 %5508, ptr %5506, align 4, !tbaa !6
  br label %5527

5509:                                             ; preds = %5485, %5502
  %5510 = phi i32 [ %5497, %5502 ], [ %5486, %5485 ]
  %5511 = phi ptr [ %5496, %5502 ], [ %4, %5485 ]
  %5512 = phi i64 [ %5495, %5502 ], [ 0, %5485 ]
  %5513 = add nsw i32 %5510, 1
  store i32 %5513, ptr %5511, align 4, !tbaa !6
  %5514 = getelementptr inbounds i32, ptr %7, i64 %5512
  %5515 = load i32, ptr %5514, align 4, !tbaa !6
  %5516 = getelementptr inbounds i32, ptr %6, i64 %5512
  br label %5527

5517:                                             ; preds = %5494
  %5518 = icmp eq i32 %5497, %5500
  br i1 %5518, label %5519, label %5525

5519:                                             ; preds = %5517
  store i32 0, ptr %5496, align 4, !tbaa !6
  %5520 = getelementptr inbounds i32, ptr %8, i64 %5495
  %5521 = load i32, ptr %5520, align 4, !tbaa !6
  %5522 = getelementptr inbounds i32, ptr %6, i64 %5495
  store i32 %5521, ptr %5522, align 4, !tbaa !6
  %5523 = add nuw nsw i64 %5495, 1
  %5524 = icmp eq i64 %5523, %5394
  br i1 %5524, label %5532, label %5494, !llvm.loop !378

5525:                                             ; preds = %5490, %5517
  store double %5482, ptr %5058, align 8, !tbaa !19
  %5526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5527:                                             ; preds = %5503, %5509
  %5528 = phi ptr [ %5516, %5509 ], [ %5496, %5503 ]
  %5529 = phi i32 [ %5515, %5509 ], [ 1, %5503 ]
  %5530 = load i32, ptr %5528, align 4, !tbaa !6
  %5531 = add nsw i32 %5530, %5529
  store i32 %5531, ptr %5528, align 4, !tbaa !6
  br label %5532

5532:                                             ; preds = %5519, %5527, %5492, %5471
  %5533 = icmp eq i32 %5484, %5
  br i1 %5533, label %5685, label %5397, !llvm.loop !379

5534:                                             ; preds = %5380, %5674
  %5535 = phi double [ 0.000000e+00, %5380 ], [ %5622, %5674 ]
  %5536 = phi i32 [ 0, %5380 ], [ %5623, %5674 ]
  %5537 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5381, label %5538, label %5607

5538:                                             ; preds = %5534, %5597
  %5539 = phi i32 [ %5606, %5597 ], [ 0, %5534 ]
  %5540 = phi i64 [ %5548, %5597 ], [ %5385, %5534 ]
  %5541 = phi i64 [ %5605, %5597 ], [ %5384, %5534 ]
  %5542 = phi i32 [ %5603, %5597 ], [ %5537, %5534 ]
  %5543 = sub i32 %5383, %5539
  %5544 = tail call i32 @llvm.smin.i32(i32 %5543, i32 0)
  %5545 = sub i32 %5543, %5544
  %5546 = zext i32 %5545 to i64
  %5547 = add nuw nsw i64 %5546, 1
  %5548 = add nsw i64 %5540, -1
  %5549 = icmp ult i32 %5545, 31
  br i1 %5549, label %5585, label %5550

5550:                                             ; preds = %5538
  %5551 = and i64 %5547, 8589934560
  %5552 = sub i64 %5541, %5551
  br label %5553

5553:                                             ; preds = %5553, %5550
  %5554 = phi i64 [ 0, %5550 ], [ %5577, %5553 ]
  %5555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5573, %5553 ]
  %5556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5574, %5553 ]
  %5557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5575, %5553 ]
  %5558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5576, %5553 ]
  %5559 = sub i64 %5541, %5554
  %5560 = getelementptr inbounds i32, ptr %11, i64 %5559
  %5561 = getelementptr inbounds i32, ptr %5560, i64 -7
  %5562 = load <8 x i32>, ptr %5561, align 4, !tbaa !6
  %5563 = shufflevector <8 x i32> %5562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5564 = getelementptr inbounds i32, ptr %5560, i64 -15
  %5565 = load <8 x i32>, ptr %5564, align 4, !tbaa !6
  %5566 = shufflevector <8 x i32> %5565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5567 = getelementptr inbounds i32, ptr %5560, i64 -23
  %5568 = load <8 x i32>, ptr %5567, align 4, !tbaa !6
  %5569 = shufflevector <8 x i32> %5568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5570 = getelementptr inbounds i32, ptr %5560, i64 -31
  %5571 = load <8 x i32>, ptr %5570, align 4, !tbaa !6
  %5572 = shufflevector <8 x i32> %5571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5573 = mul <8 x i32> %5563, %5555
  %5574 = mul <8 x i32> %5566, %5556
  %5575 = mul <8 x i32> %5569, %5557
  %5576 = mul <8 x i32> %5572, %5558
  %5577 = add nuw i64 %5554, 32
  %5578 = icmp eq i64 %5577, %5551
  br i1 %5578, label %5579, label %5553, !llvm.loop !380

5579:                                             ; preds = %5553
  %5580 = mul <8 x i32> %5574, %5573
  %5581 = mul <8 x i32> %5575, %5580
  %5582 = mul <8 x i32> %5576, %5581
  %5583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5582)
  %5584 = icmp eq i64 %5547, %5551
  br i1 %5584, label %5597, label %5585

5585:                                             ; preds = %5538, %5579
  %5586 = phi i64 [ %5541, %5538 ], [ %5552, %5579 ]
  %5587 = phi i32 [ 1, %5538 ], [ %5583, %5579 ]
  br label %5588

5588:                                             ; preds = %5585, %5588
  %5589 = phi i64 [ %5594, %5588 ], [ %5586, %5585 ]
  %5590 = phi i32 [ %5593, %5588 ], [ %5587, %5585 ]
  %5591 = getelementptr inbounds i32, ptr %11, i64 %5589
  %5592 = load i32, ptr %5591, align 4, !tbaa !6
  %5593 = mul nsw i32 %5592, %5590
  %5594 = add nsw i64 %5589, -1
  %5595 = trunc i64 %5589 to i32
  %5596 = icmp sgt i32 %5595, 0
  br i1 %5596, label %5588, label %5597, !llvm.loop !381

5597:                                             ; preds = %5588, %5579
  %5598 = phi i32 [ %5583, %5579 ], [ %5593, %5588 ]
  %5599 = and i64 %5548, 4294967295
  %5600 = getelementptr inbounds i32, ptr %6, i64 %5599
  %5601 = load i32, ptr %5600, align 4, !tbaa !6
  %5602 = mul nsw i32 %5601, %5598
  %5603 = add nsw i32 %5602, %5542
  %5604 = icmp sgt i64 %5540, 2
  %5605 = add nsw i64 %5541, -1
  %5606 = add i32 %5539, 1
  br i1 %5604, label %5538, label %5607, !llvm.loop !382

5607:                                             ; preds = %5597, %5534
  %5608 = phi i32 [ %5537, %5534 ], [ %5603, %5597 ]
  %5609 = icmp slt i32 %5608, %5
  br i1 %5609, label %5612, label %5610

5610:                                             ; preds = %5607
  %5611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

5612:                                             ; preds = %5607
  %5613 = sext i32 %5608 to i64
  %5614 = getelementptr inbounds i32, ptr %5056, i64 %5613
  %5615 = load i32, ptr %5614, align 4, !tbaa !6
  %5616 = sitofp i32 %5615 to double
  %5617 = icmp slt i32 %5615, 0
  %5618 = fneg fast double %5616
  %5619 = select i1 %5617, double %5618, double %5616
  %5620 = fmul fast double %5616, %5616
  %5621 = fmul fast double %5620, %5619
  %5622 = fadd fast double %5621, %5535
  store double %5622, ptr %5058, align 8, !tbaa !19
  %5623 = add nuw nsw i32 %5536, 1
  br i1 %5382, label %5624, label %5674

5624:                                             ; preds = %5612
  %5625 = load i32, ptr %4, align 4, !tbaa !6
  %5626 = load i32, ptr %12, align 4, !tbaa !6
  %5627 = add nsw i32 %5626, -1
  %5628 = icmp slt i32 %5625, %5627
  br i1 %5628, label %5651, label %5629

5629:                                             ; preds = %5624
  %5630 = icmp eq i32 %5625, %5627
  br i1 %5630, label %5631, label %5667

5631:                                             ; preds = %5629
  store i32 0, ptr %4, align 4, !tbaa !6
  %5632 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5632, ptr %6, align 4, !tbaa !6
  br i1 %5387, label %5674, label %5633

5633:                                             ; preds = %5631, %5661
  %5634 = phi i64 [ %5665, %5661 ], [ 1, %5631 ]
  %5635 = getelementptr inbounds i32, ptr %4, i64 %5634
  %5636 = load i32, ptr %5635, align 4, !tbaa !6
  %5637 = getelementptr inbounds i32, ptr %12, i64 %5634
  %5638 = load i32, ptr %5637, align 4, !tbaa !6
  %5639 = add nsw i32 %5638, -1
  %5640 = icmp slt i32 %5636, %5639
  br i1 %5640, label %5641, label %5659

5641:                                             ; preds = %5633
  br i1 %5628, label %5651, label %5642

5642:                                             ; preds = %5641
  %5643 = shl i64 %5634, 32
  %5644 = add i64 %5643, -4294967296
  %5645 = ashr exact i64 %5644, 32
  %5646 = getelementptr inbounds i32, ptr %7, i64 %5645
  %5647 = load i32, ptr %5646, align 4, !tbaa !6
  %5648 = getelementptr inbounds i32, ptr %6, i64 %5634
  %5649 = load i32, ptr %5648, align 4, !tbaa !6
  %5650 = add nsw i32 %5649, %5647
  store i32 %5650, ptr %5648, align 4, !tbaa !6
  br label %5669

5651:                                             ; preds = %5624, %5641
  %5652 = phi i32 [ %5636, %5641 ], [ %5625, %5624 ]
  %5653 = phi ptr [ %5635, %5641 ], [ %4, %5624 ]
  %5654 = phi i64 [ %5634, %5641 ], [ 0, %5624 ]
  %5655 = add nsw i32 %5652, 1
  store i32 %5655, ptr %5653, align 4, !tbaa !6
  %5656 = getelementptr inbounds i32, ptr %7, i64 %5654
  %5657 = load i32, ptr %5656, align 4, !tbaa !6
  %5658 = getelementptr inbounds i32, ptr %6, i64 %5654
  br label %5669

5659:                                             ; preds = %5633
  %5660 = icmp eq i32 %5636, %5639
  br i1 %5660, label %5661, label %5667

5661:                                             ; preds = %5659
  store i32 0, ptr %5635, align 4, !tbaa !6
  %5662 = getelementptr inbounds i32, ptr %8, i64 %5634
  %5663 = load i32, ptr %5662, align 4, !tbaa !6
  %5664 = getelementptr inbounds i32, ptr %6, i64 %5634
  store i32 %5663, ptr %5664, align 4, !tbaa !6
  %5665 = add nuw nsw i64 %5634, 1
  %5666 = icmp eq i64 %5665, %5385
  br i1 %5666, label %5674, label %5633, !llvm.loop !383

5667:                                             ; preds = %5629, %5659
  %5668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5669:                                             ; preds = %5642, %5651
  %5670 = phi ptr [ %5658, %5651 ], [ %5635, %5642 ]
  %5671 = phi i32 [ %5657, %5651 ], [ 1, %5642 ]
  %5672 = load i32, ptr %5670, align 4, !tbaa !6
  %5673 = add nsw i32 %5672, %5671
  store i32 %5673, ptr %5670, align 4, !tbaa !6
  br label %5674

5674:                                             ; preds = %5661, %5669, %5631, %5612
  %5675 = icmp eq i32 %5623, %5
  br i1 %5675, label %5686, label %5534, !llvm.loop !384

5676:                                             ; preds = %5068
  %5677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

5678:                                             ; preds = %2089
  store i16 %2039, ptr %1910, align 2, !tbaa !79
  br label %5686

5679:                                             ; preds = %2398
  store i16 %2348, ptr %1910, align 2, !tbaa !79
  br label %5686

5680:                                             ; preds = %3350
  store i64 %3300, ptr %3176, align 8, !tbaa !121
  br label %5686

5681:                                             ; preds = %3654
  store i64 %3604, ptr %3176, align 8, !tbaa !121
  br label %5686

5682:                                             ; preds = %4278
  store double %4228, ptr %3804, align 8, !tbaa !19
  br label %5686

5683:                                             ; preds = %4603
  store float %4553, ptr %4428, align 4, !tbaa !163
  br label %5686

5684:                                             ; preds = %4908
  store float %4858, ptr %4428, align 4, !tbaa !163
  br label %5686

5685:                                             ; preds = %5532
  store double %5482, ptr %5058, align 8, !tbaa !19
  br label %5686

5686:                                             ; preds = %5674, %5372, %5230, %5050, %4748, %4420, %4118, %3976, %3796, %3494, %3168, %3027, %2868, %2724, %2543, %2235, %1902, %1757, %1594, %1448, %1261, %1120, %961, %817, %636, %497, %340, %198, %5379, %5388, %5685, %5074, %5083, %4755, %4764, %5684, %4444, %4453, %5683, %4125, %4134, %5682, %3820, %3829, %3501, %3510, %5681, %3192, %3201, %5680, %2875, %2884, %2566, %2575, %2242, %2251, %5679, %1929, %1938, %5678, %1601, %1610, %1288, %1297, %968, %977, %659, %668, %347, %356, %39, %48, %5060, %5676, %4430, %5052, %3806, %4422, %3178, %3798, %2553, %3170, %1912, %2545, %1271, %1904, %646, %1263, %28, %638, %18
  %5687 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %646 ], [ 0.000000e+00, %1904 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %2545 ], [ 0.000000e+00, %1912 ], [ 0.000000e+00, %3170 ], [ 0.000000e+00, %2553 ], [ 0.000000e+00, %3798 ], [ 0.000000e+00, %3178 ], [ 0.000000e+00, %4422 ], [ 0.000000e+00, %3806 ], [ 0.000000e+00, %5052 ], [ 0.000000e+00, %4430 ], [ 0.000000e+00, %5676 ], [ 0.000000e+00, %5060 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %356 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %668 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %977 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %1297 ], [ 0.000000e+00, %1288 ], [ 0.000000e+00, %1610 ], [ 0.000000e+00, %1601 ], [ %2040, %5678 ], [ 0.000000e+00, %1938 ], [ 0.000000e+00, %1929 ], [ %2349, %5679 ], [ 0.000000e+00, %2251 ], [ 0.000000e+00, %2242 ], [ 0.000000e+00, %2575 ], [ 0.000000e+00, %2566 ], [ 0.000000e+00, %2884 ], [ 0.000000e+00, %2875 ], [ %3301, %5680 ], [ 0.000000e+00, %3201 ], [ 0.000000e+00, %3192 ], [ %3605, %5681 ], [ 0.000000e+00, %3510 ], [ 0.000000e+00, %3501 ], [ 0.000000e+00, %3829 ], [ 0.000000e+00, %3820 ], [ %4229, %5682 ], [ 0.000000e+00, %4134 ], [ 0.000000e+00, %4125 ], [ %4554, %5683 ], [ 0.000000e+00, %4453 ], [ 0.000000e+00, %4444 ], [ %4859, %5684 ], [ 0.000000e+00, %4764 ], [ 0.000000e+00, %4755 ], [ 0.000000e+00, %5083 ], [ 0.000000e+00, %5074 ], [ %5483, %5685 ], [ 0.000000e+00, %5388 ], [ 0.000000e+00, %5379 ], [ %149, %198 ], [ 0.000000e+00, %340 ], [ %448, %497 ], [ 0.000000e+00, %636 ], [ %768, %817 ], [ 0.000000e+00, %961 ], [ %1071, %1120 ], [ 0.000000e+00, %1261 ], [ %1399, %1448 ], [ 0.000000e+00, %1594 ], [ %1708, %1757 ], [ 0.000000e+00, %1902 ], [ 0.000000e+00, %2235 ], [ 0.000000e+00, %2543 ], [ %2675, %2724 ], [ 0.000000e+00, %2868 ], [ %2978, %3027 ], [ 0.000000e+00, %3168 ], [ 0.000000e+00, %3494 ], [ 0.000000e+00, %3796 ], [ %3927, %3976 ], [ 0.000000e+00, %4118 ], [ 0.000000e+00, %4420 ], [ 0.000000e+00, %4748 ], [ 0.000000e+00, %5050 ], [ %5181, %5230 ], [ 0.000000e+00, %5372 ], [ 0.000000e+00, %5674 ]
  %5688 = phi i32 [ %10, %18 ], [ 1, %638 ], [ 1, %28 ], [ 1, %1263 ], [ 1, %646 ], [ 1, %1904 ], [ 1, %1271 ], [ 1, %2545 ], [ 1, %1912 ], [ 1, %3170 ], [ 1, %2553 ], [ 1, %3798 ], [ 1, %3178 ], [ 1, %4422 ], [ 1, %3806 ], [ 1, %5052 ], [ 1, %4430 ], [ 1, %5676 ], [ 1, %5060 ], [ 1, %48 ], [ 1, %39 ], [ 1, %356 ], [ 1, %347 ], [ 1, %668 ], [ 1, %659 ], [ 1, %977 ], [ 1, %968 ], [ 1, %1297 ], [ 1, %1288 ], [ 1, %1610 ], [ 1, %1601 ], [ %1945, %5678 ], [ 1, %1938 ], [ 1, %1929 ], [ %2258, %5679 ], [ 1, %2251 ], [ 1, %2242 ], [ 1, %2575 ], [ 1, %2566 ], [ 1, %2884 ], [ 1, %2875 ], [ %3208, %5680 ], [ 1, %3201 ], [ 1, %3192 ], [ %3517, %5681 ], [ 1, %3510 ], [ 1, %3501 ], [ 1, %3829 ], [ 1, %3820 ], [ %4141, %5682 ], [ 1, %4134 ], [ 1, %4125 ], [ %4460, %5683 ], [ 1, %4453 ], [ 1, %4444 ], [ %4771, %5684 ], [ 1, %4764 ], [ 1, %4755 ], [ 1, %5083 ], [ 1, %5074 ], [ %5395, %5685 ], [ 1, %5388 ], [ 1, %5379 ], [ %55, %198 ], [ %46, %340 ], [ %363, %497 ], [ %354, %636 ], [ %675, %817 ], [ %666, %961 ], [ %984, %1120 ], [ %975, %1261 ], [ %1304, %1448 ], [ %1295, %1594 ], [ %1617, %1757 ], [ %1608, %1902 ], [ %1936, %2235 ], [ %2249, %2543 ], [ %2582, %2724 ], [ %2573, %2868 ], [ %2891, %3027 ], [ %2882, %3168 ], [ %3199, %3494 ], [ %3508, %3796 ], [ %3836, %3976 ], [ %3827, %4118 ], [ %4132, %4420 ], [ %4451, %4748 ], [ %4762, %5050 ], [ %5090, %5230 ], [ %5081, %5372 ], [ %5386, %5674 ]
  %5689 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5688, ptr noundef nonnull @.str.5) #3
  %5690 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5687, ptr noundef nonnull @.str.6) #3
  br label %5691

5691:                                             ; preds = %5223, %5308, %5365, %5525, %5610, %5667, %4596, %4681, %4741, %4901, %4986, %5043, %3969, %4054, %4111, %4271, %4356, %4413, %3343, %3428, %3487, %3647, %3732, %3789, %2717, %2801, %2861, %3020, %3104, %3161, %2082, %2167, %2228, %2391, %2476, %2536, %1441, %1525, %1587, %1750, %1834, %1895, %810, %894, %954, %1113, %1197, %1254, %191, %275, %333, %490, %574, %629, %5686
  %5692 = phi i32 [ 0, %5686 ], [ -1, %629 ], [ -1, %574 ], [ -1, %490 ], [ -1, %333 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1254 ], [ -1, %1197 ], [ -1, %1113 ], [ -1, %954 ], [ -1, %894 ], [ -1, %810 ], [ -1, %1895 ], [ -1, %1834 ], [ -1, %1750 ], [ -1, %1587 ], [ -1, %1525 ], [ -1, %1441 ], [ -1, %2536 ], [ -1, %2476 ], [ -1, %2391 ], [ -1, %2228 ], [ -1, %2167 ], [ -1, %2082 ], [ -1, %3161 ], [ -1, %3104 ], [ -1, %3020 ], [ -1, %2861 ], [ -1, %2801 ], [ -1, %2717 ], [ -1, %3789 ], [ -1, %3732 ], [ -1, %3647 ], [ -1, %3487 ], [ -1, %3428 ], [ -1, %3343 ], [ -1, %4413 ], [ -1, %4356 ], [ -1, %4271 ], [ -1, %4111 ], [ -1, %4054 ], [ -1, %3969 ], [ -1, %5043 ], [ -1, %4986 ], [ -1, %4901 ], [ -1, %4741 ], [ -1, %4681 ], [ -1, %4596 ], [ -1, %5667 ], [ -1, %5610 ], [ -1, %5525 ], [ -1, %5365 ], [ -1, %5308 ], [ -1, %5223 ]
  ret i32 %5692
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3136 [
    i32 101, label %22
    i32 102, label %632
    i32 107, label %1260
    i32 108, label %1884
    i32 109, label %2512
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !12
  %30 = mul i8 %29, %29
  %31 = mul i8 %30, %29
  store i8 %31, ptr %26, align 1, !tbaa !12
  br label %3136

32:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %33
    i32 0, label %336
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !6
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %3136

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %198

47:                                               ; preds = %33
  br i1 %37, label %48, label %3136

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %196
  %57 = phi i32 [ 0, %48 ], [ %148, %196 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %147, %196 ]
  %59 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !6
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !385

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !6
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !386

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !6
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !387

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !19
  %134 = getelementptr inbounds i8, ptr %24, i64 %131
  %135 = load i8, ptr %134, align 1, !tbaa !12
  %136 = load i8, ptr %26, align 1, !tbaa !12
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %133, %138
  %140 = fcmp fast olt double %139, 0.000000e+00
  %141 = fneg fast double %139
  %142 = select nnan ninf i1 %140, double %141, double %139
  %143 = fmul fast double %139, %139
  %144 = fmul fast double %143, %142
  %145 = fadd fast double %144, %137
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !12
  %147 = fadd fast double %133, %58
  %148 = add nuw nsw i32 %57, 1
  br i1 %50, label %149, label %196

149:                                              ; preds = %129
  %150 = load i32, ptr %4, align 4, !tbaa !6
  %151 = load i32, ptr %12, align 4, !tbaa !6
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !6
  %157 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %157, ptr %6, align 4, !tbaa !6
  br i1 %55, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !6
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !6
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !6
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !6
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !6
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !6
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %53
  br i1 %188, label %196, label %158, !llvm.loop !388

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !6
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !6
  br label %196

196:                                              ; preds = %183, %191, %156, %129
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %3136, label %56, !llvm.loop !389

198:                                              ; preds = %39, %334
  %199 = phi i32 [ 0, %39 ], [ %283, %334 ]
  %200 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %40, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %44, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %43, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %42, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !6
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !390

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !6
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !391

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !6
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !392

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

275:                                              ; preds = %270
  %276 = load i8, ptr %26, align 1, !tbaa !12
  %277 = sext i32 %271 to i64
  %278 = getelementptr inbounds i8, ptr %24, i64 %277
  %279 = load i8, ptr %278, align 1, !tbaa !12
  %280 = mul i8 %279, %279
  %281 = mul i8 %280, %279
  %282 = add i8 %281, %276
  store i8 %282, ptr %26, align 1, !tbaa !12
  %283 = add nuw nsw i32 %199, 1
  br i1 %41, label %284, label %334

284:                                              ; preds = %275
  %285 = load i32, ptr %4, align 4, !tbaa !6
  %286 = load i32, ptr %12, align 4, !tbaa !6
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %292, ptr %6, align 4, !tbaa !6
  br i1 %46, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !6
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !6
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !6
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %44
  br i1 %326, label %334, label %293, !llvm.loop !393

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !6
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !6
  br label %334

334:                                              ; preds = %321, %329, %291, %275
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %3136, label %198, !llvm.loop !394

336:                                              ; preds = %32
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !6
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %3136

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %492

350:                                              ; preds = %336
  br i1 %340, label %351, label %3136

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %490
  %360 = phi i32 [ 0, %351 ], [ %442, %490 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %441, %490 ]
  %362 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !6
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !395

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !6
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !396

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !6
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !397

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = load i8, ptr %26, align 1, !tbaa !12
  %435 = sext i32 %433 to i64
  %436 = getelementptr inbounds i8, ptr %24, i64 %435
  %437 = load i8, ptr %436, align 1, !tbaa !12
  %438 = mul i8 %437, %437
  %439 = mul i8 %438, %437
  %440 = add i8 %439, %434
  store i8 %440, ptr %26, align 1, !tbaa !12
  %441 = fadd fast double %361, 1.000000e+00
  %442 = add nuw nsw i32 %360, 1
  br i1 %353, label %443, label %490

443:                                              ; preds = %432
  %444 = load i32, ptr %4, align 4, !tbaa !6
  %445 = load i32, ptr %12, align 4, !tbaa !6
  %446 = add nsw i32 %445, -1
  %447 = icmp slt i32 %444, %446
  br i1 %447, label %467, label %448

448:                                              ; preds = %443
  %449 = icmp eq i32 %444, %446
  br i1 %449, label %450, label %483

450:                                              ; preds = %448
  store i32 0, ptr %4, align 4, !tbaa !6
  %451 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %451, ptr %6, align 4, !tbaa !6
  br i1 %358, label %490, label %452

452:                                              ; preds = %450, %477
  %453 = phi i64 [ %481, %477 ], [ 1, %450 ]
  %454 = getelementptr inbounds i32, ptr %4, i64 %453
  %455 = load i32, ptr %454, align 4, !tbaa !6
  %456 = getelementptr inbounds i32, ptr %12, i64 %453
  %457 = load i32, ptr %456, align 4, !tbaa !6
  %458 = add nsw i32 %457, -1
  %459 = icmp slt i32 %455, %458
  br i1 %459, label %460, label %475

460:                                              ; preds = %452
  br i1 %447, label %467, label %461

461:                                              ; preds = %460
  %462 = getelementptr inbounds i32, ptr %7, i64 %453
  %463 = load i32, ptr %462, align 4, !tbaa !6
  %464 = getelementptr inbounds i32, ptr %6, i64 %453
  %465 = load i32, ptr %464, align 4, !tbaa !6
  %466 = add nsw i32 %465, %463
  store i32 %466, ptr %464, align 4, !tbaa !6
  br label %485

467:                                              ; preds = %443, %460
  %468 = phi i32 [ %455, %460 ], [ %444, %443 ]
  %469 = phi ptr [ %454, %460 ], [ %4, %443 ]
  %470 = phi i64 [ %453, %460 ], [ 0, %443 ]
  %471 = add nsw i32 %468, 1
  store i32 %471, ptr %469, align 4, !tbaa !6
  %472 = getelementptr inbounds i32, ptr %7, i64 %470
  %473 = load i32, ptr %472, align 4, !tbaa !6
  %474 = getelementptr inbounds i32, ptr %6, i64 %470
  br label %485

475:                                              ; preds = %452
  %476 = icmp eq i32 %455, %458
  br i1 %476, label %477, label %483

477:                                              ; preds = %475
  store i32 0, ptr %454, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %8, i64 %453
  %479 = load i32, ptr %478, align 4, !tbaa !6
  %480 = getelementptr inbounds i32, ptr %6, i64 %453
  store i32 %479, ptr %480, align 4, !tbaa !6
  %481 = add nuw nsw i64 %453, 1
  %482 = icmp eq i64 %481, %356
  br i1 %482, label %490, label %452, !llvm.loop !398

483:                                              ; preds = %448, %475
  %484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

485:                                              ; preds = %461, %467
  %486 = phi ptr [ %474, %467 ], [ %454, %461 ]
  %487 = phi i32 [ %473, %467 ], [ 1, %461 ]
  %488 = load i32, ptr %486, align 4, !tbaa !6
  %489 = add nsw i32 %488, %487
  store i32 %489, ptr %486, align 4, !tbaa !6
  br label %490

490:                                              ; preds = %477, %485, %450, %432
  %491 = icmp eq i32 %442, %5
  br i1 %491, label %3136, label %359, !llvm.loop !399

492:                                              ; preds = %342, %628
  %493 = phi i32 [ 0, %342 ], [ %577, %628 ]
  %494 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %343, label %495, label %564

495:                                              ; preds = %492, %554
  %496 = phi i32 [ %563, %554 ], [ 0, %492 ]
  %497 = phi i64 [ %505, %554 ], [ %347, %492 ]
  %498 = phi i64 [ %562, %554 ], [ %346, %492 ]
  %499 = phi i32 [ %560, %554 ], [ %494, %492 ]
  %500 = sub i32 %345, %496
  %501 = tail call i32 @llvm.smin.i32(i32 %500, i32 0)
  %502 = sub i32 %500, %501
  %503 = zext i32 %502 to i64
  %504 = add nuw nsw i64 %503, 1
  %505 = add nsw i64 %497, -1
  %506 = icmp ult i32 %502, 31
  br i1 %506, label %542, label %507

507:                                              ; preds = %495
  %508 = and i64 %504, 8589934560
  %509 = sub i64 %498, %508
  br label %510

510:                                              ; preds = %510, %507
  %511 = phi i64 [ 0, %507 ], [ %534, %510 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %530, %510 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %531, %510 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %532, %510 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %533, %510 ]
  %516 = sub i64 %498, %511
  %517 = getelementptr inbounds i32, ptr %11, i64 %516
  %518 = getelementptr inbounds i32, ptr %517, i64 -7
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !6
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %517, i64 -15
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !6
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %517, i64 -23
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !6
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %517, i64 -31
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = mul <8 x i32> %520, %512
  %531 = mul <8 x i32> %523, %513
  %532 = mul <8 x i32> %526, %514
  %533 = mul <8 x i32> %529, %515
  %534 = add nuw i64 %511, 32
  %535 = icmp eq i64 %534, %508
  br i1 %535, label %536, label %510, !llvm.loop !400

536:                                              ; preds = %510
  %537 = mul <8 x i32> %531, %530
  %538 = mul <8 x i32> %532, %537
  %539 = mul <8 x i32> %533, %538
  %540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %539)
  %541 = icmp eq i64 %504, %508
  br i1 %541, label %554, label %542

542:                                              ; preds = %495, %536
  %543 = phi i64 [ %498, %495 ], [ %509, %536 ]
  %544 = phi i32 [ 1, %495 ], [ %540, %536 ]
  br label %545

545:                                              ; preds = %542, %545
  %546 = phi i64 [ %551, %545 ], [ %543, %542 ]
  %547 = phi i32 [ %550, %545 ], [ %544, %542 ]
  %548 = getelementptr inbounds i32, ptr %11, i64 %546
  %549 = load i32, ptr %548, align 4, !tbaa !6
  %550 = mul nsw i32 %549, %547
  %551 = add nsw i64 %546, -1
  %552 = trunc i64 %546 to i32
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %545, label %554, !llvm.loop !401

554:                                              ; preds = %545, %536
  %555 = phi i32 [ %540, %536 ], [ %550, %545 ]
  %556 = and i64 %505, 4294967295
  %557 = getelementptr inbounds i32, ptr %6, i64 %556
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %555
  %560 = add nsw i32 %559, %499
  %561 = icmp sgt i64 %497, 2
  %562 = add nsw i64 %498, -1
  %563 = add i32 %496, 1
  br i1 %561, label %495, label %564, !llvm.loop !402

564:                                              ; preds = %554, %492
  %565 = phi i32 [ %494, %492 ], [ %560, %554 ]
  %566 = icmp slt i32 %565, %5
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

569:                                              ; preds = %564
  %570 = load i8, ptr %26, align 1, !tbaa !12
  %571 = sext i32 %565 to i64
  %572 = getelementptr inbounds i8, ptr %24, i64 %571
  %573 = load i8, ptr %572, align 1, !tbaa !12
  %574 = mul i8 %573, %573
  %575 = mul i8 %574, %573
  %576 = add i8 %575, %570
  store i8 %576, ptr %26, align 1, !tbaa !12
  %577 = add nuw nsw i32 %493, 1
  br i1 %344, label %578, label %628

578:                                              ; preds = %569
  %579 = load i32, ptr %4, align 4, !tbaa !6
  %580 = load i32, ptr %12, align 4, !tbaa !6
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !6
  %586 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %586, ptr %6, align 4, !tbaa !6
  br i1 %349, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !6
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !6
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !6
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !6
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !6
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !6
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !6
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %347
  br i1 %620, label %628, label %587, !llvm.loop !403

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !6
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !6
  br label %628

628:                                              ; preds = %615, %623, %585, %569
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %3136, label %492, !llvm.loop !404

630:                                              ; preds = %32
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3136

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !10
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !10
  store i32 0, ptr %636, align 4, !tbaa !6
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %646

638:                                              ; preds = %632
  %639 = load i8, ptr %634, align 1, !tbaa !12
  %640 = sext i8 %639 to i32
  %641 = icmp slt i8 %639, 0
  %642 = mul nsw i32 %640, %640
  %643 = sub nsw i32 0, %642
  %644 = select i1 %641, i32 %643, i32 %642
  %645 = mul nsw i32 %644, %640
  store i32 %645, ptr %636, align 4, !tbaa !6
  br label %3136

646:                                              ; preds = %632
  switch i32 %1, label %1258 [
    i32 1, label %647
    i32 0, label %956
  ]

647:                                              ; preds = %646
  %648 = getelementptr inbounds i32, ptr %3, i64 %19
  %649 = load i32, ptr %648, align 4, !tbaa !6
  %650 = icmp eq i32 %649, 0
  %651 = icmp sgt i32 %5, 0
  br i1 %650, label %661, label %652

652:                                              ; preds = %647
  br i1 %651, label %653, label %3136

653:                                              ; preds = %652
  %654 = icmp sgt i32 %13, 1
  %655 = icmp sgt i32 %13, 0
  %656 = add i32 %13, -2
  %657 = zext i32 %656 to i64
  %658 = zext i32 %13 to i64
  %659 = add nuw i32 %5, 1
  %660 = icmp eq i32 %13, 1
  br label %812

661:                                              ; preds = %647
  br i1 %651, label %662, label %3136

662:                                              ; preds = %661
  %663 = icmp sgt i32 %13, 1
  %664 = icmp sgt i32 %13, 0
  %665 = add i32 %13, -2
  %666 = zext i32 %665 to i64
  %667 = zext i32 %13 to i64
  %668 = add nuw i32 %5, 1
  %669 = icmp eq i32 %13, 1
  br label %670

670:                                              ; preds = %662, %810
  %671 = phi i32 [ 0, %662 ], [ %762, %810 ]
  %672 = phi double [ 0.000000e+00, %662 ], [ %761, %810 ]
  %673 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %663, label %674, label %743

674:                                              ; preds = %670, %733
  %675 = phi i32 [ %742, %733 ], [ 0, %670 ]
  %676 = phi i64 [ %684, %733 ], [ %667, %670 ]
  %677 = phi i64 [ %741, %733 ], [ %666, %670 ]
  %678 = phi i32 [ %739, %733 ], [ %673, %670 ]
  %679 = sub i32 %665, %675
  %680 = tail call i32 @llvm.smin.i32(i32 %679, i32 0)
  %681 = sub i32 %679, %680
  %682 = zext i32 %681 to i64
  %683 = add nuw nsw i64 %682, 1
  %684 = add nsw i64 %676, -1
  %685 = icmp ult i32 %681, 31
  br i1 %685, label %721, label %686

686:                                              ; preds = %674
  %687 = and i64 %683, 8589934560
  %688 = sub i64 %677, %687
  br label %689

689:                                              ; preds = %689, %686
  %690 = phi i64 [ 0, %686 ], [ %713, %689 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %686 ], [ %709, %689 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %686 ], [ %710, %689 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %686 ], [ %711, %689 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %686 ], [ %712, %689 ]
  %695 = sub i64 %677, %690
  %696 = getelementptr inbounds i32, ptr %9, i64 %695
  %697 = getelementptr inbounds i32, ptr %696, i64 -7
  %698 = load <8 x i32>, ptr %697, align 4, !tbaa !6
  %699 = shufflevector <8 x i32> %698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %700 = getelementptr inbounds i32, ptr %696, i64 -15
  %701 = load <8 x i32>, ptr %700, align 4, !tbaa !6
  %702 = shufflevector <8 x i32> %701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %703 = getelementptr inbounds i32, ptr %696, i64 -23
  %704 = load <8 x i32>, ptr %703, align 4, !tbaa !6
  %705 = shufflevector <8 x i32> %704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %706 = getelementptr inbounds i32, ptr %696, i64 -31
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !6
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = mul <8 x i32> %699, %691
  %710 = mul <8 x i32> %702, %692
  %711 = mul <8 x i32> %705, %693
  %712 = mul <8 x i32> %708, %694
  %713 = add nuw i64 %690, 32
  %714 = icmp eq i64 %713, %687
  br i1 %714, label %715, label %689, !llvm.loop !405

715:                                              ; preds = %689
  %716 = mul <8 x i32> %710, %709
  %717 = mul <8 x i32> %711, %716
  %718 = mul <8 x i32> %712, %717
  %719 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %718)
  %720 = icmp eq i64 %683, %687
  br i1 %720, label %733, label %721

721:                                              ; preds = %674, %715
  %722 = phi i64 [ %677, %674 ], [ %688, %715 ]
  %723 = phi i32 [ 1, %674 ], [ %719, %715 ]
  br label %724

724:                                              ; preds = %721, %724
  %725 = phi i64 [ %730, %724 ], [ %722, %721 ]
  %726 = phi i32 [ %729, %724 ], [ %723, %721 ]
  %727 = getelementptr inbounds i32, ptr %9, i64 %725
  %728 = load i32, ptr %727, align 4, !tbaa !6
  %729 = mul nsw i32 %728, %726
  %730 = add nsw i64 %725, -1
  %731 = trunc i64 %725 to i32
  %732 = icmp sgt i32 %731, 0
  br i1 %732, label %724, label %733, !llvm.loop !406

733:                                              ; preds = %724, %715
  %734 = phi i32 [ %719, %715 ], [ %729, %724 ]
  %735 = and i64 %684, 4294967295
  %736 = getelementptr inbounds i32, ptr %6, i64 %735
  %737 = load i32, ptr %736, align 4, !tbaa !6
  %738 = mul nsw i32 %737, %734
  %739 = add nsw i32 %738, %678
  %740 = icmp sgt i64 %676, 2
  %741 = add nsw i64 %677, -1
  %742 = add i32 %675, 1
  br i1 %740, label %674, label %743, !llvm.loop !407

743:                                              ; preds = %733, %670
  %744 = phi i32 [ %673, %670 ], [ %739, %733 ]
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds double, ptr %2, i64 %745
  %747 = load double, ptr %746, align 8, !tbaa !19
  %748 = getelementptr inbounds i8, ptr %634, i64 %745
  %749 = load i8, ptr %748, align 1, !tbaa !12
  %750 = load i32, ptr %636, align 4, !tbaa !6
  %751 = sitofp i32 %750 to double
  %752 = sitofp i8 %749 to double
  %753 = fmul fast double %747, %752
  %754 = fcmp fast olt double %753, 0.000000e+00
  %755 = fneg fast double %753
  %756 = select nnan ninf i1 %754, double %755, double %753
  %757 = fmul fast double %753, %753
  %758 = fmul fast double %757, %756
  %759 = fadd fast double %758, %751
  %760 = fptosi double %759 to i32
  store i32 %760, ptr %636, align 4, !tbaa !6
  %761 = fadd fast double %747, %672
  %762 = add nuw nsw i32 %671, 1
  br i1 %664, label %763, label %810

763:                                              ; preds = %743
  %764 = load i32, ptr %4, align 4, !tbaa !6
  %765 = load i32, ptr %12, align 4, !tbaa !6
  %766 = add nsw i32 %765, -1
  %767 = icmp slt i32 %764, %766
  br i1 %767, label %787, label %768

768:                                              ; preds = %763
  %769 = icmp eq i32 %764, %766
  br i1 %769, label %770, label %803

770:                                              ; preds = %768
  store i32 0, ptr %4, align 4, !tbaa !6
  %771 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %771, ptr %6, align 4, !tbaa !6
  br i1 %669, label %810, label %772

772:                                              ; preds = %770, %797
  %773 = phi i64 [ %801, %797 ], [ 1, %770 ]
  %774 = getelementptr inbounds i32, ptr %4, i64 %773
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = getelementptr inbounds i32, ptr %12, i64 %773
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = add nsw i32 %777, -1
  %779 = icmp slt i32 %775, %778
  br i1 %779, label %780, label %795

780:                                              ; preds = %772
  br i1 %767, label %787, label %781

781:                                              ; preds = %780
  %782 = getelementptr inbounds i32, ptr %7, i64 %773
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = getelementptr inbounds i32, ptr %6, i64 %773
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = add nsw i32 %785, %783
  store i32 %786, ptr %784, align 4, !tbaa !6
  br label %805

787:                                              ; preds = %763, %780
  %788 = phi i32 [ %775, %780 ], [ %764, %763 ]
  %789 = phi ptr [ %774, %780 ], [ %4, %763 ]
  %790 = phi i64 [ %773, %780 ], [ 0, %763 ]
  %791 = add nsw i32 %788, 1
  store i32 %791, ptr %789, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %7, i64 %790
  %793 = load i32, ptr %792, align 4, !tbaa !6
  %794 = getelementptr inbounds i32, ptr %6, i64 %790
  br label %805

795:                                              ; preds = %772
  %796 = icmp eq i32 %775, %778
  br i1 %796, label %797, label %803

797:                                              ; preds = %795
  store i32 0, ptr %774, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %8, i64 %773
  %799 = load i32, ptr %798, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %6, i64 %773
  store i32 %799, ptr %800, align 4, !tbaa !6
  %801 = add nuw nsw i64 %773, 1
  %802 = icmp eq i64 %801, %667
  br i1 %802, label %810, label %772, !llvm.loop !408

803:                                              ; preds = %768, %795
  %804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

805:                                              ; preds = %781, %787
  %806 = phi ptr [ %794, %787 ], [ %774, %781 ]
  %807 = phi i32 [ %793, %787 ], [ 1, %781 ]
  %808 = load i32, ptr %806, align 4, !tbaa !6
  %809 = add nsw i32 %808, %807
  store i32 %809, ptr %806, align 4, !tbaa !6
  br label %810

810:                                              ; preds = %797, %805, %770, %743
  %811 = icmp eq i32 %762, %5
  br i1 %811, label %3136, label %670, !llvm.loop !409

812:                                              ; preds = %653, %954
  %813 = phi i32 [ 0, %653 ], [ %903, %954 ]
  %814 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %654, label %815, label %884

815:                                              ; preds = %812, %874
  %816 = phi i32 [ %883, %874 ], [ 0, %812 ]
  %817 = phi i64 [ %825, %874 ], [ %658, %812 ]
  %818 = phi i64 [ %882, %874 ], [ %657, %812 ]
  %819 = phi i32 [ %880, %874 ], [ %814, %812 ]
  %820 = sub i32 %656, %816
  %821 = tail call i32 @llvm.smin.i32(i32 %820, i32 0)
  %822 = sub i32 %820, %821
  %823 = zext i32 %822 to i64
  %824 = add nuw nsw i64 %823, 1
  %825 = add nsw i64 %817, -1
  %826 = icmp ult i32 %822, 31
  br i1 %826, label %862, label %827

827:                                              ; preds = %815
  %828 = and i64 %824, 8589934560
  %829 = sub i64 %818, %828
  br label %830

830:                                              ; preds = %830, %827
  %831 = phi i64 [ 0, %827 ], [ %854, %830 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %827 ], [ %850, %830 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %827 ], [ %851, %830 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %827 ], [ %852, %830 ]
  %835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %827 ], [ %853, %830 ]
  %836 = sub i64 %818, %831
  %837 = getelementptr inbounds i32, ptr %11, i64 %836
  %838 = getelementptr inbounds i32, ptr %837, i64 -7
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !6
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = getelementptr inbounds i32, ptr %837, i64 -15
  %842 = load <8 x i32>, ptr %841, align 4, !tbaa !6
  %843 = shufflevector <8 x i32> %842, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %844 = getelementptr inbounds i32, ptr %837, i64 -23
  %845 = load <8 x i32>, ptr %844, align 4, !tbaa !6
  %846 = shufflevector <8 x i32> %845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %847 = getelementptr inbounds i32, ptr %837, i64 -31
  %848 = load <8 x i32>, ptr %847, align 4, !tbaa !6
  %849 = shufflevector <8 x i32> %848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %850 = mul <8 x i32> %840, %832
  %851 = mul <8 x i32> %843, %833
  %852 = mul <8 x i32> %846, %834
  %853 = mul <8 x i32> %849, %835
  %854 = add nuw i64 %831, 32
  %855 = icmp eq i64 %854, %828
  br i1 %855, label %856, label %830, !llvm.loop !410

856:                                              ; preds = %830
  %857 = mul <8 x i32> %851, %850
  %858 = mul <8 x i32> %852, %857
  %859 = mul <8 x i32> %853, %858
  %860 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %859)
  %861 = icmp eq i64 %824, %828
  br i1 %861, label %874, label %862

862:                                              ; preds = %815, %856
  %863 = phi i64 [ %818, %815 ], [ %829, %856 ]
  %864 = phi i32 [ 1, %815 ], [ %860, %856 ]
  br label %865

865:                                              ; preds = %862, %865
  %866 = phi i64 [ %871, %865 ], [ %863, %862 ]
  %867 = phi i32 [ %870, %865 ], [ %864, %862 ]
  %868 = getelementptr inbounds i32, ptr %11, i64 %866
  %869 = load i32, ptr %868, align 4, !tbaa !6
  %870 = mul nsw i32 %869, %867
  %871 = add nsw i64 %866, -1
  %872 = trunc i64 %866 to i32
  %873 = icmp sgt i32 %872, 0
  br i1 %873, label %865, label %874, !llvm.loop !411

874:                                              ; preds = %865, %856
  %875 = phi i32 [ %860, %856 ], [ %870, %865 ]
  %876 = and i64 %825, 4294967295
  %877 = getelementptr inbounds i32, ptr %6, i64 %876
  %878 = load i32, ptr %877, align 4, !tbaa !6
  %879 = mul nsw i32 %878, %875
  %880 = add nsw i32 %879, %819
  %881 = icmp sgt i64 %817, 2
  %882 = add nsw i64 %818, -1
  %883 = add i32 %816, 1
  br i1 %881, label %815, label %884, !llvm.loop !412

884:                                              ; preds = %874, %812
  %885 = phi i32 [ %814, %812 ], [ %880, %874 ]
  %886 = icmp slt i32 %885, %5
  br i1 %886, label %889, label %887

887:                                              ; preds = %884
  %888 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

889:                                              ; preds = %884
  %890 = sext i32 %885 to i64
  %891 = getelementptr inbounds i8, ptr %634, i64 %890
  %892 = load i8, ptr %891, align 1, !tbaa !12
  %893 = load i32, ptr %636, align 4, !tbaa !6
  %894 = sitofp i32 %893 to double
  %895 = sitofp i8 %892 to double
  %896 = icmp slt i8 %892, 0
  %897 = fneg fast double %895
  %898 = select i1 %896, double %897, double %895
  %899 = fmul fast double %895, %895
  %900 = fmul fast double %899, %898
  %901 = fadd fast double %900, %894
  %902 = fptosi double %901 to i32
  store i32 %902, ptr %636, align 4, !tbaa !6
  %903 = add nuw nsw i32 %813, 1
  br i1 %655, label %904, label %954

904:                                              ; preds = %889
  %905 = load i32, ptr %4, align 4, !tbaa !6
  %906 = load i32, ptr %12, align 4, !tbaa !6
  %907 = add nsw i32 %906, -1
  %908 = icmp slt i32 %905, %907
  br i1 %908, label %931, label %909

909:                                              ; preds = %904
  %910 = icmp eq i32 %905, %907
  br i1 %910, label %911, label %947

911:                                              ; preds = %909
  store i32 0, ptr %4, align 4, !tbaa !6
  %912 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %912, ptr %6, align 4, !tbaa !6
  br i1 %660, label %954, label %913

913:                                              ; preds = %911, %941
  %914 = phi i64 [ %945, %941 ], [ 1, %911 ]
  %915 = getelementptr inbounds i32, ptr %4, i64 %914
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = getelementptr inbounds i32, ptr %12, i64 %914
  %918 = load i32, ptr %917, align 4, !tbaa !6
  %919 = add nsw i32 %918, -1
  %920 = icmp slt i32 %916, %919
  br i1 %920, label %921, label %939

921:                                              ; preds = %913
  br i1 %908, label %931, label %922

922:                                              ; preds = %921
  %923 = shl i64 %914, 32
  %924 = add i64 %923, -4294967296
  %925 = ashr exact i64 %924, 32
  %926 = getelementptr inbounds i32, ptr %7, i64 %925
  %927 = load i32, ptr %926, align 4, !tbaa !6
  %928 = getelementptr inbounds i32, ptr %6, i64 %914
  %929 = load i32, ptr %928, align 4, !tbaa !6
  %930 = add nsw i32 %929, %927
  store i32 %930, ptr %928, align 4, !tbaa !6
  br label %949

931:                                              ; preds = %904, %921
  %932 = phi i32 [ %916, %921 ], [ %905, %904 ]
  %933 = phi ptr [ %915, %921 ], [ %4, %904 ]
  %934 = phi i64 [ %914, %921 ], [ 0, %904 ]
  %935 = add nsw i32 %932, 1
  store i32 %935, ptr %933, align 4, !tbaa !6
  %936 = getelementptr inbounds i32, ptr %7, i64 %934
  %937 = load i32, ptr %936, align 4, !tbaa !6
  %938 = getelementptr inbounds i32, ptr %6, i64 %934
  br label %949

939:                                              ; preds = %913
  %940 = icmp eq i32 %916, %919
  br i1 %940, label %941, label %947

941:                                              ; preds = %939
  store i32 0, ptr %915, align 4, !tbaa !6
  %942 = getelementptr inbounds i32, ptr %8, i64 %914
  %943 = load i32, ptr %942, align 4, !tbaa !6
  %944 = getelementptr inbounds i32, ptr %6, i64 %914
  store i32 %943, ptr %944, align 4, !tbaa !6
  %945 = add nuw nsw i64 %914, 1
  %946 = icmp eq i64 %945, %658
  br i1 %946, label %954, label %913, !llvm.loop !413

947:                                              ; preds = %909, %939
  %948 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

949:                                              ; preds = %922, %931
  %950 = phi ptr [ %938, %931 ], [ %915, %922 ]
  %951 = phi i32 [ %937, %931 ], [ 1, %922 ]
  %952 = load i32, ptr %950, align 4, !tbaa !6
  %953 = add nsw i32 %952, %951
  store i32 %953, ptr %950, align 4, !tbaa !6
  br label %954

954:                                              ; preds = %941, %949, %911, %889
  %955 = icmp eq i32 %903, %5
  br i1 %955, label %3136, label %812, !llvm.loop !414

956:                                              ; preds = %646
  %957 = getelementptr inbounds i32, ptr %3, i64 %19
  %958 = load i32, ptr %957, align 4, !tbaa !6
  %959 = icmp eq i32 %958, 0
  %960 = icmp sgt i32 %5, 0
  br i1 %959, label %970, label %961

961:                                              ; preds = %956
  br i1 %960, label %962, label %3136

962:                                              ; preds = %961
  %963 = icmp sgt i32 %13, 1
  %964 = icmp sgt i32 %13, 0
  %965 = add i32 %13, -2
  %966 = zext i32 %965 to i64
  %967 = zext i32 %13 to i64
  %968 = add nuw i32 %5, 1
  %969 = icmp eq i32 %13, 1
  br label %1116

970:                                              ; preds = %956
  br i1 %960, label %971, label %3136

971:                                              ; preds = %970
  %972 = icmp sgt i32 %13, 1
  %973 = icmp sgt i32 %13, 0
  %974 = add i32 %13, -2
  %975 = zext i32 %974 to i64
  %976 = zext i32 %13 to i64
  %977 = add nuw i32 %5, 1
  %978 = icmp eq i32 %13, 1
  br label %979

979:                                              ; preds = %971, %1114
  %980 = phi i32 [ 0, %971 ], [ %1066, %1114 ]
  %981 = phi double [ 0.000000e+00, %971 ], [ %1065, %1114 ]
  %982 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %972, label %983, label %1052

983:                                              ; preds = %979, %1042
  %984 = phi i32 [ %1051, %1042 ], [ 0, %979 ]
  %985 = phi i64 [ %993, %1042 ], [ %976, %979 ]
  %986 = phi i64 [ %1050, %1042 ], [ %975, %979 ]
  %987 = phi i32 [ %1048, %1042 ], [ %982, %979 ]
  %988 = sub i32 %974, %984
  %989 = tail call i32 @llvm.smin.i32(i32 %988, i32 0)
  %990 = sub i32 %988, %989
  %991 = zext i32 %990 to i64
  %992 = add nuw nsw i64 %991, 1
  %993 = add nsw i64 %985, -1
  %994 = icmp ult i32 %990, 31
  br i1 %994, label %1030, label %995

995:                                              ; preds = %983
  %996 = and i64 %992, 8589934560
  %997 = sub i64 %986, %996
  br label %998

998:                                              ; preds = %998, %995
  %999 = phi i64 [ 0, %995 ], [ %1022, %998 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1018, %998 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1019, %998 ]
  %1002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1020, %998 ]
  %1003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %995 ], [ %1021, %998 ]
  %1004 = sub i64 %986, %999
  %1005 = getelementptr inbounds i32, ptr %9, i64 %1004
  %1006 = getelementptr inbounds i32, ptr %1005, i64 -7
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1005, i64 -15
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1005, i64 -23
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = getelementptr inbounds i32, ptr %1005, i64 -31
  %1016 = load <8 x i32>, ptr %1015, align 4, !tbaa !6
  %1017 = shufflevector <8 x i32> %1016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1018 = mul <8 x i32> %1008, %1000
  %1019 = mul <8 x i32> %1011, %1001
  %1020 = mul <8 x i32> %1014, %1002
  %1021 = mul <8 x i32> %1017, %1003
  %1022 = add nuw i64 %999, 32
  %1023 = icmp eq i64 %1022, %996
  br i1 %1023, label %1024, label %998, !llvm.loop !415

1024:                                             ; preds = %998
  %1025 = mul <8 x i32> %1019, %1018
  %1026 = mul <8 x i32> %1020, %1025
  %1027 = mul <8 x i32> %1021, %1026
  %1028 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1027)
  %1029 = icmp eq i64 %992, %996
  br i1 %1029, label %1042, label %1030

1030:                                             ; preds = %983, %1024
  %1031 = phi i64 [ %986, %983 ], [ %997, %1024 ]
  %1032 = phi i32 [ 1, %983 ], [ %1028, %1024 ]
  br label %1033

1033:                                             ; preds = %1030, %1033
  %1034 = phi i64 [ %1039, %1033 ], [ %1031, %1030 ]
  %1035 = phi i32 [ %1038, %1033 ], [ %1032, %1030 ]
  %1036 = getelementptr inbounds i32, ptr %9, i64 %1034
  %1037 = load i32, ptr %1036, align 4, !tbaa !6
  %1038 = mul nsw i32 %1037, %1035
  %1039 = add nsw i64 %1034, -1
  %1040 = trunc i64 %1034 to i32
  %1041 = icmp sgt i32 %1040, 0
  br i1 %1041, label %1033, label %1042, !llvm.loop !416

1042:                                             ; preds = %1033, %1024
  %1043 = phi i32 [ %1028, %1024 ], [ %1038, %1033 ]
  %1044 = and i64 %993, 4294967295
  %1045 = getelementptr inbounds i32, ptr %6, i64 %1044
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = mul nsw i32 %1046, %1043
  %1048 = add nsw i32 %1047, %987
  %1049 = icmp sgt i64 %985, 2
  %1050 = add nsw i64 %986, -1
  %1051 = add i32 %984, 1
  br i1 %1049, label %983, label %1052, !llvm.loop !417

1052:                                             ; preds = %1042, %979
  %1053 = phi i32 [ %982, %979 ], [ %1048, %1042 ]
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds i8, ptr %634, i64 %1054
  %1056 = load i8, ptr %1055, align 1, !tbaa !12
  %1057 = sext i8 %1056 to i32
  %1058 = load i32, ptr %636, align 4, !tbaa !6
  %1059 = icmp slt i8 %1056, 0
  %1060 = mul nsw i32 %1057, %1057
  %1061 = sub nsw i32 0, %1060
  %1062 = select i1 %1059, i32 %1061, i32 %1060
  %1063 = mul nsw i32 %1062, %1057
  %1064 = add nsw i32 %1063, %1058
  store i32 %1064, ptr %636, align 4, !tbaa !6
  %1065 = fadd fast double %981, 1.000000e+00
  %1066 = add nuw nsw i32 %980, 1
  br i1 %973, label %1067, label %1114

1067:                                             ; preds = %1052
  %1068 = load i32, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %12, align 4, !tbaa !6
  %1070 = add nsw i32 %1069, -1
  %1071 = icmp slt i32 %1068, %1070
  br i1 %1071, label %1091, label %1072

1072:                                             ; preds = %1067
  %1073 = icmp eq i32 %1068, %1070
  br i1 %1073, label %1074, label %1107

1074:                                             ; preds = %1072
  store i32 0, ptr %4, align 4, !tbaa !6
  %1075 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1075, ptr %6, align 4, !tbaa !6
  br i1 %978, label %1114, label %1076

1076:                                             ; preds = %1074, %1101
  %1077 = phi i64 [ %1105, %1101 ], [ 1, %1074 ]
  %1078 = getelementptr inbounds i32, ptr %4, i64 %1077
  %1079 = load i32, ptr %1078, align 4, !tbaa !6
  %1080 = getelementptr inbounds i32, ptr %12, i64 %1077
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = add nsw i32 %1081, -1
  %1083 = icmp slt i32 %1079, %1082
  br i1 %1083, label %1084, label %1099

1084:                                             ; preds = %1076
  br i1 %1071, label %1091, label %1085

1085:                                             ; preds = %1084
  %1086 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1077
  %1089 = load i32, ptr %1088, align 4, !tbaa !6
  %1090 = add nsw i32 %1089, %1087
  store i32 %1090, ptr %1088, align 4, !tbaa !6
  br label %1109

1091:                                             ; preds = %1067, %1084
  %1092 = phi i32 [ %1079, %1084 ], [ %1068, %1067 ]
  %1093 = phi ptr [ %1078, %1084 ], [ %4, %1067 ]
  %1094 = phi i64 [ %1077, %1084 ], [ 0, %1067 ]
  %1095 = add nsw i32 %1092, 1
  store i32 %1095, ptr %1093, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %7, i64 %1094
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1094
  br label %1109

1099:                                             ; preds = %1076
  %1100 = icmp eq i32 %1079, %1082
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1099
  store i32 0, ptr %1078, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %8, i64 %1077
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = getelementptr inbounds i32, ptr %6, i64 %1077
  store i32 %1103, ptr %1104, align 4, !tbaa !6
  %1105 = add nuw nsw i64 %1077, 1
  %1106 = icmp eq i64 %1105, %976
  br i1 %1106, label %1114, label %1076, !llvm.loop !418

1107:                                             ; preds = %1072, %1099
  %1108 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1109:                                             ; preds = %1085, %1091
  %1110 = phi ptr [ %1098, %1091 ], [ %1078, %1085 ]
  %1111 = phi i32 [ %1097, %1091 ], [ 1, %1085 ]
  %1112 = load i32, ptr %1110, align 4, !tbaa !6
  %1113 = add nsw i32 %1112, %1111
  store i32 %1113, ptr %1110, align 4, !tbaa !6
  br label %1114

1114:                                             ; preds = %1101, %1109, %1074, %1052
  %1115 = icmp eq i32 %1066, %5
  br i1 %1115, label %3136, label %979, !llvm.loop !419

1116:                                             ; preds = %962, %1256
  %1117 = phi i32 [ 0, %962 ], [ %1205, %1256 ]
  %1118 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %963, label %1119, label %1188

1119:                                             ; preds = %1116, %1178
  %1120 = phi i32 [ %1187, %1178 ], [ 0, %1116 ]
  %1121 = phi i64 [ %1129, %1178 ], [ %967, %1116 ]
  %1122 = phi i64 [ %1186, %1178 ], [ %966, %1116 ]
  %1123 = phi i32 [ %1184, %1178 ], [ %1118, %1116 ]
  %1124 = sub i32 %965, %1120
  %1125 = tail call i32 @llvm.smin.i32(i32 %1124, i32 0)
  %1126 = sub i32 %1124, %1125
  %1127 = zext i32 %1126 to i64
  %1128 = add nuw nsw i64 %1127, 1
  %1129 = add nsw i64 %1121, -1
  %1130 = icmp ult i32 %1126, 31
  br i1 %1130, label %1166, label %1131

1131:                                             ; preds = %1119
  %1132 = and i64 %1128, 8589934560
  %1133 = sub i64 %1122, %1132
  br label %1134

1134:                                             ; preds = %1134, %1131
  %1135 = phi i64 [ 0, %1131 ], [ %1158, %1134 ]
  %1136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1154, %1134 ]
  %1137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1155, %1134 ]
  %1138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1156, %1134 ]
  %1139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1157, %1134 ]
  %1140 = sub i64 %1122, %1135
  %1141 = getelementptr inbounds i32, ptr %11, i64 %1140
  %1142 = getelementptr inbounds i32, ptr %1141, i64 -7
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1141, i64 -15
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = getelementptr inbounds i32, ptr %1141, i64 -23
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !6
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = getelementptr inbounds i32, ptr %1141, i64 -31
  %1152 = load <8 x i32>, ptr %1151, align 4, !tbaa !6
  %1153 = shufflevector <8 x i32> %1152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1154 = mul <8 x i32> %1144, %1136
  %1155 = mul <8 x i32> %1147, %1137
  %1156 = mul <8 x i32> %1150, %1138
  %1157 = mul <8 x i32> %1153, %1139
  %1158 = add nuw i64 %1135, 32
  %1159 = icmp eq i64 %1158, %1132
  br i1 %1159, label %1160, label %1134, !llvm.loop !420

1160:                                             ; preds = %1134
  %1161 = mul <8 x i32> %1155, %1154
  %1162 = mul <8 x i32> %1156, %1161
  %1163 = mul <8 x i32> %1157, %1162
  %1164 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1163)
  %1165 = icmp eq i64 %1128, %1132
  br i1 %1165, label %1178, label %1166

1166:                                             ; preds = %1119, %1160
  %1167 = phi i64 [ %1122, %1119 ], [ %1133, %1160 ]
  %1168 = phi i32 [ 1, %1119 ], [ %1164, %1160 ]
  br label %1169

1169:                                             ; preds = %1166, %1169
  %1170 = phi i64 [ %1175, %1169 ], [ %1167, %1166 ]
  %1171 = phi i32 [ %1174, %1169 ], [ %1168, %1166 ]
  %1172 = getelementptr inbounds i32, ptr %11, i64 %1170
  %1173 = load i32, ptr %1172, align 4, !tbaa !6
  %1174 = mul nsw i32 %1173, %1171
  %1175 = add nsw i64 %1170, -1
  %1176 = trunc i64 %1170 to i32
  %1177 = icmp sgt i32 %1176, 0
  br i1 %1177, label %1169, label %1178, !llvm.loop !421

1178:                                             ; preds = %1169, %1160
  %1179 = phi i32 [ %1164, %1160 ], [ %1174, %1169 ]
  %1180 = and i64 %1129, 4294967295
  %1181 = getelementptr inbounds i32, ptr %6, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !6
  %1183 = mul nsw i32 %1182, %1179
  %1184 = add nsw i32 %1183, %1123
  %1185 = icmp sgt i64 %1121, 2
  %1186 = add nsw i64 %1122, -1
  %1187 = add i32 %1120, 1
  br i1 %1185, label %1119, label %1188, !llvm.loop !422

1188:                                             ; preds = %1178, %1116
  %1189 = phi i32 [ %1118, %1116 ], [ %1184, %1178 ]
  %1190 = icmp slt i32 %1189, %5
  br i1 %1190, label %1193, label %1191

1191:                                             ; preds = %1188
  %1192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

1193:                                             ; preds = %1188
  %1194 = sext i32 %1189 to i64
  %1195 = getelementptr inbounds i8, ptr %634, i64 %1194
  %1196 = load i8, ptr %1195, align 1, !tbaa !12
  %1197 = sext i8 %1196 to i32
  %1198 = load i32, ptr %636, align 4, !tbaa !6
  %1199 = icmp slt i8 %1196, 0
  %1200 = mul nsw i32 %1197, %1197
  %1201 = sub nsw i32 0, %1200
  %1202 = select i1 %1199, i32 %1201, i32 %1200
  %1203 = mul nsw i32 %1202, %1197
  %1204 = add nsw i32 %1203, %1198
  store i32 %1204, ptr %636, align 4, !tbaa !6
  %1205 = add nuw nsw i32 %1117, 1
  br i1 %964, label %1206, label %1256

1206:                                             ; preds = %1193
  %1207 = load i32, ptr %4, align 4, !tbaa !6
  %1208 = load i32, ptr %12, align 4, !tbaa !6
  %1209 = add nsw i32 %1208, -1
  %1210 = icmp slt i32 %1207, %1209
  br i1 %1210, label %1233, label %1211

1211:                                             ; preds = %1206
  %1212 = icmp eq i32 %1207, %1209
  br i1 %1212, label %1213, label %1249

1213:                                             ; preds = %1211
  store i32 0, ptr %4, align 4, !tbaa !6
  %1214 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1214, ptr %6, align 4, !tbaa !6
  br i1 %969, label %1256, label %1215

1215:                                             ; preds = %1213, %1243
  %1216 = phi i64 [ %1247, %1243 ], [ 1, %1213 ]
  %1217 = getelementptr inbounds i32, ptr %4, i64 %1216
  %1218 = load i32, ptr %1217, align 4, !tbaa !6
  %1219 = getelementptr inbounds i32, ptr %12, i64 %1216
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1218, %1221
  br i1 %1222, label %1223, label %1241

1223:                                             ; preds = %1215
  br i1 %1210, label %1233, label %1224

1224:                                             ; preds = %1223
  %1225 = shl i64 %1216, 32
  %1226 = add i64 %1225, -4294967296
  %1227 = ashr exact i64 %1226, 32
  %1228 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1229 = load i32, ptr %1228, align 4, !tbaa !6
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1216
  %1231 = load i32, ptr %1230, align 4, !tbaa !6
  %1232 = add nsw i32 %1231, %1229
  store i32 %1232, ptr %1230, align 4, !tbaa !6
  br label %1251

1233:                                             ; preds = %1206, %1223
  %1234 = phi i32 [ %1218, %1223 ], [ %1207, %1206 ]
  %1235 = phi ptr [ %1217, %1223 ], [ %4, %1206 ]
  %1236 = phi i64 [ %1216, %1223 ], [ 0, %1206 ]
  %1237 = add nsw i32 %1234, 1
  store i32 %1237, ptr %1235, align 4, !tbaa !6
  %1238 = getelementptr inbounds i32, ptr %7, i64 %1236
  %1239 = load i32, ptr %1238, align 4, !tbaa !6
  %1240 = getelementptr inbounds i32, ptr %6, i64 %1236
  br label %1251

1241:                                             ; preds = %1215
  %1242 = icmp eq i32 %1218, %1221
  br i1 %1242, label %1243, label %1249

1243:                                             ; preds = %1241
  store i32 0, ptr %1217, align 4, !tbaa !6
  %1244 = getelementptr inbounds i32, ptr %8, i64 %1216
  %1245 = load i32, ptr %1244, align 4, !tbaa !6
  %1246 = getelementptr inbounds i32, ptr %6, i64 %1216
  store i32 %1245, ptr %1246, align 4, !tbaa !6
  %1247 = add nuw nsw i64 %1216, 1
  %1248 = icmp eq i64 %1247, %967
  br i1 %1248, label %1256, label %1215, !llvm.loop !423

1249:                                             ; preds = %1211, %1241
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1251:                                             ; preds = %1224, %1233
  %1252 = phi ptr [ %1240, %1233 ], [ %1217, %1224 ]
  %1253 = phi i32 [ %1239, %1233 ], [ 1, %1224 ]
  %1254 = load i32, ptr %1252, align 4, !tbaa !6
  %1255 = add nsw i32 %1254, %1253
  store i32 %1255, ptr %1252, align 4, !tbaa !6
  br label %1256

1256:                                             ; preds = %1243, %1251, %1213, %1193
  %1257 = icmp eq i32 %1205, %5
  br i1 %1257, label %3136, label %1116, !llvm.loop !424

1258:                                             ; preds = %646
  %1259 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 615, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3136

1260:                                             ; preds = %18
  %1261 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1262 = load ptr, ptr %1261, align 8, !tbaa !10
  %1263 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1264 = load ptr, ptr %1263, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1264, align 8, !tbaa !19
  %1265 = icmp eq i32 %13, 0
  br i1 %1265, label %1266, label %1274

1266:                                             ; preds = %1260
  %1267 = load i8, ptr %1262, align 1, !tbaa !12
  %1268 = sitofp i8 %1267 to double
  %1269 = icmp slt i8 %1267, 0
  %1270 = fneg fast double %1268
  %1271 = select i1 %1269, double %1270, double %1268
  %1272 = fmul fast double %1268, %1268
  %1273 = fmul fast double %1272, %1271
  store double %1273, ptr %1264, align 8, !tbaa !19
  br label %3136

1274:                                             ; preds = %1260
  switch i32 %1, label %1882 [
    i32 1, label %1275
    i32 0, label %1580
  ]

1275:                                             ; preds = %1274
  %1276 = getelementptr inbounds i32, ptr %3, i64 %19
  %1277 = load i32, ptr %1276, align 4, !tbaa !6
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp sgt i32 %5, 0
  br i1 %1278, label %1289, label %1280

1280:                                             ; preds = %1275
  br i1 %1279, label %1281, label %3136

1281:                                             ; preds = %1280
  %1282 = icmp sgt i32 %13, 1
  %1283 = icmp sgt i32 %13, 0
  %1284 = add i32 %13, -2
  %1285 = zext i32 %1284 to i64
  %1286 = zext i32 %13 to i64
  %1287 = add nuw i32 %5, 1
  %1288 = icmp eq i32 %13, 1
  br label %1438

1289:                                             ; preds = %1275
  br i1 %1279, label %1290, label %3136

1290:                                             ; preds = %1289
  %1291 = icmp sgt i32 %13, 1
  %1292 = icmp sgt i32 %13, 0
  %1293 = add i32 %13, -2
  %1294 = zext i32 %1293 to i64
  %1295 = zext i32 %13 to i64
  %1296 = add nuw i32 %5, 1
  %1297 = icmp eq i32 %13, 1
  br label %1298

1298:                                             ; preds = %1290, %1436
  %1299 = phi double [ 0.000000e+00, %1290 ], [ %1386, %1436 ]
  %1300 = phi i32 [ 0, %1290 ], [ %1388, %1436 ]
  %1301 = phi double [ 0.000000e+00, %1290 ], [ %1387, %1436 ]
  %1302 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1303, label %1372

1303:                                             ; preds = %1298, %1362
  %1304 = phi i32 [ %1371, %1362 ], [ 0, %1298 ]
  %1305 = phi i64 [ %1313, %1362 ], [ %1295, %1298 ]
  %1306 = phi i64 [ %1370, %1362 ], [ %1294, %1298 ]
  %1307 = phi i32 [ %1368, %1362 ], [ %1302, %1298 ]
  %1308 = sub i32 %1293, %1304
  %1309 = tail call i32 @llvm.smin.i32(i32 %1308, i32 0)
  %1310 = sub i32 %1308, %1309
  %1311 = zext i32 %1310 to i64
  %1312 = add nuw nsw i64 %1311, 1
  %1313 = add nsw i64 %1305, -1
  %1314 = icmp ult i32 %1310, 31
  br i1 %1314, label %1350, label %1315

1315:                                             ; preds = %1303
  %1316 = and i64 %1312, 8589934560
  %1317 = sub i64 %1306, %1316
  br label %1318

1318:                                             ; preds = %1318, %1315
  %1319 = phi i64 [ 0, %1315 ], [ %1342, %1318 ]
  %1320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1338, %1318 ]
  %1321 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1339, %1318 ]
  %1322 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1340, %1318 ]
  %1323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1341, %1318 ]
  %1324 = sub i64 %1306, %1319
  %1325 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1326 = getelementptr inbounds i32, ptr %1325, i64 -7
  %1327 = load <8 x i32>, ptr %1326, align 4, !tbaa !6
  %1328 = shufflevector <8 x i32> %1327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1329 = getelementptr inbounds i32, ptr %1325, i64 -15
  %1330 = load <8 x i32>, ptr %1329, align 4, !tbaa !6
  %1331 = shufflevector <8 x i32> %1330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1332 = getelementptr inbounds i32, ptr %1325, i64 -23
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !6
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = getelementptr inbounds i32, ptr %1325, i64 -31
  %1336 = load <8 x i32>, ptr %1335, align 4, !tbaa !6
  %1337 = shufflevector <8 x i32> %1336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1338 = mul <8 x i32> %1328, %1320
  %1339 = mul <8 x i32> %1331, %1321
  %1340 = mul <8 x i32> %1334, %1322
  %1341 = mul <8 x i32> %1337, %1323
  %1342 = add nuw i64 %1319, 32
  %1343 = icmp eq i64 %1342, %1316
  br i1 %1343, label %1344, label %1318, !llvm.loop !425

1344:                                             ; preds = %1318
  %1345 = mul <8 x i32> %1339, %1338
  %1346 = mul <8 x i32> %1340, %1345
  %1347 = mul <8 x i32> %1341, %1346
  %1348 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1347)
  %1349 = icmp eq i64 %1312, %1316
  br i1 %1349, label %1362, label %1350

1350:                                             ; preds = %1303, %1344
  %1351 = phi i64 [ %1306, %1303 ], [ %1317, %1344 ]
  %1352 = phi i32 [ 1, %1303 ], [ %1348, %1344 ]
  br label %1353

1353:                                             ; preds = %1350, %1353
  %1354 = phi i64 [ %1359, %1353 ], [ %1351, %1350 ]
  %1355 = phi i32 [ %1358, %1353 ], [ %1352, %1350 ]
  %1356 = getelementptr inbounds i32, ptr %9, i64 %1354
  %1357 = load i32, ptr %1356, align 4, !tbaa !6
  %1358 = mul nsw i32 %1357, %1355
  %1359 = add nsw i64 %1354, -1
  %1360 = trunc i64 %1354 to i32
  %1361 = icmp sgt i32 %1360, 0
  br i1 %1361, label %1353, label %1362, !llvm.loop !426

1362:                                             ; preds = %1353, %1344
  %1363 = phi i32 [ %1348, %1344 ], [ %1358, %1353 ]
  %1364 = and i64 %1313, 4294967295
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1364
  %1366 = load i32, ptr %1365, align 4, !tbaa !6
  %1367 = mul nsw i32 %1366, %1363
  %1368 = add nsw i32 %1367, %1307
  %1369 = icmp sgt i64 %1305, 2
  %1370 = add nsw i64 %1306, -1
  %1371 = add i32 %1304, 1
  br i1 %1369, label %1303, label %1372, !llvm.loop !427

1372:                                             ; preds = %1362, %1298
  %1373 = phi i32 [ %1302, %1298 ], [ %1368, %1362 ]
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds double, ptr %2, i64 %1374
  %1376 = load double, ptr %1375, align 8, !tbaa !19
  %1377 = getelementptr inbounds i8, ptr %1262, i64 %1374
  %1378 = load i8, ptr %1377, align 1, !tbaa !12
  %1379 = sitofp i8 %1378 to double
  %1380 = fmul fast double %1376, %1379
  %1381 = fcmp fast olt double %1380, 0.000000e+00
  %1382 = fneg fast double %1380
  %1383 = select nnan ninf i1 %1381, double %1382, double %1380
  %1384 = fmul fast double %1380, %1380
  %1385 = fmul fast double %1384, %1383
  %1386 = fadd fast double %1385, %1299
  store double %1386, ptr %1264, align 8, !tbaa !19
  %1387 = fadd fast double %1376, %1301
  %1388 = add nuw nsw i32 %1300, 1
  br i1 %1292, label %1389, label %1436

1389:                                             ; preds = %1372
  %1390 = load i32, ptr %4, align 4, !tbaa !6
  %1391 = load i32, ptr %12, align 4, !tbaa !6
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1390, %1392
  br i1 %1393, label %1413, label %1394

1394:                                             ; preds = %1389
  %1395 = icmp eq i32 %1390, %1392
  br i1 %1395, label %1396, label %1429

1396:                                             ; preds = %1394
  store i32 0, ptr %4, align 4, !tbaa !6
  %1397 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1397, ptr %6, align 4, !tbaa !6
  br i1 %1297, label %1436, label %1398

1398:                                             ; preds = %1396, %1423
  %1399 = phi i64 [ %1427, %1423 ], [ 1, %1396 ]
  %1400 = getelementptr inbounds i32, ptr %4, i64 %1399
  %1401 = load i32, ptr %1400, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %12, i64 %1399
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1401, %1404
  br i1 %1405, label %1406, label %1421

1406:                                             ; preds = %1398
  br i1 %1393, label %1413, label %1407

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1399
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1399
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = add nsw i32 %1411, %1409
  store i32 %1412, ptr %1410, align 4, !tbaa !6
  br label %1431

1413:                                             ; preds = %1389, %1406
  %1414 = phi i32 [ %1401, %1406 ], [ %1390, %1389 ]
  %1415 = phi ptr [ %1400, %1406 ], [ %4, %1389 ]
  %1416 = phi i64 [ %1399, %1406 ], [ 0, %1389 ]
  %1417 = add nsw i32 %1414, 1
  store i32 %1417, ptr %1415, align 4, !tbaa !6
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1416
  %1419 = load i32, ptr %1418, align 4, !tbaa !6
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1416
  br label %1431

1421:                                             ; preds = %1398
  %1422 = icmp eq i32 %1401, %1404
  br i1 %1422, label %1423, label %1429

1423:                                             ; preds = %1421
  store i32 0, ptr %1400, align 4, !tbaa !6
  %1424 = getelementptr inbounds i32, ptr %8, i64 %1399
  %1425 = load i32, ptr %1424, align 4, !tbaa !6
  %1426 = getelementptr inbounds i32, ptr %6, i64 %1399
  store i32 %1425, ptr %1426, align 4, !tbaa !6
  %1427 = add nuw nsw i64 %1399, 1
  %1428 = icmp eq i64 %1427, %1295
  br i1 %1428, label %1436, label %1398, !llvm.loop !428

1429:                                             ; preds = %1394, %1421
  %1430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1431:                                             ; preds = %1407, %1413
  %1432 = phi ptr [ %1420, %1413 ], [ %1400, %1407 ]
  %1433 = phi i32 [ %1419, %1413 ], [ 1, %1407 ]
  %1434 = load i32, ptr %1432, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, %1433
  store i32 %1435, ptr %1432, align 4, !tbaa !6
  br label %1436

1436:                                             ; preds = %1423, %1431, %1396, %1372
  %1437 = icmp eq i32 %1388, %5
  br i1 %1437, label %3136, label %1298, !llvm.loop !429

1438:                                             ; preds = %1281, %1578
  %1439 = phi double [ 0.000000e+00, %1281 ], [ %1526, %1578 ]
  %1440 = phi i32 [ 0, %1281 ], [ %1527, %1578 ]
  %1441 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1282, label %1442, label %1511

1442:                                             ; preds = %1438, %1501
  %1443 = phi i32 [ %1510, %1501 ], [ 0, %1438 ]
  %1444 = phi i64 [ %1452, %1501 ], [ %1286, %1438 ]
  %1445 = phi i64 [ %1509, %1501 ], [ %1285, %1438 ]
  %1446 = phi i32 [ %1507, %1501 ], [ %1441, %1438 ]
  %1447 = sub i32 %1284, %1443
  %1448 = tail call i32 @llvm.smin.i32(i32 %1447, i32 0)
  %1449 = sub i32 %1447, %1448
  %1450 = zext i32 %1449 to i64
  %1451 = add nuw nsw i64 %1450, 1
  %1452 = add nsw i64 %1444, -1
  %1453 = icmp ult i32 %1449, 31
  br i1 %1453, label %1489, label %1454

1454:                                             ; preds = %1442
  %1455 = and i64 %1451, 8589934560
  %1456 = sub i64 %1445, %1455
  br label %1457

1457:                                             ; preds = %1457, %1454
  %1458 = phi i64 [ 0, %1454 ], [ %1481, %1457 ]
  %1459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1477, %1457 ]
  %1460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1478, %1457 ]
  %1461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1479, %1457 ]
  %1462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1480, %1457 ]
  %1463 = sub i64 %1445, %1458
  %1464 = getelementptr inbounds i32, ptr %11, i64 %1463
  %1465 = getelementptr inbounds i32, ptr %1464, i64 -7
  %1466 = load <8 x i32>, ptr %1465, align 4, !tbaa !6
  %1467 = shufflevector <8 x i32> %1466, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1468 = getelementptr inbounds i32, ptr %1464, i64 -15
  %1469 = load <8 x i32>, ptr %1468, align 4, !tbaa !6
  %1470 = shufflevector <8 x i32> %1469, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1471 = getelementptr inbounds i32, ptr %1464, i64 -23
  %1472 = load <8 x i32>, ptr %1471, align 4, !tbaa !6
  %1473 = shufflevector <8 x i32> %1472, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1474 = getelementptr inbounds i32, ptr %1464, i64 -31
  %1475 = load <8 x i32>, ptr %1474, align 4, !tbaa !6
  %1476 = shufflevector <8 x i32> %1475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1477 = mul <8 x i32> %1467, %1459
  %1478 = mul <8 x i32> %1470, %1460
  %1479 = mul <8 x i32> %1473, %1461
  %1480 = mul <8 x i32> %1476, %1462
  %1481 = add nuw i64 %1458, 32
  %1482 = icmp eq i64 %1481, %1455
  br i1 %1482, label %1483, label %1457, !llvm.loop !430

1483:                                             ; preds = %1457
  %1484 = mul <8 x i32> %1478, %1477
  %1485 = mul <8 x i32> %1479, %1484
  %1486 = mul <8 x i32> %1480, %1485
  %1487 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1486)
  %1488 = icmp eq i64 %1451, %1455
  br i1 %1488, label %1501, label %1489

1489:                                             ; preds = %1442, %1483
  %1490 = phi i64 [ %1445, %1442 ], [ %1456, %1483 ]
  %1491 = phi i32 [ 1, %1442 ], [ %1487, %1483 ]
  br label %1492

1492:                                             ; preds = %1489, %1492
  %1493 = phi i64 [ %1498, %1492 ], [ %1490, %1489 ]
  %1494 = phi i32 [ %1497, %1492 ], [ %1491, %1489 ]
  %1495 = getelementptr inbounds i32, ptr %11, i64 %1493
  %1496 = load i32, ptr %1495, align 4, !tbaa !6
  %1497 = mul nsw i32 %1496, %1494
  %1498 = add nsw i64 %1493, -1
  %1499 = trunc i64 %1493 to i32
  %1500 = icmp sgt i32 %1499, 0
  br i1 %1500, label %1492, label %1501, !llvm.loop !431

1501:                                             ; preds = %1492, %1483
  %1502 = phi i32 [ %1487, %1483 ], [ %1497, %1492 ]
  %1503 = and i64 %1452, 4294967295
  %1504 = getelementptr inbounds i32, ptr %6, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !6
  %1506 = mul nsw i32 %1505, %1502
  %1507 = add nsw i32 %1506, %1446
  %1508 = icmp sgt i64 %1444, 2
  %1509 = add nsw i64 %1445, -1
  %1510 = add i32 %1443, 1
  br i1 %1508, label %1442, label %1511, !llvm.loop !432

1511:                                             ; preds = %1501, %1438
  %1512 = phi i32 [ %1441, %1438 ], [ %1507, %1501 ]
  %1513 = icmp slt i32 %1512, %5
  br i1 %1513, label %1516, label %1514

1514:                                             ; preds = %1511
  %1515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

1516:                                             ; preds = %1511
  %1517 = sext i32 %1512 to i64
  %1518 = getelementptr inbounds i8, ptr %1262, i64 %1517
  %1519 = load i8, ptr %1518, align 1, !tbaa !12
  %1520 = sitofp i8 %1519 to double
  %1521 = icmp slt i8 %1519, 0
  %1522 = fneg fast double %1520
  %1523 = select i1 %1521, double %1522, double %1520
  %1524 = fmul fast double %1520, %1520
  %1525 = fmul fast double %1524, %1523
  %1526 = fadd fast double %1525, %1439
  store double %1526, ptr %1264, align 8, !tbaa !19
  %1527 = add nuw nsw i32 %1440, 1
  br i1 %1283, label %1528, label %1578

1528:                                             ; preds = %1516
  %1529 = load i32, ptr %4, align 4, !tbaa !6
  %1530 = load i32, ptr %12, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, -1
  %1532 = icmp slt i32 %1529, %1531
  br i1 %1532, label %1555, label %1533

1533:                                             ; preds = %1528
  %1534 = icmp eq i32 %1529, %1531
  br i1 %1534, label %1535, label %1571

1535:                                             ; preds = %1533
  store i32 0, ptr %4, align 4, !tbaa !6
  %1536 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1536, ptr %6, align 4, !tbaa !6
  br i1 %1288, label %1578, label %1537

1537:                                             ; preds = %1535, %1565
  %1538 = phi i64 [ %1569, %1565 ], [ 1, %1535 ]
  %1539 = getelementptr inbounds i32, ptr %4, i64 %1538
  %1540 = load i32, ptr %1539, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %12, i64 %1538
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = add nsw i32 %1542, -1
  %1544 = icmp slt i32 %1540, %1543
  br i1 %1544, label %1545, label %1563

1545:                                             ; preds = %1537
  br i1 %1532, label %1555, label %1546

1546:                                             ; preds = %1545
  %1547 = shl i64 %1538, 32
  %1548 = add i64 %1547, -4294967296
  %1549 = ashr exact i64 %1548, 32
  %1550 = getelementptr inbounds i32, ptr %7, i64 %1549
  %1551 = load i32, ptr %1550, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %6, i64 %1538
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = add nsw i32 %1553, %1551
  store i32 %1554, ptr %1552, align 4, !tbaa !6
  br label %1573

1555:                                             ; preds = %1528, %1545
  %1556 = phi i32 [ %1540, %1545 ], [ %1529, %1528 ]
  %1557 = phi ptr [ %1539, %1545 ], [ %4, %1528 ]
  %1558 = phi i64 [ %1538, %1545 ], [ 0, %1528 ]
  %1559 = add nsw i32 %1556, 1
  store i32 %1559, ptr %1557, align 4, !tbaa !6
  %1560 = getelementptr inbounds i32, ptr %7, i64 %1558
  %1561 = load i32, ptr %1560, align 4, !tbaa !6
  %1562 = getelementptr inbounds i32, ptr %6, i64 %1558
  br label %1573

1563:                                             ; preds = %1537
  %1564 = icmp eq i32 %1540, %1543
  br i1 %1564, label %1565, label %1571

1565:                                             ; preds = %1563
  store i32 0, ptr %1539, align 4, !tbaa !6
  %1566 = getelementptr inbounds i32, ptr %8, i64 %1538
  %1567 = load i32, ptr %1566, align 4, !tbaa !6
  %1568 = getelementptr inbounds i32, ptr %6, i64 %1538
  store i32 %1567, ptr %1568, align 4, !tbaa !6
  %1569 = add nuw nsw i64 %1538, 1
  %1570 = icmp eq i64 %1569, %1286
  br i1 %1570, label %1578, label %1537, !llvm.loop !433

1571:                                             ; preds = %1533, %1563
  %1572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1573:                                             ; preds = %1546, %1555
  %1574 = phi ptr [ %1562, %1555 ], [ %1539, %1546 ]
  %1575 = phi i32 [ %1561, %1555 ], [ 1, %1546 ]
  %1576 = load i32, ptr %1574, align 4, !tbaa !6
  %1577 = add nsw i32 %1576, %1575
  store i32 %1577, ptr %1574, align 4, !tbaa !6
  br label %1578

1578:                                             ; preds = %1565, %1573, %1535, %1516
  %1579 = icmp eq i32 %1527, %5
  br i1 %1579, label %3136, label %1438, !llvm.loop !434

1580:                                             ; preds = %1274
  %1581 = getelementptr inbounds i32, ptr %3, i64 %19
  %1582 = load i32, ptr %1581, align 4, !tbaa !6
  %1583 = icmp eq i32 %1582, 0
  %1584 = icmp sgt i32 %5, 0
  br i1 %1583, label %1594, label %1585

1585:                                             ; preds = %1580
  br i1 %1584, label %1586, label %3136

1586:                                             ; preds = %1585
  %1587 = icmp sgt i32 %13, 1
  %1588 = icmp sgt i32 %13, 0
  %1589 = add i32 %13, -2
  %1590 = zext i32 %1589 to i64
  %1591 = zext i32 %13 to i64
  %1592 = add nuw i32 %5, 1
  %1593 = icmp eq i32 %13, 1
  br label %1740

1594:                                             ; preds = %1580
  br i1 %1584, label %1595, label %3136

1595:                                             ; preds = %1594
  %1596 = icmp sgt i32 %13, 1
  %1597 = icmp sgt i32 %13, 0
  %1598 = add i32 %13, -2
  %1599 = zext i32 %1598 to i64
  %1600 = zext i32 %13 to i64
  %1601 = add nuw i32 %5, 1
  %1602 = icmp eq i32 %13, 1
  br label %1603

1603:                                             ; preds = %1595, %1738
  %1604 = phi double [ 0.000000e+00, %1595 ], [ %1688, %1738 ]
  %1605 = phi i32 [ 0, %1595 ], [ %1690, %1738 ]
  %1606 = phi double [ 0.000000e+00, %1595 ], [ %1689, %1738 ]
  %1607 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1596, label %1608, label %1677

1608:                                             ; preds = %1603, %1667
  %1609 = phi i32 [ %1676, %1667 ], [ 0, %1603 ]
  %1610 = phi i64 [ %1618, %1667 ], [ %1600, %1603 ]
  %1611 = phi i64 [ %1675, %1667 ], [ %1599, %1603 ]
  %1612 = phi i32 [ %1673, %1667 ], [ %1607, %1603 ]
  %1613 = sub i32 %1598, %1609
  %1614 = tail call i32 @llvm.smin.i32(i32 %1613, i32 0)
  %1615 = sub i32 %1613, %1614
  %1616 = zext i32 %1615 to i64
  %1617 = add nuw nsw i64 %1616, 1
  %1618 = add nsw i64 %1610, -1
  %1619 = icmp ult i32 %1615, 31
  br i1 %1619, label %1655, label %1620

1620:                                             ; preds = %1608
  %1621 = and i64 %1617, 8589934560
  %1622 = sub i64 %1611, %1621
  br label %1623

1623:                                             ; preds = %1623, %1620
  %1624 = phi i64 [ 0, %1620 ], [ %1647, %1623 ]
  %1625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1620 ], [ %1643, %1623 ]
  %1626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1620 ], [ %1644, %1623 ]
  %1627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1620 ], [ %1645, %1623 ]
  %1628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1620 ], [ %1646, %1623 ]
  %1629 = sub i64 %1611, %1624
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1629
  %1631 = getelementptr inbounds i32, ptr %1630, i64 -7
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !6
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = getelementptr inbounds i32, ptr %1630, i64 -15
  %1635 = load <8 x i32>, ptr %1634, align 4, !tbaa !6
  %1636 = shufflevector <8 x i32> %1635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1637 = getelementptr inbounds i32, ptr %1630, i64 -23
  %1638 = load <8 x i32>, ptr %1637, align 4, !tbaa !6
  %1639 = shufflevector <8 x i32> %1638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1640 = getelementptr inbounds i32, ptr %1630, i64 -31
  %1641 = load <8 x i32>, ptr %1640, align 4, !tbaa !6
  %1642 = shufflevector <8 x i32> %1641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1643 = mul <8 x i32> %1633, %1625
  %1644 = mul <8 x i32> %1636, %1626
  %1645 = mul <8 x i32> %1639, %1627
  %1646 = mul <8 x i32> %1642, %1628
  %1647 = add nuw i64 %1624, 32
  %1648 = icmp eq i64 %1647, %1621
  br i1 %1648, label %1649, label %1623, !llvm.loop !435

1649:                                             ; preds = %1623
  %1650 = mul <8 x i32> %1644, %1643
  %1651 = mul <8 x i32> %1645, %1650
  %1652 = mul <8 x i32> %1646, %1651
  %1653 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1652)
  %1654 = icmp eq i64 %1617, %1621
  br i1 %1654, label %1667, label %1655

1655:                                             ; preds = %1608, %1649
  %1656 = phi i64 [ %1611, %1608 ], [ %1622, %1649 ]
  %1657 = phi i32 [ 1, %1608 ], [ %1653, %1649 ]
  br label %1658

1658:                                             ; preds = %1655, %1658
  %1659 = phi i64 [ %1664, %1658 ], [ %1656, %1655 ]
  %1660 = phi i32 [ %1663, %1658 ], [ %1657, %1655 ]
  %1661 = getelementptr inbounds i32, ptr %9, i64 %1659
  %1662 = load i32, ptr %1661, align 4, !tbaa !6
  %1663 = mul nsw i32 %1662, %1660
  %1664 = add nsw i64 %1659, -1
  %1665 = trunc i64 %1659 to i32
  %1666 = icmp sgt i32 %1665, 0
  br i1 %1666, label %1658, label %1667, !llvm.loop !436

1667:                                             ; preds = %1658, %1649
  %1668 = phi i32 [ %1653, %1649 ], [ %1663, %1658 ]
  %1669 = and i64 %1618, 4294967295
  %1670 = getelementptr inbounds i32, ptr %6, i64 %1669
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = mul nsw i32 %1671, %1668
  %1673 = add nsw i32 %1672, %1612
  %1674 = icmp sgt i64 %1610, 2
  %1675 = add nsw i64 %1611, -1
  %1676 = add i32 %1609, 1
  br i1 %1674, label %1608, label %1677, !llvm.loop !437

1677:                                             ; preds = %1667, %1603
  %1678 = phi i32 [ %1607, %1603 ], [ %1673, %1667 ]
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds i8, ptr %1262, i64 %1679
  %1681 = load i8, ptr %1680, align 1, !tbaa !12
  %1682 = sitofp i8 %1681 to double
  %1683 = icmp slt i8 %1681, 0
  %1684 = fneg fast double %1682
  %1685 = select i1 %1683, double %1684, double %1682
  %1686 = fmul fast double %1682, %1682
  %1687 = fmul fast double %1686, %1685
  %1688 = fadd fast double %1687, %1604
  store double %1688, ptr %1264, align 8, !tbaa !19
  %1689 = fadd fast double %1606, 1.000000e+00
  %1690 = add nuw nsw i32 %1605, 1
  br i1 %1597, label %1691, label %1738

1691:                                             ; preds = %1677
  %1692 = load i32, ptr %4, align 4, !tbaa !6
  %1693 = load i32, ptr %12, align 4, !tbaa !6
  %1694 = add nsw i32 %1693, -1
  %1695 = icmp slt i32 %1692, %1694
  br i1 %1695, label %1715, label %1696

1696:                                             ; preds = %1691
  %1697 = icmp eq i32 %1692, %1694
  br i1 %1697, label %1698, label %1731

1698:                                             ; preds = %1696
  store i32 0, ptr %4, align 4, !tbaa !6
  %1699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1699, ptr %6, align 4, !tbaa !6
  br i1 %1602, label %1738, label %1700

1700:                                             ; preds = %1698, %1725
  %1701 = phi i64 [ %1729, %1725 ], [ 1, %1698 ]
  %1702 = getelementptr inbounds i32, ptr %4, i64 %1701
  %1703 = load i32, ptr %1702, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %12, i64 %1701
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = add nsw i32 %1705, -1
  %1707 = icmp slt i32 %1703, %1706
  br i1 %1707, label %1708, label %1723

1708:                                             ; preds = %1700
  br i1 %1695, label %1715, label %1709

1709:                                             ; preds = %1708
  %1710 = getelementptr inbounds i32, ptr %7, i64 %1701
  %1711 = load i32, ptr %1710, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %6, i64 %1701
  %1713 = load i32, ptr %1712, align 4, !tbaa !6
  %1714 = add nsw i32 %1713, %1711
  store i32 %1714, ptr %1712, align 4, !tbaa !6
  br label %1733

1715:                                             ; preds = %1691, %1708
  %1716 = phi i32 [ %1703, %1708 ], [ %1692, %1691 ]
  %1717 = phi ptr [ %1702, %1708 ], [ %4, %1691 ]
  %1718 = phi i64 [ %1701, %1708 ], [ 0, %1691 ]
  %1719 = add nsw i32 %1716, 1
  store i32 %1719, ptr %1717, align 4, !tbaa !6
  %1720 = getelementptr inbounds i32, ptr %7, i64 %1718
  %1721 = load i32, ptr %1720, align 4, !tbaa !6
  %1722 = getelementptr inbounds i32, ptr %6, i64 %1718
  br label %1733

1723:                                             ; preds = %1700
  %1724 = icmp eq i32 %1703, %1706
  br i1 %1724, label %1725, label %1731

1725:                                             ; preds = %1723
  store i32 0, ptr %1702, align 4, !tbaa !6
  %1726 = getelementptr inbounds i32, ptr %8, i64 %1701
  %1727 = load i32, ptr %1726, align 4, !tbaa !6
  %1728 = getelementptr inbounds i32, ptr %6, i64 %1701
  store i32 %1727, ptr %1728, align 4, !tbaa !6
  %1729 = add nuw nsw i64 %1701, 1
  %1730 = icmp eq i64 %1729, %1600
  br i1 %1730, label %1738, label %1700, !llvm.loop !438

1731:                                             ; preds = %1696, %1723
  %1732 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1733:                                             ; preds = %1709, %1715
  %1734 = phi ptr [ %1722, %1715 ], [ %1702, %1709 ]
  %1735 = phi i32 [ %1721, %1715 ], [ 1, %1709 ]
  %1736 = load i32, ptr %1734, align 4, !tbaa !6
  %1737 = add nsw i32 %1736, %1735
  store i32 %1737, ptr %1734, align 4, !tbaa !6
  br label %1738

1738:                                             ; preds = %1725, %1733, %1698, %1677
  %1739 = icmp eq i32 %1690, %5
  br i1 %1739, label %3136, label %1603, !llvm.loop !439

1740:                                             ; preds = %1586, %1880
  %1741 = phi double [ 0.000000e+00, %1586 ], [ %1828, %1880 ]
  %1742 = phi i32 [ 0, %1586 ], [ %1829, %1880 ]
  %1743 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1587, label %1744, label %1813

1744:                                             ; preds = %1740, %1803
  %1745 = phi i32 [ %1812, %1803 ], [ 0, %1740 ]
  %1746 = phi i64 [ %1754, %1803 ], [ %1591, %1740 ]
  %1747 = phi i64 [ %1811, %1803 ], [ %1590, %1740 ]
  %1748 = phi i32 [ %1809, %1803 ], [ %1743, %1740 ]
  %1749 = sub i32 %1589, %1745
  %1750 = tail call i32 @llvm.smin.i32(i32 %1749, i32 0)
  %1751 = sub i32 %1749, %1750
  %1752 = zext i32 %1751 to i64
  %1753 = add nuw nsw i64 %1752, 1
  %1754 = add nsw i64 %1746, -1
  %1755 = icmp ult i32 %1751, 31
  br i1 %1755, label %1791, label %1756

1756:                                             ; preds = %1744
  %1757 = and i64 %1753, 8589934560
  %1758 = sub i64 %1747, %1757
  br label %1759

1759:                                             ; preds = %1759, %1756
  %1760 = phi i64 [ 0, %1756 ], [ %1783, %1759 ]
  %1761 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1756 ], [ %1779, %1759 ]
  %1762 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1756 ], [ %1780, %1759 ]
  %1763 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1756 ], [ %1781, %1759 ]
  %1764 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1756 ], [ %1782, %1759 ]
  %1765 = sub i64 %1747, %1760
  %1766 = getelementptr inbounds i32, ptr %11, i64 %1765
  %1767 = getelementptr inbounds i32, ptr %1766, i64 -7
  %1768 = load <8 x i32>, ptr %1767, align 4, !tbaa !6
  %1769 = shufflevector <8 x i32> %1768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1770 = getelementptr inbounds i32, ptr %1766, i64 -15
  %1771 = load <8 x i32>, ptr %1770, align 4, !tbaa !6
  %1772 = shufflevector <8 x i32> %1771, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1773 = getelementptr inbounds i32, ptr %1766, i64 -23
  %1774 = load <8 x i32>, ptr %1773, align 4, !tbaa !6
  %1775 = shufflevector <8 x i32> %1774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1776 = getelementptr inbounds i32, ptr %1766, i64 -31
  %1777 = load <8 x i32>, ptr %1776, align 4, !tbaa !6
  %1778 = shufflevector <8 x i32> %1777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1779 = mul <8 x i32> %1769, %1761
  %1780 = mul <8 x i32> %1772, %1762
  %1781 = mul <8 x i32> %1775, %1763
  %1782 = mul <8 x i32> %1778, %1764
  %1783 = add nuw i64 %1760, 32
  %1784 = icmp eq i64 %1783, %1757
  br i1 %1784, label %1785, label %1759, !llvm.loop !440

1785:                                             ; preds = %1759
  %1786 = mul <8 x i32> %1780, %1779
  %1787 = mul <8 x i32> %1781, %1786
  %1788 = mul <8 x i32> %1782, %1787
  %1789 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1788)
  %1790 = icmp eq i64 %1753, %1757
  br i1 %1790, label %1803, label %1791

1791:                                             ; preds = %1744, %1785
  %1792 = phi i64 [ %1747, %1744 ], [ %1758, %1785 ]
  %1793 = phi i32 [ 1, %1744 ], [ %1789, %1785 ]
  br label %1794

1794:                                             ; preds = %1791, %1794
  %1795 = phi i64 [ %1800, %1794 ], [ %1792, %1791 ]
  %1796 = phi i32 [ %1799, %1794 ], [ %1793, %1791 ]
  %1797 = getelementptr inbounds i32, ptr %11, i64 %1795
  %1798 = load i32, ptr %1797, align 4, !tbaa !6
  %1799 = mul nsw i32 %1798, %1796
  %1800 = add nsw i64 %1795, -1
  %1801 = trunc i64 %1795 to i32
  %1802 = icmp sgt i32 %1801, 0
  br i1 %1802, label %1794, label %1803, !llvm.loop !441

1803:                                             ; preds = %1794, %1785
  %1804 = phi i32 [ %1789, %1785 ], [ %1799, %1794 ]
  %1805 = and i64 %1754, 4294967295
  %1806 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !6
  %1808 = mul nsw i32 %1807, %1804
  %1809 = add nsw i32 %1808, %1748
  %1810 = icmp sgt i64 %1746, 2
  %1811 = add nsw i64 %1747, -1
  %1812 = add i32 %1745, 1
  br i1 %1810, label %1744, label %1813, !llvm.loop !442

1813:                                             ; preds = %1803, %1740
  %1814 = phi i32 [ %1743, %1740 ], [ %1809, %1803 ]
  %1815 = icmp slt i32 %1814, %5
  br i1 %1815, label %1818, label %1816

1816:                                             ; preds = %1813
  %1817 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

1818:                                             ; preds = %1813
  %1819 = sext i32 %1814 to i64
  %1820 = getelementptr inbounds i8, ptr %1262, i64 %1819
  %1821 = load i8, ptr %1820, align 1, !tbaa !12
  %1822 = sitofp i8 %1821 to double
  %1823 = icmp slt i8 %1821, 0
  %1824 = fneg fast double %1822
  %1825 = select i1 %1823, double %1824, double %1822
  %1826 = fmul fast double %1822, %1822
  %1827 = fmul fast double %1826, %1825
  %1828 = fadd fast double %1827, %1741
  store double %1828, ptr %1264, align 8, !tbaa !19
  %1829 = add nuw nsw i32 %1742, 1
  br i1 %1588, label %1830, label %1880

1830:                                             ; preds = %1818
  %1831 = load i32, ptr %4, align 4, !tbaa !6
  %1832 = load i32, ptr %12, align 4, !tbaa !6
  %1833 = add nsw i32 %1832, -1
  %1834 = icmp slt i32 %1831, %1833
  br i1 %1834, label %1857, label %1835

1835:                                             ; preds = %1830
  %1836 = icmp eq i32 %1831, %1833
  br i1 %1836, label %1837, label %1873

1837:                                             ; preds = %1835
  store i32 0, ptr %4, align 4, !tbaa !6
  %1838 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1838, ptr %6, align 4, !tbaa !6
  br i1 %1593, label %1880, label %1839

1839:                                             ; preds = %1837, %1867
  %1840 = phi i64 [ %1871, %1867 ], [ 1, %1837 ]
  %1841 = getelementptr inbounds i32, ptr %4, i64 %1840
  %1842 = load i32, ptr %1841, align 4, !tbaa !6
  %1843 = getelementptr inbounds i32, ptr %12, i64 %1840
  %1844 = load i32, ptr %1843, align 4, !tbaa !6
  %1845 = add nsw i32 %1844, -1
  %1846 = icmp slt i32 %1842, %1845
  br i1 %1846, label %1847, label %1865

1847:                                             ; preds = %1839
  br i1 %1834, label %1857, label %1848

1848:                                             ; preds = %1847
  %1849 = shl i64 %1840, 32
  %1850 = add i64 %1849, -4294967296
  %1851 = ashr exact i64 %1850, 32
  %1852 = getelementptr inbounds i32, ptr %7, i64 %1851
  %1853 = load i32, ptr %1852, align 4, !tbaa !6
  %1854 = getelementptr inbounds i32, ptr %6, i64 %1840
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = add nsw i32 %1855, %1853
  store i32 %1856, ptr %1854, align 4, !tbaa !6
  br label %1875

1857:                                             ; preds = %1830, %1847
  %1858 = phi i32 [ %1842, %1847 ], [ %1831, %1830 ]
  %1859 = phi ptr [ %1841, %1847 ], [ %4, %1830 ]
  %1860 = phi i64 [ %1840, %1847 ], [ 0, %1830 ]
  %1861 = add nsw i32 %1858, 1
  store i32 %1861, ptr %1859, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %7, i64 %1860
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = getelementptr inbounds i32, ptr %6, i64 %1860
  br label %1875

1865:                                             ; preds = %1839
  %1866 = icmp eq i32 %1842, %1845
  br i1 %1866, label %1867, label %1873

1867:                                             ; preds = %1865
  store i32 0, ptr %1841, align 4, !tbaa !6
  %1868 = getelementptr inbounds i32, ptr %8, i64 %1840
  %1869 = load i32, ptr %1868, align 4, !tbaa !6
  %1870 = getelementptr inbounds i32, ptr %6, i64 %1840
  store i32 %1869, ptr %1870, align 4, !tbaa !6
  %1871 = add nuw nsw i64 %1840, 1
  %1872 = icmp eq i64 %1871, %1591
  br i1 %1872, label %1880, label %1839, !llvm.loop !443

1873:                                             ; preds = %1835, %1865
  %1874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

1875:                                             ; preds = %1848, %1857
  %1876 = phi ptr [ %1864, %1857 ], [ %1841, %1848 ]
  %1877 = phi i32 [ %1863, %1857 ], [ 1, %1848 ]
  %1878 = load i32, ptr %1876, align 4, !tbaa !6
  %1879 = add nsw i32 %1878, %1877
  store i32 %1879, ptr %1876, align 4, !tbaa !6
  br label %1880

1880:                                             ; preds = %1867, %1875, %1837, %1818
  %1881 = icmp eq i32 %1829, %5
  br i1 %1881, label %3136, label %1740, !llvm.loop !444

1882:                                             ; preds = %1274
  %1883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 638, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3136

1884:                                             ; preds = %18
  %1885 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1886 = load ptr, ptr %1885, align 8, !tbaa !10
  %1887 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1888 = load ptr, ptr %1887, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1888, align 4, !tbaa !163
  %1889 = icmp eq i32 %13, 0
  br i1 %1889, label %1890, label %1898

1890:                                             ; preds = %1884
  %1891 = load i8, ptr %1886, align 1, !tbaa !12
  %1892 = sitofp i8 %1891 to float
  %1893 = icmp slt i8 %1891, 0
  %1894 = fneg fast float %1892
  %1895 = select i1 %1893, float %1894, float %1892
  %1896 = fmul fast float %1892, %1892
  %1897 = fmul fast float %1896, %1895
  store float %1897, ptr %1888, align 4, !tbaa !163
  br label %3136

1898:                                             ; preds = %1884
  switch i32 %1, label %2510 [
    i32 1, label %1899
    i32 0, label %2208
  ]

1899:                                             ; preds = %1898
  %1900 = getelementptr inbounds i32, ptr %3, i64 %19
  %1901 = load i32, ptr %1900, align 4, !tbaa !6
  %1902 = icmp eq i32 %1901, 0
  %1903 = icmp sgt i32 %5, 0
  br i1 %1902, label %1913, label %1904

1904:                                             ; preds = %1899
  br i1 %1903, label %1905, label %3136

1905:                                             ; preds = %1904
  %1906 = icmp sgt i32 %13, 1
  %1907 = icmp sgt i32 %13, 0
  %1908 = add i32 %13, -2
  %1909 = zext i32 %1908 to i64
  %1910 = zext i32 %13 to i64
  %1911 = add nuw i32 %5, 1
  %1912 = icmp eq i32 %13, 1
  br label %2064

1913:                                             ; preds = %1899
  br i1 %1903, label %1914, label %3136

1914:                                             ; preds = %1913
  %1915 = icmp sgt i32 %13, 1
  %1916 = icmp sgt i32 %13, 0
  %1917 = add i32 %13, -2
  %1918 = zext i32 %1917 to i64
  %1919 = zext i32 %13 to i64
  %1920 = add nuw i32 %5, 1
  %1921 = icmp eq i32 %13, 1
  br label %1922

1922:                                             ; preds = %1914, %2062
  %1923 = phi float [ 0.000000e+00, %1914 ], [ %2012, %2062 ]
  %1924 = phi i32 [ 0, %1914 ], [ %2014, %2062 ]
  %1925 = phi double [ 0.000000e+00, %1914 ], [ %2013, %2062 ]
  %1926 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1915, label %1927, label %1996

1927:                                             ; preds = %1922, %1986
  %1928 = phi i32 [ %1995, %1986 ], [ 0, %1922 ]
  %1929 = phi i64 [ %1937, %1986 ], [ %1919, %1922 ]
  %1930 = phi i64 [ %1994, %1986 ], [ %1918, %1922 ]
  %1931 = phi i32 [ %1992, %1986 ], [ %1926, %1922 ]
  %1932 = sub i32 %1917, %1928
  %1933 = tail call i32 @llvm.smin.i32(i32 %1932, i32 0)
  %1934 = sub i32 %1932, %1933
  %1935 = zext i32 %1934 to i64
  %1936 = add nuw nsw i64 %1935, 1
  %1937 = add nsw i64 %1929, -1
  %1938 = icmp ult i32 %1934, 31
  br i1 %1938, label %1974, label %1939

1939:                                             ; preds = %1927
  %1940 = and i64 %1936, 8589934560
  %1941 = sub i64 %1930, %1940
  br label %1942

1942:                                             ; preds = %1942, %1939
  %1943 = phi i64 [ 0, %1939 ], [ %1966, %1942 ]
  %1944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1939 ], [ %1962, %1942 ]
  %1945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1939 ], [ %1963, %1942 ]
  %1946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1939 ], [ %1964, %1942 ]
  %1947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1939 ], [ %1965, %1942 ]
  %1948 = sub i64 %1930, %1943
  %1949 = getelementptr inbounds i32, ptr %9, i64 %1948
  %1950 = getelementptr inbounds i32, ptr %1949, i64 -7
  %1951 = load <8 x i32>, ptr %1950, align 4, !tbaa !6
  %1952 = shufflevector <8 x i32> %1951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1953 = getelementptr inbounds i32, ptr %1949, i64 -15
  %1954 = load <8 x i32>, ptr %1953, align 4, !tbaa !6
  %1955 = shufflevector <8 x i32> %1954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1956 = getelementptr inbounds i32, ptr %1949, i64 -23
  %1957 = load <8 x i32>, ptr %1956, align 4, !tbaa !6
  %1958 = shufflevector <8 x i32> %1957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1959 = getelementptr inbounds i32, ptr %1949, i64 -31
  %1960 = load <8 x i32>, ptr %1959, align 4, !tbaa !6
  %1961 = shufflevector <8 x i32> %1960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1962 = mul <8 x i32> %1952, %1944
  %1963 = mul <8 x i32> %1955, %1945
  %1964 = mul <8 x i32> %1958, %1946
  %1965 = mul <8 x i32> %1961, %1947
  %1966 = add nuw i64 %1943, 32
  %1967 = icmp eq i64 %1966, %1940
  br i1 %1967, label %1968, label %1942, !llvm.loop !445

1968:                                             ; preds = %1942
  %1969 = mul <8 x i32> %1963, %1962
  %1970 = mul <8 x i32> %1964, %1969
  %1971 = mul <8 x i32> %1965, %1970
  %1972 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1971)
  %1973 = icmp eq i64 %1936, %1940
  br i1 %1973, label %1986, label %1974

1974:                                             ; preds = %1927, %1968
  %1975 = phi i64 [ %1930, %1927 ], [ %1941, %1968 ]
  %1976 = phi i32 [ 1, %1927 ], [ %1972, %1968 ]
  br label %1977

1977:                                             ; preds = %1974, %1977
  %1978 = phi i64 [ %1983, %1977 ], [ %1975, %1974 ]
  %1979 = phi i32 [ %1982, %1977 ], [ %1976, %1974 ]
  %1980 = getelementptr inbounds i32, ptr %9, i64 %1978
  %1981 = load i32, ptr %1980, align 4, !tbaa !6
  %1982 = mul nsw i32 %1981, %1979
  %1983 = add nsw i64 %1978, -1
  %1984 = trunc i64 %1978 to i32
  %1985 = icmp sgt i32 %1984, 0
  br i1 %1985, label %1977, label %1986, !llvm.loop !446

1986:                                             ; preds = %1977, %1968
  %1987 = phi i32 [ %1972, %1968 ], [ %1982, %1977 ]
  %1988 = and i64 %1937, 4294967295
  %1989 = getelementptr inbounds i32, ptr %6, i64 %1988
  %1990 = load i32, ptr %1989, align 4, !tbaa !6
  %1991 = mul nsw i32 %1990, %1987
  %1992 = add nsw i32 %1991, %1931
  %1993 = icmp sgt i64 %1929, 2
  %1994 = add nsw i64 %1930, -1
  %1995 = add i32 %1928, 1
  br i1 %1993, label %1927, label %1996, !llvm.loop !447

1996:                                             ; preds = %1986, %1922
  %1997 = phi i32 [ %1926, %1922 ], [ %1992, %1986 ]
  %1998 = sext i32 %1997 to i64
  %1999 = getelementptr inbounds double, ptr %2, i64 %1998
  %2000 = load double, ptr %1999, align 8, !tbaa !19
  %2001 = getelementptr inbounds i8, ptr %1886, i64 %1998
  %2002 = load i8, ptr %2001, align 1, !tbaa !12
  %2003 = fpext float %1923 to double
  %2004 = sitofp i8 %2002 to double
  %2005 = fmul fast double %2000, %2004
  %2006 = fcmp fast olt double %2005, 0.000000e+00
  %2007 = fneg fast double %2005
  %2008 = select nnan ninf i1 %2006, double %2007, double %2005
  %2009 = fmul fast double %2005, %2005
  %2010 = fmul fast double %2009, %2008
  %2011 = fadd fast double %2010, %2003
  %2012 = fptrunc double %2011 to float
  store float %2012, ptr %1888, align 4, !tbaa !163
  %2013 = fadd fast double %2000, %1925
  %2014 = add nuw nsw i32 %1924, 1
  br i1 %1916, label %2015, label %2062

2015:                                             ; preds = %1996
  %2016 = load i32, ptr %4, align 4, !tbaa !6
  %2017 = load i32, ptr %12, align 4, !tbaa !6
  %2018 = add nsw i32 %2017, -1
  %2019 = icmp slt i32 %2016, %2018
  br i1 %2019, label %2039, label %2020

2020:                                             ; preds = %2015
  %2021 = icmp eq i32 %2016, %2018
  br i1 %2021, label %2022, label %2055

2022:                                             ; preds = %2020
  store i32 0, ptr %4, align 4, !tbaa !6
  %2023 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2023, ptr %6, align 4, !tbaa !6
  br i1 %1921, label %2062, label %2024

2024:                                             ; preds = %2022, %2049
  %2025 = phi i64 [ %2053, %2049 ], [ 1, %2022 ]
  %2026 = getelementptr inbounds i32, ptr %4, i64 %2025
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %12, i64 %2025
  %2029 = load i32, ptr %2028, align 4, !tbaa !6
  %2030 = add nsw i32 %2029, -1
  %2031 = icmp slt i32 %2027, %2030
  br i1 %2031, label %2032, label %2047

2032:                                             ; preds = %2024
  br i1 %2019, label %2039, label %2033

2033:                                             ; preds = %2032
  %2034 = getelementptr inbounds i32, ptr %7, i64 %2025
  %2035 = load i32, ptr %2034, align 4, !tbaa !6
  %2036 = getelementptr inbounds i32, ptr %6, i64 %2025
  %2037 = load i32, ptr %2036, align 4, !tbaa !6
  %2038 = add nsw i32 %2037, %2035
  store i32 %2038, ptr %2036, align 4, !tbaa !6
  br label %2057

2039:                                             ; preds = %2015, %2032
  %2040 = phi i32 [ %2027, %2032 ], [ %2016, %2015 ]
  %2041 = phi ptr [ %2026, %2032 ], [ %4, %2015 ]
  %2042 = phi i64 [ %2025, %2032 ], [ 0, %2015 ]
  %2043 = add nsw i32 %2040, 1
  store i32 %2043, ptr %2041, align 4, !tbaa !6
  %2044 = getelementptr inbounds i32, ptr %7, i64 %2042
  %2045 = load i32, ptr %2044, align 4, !tbaa !6
  %2046 = getelementptr inbounds i32, ptr %6, i64 %2042
  br label %2057

2047:                                             ; preds = %2024
  %2048 = icmp eq i32 %2027, %2030
  br i1 %2048, label %2049, label %2055

2049:                                             ; preds = %2047
  store i32 0, ptr %2026, align 4, !tbaa !6
  %2050 = getelementptr inbounds i32, ptr %8, i64 %2025
  %2051 = load i32, ptr %2050, align 4, !tbaa !6
  %2052 = getelementptr inbounds i32, ptr %6, i64 %2025
  store i32 %2051, ptr %2052, align 4, !tbaa !6
  %2053 = add nuw nsw i64 %2025, 1
  %2054 = icmp eq i64 %2053, %1919
  br i1 %2054, label %2062, label %2024, !llvm.loop !448

2055:                                             ; preds = %2020, %2047
  %2056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2057:                                             ; preds = %2033, %2039
  %2058 = phi ptr [ %2046, %2039 ], [ %2026, %2033 ]
  %2059 = phi i32 [ %2045, %2039 ], [ 1, %2033 ]
  %2060 = load i32, ptr %2058, align 4, !tbaa !6
  %2061 = add nsw i32 %2060, %2059
  store i32 %2061, ptr %2058, align 4, !tbaa !6
  br label %2062

2062:                                             ; preds = %2049, %2057, %2022, %1996
  %2063 = icmp eq i32 %2014, %5
  br i1 %2063, label %3136, label %1922, !llvm.loop !449

2064:                                             ; preds = %1905, %2206
  %2065 = phi float [ 0.000000e+00, %1905 ], [ %2154, %2206 ]
  %2066 = phi i32 [ 0, %1905 ], [ %2155, %2206 ]
  %2067 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1906, label %2068, label %2137

2068:                                             ; preds = %2064, %2127
  %2069 = phi i32 [ %2136, %2127 ], [ 0, %2064 ]
  %2070 = phi i64 [ %2078, %2127 ], [ %1910, %2064 ]
  %2071 = phi i64 [ %2135, %2127 ], [ %1909, %2064 ]
  %2072 = phi i32 [ %2133, %2127 ], [ %2067, %2064 ]
  %2073 = sub i32 %1908, %2069
  %2074 = tail call i32 @llvm.smin.i32(i32 %2073, i32 0)
  %2075 = sub i32 %2073, %2074
  %2076 = zext i32 %2075 to i64
  %2077 = add nuw nsw i64 %2076, 1
  %2078 = add nsw i64 %2070, -1
  %2079 = icmp ult i32 %2075, 31
  br i1 %2079, label %2115, label %2080

2080:                                             ; preds = %2068
  %2081 = and i64 %2077, 8589934560
  %2082 = sub i64 %2071, %2081
  br label %2083

2083:                                             ; preds = %2083, %2080
  %2084 = phi i64 [ 0, %2080 ], [ %2107, %2083 ]
  %2085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2080 ], [ %2103, %2083 ]
  %2086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2080 ], [ %2104, %2083 ]
  %2087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2080 ], [ %2105, %2083 ]
  %2088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2080 ], [ %2106, %2083 ]
  %2089 = sub i64 %2071, %2084
  %2090 = getelementptr inbounds i32, ptr %11, i64 %2089
  %2091 = getelementptr inbounds i32, ptr %2090, i64 -7
  %2092 = load <8 x i32>, ptr %2091, align 4, !tbaa !6
  %2093 = shufflevector <8 x i32> %2092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2094 = getelementptr inbounds i32, ptr %2090, i64 -15
  %2095 = load <8 x i32>, ptr %2094, align 4, !tbaa !6
  %2096 = shufflevector <8 x i32> %2095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2097 = getelementptr inbounds i32, ptr %2090, i64 -23
  %2098 = load <8 x i32>, ptr %2097, align 4, !tbaa !6
  %2099 = shufflevector <8 x i32> %2098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2100 = getelementptr inbounds i32, ptr %2090, i64 -31
  %2101 = load <8 x i32>, ptr %2100, align 4, !tbaa !6
  %2102 = shufflevector <8 x i32> %2101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2103 = mul <8 x i32> %2093, %2085
  %2104 = mul <8 x i32> %2096, %2086
  %2105 = mul <8 x i32> %2099, %2087
  %2106 = mul <8 x i32> %2102, %2088
  %2107 = add nuw i64 %2084, 32
  %2108 = icmp eq i64 %2107, %2081
  br i1 %2108, label %2109, label %2083, !llvm.loop !450

2109:                                             ; preds = %2083
  %2110 = mul <8 x i32> %2104, %2103
  %2111 = mul <8 x i32> %2105, %2110
  %2112 = mul <8 x i32> %2106, %2111
  %2113 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2112)
  %2114 = icmp eq i64 %2077, %2081
  br i1 %2114, label %2127, label %2115

2115:                                             ; preds = %2068, %2109
  %2116 = phi i64 [ %2071, %2068 ], [ %2082, %2109 ]
  %2117 = phi i32 [ 1, %2068 ], [ %2113, %2109 ]
  br label %2118

2118:                                             ; preds = %2115, %2118
  %2119 = phi i64 [ %2124, %2118 ], [ %2116, %2115 ]
  %2120 = phi i32 [ %2123, %2118 ], [ %2117, %2115 ]
  %2121 = getelementptr inbounds i32, ptr %11, i64 %2119
  %2122 = load i32, ptr %2121, align 4, !tbaa !6
  %2123 = mul nsw i32 %2122, %2120
  %2124 = add nsw i64 %2119, -1
  %2125 = trunc i64 %2119 to i32
  %2126 = icmp sgt i32 %2125, 0
  br i1 %2126, label %2118, label %2127, !llvm.loop !451

2127:                                             ; preds = %2118, %2109
  %2128 = phi i32 [ %2113, %2109 ], [ %2123, %2118 ]
  %2129 = and i64 %2078, 4294967295
  %2130 = getelementptr inbounds i32, ptr %6, i64 %2129
  %2131 = load i32, ptr %2130, align 4, !tbaa !6
  %2132 = mul nsw i32 %2131, %2128
  %2133 = add nsw i32 %2132, %2072
  %2134 = icmp sgt i64 %2070, 2
  %2135 = add nsw i64 %2071, -1
  %2136 = add i32 %2069, 1
  br i1 %2134, label %2068, label %2137, !llvm.loop !452

2137:                                             ; preds = %2127, %2064
  %2138 = phi i32 [ %2067, %2064 ], [ %2133, %2127 ]
  %2139 = icmp slt i32 %2138, %5
  br i1 %2139, label %2142, label %2140

2140:                                             ; preds = %2137
  %2141 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

2142:                                             ; preds = %2137
  %2143 = sext i32 %2138 to i64
  %2144 = getelementptr inbounds i8, ptr %1886, i64 %2143
  %2145 = load i8, ptr %2144, align 1, !tbaa !12
  %2146 = fpext float %2065 to double
  %2147 = sitofp i8 %2145 to double
  %2148 = icmp slt i8 %2145, 0
  %2149 = fneg fast double %2147
  %2150 = select i1 %2148, double %2149, double %2147
  %2151 = fmul fast double %2147, %2147
  %2152 = fmul fast double %2151, %2150
  %2153 = fadd fast double %2152, %2146
  %2154 = fptrunc double %2153 to float
  store float %2154, ptr %1888, align 4, !tbaa !163
  %2155 = add nuw nsw i32 %2066, 1
  br i1 %1907, label %2156, label %2206

2156:                                             ; preds = %2142
  %2157 = load i32, ptr %4, align 4, !tbaa !6
  %2158 = load i32, ptr %12, align 4, !tbaa !6
  %2159 = add nsw i32 %2158, -1
  %2160 = icmp slt i32 %2157, %2159
  br i1 %2160, label %2183, label %2161

2161:                                             ; preds = %2156
  %2162 = icmp eq i32 %2157, %2159
  br i1 %2162, label %2163, label %2199

2163:                                             ; preds = %2161
  store i32 0, ptr %4, align 4, !tbaa !6
  %2164 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2164, ptr %6, align 4, !tbaa !6
  br i1 %1912, label %2206, label %2165

2165:                                             ; preds = %2163, %2193
  %2166 = phi i64 [ %2197, %2193 ], [ 1, %2163 ]
  %2167 = getelementptr inbounds i32, ptr %4, i64 %2166
  %2168 = load i32, ptr %2167, align 4, !tbaa !6
  %2169 = getelementptr inbounds i32, ptr %12, i64 %2166
  %2170 = load i32, ptr %2169, align 4, !tbaa !6
  %2171 = add nsw i32 %2170, -1
  %2172 = icmp slt i32 %2168, %2171
  br i1 %2172, label %2173, label %2191

2173:                                             ; preds = %2165
  br i1 %2160, label %2183, label %2174

2174:                                             ; preds = %2173
  %2175 = shl i64 %2166, 32
  %2176 = add i64 %2175, -4294967296
  %2177 = ashr exact i64 %2176, 32
  %2178 = getelementptr inbounds i32, ptr %7, i64 %2177
  %2179 = load i32, ptr %2178, align 4, !tbaa !6
  %2180 = getelementptr inbounds i32, ptr %6, i64 %2166
  %2181 = load i32, ptr %2180, align 4, !tbaa !6
  %2182 = add nsw i32 %2181, %2179
  store i32 %2182, ptr %2180, align 4, !tbaa !6
  br label %2201

2183:                                             ; preds = %2156, %2173
  %2184 = phi i32 [ %2168, %2173 ], [ %2157, %2156 ]
  %2185 = phi ptr [ %2167, %2173 ], [ %4, %2156 ]
  %2186 = phi i64 [ %2166, %2173 ], [ 0, %2156 ]
  %2187 = add nsw i32 %2184, 1
  store i32 %2187, ptr %2185, align 4, !tbaa !6
  %2188 = getelementptr inbounds i32, ptr %7, i64 %2186
  %2189 = load i32, ptr %2188, align 4, !tbaa !6
  %2190 = getelementptr inbounds i32, ptr %6, i64 %2186
  br label %2201

2191:                                             ; preds = %2165
  %2192 = icmp eq i32 %2168, %2171
  br i1 %2192, label %2193, label %2199

2193:                                             ; preds = %2191
  store i32 0, ptr %2167, align 4, !tbaa !6
  %2194 = getelementptr inbounds i32, ptr %8, i64 %2166
  %2195 = load i32, ptr %2194, align 4, !tbaa !6
  %2196 = getelementptr inbounds i32, ptr %6, i64 %2166
  store i32 %2195, ptr %2196, align 4, !tbaa !6
  %2197 = add nuw nsw i64 %2166, 1
  %2198 = icmp eq i64 %2197, %1910
  br i1 %2198, label %2206, label %2165, !llvm.loop !453

2199:                                             ; preds = %2161, %2191
  %2200 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2201:                                             ; preds = %2174, %2183
  %2202 = phi ptr [ %2190, %2183 ], [ %2167, %2174 ]
  %2203 = phi i32 [ %2189, %2183 ], [ 1, %2174 ]
  %2204 = load i32, ptr %2202, align 4, !tbaa !6
  %2205 = add nsw i32 %2204, %2203
  store i32 %2205, ptr %2202, align 4, !tbaa !6
  br label %2206

2206:                                             ; preds = %2193, %2201, %2163, %2142
  %2207 = icmp eq i32 %2155, %5
  br i1 %2207, label %3136, label %2064, !llvm.loop !454

2208:                                             ; preds = %1898
  %2209 = getelementptr inbounds i32, ptr %3, i64 %19
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = icmp eq i32 %2210, 0
  %2212 = icmp sgt i32 %5, 0
  br i1 %2211, label %2222, label %2213

2213:                                             ; preds = %2208
  br i1 %2212, label %2214, label %3136

2214:                                             ; preds = %2213
  %2215 = icmp sgt i32 %13, 1
  %2216 = icmp sgt i32 %13, 0
  %2217 = add i32 %13, -2
  %2218 = zext i32 %2217 to i64
  %2219 = zext i32 %13 to i64
  %2220 = add nuw i32 %5, 1
  %2221 = icmp eq i32 %13, 1
  br label %2368

2222:                                             ; preds = %2208
  br i1 %2212, label %2223, label %3136

2223:                                             ; preds = %2222
  %2224 = icmp sgt i32 %13, 1
  %2225 = icmp sgt i32 %13, 0
  %2226 = add i32 %13, -2
  %2227 = zext i32 %2226 to i64
  %2228 = zext i32 %13 to i64
  %2229 = add nuw i32 %5, 1
  %2230 = icmp eq i32 %13, 1
  br label %2231

2231:                                             ; preds = %2223, %2366
  %2232 = phi float [ 0.000000e+00, %2223 ], [ %2316, %2366 ]
  %2233 = phi i32 [ 0, %2223 ], [ %2318, %2366 ]
  %2234 = phi double [ 0.000000e+00, %2223 ], [ %2317, %2366 ]
  %2235 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2224, label %2236, label %2305

2236:                                             ; preds = %2231, %2295
  %2237 = phi i32 [ %2304, %2295 ], [ 0, %2231 ]
  %2238 = phi i64 [ %2246, %2295 ], [ %2228, %2231 ]
  %2239 = phi i64 [ %2303, %2295 ], [ %2227, %2231 ]
  %2240 = phi i32 [ %2301, %2295 ], [ %2235, %2231 ]
  %2241 = sub i32 %2226, %2237
  %2242 = tail call i32 @llvm.smin.i32(i32 %2241, i32 0)
  %2243 = sub i32 %2241, %2242
  %2244 = zext i32 %2243 to i64
  %2245 = add nuw nsw i64 %2244, 1
  %2246 = add nsw i64 %2238, -1
  %2247 = icmp ult i32 %2243, 31
  br i1 %2247, label %2283, label %2248

2248:                                             ; preds = %2236
  %2249 = and i64 %2245, 8589934560
  %2250 = sub i64 %2239, %2249
  br label %2251

2251:                                             ; preds = %2251, %2248
  %2252 = phi i64 [ 0, %2248 ], [ %2275, %2251 ]
  %2253 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2248 ], [ %2271, %2251 ]
  %2254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2248 ], [ %2272, %2251 ]
  %2255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2248 ], [ %2273, %2251 ]
  %2256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2248 ], [ %2274, %2251 ]
  %2257 = sub i64 %2239, %2252
  %2258 = getelementptr inbounds i32, ptr %9, i64 %2257
  %2259 = getelementptr inbounds i32, ptr %2258, i64 -7
  %2260 = load <8 x i32>, ptr %2259, align 4, !tbaa !6
  %2261 = shufflevector <8 x i32> %2260, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2262 = getelementptr inbounds i32, ptr %2258, i64 -15
  %2263 = load <8 x i32>, ptr %2262, align 4, !tbaa !6
  %2264 = shufflevector <8 x i32> %2263, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2265 = getelementptr inbounds i32, ptr %2258, i64 -23
  %2266 = load <8 x i32>, ptr %2265, align 4, !tbaa !6
  %2267 = shufflevector <8 x i32> %2266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2268 = getelementptr inbounds i32, ptr %2258, i64 -31
  %2269 = load <8 x i32>, ptr %2268, align 4, !tbaa !6
  %2270 = shufflevector <8 x i32> %2269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2271 = mul <8 x i32> %2261, %2253
  %2272 = mul <8 x i32> %2264, %2254
  %2273 = mul <8 x i32> %2267, %2255
  %2274 = mul <8 x i32> %2270, %2256
  %2275 = add nuw i64 %2252, 32
  %2276 = icmp eq i64 %2275, %2249
  br i1 %2276, label %2277, label %2251, !llvm.loop !455

2277:                                             ; preds = %2251
  %2278 = mul <8 x i32> %2272, %2271
  %2279 = mul <8 x i32> %2273, %2278
  %2280 = mul <8 x i32> %2274, %2279
  %2281 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2280)
  %2282 = icmp eq i64 %2245, %2249
  br i1 %2282, label %2295, label %2283

2283:                                             ; preds = %2236, %2277
  %2284 = phi i64 [ %2239, %2236 ], [ %2250, %2277 ]
  %2285 = phi i32 [ 1, %2236 ], [ %2281, %2277 ]
  br label %2286

2286:                                             ; preds = %2283, %2286
  %2287 = phi i64 [ %2292, %2286 ], [ %2284, %2283 ]
  %2288 = phi i32 [ %2291, %2286 ], [ %2285, %2283 ]
  %2289 = getelementptr inbounds i32, ptr %9, i64 %2287
  %2290 = load i32, ptr %2289, align 4, !tbaa !6
  %2291 = mul nsw i32 %2290, %2288
  %2292 = add nsw i64 %2287, -1
  %2293 = trunc i64 %2287 to i32
  %2294 = icmp sgt i32 %2293, 0
  br i1 %2294, label %2286, label %2295, !llvm.loop !456

2295:                                             ; preds = %2286, %2277
  %2296 = phi i32 [ %2281, %2277 ], [ %2291, %2286 ]
  %2297 = and i64 %2246, 4294967295
  %2298 = getelementptr inbounds i32, ptr %6, i64 %2297
  %2299 = load i32, ptr %2298, align 4, !tbaa !6
  %2300 = mul nsw i32 %2299, %2296
  %2301 = add nsw i32 %2300, %2240
  %2302 = icmp sgt i64 %2238, 2
  %2303 = add nsw i64 %2239, -1
  %2304 = add i32 %2237, 1
  br i1 %2302, label %2236, label %2305, !llvm.loop !457

2305:                                             ; preds = %2295, %2231
  %2306 = phi i32 [ %2235, %2231 ], [ %2301, %2295 ]
  %2307 = sext i32 %2306 to i64
  %2308 = getelementptr inbounds i8, ptr %1886, i64 %2307
  %2309 = load i8, ptr %2308, align 1, !tbaa !12
  %2310 = sitofp i8 %2309 to float
  %2311 = icmp slt i8 %2309, 0
  %2312 = fneg fast float %2310
  %2313 = select i1 %2311, float %2312, float %2310
  %2314 = fmul fast float %2310, %2310
  %2315 = fmul fast float %2314, %2313
  %2316 = fadd fast float %2315, %2232
  store float %2316, ptr %1888, align 4, !tbaa !163
  %2317 = fadd fast double %2234, 1.000000e+00
  %2318 = add nuw nsw i32 %2233, 1
  br i1 %2225, label %2319, label %2366

2319:                                             ; preds = %2305
  %2320 = load i32, ptr %4, align 4, !tbaa !6
  %2321 = load i32, ptr %12, align 4, !tbaa !6
  %2322 = add nsw i32 %2321, -1
  %2323 = icmp slt i32 %2320, %2322
  br i1 %2323, label %2343, label %2324

2324:                                             ; preds = %2319
  %2325 = icmp eq i32 %2320, %2322
  br i1 %2325, label %2326, label %2359

2326:                                             ; preds = %2324
  store i32 0, ptr %4, align 4, !tbaa !6
  %2327 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2327, ptr %6, align 4, !tbaa !6
  br i1 %2230, label %2366, label %2328

2328:                                             ; preds = %2326, %2353
  %2329 = phi i64 [ %2357, %2353 ], [ 1, %2326 ]
  %2330 = getelementptr inbounds i32, ptr %4, i64 %2329
  %2331 = load i32, ptr %2330, align 4, !tbaa !6
  %2332 = getelementptr inbounds i32, ptr %12, i64 %2329
  %2333 = load i32, ptr %2332, align 4, !tbaa !6
  %2334 = add nsw i32 %2333, -1
  %2335 = icmp slt i32 %2331, %2334
  br i1 %2335, label %2336, label %2351

2336:                                             ; preds = %2328
  br i1 %2323, label %2343, label %2337

2337:                                             ; preds = %2336
  %2338 = getelementptr inbounds i32, ptr %7, i64 %2329
  %2339 = load i32, ptr %2338, align 4, !tbaa !6
  %2340 = getelementptr inbounds i32, ptr %6, i64 %2329
  %2341 = load i32, ptr %2340, align 4, !tbaa !6
  %2342 = add nsw i32 %2341, %2339
  store i32 %2342, ptr %2340, align 4, !tbaa !6
  br label %2361

2343:                                             ; preds = %2319, %2336
  %2344 = phi i32 [ %2331, %2336 ], [ %2320, %2319 ]
  %2345 = phi ptr [ %2330, %2336 ], [ %4, %2319 ]
  %2346 = phi i64 [ %2329, %2336 ], [ 0, %2319 ]
  %2347 = add nsw i32 %2344, 1
  store i32 %2347, ptr %2345, align 4, !tbaa !6
  %2348 = getelementptr inbounds i32, ptr %7, i64 %2346
  %2349 = load i32, ptr %2348, align 4, !tbaa !6
  %2350 = getelementptr inbounds i32, ptr %6, i64 %2346
  br label %2361

2351:                                             ; preds = %2328
  %2352 = icmp eq i32 %2331, %2334
  br i1 %2352, label %2353, label %2359

2353:                                             ; preds = %2351
  store i32 0, ptr %2330, align 4, !tbaa !6
  %2354 = getelementptr inbounds i32, ptr %8, i64 %2329
  %2355 = load i32, ptr %2354, align 4, !tbaa !6
  %2356 = getelementptr inbounds i32, ptr %6, i64 %2329
  store i32 %2355, ptr %2356, align 4, !tbaa !6
  %2357 = add nuw nsw i64 %2329, 1
  %2358 = icmp eq i64 %2357, %2228
  br i1 %2358, label %2366, label %2328, !llvm.loop !458

2359:                                             ; preds = %2324, %2351
  %2360 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2361:                                             ; preds = %2337, %2343
  %2362 = phi ptr [ %2350, %2343 ], [ %2330, %2337 ]
  %2363 = phi i32 [ %2349, %2343 ], [ 1, %2337 ]
  %2364 = load i32, ptr %2362, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, %2363
  store i32 %2365, ptr %2362, align 4, !tbaa !6
  br label %2366

2366:                                             ; preds = %2353, %2361, %2326, %2305
  %2367 = icmp eq i32 %2318, %5
  br i1 %2367, label %3136, label %2231, !llvm.loop !459

2368:                                             ; preds = %2214, %2508
  %2369 = phi float [ 0.000000e+00, %2214 ], [ %2456, %2508 ]
  %2370 = phi i32 [ 0, %2214 ], [ %2457, %2508 ]
  %2371 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2215, label %2372, label %2441

2372:                                             ; preds = %2368, %2431
  %2373 = phi i32 [ %2440, %2431 ], [ 0, %2368 ]
  %2374 = phi i64 [ %2382, %2431 ], [ %2219, %2368 ]
  %2375 = phi i64 [ %2439, %2431 ], [ %2218, %2368 ]
  %2376 = phi i32 [ %2437, %2431 ], [ %2371, %2368 ]
  %2377 = sub i32 %2217, %2373
  %2378 = tail call i32 @llvm.smin.i32(i32 %2377, i32 0)
  %2379 = sub i32 %2377, %2378
  %2380 = zext i32 %2379 to i64
  %2381 = add nuw nsw i64 %2380, 1
  %2382 = add nsw i64 %2374, -1
  %2383 = icmp ult i32 %2379, 31
  br i1 %2383, label %2419, label %2384

2384:                                             ; preds = %2372
  %2385 = and i64 %2381, 8589934560
  %2386 = sub i64 %2375, %2385
  br label %2387

2387:                                             ; preds = %2387, %2384
  %2388 = phi i64 [ 0, %2384 ], [ %2411, %2387 ]
  %2389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2384 ], [ %2407, %2387 ]
  %2390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2384 ], [ %2408, %2387 ]
  %2391 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2384 ], [ %2409, %2387 ]
  %2392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2384 ], [ %2410, %2387 ]
  %2393 = sub i64 %2375, %2388
  %2394 = getelementptr inbounds i32, ptr %11, i64 %2393
  %2395 = getelementptr inbounds i32, ptr %2394, i64 -7
  %2396 = load <8 x i32>, ptr %2395, align 4, !tbaa !6
  %2397 = shufflevector <8 x i32> %2396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2398 = getelementptr inbounds i32, ptr %2394, i64 -15
  %2399 = load <8 x i32>, ptr %2398, align 4, !tbaa !6
  %2400 = shufflevector <8 x i32> %2399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2401 = getelementptr inbounds i32, ptr %2394, i64 -23
  %2402 = load <8 x i32>, ptr %2401, align 4, !tbaa !6
  %2403 = shufflevector <8 x i32> %2402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2404 = getelementptr inbounds i32, ptr %2394, i64 -31
  %2405 = load <8 x i32>, ptr %2404, align 4, !tbaa !6
  %2406 = shufflevector <8 x i32> %2405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2407 = mul <8 x i32> %2397, %2389
  %2408 = mul <8 x i32> %2400, %2390
  %2409 = mul <8 x i32> %2403, %2391
  %2410 = mul <8 x i32> %2406, %2392
  %2411 = add nuw i64 %2388, 32
  %2412 = icmp eq i64 %2411, %2385
  br i1 %2412, label %2413, label %2387, !llvm.loop !460

2413:                                             ; preds = %2387
  %2414 = mul <8 x i32> %2408, %2407
  %2415 = mul <8 x i32> %2409, %2414
  %2416 = mul <8 x i32> %2410, %2415
  %2417 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2416)
  %2418 = icmp eq i64 %2381, %2385
  br i1 %2418, label %2431, label %2419

2419:                                             ; preds = %2372, %2413
  %2420 = phi i64 [ %2375, %2372 ], [ %2386, %2413 ]
  %2421 = phi i32 [ 1, %2372 ], [ %2417, %2413 ]
  br label %2422

2422:                                             ; preds = %2419, %2422
  %2423 = phi i64 [ %2428, %2422 ], [ %2420, %2419 ]
  %2424 = phi i32 [ %2427, %2422 ], [ %2421, %2419 ]
  %2425 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2426 = load i32, ptr %2425, align 4, !tbaa !6
  %2427 = mul nsw i32 %2426, %2424
  %2428 = add nsw i64 %2423, -1
  %2429 = trunc i64 %2423 to i32
  %2430 = icmp sgt i32 %2429, 0
  br i1 %2430, label %2422, label %2431, !llvm.loop !461

2431:                                             ; preds = %2422, %2413
  %2432 = phi i32 [ %2417, %2413 ], [ %2427, %2422 ]
  %2433 = and i64 %2382, 4294967295
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = mul nsw i32 %2435, %2432
  %2437 = add nsw i32 %2436, %2376
  %2438 = icmp sgt i64 %2374, 2
  %2439 = add nsw i64 %2375, -1
  %2440 = add i32 %2373, 1
  br i1 %2438, label %2372, label %2441, !llvm.loop !462

2441:                                             ; preds = %2431, %2368
  %2442 = phi i32 [ %2371, %2368 ], [ %2437, %2431 ]
  %2443 = icmp slt i32 %2442, %5
  br i1 %2443, label %2446, label %2444

2444:                                             ; preds = %2441
  %2445 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

2446:                                             ; preds = %2441
  %2447 = sext i32 %2442 to i64
  %2448 = getelementptr inbounds i8, ptr %1886, i64 %2447
  %2449 = load i8, ptr %2448, align 1, !tbaa !12
  %2450 = sitofp i8 %2449 to float
  %2451 = icmp slt i8 %2449, 0
  %2452 = fneg fast float %2450
  %2453 = select i1 %2451, float %2452, float %2450
  %2454 = fmul fast float %2450, %2450
  %2455 = fmul fast float %2454, %2453
  %2456 = fadd fast float %2455, %2369
  store float %2456, ptr %1888, align 4, !tbaa !163
  %2457 = add nuw nsw i32 %2370, 1
  br i1 %2216, label %2458, label %2508

2458:                                             ; preds = %2446
  %2459 = load i32, ptr %4, align 4, !tbaa !6
  %2460 = load i32, ptr %12, align 4, !tbaa !6
  %2461 = add nsw i32 %2460, -1
  %2462 = icmp slt i32 %2459, %2461
  br i1 %2462, label %2485, label %2463

2463:                                             ; preds = %2458
  %2464 = icmp eq i32 %2459, %2461
  br i1 %2464, label %2465, label %2501

2465:                                             ; preds = %2463
  store i32 0, ptr %4, align 4, !tbaa !6
  %2466 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2466, ptr %6, align 4, !tbaa !6
  br i1 %2221, label %2508, label %2467

2467:                                             ; preds = %2465, %2495
  %2468 = phi i64 [ %2499, %2495 ], [ 1, %2465 ]
  %2469 = getelementptr inbounds i32, ptr %4, i64 %2468
  %2470 = load i32, ptr %2469, align 4, !tbaa !6
  %2471 = getelementptr inbounds i32, ptr %12, i64 %2468
  %2472 = load i32, ptr %2471, align 4, !tbaa !6
  %2473 = add nsw i32 %2472, -1
  %2474 = icmp slt i32 %2470, %2473
  br i1 %2474, label %2475, label %2493

2475:                                             ; preds = %2467
  br i1 %2462, label %2485, label %2476

2476:                                             ; preds = %2475
  %2477 = shl i64 %2468, 32
  %2478 = add i64 %2477, -4294967296
  %2479 = ashr exact i64 %2478, 32
  %2480 = getelementptr inbounds i32, ptr %7, i64 %2479
  %2481 = load i32, ptr %2480, align 4, !tbaa !6
  %2482 = getelementptr inbounds i32, ptr %6, i64 %2468
  %2483 = load i32, ptr %2482, align 4, !tbaa !6
  %2484 = add nsw i32 %2483, %2481
  store i32 %2484, ptr %2482, align 4, !tbaa !6
  br label %2503

2485:                                             ; preds = %2458, %2475
  %2486 = phi i32 [ %2470, %2475 ], [ %2459, %2458 ]
  %2487 = phi ptr [ %2469, %2475 ], [ %4, %2458 ]
  %2488 = phi i64 [ %2468, %2475 ], [ 0, %2458 ]
  %2489 = add nsw i32 %2486, 1
  store i32 %2489, ptr %2487, align 4, !tbaa !6
  %2490 = getelementptr inbounds i32, ptr %7, i64 %2488
  %2491 = load i32, ptr %2490, align 4, !tbaa !6
  %2492 = getelementptr inbounds i32, ptr %6, i64 %2488
  br label %2503

2493:                                             ; preds = %2467
  %2494 = icmp eq i32 %2470, %2473
  br i1 %2494, label %2495, label %2501

2495:                                             ; preds = %2493
  store i32 0, ptr %2469, align 4, !tbaa !6
  %2496 = getelementptr inbounds i32, ptr %8, i64 %2468
  %2497 = load i32, ptr %2496, align 4, !tbaa !6
  %2498 = getelementptr inbounds i32, ptr %6, i64 %2468
  store i32 %2497, ptr %2498, align 4, !tbaa !6
  %2499 = add nuw nsw i64 %2468, 1
  %2500 = icmp eq i64 %2499, %2219
  br i1 %2500, label %2508, label %2467, !llvm.loop !463

2501:                                             ; preds = %2463, %2493
  %2502 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2503:                                             ; preds = %2476, %2485
  %2504 = phi ptr [ %2492, %2485 ], [ %2469, %2476 ]
  %2505 = phi i32 [ %2491, %2485 ], [ 1, %2476 ]
  %2506 = load i32, ptr %2504, align 4, !tbaa !6
  %2507 = add nsw i32 %2506, %2505
  store i32 %2507, ptr %2504, align 4, !tbaa !6
  br label %2508

2508:                                             ; preds = %2495, %2503, %2465, %2446
  %2509 = icmp eq i32 %2457, %5
  br i1 %2509, label %3136, label %2368, !llvm.loop !464

2510:                                             ; preds = %1898
  %2511 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 642, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3136

2512:                                             ; preds = %18
  %2513 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2514 = load ptr, ptr %2513, align 8, !tbaa !10
  %2515 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2516 = load ptr, ptr %2515, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2516, align 8, !tbaa !19
  %2517 = icmp eq i32 %13, 0
  br i1 %2517, label %2518, label %2526

2518:                                             ; preds = %2512
  %2519 = load i8, ptr %2514, align 1, !tbaa !12
  %2520 = sitofp i8 %2519 to double
  %2521 = icmp slt i8 %2519, 0
  %2522 = fneg fast double %2520
  %2523 = select i1 %2521, double %2522, double %2520
  %2524 = fmul fast double %2520, %2520
  %2525 = fmul fast double %2524, %2523
  store double %2525, ptr %2516, align 8, !tbaa !19
  br label %3136

2526:                                             ; preds = %2512
  switch i32 %1, label %3134 [
    i32 1, label %2527
    i32 0, label %2832
  ]

2527:                                             ; preds = %2526
  %2528 = getelementptr inbounds i32, ptr %3, i64 %19
  %2529 = load i32, ptr %2528, align 4, !tbaa !6
  %2530 = icmp eq i32 %2529, 0
  %2531 = icmp sgt i32 %5, 0
  br i1 %2530, label %2541, label %2532

2532:                                             ; preds = %2527
  br i1 %2531, label %2533, label %3136

2533:                                             ; preds = %2532
  %2534 = icmp sgt i32 %13, 1
  %2535 = icmp sgt i32 %13, 0
  %2536 = add i32 %13, -2
  %2537 = zext i32 %2536 to i64
  %2538 = zext i32 %13 to i64
  %2539 = add nuw i32 %5, 1
  %2540 = icmp eq i32 %13, 1
  br label %2690

2541:                                             ; preds = %2527
  br i1 %2531, label %2542, label %3136

2542:                                             ; preds = %2541
  %2543 = icmp sgt i32 %13, 1
  %2544 = icmp sgt i32 %13, 0
  %2545 = add i32 %13, -2
  %2546 = zext i32 %2545 to i64
  %2547 = zext i32 %13 to i64
  %2548 = add nuw i32 %5, 1
  %2549 = icmp eq i32 %13, 1
  br label %2550

2550:                                             ; preds = %2542, %2688
  %2551 = phi double [ 0.000000e+00, %2542 ], [ %2638, %2688 ]
  %2552 = phi i32 [ 0, %2542 ], [ %2640, %2688 ]
  %2553 = phi double [ 0.000000e+00, %2542 ], [ %2639, %2688 ]
  %2554 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2543, label %2555, label %2624

2555:                                             ; preds = %2550, %2614
  %2556 = phi i32 [ %2623, %2614 ], [ 0, %2550 ]
  %2557 = phi i64 [ %2565, %2614 ], [ %2547, %2550 ]
  %2558 = phi i64 [ %2622, %2614 ], [ %2546, %2550 ]
  %2559 = phi i32 [ %2620, %2614 ], [ %2554, %2550 ]
  %2560 = sub i32 %2545, %2556
  %2561 = tail call i32 @llvm.smin.i32(i32 %2560, i32 0)
  %2562 = sub i32 %2560, %2561
  %2563 = zext i32 %2562 to i64
  %2564 = add nuw nsw i64 %2563, 1
  %2565 = add nsw i64 %2557, -1
  %2566 = icmp ult i32 %2562, 31
  br i1 %2566, label %2602, label %2567

2567:                                             ; preds = %2555
  %2568 = and i64 %2564, 8589934560
  %2569 = sub i64 %2558, %2568
  br label %2570

2570:                                             ; preds = %2570, %2567
  %2571 = phi i64 [ 0, %2567 ], [ %2594, %2570 ]
  %2572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2567 ], [ %2590, %2570 ]
  %2573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2567 ], [ %2591, %2570 ]
  %2574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2567 ], [ %2592, %2570 ]
  %2575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2567 ], [ %2593, %2570 ]
  %2576 = sub i64 %2558, %2571
  %2577 = getelementptr inbounds i32, ptr %9, i64 %2576
  %2578 = getelementptr inbounds i32, ptr %2577, i64 -7
  %2579 = load <8 x i32>, ptr %2578, align 4, !tbaa !6
  %2580 = shufflevector <8 x i32> %2579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2581 = getelementptr inbounds i32, ptr %2577, i64 -15
  %2582 = load <8 x i32>, ptr %2581, align 4, !tbaa !6
  %2583 = shufflevector <8 x i32> %2582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2584 = getelementptr inbounds i32, ptr %2577, i64 -23
  %2585 = load <8 x i32>, ptr %2584, align 4, !tbaa !6
  %2586 = shufflevector <8 x i32> %2585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2587 = getelementptr inbounds i32, ptr %2577, i64 -31
  %2588 = load <8 x i32>, ptr %2587, align 4, !tbaa !6
  %2589 = shufflevector <8 x i32> %2588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2590 = mul <8 x i32> %2580, %2572
  %2591 = mul <8 x i32> %2583, %2573
  %2592 = mul <8 x i32> %2586, %2574
  %2593 = mul <8 x i32> %2589, %2575
  %2594 = add nuw i64 %2571, 32
  %2595 = icmp eq i64 %2594, %2568
  br i1 %2595, label %2596, label %2570, !llvm.loop !465

2596:                                             ; preds = %2570
  %2597 = mul <8 x i32> %2591, %2590
  %2598 = mul <8 x i32> %2592, %2597
  %2599 = mul <8 x i32> %2593, %2598
  %2600 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2599)
  %2601 = icmp eq i64 %2564, %2568
  br i1 %2601, label %2614, label %2602

2602:                                             ; preds = %2555, %2596
  %2603 = phi i64 [ %2558, %2555 ], [ %2569, %2596 ]
  %2604 = phi i32 [ 1, %2555 ], [ %2600, %2596 ]
  br label %2605

2605:                                             ; preds = %2602, %2605
  %2606 = phi i64 [ %2611, %2605 ], [ %2603, %2602 ]
  %2607 = phi i32 [ %2610, %2605 ], [ %2604, %2602 ]
  %2608 = getelementptr inbounds i32, ptr %9, i64 %2606
  %2609 = load i32, ptr %2608, align 4, !tbaa !6
  %2610 = mul nsw i32 %2609, %2607
  %2611 = add nsw i64 %2606, -1
  %2612 = trunc i64 %2606 to i32
  %2613 = icmp sgt i32 %2612, 0
  br i1 %2613, label %2605, label %2614, !llvm.loop !466

2614:                                             ; preds = %2605, %2596
  %2615 = phi i32 [ %2600, %2596 ], [ %2610, %2605 ]
  %2616 = and i64 %2565, 4294967295
  %2617 = getelementptr inbounds i32, ptr %6, i64 %2616
  %2618 = load i32, ptr %2617, align 4, !tbaa !6
  %2619 = mul nsw i32 %2618, %2615
  %2620 = add nsw i32 %2619, %2559
  %2621 = icmp sgt i64 %2557, 2
  %2622 = add nsw i64 %2558, -1
  %2623 = add i32 %2556, 1
  br i1 %2621, label %2555, label %2624, !llvm.loop !467

2624:                                             ; preds = %2614, %2550
  %2625 = phi i32 [ %2554, %2550 ], [ %2620, %2614 ]
  %2626 = sext i32 %2625 to i64
  %2627 = getelementptr inbounds double, ptr %2, i64 %2626
  %2628 = load double, ptr %2627, align 8, !tbaa !19
  %2629 = getelementptr inbounds i8, ptr %2514, i64 %2626
  %2630 = load i8, ptr %2629, align 1, !tbaa !12
  %2631 = sitofp i8 %2630 to double
  %2632 = fmul fast double %2628, %2631
  %2633 = fcmp fast olt double %2632, 0.000000e+00
  %2634 = fneg fast double %2632
  %2635 = select nnan ninf i1 %2633, double %2634, double %2632
  %2636 = fmul fast double %2632, %2632
  %2637 = fmul fast double %2636, %2635
  %2638 = fadd fast double %2637, %2551
  store double %2638, ptr %2516, align 8, !tbaa !19
  %2639 = fadd fast double %2628, %2553
  %2640 = add nuw nsw i32 %2552, 1
  br i1 %2544, label %2641, label %2688

2641:                                             ; preds = %2624
  %2642 = load i32, ptr %4, align 4, !tbaa !6
  %2643 = load i32, ptr %12, align 4, !tbaa !6
  %2644 = add nsw i32 %2643, -1
  %2645 = icmp slt i32 %2642, %2644
  br i1 %2645, label %2665, label %2646

2646:                                             ; preds = %2641
  %2647 = icmp eq i32 %2642, %2644
  br i1 %2647, label %2648, label %2681

2648:                                             ; preds = %2646
  store i32 0, ptr %4, align 4, !tbaa !6
  %2649 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2649, ptr %6, align 4, !tbaa !6
  br i1 %2549, label %2688, label %2650

2650:                                             ; preds = %2648, %2675
  %2651 = phi i64 [ %2679, %2675 ], [ 1, %2648 ]
  %2652 = getelementptr inbounds i32, ptr %4, i64 %2651
  %2653 = load i32, ptr %2652, align 4, !tbaa !6
  %2654 = getelementptr inbounds i32, ptr %12, i64 %2651
  %2655 = load i32, ptr %2654, align 4, !tbaa !6
  %2656 = add nsw i32 %2655, -1
  %2657 = icmp slt i32 %2653, %2656
  br i1 %2657, label %2658, label %2673

2658:                                             ; preds = %2650
  br i1 %2645, label %2665, label %2659

2659:                                             ; preds = %2658
  %2660 = getelementptr inbounds i32, ptr %7, i64 %2651
  %2661 = load i32, ptr %2660, align 4, !tbaa !6
  %2662 = getelementptr inbounds i32, ptr %6, i64 %2651
  %2663 = load i32, ptr %2662, align 4, !tbaa !6
  %2664 = add nsw i32 %2663, %2661
  store i32 %2664, ptr %2662, align 4, !tbaa !6
  br label %2683

2665:                                             ; preds = %2641, %2658
  %2666 = phi i32 [ %2653, %2658 ], [ %2642, %2641 ]
  %2667 = phi ptr [ %2652, %2658 ], [ %4, %2641 ]
  %2668 = phi i64 [ %2651, %2658 ], [ 0, %2641 ]
  %2669 = add nsw i32 %2666, 1
  store i32 %2669, ptr %2667, align 4, !tbaa !6
  %2670 = getelementptr inbounds i32, ptr %7, i64 %2668
  %2671 = load i32, ptr %2670, align 4, !tbaa !6
  %2672 = getelementptr inbounds i32, ptr %6, i64 %2668
  br label %2683

2673:                                             ; preds = %2650
  %2674 = icmp eq i32 %2653, %2656
  br i1 %2674, label %2675, label %2681

2675:                                             ; preds = %2673
  store i32 0, ptr %2652, align 4, !tbaa !6
  %2676 = getelementptr inbounds i32, ptr %8, i64 %2651
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = getelementptr inbounds i32, ptr %6, i64 %2651
  store i32 %2677, ptr %2678, align 4, !tbaa !6
  %2679 = add nuw nsw i64 %2651, 1
  %2680 = icmp eq i64 %2679, %2547
  br i1 %2680, label %2688, label %2650, !llvm.loop !468

2681:                                             ; preds = %2646, %2673
  %2682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2683:                                             ; preds = %2659, %2665
  %2684 = phi ptr [ %2672, %2665 ], [ %2652, %2659 ]
  %2685 = phi i32 [ %2671, %2665 ], [ 1, %2659 ]
  %2686 = load i32, ptr %2684, align 4, !tbaa !6
  %2687 = add nsw i32 %2686, %2685
  store i32 %2687, ptr %2684, align 4, !tbaa !6
  br label %2688

2688:                                             ; preds = %2675, %2683, %2648, %2624
  %2689 = icmp eq i32 %2640, %5
  br i1 %2689, label %3136, label %2550, !llvm.loop !469

2690:                                             ; preds = %2533, %2830
  %2691 = phi double [ 0.000000e+00, %2533 ], [ %2778, %2830 ]
  %2692 = phi i32 [ 0, %2533 ], [ %2779, %2830 ]
  %2693 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2534, label %2694, label %2763

2694:                                             ; preds = %2690, %2753
  %2695 = phi i32 [ %2762, %2753 ], [ 0, %2690 ]
  %2696 = phi i64 [ %2704, %2753 ], [ %2538, %2690 ]
  %2697 = phi i64 [ %2761, %2753 ], [ %2537, %2690 ]
  %2698 = phi i32 [ %2759, %2753 ], [ %2693, %2690 ]
  %2699 = sub i32 %2536, %2695
  %2700 = tail call i32 @llvm.smin.i32(i32 %2699, i32 0)
  %2701 = sub i32 %2699, %2700
  %2702 = zext i32 %2701 to i64
  %2703 = add nuw nsw i64 %2702, 1
  %2704 = add nsw i64 %2696, -1
  %2705 = icmp ult i32 %2701, 31
  br i1 %2705, label %2741, label %2706

2706:                                             ; preds = %2694
  %2707 = and i64 %2703, 8589934560
  %2708 = sub i64 %2697, %2707
  br label %2709

2709:                                             ; preds = %2709, %2706
  %2710 = phi i64 [ 0, %2706 ], [ %2733, %2709 ]
  %2711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2706 ], [ %2729, %2709 ]
  %2712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2706 ], [ %2730, %2709 ]
  %2713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2706 ], [ %2731, %2709 ]
  %2714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2706 ], [ %2732, %2709 ]
  %2715 = sub i64 %2697, %2710
  %2716 = getelementptr inbounds i32, ptr %11, i64 %2715
  %2717 = getelementptr inbounds i32, ptr %2716, i64 -7
  %2718 = load <8 x i32>, ptr %2717, align 4, !tbaa !6
  %2719 = shufflevector <8 x i32> %2718, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2720 = getelementptr inbounds i32, ptr %2716, i64 -15
  %2721 = load <8 x i32>, ptr %2720, align 4, !tbaa !6
  %2722 = shufflevector <8 x i32> %2721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2723 = getelementptr inbounds i32, ptr %2716, i64 -23
  %2724 = load <8 x i32>, ptr %2723, align 4, !tbaa !6
  %2725 = shufflevector <8 x i32> %2724, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2726 = getelementptr inbounds i32, ptr %2716, i64 -31
  %2727 = load <8 x i32>, ptr %2726, align 4, !tbaa !6
  %2728 = shufflevector <8 x i32> %2727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2729 = mul <8 x i32> %2719, %2711
  %2730 = mul <8 x i32> %2722, %2712
  %2731 = mul <8 x i32> %2725, %2713
  %2732 = mul <8 x i32> %2728, %2714
  %2733 = add nuw i64 %2710, 32
  %2734 = icmp eq i64 %2733, %2707
  br i1 %2734, label %2735, label %2709, !llvm.loop !470

2735:                                             ; preds = %2709
  %2736 = mul <8 x i32> %2730, %2729
  %2737 = mul <8 x i32> %2731, %2736
  %2738 = mul <8 x i32> %2732, %2737
  %2739 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2738)
  %2740 = icmp eq i64 %2703, %2707
  br i1 %2740, label %2753, label %2741

2741:                                             ; preds = %2694, %2735
  %2742 = phi i64 [ %2697, %2694 ], [ %2708, %2735 ]
  %2743 = phi i32 [ 1, %2694 ], [ %2739, %2735 ]
  br label %2744

2744:                                             ; preds = %2741, %2744
  %2745 = phi i64 [ %2750, %2744 ], [ %2742, %2741 ]
  %2746 = phi i32 [ %2749, %2744 ], [ %2743, %2741 ]
  %2747 = getelementptr inbounds i32, ptr %11, i64 %2745
  %2748 = load i32, ptr %2747, align 4, !tbaa !6
  %2749 = mul nsw i32 %2748, %2746
  %2750 = add nsw i64 %2745, -1
  %2751 = trunc i64 %2745 to i32
  %2752 = icmp sgt i32 %2751, 0
  br i1 %2752, label %2744, label %2753, !llvm.loop !471

2753:                                             ; preds = %2744, %2735
  %2754 = phi i32 [ %2739, %2735 ], [ %2749, %2744 ]
  %2755 = and i64 %2704, 4294967295
  %2756 = getelementptr inbounds i32, ptr %6, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = mul nsw i32 %2757, %2754
  %2759 = add nsw i32 %2758, %2698
  %2760 = icmp sgt i64 %2696, 2
  %2761 = add nsw i64 %2697, -1
  %2762 = add i32 %2695, 1
  br i1 %2760, label %2694, label %2763, !llvm.loop !472

2763:                                             ; preds = %2753, %2690
  %2764 = phi i32 [ %2693, %2690 ], [ %2759, %2753 ]
  %2765 = icmp slt i32 %2764, %5
  br i1 %2765, label %2768, label %2766

2766:                                             ; preds = %2763
  %2767 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

2768:                                             ; preds = %2763
  %2769 = sext i32 %2764 to i64
  %2770 = getelementptr inbounds i8, ptr %2514, i64 %2769
  %2771 = load i8, ptr %2770, align 1, !tbaa !12
  %2772 = sitofp i8 %2771 to double
  %2773 = icmp slt i8 %2771, 0
  %2774 = fneg fast double %2772
  %2775 = select i1 %2773, double %2774, double %2772
  %2776 = fmul fast double %2772, %2772
  %2777 = fmul fast double %2776, %2775
  %2778 = fadd fast double %2777, %2691
  store double %2778, ptr %2516, align 8, !tbaa !19
  %2779 = add nuw nsw i32 %2692, 1
  br i1 %2535, label %2780, label %2830

2780:                                             ; preds = %2768
  %2781 = load i32, ptr %4, align 4, !tbaa !6
  %2782 = load i32, ptr %12, align 4, !tbaa !6
  %2783 = add nsw i32 %2782, -1
  %2784 = icmp slt i32 %2781, %2783
  br i1 %2784, label %2807, label %2785

2785:                                             ; preds = %2780
  %2786 = icmp eq i32 %2781, %2783
  br i1 %2786, label %2787, label %2823

2787:                                             ; preds = %2785
  store i32 0, ptr %4, align 4, !tbaa !6
  %2788 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2788, ptr %6, align 4, !tbaa !6
  br i1 %2540, label %2830, label %2789

2789:                                             ; preds = %2787, %2817
  %2790 = phi i64 [ %2821, %2817 ], [ 1, %2787 ]
  %2791 = getelementptr inbounds i32, ptr %4, i64 %2790
  %2792 = load i32, ptr %2791, align 4, !tbaa !6
  %2793 = getelementptr inbounds i32, ptr %12, i64 %2790
  %2794 = load i32, ptr %2793, align 4, !tbaa !6
  %2795 = add nsw i32 %2794, -1
  %2796 = icmp slt i32 %2792, %2795
  br i1 %2796, label %2797, label %2815

2797:                                             ; preds = %2789
  br i1 %2784, label %2807, label %2798

2798:                                             ; preds = %2797
  %2799 = shl i64 %2790, 32
  %2800 = add i64 %2799, -4294967296
  %2801 = ashr exact i64 %2800, 32
  %2802 = getelementptr inbounds i32, ptr %7, i64 %2801
  %2803 = load i32, ptr %2802, align 4, !tbaa !6
  %2804 = getelementptr inbounds i32, ptr %6, i64 %2790
  %2805 = load i32, ptr %2804, align 4, !tbaa !6
  %2806 = add nsw i32 %2805, %2803
  store i32 %2806, ptr %2804, align 4, !tbaa !6
  br label %2825

2807:                                             ; preds = %2780, %2797
  %2808 = phi i32 [ %2792, %2797 ], [ %2781, %2780 ]
  %2809 = phi ptr [ %2791, %2797 ], [ %4, %2780 ]
  %2810 = phi i64 [ %2790, %2797 ], [ 0, %2780 ]
  %2811 = add nsw i32 %2808, 1
  store i32 %2811, ptr %2809, align 4, !tbaa !6
  %2812 = getelementptr inbounds i32, ptr %7, i64 %2810
  %2813 = load i32, ptr %2812, align 4, !tbaa !6
  %2814 = getelementptr inbounds i32, ptr %6, i64 %2810
  br label %2825

2815:                                             ; preds = %2789
  %2816 = icmp eq i32 %2792, %2795
  br i1 %2816, label %2817, label %2823

2817:                                             ; preds = %2815
  store i32 0, ptr %2791, align 4, !tbaa !6
  %2818 = getelementptr inbounds i32, ptr %8, i64 %2790
  %2819 = load i32, ptr %2818, align 4, !tbaa !6
  %2820 = getelementptr inbounds i32, ptr %6, i64 %2790
  store i32 %2819, ptr %2820, align 4, !tbaa !6
  %2821 = add nuw nsw i64 %2790, 1
  %2822 = icmp eq i64 %2821, %2538
  br i1 %2822, label %2830, label %2789, !llvm.loop !473

2823:                                             ; preds = %2785, %2815
  %2824 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2825:                                             ; preds = %2798, %2807
  %2826 = phi ptr [ %2814, %2807 ], [ %2791, %2798 ]
  %2827 = phi i32 [ %2813, %2807 ], [ 1, %2798 ]
  %2828 = load i32, ptr %2826, align 4, !tbaa !6
  %2829 = add nsw i32 %2828, %2827
  store i32 %2829, ptr %2826, align 4, !tbaa !6
  br label %2830

2830:                                             ; preds = %2817, %2825, %2787, %2768
  %2831 = icmp eq i32 %2779, %5
  br i1 %2831, label %3136, label %2690, !llvm.loop !474

2832:                                             ; preds = %2526
  %2833 = getelementptr inbounds i32, ptr %3, i64 %19
  %2834 = load i32, ptr %2833, align 4, !tbaa !6
  %2835 = icmp eq i32 %2834, 0
  %2836 = icmp sgt i32 %5, 0
  br i1 %2835, label %2846, label %2837

2837:                                             ; preds = %2832
  br i1 %2836, label %2838, label %3136

2838:                                             ; preds = %2837
  %2839 = icmp sgt i32 %13, 1
  %2840 = icmp sgt i32 %13, 0
  %2841 = add i32 %13, -2
  %2842 = zext i32 %2841 to i64
  %2843 = zext i32 %13 to i64
  %2844 = add nuw i32 %5, 1
  %2845 = icmp eq i32 %13, 1
  br label %2992

2846:                                             ; preds = %2832
  br i1 %2836, label %2847, label %3136

2847:                                             ; preds = %2846
  %2848 = icmp sgt i32 %13, 1
  %2849 = icmp sgt i32 %13, 0
  %2850 = add i32 %13, -2
  %2851 = zext i32 %2850 to i64
  %2852 = zext i32 %13 to i64
  %2853 = add nuw i32 %5, 1
  %2854 = icmp eq i32 %13, 1
  br label %2855

2855:                                             ; preds = %2847, %2990
  %2856 = phi double [ 0.000000e+00, %2847 ], [ %2940, %2990 ]
  %2857 = phi i32 [ 0, %2847 ], [ %2942, %2990 ]
  %2858 = phi double [ 0.000000e+00, %2847 ], [ %2941, %2990 ]
  %2859 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2848, label %2860, label %2929

2860:                                             ; preds = %2855, %2919
  %2861 = phi i32 [ %2928, %2919 ], [ 0, %2855 ]
  %2862 = phi i64 [ %2870, %2919 ], [ %2852, %2855 ]
  %2863 = phi i64 [ %2927, %2919 ], [ %2851, %2855 ]
  %2864 = phi i32 [ %2925, %2919 ], [ %2859, %2855 ]
  %2865 = sub i32 %2850, %2861
  %2866 = tail call i32 @llvm.smin.i32(i32 %2865, i32 0)
  %2867 = sub i32 %2865, %2866
  %2868 = zext i32 %2867 to i64
  %2869 = add nuw nsw i64 %2868, 1
  %2870 = add nsw i64 %2862, -1
  %2871 = icmp ult i32 %2867, 31
  br i1 %2871, label %2907, label %2872

2872:                                             ; preds = %2860
  %2873 = and i64 %2869, 8589934560
  %2874 = sub i64 %2863, %2873
  br label %2875

2875:                                             ; preds = %2875, %2872
  %2876 = phi i64 [ 0, %2872 ], [ %2899, %2875 ]
  %2877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2872 ], [ %2895, %2875 ]
  %2878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2872 ], [ %2896, %2875 ]
  %2879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2872 ], [ %2897, %2875 ]
  %2880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2872 ], [ %2898, %2875 ]
  %2881 = sub i64 %2863, %2876
  %2882 = getelementptr inbounds i32, ptr %9, i64 %2881
  %2883 = getelementptr inbounds i32, ptr %2882, i64 -7
  %2884 = load <8 x i32>, ptr %2883, align 4, !tbaa !6
  %2885 = shufflevector <8 x i32> %2884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2886 = getelementptr inbounds i32, ptr %2882, i64 -15
  %2887 = load <8 x i32>, ptr %2886, align 4, !tbaa !6
  %2888 = shufflevector <8 x i32> %2887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2889 = getelementptr inbounds i32, ptr %2882, i64 -23
  %2890 = load <8 x i32>, ptr %2889, align 4, !tbaa !6
  %2891 = shufflevector <8 x i32> %2890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2892 = getelementptr inbounds i32, ptr %2882, i64 -31
  %2893 = load <8 x i32>, ptr %2892, align 4, !tbaa !6
  %2894 = shufflevector <8 x i32> %2893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2895 = mul <8 x i32> %2885, %2877
  %2896 = mul <8 x i32> %2888, %2878
  %2897 = mul <8 x i32> %2891, %2879
  %2898 = mul <8 x i32> %2894, %2880
  %2899 = add nuw i64 %2876, 32
  %2900 = icmp eq i64 %2899, %2873
  br i1 %2900, label %2901, label %2875, !llvm.loop !475

2901:                                             ; preds = %2875
  %2902 = mul <8 x i32> %2896, %2895
  %2903 = mul <8 x i32> %2897, %2902
  %2904 = mul <8 x i32> %2898, %2903
  %2905 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2904)
  %2906 = icmp eq i64 %2869, %2873
  br i1 %2906, label %2919, label %2907

2907:                                             ; preds = %2860, %2901
  %2908 = phi i64 [ %2863, %2860 ], [ %2874, %2901 ]
  %2909 = phi i32 [ 1, %2860 ], [ %2905, %2901 ]
  br label %2910

2910:                                             ; preds = %2907, %2910
  %2911 = phi i64 [ %2916, %2910 ], [ %2908, %2907 ]
  %2912 = phi i32 [ %2915, %2910 ], [ %2909, %2907 ]
  %2913 = getelementptr inbounds i32, ptr %9, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !6
  %2915 = mul nsw i32 %2914, %2912
  %2916 = add nsw i64 %2911, -1
  %2917 = trunc i64 %2911 to i32
  %2918 = icmp sgt i32 %2917, 0
  br i1 %2918, label %2910, label %2919, !llvm.loop !476

2919:                                             ; preds = %2910, %2901
  %2920 = phi i32 [ %2905, %2901 ], [ %2915, %2910 ]
  %2921 = and i64 %2870, 4294967295
  %2922 = getelementptr inbounds i32, ptr %6, i64 %2921
  %2923 = load i32, ptr %2922, align 4, !tbaa !6
  %2924 = mul nsw i32 %2923, %2920
  %2925 = add nsw i32 %2924, %2864
  %2926 = icmp sgt i64 %2862, 2
  %2927 = add nsw i64 %2863, -1
  %2928 = add i32 %2861, 1
  br i1 %2926, label %2860, label %2929, !llvm.loop !477

2929:                                             ; preds = %2919, %2855
  %2930 = phi i32 [ %2859, %2855 ], [ %2925, %2919 ]
  %2931 = sext i32 %2930 to i64
  %2932 = getelementptr inbounds i8, ptr %2514, i64 %2931
  %2933 = load i8, ptr %2932, align 1, !tbaa !12
  %2934 = sitofp i8 %2933 to double
  %2935 = icmp slt i8 %2933, 0
  %2936 = fneg fast double %2934
  %2937 = select i1 %2935, double %2936, double %2934
  %2938 = fmul fast double %2934, %2934
  %2939 = fmul fast double %2938, %2937
  %2940 = fadd fast double %2939, %2856
  store double %2940, ptr %2516, align 8, !tbaa !19
  %2941 = fadd fast double %2858, 1.000000e+00
  %2942 = add nuw nsw i32 %2857, 1
  br i1 %2849, label %2943, label %2990

2943:                                             ; preds = %2929
  %2944 = load i32, ptr %4, align 4, !tbaa !6
  %2945 = load i32, ptr %12, align 4, !tbaa !6
  %2946 = add nsw i32 %2945, -1
  %2947 = icmp slt i32 %2944, %2946
  br i1 %2947, label %2967, label %2948

2948:                                             ; preds = %2943
  %2949 = icmp eq i32 %2944, %2946
  br i1 %2949, label %2950, label %2983

2950:                                             ; preds = %2948
  store i32 0, ptr %4, align 4, !tbaa !6
  %2951 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2951, ptr %6, align 4, !tbaa !6
  br i1 %2854, label %2990, label %2952

2952:                                             ; preds = %2950, %2977
  %2953 = phi i64 [ %2981, %2977 ], [ 1, %2950 ]
  %2954 = getelementptr inbounds i32, ptr %4, i64 %2953
  %2955 = load i32, ptr %2954, align 4, !tbaa !6
  %2956 = getelementptr inbounds i32, ptr %12, i64 %2953
  %2957 = load i32, ptr %2956, align 4, !tbaa !6
  %2958 = add nsw i32 %2957, -1
  %2959 = icmp slt i32 %2955, %2958
  br i1 %2959, label %2960, label %2975

2960:                                             ; preds = %2952
  br i1 %2947, label %2967, label %2961

2961:                                             ; preds = %2960
  %2962 = getelementptr inbounds i32, ptr %7, i64 %2953
  %2963 = load i32, ptr %2962, align 4, !tbaa !6
  %2964 = getelementptr inbounds i32, ptr %6, i64 %2953
  %2965 = load i32, ptr %2964, align 4, !tbaa !6
  %2966 = add nsw i32 %2965, %2963
  store i32 %2966, ptr %2964, align 4, !tbaa !6
  br label %2985

2967:                                             ; preds = %2943, %2960
  %2968 = phi i32 [ %2955, %2960 ], [ %2944, %2943 ]
  %2969 = phi ptr [ %2954, %2960 ], [ %4, %2943 ]
  %2970 = phi i64 [ %2953, %2960 ], [ 0, %2943 ]
  %2971 = add nsw i32 %2968, 1
  store i32 %2971, ptr %2969, align 4, !tbaa !6
  %2972 = getelementptr inbounds i32, ptr %7, i64 %2970
  %2973 = load i32, ptr %2972, align 4, !tbaa !6
  %2974 = getelementptr inbounds i32, ptr %6, i64 %2970
  br label %2985

2975:                                             ; preds = %2952
  %2976 = icmp eq i32 %2955, %2958
  br i1 %2976, label %2977, label %2983

2977:                                             ; preds = %2975
  store i32 0, ptr %2954, align 4, !tbaa !6
  %2978 = getelementptr inbounds i32, ptr %8, i64 %2953
  %2979 = load i32, ptr %2978, align 4, !tbaa !6
  %2980 = getelementptr inbounds i32, ptr %6, i64 %2953
  store i32 %2979, ptr %2980, align 4, !tbaa !6
  %2981 = add nuw nsw i64 %2953, 1
  %2982 = icmp eq i64 %2981, %2852
  br i1 %2982, label %2990, label %2952, !llvm.loop !478

2983:                                             ; preds = %2948, %2975
  %2984 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

2985:                                             ; preds = %2961, %2967
  %2986 = phi ptr [ %2974, %2967 ], [ %2954, %2961 ]
  %2987 = phi i32 [ %2973, %2967 ], [ 1, %2961 ]
  %2988 = load i32, ptr %2986, align 4, !tbaa !6
  %2989 = add nsw i32 %2988, %2987
  store i32 %2989, ptr %2986, align 4, !tbaa !6
  br label %2990

2990:                                             ; preds = %2977, %2985, %2950, %2929
  %2991 = icmp eq i32 %2942, %5
  br i1 %2991, label %3136, label %2855, !llvm.loop !479

2992:                                             ; preds = %2838, %3132
  %2993 = phi double [ 0.000000e+00, %2838 ], [ %3080, %3132 ]
  %2994 = phi i32 [ 0, %2838 ], [ %3081, %3132 ]
  %2995 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2839, label %2996, label %3065

2996:                                             ; preds = %2992, %3055
  %2997 = phi i32 [ %3064, %3055 ], [ 0, %2992 ]
  %2998 = phi i64 [ %3006, %3055 ], [ %2843, %2992 ]
  %2999 = phi i64 [ %3063, %3055 ], [ %2842, %2992 ]
  %3000 = phi i32 [ %3061, %3055 ], [ %2995, %2992 ]
  %3001 = sub i32 %2841, %2997
  %3002 = tail call i32 @llvm.smin.i32(i32 %3001, i32 0)
  %3003 = sub i32 %3001, %3002
  %3004 = zext i32 %3003 to i64
  %3005 = add nuw nsw i64 %3004, 1
  %3006 = add nsw i64 %2998, -1
  %3007 = icmp ult i32 %3003, 31
  br i1 %3007, label %3043, label %3008

3008:                                             ; preds = %2996
  %3009 = and i64 %3005, 8589934560
  %3010 = sub i64 %2999, %3009
  br label %3011

3011:                                             ; preds = %3011, %3008
  %3012 = phi i64 [ 0, %3008 ], [ %3035, %3011 ]
  %3013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3008 ], [ %3031, %3011 ]
  %3014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3008 ], [ %3032, %3011 ]
  %3015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3008 ], [ %3033, %3011 ]
  %3016 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3008 ], [ %3034, %3011 ]
  %3017 = sub i64 %2999, %3012
  %3018 = getelementptr inbounds i32, ptr %11, i64 %3017
  %3019 = getelementptr inbounds i32, ptr %3018, i64 -7
  %3020 = load <8 x i32>, ptr %3019, align 4, !tbaa !6
  %3021 = shufflevector <8 x i32> %3020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3022 = getelementptr inbounds i32, ptr %3018, i64 -15
  %3023 = load <8 x i32>, ptr %3022, align 4, !tbaa !6
  %3024 = shufflevector <8 x i32> %3023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3025 = getelementptr inbounds i32, ptr %3018, i64 -23
  %3026 = load <8 x i32>, ptr %3025, align 4, !tbaa !6
  %3027 = shufflevector <8 x i32> %3026, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3028 = getelementptr inbounds i32, ptr %3018, i64 -31
  %3029 = load <8 x i32>, ptr %3028, align 4, !tbaa !6
  %3030 = shufflevector <8 x i32> %3029, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3031 = mul <8 x i32> %3021, %3013
  %3032 = mul <8 x i32> %3024, %3014
  %3033 = mul <8 x i32> %3027, %3015
  %3034 = mul <8 x i32> %3030, %3016
  %3035 = add nuw i64 %3012, 32
  %3036 = icmp eq i64 %3035, %3009
  br i1 %3036, label %3037, label %3011, !llvm.loop !480

3037:                                             ; preds = %3011
  %3038 = mul <8 x i32> %3032, %3031
  %3039 = mul <8 x i32> %3033, %3038
  %3040 = mul <8 x i32> %3034, %3039
  %3041 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3040)
  %3042 = icmp eq i64 %3005, %3009
  br i1 %3042, label %3055, label %3043

3043:                                             ; preds = %2996, %3037
  %3044 = phi i64 [ %2999, %2996 ], [ %3010, %3037 ]
  %3045 = phi i32 [ 1, %2996 ], [ %3041, %3037 ]
  br label %3046

3046:                                             ; preds = %3043, %3046
  %3047 = phi i64 [ %3052, %3046 ], [ %3044, %3043 ]
  %3048 = phi i32 [ %3051, %3046 ], [ %3045, %3043 ]
  %3049 = getelementptr inbounds i32, ptr %11, i64 %3047
  %3050 = load i32, ptr %3049, align 4, !tbaa !6
  %3051 = mul nsw i32 %3050, %3048
  %3052 = add nsw i64 %3047, -1
  %3053 = trunc i64 %3047 to i32
  %3054 = icmp sgt i32 %3053, 0
  br i1 %3054, label %3046, label %3055, !llvm.loop !481

3055:                                             ; preds = %3046, %3037
  %3056 = phi i32 [ %3041, %3037 ], [ %3051, %3046 ]
  %3057 = and i64 %3006, 4294967295
  %3058 = getelementptr inbounds i32, ptr %6, i64 %3057
  %3059 = load i32, ptr %3058, align 4, !tbaa !6
  %3060 = mul nsw i32 %3059, %3056
  %3061 = add nsw i32 %3060, %3000
  %3062 = icmp sgt i64 %2998, 2
  %3063 = add nsw i64 %2999, -1
  %3064 = add i32 %2997, 1
  br i1 %3062, label %2996, label %3065, !llvm.loop !482

3065:                                             ; preds = %3055, %2992
  %3066 = phi i32 [ %2995, %2992 ], [ %3061, %3055 ]
  %3067 = icmp slt i32 %3066, %5
  br i1 %3067, label %3070, label %3068

3068:                                             ; preds = %3065
  %3069 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3141

3070:                                             ; preds = %3065
  %3071 = sext i32 %3066 to i64
  %3072 = getelementptr inbounds i8, ptr %2514, i64 %3071
  %3073 = load i8, ptr %3072, align 1, !tbaa !12
  %3074 = sitofp i8 %3073 to double
  %3075 = icmp slt i8 %3073, 0
  %3076 = fneg fast double %3074
  %3077 = select i1 %3075, double %3076, double %3074
  %3078 = fmul fast double %3074, %3074
  %3079 = fmul fast double %3078, %3077
  %3080 = fadd fast double %3079, %2993
  store double %3080, ptr %2516, align 8, !tbaa !19
  %3081 = add nuw nsw i32 %2994, 1
  br i1 %2840, label %3082, label %3132

3082:                                             ; preds = %3070
  %3083 = load i32, ptr %4, align 4, !tbaa !6
  %3084 = load i32, ptr %12, align 4, !tbaa !6
  %3085 = add nsw i32 %3084, -1
  %3086 = icmp slt i32 %3083, %3085
  br i1 %3086, label %3109, label %3087

3087:                                             ; preds = %3082
  %3088 = icmp eq i32 %3083, %3085
  br i1 %3088, label %3089, label %3125

3089:                                             ; preds = %3087
  store i32 0, ptr %4, align 4, !tbaa !6
  %3090 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3090, ptr %6, align 4, !tbaa !6
  br i1 %2845, label %3132, label %3091

3091:                                             ; preds = %3089, %3119
  %3092 = phi i64 [ %3123, %3119 ], [ 1, %3089 ]
  %3093 = getelementptr inbounds i32, ptr %4, i64 %3092
  %3094 = load i32, ptr %3093, align 4, !tbaa !6
  %3095 = getelementptr inbounds i32, ptr %12, i64 %3092
  %3096 = load i32, ptr %3095, align 4, !tbaa !6
  %3097 = add nsw i32 %3096, -1
  %3098 = icmp slt i32 %3094, %3097
  br i1 %3098, label %3099, label %3117

3099:                                             ; preds = %3091
  br i1 %3086, label %3109, label %3100

3100:                                             ; preds = %3099
  %3101 = shl i64 %3092, 32
  %3102 = add i64 %3101, -4294967296
  %3103 = ashr exact i64 %3102, 32
  %3104 = getelementptr inbounds i32, ptr %7, i64 %3103
  %3105 = load i32, ptr %3104, align 4, !tbaa !6
  %3106 = getelementptr inbounds i32, ptr %6, i64 %3092
  %3107 = load i32, ptr %3106, align 4, !tbaa !6
  %3108 = add nsw i32 %3107, %3105
  store i32 %3108, ptr %3106, align 4, !tbaa !6
  br label %3127

3109:                                             ; preds = %3082, %3099
  %3110 = phi i32 [ %3094, %3099 ], [ %3083, %3082 ]
  %3111 = phi ptr [ %3093, %3099 ], [ %4, %3082 ]
  %3112 = phi i64 [ %3092, %3099 ], [ 0, %3082 ]
  %3113 = add nsw i32 %3110, 1
  store i32 %3113, ptr %3111, align 4, !tbaa !6
  %3114 = getelementptr inbounds i32, ptr %7, i64 %3112
  %3115 = load i32, ptr %3114, align 4, !tbaa !6
  %3116 = getelementptr inbounds i32, ptr %6, i64 %3112
  br label %3127

3117:                                             ; preds = %3091
  %3118 = icmp eq i32 %3094, %3097
  br i1 %3118, label %3119, label %3125

3119:                                             ; preds = %3117
  store i32 0, ptr %3093, align 4, !tbaa !6
  %3120 = getelementptr inbounds i32, ptr %8, i64 %3092
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %6, i64 %3092
  store i32 %3121, ptr %3122, align 4, !tbaa !6
  %3123 = add nuw nsw i64 %3092, 1
  %3124 = icmp eq i64 %3123, %2843
  br i1 %3124, label %3132, label %3091, !llvm.loop !483

3125:                                             ; preds = %3087, %3117
  %3126 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3141

3127:                                             ; preds = %3100, %3109
  %3128 = phi ptr [ %3116, %3109 ], [ %3093, %3100 ]
  %3129 = phi i32 [ %3115, %3109 ], [ 1, %3100 ]
  %3130 = load i32, ptr %3128, align 4, !tbaa !6
  %3131 = add nsw i32 %3130, %3129
  store i32 %3131, ptr %3128, align 4, !tbaa !6
  br label %3132

3132:                                             ; preds = %3119, %3127, %3089, %3070
  %3133 = icmp eq i32 %3081, %5
  br i1 %3133, label %3136, label %2992, !llvm.loop !484

3134:                                             ; preds = %2526
  %3135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 647, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3136

3136:                                             ; preds = %3132, %2990, %2830, %2688, %2508, %2366, %2206, %2062, %1880, %1738, %1578, %1436, %1256, %1114, %954, %810, %628, %490, %334, %196, %2837, %2846, %2532, %2541, %2213, %2222, %1904, %1913, %1585, %1594, %1280, %1289, %961, %970, %652, %661, %341, %350, %38, %47, %2518, %3134, %1890, %2510, %1266, %1882, %638, %1258, %28, %630, %18
  %3137 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1258 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1882 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %2510 ], [ 0.000000e+00, %1890 ], [ 0.000000e+00, %3134 ], [ 0.000000e+00, %2518 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %661 ], [ 0.000000e+00, %652 ], [ 0.000000e+00, %970 ], [ 0.000000e+00, %961 ], [ 0.000000e+00, %1289 ], [ 0.000000e+00, %1280 ], [ 0.000000e+00, %1594 ], [ 0.000000e+00, %1585 ], [ 0.000000e+00, %1913 ], [ 0.000000e+00, %1904 ], [ 0.000000e+00, %2222 ], [ 0.000000e+00, %2213 ], [ 0.000000e+00, %2541 ], [ 0.000000e+00, %2532 ], [ 0.000000e+00, %2846 ], [ 0.000000e+00, %2837 ], [ %147, %196 ], [ 0.000000e+00, %334 ], [ %441, %490 ], [ 0.000000e+00, %628 ], [ %761, %810 ], [ 0.000000e+00, %954 ], [ %1065, %1114 ], [ 0.000000e+00, %1256 ], [ %1387, %1436 ], [ 0.000000e+00, %1578 ], [ %1689, %1738 ], [ 0.000000e+00, %1880 ], [ %2013, %2062 ], [ 0.000000e+00, %2206 ], [ %2317, %2366 ], [ 0.000000e+00, %2508 ], [ %2639, %2688 ], [ 0.000000e+00, %2830 ], [ %2941, %2990 ], [ 0.000000e+00, %3132 ]
  %3138 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1258 ], [ 1, %638 ], [ 1, %1882 ], [ 1, %1266 ], [ 1, %2510 ], [ 1, %1890 ], [ 1, %3134 ], [ 1, %2518 ], [ 1, %47 ], [ 1, %38 ], [ 1, %350 ], [ 1, %341 ], [ 1, %661 ], [ 1, %652 ], [ 1, %970 ], [ 1, %961 ], [ 1, %1289 ], [ 1, %1280 ], [ 1, %1594 ], [ 1, %1585 ], [ 1, %1913 ], [ 1, %1904 ], [ 1, %2222 ], [ 1, %2213 ], [ 1, %2541 ], [ 1, %2532 ], [ 1, %2846 ], [ 1, %2837 ], [ %54, %196 ], [ %45, %334 ], [ %357, %490 ], [ %348, %628 ], [ %668, %810 ], [ %659, %954 ], [ %977, %1114 ], [ %968, %1256 ], [ %1296, %1436 ], [ %1287, %1578 ], [ %1601, %1738 ], [ %1592, %1880 ], [ %1920, %2062 ], [ %1911, %2206 ], [ %2229, %2366 ], [ %2220, %2508 ], [ %2548, %2688 ], [ %2539, %2830 ], [ %2853, %2990 ], [ %2844, %3132 ]
  %3139 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3138, ptr noundef nonnull @.str.5) #3
  %3140 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3137, ptr noundef nonnull @.str.6) #3
  br label %3141

3141:                                             ; preds = %2681, %2766, %2823, %2983, %3068, %3125, %2055, %2140, %2199, %2359, %2444, %2501, %1429, %1514, %1571, %1731, %1816, %1873, %803, %887, %947, %1107, %1191, %1249, %189, %273, %327, %483, %567, %621, %3136
  %3142 = phi i32 [ 0, %3136 ], [ -1, %621 ], [ -1, %567 ], [ -1, %483 ], [ -1, %327 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1249 ], [ -1, %1191 ], [ -1, %1107 ], [ -1, %947 ], [ -1, %887 ], [ -1, %803 ], [ -1, %1873 ], [ -1, %1816 ], [ -1, %1731 ], [ -1, %1571 ], [ -1, %1514 ], [ -1, %1429 ], [ -1, %2501 ], [ -1, %2444 ], [ -1, %2359 ], [ -1, %2199 ], [ -1, %2140 ], [ -1, %2055 ], [ -1, %3125 ], [ -1, %3068 ], [ -1, %2983 ], [ -1, %2823 ], [ -1, %2766 ], [ -1, %2681 ]
  ret i32 %3142
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3145 [
    i32 101, label %22
    i32 102, label %637
    i32 107, label %1265
    i32 108, label %1889
    i32 109, label %2517
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !79
  %30 = mul i16 %29, %29
  %31 = mul i16 %30, %29
  %32 = trunc i16 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %3145

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %3145

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %3145

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !485

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !486

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !487

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i16, ptr %24, i64 %132
  %136 = load i16, ptr %135, align 2, !tbaa !79
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i16 %136, 255
  %140 = uitofp i16 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %138
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !488

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %3145, label %57, !llvm.loop !489

200:                                              ; preds = %40, %337
  %201 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !490

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !491

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !492

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = sext i32 %273 to i64
  %280 = getelementptr inbounds i16, ptr %24, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !79
  %282 = mul i16 %281, %281
  %283 = mul i16 %282, %281
  %284 = trunc i16 %283 to i8
  %285 = add i8 %278, %284
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %201, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %277
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !493

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %277
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %3145, label %200, !llvm.loop !494

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %3145

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %3145

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !495

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !496

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !497

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = load i8, ptr %26, align 1, !tbaa !12
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds i16, ptr %24, i64 %438
  %440 = load i16, ptr %439, align 2, !tbaa !79
  %441 = mul i16 %440, %440
  %442 = mul i16 %441, %440
  %443 = trunc i16 %442 to i8
  %444 = add i8 %437, %443
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !498

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %3145, label %362, !llvm.loop !499

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !500

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !501

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !502

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

573:                                              ; preds = %568
  %574 = load i8, ptr %26, align 1, !tbaa !12
  %575 = sext i32 %569 to i64
  %576 = getelementptr inbounds i16, ptr %24, i64 %575
  %577 = load i16, ptr %576, align 2, !tbaa !79
  %578 = mul i16 %577, %577
  %579 = mul i16 %578, %577
  %580 = trunc i16 %579 to i8
  %581 = add i8 %574, %580
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !503

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %3145, label %496, !llvm.loop !504

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 889, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3145

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %651

643:                                              ; preds = %637
  %644 = load i16, ptr %639, align 2, !tbaa !79
  %645 = sext i16 %644 to i32
  %646 = icmp slt i16 %644, 0
  %647 = mul nsw i32 %645, %645
  %648 = sub nsw i32 0, %647
  %649 = select i1 %646, i32 %648, i32 %647
  %650 = mul i32 %649, %645
  store i32 %650, ptr %641, align 4, !tbaa !6
  br label %3145

651:                                              ; preds = %637
  switch i32 %1, label %1263 [
    i32 1, label %652
    i32 0, label %961
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !6
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %3145

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %817

666:                                              ; preds = %652
  br i1 %656, label %667, label %3145

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %815
  %676 = phi i32 [ 0, %667 ], [ %767, %815 ]
  %677 = phi double [ 0.000000e+00, %667 ], [ %766, %815 ]
  %678 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %668, label %679, label %748

679:                                              ; preds = %675, %738
  %680 = phi i32 [ %747, %738 ], [ 0, %675 ]
  %681 = phi i64 [ %689, %738 ], [ %672, %675 ]
  %682 = phi i64 [ %746, %738 ], [ %671, %675 ]
  %683 = phi i32 [ %744, %738 ], [ %678, %675 ]
  %684 = sub i32 %670, %680
  %685 = tail call i32 @llvm.smin.i32(i32 %684, i32 0)
  %686 = sub i32 %684, %685
  %687 = zext i32 %686 to i64
  %688 = add nuw nsw i64 %687, 1
  %689 = add nsw i64 %681, -1
  %690 = icmp ult i32 %686, 31
  br i1 %690, label %726, label %691

691:                                              ; preds = %679
  %692 = and i64 %688, 8589934560
  %693 = sub i64 %682, %692
  br label %694

694:                                              ; preds = %694, %691
  %695 = phi i64 [ 0, %691 ], [ %718, %694 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %714, %694 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %715, %694 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %716, %694 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %717, %694 ]
  %700 = sub i64 %682, %695
  %701 = getelementptr inbounds i32, ptr %9, i64 %700
  %702 = getelementptr inbounds i32, ptr %701, i64 -7
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = getelementptr inbounds i32, ptr %701, i64 -15
  %706 = load <8 x i32>, ptr %705, align 4, !tbaa !6
  %707 = shufflevector <8 x i32> %706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %708 = getelementptr inbounds i32, ptr %701, i64 -23
  %709 = load <8 x i32>, ptr %708, align 4, !tbaa !6
  %710 = shufflevector <8 x i32> %709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %711 = getelementptr inbounds i32, ptr %701, i64 -31
  %712 = load <8 x i32>, ptr %711, align 4, !tbaa !6
  %713 = shufflevector <8 x i32> %712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %714 = mul <8 x i32> %704, %696
  %715 = mul <8 x i32> %707, %697
  %716 = mul <8 x i32> %710, %698
  %717 = mul <8 x i32> %713, %699
  %718 = add nuw i64 %695, 32
  %719 = icmp eq i64 %718, %692
  br i1 %719, label %720, label %694, !llvm.loop !505

720:                                              ; preds = %694
  %721 = mul <8 x i32> %715, %714
  %722 = mul <8 x i32> %716, %721
  %723 = mul <8 x i32> %717, %722
  %724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %723)
  %725 = icmp eq i64 %688, %692
  br i1 %725, label %738, label %726

726:                                              ; preds = %679, %720
  %727 = phi i64 [ %682, %679 ], [ %693, %720 ]
  %728 = phi i32 [ 1, %679 ], [ %724, %720 ]
  br label %729

729:                                              ; preds = %726, %729
  %730 = phi i64 [ %735, %729 ], [ %727, %726 ]
  %731 = phi i32 [ %734, %729 ], [ %728, %726 ]
  %732 = getelementptr inbounds i32, ptr %9, i64 %730
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %731
  %735 = add nsw i64 %730, -1
  %736 = trunc i64 %730 to i32
  %737 = icmp sgt i32 %736, 0
  br i1 %737, label %729, label %738, !llvm.loop !506

738:                                              ; preds = %729, %720
  %739 = phi i32 [ %724, %720 ], [ %734, %729 ]
  %740 = and i64 %689, 4294967295
  %741 = getelementptr inbounds i32, ptr %6, i64 %740
  %742 = load i32, ptr %741, align 4, !tbaa !6
  %743 = mul nsw i32 %742, %739
  %744 = add nsw i32 %743, %683
  %745 = icmp sgt i64 %681, 2
  %746 = add nsw i64 %682, -1
  %747 = add i32 %680, 1
  br i1 %745, label %679, label %748, !llvm.loop !507

748:                                              ; preds = %738, %675
  %749 = phi i32 [ %678, %675 ], [ %744, %738 ]
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds double, ptr %2, i64 %750
  %752 = load double, ptr %751, align 8, !tbaa !19
  %753 = getelementptr inbounds i16, ptr %639, i64 %750
  %754 = load i16, ptr %753, align 2, !tbaa !79
  %755 = load i32, ptr %641, align 4, !tbaa !6
  %756 = sitofp i32 %755 to double
  %757 = sitofp i16 %754 to double
  %758 = fmul fast double %752, %757
  %759 = fcmp fast olt double %758, 0.000000e+00
  %760 = fneg fast double %758
  %761 = select nnan ninf i1 %759, double %760, double %758
  %762 = fmul fast double %758, %758
  %763 = fmul fast double %762, %761
  %764 = fadd fast double %763, %756
  %765 = fptosi double %764 to i32
  store i32 %765, ptr %641, align 4, !tbaa !6
  %766 = fadd fast double %752, %677
  %767 = add nuw nsw i32 %676, 1
  br i1 %669, label %768, label %815

768:                                              ; preds = %748
  %769 = load i32, ptr %4, align 4, !tbaa !6
  %770 = load i32, ptr %12, align 4, !tbaa !6
  %771 = add nsw i32 %770, -1
  %772 = icmp slt i32 %769, %771
  br i1 %772, label %792, label %773

773:                                              ; preds = %768
  %774 = icmp eq i32 %769, %771
  br i1 %774, label %775, label %808

775:                                              ; preds = %773
  store i32 0, ptr %4, align 4, !tbaa !6
  %776 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %776, ptr %6, align 4, !tbaa !6
  br i1 %674, label %815, label %777

777:                                              ; preds = %775, %802
  %778 = phi i64 [ %806, %802 ], [ 1, %775 ]
  %779 = getelementptr inbounds i32, ptr %4, i64 %778
  %780 = load i32, ptr %779, align 4, !tbaa !6
  %781 = getelementptr inbounds i32, ptr %12, i64 %778
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = add nsw i32 %782, -1
  %784 = icmp slt i32 %780, %783
  br i1 %784, label %785, label %800

785:                                              ; preds = %777
  br i1 %772, label %792, label %786

786:                                              ; preds = %785
  %787 = getelementptr inbounds i32, ptr %7, i64 %778
  %788 = load i32, ptr %787, align 4, !tbaa !6
  %789 = getelementptr inbounds i32, ptr %6, i64 %778
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = add nsw i32 %790, %788
  store i32 %791, ptr %789, align 4, !tbaa !6
  br label %810

792:                                              ; preds = %768, %785
  %793 = phi i32 [ %780, %785 ], [ %769, %768 ]
  %794 = phi ptr [ %779, %785 ], [ %4, %768 ]
  %795 = phi i64 [ %778, %785 ], [ 0, %768 ]
  %796 = add nsw i32 %793, 1
  store i32 %796, ptr %794, align 4, !tbaa !6
  %797 = getelementptr inbounds i32, ptr %7, i64 %795
  %798 = load i32, ptr %797, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %6, i64 %795
  br label %810

800:                                              ; preds = %777
  %801 = icmp eq i32 %780, %783
  br i1 %801, label %802, label %808

802:                                              ; preds = %800
  store i32 0, ptr %779, align 4, !tbaa !6
  %803 = getelementptr inbounds i32, ptr %8, i64 %778
  %804 = load i32, ptr %803, align 4, !tbaa !6
  %805 = getelementptr inbounds i32, ptr %6, i64 %778
  store i32 %804, ptr %805, align 4, !tbaa !6
  %806 = add nuw nsw i64 %778, 1
  %807 = icmp eq i64 %806, %672
  br i1 %807, label %815, label %777, !llvm.loop !508

808:                                              ; preds = %773, %800
  %809 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

810:                                              ; preds = %786, %792
  %811 = phi ptr [ %799, %792 ], [ %779, %786 ]
  %812 = phi i32 [ %798, %792 ], [ 1, %786 ]
  %813 = load i32, ptr %811, align 4, !tbaa !6
  %814 = add nsw i32 %813, %812
  store i32 %814, ptr %811, align 4, !tbaa !6
  br label %815

815:                                              ; preds = %802, %810, %775, %748
  %816 = icmp eq i32 %767, %5
  br i1 %816, label %3145, label %675, !llvm.loop !509

817:                                              ; preds = %658, %959
  %818 = phi i32 [ 0, %658 ], [ %908, %959 ]
  %819 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %820, label %889

820:                                              ; preds = %817, %879
  %821 = phi i32 [ %888, %879 ], [ 0, %817 ]
  %822 = phi i64 [ %830, %879 ], [ %663, %817 ]
  %823 = phi i64 [ %887, %879 ], [ %662, %817 ]
  %824 = phi i32 [ %885, %879 ], [ %819, %817 ]
  %825 = sub i32 %661, %821
  %826 = tail call i32 @llvm.smin.i32(i32 %825, i32 0)
  %827 = sub i32 %825, %826
  %828 = zext i32 %827 to i64
  %829 = add nuw nsw i64 %828, 1
  %830 = add nsw i64 %822, -1
  %831 = icmp ult i32 %827, 31
  br i1 %831, label %867, label %832

832:                                              ; preds = %820
  %833 = and i64 %829, 8589934560
  %834 = sub i64 %823, %833
  br label %835

835:                                              ; preds = %835, %832
  %836 = phi i64 [ 0, %832 ], [ %859, %835 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %832 ], [ %855, %835 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %832 ], [ %856, %835 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %832 ], [ %857, %835 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %832 ], [ %858, %835 ]
  %841 = sub i64 %823, %836
  %842 = getelementptr inbounds i32, ptr %11, i64 %841
  %843 = getelementptr inbounds i32, ptr %842, i64 -7
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %842, i64 -15
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = getelementptr inbounds i32, ptr %842, i64 -23
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !6
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = getelementptr inbounds i32, ptr %842, i64 -31
  %853 = load <8 x i32>, ptr %852, align 4, !tbaa !6
  %854 = shufflevector <8 x i32> %853, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %855 = mul <8 x i32> %845, %837
  %856 = mul <8 x i32> %848, %838
  %857 = mul <8 x i32> %851, %839
  %858 = mul <8 x i32> %854, %840
  %859 = add nuw i64 %836, 32
  %860 = icmp eq i64 %859, %833
  br i1 %860, label %861, label %835, !llvm.loop !510

861:                                              ; preds = %835
  %862 = mul <8 x i32> %856, %855
  %863 = mul <8 x i32> %857, %862
  %864 = mul <8 x i32> %858, %863
  %865 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %864)
  %866 = icmp eq i64 %829, %833
  br i1 %866, label %879, label %867

867:                                              ; preds = %820, %861
  %868 = phi i64 [ %823, %820 ], [ %834, %861 ]
  %869 = phi i32 [ 1, %820 ], [ %865, %861 ]
  br label %870

870:                                              ; preds = %867, %870
  %871 = phi i64 [ %876, %870 ], [ %868, %867 ]
  %872 = phi i32 [ %875, %870 ], [ %869, %867 ]
  %873 = getelementptr inbounds i32, ptr %11, i64 %871
  %874 = load i32, ptr %873, align 4, !tbaa !6
  %875 = mul nsw i32 %874, %872
  %876 = add nsw i64 %871, -1
  %877 = trunc i64 %871 to i32
  %878 = icmp sgt i32 %877, 0
  br i1 %878, label %870, label %879, !llvm.loop !511

879:                                              ; preds = %870, %861
  %880 = phi i32 [ %865, %861 ], [ %875, %870 ]
  %881 = and i64 %830, 4294967295
  %882 = getelementptr inbounds i32, ptr %6, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !6
  %884 = mul nsw i32 %883, %880
  %885 = add nsw i32 %884, %824
  %886 = icmp sgt i64 %822, 2
  %887 = add nsw i64 %823, -1
  %888 = add i32 %821, 1
  br i1 %886, label %820, label %889, !llvm.loop !512

889:                                              ; preds = %879, %817
  %890 = phi i32 [ %819, %817 ], [ %885, %879 ]
  %891 = icmp slt i32 %890, %5
  br i1 %891, label %894, label %892

892:                                              ; preds = %889
  %893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

894:                                              ; preds = %889
  %895 = sext i32 %890 to i64
  %896 = getelementptr inbounds i16, ptr %639, i64 %895
  %897 = load i16, ptr %896, align 2, !tbaa !79
  %898 = load i32, ptr %641, align 4, !tbaa !6
  %899 = sitofp i32 %898 to double
  %900 = sitofp i16 %897 to double
  %901 = icmp slt i16 %897, 0
  %902 = fneg fast double %900
  %903 = select i1 %901, double %902, double %900
  %904 = fmul fast double %900, %900
  %905 = fmul fast double %904, %903
  %906 = fadd fast double %905, %899
  %907 = fptosi double %906 to i32
  store i32 %907, ptr %641, align 4, !tbaa !6
  %908 = add nuw nsw i32 %818, 1
  br i1 %660, label %909, label %959

909:                                              ; preds = %894
  %910 = load i32, ptr %4, align 4, !tbaa !6
  %911 = load i32, ptr %12, align 4, !tbaa !6
  %912 = add nsw i32 %911, -1
  %913 = icmp slt i32 %910, %912
  br i1 %913, label %936, label %914

914:                                              ; preds = %909
  %915 = icmp eq i32 %910, %912
  br i1 %915, label %916, label %952

916:                                              ; preds = %914
  store i32 0, ptr %4, align 4, !tbaa !6
  %917 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %917, ptr %6, align 4, !tbaa !6
  br i1 %665, label %959, label %918

918:                                              ; preds = %916, %946
  %919 = phi i64 [ %950, %946 ], [ 1, %916 ]
  %920 = getelementptr inbounds i32, ptr %4, i64 %919
  %921 = load i32, ptr %920, align 4, !tbaa !6
  %922 = getelementptr inbounds i32, ptr %12, i64 %919
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = add nsw i32 %923, -1
  %925 = icmp slt i32 %921, %924
  br i1 %925, label %926, label %944

926:                                              ; preds = %918
  br i1 %913, label %936, label %927

927:                                              ; preds = %926
  %928 = shl i64 %919, 32
  %929 = add i64 %928, -4294967296
  %930 = ashr exact i64 %929, 32
  %931 = getelementptr inbounds i32, ptr %7, i64 %930
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %6, i64 %919
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = add nsw i32 %934, %932
  store i32 %935, ptr %933, align 4, !tbaa !6
  br label %954

936:                                              ; preds = %909, %926
  %937 = phi i32 [ %921, %926 ], [ %910, %909 ]
  %938 = phi ptr [ %920, %926 ], [ %4, %909 ]
  %939 = phi i64 [ %919, %926 ], [ 0, %909 ]
  %940 = add nsw i32 %937, 1
  store i32 %940, ptr %938, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %7, i64 %939
  %942 = load i32, ptr %941, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %6, i64 %939
  br label %954

944:                                              ; preds = %918
  %945 = icmp eq i32 %921, %924
  br i1 %945, label %946, label %952

946:                                              ; preds = %944
  store i32 0, ptr %920, align 4, !tbaa !6
  %947 = getelementptr inbounds i32, ptr %8, i64 %919
  %948 = load i32, ptr %947, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %6, i64 %919
  store i32 %948, ptr %949, align 4, !tbaa !6
  %950 = add nuw nsw i64 %919, 1
  %951 = icmp eq i64 %950, %663
  br i1 %951, label %959, label %918, !llvm.loop !513

952:                                              ; preds = %914, %944
  %953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

954:                                              ; preds = %927, %936
  %955 = phi ptr [ %943, %936 ], [ %920, %927 ]
  %956 = phi i32 [ %942, %936 ], [ 1, %927 ]
  %957 = load i32, ptr %955, align 4, !tbaa !6
  %958 = add nsw i32 %957, %956
  store i32 %958, ptr %955, align 4, !tbaa !6
  br label %959

959:                                              ; preds = %946, %954, %916, %894
  %960 = icmp eq i32 %908, %5
  br i1 %960, label %3145, label %817, !llvm.loop !514

961:                                              ; preds = %651
  %962 = getelementptr inbounds i32, ptr %3, i64 %19
  %963 = load i32, ptr %962, align 4, !tbaa !6
  %964 = icmp eq i32 %963, 0
  %965 = icmp sgt i32 %5, 0
  br i1 %964, label %975, label %966

966:                                              ; preds = %961
  br i1 %965, label %967, label %3145

967:                                              ; preds = %966
  %968 = icmp sgt i32 %13, 1
  %969 = icmp sgt i32 %13, 0
  %970 = add i32 %13, -2
  %971 = zext i32 %970 to i64
  %972 = zext i32 %13 to i64
  %973 = add nuw i32 %5, 1
  %974 = icmp eq i32 %13, 1
  br label %1121

975:                                              ; preds = %961
  br i1 %965, label %976, label %3145

976:                                              ; preds = %975
  %977 = icmp sgt i32 %13, 1
  %978 = icmp sgt i32 %13, 0
  %979 = add i32 %13, -2
  %980 = zext i32 %979 to i64
  %981 = zext i32 %13 to i64
  %982 = add nuw i32 %5, 1
  %983 = icmp eq i32 %13, 1
  br label %984

984:                                              ; preds = %976, %1119
  %985 = phi i32 [ 0, %976 ], [ %1071, %1119 ]
  %986 = phi double [ 0.000000e+00, %976 ], [ %1070, %1119 ]
  %987 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %977, label %988, label %1057

988:                                              ; preds = %984, %1047
  %989 = phi i32 [ %1056, %1047 ], [ 0, %984 ]
  %990 = phi i64 [ %998, %1047 ], [ %981, %984 ]
  %991 = phi i64 [ %1055, %1047 ], [ %980, %984 ]
  %992 = phi i32 [ %1053, %1047 ], [ %987, %984 ]
  %993 = sub i32 %979, %989
  %994 = tail call i32 @llvm.smin.i32(i32 %993, i32 0)
  %995 = sub i32 %993, %994
  %996 = zext i32 %995 to i64
  %997 = add nuw nsw i64 %996, 1
  %998 = add nsw i64 %990, -1
  %999 = icmp ult i32 %995, 31
  br i1 %999, label %1035, label %1000

1000:                                             ; preds = %988
  %1001 = and i64 %997, 8589934560
  %1002 = sub i64 %991, %1001
  br label %1003

1003:                                             ; preds = %1003, %1000
  %1004 = phi i64 [ 0, %1000 ], [ %1027, %1003 ]
  %1005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1000 ], [ %1023, %1003 ]
  %1006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1000 ], [ %1024, %1003 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1000 ], [ %1025, %1003 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1000 ], [ %1026, %1003 ]
  %1009 = sub i64 %991, %1004
  %1010 = getelementptr inbounds i32, ptr %9, i64 %1009
  %1011 = getelementptr inbounds i32, ptr %1010, i64 -7
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !6
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = getelementptr inbounds i32, ptr %1010, i64 -15
  %1015 = load <8 x i32>, ptr %1014, align 4, !tbaa !6
  %1016 = shufflevector <8 x i32> %1015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1017 = getelementptr inbounds i32, ptr %1010, i64 -23
  %1018 = load <8 x i32>, ptr %1017, align 4, !tbaa !6
  %1019 = shufflevector <8 x i32> %1018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1020 = getelementptr inbounds i32, ptr %1010, i64 -31
  %1021 = load <8 x i32>, ptr %1020, align 4, !tbaa !6
  %1022 = shufflevector <8 x i32> %1021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1023 = mul <8 x i32> %1013, %1005
  %1024 = mul <8 x i32> %1016, %1006
  %1025 = mul <8 x i32> %1019, %1007
  %1026 = mul <8 x i32> %1022, %1008
  %1027 = add nuw i64 %1004, 32
  %1028 = icmp eq i64 %1027, %1001
  br i1 %1028, label %1029, label %1003, !llvm.loop !515

1029:                                             ; preds = %1003
  %1030 = mul <8 x i32> %1024, %1023
  %1031 = mul <8 x i32> %1025, %1030
  %1032 = mul <8 x i32> %1026, %1031
  %1033 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1032)
  %1034 = icmp eq i64 %997, %1001
  br i1 %1034, label %1047, label %1035

1035:                                             ; preds = %988, %1029
  %1036 = phi i64 [ %991, %988 ], [ %1002, %1029 ]
  %1037 = phi i32 [ 1, %988 ], [ %1033, %1029 ]
  br label %1038

1038:                                             ; preds = %1035, %1038
  %1039 = phi i64 [ %1044, %1038 ], [ %1036, %1035 ]
  %1040 = phi i32 [ %1043, %1038 ], [ %1037, %1035 ]
  %1041 = getelementptr inbounds i32, ptr %9, i64 %1039
  %1042 = load i32, ptr %1041, align 4, !tbaa !6
  %1043 = mul nsw i32 %1042, %1040
  %1044 = add nsw i64 %1039, -1
  %1045 = trunc i64 %1039 to i32
  %1046 = icmp sgt i32 %1045, 0
  br i1 %1046, label %1038, label %1047, !llvm.loop !516

1047:                                             ; preds = %1038, %1029
  %1048 = phi i32 [ %1033, %1029 ], [ %1043, %1038 ]
  %1049 = and i64 %998, 4294967295
  %1050 = getelementptr inbounds i32, ptr %6, i64 %1049
  %1051 = load i32, ptr %1050, align 4, !tbaa !6
  %1052 = mul nsw i32 %1051, %1048
  %1053 = add nsw i32 %1052, %992
  %1054 = icmp sgt i64 %990, 2
  %1055 = add nsw i64 %991, -1
  %1056 = add i32 %989, 1
  br i1 %1054, label %988, label %1057, !llvm.loop !517

1057:                                             ; preds = %1047, %984
  %1058 = phi i32 [ %987, %984 ], [ %1053, %1047 ]
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds i16, ptr %639, i64 %1059
  %1061 = load i16, ptr %1060, align 2, !tbaa !79
  %1062 = sext i16 %1061 to i32
  %1063 = load i32, ptr %641, align 4, !tbaa !6
  %1064 = icmp slt i16 %1061, 0
  %1065 = mul nsw i32 %1062, %1062
  %1066 = sub nsw i32 0, %1065
  %1067 = select i1 %1064, i32 %1066, i32 %1065
  %1068 = mul i32 %1067, %1062
  %1069 = add nsw i32 %1068, %1063
  store i32 %1069, ptr %641, align 4, !tbaa !6
  %1070 = fadd fast double %986, 1.000000e+00
  %1071 = add nuw nsw i32 %985, 1
  br i1 %978, label %1072, label %1119

1072:                                             ; preds = %1057
  %1073 = load i32, ptr %4, align 4, !tbaa !6
  %1074 = load i32, ptr %12, align 4, !tbaa !6
  %1075 = add nsw i32 %1074, -1
  %1076 = icmp slt i32 %1073, %1075
  br i1 %1076, label %1096, label %1077

1077:                                             ; preds = %1072
  %1078 = icmp eq i32 %1073, %1075
  br i1 %1078, label %1079, label %1112

1079:                                             ; preds = %1077
  store i32 0, ptr %4, align 4, !tbaa !6
  %1080 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1080, ptr %6, align 4, !tbaa !6
  br i1 %983, label %1119, label %1081

1081:                                             ; preds = %1079, %1106
  %1082 = phi i64 [ %1110, %1106 ], [ 1, %1079 ]
  %1083 = getelementptr inbounds i32, ptr %4, i64 %1082
  %1084 = load i32, ptr %1083, align 4, !tbaa !6
  %1085 = getelementptr inbounds i32, ptr %12, i64 %1082
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = add nsw i32 %1086, -1
  %1088 = icmp slt i32 %1084, %1087
  br i1 %1088, label %1089, label %1104

1089:                                             ; preds = %1081
  br i1 %1076, label %1096, label %1090

1090:                                             ; preds = %1089
  %1091 = getelementptr inbounds i32, ptr %7, i64 %1082
  %1092 = load i32, ptr %1091, align 4, !tbaa !6
  %1093 = getelementptr inbounds i32, ptr %6, i64 %1082
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = add nsw i32 %1094, %1092
  store i32 %1095, ptr %1093, align 4, !tbaa !6
  br label %1114

1096:                                             ; preds = %1072, %1089
  %1097 = phi i32 [ %1084, %1089 ], [ %1073, %1072 ]
  %1098 = phi ptr [ %1083, %1089 ], [ %4, %1072 ]
  %1099 = phi i64 [ %1082, %1089 ], [ 0, %1072 ]
  %1100 = add nsw i32 %1097, 1
  store i32 %1100, ptr %1098, align 4, !tbaa !6
  %1101 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1102 = load i32, ptr %1101, align 4, !tbaa !6
  %1103 = getelementptr inbounds i32, ptr %6, i64 %1099
  br label %1114

1104:                                             ; preds = %1081
  %1105 = icmp eq i32 %1084, %1087
  br i1 %1105, label %1106, label %1112

1106:                                             ; preds = %1104
  store i32 0, ptr %1083, align 4, !tbaa !6
  %1107 = getelementptr inbounds i32, ptr %8, i64 %1082
  %1108 = load i32, ptr %1107, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %6, i64 %1082
  store i32 %1108, ptr %1109, align 4, !tbaa !6
  %1110 = add nuw nsw i64 %1082, 1
  %1111 = icmp eq i64 %1110, %981
  br i1 %1111, label %1119, label %1081, !llvm.loop !518

1112:                                             ; preds = %1077, %1104
  %1113 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1114:                                             ; preds = %1090, %1096
  %1115 = phi ptr [ %1103, %1096 ], [ %1083, %1090 ]
  %1116 = phi i32 [ %1102, %1096 ], [ 1, %1090 ]
  %1117 = load i32, ptr %1115, align 4, !tbaa !6
  %1118 = add nsw i32 %1117, %1116
  store i32 %1118, ptr %1115, align 4, !tbaa !6
  br label %1119

1119:                                             ; preds = %1106, %1114, %1079, %1057
  %1120 = icmp eq i32 %1071, %5
  br i1 %1120, label %3145, label %984, !llvm.loop !519

1121:                                             ; preds = %967, %1261
  %1122 = phi i32 [ 0, %967 ], [ %1210, %1261 ]
  %1123 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %968, label %1124, label %1193

1124:                                             ; preds = %1121, %1183
  %1125 = phi i32 [ %1192, %1183 ], [ 0, %1121 ]
  %1126 = phi i64 [ %1134, %1183 ], [ %972, %1121 ]
  %1127 = phi i64 [ %1191, %1183 ], [ %971, %1121 ]
  %1128 = phi i32 [ %1189, %1183 ], [ %1123, %1121 ]
  %1129 = sub i32 %970, %1125
  %1130 = tail call i32 @llvm.smin.i32(i32 %1129, i32 0)
  %1131 = sub i32 %1129, %1130
  %1132 = zext i32 %1131 to i64
  %1133 = add nuw nsw i64 %1132, 1
  %1134 = add nsw i64 %1126, -1
  %1135 = icmp ult i32 %1131, 31
  br i1 %1135, label %1171, label %1136

1136:                                             ; preds = %1124
  %1137 = and i64 %1133, 8589934560
  %1138 = sub i64 %1127, %1137
  br label %1139

1139:                                             ; preds = %1139, %1136
  %1140 = phi i64 [ 0, %1136 ], [ %1163, %1139 ]
  %1141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1136 ], [ %1159, %1139 ]
  %1142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1136 ], [ %1160, %1139 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1136 ], [ %1161, %1139 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1136 ], [ %1162, %1139 ]
  %1145 = sub i64 %1127, %1140
  %1146 = getelementptr inbounds i32, ptr %11, i64 %1145
  %1147 = getelementptr inbounds i32, ptr %1146, i64 -7
  %1148 = load <8 x i32>, ptr %1147, align 4, !tbaa !6
  %1149 = shufflevector <8 x i32> %1148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1150 = getelementptr inbounds i32, ptr %1146, i64 -15
  %1151 = load <8 x i32>, ptr %1150, align 4, !tbaa !6
  %1152 = shufflevector <8 x i32> %1151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1153 = getelementptr inbounds i32, ptr %1146, i64 -23
  %1154 = load <8 x i32>, ptr %1153, align 4, !tbaa !6
  %1155 = shufflevector <8 x i32> %1154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1156 = getelementptr inbounds i32, ptr %1146, i64 -31
  %1157 = load <8 x i32>, ptr %1156, align 4, !tbaa !6
  %1158 = shufflevector <8 x i32> %1157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1159 = mul <8 x i32> %1149, %1141
  %1160 = mul <8 x i32> %1152, %1142
  %1161 = mul <8 x i32> %1155, %1143
  %1162 = mul <8 x i32> %1158, %1144
  %1163 = add nuw i64 %1140, 32
  %1164 = icmp eq i64 %1163, %1137
  br i1 %1164, label %1165, label %1139, !llvm.loop !520

1165:                                             ; preds = %1139
  %1166 = mul <8 x i32> %1160, %1159
  %1167 = mul <8 x i32> %1161, %1166
  %1168 = mul <8 x i32> %1162, %1167
  %1169 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1168)
  %1170 = icmp eq i64 %1133, %1137
  br i1 %1170, label %1183, label %1171

1171:                                             ; preds = %1124, %1165
  %1172 = phi i64 [ %1127, %1124 ], [ %1138, %1165 ]
  %1173 = phi i32 [ 1, %1124 ], [ %1169, %1165 ]
  br label %1174

1174:                                             ; preds = %1171, %1174
  %1175 = phi i64 [ %1180, %1174 ], [ %1172, %1171 ]
  %1176 = phi i32 [ %1179, %1174 ], [ %1173, %1171 ]
  %1177 = getelementptr inbounds i32, ptr %11, i64 %1175
  %1178 = load i32, ptr %1177, align 4, !tbaa !6
  %1179 = mul nsw i32 %1178, %1176
  %1180 = add nsw i64 %1175, -1
  %1181 = trunc i64 %1175 to i32
  %1182 = icmp sgt i32 %1181, 0
  br i1 %1182, label %1174, label %1183, !llvm.loop !521

1183:                                             ; preds = %1174, %1165
  %1184 = phi i32 [ %1169, %1165 ], [ %1179, %1174 ]
  %1185 = and i64 %1134, 4294967295
  %1186 = getelementptr inbounds i32, ptr %6, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !6
  %1188 = mul nsw i32 %1187, %1184
  %1189 = add nsw i32 %1188, %1128
  %1190 = icmp sgt i64 %1126, 2
  %1191 = add nsw i64 %1127, -1
  %1192 = add i32 %1125, 1
  br i1 %1190, label %1124, label %1193, !llvm.loop !522

1193:                                             ; preds = %1183, %1121
  %1194 = phi i32 [ %1123, %1121 ], [ %1189, %1183 ]
  %1195 = icmp slt i32 %1194, %5
  br i1 %1195, label %1198, label %1196

1196:                                             ; preds = %1193
  %1197 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

1198:                                             ; preds = %1193
  %1199 = sext i32 %1194 to i64
  %1200 = getelementptr inbounds i16, ptr %639, i64 %1199
  %1201 = load i16, ptr %1200, align 2, !tbaa !79
  %1202 = sext i16 %1201 to i32
  %1203 = load i32, ptr %641, align 4, !tbaa !6
  %1204 = icmp slt i16 %1201, 0
  %1205 = mul nsw i32 %1202, %1202
  %1206 = sub nsw i32 0, %1205
  %1207 = select i1 %1204, i32 %1206, i32 %1205
  %1208 = mul i32 %1207, %1202
  %1209 = add nsw i32 %1208, %1203
  store i32 %1209, ptr %641, align 4, !tbaa !6
  %1210 = add nuw nsw i32 %1122, 1
  br i1 %969, label %1211, label %1261

1211:                                             ; preds = %1198
  %1212 = load i32, ptr %4, align 4, !tbaa !6
  %1213 = load i32, ptr %12, align 4, !tbaa !6
  %1214 = add nsw i32 %1213, -1
  %1215 = icmp slt i32 %1212, %1214
  br i1 %1215, label %1238, label %1216

1216:                                             ; preds = %1211
  %1217 = icmp eq i32 %1212, %1214
  br i1 %1217, label %1218, label %1254

1218:                                             ; preds = %1216
  store i32 0, ptr %4, align 4, !tbaa !6
  %1219 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1219, ptr %6, align 4, !tbaa !6
  br i1 %974, label %1261, label %1220

1220:                                             ; preds = %1218, %1248
  %1221 = phi i64 [ %1252, %1248 ], [ 1, %1218 ]
  %1222 = getelementptr inbounds i32, ptr %4, i64 %1221
  %1223 = load i32, ptr %1222, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %12, i64 %1221
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = add nsw i32 %1225, -1
  %1227 = icmp slt i32 %1223, %1226
  br i1 %1227, label %1228, label %1246

1228:                                             ; preds = %1220
  br i1 %1215, label %1238, label %1229

1229:                                             ; preds = %1228
  %1230 = shl i64 %1221, 32
  %1231 = add i64 %1230, -4294967296
  %1232 = ashr exact i64 %1231, 32
  %1233 = getelementptr inbounds i32, ptr %7, i64 %1232
  %1234 = load i32, ptr %1233, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %6, i64 %1221
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = add nsw i32 %1236, %1234
  store i32 %1237, ptr %1235, align 4, !tbaa !6
  br label %1256

1238:                                             ; preds = %1211, %1228
  %1239 = phi i32 [ %1223, %1228 ], [ %1212, %1211 ]
  %1240 = phi ptr [ %1222, %1228 ], [ %4, %1211 ]
  %1241 = phi i64 [ %1221, %1228 ], [ 0, %1211 ]
  %1242 = add nsw i32 %1239, 1
  store i32 %1242, ptr %1240, align 4, !tbaa !6
  %1243 = getelementptr inbounds i32, ptr %7, i64 %1241
  %1244 = load i32, ptr %1243, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %6, i64 %1241
  br label %1256

1246:                                             ; preds = %1220
  %1247 = icmp eq i32 %1223, %1226
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1246
  store i32 0, ptr %1222, align 4, !tbaa !6
  %1249 = getelementptr inbounds i32, ptr %8, i64 %1221
  %1250 = load i32, ptr %1249, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %6, i64 %1221
  store i32 %1250, ptr %1251, align 4, !tbaa !6
  %1252 = add nuw nsw i64 %1221, 1
  %1253 = icmp eq i64 %1252, %972
  br i1 %1253, label %1261, label %1220, !llvm.loop !523

1254:                                             ; preds = %1216, %1246
  %1255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1256:                                             ; preds = %1229, %1238
  %1257 = phi ptr [ %1245, %1238 ], [ %1222, %1229 ]
  %1258 = phi i32 [ %1244, %1238 ], [ 1, %1229 ]
  %1259 = load i32, ptr %1257, align 4, !tbaa !6
  %1260 = add nsw i32 %1259, %1258
  store i32 %1260, ptr %1257, align 4, !tbaa !6
  br label %1261

1261:                                             ; preds = %1248, %1256, %1218, %1198
  %1262 = icmp eq i32 %1210, %5
  br i1 %1262, label %3145, label %1121, !llvm.loop !524

1263:                                             ; preds = %651
  %1264 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 892, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3145

1265:                                             ; preds = %18
  %1266 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1267 = load ptr, ptr %1266, align 8, !tbaa !10
  %1268 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1269, align 8, !tbaa !19
  %1270 = icmp eq i32 %13, 0
  br i1 %1270, label %1271, label %1279

1271:                                             ; preds = %1265
  %1272 = load i16, ptr %1267, align 2, !tbaa !79
  %1273 = sitofp i16 %1272 to double
  %1274 = icmp slt i16 %1272, 0
  %1275 = fneg fast double %1273
  %1276 = select i1 %1274, double %1275, double %1273
  %1277 = fmul fast double %1273, %1273
  %1278 = fmul fast double %1277, %1276
  store double %1278, ptr %1269, align 8, !tbaa !19
  br label %3145

1279:                                             ; preds = %1265
  switch i32 %1, label %1887 [
    i32 1, label %1280
    i32 0, label %1585
  ]

1280:                                             ; preds = %1279
  %1281 = getelementptr inbounds i32, ptr %3, i64 %19
  %1282 = load i32, ptr %1281, align 4, !tbaa !6
  %1283 = icmp eq i32 %1282, 0
  %1284 = icmp sgt i32 %5, 0
  br i1 %1283, label %1294, label %1285

1285:                                             ; preds = %1280
  br i1 %1284, label %1286, label %3145

1286:                                             ; preds = %1285
  %1287 = icmp sgt i32 %13, 1
  %1288 = icmp sgt i32 %13, 0
  %1289 = add i32 %13, -2
  %1290 = zext i32 %1289 to i64
  %1291 = zext i32 %13 to i64
  %1292 = add nuw i32 %5, 1
  %1293 = icmp eq i32 %13, 1
  br label %1443

1294:                                             ; preds = %1280
  br i1 %1284, label %1295, label %3145

1295:                                             ; preds = %1294
  %1296 = icmp sgt i32 %13, 1
  %1297 = icmp sgt i32 %13, 0
  %1298 = add i32 %13, -2
  %1299 = zext i32 %1298 to i64
  %1300 = zext i32 %13 to i64
  %1301 = add nuw i32 %5, 1
  %1302 = icmp eq i32 %13, 1
  br label %1303

1303:                                             ; preds = %1295, %1441
  %1304 = phi double [ 0.000000e+00, %1295 ], [ %1391, %1441 ]
  %1305 = phi i32 [ 0, %1295 ], [ %1393, %1441 ]
  %1306 = phi double [ 0.000000e+00, %1295 ], [ %1392, %1441 ]
  %1307 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1296, label %1308, label %1377

1308:                                             ; preds = %1303, %1367
  %1309 = phi i32 [ %1376, %1367 ], [ 0, %1303 ]
  %1310 = phi i64 [ %1318, %1367 ], [ %1300, %1303 ]
  %1311 = phi i64 [ %1375, %1367 ], [ %1299, %1303 ]
  %1312 = phi i32 [ %1373, %1367 ], [ %1307, %1303 ]
  %1313 = sub i32 %1298, %1309
  %1314 = tail call i32 @llvm.smin.i32(i32 %1313, i32 0)
  %1315 = sub i32 %1313, %1314
  %1316 = zext i32 %1315 to i64
  %1317 = add nuw nsw i64 %1316, 1
  %1318 = add nsw i64 %1310, -1
  %1319 = icmp ult i32 %1315, 31
  br i1 %1319, label %1355, label %1320

1320:                                             ; preds = %1308
  %1321 = and i64 %1317, 8589934560
  %1322 = sub i64 %1311, %1321
  br label %1323

1323:                                             ; preds = %1323, %1320
  %1324 = phi i64 [ 0, %1320 ], [ %1347, %1323 ]
  %1325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1320 ], [ %1343, %1323 ]
  %1326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1320 ], [ %1344, %1323 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1320 ], [ %1345, %1323 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1320 ], [ %1346, %1323 ]
  %1329 = sub i64 %1311, %1324
  %1330 = getelementptr inbounds i32, ptr %9, i64 %1329
  %1331 = getelementptr inbounds i32, ptr %1330, i64 -7
  %1332 = load <8 x i32>, ptr %1331, align 4, !tbaa !6
  %1333 = shufflevector <8 x i32> %1332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1334 = getelementptr inbounds i32, ptr %1330, i64 -15
  %1335 = load <8 x i32>, ptr %1334, align 4, !tbaa !6
  %1336 = shufflevector <8 x i32> %1335, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1337 = getelementptr inbounds i32, ptr %1330, i64 -23
  %1338 = load <8 x i32>, ptr %1337, align 4, !tbaa !6
  %1339 = shufflevector <8 x i32> %1338, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1340 = getelementptr inbounds i32, ptr %1330, i64 -31
  %1341 = load <8 x i32>, ptr %1340, align 4, !tbaa !6
  %1342 = shufflevector <8 x i32> %1341, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1343 = mul <8 x i32> %1333, %1325
  %1344 = mul <8 x i32> %1336, %1326
  %1345 = mul <8 x i32> %1339, %1327
  %1346 = mul <8 x i32> %1342, %1328
  %1347 = add nuw i64 %1324, 32
  %1348 = icmp eq i64 %1347, %1321
  br i1 %1348, label %1349, label %1323, !llvm.loop !525

1349:                                             ; preds = %1323
  %1350 = mul <8 x i32> %1344, %1343
  %1351 = mul <8 x i32> %1345, %1350
  %1352 = mul <8 x i32> %1346, %1351
  %1353 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1352)
  %1354 = icmp eq i64 %1317, %1321
  br i1 %1354, label %1367, label %1355

1355:                                             ; preds = %1308, %1349
  %1356 = phi i64 [ %1311, %1308 ], [ %1322, %1349 ]
  %1357 = phi i32 [ 1, %1308 ], [ %1353, %1349 ]
  br label %1358

1358:                                             ; preds = %1355, %1358
  %1359 = phi i64 [ %1364, %1358 ], [ %1356, %1355 ]
  %1360 = phi i32 [ %1363, %1358 ], [ %1357, %1355 ]
  %1361 = getelementptr inbounds i32, ptr %9, i64 %1359
  %1362 = load i32, ptr %1361, align 4, !tbaa !6
  %1363 = mul nsw i32 %1362, %1360
  %1364 = add nsw i64 %1359, -1
  %1365 = trunc i64 %1359 to i32
  %1366 = icmp sgt i32 %1365, 0
  br i1 %1366, label %1358, label %1367, !llvm.loop !526

1367:                                             ; preds = %1358, %1349
  %1368 = phi i32 [ %1353, %1349 ], [ %1363, %1358 ]
  %1369 = and i64 %1318, 4294967295
  %1370 = getelementptr inbounds i32, ptr %6, i64 %1369
  %1371 = load i32, ptr %1370, align 4, !tbaa !6
  %1372 = mul nsw i32 %1371, %1368
  %1373 = add nsw i32 %1372, %1312
  %1374 = icmp sgt i64 %1310, 2
  %1375 = add nsw i64 %1311, -1
  %1376 = add i32 %1309, 1
  br i1 %1374, label %1308, label %1377, !llvm.loop !527

1377:                                             ; preds = %1367, %1303
  %1378 = phi i32 [ %1307, %1303 ], [ %1373, %1367 ]
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds double, ptr %2, i64 %1379
  %1381 = load double, ptr %1380, align 8, !tbaa !19
  %1382 = getelementptr inbounds i16, ptr %1267, i64 %1379
  %1383 = load i16, ptr %1382, align 2, !tbaa !79
  %1384 = sitofp i16 %1383 to double
  %1385 = fmul fast double %1381, %1384
  %1386 = fcmp fast olt double %1385, 0.000000e+00
  %1387 = fneg fast double %1385
  %1388 = select nnan ninf i1 %1386, double %1387, double %1385
  %1389 = fmul fast double %1385, %1385
  %1390 = fmul fast double %1389, %1388
  %1391 = fadd fast double %1390, %1304
  store double %1391, ptr %1269, align 8, !tbaa !19
  %1392 = fadd fast double %1381, %1306
  %1393 = add nuw nsw i32 %1305, 1
  br i1 %1297, label %1394, label %1441

1394:                                             ; preds = %1377
  %1395 = load i32, ptr %4, align 4, !tbaa !6
  %1396 = load i32, ptr %12, align 4, !tbaa !6
  %1397 = add nsw i32 %1396, -1
  %1398 = icmp slt i32 %1395, %1397
  br i1 %1398, label %1418, label %1399

1399:                                             ; preds = %1394
  %1400 = icmp eq i32 %1395, %1397
  br i1 %1400, label %1401, label %1434

1401:                                             ; preds = %1399
  store i32 0, ptr %4, align 4, !tbaa !6
  %1402 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1402, ptr %6, align 4, !tbaa !6
  br i1 %1302, label %1441, label %1403

1403:                                             ; preds = %1401, %1428
  %1404 = phi i64 [ %1432, %1428 ], [ 1, %1401 ]
  %1405 = getelementptr inbounds i32, ptr %4, i64 %1404
  %1406 = load i32, ptr %1405, align 4, !tbaa !6
  %1407 = getelementptr inbounds i32, ptr %12, i64 %1404
  %1408 = load i32, ptr %1407, align 4, !tbaa !6
  %1409 = add nsw i32 %1408, -1
  %1410 = icmp slt i32 %1406, %1409
  br i1 %1410, label %1411, label %1426

1411:                                             ; preds = %1403
  br i1 %1398, label %1418, label %1412

1412:                                             ; preds = %1411
  %1413 = getelementptr inbounds i32, ptr %7, i64 %1404
  %1414 = load i32, ptr %1413, align 4, !tbaa !6
  %1415 = getelementptr inbounds i32, ptr %6, i64 %1404
  %1416 = load i32, ptr %1415, align 4, !tbaa !6
  %1417 = add nsw i32 %1416, %1414
  store i32 %1417, ptr %1415, align 4, !tbaa !6
  br label %1436

1418:                                             ; preds = %1394, %1411
  %1419 = phi i32 [ %1406, %1411 ], [ %1395, %1394 ]
  %1420 = phi ptr [ %1405, %1411 ], [ %4, %1394 ]
  %1421 = phi i64 [ %1404, %1411 ], [ 0, %1394 ]
  %1422 = add nsw i32 %1419, 1
  store i32 %1422, ptr %1420, align 4, !tbaa !6
  %1423 = getelementptr inbounds i32, ptr %7, i64 %1421
  %1424 = load i32, ptr %1423, align 4, !tbaa !6
  %1425 = getelementptr inbounds i32, ptr %6, i64 %1421
  br label %1436

1426:                                             ; preds = %1403
  %1427 = icmp eq i32 %1406, %1409
  br i1 %1427, label %1428, label %1434

1428:                                             ; preds = %1426
  store i32 0, ptr %1405, align 4, !tbaa !6
  %1429 = getelementptr inbounds i32, ptr %8, i64 %1404
  %1430 = load i32, ptr %1429, align 4, !tbaa !6
  %1431 = getelementptr inbounds i32, ptr %6, i64 %1404
  store i32 %1430, ptr %1431, align 4, !tbaa !6
  %1432 = add nuw nsw i64 %1404, 1
  %1433 = icmp eq i64 %1432, %1300
  br i1 %1433, label %1441, label %1403, !llvm.loop !528

1434:                                             ; preds = %1399, %1426
  %1435 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1436:                                             ; preds = %1412, %1418
  %1437 = phi ptr [ %1425, %1418 ], [ %1405, %1412 ]
  %1438 = phi i32 [ %1424, %1418 ], [ 1, %1412 ]
  %1439 = load i32, ptr %1437, align 4, !tbaa !6
  %1440 = add nsw i32 %1439, %1438
  store i32 %1440, ptr %1437, align 4, !tbaa !6
  br label %1441

1441:                                             ; preds = %1428, %1436, %1401, %1377
  %1442 = icmp eq i32 %1393, %5
  br i1 %1442, label %3145, label %1303, !llvm.loop !529

1443:                                             ; preds = %1286, %1583
  %1444 = phi double [ 0.000000e+00, %1286 ], [ %1531, %1583 ]
  %1445 = phi i32 [ 0, %1286 ], [ %1532, %1583 ]
  %1446 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1287, label %1447, label %1516

1447:                                             ; preds = %1443, %1506
  %1448 = phi i32 [ %1515, %1506 ], [ 0, %1443 ]
  %1449 = phi i64 [ %1457, %1506 ], [ %1291, %1443 ]
  %1450 = phi i64 [ %1514, %1506 ], [ %1290, %1443 ]
  %1451 = phi i32 [ %1512, %1506 ], [ %1446, %1443 ]
  %1452 = sub i32 %1289, %1448
  %1453 = tail call i32 @llvm.smin.i32(i32 %1452, i32 0)
  %1454 = sub i32 %1452, %1453
  %1455 = zext i32 %1454 to i64
  %1456 = add nuw nsw i64 %1455, 1
  %1457 = add nsw i64 %1449, -1
  %1458 = icmp ult i32 %1454, 31
  br i1 %1458, label %1494, label %1459

1459:                                             ; preds = %1447
  %1460 = and i64 %1456, 8589934560
  %1461 = sub i64 %1450, %1460
  br label %1462

1462:                                             ; preds = %1462, %1459
  %1463 = phi i64 [ 0, %1459 ], [ %1486, %1462 ]
  %1464 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1459 ], [ %1482, %1462 ]
  %1465 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1459 ], [ %1483, %1462 ]
  %1466 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1459 ], [ %1484, %1462 ]
  %1467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1459 ], [ %1485, %1462 ]
  %1468 = sub i64 %1450, %1463
  %1469 = getelementptr inbounds i32, ptr %11, i64 %1468
  %1470 = getelementptr inbounds i32, ptr %1469, i64 -7
  %1471 = load <8 x i32>, ptr %1470, align 4, !tbaa !6
  %1472 = shufflevector <8 x i32> %1471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1473 = getelementptr inbounds i32, ptr %1469, i64 -15
  %1474 = load <8 x i32>, ptr %1473, align 4, !tbaa !6
  %1475 = shufflevector <8 x i32> %1474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1476 = getelementptr inbounds i32, ptr %1469, i64 -23
  %1477 = load <8 x i32>, ptr %1476, align 4, !tbaa !6
  %1478 = shufflevector <8 x i32> %1477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1479 = getelementptr inbounds i32, ptr %1469, i64 -31
  %1480 = load <8 x i32>, ptr %1479, align 4, !tbaa !6
  %1481 = shufflevector <8 x i32> %1480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1482 = mul <8 x i32> %1472, %1464
  %1483 = mul <8 x i32> %1475, %1465
  %1484 = mul <8 x i32> %1478, %1466
  %1485 = mul <8 x i32> %1481, %1467
  %1486 = add nuw i64 %1463, 32
  %1487 = icmp eq i64 %1486, %1460
  br i1 %1487, label %1488, label %1462, !llvm.loop !530

1488:                                             ; preds = %1462
  %1489 = mul <8 x i32> %1483, %1482
  %1490 = mul <8 x i32> %1484, %1489
  %1491 = mul <8 x i32> %1485, %1490
  %1492 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1491)
  %1493 = icmp eq i64 %1456, %1460
  br i1 %1493, label %1506, label %1494

1494:                                             ; preds = %1447, %1488
  %1495 = phi i64 [ %1450, %1447 ], [ %1461, %1488 ]
  %1496 = phi i32 [ 1, %1447 ], [ %1492, %1488 ]
  br label %1497

1497:                                             ; preds = %1494, %1497
  %1498 = phi i64 [ %1503, %1497 ], [ %1495, %1494 ]
  %1499 = phi i32 [ %1502, %1497 ], [ %1496, %1494 ]
  %1500 = getelementptr inbounds i32, ptr %11, i64 %1498
  %1501 = load i32, ptr %1500, align 4, !tbaa !6
  %1502 = mul nsw i32 %1501, %1499
  %1503 = add nsw i64 %1498, -1
  %1504 = trunc i64 %1498 to i32
  %1505 = icmp sgt i32 %1504, 0
  br i1 %1505, label %1497, label %1506, !llvm.loop !531

1506:                                             ; preds = %1497, %1488
  %1507 = phi i32 [ %1492, %1488 ], [ %1502, %1497 ]
  %1508 = and i64 %1457, 4294967295
  %1509 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !6
  %1511 = mul nsw i32 %1510, %1507
  %1512 = add nsw i32 %1511, %1451
  %1513 = icmp sgt i64 %1449, 2
  %1514 = add nsw i64 %1450, -1
  %1515 = add i32 %1448, 1
  br i1 %1513, label %1447, label %1516, !llvm.loop !532

1516:                                             ; preds = %1506, %1443
  %1517 = phi i32 [ %1446, %1443 ], [ %1512, %1506 ]
  %1518 = icmp slt i32 %1517, %5
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1516
  %1520 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

1521:                                             ; preds = %1516
  %1522 = sext i32 %1517 to i64
  %1523 = getelementptr inbounds i16, ptr %1267, i64 %1522
  %1524 = load i16, ptr %1523, align 2, !tbaa !79
  %1525 = sitofp i16 %1524 to double
  %1526 = icmp slt i16 %1524, 0
  %1527 = fneg fast double %1525
  %1528 = select i1 %1526, double %1527, double %1525
  %1529 = fmul fast double %1525, %1525
  %1530 = fmul fast double %1529, %1528
  %1531 = fadd fast double %1530, %1444
  store double %1531, ptr %1269, align 8, !tbaa !19
  %1532 = add nuw nsw i32 %1445, 1
  br i1 %1288, label %1533, label %1583

1533:                                             ; preds = %1521
  %1534 = load i32, ptr %4, align 4, !tbaa !6
  %1535 = load i32, ptr %12, align 4, !tbaa !6
  %1536 = add nsw i32 %1535, -1
  %1537 = icmp slt i32 %1534, %1536
  br i1 %1537, label %1560, label %1538

1538:                                             ; preds = %1533
  %1539 = icmp eq i32 %1534, %1536
  br i1 %1539, label %1540, label %1576

1540:                                             ; preds = %1538
  store i32 0, ptr %4, align 4, !tbaa !6
  %1541 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1541, ptr %6, align 4, !tbaa !6
  br i1 %1293, label %1583, label %1542

1542:                                             ; preds = %1540, %1570
  %1543 = phi i64 [ %1574, %1570 ], [ 1, %1540 ]
  %1544 = getelementptr inbounds i32, ptr %4, i64 %1543
  %1545 = load i32, ptr %1544, align 4, !tbaa !6
  %1546 = getelementptr inbounds i32, ptr %12, i64 %1543
  %1547 = load i32, ptr %1546, align 4, !tbaa !6
  %1548 = add nsw i32 %1547, -1
  %1549 = icmp slt i32 %1545, %1548
  br i1 %1549, label %1550, label %1568

1550:                                             ; preds = %1542
  br i1 %1537, label %1560, label %1551

1551:                                             ; preds = %1550
  %1552 = shl i64 %1543, 32
  %1553 = add i64 %1552, -4294967296
  %1554 = ashr exact i64 %1553, 32
  %1555 = getelementptr inbounds i32, ptr %7, i64 %1554
  %1556 = load i32, ptr %1555, align 4, !tbaa !6
  %1557 = getelementptr inbounds i32, ptr %6, i64 %1543
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = add nsw i32 %1558, %1556
  store i32 %1559, ptr %1557, align 4, !tbaa !6
  br label %1578

1560:                                             ; preds = %1533, %1550
  %1561 = phi i32 [ %1545, %1550 ], [ %1534, %1533 ]
  %1562 = phi ptr [ %1544, %1550 ], [ %4, %1533 ]
  %1563 = phi i64 [ %1543, %1550 ], [ 0, %1533 ]
  %1564 = add nsw i32 %1561, 1
  store i32 %1564, ptr %1562, align 4, !tbaa !6
  %1565 = getelementptr inbounds i32, ptr %7, i64 %1563
  %1566 = load i32, ptr %1565, align 4, !tbaa !6
  %1567 = getelementptr inbounds i32, ptr %6, i64 %1563
  br label %1578

1568:                                             ; preds = %1542
  %1569 = icmp eq i32 %1545, %1548
  br i1 %1569, label %1570, label %1576

1570:                                             ; preds = %1568
  store i32 0, ptr %1544, align 4, !tbaa !6
  %1571 = getelementptr inbounds i32, ptr %8, i64 %1543
  %1572 = load i32, ptr %1571, align 4, !tbaa !6
  %1573 = getelementptr inbounds i32, ptr %6, i64 %1543
  store i32 %1572, ptr %1573, align 4, !tbaa !6
  %1574 = add nuw nsw i64 %1543, 1
  %1575 = icmp eq i64 %1574, %1291
  br i1 %1575, label %1583, label %1542, !llvm.loop !533

1576:                                             ; preds = %1538, %1568
  %1577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1578:                                             ; preds = %1551, %1560
  %1579 = phi ptr [ %1567, %1560 ], [ %1544, %1551 ]
  %1580 = phi i32 [ %1566, %1560 ], [ 1, %1551 ]
  %1581 = load i32, ptr %1579, align 4, !tbaa !6
  %1582 = add nsw i32 %1581, %1580
  store i32 %1582, ptr %1579, align 4, !tbaa !6
  br label %1583

1583:                                             ; preds = %1570, %1578, %1540, %1521
  %1584 = icmp eq i32 %1532, %5
  br i1 %1584, label %3145, label %1443, !llvm.loop !534

1585:                                             ; preds = %1279
  %1586 = getelementptr inbounds i32, ptr %3, i64 %19
  %1587 = load i32, ptr %1586, align 4, !tbaa !6
  %1588 = icmp eq i32 %1587, 0
  %1589 = icmp sgt i32 %5, 0
  br i1 %1588, label %1599, label %1590

1590:                                             ; preds = %1585
  br i1 %1589, label %1591, label %3145

1591:                                             ; preds = %1590
  %1592 = icmp sgt i32 %13, 1
  %1593 = icmp sgt i32 %13, 0
  %1594 = add i32 %13, -2
  %1595 = zext i32 %1594 to i64
  %1596 = zext i32 %13 to i64
  %1597 = add nuw i32 %5, 1
  %1598 = icmp eq i32 %13, 1
  br label %1745

1599:                                             ; preds = %1585
  br i1 %1589, label %1600, label %3145

1600:                                             ; preds = %1599
  %1601 = icmp sgt i32 %13, 1
  %1602 = icmp sgt i32 %13, 0
  %1603 = add i32 %13, -2
  %1604 = zext i32 %1603 to i64
  %1605 = zext i32 %13 to i64
  %1606 = add nuw i32 %5, 1
  %1607 = icmp eq i32 %13, 1
  br label %1608

1608:                                             ; preds = %1600, %1743
  %1609 = phi double [ 0.000000e+00, %1600 ], [ %1693, %1743 ]
  %1610 = phi i32 [ 0, %1600 ], [ %1695, %1743 ]
  %1611 = phi double [ 0.000000e+00, %1600 ], [ %1694, %1743 ]
  %1612 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1601, label %1613, label %1682

1613:                                             ; preds = %1608, %1672
  %1614 = phi i32 [ %1681, %1672 ], [ 0, %1608 ]
  %1615 = phi i64 [ %1623, %1672 ], [ %1605, %1608 ]
  %1616 = phi i64 [ %1680, %1672 ], [ %1604, %1608 ]
  %1617 = phi i32 [ %1678, %1672 ], [ %1612, %1608 ]
  %1618 = sub i32 %1603, %1614
  %1619 = tail call i32 @llvm.smin.i32(i32 %1618, i32 0)
  %1620 = sub i32 %1618, %1619
  %1621 = zext i32 %1620 to i64
  %1622 = add nuw nsw i64 %1621, 1
  %1623 = add nsw i64 %1615, -1
  %1624 = icmp ult i32 %1620, 31
  br i1 %1624, label %1660, label %1625

1625:                                             ; preds = %1613
  %1626 = and i64 %1622, 8589934560
  %1627 = sub i64 %1616, %1626
  br label %1628

1628:                                             ; preds = %1628, %1625
  %1629 = phi i64 [ 0, %1625 ], [ %1652, %1628 ]
  %1630 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1625 ], [ %1648, %1628 ]
  %1631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1625 ], [ %1649, %1628 ]
  %1632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1625 ], [ %1650, %1628 ]
  %1633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1625 ], [ %1651, %1628 ]
  %1634 = sub i64 %1616, %1629
  %1635 = getelementptr inbounds i32, ptr %9, i64 %1634
  %1636 = getelementptr inbounds i32, ptr %1635, i64 -7
  %1637 = load <8 x i32>, ptr %1636, align 4, !tbaa !6
  %1638 = shufflevector <8 x i32> %1637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1639 = getelementptr inbounds i32, ptr %1635, i64 -15
  %1640 = load <8 x i32>, ptr %1639, align 4, !tbaa !6
  %1641 = shufflevector <8 x i32> %1640, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1642 = getelementptr inbounds i32, ptr %1635, i64 -23
  %1643 = load <8 x i32>, ptr %1642, align 4, !tbaa !6
  %1644 = shufflevector <8 x i32> %1643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1645 = getelementptr inbounds i32, ptr %1635, i64 -31
  %1646 = load <8 x i32>, ptr %1645, align 4, !tbaa !6
  %1647 = shufflevector <8 x i32> %1646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1648 = mul <8 x i32> %1638, %1630
  %1649 = mul <8 x i32> %1641, %1631
  %1650 = mul <8 x i32> %1644, %1632
  %1651 = mul <8 x i32> %1647, %1633
  %1652 = add nuw i64 %1629, 32
  %1653 = icmp eq i64 %1652, %1626
  br i1 %1653, label %1654, label %1628, !llvm.loop !535

1654:                                             ; preds = %1628
  %1655 = mul <8 x i32> %1649, %1648
  %1656 = mul <8 x i32> %1650, %1655
  %1657 = mul <8 x i32> %1651, %1656
  %1658 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1657)
  %1659 = icmp eq i64 %1622, %1626
  br i1 %1659, label %1672, label %1660

1660:                                             ; preds = %1613, %1654
  %1661 = phi i64 [ %1616, %1613 ], [ %1627, %1654 ]
  %1662 = phi i32 [ 1, %1613 ], [ %1658, %1654 ]
  br label %1663

1663:                                             ; preds = %1660, %1663
  %1664 = phi i64 [ %1669, %1663 ], [ %1661, %1660 ]
  %1665 = phi i32 [ %1668, %1663 ], [ %1662, %1660 ]
  %1666 = getelementptr inbounds i32, ptr %9, i64 %1664
  %1667 = load i32, ptr %1666, align 4, !tbaa !6
  %1668 = mul nsw i32 %1667, %1665
  %1669 = add nsw i64 %1664, -1
  %1670 = trunc i64 %1664 to i32
  %1671 = icmp sgt i32 %1670, 0
  br i1 %1671, label %1663, label %1672, !llvm.loop !536

1672:                                             ; preds = %1663, %1654
  %1673 = phi i32 [ %1658, %1654 ], [ %1668, %1663 ]
  %1674 = and i64 %1623, 4294967295
  %1675 = getelementptr inbounds i32, ptr %6, i64 %1674
  %1676 = load i32, ptr %1675, align 4, !tbaa !6
  %1677 = mul nsw i32 %1676, %1673
  %1678 = add nsw i32 %1677, %1617
  %1679 = icmp sgt i64 %1615, 2
  %1680 = add nsw i64 %1616, -1
  %1681 = add i32 %1614, 1
  br i1 %1679, label %1613, label %1682, !llvm.loop !537

1682:                                             ; preds = %1672, %1608
  %1683 = phi i32 [ %1612, %1608 ], [ %1678, %1672 ]
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds i16, ptr %1267, i64 %1684
  %1686 = load i16, ptr %1685, align 2, !tbaa !79
  %1687 = sitofp i16 %1686 to double
  %1688 = icmp slt i16 %1686, 0
  %1689 = fneg fast double %1687
  %1690 = select i1 %1688, double %1689, double %1687
  %1691 = fmul fast double %1687, %1687
  %1692 = fmul fast double %1691, %1690
  %1693 = fadd fast double %1692, %1609
  %1694 = fadd fast double %1611, 1.000000e+00
  %1695 = add nuw nsw i32 %1610, 1
  br i1 %1602, label %1696, label %1743

1696:                                             ; preds = %1682
  %1697 = load i32, ptr %4, align 4, !tbaa !6
  %1698 = load i32, ptr %12, align 4, !tbaa !6
  %1699 = add nsw i32 %1698, -1
  %1700 = icmp slt i32 %1697, %1699
  br i1 %1700, label %1720, label %1701

1701:                                             ; preds = %1696
  %1702 = icmp eq i32 %1697, %1699
  br i1 %1702, label %1703, label %1736

1703:                                             ; preds = %1701
  store i32 0, ptr %4, align 4, !tbaa !6
  %1704 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1704, ptr %6, align 4, !tbaa !6
  br i1 %1607, label %1743, label %1705

1705:                                             ; preds = %1703, %1730
  %1706 = phi i64 [ %1734, %1730 ], [ 1, %1703 ]
  %1707 = getelementptr inbounds i32, ptr %4, i64 %1706
  %1708 = load i32, ptr %1707, align 4, !tbaa !6
  %1709 = getelementptr inbounds i32, ptr %12, i64 %1706
  %1710 = load i32, ptr %1709, align 4, !tbaa !6
  %1711 = add nsw i32 %1710, -1
  %1712 = icmp slt i32 %1708, %1711
  br i1 %1712, label %1713, label %1728

1713:                                             ; preds = %1705
  br i1 %1700, label %1720, label %1714

1714:                                             ; preds = %1713
  %1715 = getelementptr inbounds i32, ptr %7, i64 %1706
  %1716 = load i32, ptr %1715, align 4, !tbaa !6
  %1717 = getelementptr inbounds i32, ptr %6, i64 %1706
  %1718 = load i32, ptr %1717, align 4, !tbaa !6
  %1719 = add nsw i32 %1718, %1716
  store i32 %1719, ptr %1717, align 4, !tbaa !6
  br label %1738

1720:                                             ; preds = %1696, %1713
  %1721 = phi i32 [ %1708, %1713 ], [ %1697, %1696 ]
  %1722 = phi ptr [ %1707, %1713 ], [ %4, %1696 ]
  %1723 = phi i64 [ %1706, %1713 ], [ 0, %1696 ]
  %1724 = add nsw i32 %1721, 1
  store i32 %1724, ptr %1722, align 4, !tbaa !6
  %1725 = getelementptr inbounds i32, ptr %7, i64 %1723
  %1726 = load i32, ptr %1725, align 4, !tbaa !6
  %1727 = getelementptr inbounds i32, ptr %6, i64 %1723
  br label %1738

1728:                                             ; preds = %1705
  %1729 = icmp eq i32 %1708, %1711
  br i1 %1729, label %1730, label %1736

1730:                                             ; preds = %1728
  store i32 0, ptr %1707, align 4, !tbaa !6
  %1731 = getelementptr inbounds i32, ptr %8, i64 %1706
  %1732 = load i32, ptr %1731, align 4, !tbaa !6
  %1733 = getelementptr inbounds i32, ptr %6, i64 %1706
  store i32 %1732, ptr %1733, align 4, !tbaa !6
  %1734 = add nuw nsw i64 %1706, 1
  %1735 = icmp eq i64 %1734, %1605
  br i1 %1735, label %1743, label %1705, !llvm.loop !538

1736:                                             ; preds = %1701, %1728
  store double %1693, ptr %1269, align 8, !tbaa !19
  %1737 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1738:                                             ; preds = %1714, %1720
  %1739 = phi ptr [ %1727, %1720 ], [ %1707, %1714 ]
  %1740 = phi i32 [ %1726, %1720 ], [ 1, %1714 ]
  %1741 = load i32, ptr %1739, align 4, !tbaa !6
  %1742 = add nsw i32 %1741, %1740
  store i32 %1742, ptr %1739, align 4, !tbaa !6
  br label %1743

1743:                                             ; preds = %1730, %1738, %1703, %1682
  %1744 = icmp eq i32 %1695, %5
  br i1 %1744, label %3141, label %1608, !llvm.loop !539

1745:                                             ; preds = %1591, %1885
  %1746 = phi double [ 0.000000e+00, %1591 ], [ %1833, %1885 ]
  %1747 = phi i32 [ 0, %1591 ], [ %1834, %1885 ]
  %1748 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1592, label %1749, label %1818

1749:                                             ; preds = %1745, %1808
  %1750 = phi i32 [ %1817, %1808 ], [ 0, %1745 ]
  %1751 = phi i64 [ %1759, %1808 ], [ %1596, %1745 ]
  %1752 = phi i64 [ %1816, %1808 ], [ %1595, %1745 ]
  %1753 = phi i32 [ %1814, %1808 ], [ %1748, %1745 ]
  %1754 = sub i32 %1594, %1750
  %1755 = tail call i32 @llvm.smin.i32(i32 %1754, i32 0)
  %1756 = sub i32 %1754, %1755
  %1757 = zext i32 %1756 to i64
  %1758 = add nuw nsw i64 %1757, 1
  %1759 = add nsw i64 %1751, -1
  %1760 = icmp ult i32 %1756, 31
  br i1 %1760, label %1796, label %1761

1761:                                             ; preds = %1749
  %1762 = and i64 %1758, 8589934560
  %1763 = sub i64 %1752, %1762
  br label %1764

1764:                                             ; preds = %1764, %1761
  %1765 = phi i64 [ 0, %1761 ], [ %1788, %1764 ]
  %1766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1784, %1764 ]
  %1767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1785, %1764 ]
  %1768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1786, %1764 ]
  %1769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1787, %1764 ]
  %1770 = sub i64 %1752, %1765
  %1771 = getelementptr inbounds i32, ptr %11, i64 %1770
  %1772 = getelementptr inbounds i32, ptr %1771, i64 -7
  %1773 = load <8 x i32>, ptr %1772, align 4, !tbaa !6
  %1774 = shufflevector <8 x i32> %1773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1775 = getelementptr inbounds i32, ptr %1771, i64 -15
  %1776 = load <8 x i32>, ptr %1775, align 4, !tbaa !6
  %1777 = shufflevector <8 x i32> %1776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1778 = getelementptr inbounds i32, ptr %1771, i64 -23
  %1779 = load <8 x i32>, ptr %1778, align 4, !tbaa !6
  %1780 = shufflevector <8 x i32> %1779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1781 = getelementptr inbounds i32, ptr %1771, i64 -31
  %1782 = load <8 x i32>, ptr %1781, align 4, !tbaa !6
  %1783 = shufflevector <8 x i32> %1782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1784 = mul <8 x i32> %1774, %1766
  %1785 = mul <8 x i32> %1777, %1767
  %1786 = mul <8 x i32> %1780, %1768
  %1787 = mul <8 x i32> %1783, %1769
  %1788 = add nuw i64 %1765, 32
  %1789 = icmp eq i64 %1788, %1762
  br i1 %1789, label %1790, label %1764, !llvm.loop !540

1790:                                             ; preds = %1764
  %1791 = mul <8 x i32> %1785, %1784
  %1792 = mul <8 x i32> %1786, %1791
  %1793 = mul <8 x i32> %1787, %1792
  %1794 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1793)
  %1795 = icmp eq i64 %1758, %1762
  br i1 %1795, label %1808, label %1796

1796:                                             ; preds = %1749, %1790
  %1797 = phi i64 [ %1752, %1749 ], [ %1763, %1790 ]
  %1798 = phi i32 [ 1, %1749 ], [ %1794, %1790 ]
  br label %1799

1799:                                             ; preds = %1796, %1799
  %1800 = phi i64 [ %1805, %1799 ], [ %1797, %1796 ]
  %1801 = phi i32 [ %1804, %1799 ], [ %1798, %1796 ]
  %1802 = getelementptr inbounds i32, ptr %11, i64 %1800
  %1803 = load i32, ptr %1802, align 4, !tbaa !6
  %1804 = mul nsw i32 %1803, %1801
  %1805 = add nsw i64 %1800, -1
  %1806 = trunc i64 %1800 to i32
  %1807 = icmp sgt i32 %1806, 0
  br i1 %1807, label %1799, label %1808, !llvm.loop !541

1808:                                             ; preds = %1799, %1790
  %1809 = phi i32 [ %1794, %1790 ], [ %1804, %1799 ]
  %1810 = and i64 %1759, 4294967295
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1810
  %1812 = load i32, ptr %1811, align 4, !tbaa !6
  %1813 = mul nsw i32 %1812, %1809
  %1814 = add nsw i32 %1813, %1753
  %1815 = icmp sgt i64 %1751, 2
  %1816 = add nsw i64 %1752, -1
  %1817 = add i32 %1750, 1
  br i1 %1815, label %1749, label %1818, !llvm.loop !542

1818:                                             ; preds = %1808, %1745
  %1819 = phi i32 [ %1748, %1745 ], [ %1814, %1808 ]
  %1820 = icmp slt i32 %1819, %5
  br i1 %1820, label %1823, label %1821

1821:                                             ; preds = %1818
  %1822 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

1823:                                             ; preds = %1818
  %1824 = sext i32 %1819 to i64
  %1825 = getelementptr inbounds i16, ptr %1267, i64 %1824
  %1826 = load i16, ptr %1825, align 2, !tbaa !79
  %1827 = sitofp i16 %1826 to double
  %1828 = icmp slt i16 %1826, 0
  %1829 = fneg fast double %1827
  %1830 = select i1 %1828, double %1829, double %1827
  %1831 = fmul fast double %1827, %1827
  %1832 = fmul fast double %1831, %1830
  %1833 = fadd fast double %1832, %1746
  store double %1833, ptr %1269, align 8, !tbaa !19
  %1834 = add nuw nsw i32 %1747, 1
  br i1 %1593, label %1835, label %1885

1835:                                             ; preds = %1823
  %1836 = load i32, ptr %4, align 4, !tbaa !6
  %1837 = load i32, ptr %12, align 4, !tbaa !6
  %1838 = add nsw i32 %1837, -1
  %1839 = icmp slt i32 %1836, %1838
  br i1 %1839, label %1862, label %1840

1840:                                             ; preds = %1835
  %1841 = icmp eq i32 %1836, %1838
  br i1 %1841, label %1842, label %1878

1842:                                             ; preds = %1840
  store i32 0, ptr %4, align 4, !tbaa !6
  %1843 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1843, ptr %6, align 4, !tbaa !6
  br i1 %1598, label %1885, label %1844

1844:                                             ; preds = %1842, %1872
  %1845 = phi i64 [ %1876, %1872 ], [ 1, %1842 ]
  %1846 = getelementptr inbounds i32, ptr %4, i64 %1845
  %1847 = load i32, ptr %1846, align 4, !tbaa !6
  %1848 = getelementptr inbounds i32, ptr %12, i64 %1845
  %1849 = load i32, ptr %1848, align 4, !tbaa !6
  %1850 = add nsw i32 %1849, -1
  %1851 = icmp slt i32 %1847, %1850
  br i1 %1851, label %1852, label %1870

1852:                                             ; preds = %1844
  br i1 %1839, label %1862, label %1853

1853:                                             ; preds = %1852
  %1854 = shl i64 %1845, 32
  %1855 = add i64 %1854, -4294967296
  %1856 = ashr exact i64 %1855, 32
  %1857 = getelementptr inbounds i32, ptr %7, i64 %1856
  %1858 = load i32, ptr %1857, align 4, !tbaa !6
  %1859 = getelementptr inbounds i32, ptr %6, i64 %1845
  %1860 = load i32, ptr %1859, align 4, !tbaa !6
  %1861 = add nsw i32 %1860, %1858
  store i32 %1861, ptr %1859, align 4, !tbaa !6
  br label %1880

1862:                                             ; preds = %1835, %1852
  %1863 = phi i32 [ %1847, %1852 ], [ %1836, %1835 ]
  %1864 = phi ptr [ %1846, %1852 ], [ %4, %1835 ]
  %1865 = phi i64 [ %1845, %1852 ], [ 0, %1835 ]
  %1866 = add nsw i32 %1863, 1
  store i32 %1866, ptr %1864, align 4, !tbaa !6
  %1867 = getelementptr inbounds i32, ptr %7, i64 %1865
  %1868 = load i32, ptr %1867, align 4, !tbaa !6
  %1869 = getelementptr inbounds i32, ptr %6, i64 %1865
  br label %1880

1870:                                             ; preds = %1844
  %1871 = icmp eq i32 %1847, %1850
  br i1 %1871, label %1872, label %1878

1872:                                             ; preds = %1870
  store i32 0, ptr %1846, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %8, i64 %1845
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = getelementptr inbounds i32, ptr %6, i64 %1845
  store i32 %1874, ptr %1875, align 4, !tbaa !6
  %1876 = add nuw nsw i64 %1845, 1
  %1877 = icmp eq i64 %1876, %1596
  br i1 %1877, label %1885, label %1844, !llvm.loop !543

1878:                                             ; preds = %1840, %1870
  %1879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

1880:                                             ; preds = %1853, %1862
  %1881 = phi ptr [ %1869, %1862 ], [ %1846, %1853 ]
  %1882 = phi i32 [ %1868, %1862 ], [ 1, %1853 ]
  %1883 = load i32, ptr %1881, align 4, !tbaa !6
  %1884 = add nsw i32 %1883, %1882
  store i32 %1884, ptr %1881, align 4, !tbaa !6
  br label %1885

1885:                                             ; preds = %1872, %1880, %1842, %1823
  %1886 = icmp eq i32 %1834, %5
  br i1 %1886, label %3145, label %1745, !llvm.loop !544

1887:                                             ; preds = %1279
  %1888 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 915, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3145

1889:                                             ; preds = %18
  %1890 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1891 = load ptr, ptr %1890, align 8, !tbaa !10
  %1892 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1893 = load ptr, ptr %1892, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1893, align 4, !tbaa !163
  %1894 = icmp eq i32 %13, 0
  br i1 %1894, label %1895, label %1903

1895:                                             ; preds = %1889
  %1896 = load i16, ptr %1891, align 2, !tbaa !79
  %1897 = sitofp i16 %1896 to float
  %1898 = icmp slt i16 %1896, 0
  %1899 = fneg fast float %1897
  %1900 = select i1 %1898, float %1899, float %1897
  %1901 = fmul fast float %1897, %1897
  %1902 = fmul fast float %1901, %1900
  store float %1902, ptr %1893, align 4, !tbaa !163
  br label %3145

1903:                                             ; preds = %1889
  switch i32 %1, label %2515 [
    i32 1, label %1904
    i32 0, label %2213
  ]

1904:                                             ; preds = %1903
  %1905 = getelementptr inbounds i32, ptr %3, i64 %19
  %1906 = load i32, ptr %1905, align 4, !tbaa !6
  %1907 = icmp eq i32 %1906, 0
  %1908 = icmp sgt i32 %5, 0
  br i1 %1907, label %1918, label %1909

1909:                                             ; preds = %1904
  br i1 %1908, label %1910, label %3145

1910:                                             ; preds = %1909
  %1911 = icmp sgt i32 %13, 1
  %1912 = icmp sgt i32 %13, 0
  %1913 = add i32 %13, -2
  %1914 = zext i32 %1913 to i64
  %1915 = zext i32 %13 to i64
  %1916 = add nuw i32 %5, 1
  %1917 = icmp eq i32 %13, 1
  br label %2069

1918:                                             ; preds = %1904
  br i1 %1908, label %1919, label %3145

1919:                                             ; preds = %1918
  %1920 = icmp sgt i32 %13, 1
  %1921 = icmp sgt i32 %13, 0
  %1922 = add i32 %13, -2
  %1923 = zext i32 %1922 to i64
  %1924 = zext i32 %13 to i64
  %1925 = add nuw i32 %5, 1
  %1926 = icmp eq i32 %13, 1
  br label %1927

1927:                                             ; preds = %1919, %2067
  %1928 = phi float [ 0.000000e+00, %1919 ], [ %2017, %2067 ]
  %1929 = phi i32 [ 0, %1919 ], [ %2019, %2067 ]
  %1930 = phi double [ 0.000000e+00, %1919 ], [ %2018, %2067 ]
  %1931 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1932, label %2001

1932:                                             ; preds = %1927, %1991
  %1933 = phi i32 [ %2000, %1991 ], [ 0, %1927 ]
  %1934 = phi i64 [ %1942, %1991 ], [ %1924, %1927 ]
  %1935 = phi i64 [ %1999, %1991 ], [ %1923, %1927 ]
  %1936 = phi i32 [ %1997, %1991 ], [ %1931, %1927 ]
  %1937 = sub i32 %1922, %1933
  %1938 = tail call i32 @llvm.smin.i32(i32 %1937, i32 0)
  %1939 = sub i32 %1937, %1938
  %1940 = zext i32 %1939 to i64
  %1941 = add nuw nsw i64 %1940, 1
  %1942 = add nsw i64 %1934, -1
  %1943 = icmp ult i32 %1939, 31
  br i1 %1943, label %1979, label %1944

1944:                                             ; preds = %1932
  %1945 = and i64 %1941, 8589934560
  %1946 = sub i64 %1935, %1945
  br label %1947

1947:                                             ; preds = %1947, %1944
  %1948 = phi i64 [ 0, %1944 ], [ %1971, %1947 ]
  %1949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1944 ], [ %1967, %1947 ]
  %1950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1944 ], [ %1968, %1947 ]
  %1951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1944 ], [ %1969, %1947 ]
  %1952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1944 ], [ %1970, %1947 ]
  %1953 = sub i64 %1935, %1948
  %1954 = getelementptr inbounds i32, ptr %9, i64 %1953
  %1955 = getelementptr inbounds i32, ptr %1954, i64 -7
  %1956 = load <8 x i32>, ptr %1955, align 4, !tbaa !6
  %1957 = shufflevector <8 x i32> %1956, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1958 = getelementptr inbounds i32, ptr %1954, i64 -15
  %1959 = load <8 x i32>, ptr %1958, align 4, !tbaa !6
  %1960 = shufflevector <8 x i32> %1959, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1961 = getelementptr inbounds i32, ptr %1954, i64 -23
  %1962 = load <8 x i32>, ptr %1961, align 4, !tbaa !6
  %1963 = shufflevector <8 x i32> %1962, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1964 = getelementptr inbounds i32, ptr %1954, i64 -31
  %1965 = load <8 x i32>, ptr %1964, align 4, !tbaa !6
  %1966 = shufflevector <8 x i32> %1965, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1967 = mul <8 x i32> %1957, %1949
  %1968 = mul <8 x i32> %1960, %1950
  %1969 = mul <8 x i32> %1963, %1951
  %1970 = mul <8 x i32> %1966, %1952
  %1971 = add nuw i64 %1948, 32
  %1972 = icmp eq i64 %1971, %1945
  br i1 %1972, label %1973, label %1947, !llvm.loop !545

1973:                                             ; preds = %1947
  %1974 = mul <8 x i32> %1968, %1967
  %1975 = mul <8 x i32> %1969, %1974
  %1976 = mul <8 x i32> %1970, %1975
  %1977 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1976)
  %1978 = icmp eq i64 %1941, %1945
  br i1 %1978, label %1991, label %1979

1979:                                             ; preds = %1932, %1973
  %1980 = phi i64 [ %1935, %1932 ], [ %1946, %1973 ]
  %1981 = phi i32 [ 1, %1932 ], [ %1977, %1973 ]
  br label %1982

1982:                                             ; preds = %1979, %1982
  %1983 = phi i64 [ %1988, %1982 ], [ %1980, %1979 ]
  %1984 = phi i32 [ %1987, %1982 ], [ %1981, %1979 ]
  %1985 = getelementptr inbounds i32, ptr %9, i64 %1983
  %1986 = load i32, ptr %1985, align 4, !tbaa !6
  %1987 = mul nsw i32 %1986, %1984
  %1988 = add nsw i64 %1983, -1
  %1989 = trunc i64 %1983 to i32
  %1990 = icmp sgt i32 %1989, 0
  br i1 %1990, label %1982, label %1991, !llvm.loop !546

1991:                                             ; preds = %1982, %1973
  %1992 = phi i32 [ %1977, %1973 ], [ %1987, %1982 ]
  %1993 = and i64 %1942, 4294967295
  %1994 = getelementptr inbounds i32, ptr %6, i64 %1993
  %1995 = load i32, ptr %1994, align 4, !tbaa !6
  %1996 = mul nsw i32 %1995, %1992
  %1997 = add nsw i32 %1996, %1936
  %1998 = icmp sgt i64 %1934, 2
  %1999 = add nsw i64 %1935, -1
  %2000 = add i32 %1933, 1
  br i1 %1998, label %1932, label %2001, !llvm.loop !547

2001:                                             ; preds = %1991, %1927
  %2002 = phi i32 [ %1931, %1927 ], [ %1997, %1991 ]
  %2003 = sext i32 %2002 to i64
  %2004 = getelementptr inbounds double, ptr %2, i64 %2003
  %2005 = load double, ptr %2004, align 8, !tbaa !19
  %2006 = getelementptr inbounds i16, ptr %1891, i64 %2003
  %2007 = load i16, ptr %2006, align 2, !tbaa !79
  %2008 = fpext float %1928 to double
  %2009 = sitofp i16 %2007 to double
  %2010 = fmul fast double %2005, %2009
  %2011 = fcmp fast olt double %2010, 0.000000e+00
  %2012 = fneg fast double %2010
  %2013 = select nnan ninf i1 %2011, double %2012, double %2010
  %2014 = fmul fast double %2010, %2010
  %2015 = fmul fast double %2014, %2013
  %2016 = fadd fast double %2015, %2008
  %2017 = fptrunc double %2016 to float
  %2018 = fadd fast double %2005, %1930
  %2019 = add nuw nsw i32 %1929, 1
  br i1 %1921, label %2020, label %2067

2020:                                             ; preds = %2001
  %2021 = load i32, ptr %4, align 4, !tbaa !6
  %2022 = load i32, ptr %12, align 4, !tbaa !6
  %2023 = add nsw i32 %2022, -1
  %2024 = icmp slt i32 %2021, %2023
  br i1 %2024, label %2044, label %2025

2025:                                             ; preds = %2020
  %2026 = icmp eq i32 %2021, %2023
  br i1 %2026, label %2027, label %2060

2027:                                             ; preds = %2025
  store i32 0, ptr %4, align 4, !tbaa !6
  %2028 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2028, ptr %6, align 4, !tbaa !6
  br i1 %1926, label %2067, label %2029

2029:                                             ; preds = %2027, %2054
  %2030 = phi i64 [ %2058, %2054 ], [ 1, %2027 ]
  %2031 = getelementptr inbounds i32, ptr %4, i64 %2030
  %2032 = load i32, ptr %2031, align 4, !tbaa !6
  %2033 = getelementptr inbounds i32, ptr %12, i64 %2030
  %2034 = load i32, ptr %2033, align 4, !tbaa !6
  %2035 = add nsw i32 %2034, -1
  %2036 = icmp slt i32 %2032, %2035
  br i1 %2036, label %2037, label %2052

2037:                                             ; preds = %2029
  br i1 %2024, label %2044, label %2038

2038:                                             ; preds = %2037
  %2039 = getelementptr inbounds i32, ptr %7, i64 %2030
  %2040 = load i32, ptr %2039, align 4, !tbaa !6
  %2041 = getelementptr inbounds i32, ptr %6, i64 %2030
  %2042 = load i32, ptr %2041, align 4, !tbaa !6
  %2043 = add nsw i32 %2042, %2040
  store i32 %2043, ptr %2041, align 4, !tbaa !6
  br label %2062

2044:                                             ; preds = %2020, %2037
  %2045 = phi i32 [ %2032, %2037 ], [ %2021, %2020 ]
  %2046 = phi ptr [ %2031, %2037 ], [ %4, %2020 ]
  %2047 = phi i64 [ %2030, %2037 ], [ 0, %2020 ]
  %2048 = add nsw i32 %2045, 1
  store i32 %2048, ptr %2046, align 4, !tbaa !6
  %2049 = getelementptr inbounds i32, ptr %7, i64 %2047
  %2050 = load i32, ptr %2049, align 4, !tbaa !6
  %2051 = getelementptr inbounds i32, ptr %6, i64 %2047
  br label %2062

2052:                                             ; preds = %2029
  %2053 = icmp eq i32 %2032, %2035
  br i1 %2053, label %2054, label %2060

2054:                                             ; preds = %2052
  store i32 0, ptr %2031, align 4, !tbaa !6
  %2055 = getelementptr inbounds i32, ptr %8, i64 %2030
  %2056 = load i32, ptr %2055, align 4, !tbaa !6
  %2057 = getelementptr inbounds i32, ptr %6, i64 %2030
  store i32 %2056, ptr %2057, align 4, !tbaa !6
  %2058 = add nuw nsw i64 %2030, 1
  %2059 = icmp eq i64 %2058, %1924
  br i1 %2059, label %2067, label %2029, !llvm.loop !548

2060:                                             ; preds = %2025, %2052
  store float %2017, ptr %1893, align 4, !tbaa !163
  %2061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2062:                                             ; preds = %2038, %2044
  %2063 = phi ptr [ %2051, %2044 ], [ %2031, %2038 ]
  %2064 = phi i32 [ %2050, %2044 ], [ 1, %2038 ]
  %2065 = load i32, ptr %2063, align 4, !tbaa !6
  %2066 = add nsw i32 %2065, %2064
  store i32 %2066, ptr %2063, align 4, !tbaa !6
  br label %2067

2067:                                             ; preds = %2054, %2062, %2027, %2001
  %2068 = icmp eq i32 %2019, %5
  br i1 %2068, label %3142, label %1927, !llvm.loop !549

2069:                                             ; preds = %1910, %2211
  %2070 = phi float [ 0.000000e+00, %1910 ], [ %2159, %2211 ]
  %2071 = phi i32 [ 0, %1910 ], [ %2160, %2211 ]
  %2072 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1911, label %2073, label %2142

2073:                                             ; preds = %2069, %2132
  %2074 = phi i32 [ %2141, %2132 ], [ 0, %2069 ]
  %2075 = phi i64 [ %2083, %2132 ], [ %1915, %2069 ]
  %2076 = phi i64 [ %2140, %2132 ], [ %1914, %2069 ]
  %2077 = phi i32 [ %2138, %2132 ], [ %2072, %2069 ]
  %2078 = sub i32 %1913, %2074
  %2079 = tail call i32 @llvm.smin.i32(i32 %2078, i32 0)
  %2080 = sub i32 %2078, %2079
  %2081 = zext i32 %2080 to i64
  %2082 = add nuw nsw i64 %2081, 1
  %2083 = add nsw i64 %2075, -1
  %2084 = icmp ult i32 %2080, 31
  br i1 %2084, label %2120, label %2085

2085:                                             ; preds = %2073
  %2086 = and i64 %2082, 8589934560
  %2087 = sub i64 %2076, %2086
  br label %2088

2088:                                             ; preds = %2088, %2085
  %2089 = phi i64 [ 0, %2085 ], [ %2112, %2088 ]
  %2090 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2085 ], [ %2108, %2088 ]
  %2091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2085 ], [ %2109, %2088 ]
  %2092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2085 ], [ %2110, %2088 ]
  %2093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2085 ], [ %2111, %2088 ]
  %2094 = sub i64 %2076, %2089
  %2095 = getelementptr inbounds i32, ptr %11, i64 %2094
  %2096 = getelementptr inbounds i32, ptr %2095, i64 -7
  %2097 = load <8 x i32>, ptr %2096, align 4, !tbaa !6
  %2098 = shufflevector <8 x i32> %2097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2099 = getelementptr inbounds i32, ptr %2095, i64 -15
  %2100 = load <8 x i32>, ptr %2099, align 4, !tbaa !6
  %2101 = shufflevector <8 x i32> %2100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2102 = getelementptr inbounds i32, ptr %2095, i64 -23
  %2103 = load <8 x i32>, ptr %2102, align 4, !tbaa !6
  %2104 = shufflevector <8 x i32> %2103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2105 = getelementptr inbounds i32, ptr %2095, i64 -31
  %2106 = load <8 x i32>, ptr %2105, align 4, !tbaa !6
  %2107 = shufflevector <8 x i32> %2106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2108 = mul <8 x i32> %2098, %2090
  %2109 = mul <8 x i32> %2101, %2091
  %2110 = mul <8 x i32> %2104, %2092
  %2111 = mul <8 x i32> %2107, %2093
  %2112 = add nuw i64 %2089, 32
  %2113 = icmp eq i64 %2112, %2086
  br i1 %2113, label %2114, label %2088, !llvm.loop !550

2114:                                             ; preds = %2088
  %2115 = mul <8 x i32> %2109, %2108
  %2116 = mul <8 x i32> %2110, %2115
  %2117 = mul <8 x i32> %2111, %2116
  %2118 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2117)
  %2119 = icmp eq i64 %2082, %2086
  br i1 %2119, label %2132, label %2120

2120:                                             ; preds = %2073, %2114
  %2121 = phi i64 [ %2076, %2073 ], [ %2087, %2114 ]
  %2122 = phi i32 [ 1, %2073 ], [ %2118, %2114 ]
  br label %2123

2123:                                             ; preds = %2120, %2123
  %2124 = phi i64 [ %2129, %2123 ], [ %2121, %2120 ]
  %2125 = phi i32 [ %2128, %2123 ], [ %2122, %2120 ]
  %2126 = getelementptr inbounds i32, ptr %11, i64 %2124
  %2127 = load i32, ptr %2126, align 4, !tbaa !6
  %2128 = mul nsw i32 %2127, %2125
  %2129 = add nsw i64 %2124, -1
  %2130 = trunc i64 %2124 to i32
  %2131 = icmp sgt i32 %2130, 0
  br i1 %2131, label %2123, label %2132, !llvm.loop !551

2132:                                             ; preds = %2123, %2114
  %2133 = phi i32 [ %2118, %2114 ], [ %2128, %2123 ]
  %2134 = and i64 %2083, 4294967295
  %2135 = getelementptr inbounds i32, ptr %6, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !6
  %2137 = mul nsw i32 %2136, %2133
  %2138 = add nsw i32 %2137, %2077
  %2139 = icmp sgt i64 %2075, 2
  %2140 = add nsw i64 %2076, -1
  %2141 = add i32 %2074, 1
  br i1 %2139, label %2073, label %2142, !llvm.loop !552

2142:                                             ; preds = %2132, %2069
  %2143 = phi i32 [ %2072, %2069 ], [ %2138, %2132 ]
  %2144 = icmp slt i32 %2143, %5
  br i1 %2144, label %2147, label %2145

2145:                                             ; preds = %2142
  %2146 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

2147:                                             ; preds = %2142
  %2148 = sext i32 %2143 to i64
  %2149 = getelementptr inbounds i16, ptr %1891, i64 %2148
  %2150 = load i16, ptr %2149, align 2, !tbaa !79
  %2151 = fpext float %2070 to double
  %2152 = sitofp i16 %2150 to double
  %2153 = icmp slt i16 %2150, 0
  %2154 = fneg fast double %2152
  %2155 = select i1 %2153, double %2154, double %2152
  %2156 = fmul fast double %2152, %2152
  %2157 = fmul fast double %2156, %2155
  %2158 = fadd fast double %2157, %2151
  %2159 = fptrunc double %2158 to float
  store float %2159, ptr %1893, align 4, !tbaa !163
  %2160 = add nuw nsw i32 %2071, 1
  br i1 %1912, label %2161, label %2211

2161:                                             ; preds = %2147
  %2162 = load i32, ptr %4, align 4, !tbaa !6
  %2163 = load i32, ptr %12, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, -1
  %2165 = icmp slt i32 %2162, %2164
  br i1 %2165, label %2188, label %2166

2166:                                             ; preds = %2161
  %2167 = icmp eq i32 %2162, %2164
  br i1 %2167, label %2168, label %2204

2168:                                             ; preds = %2166
  store i32 0, ptr %4, align 4, !tbaa !6
  %2169 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2169, ptr %6, align 4, !tbaa !6
  br i1 %1917, label %2211, label %2170

2170:                                             ; preds = %2168, %2198
  %2171 = phi i64 [ %2202, %2198 ], [ 1, %2168 ]
  %2172 = getelementptr inbounds i32, ptr %4, i64 %2171
  %2173 = load i32, ptr %2172, align 4, !tbaa !6
  %2174 = getelementptr inbounds i32, ptr %12, i64 %2171
  %2175 = load i32, ptr %2174, align 4, !tbaa !6
  %2176 = add nsw i32 %2175, -1
  %2177 = icmp slt i32 %2173, %2176
  br i1 %2177, label %2178, label %2196

2178:                                             ; preds = %2170
  br i1 %2165, label %2188, label %2179

2179:                                             ; preds = %2178
  %2180 = shl i64 %2171, 32
  %2181 = add i64 %2180, -4294967296
  %2182 = ashr exact i64 %2181, 32
  %2183 = getelementptr inbounds i32, ptr %7, i64 %2182
  %2184 = load i32, ptr %2183, align 4, !tbaa !6
  %2185 = getelementptr inbounds i32, ptr %6, i64 %2171
  %2186 = load i32, ptr %2185, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2184
  store i32 %2187, ptr %2185, align 4, !tbaa !6
  br label %2206

2188:                                             ; preds = %2161, %2178
  %2189 = phi i32 [ %2173, %2178 ], [ %2162, %2161 ]
  %2190 = phi ptr [ %2172, %2178 ], [ %4, %2161 ]
  %2191 = phi i64 [ %2171, %2178 ], [ 0, %2161 ]
  %2192 = add nsw i32 %2189, 1
  store i32 %2192, ptr %2190, align 4, !tbaa !6
  %2193 = getelementptr inbounds i32, ptr %7, i64 %2191
  %2194 = load i32, ptr %2193, align 4, !tbaa !6
  %2195 = getelementptr inbounds i32, ptr %6, i64 %2191
  br label %2206

2196:                                             ; preds = %2170
  %2197 = icmp eq i32 %2173, %2176
  br i1 %2197, label %2198, label %2204

2198:                                             ; preds = %2196
  store i32 0, ptr %2172, align 4, !tbaa !6
  %2199 = getelementptr inbounds i32, ptr %8, i64 %2171
  %2200 = load i32, ptr %2199, align 4, !tbaa !6
  %2201 = getelementptr inbounds i32, ptr %6, i64 %2171
  store i32 %2200, ptr %2201, align 4, !tbaa !6
  %2202 = add nuw nsw i64 %2171, 1
  %2203 = icmp eq i64 %2202, %1915
  br i1 %2203, label %2211, label %2170, !llvm.loop !553

2204:                                             ; preds = %2166, %2196
  %2205 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2206:                                             ; preds = %2179, %2188
  %2207 = phi ptr [ %2195, %2188 ], [ %2172, %2179 ]
  %2208 = phi i32 [ %2194, %2188 ], [ 1, %2179 ]
  %2209 = load i32, ptr %2207, align 4, !tbaa !6
  %2210 = add nsw i32 %2209, %2208
  store i32 %2210, ptr %2207, align 4, !tbaa !6
  br label %2211

2211:                                             ; preds = %2198, %2206, %2168, %2147
  %2212 = icmp eq i32 %2160, %5
  br i1 %2212, label %3145, label %2069, !llvm.loop !554

2213:                                             ; preds = %1903
  %2214 = getelementptr inbounds i32, ptr %3, i64 %19
  %2215 = load i32, ptr %2214, align 4, !tbaa !6
  %2216 = icmp eq i32 %2215, 0
  %2217 = icmp sgt i32 %5, 0
  br i1 %2216, label %2227, label %2218

2218:                                             ; preds = %2213
  br i1 %2217, label %2219, label %3145

2219:                                             ; preds = %2218
  %2220 = icmp sgt i32 %13, 1
  %2221 = icmp sgt i32 %13, 0
  %2222 = add i32 %13, -2
  %2223 = zext i32 %2222 to i64
  %2224 = zext i32 %13 to i64
  %2225 = add nuw i32 %5, 1
  %2226 = icmp eq i32 %13, 1
  br label %2373

2227:                                             ; preds = %2213
  br i1 %2217, label %2228, label %3145

2228:                                             ; preds = %2227
  %2229 = icmp sgt i32 %13, 1
  %2230 = icmp sgt i32 %13, 0
  %2231 = add i32 %13, -2
  %2232 = zext i32 %2231 to i64
  %2233 = zext i32 %13 to i64
  %2234 = add nuw i32 %5, 1
  %2235 = icmp eq i32 %13, 1
  br label %2236

2236:                                             ; preds = %2228, %2371
  %2237 = phi float [ 0.000000e+00, %2228 ], [ %2321, %2371 ]
  %2238 = phi i32 [ 0, %2228 ], [ %2323, %2371 ]
  %2239 = phi double [ 0.000000e+00, %2228 ], [ %2322, %2371 ]
  %2240 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2229, label %2241, label %2310

2241:                                             ; preds = %2236, %2300
  %2242 = phi i32 [ %2309, %2300 ], [ 0, %2236 ]
  %2243 = phi i64 [ %2251, %2300 ], [ %2233, %2236 ]
  %2244 = phi i64 [ %2308, %2300 ], [ %2232, %2236 ]
  %2245 = phi i32 [ %2306, %2300 ], [ %2240, %2236 ]
  %2246 = sub i32 %2231, %2242
  %2247 = tail call i32 @llvm.smin.i32(i32 %2246, i32 0)
  %2248 = sub i32 %2246, %2247
  %2249 = zext i32 %2248 to i64
  %2250 = add nuw nsw i64 %2249, 1
  %2251 = add nsw i64 %2243, -1
  %2252 = icmp ult i32 %2248, 31
  br i1 %2252, label %2288, label %2253

2253:                                             ; preds = %2241
  %2254 = and i64 %2250, 8589934560
  %2255 = sub i64 %2244, %2254
  br label %2256

2256:                                             ; preds = %2256, %2253
  %2257 = phi i64 [ 0, %2253 ], [ %2280, %2256 ]
  %2258 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2253 ], [ %2276, %2256 ]
  %2259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2253 ], [ %2277, %2256 ]
  %2260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2253 ], [ %2278, %2256 ]
  %2261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2253 ], [ %2279, %2256 ]
  %2262 = sub i64 %2244, %2257
  %2263 = getelementptr inbounds i32, ptr %9, i64 %2262
  %2264 = getelementptr inbounds i32, ptr %2263, i64 -7
  %2265 = load <8 x i32>, ptr %2264, align 4, !tbaa !6
  %2266 = shufflevector <8 x i32> %2265, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2267 = getelementptr inbounds i32, ptr %2263, i64 -15
  %2268 = load <8 x i32>, ptr %2267, align 4, !tbaa !6
  %2269 = shufflevector <8 x i32> %2268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2270 = getelementptr inbounds i32, ptr %2263, i64 -23
  %2271 = load <8 x i32>, ptr %2270, align 4, !tbaa !6
  %2272 = shufflevector <8 x i32> %2271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2273 = getelementptr inbounds i32, ptr %2263, i64 -31
  %2274 = load <8 x i32>, ptr %2273, align 4, !tbaa !6
  %2275 = shufflevector <8 x i32> %2274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2276 = mul <8 x i32> %2266, %2258
  %2277 = mul <8 x i32> %2269, %2259
  %2278 = mul <8 x i32> %2272, %2260
  %2279 = mul <8 x i32> %2275, %2261
  %2280 = add nuw i64 %2257, 32
  %2281 = icmp eq i64 %2280, %2254
  br i1 %2281, label %2282, label %2256, !llvm.loop !555

2282:                                             ; preds = %2256
  %2283 = mul <8 x i32> %2277, %2276
  %2284 = mul <8 x i32> %2278, %2283
  %2285 = mul <8 x i32> %2279, %2284
  %2286 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2285)
  %2287 = icmp eq i64 %2250, %2254
  br i1 %2287, label %2300, label %2288

2288:                                             ; preds = %2241, %2282
  %2289 = phi i64 [ %2244, %2241 ], [ %2255, %2282 ]
  %2290 = phi i32 [ 1, %2241 ], [ %2286, %2282 ]
  br label %2291

2291:                                             ; preds = %2288, %2291
  %2292 = phi i64 [ %2297, %2291 ], [ %2289, %2288 ]
  %2293 = phi i32 [ %2296, %2291 ], [ %2290, %2288 ]
  %2294 = getelementptr inbounds i32, ptr %9, i64 %2292
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = mul nsw i32 %2295, %2293
  %2297 = add nsw i64 %2292, -1
  %2298 = trunc i64 %2292 to i32
  %2299 = icmp sgt i32 %2298, 0
  br i1 %2299, label %2291, label %2300, !llvm.loop !556

2300:                                             ; preds = %2291, %2282
  %2301 = phi i32 [ %2286, %2282 ], [ %2296, %2291 ]
  %2302 = and i64 %2251, 4294967295
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2302
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = mul nsw i32 %2304, %2301
  %2306 = add nsw i32 %2305, %2245
  %2307 = icmp sgt i64 %2243, 2
  %2308 = add nsw i64 %2244, -1
  %2309 = add i32 %2242, 1
  br i1 %2307, label %2241, label %2310, !llvm.loop !557

2310:                                             ; preds = %2300, %2236
  %2311 = phi i32 [ %2240, %2236 ], [ %2306, %2300 ]
  %2312 = sext i32 %2311 to i64
  %2313 = getelementptr inbounds i16, ptr %1891, i64 %2312
  %2314 = load i16, ptr %2313, align 2, !tbaa !79
  %2315 = sitofp i16 %2314 to float
  %2316 = icmp slt i16 %2314, 0
  %2317 = fneg fast float %2315
  %2318 = select i1 %2316, float %2317, float %2315
  %2319 = fmul fast float %2315, %2315
  %2320 = fmul fast float %2319, %2318
  %2321 = fadd fast float %2320, %2237
  %2322 = fadd fast double %2239, 1.000000e+00
  %2323 = add nuw nsw i32 %2238, 1
  br i1 %2230, label %2324, label %2371

2324:                                             ; preds = %2310
  %2325 = load i32, ptr %4, align 4, !tbaa !6
  %2326 = load i32, ptr %12, align 4, !tbaa !6
  %2327 = add nsw i32 %2326, -1
  %2328 = icmp slt i32 %2325, %2327
  br i1 %2328, label %2348, label %2329

2329:                                             ; preds = %2324
  %2330 = icmp eq i32 %2325, %2327
  br i1 %2330, label %2331, label %2364

2331:                                             ; preds = %2329
  store i32 0, ptr %4, align 4, !tbaa !6
  %2332 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2332, ptr %6, align 4, !tbaa !6
  br i1 %2235, label %2371, label %2333

2333:                                             ; preds = %2331, %2358
  %2334 = phi i64 [ %2362, %2358 ], [ 1, %2331 ]
  %2335 = getelementptr inbounds i32, ptr %4, i64 %2334
  %2336 = load i32, ptr %2335, align 4, !tbaa !6
  %2337 = getelementptr inbounds i32, ptr %12, i64 %2334
  %2338 = load i32, ptr %2337, align 4, !tbaa !6
  %2339 = add nsw i32 %2338, -1
  %2340 = icmp slt i32 %2336, %2339
  br i1 %2340, label %2341, label %2356

2341:                                             ; preds = %2333
  br i1 %2328, label %2348, label %2342

2342:                                             ; preds = %2341
  %2343 = getelementptr inbounds i32, ptr %7, i64 %2334
  %2344 = load i32, ptr %2343, align 4, !tbaa !6
  %2345 = getelementptr inbounds i32, ptr %6, i64 %2334
  %2346 = load i32, ptr %2345, align 4, !tbaa !6
  %2347 = add nsw i32 %2346, %2344
  store i32 %2347, ptr %2345, align 4, !tbaa !6
  br label %2366

2348:                                             ; preds = %2324, %2341
  %2349 = phi i32 [ %2336, %2341 ], [ %2325, %2324 ]
  %2350 = phi ptr [ %2335, %2341 ], [ %4, %2324 ]
  %2351 = phi i64 [ %2334, %2341 ], [ 0, %2324 ]
  %2352 = add nsw i32 %2349, 1
  store i32 %2352, ptr %2350, align 4, !tbaa !6
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2351
  %2354 = load i32, ptr %2353, align 4, !tbaa !6
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2351
  br label %2366

2356:                                             ; preds = %2333
  %2357 = icmp eq i32 %2336, %2339
  br i1 %2357, label %2358, label %2364

2358:                                             ; preds = %2356
  store i32 0, ptr %2335, align 4, !tbaa !6
  %2359 = getelementptr inbounds i32, ptr %8, i64 %2334
  %2360 = load i32, ptr %2359, align 4, !tbaa !6
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2334
  store i32 %2360, ptr %2361, align 4, !tbaa !6
  %2362 = add nuw nsw i64 %2334, 1
  %2363 = icmp eq i64 %2362, %2233
  br i1 %2363, label %2371, label %2333, !llvm.loop !558

2364:                                             ; preds = %2329, %2356
  store float %2321, ptr %1893, align 4, !tbaa !163
  %2365 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2366:                                             ; preds = %2342, %2348
  %2367 = phi ptr [ %2355, %2348 ], [ %2335, %2342 ]
  %2368 = phi i32 [ %2354, %2348 ], [ 1, %2342 ]
  %2369 = load i32, ptr %2367, align 4, !tbaa !6
  %2370 = add nsw i32 %2369, %2368
  store i32 %2370, ptr %2367, align 4, !tbaa !6
  br label %2371

2371:                                             ; preds = %2358, %2366, %2331, %2310
  %2372 = icmp eq i32 %2323, %5
  br i1 %2372, label %3143, label %2236, !llvm.loop !559

2373:                                             ; preds = %2219, %2513
  %2374 = phi float [ 0.000000e+00, %2219 ], [ %2461, %2513 ]
  %2375 = phi i32 [ 0, %2219 ], [ %2462, %2513 ]
  %2376 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2220, label %2377, label %2446

2377:                                             ; preds = %2373, %2436
  %2378 = phi i32 [ %2445, %2436 ], [ 0, %2373 ]
  %2379 = phi i64 [ %2387, %2436 ], [ %2224, %2373 ]
  %2380 = phi i64 [ %2444, %2436 ], [ %2223, %2373 ]
  %2381 = phi i32 [ %2442, %2436 ], [ %2376, %2373 ]
  %2382 = sub i32 %2222, %2378
  %2383 = tail call i32 @llvm.smin.i32(i32 %2382, i32 0)
  %2384 = sub i32 %2382, %2383
  %2385 = zext i32 %2384 to i64
  %2386 = add nuw nsw i64 %2385, 1
  %2387 = add nsw i64 %2379, -1
  %2388 = icmp ult i32 %2384, 31
  br i1 %2388, label %2424, label %2389

2389:                                             ; preds = %2377
  %2390 = and i64 %2386, 8589934560
  %2391 = sub i64 %2380, %2390
  br label %2392

2392:                                             ; preds = %2392, %2389
  %2393 = phi i64 [ 0, %2389 ], [ %2416, %2392 ]
  %2394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2412, %2392 ]
  %2395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2413, %2392 ]
  %2396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2414, %2392 ]
  %2397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2415, %2392 ]
  %2398 = sub i64 %2380, %2393
  %2399 = getelementptr inbounds i32, ptr %11, i64 %2398
  %2400 = getelementptr inbounds i32, ptr %2399, i64 -7
  %2401 = load <8 x i32>, ptr %2400, align 4, !tbaa !6
  %2402 = shufflevector <8 x i32> %2401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2403 = getelementptr inbounds i32, ptr %2399, i64 -15
  %2404 = load <8 x i32>, ptr %2403, align 4, !tbaa !6
  %2405 = shufflevector <8 x i32> %2404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2406 = getelementptr inbounds i32, ptr %2399, i64 -23
  %2407 = load <8 x i32>, ptr %2406, align 4, !tbaa !6
  %2408 = shufflevector <8 x i32> %2407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2409 = getelementptr inbounds i32, ptr %2399, i64 -31
  %2410 = load <8 x i32>, ptr %2409, align 4, !tbaa !6
  %2411 = shufflevector <8 x i32> %2410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2412 = mul <8 x i32> %2402, %2394
  %2413 = mul <8 x i32> %2405, %2395
  %2414 = mul <8 x i32> %2408, %2396
  %2415 = mul <8 x i32> %2411, %2397
  %2416 = add nuw i64 %2393, 32
  %2417 = icmp eq i64 %2416, %2390
  br i1 %2417, label %2418, label %2392, !llvm.loop !560

2418:                                             ; preds = %2392
  %2419 = mul <8 x i32> %2413, %2412
  %2420 = mul <8 x i32> %2414, %2419
  %2421 = mul <8 x i32> %2415, %2420
  %2422 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2421)
  %2423 = icmp eq i64 %2386, %2390
  br i1 %2423, label %2436, label %2424

2424:                                             ; preds = %2377, %2418
  %2425 = phi i64 [ %2380, %2377 ], [ %2391, %2418 ]
  %2426 = phi i32 [ 1, %2377 ], [ %2422, %2418 ]
  br label %2427

2427:                                             ; preds = %2424, %2427
  %2428 = phi i64 [ %2433, %2427 ], [ %2425, %2424 ]
  %2429 = phi i32 [ %2432, %2427 ], [ %2426, %2424 ]
  %2430 = getelementptr inbounds i32, ptr %11, i64 %2428
  %2431 = load i32, ptr %2430, align 4, !tbaa !6
  %2432 = mul nsw i32 %2431, %2429
  %2433 = add nsw i64 %2428, -1
  %2434 = trunc i64 %2428 to i32
  %2435 = icmp sgt i32 %2434, 0
  br i1 %2435, label %2427, label %2436, !llvm.loop !561

2436:                                             ; preds = %2427, %2418
  %2437 = phi i32 [ %2422, %2418 ], [ %2432, %2427 ]
  %2438 = and i64 %2387, 4294967295
  %2439 = getelementptr inbounds i32, ptr %6, i64 %2438
  %2440 = load i32, ptr %2439, align 4, !tbaa !6
  %2441 = mul nsw i32 %2440, %2437
  %2442 = add nsw i32 %2441, %2381
  %2443 = icmp sgt i64 %2379, 2
  %2444 = add nsw i64 %2380, -1
  %2445 = add i32 %2378, 1
  br i1 %2443, label %2377, label %2446, !llvm.loop !562

2446:                                             ; preds = %2436, %2373
  %2447 = phi i32 [ %2376, %2373 ], [ %2442, %2436 ]
  %2448 = icmp slt i32 %2447, %5
  br i1 %2448, label %2451, label %2449

2449:                                             ; preds = %2446
  %2450 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

2451:                                             ; preds = %2446
  %2452 = sext i32 %2447 to i64
  %2453 = getelementptr inbounds i16, ptr %1891, i64 %2452
  %2454 = load i16, ptr %2453, align 2, !tbaa !79
  %2455 = sitofp i16 %2454 to float
  %2456 = icmp slt i16 %2454, 0
  %2457 = fneg fast float %2455
  %2458 = select i1 %2456, float %2457, float %2455
  %2459 = fmul fast float %2455, %2455
  %2460 = fmul fast float %2459, %2458
  %2461 = fadd fast float %2460, %2374
  store float %2461, ptr %1893, align 4, !tbaa !163
  %2462 = add nuw nsw i32 %2375, 1
  br i1 %2221, label %2463, label %2513

2463:                                             ; preds = %2451
  %2464 = load i32, ptr %4, align 4, !tbaa !6
  %2465 = load i32, ptr %12, align 4, !tbaa !6
  %2466 = add nsw i32 %2465, -1
  %2467 = icmp slt i32 %2464, %2466
  br i1 %2467, label %2490, label %2468

2468:                                             ; preds = %2463
  %2469 = icmp eq i32 %2464, %2466
  br i1 %2469, label %2470, label %2506

2470:                                             ; preds = %2468
  store i32 0, ptr %4, align 4, !tbaa !6
  %2471 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2471, ptr %6, align 4, !tbaa !6
  br i1 %2226, label %2513, label %2472

2472:                                             ; preds = %2470, %2500
  %2473 = phi i64 [ %2504, %2500 ], [ 1, %2470 ]
  %2474 = getelementptr inbounds i32, ptr %4, i64 %2473
  %2475 = load i32, ptr %2474, align 4, !tbaa !6
  %2476 = getelementptr inbounds i32, ptr %12, i64 %2473
  %2477 = load i32, ptr %2476, align 4, !tbaa !6
  %2478 = add nsw i32 %2477, -1
  %2479 = icmp slt i32 %2475, %2478
  br i1 %2479, label %2480, label %2498

2480:                                             ; preds = %2472
  br i1 %2467, label %2490, label %2481

2481:                                             ; preds = %2480
  %2482 = shl i64 %2473, 32
  %2483 = add i64 %2482, -4294967296
  %2484 = ashr exact i64 %2483, 32
  %2485 = getelementptr inbounds i32, ptr %7, i64 %2484
  %2486 = load i32, ptr %2485, align 4, !tbaa !6
  %2487 = getelementptr inbounds i32, ptr %6, i64 %2473
  %2488 = load i32, ptr %2487, align 4, !tbaa !6
  %2489 = add nsw i32 %2488, %2486
  store i32 %2489, ptr %2487, align 4, !tbaa !6
  br label %2508

2490:                                             ; preds = %2463, %2480
  %2491 = phi i32 [ %2475, %2480 ], [ %2464, %2463 ]
  %2492 = phi ptr [ %2474, %2480 ], [ %4, %2463 ]
  %2493 = phi i64 [ %2473, %2480 ], [ 0, %2463 ]
  %2494 = add nsw i32 %2491, 1
  store i32 %2494, ptr %2492, align 4, !tbaa !6
  %2495 = getelementptr inbounds i32, ptr %7, i64 %2493
  %2496 = load i32, ptr %2495, align 4, !tbaa !6
  %2497 = getelementptr inbounds i32, ptr %6, i64 %2493
  br label %2508

2498:                                             ; preds = %2472
  %2499 = icmp eq i32 %2475, %2478
  br i1 %2499, label %2500, label %2506

2500:                                             ; preds = %2498
  store i32 0, ptr %2474, align 4, !tbaa !6
  %2501 = getelementptr inbounds i32, ptr %8, i64 %2473
  %2502 = load i32, ptr %2501, align 4, !tbaa !6
  %2503 = getelementptr inbounds i32, ptr %6, i64 %2473
  store i32 %2502, ptr %2503, align 4, !tbaa !6
  %2504 = add nuw nsw i64 %2473, 1
  %2505 = icmp eq i64 %2504, %2224
  br i1 %2505, label %2513, label %2472, !llvm.loop !563

2506:                                             ; preds = %2468, %2498
  %2507 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2508:                                             ; preds = %2481, %2490
  %2509 = phi ptr [ %2497, %2490 ], [ %2474, %2481 ]
  %2510 = phi i32 [ %2496, %2490 ], [ 1, %2481 ]
  %2511 = load i32, ptr %2509, align 4, !tbaa !6
  %2512 = add nsw i32 %2511, %2510
  store i32 %2512, ptr %2509, align 4, !tbaa !6
  br label %2513

2513:                                             ; preds = %2500, %2508, %2470, %2451
  %2514 = icmp eq i32 %2462, %5
  br i1 %2514, label %3145, label %2373, !llvm.loop !564

2515:                                             ; preds = %1903
  %2516 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 919, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3145

2517:                                             ; preds = %18
  %2518 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2519 = load ptr, ptr %2518, align 8, !tbaa !10
  %2520 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2521 = load ptr, ptr %2520, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2521, align 8, !tbaa !19
  %2522 = icmp eq i32 %13, 0
  br i1 %2522, label %2523, label %2531

2523:                                             ; preds = %2517
  %2524 = load i16, ptr %2519, align 2, !tbaa !79
  %2525 = sitofp i16 %2524 to double
  %2526 = icmp slt i16 %2524, 0
  %2527 = fneg fast double %2525
  %2528 = select i1 %2526, double %2527, double %2525
  %2529 = fmul fast double %2525, %2525
  %2530 = fmul fast double %2529, %2528
  store double %2530, ptr %2521, align 8, !tbaa !19
  br label %3145

2531:                                             ; preds = %2517
  switch i32 %1, label %3139 [
    i32 1, label %2532
    i32 0, label %2837
  ]

2532:                                             ; preds = %2531
  %2533 = getelementptr inbounds i32, ptr %3, i64 %19
  %2534 = load i32, ptr %2533, align 4, !tbaa !6
  %2535 = icmp eq i32 %2534, 0
  %2536 = icmp sgt i32 %5, 0
  br i1 %2535, label %2546, label %2537

2537:                                             ; preds = %2532
  br i1 %2536, label %2538, label %3145

2538:                                             ; preds = %2537
  %2539 = icmp sgt i32 %13, 1
  %2540 = icmp sgt i32 %13, 0
  %2541 = add i32 %13, -2
  %2542 = zext i32 %2541 to i64
  %2543 = zext i32 %13 to i64
  %2544 = add nuw i32 %5, 1
  %2545 = icmp eq i32 %13, 1
  br label %2695

2546:                                             ; preds = %2532
  br i1 %2536, label %2547, label %3145

2547:                                             ; preds = %2546
  %2548 = icmp sgt i32 %13, 1
  %2549 = icmp sgt i32 %13, 0
  %2550 = add i32 %13, -2
  %2551 = zext i32 %2550 to i64
  %2552 = zext i32 %13 to i64
  %2553 = add nuw i32 %5, 1
  %2554 = icmp eq i32 %13, 1
  br label %2555

2555:                                             ; preds = %2547, %2693
  %2556 = phi double [ 0.000000e+00, %2547 ], [ %2643, %2693 ]
  %2557 = phi i32 [ 0, %2547 ], [ %2645, %2693 ]
  %2558 = phi double [ 0.000000e+00, %2547 ], [ %2644, %2693 ]
  %2559 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2548, label %2560, label %2629

2560:                                             ; preds = %2555, %2619
  %2561 = phi i32 [ %2628, %2619 ], [ 0, %2555 ]
  %2562 = phi i64 [ %2570, %2619 ], [ %2552, %2555 ]
  %2563 = phi i64 [ %2627, %2619 ], [ %2551, %2555 ]
  %2564 = phi i32 [ %2625, %2619 ], [ %2559, %2555 ]
  %2565 = sub i32 %2550, %2561
  %2566 = tail call i32 @llvm.smin.i32(i32 %2565, i32 0)
  %2567 = sub i32 %2565, %2566
  %2568 = zext i32 %2567 to i64
  %2569 = add nuw nsw i64 %2568, 1
  %2570 = add nsw i64 %2562, -1
  %2571 = icmp ult i32 %2567, 31
  br i1 %2571, label %2607, label %2572

2572:                                             ; preds = %2560
  %2573 = and i64 %2569, 8589934560
  %2574 = sub i64 %2563, %2573
  br label %2575

2575:                                             ; preds = %2575, %2572
  %2576 = phi i64 [ 0, %2572 ], [ %2599, %2575 ]
  %2577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2572 ], [ %2595, %2575 ]
  %2578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2572 ], [ %2596, %2575 ]
  %2579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2572 ], [ %2597, %2575 ]
  %2580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2572 ], [ %2598, %2575 ]
  %2581 = sub i64 %2563, %2576
  %2582 = getelementptr inbounds i32, ptr %9, i64 %2581
  %2583 = getelementptr inbounds i32, ptr %2582, i64 -7
  %2584 = load <8 x i32>, ptr %2583, align 4, !tbaa !6
  %2585 = shufflevector <8 x i32> %2584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2586 = getelementptr inbounds i32, ptr %2582, i64 -15
  %2587 = load <8 x i32>, ptr %2586, align 4, !tbaa !6
  %2588 = shufflevector <8 x i32> %2587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2589 = getelementptr inbounds i32, ptr %2582, i64 -23
  %2590 = load <8 x i32>, ptr %2589, align 4, !tbaa !6
  %2591 = shufflevector <8 x i32> %2590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2592 = getelementptr inbounds i32, ptr %2582, i64 -31
  %2593 = load <8 x i32>, ptr %2592, align 4, !tbaa !6
  %2594 = shufflevector <8 x i32> %2593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2595 = mul <8 x i32> %2585, %2577
  %2596 = mul <8 x i32> %2588, %2578
  %2597 = mul <8 x i32> %2591, %2579
  %2598 = mul <8 x i32> %2594, %2580
  %2599 = add nuw i64 %2576, 32
  %2600 = icmp eq i64 %2599, %2573
  br i1 %2600, label %2601, label %2575, !llvm.loop !565

2601:                                             ; preds = %2575
  %2602 = mul <8 x i32> %2596, %2595
  %2603 = mul <8 x i32> %2597, %2602
  %2604 = mul <8 x i32> %2598, %2603
  %2605 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2604)
  %2606 = icmp eq i64 %2569, %2573
  br i1 %2606, label %2619, label %2607

2607:                                             ; preds = %2560, %2601
  %2608 = phi i64 [ %2563, %2560 ], [ %2574, %2601 ]
  %2609 = phi i32 [ 1, %2560 ], [ %2605, %2601 ]
  br label %2610

2610:                                             ; preds = %2607, %2610
  %2611 = phi i64 [ %2616, %2610 ], [ %2608, %2607 ]
  %2612 = phi i32 [ %2615, %2610 ], [ %2609, %2607 ]
  %2613 = getelementptr inbounds i32, ptr %9, i64 %2611
  %2614 = load i32, ptr %2613, align 4, !tbaa !6
  %2615 = mul nsw i32 %2614, %2612
  %2616 = add nsw i64 %2611, -1
  %2617 = trunc i64 %2611 to i32
  %2618 = icmp sgt i32 %2617, 0
  br i1 %2618, label %2610, label %2619, !llvm.loop !566

2619:                                             ; preds = %2610, %2601
  %2620 = phi i32 [ %2605, %2601 ], [ %2615, %2610 ]
  %2621 = and i64 %2570, 4294967295
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2621
  %2623 = load i32, ptr %2622, align 4, !tbaa !6
  %2624 = mul nsw i32 %2623, %2620
  %2625 = add nsw i32 %2624, %2564
  %2626 = icmp sgt i64 %2562, 2
  %2627 = add nsw i64 %2563, -1
  %2628 = add i32 %2561, 1
  br i1 %2626, label %2560, label %2629, !llvm.loop !567

2629:                                             ; preds = %2619, %2555
  %2630 = phi i32 [ %2559, %2555 ], [ %2625, %2619 ]
  %2631 = sext i32 %2630 to i64
  %2632 = getelementptr inbounds double, ptr %2, i64 %2631
  %2633 = load double, ptr %2632, align 8, !tbaa !19
  %2634 = getelementptr inbounds i16, ptr %2519, i64 %2631
  %2635 = load i16, ptr %2634, align 2, !tbaa !79
  %2636 = sitofp i16 %2635 to double
  %2637 = fmul fast double %2633, %2636
  %2638 = fcmp fast olt double %2637, 0.000000e+00
  %2639 = fneg fast double %2637
  %2640 = select nnan ninf i1 %2638, double %2639, double %2637
  %2641 = fmul fast double %2637, %2637
  %2642 = fmul fast double %2641, %2640
  %2643 = fadd fast double %2642, %2556
  store double %2643, ptr %2521, align 8, !tbaa !19
  %2644 = fadd fast double %2633, %2558
  %2645 = add nuw nsw i32 %2557, 1
  br i1 %2549, label %2646, label %2693

2646:                                             ; preds = %2629
  %2647 = load i32, ptr %4, align 4, !tbaa !6
  %2648 = load i32, ptr %12, align 4, !tbaa !6
  %2649 = add nsw i32 %2648, -1
  %2650 = icmp slt i32 %2647, %2649
  br i1 %2650, label %2670, label %2651

2651:                                             ; preds = %2646
  %2652 = icmp eq i32 %2647, %2649
  br i1 %2652, label %2653, label %2686

2653:                                             ; preds = %2651
  store i32 0, ptr %4, align 4, !tbaa !6
  %2654 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2654, ptr %6, align 4, !tbaa !6
  br i1 %2554, label %2693, label %2655

2655:                                             ; preds = %2653, %2680
  %2656 = phi i64 [ %2684, %2680 ], [ 1, %2653 ]
  %2657 = getelementptr inbounds i32, ptr %4, i64 %2656
  %2658 = load i32, ptr %2657, align 4, !tbaa !6
  %2659 = getelementptr inbounds i32, ptr %12, i64 %2656
  %2660 = load i32, ptr %2659, align 4, !tbaa !6
  %2661 = add nsw i32 %2660, -1
  %2662 = icmp slt i32 %2658, %2661
  br i1 %2662, label %2663, label %2678

2663:                                             ; preds = %2655
  br i1 %2650, label %2670, label %2664

2664:                                             ; preds = %2663
  %2665 = getelementptr inbounds i32, ptr %7, i64 %2656
  %2666 = load i32, ptr %2665, align 4, !tbaa !6
  %2667 = getelementptr inbounds i32, ptr %6, i64 %2656
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = add nsw i32 %2668, %2666
  store i32 %2669, ptr %2667, align 4, !tbaa !6
  br label %2688

2670:                                             ; preds = %2646, %2663
  %2671 = phi i32 [ %2658, %2663 ], [ %2647, %2646 ]
  %2672 = phi ptr [ %2657, %2663 ], [ %4, %2646 ]
  %2673 = phi i64 [ %2656, %2663 ], [ 0, %2646 ]
  %2674 = add nsw i32 %2671, 1
  store i32 %2674, ptr %2672, align 4, !tbaa !6
  %2675 = getelementptr inbounds i32, ptr %7, i64 %2673
  %2676 = load i32, ptr %2675, align 4, !tbaa !6
  %2677 = getelementptr inbounds i32, ptr %6, i64 %2673
  br label %2688

2678:                                             ; preds = %2655
  %2679 = icmp eq i32 %2658, %2661
  br i1 %2679, label %2680, label %2686

2680:                                             ; preds = %2678
  store i32 0, ptr %2657, align 4, !tbaa !6
  %2681 = getelementptr inbounds i32, ptr %8, i64 %2656
  %2682 = load i32, ptr %2681, align 4, !tbaa !6
  %2683 = getelementptr inbounds i32, ptr %6, i64 %2656
  store i32 %2682, ptr %2683, align 4, !tbaa !6
  %2684 = add nuw nsw i64 %2656, 1
  %2685 = icmp eq i64 %2684, %2552
  br i1 %2685, label %2693, label %2655, !llvm.loop !568

2686:                                             ; preds = %2651, %2678
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2688:                                             ; preds = %2664, %2670
  %2689 = phi ptr [ %2677, %2670 ], [ %2657, %2664 ]
  %2690 = phi i32 [ %2676, %2670 ], [ 1, %2664 ]
  %2691 = load i32, ptr %2689, align 4, !tbaa !6
  %2692 = add nsw i32 %2691, %2690
  store i32 %2692, ptr %2689, align 4, !tbaa !6
  br label %2693

2693:                                             ; preds = %2680, %2688, %2653, %2629
  %2694 = icmp eq i32 %2645, %5
  br i1 %2694, label %3145, label %2555, !llvm.loop !569

2695:                                             ; preds = %2538, %2835
  %2696 = phi double [ 0.000000e+00, %2538 ], [ %2783, %2835 ]
  %2697 = phi i32 [ 0, %2538 ], [ %2784, %2835 ]
  %2698 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2539, label %2699, label %2768

2699:                                             ; preds = %2695, %2758
  %2700 = phi i32 [ %2767, %2758 ], [ 0, %2695 ]
  %2701 = phi i64 [ %2709, %2758 ], [ %2543, %2695 ]
  %2702 = phi i64 [ %2766, %2758 ], [ %2542, %2695 ]
  %2703 = phi i32 [ %2764, %2758 ], [ %2698, %2695 ]
  %2704 = sub i32 %2541, %2700
  %2705 = tail call i32 @llvm.smin.i32(i32 %2704, i32 0)
  %2706 = sub i32 %2704, %2705
  %2707 = zext i32 %2706 to i64
  %2708 = add nuw nsw i64 %2707, 1
  %2709 = add nsw i64 %2701, -1
  %2710 = icmp ult i32 %2706, 31
  br i1 %2710, label %2746, label %2711

2711:                                             ; preds = %2699
  %2712 = and i64 %2708, 8589934560
  %2713 = sub i64 %2702, %2712
  br label %2714

2714:                                             ; preds = %2714, %2711
  %2715 = phi i64 [ 0, %2711 ], [ %2738, %2714 ]
  %2716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2711 ], [ %2734, %2714 ]
  %2717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2711 ], [ %2735, %2714 ]
  %2718 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2711 ], [ %2736, %2714 ]
  %2719 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2711 ], [ %2737, %2714 ]
  %2720 = sub i64 %2702, %2715
  %2721 = getelementptr inbounds i32, ptr %11, i64 %2720
  %2722 = getelementptr inbounds i32, ptr %2721, i64 -7
  %2723 = load <8 x i32>, ptr %2722, align 4, !tbaa !6
  %2724 = shufflevector <8 x i32> %2723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2725 = getelementptr inbounds i32, ptr %2721, i64 -15
  %2726 = load <8 x i32>, ptr %2725, align 4, !tbaa !6
  %2727 = shufflevector <8 x i32> %2726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2728 = getelementptr inbounds i32, ptr %2721, i64 -23
  %2729 = load <8 x i32>, ptr %2728, align 4, !tbaa !6
  %2730 = shufflevector <8 x i32> %2729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2731 = getelementptr inbounds i32, ptr %2721, i64 -31
  %2732 = load <8 x i32>, ptr %2731, align 4, !tbaa !6
  %2733 = shufflevector <8 x i32> %2732, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2734 = mul <8 x i32> %2724, %2716
  %2735 = mul <8 x i32> %2727, %2717
  %2736 = mul <8 x i32> %2730, %2718
  %2737 = mul <8 x i32> %2733, %2719
  %2738 = add nuw i64 %2715, 32
  %2739 = icmp eq i64 %2738, %2712
  br i1 %2739, label %2740, label %2714, !llvm.loop !570

2740:                                             ; preds = %2714
  %2741 = mul <8 x i32> %2735, %2734
  %2742 = mul <8 x i32> %2736, %2741
  %2743 = mul <8 x i32> %2737, %2742
  %2744 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2743)
  %2745 = icmp eq i64 %2708, %2712
  br i1 %2745, label %2758, label %2746

2746:                                             ; preds = %2699, %2740
  %2747 = phi i64 [ %2702, %2699 ], [ %2713, %2740 ]
  %2748 = phi i32 [ 1, %2699 ], [ %2744, %2740 ]
  br label %2749

2749:                                             ; preds = %2746, %2749
  %2750 = phi i64 [ %2755, %2749 ], [ %2747, %2746 ]
  %2751 = phi i32 [ %2754, %2749 ], [ %2748, %2746 ]
  %2752 = getelementptr inbounds i32, ptr %11, i64 %2750
  %2753 = load i32, ptr %2752, align 4, !tbaa !6
  %2754 = mul nsw i32 %2753, %2751
  %2755 = add nsw i64 %2750, -1
  %2756 = trunc i64 %2750 to i32
  %2757 = icmp sgt i32 %2756, 0
  br i1 %2757, label %2749, label %2758, !llvm.loop !571

2758:                                             ; preds = %2749, %2740
  %2759 = phi i32 [ %2744, %2740 ], [ %2754, %2749 ]
  %2760 = and i64 %2709, 4294967295
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2760
  %2762 = load i32, ptr %2761, align 4, !tbaa !6
  %2763 = mul nsw i32 %2762, %2759
  %2764 = add nsw i32 %2763, %2703
  %2765 = icmp sgt i64 %2701, 2
  %2766 = add nsw i64 %2702, -1
  %2767 = add i32 %2700, 1
  br i1 %2765, label %2699, label %2768, !llvm.loop !572

2768:                                             ; preds = %2758, %2695
  %2769 = phi i32 [ %2698, %2695 ], [ %2764, %2758 ]
  %2770 = icmp slt i32 %2769, %5
  br i1 %2770, label %2773, label %2771

2771:                                             ; preds = %2768
  %2772 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

2773:                                             ; preds = %2768
  %2774 = sext i32 %2769 to i64
  %2775 = getelementptr inbounds i16, ptr %2519, i64 %2774
  %2776 = load i16, ptr %2775, align 2, !tbaa !79
  %2777 = sitofp i16 %2776 to double
  %2778 = icmp slt i16 %2776, 0
  %2779 = fneg fast double %2777
  %2780 = select i1 %2778, double %2779, double %2777
  %2781 = fmul fast double %2777, %2777
  %2782 = fmul fast double %2781, %2780
  %2783 = fadd fast double %2782, %2696
  store double %2783, ptr %2521, align 8, !tbaa !19
  %2784 = add nuw nsw i32 %2697, 1
  br i1 %2540, label %2785, label %2835

2785:                                             ; preds = %2773
  %2786 = load i32, ptr %4, align 4, !tbaa !6
  %2787 = load i32, ptr %12, align 4, !tbaa !6
  %2788 = add nsw i32 %2787, -1
  %2789 = icmp slt i32 %2786, %2788
  br i1 %2789, label %2812, label %2790

2790:                                             ; preds = %2785
  %2791 = icmp eq i32 %2786, %2788
  br i1 %2791, label %2792, label %2828

2792:                                             ; preds = %2790
  store i32 0, ptr %4, align 4, !tbaa !6
  %2793 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2793, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2835, label %2794

2794:                                             ; preds = %2792, %2822
  %2795 = phi i64 [ %2826, %2822 ], [ 1, %2792 ]
  %2796 = getelementptr inbounds i32, ptr %4, i64 %2795
  %2797 = load i32, ptr %2796, align 4, !tbaa !6
  %2798 = getelementptr inbounds i32, ptr %12, i64 %2795
  %2799 = load i32, ptr %2798, align 4, !tbaa !6
  %2800 = add nsw i32 %2799, -1
  %2801 = icmp slt i32 %2797, %2800
  br i1 %2801, label %2802, label %2820

2802:                                             ; preds = %2794
  br i1 %2789, label %2812, label %2803

2803:                                             ; preds = %2802
  %2804 = shl i64 %2795, 32
  %2805 = add i64 %2804, -4294967296
  %2806 = ashr exact i64 %2805, 32
  %2807 = getelementptr inbounds i32, ptr %7, i64 %2806
  %2808 = load i32, ptr %2807, align 4, !tbaa !6
  %2809 = getelementptr inbounds i32, ptr %6, i64 %2795
  %2810 = load i32, ptr %2809, align 4, !tbaa !6
  %2811 = add nsw i32 %2810, %2808
  store i32 %2811, ptr %2809, align 4, !tbaa !6
  br label %2830

2812:                                             ; preds = %2785, %2802
  %2813 = phi i32 [ %2797, %2802 ], [ %2786, %2785 ]
  %2814 = phi ptr [ %2796, %2802 ], [ %4, %2785 ]
  %2815 = phi i64 [ %2795, %2802 ], [ 0, %2785 ]
  %2816 = add nsw i32 %2813, 1
  store i32 %2816, ptr %2814, align 4, !tbaa !6
  %2817 = getelementptr inbounds i32, ptr %7, i64 %2815
  %2818 = load i32, ptr %2817, align 4, !tbaa !6
  %2819 = getelementptr inbounds i32, ptr %6, i64 %2815
  br label %2830

2820:                                             ; preds = %2794
  %2821 = icmp eq i32 %2797, %2800
  br i1 %2821, label %2822, label %2828

2822:                                             ; preds = %2820
  store i32 0, ptr %2796, align 4, !tbaa !6
  %2823 = getelementptr inbounds i32, ptr %8, i64 %2795
  %2824 = load i32, ptr %2823, align 4, !tbaa !6
  %2825 = getelementptr inbounds i32, ptr %6, i64 %2795
  store i32 %2824, ptr %2825, align 4, !tbaa !6
  %2826 = add nuw nsw i64 %2795, 1
  %2827 = icmp eq i64 %2826, %2543
  br i1 %2827, label %2835, label %2794, !llvm.loop !573

2828:                                             ; preds = %2790, %2820
  %2829 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2830:                                             ; preds = %2803, %2812
  %2831 = phi ptr [ %2819, %2812 ], [ %2796, %2803 ]
  %2832 = phi i32 [ %2818, %2812 ], [ 1, %2803 ]
  %2833 = load i32, ptr %2831, align 4, !tbaa !6
  %2834 = add nsw i32 %2833, %2832
  store i32 %2834, ptr %2831, align 4, !tbaa !6
  br label %2835

2835:                                             ; preds = %2822, %2830, %2792, %2773
  %2836 = icmp eq i32 %2784, %5
  br i1 %2836, label %3145, label %2695, !llvm.loop !574

2837:                                             ; preds = %2531
  %2838 = getelementptr inbounds i32, ptr %3, i64 %19
  %2839 = load i32, ptr %2838, align 4, !tbaa !6
  %2840 = icmp eq i32 %2839, 0
  %2841 = icmp sgt i32 %5, 0
  br i1 %2840, label %2851, label %2842

2842:                                             ; preds = %2837
  br i1 %2841, label %2843, label %3145

2843:                                             ; preds = %2842
  %2844 = icmp sgt i32 %13, 1
  %2845 = icmp sgt i32 %13, 0
  %2846 = add i32 %13, -2
  %2847 = zext i32 %2846 to i64
  %2848 = zext i32 %13 to i64
  %2849 = add nuw i32 %5, 1
  %2850 = icmp eq i32 %13, 1
  br label %2997

2851:                                             ; preds = %2837
  br i1 %2841, label %2852, label %3145

2852:                                             ; preds = %2851
  %2853 = icmp sgt i32 %13, 1
  %2854 = icmp sgt i32 %13, 0
  %2855 = add i32 %13, -2
  %2856 = zext i32 %2855 to i64
  %2857 = zext i32 %13 to i64
  %2858 = add nuw i32 %5, 1
  %2859 = icmp eq i32 %13, 1
  br label %2860

2860:                                             ; preds = %2852, %2995
  %2861 = phi double [ 0.000000e+00, %2852 ], [ %2945, %2995 ]
  %2862 = phi i32 [ 0, %2852 ], [ %2947, %2995 ]
  %2863 = phi double [ 0.000000e+00, %2852 ], [ %2946, %2995 ]
  %2864 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2853, label %2865, label %2934

2865:                                             ; preds = %2860, %2924
  %2866 = phi i32 [ %2933, %2924 ], [ 0, %2860 ]
  %2867 = phi i64 [ %2875, %2924 ], [ %2857, %2860 ]
  %2868 = phi i64 [ %2932, %2924 ], [ %2856, %2860 ]
  %2869 = phi i32 [ %2930, %2924 ], [ %2864, %2860 ]
  %2870 = sub i32 %2855, %2866
  %2871 = tail call i32 @llvm.smin.i32(i32 %2870, i32 0)
  %2872 = sub i32 %2870, %2871
  %2873 = zext i32 %2872 to i64
  %2874 = add nuw nsw i64 %2873, 1
  %2875 = add nsw i64 %2867, -1
  %2876 = icmp ult i32 %2872, 31
  br i1 %2876, label %2912, label %2877

2877:                                             ; preds = %2865
  %2878 = and i64 %2874, 8589934560
  %2879 = sub i64 %2868, %2878
  br label %2880

2880:                                             ; preds = %2880, %2877
  %2881 = phi i64 [ 0, %2877 ], [ %2904, %2880 ]
  %2882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2877 ], [ %2900, %2880 ]
  %2883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2877 ], [ %2901, %2880 ]
  %2884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2877 ], [ %2902, %2880 ]
  %2885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2877 ], [ %2903, %2880 ]
  %2886 = sub i64 %2868, %2881
  %2887 = getelementptr inbounds i32, ptr %9, i64 %2886
  %2888 = getelementptr inbounds i32, ptr %2887, i64 -7
  %2889 = load <8 x i32>, ptr %2888, align 4, !tbaa !6
  %2890 = shufflevector <8 x i32> %2889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2891 = getelementptr inbounds i32, ptr %2887, i64 -15
  %2892 = load <8 x i32>, ptr %2891, align 4, !tbaa !6
  %2893 = shufflevector <8 x i32> %2892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2894 = getelementptr inbounds i32, ptr %2887, i64 -23
  %2895 = load <8 x i32>, ptr %2894, align 4, !tbaa !6
  %2896 = shufflevector <8 x i32> %2895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2897 = getelementptr inbounds i32, ptr %2887, i64 -31
  %2898 = load <8 x i32>, ptr %2897, align 4, !tbaa !6
  %2899 = shufflevector <8 x i32> %2898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2900 = mul <8 x i32> %2890, %2882
  %2901 = mul <8 x i32> %2893, %2883
  %2902 = mul <8 x i32> %2896, %2884
  %2903 = mul <8 x i32> %2899, %2885
  %2904 = add nuw i64 %2881, 32
  %2905 = icmp eq i64 %2904, %2878
  br i1 %2905, label %2906, label %2880, !llvm.loop !575

2906:                                             ; preds = %2880
  %2907 = mul <8 x i32> %2901, %2900
  %2908 = mul <8 x i32> %2902, %2907
  %2909 = mul <8 x i32> %2903, %2908
  %2910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2909)
  %2911 = icmp eq i64 %2874, %2878
  br i1 %2911, label %2924, label %2912

2912:                                             ; preds = %2865, %2906
  %2913 = phi i64 [ %2868, %2865 ], [ %2879, %2906 ]
  %2914 = phi i32 [ 1, %2865 ], [ %2910, %2906 ]
  br label %2915

2915:                                             ; preds = %2912, %2915
  %2916 = phi i64 [ %2921, %2915 ], [ %2913, %2912 ]
  %2917 = phi i32 [ %2920, %2915 ], [ %2914, %2912 ]
  %2918 = getelementptr inbounds i32, ptr %9, i64 %2916
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = mul nsw i32 %2919, %2917
  %2921 = add nsw i64 %2916, -1
  %2922 = trunc i64 %2916 to i32
  %2923 = icmp sgt i32 %2922, 0
  br i1 %2923, label %2915, label %2924, !llvm.loop !576

2924:                                             ; preds = %2915, %2906
  %2925 = phi i32 [ %2910, %2906 ], [ %2920, %2915 ]
  %2926 = and i64 %2875, 4294967295
  %2927 = getelementptr inbounds i32, ptr %6, i64 %2926
  %2928 = load i32, ptr %2927, align 4, !tbaa !6
  %2929 = mul nsw i32 %2928, %2925
  %2930 = add nsw i32 %2929, %2869
  %2931 = icmp sgt i64 %2867, 2
  %2932 = add nsw i64 %2868, -1
  %2933 = add i32 %2866, 1
  br i1 %2931, label %2865, label %2934, !llvm.loop !577

2934:                                             ; preds = %2924, %2860
  %2935 = phi i32 [ %2864, %2860 ], [ %2930, %2924 ]
  %2936 = sext i32 %2935 to i64
  %2937 = getelementptr inbounds i16, ptr %2519, i64 %2936
  %2938 = load i16, ptr %2937, align 2, !tbaa !79
  %2939 = sitofp i16 %2938 to double
  %2940 = icmp slt i16 %2938, 0
  %2941 = fneg fast double %2939
  %2942 = select i1 %2940, double %2941, double %2939
  %2943 = fmul fast double %2939, %2939
  %2944 = fmul fast double %2943, %2942
  %2945 = fadd fast double %2944, %2861
  %2946 = fadd fast double %2863, 1.000000e+00
  %2947 = add nuw nsw i32 %2862, 1
  br i1 %2854, label %2948, label %2995

2948:                                             ; preds = %2934
  %2949 = load i32, ptr %4, align 4, !tbaa !6
  %2950 = load i32, ptr %12, align 4, !tbaa !6
  %2951 = add nsw i32 %2950, -1
  %2952 = icmp slt i32 %2949, %2951
  br i1 %2952, label %2972, label %2953

2953:                                             ; preds = %2948
  %2954 = icmp eq i32 %2949, %2951
  br i1 %2954, label %2955, label %2988

2955:                                             ; preds = %2953
  store i32 0, ptr %4, align 4, !tbaa !6
  %2956 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2956, ptr %6, align 4, !tbaa !6
  br i1 %2859, label %2995, label %2957

2957:                                             ; preds = %2955, %2982
  %2958 = phi i64 [ %2986, %2982 ], [ 1, %2955 ]
  %2959 = getelementptr inbounds i32, ptr %4, i64 %2958
  %2960 = load i32, ptr %2959, align 4, !tbaa !6
  %2961 = getelementptr inbounds i32, ptr %12, i64 %2958
  %2962 = load i32, ptr %2961, align 4, !tbaa !6
  %2963 = add nsw i32 %2962, -1
  %2964 = icmp slt i32 %2960, %2963
  br i1 %2964, label %2965, label %2980

2965:                                             ; preds = %2957
  br i1 %2952, label %2972, label %2966

2966:                                             ; preds = %2965
  %2967 = getelementptr inbounds i32, ptr %7, i64 %2958
  %2968 = load i32, ptr %2967, align 4, !tbaa !6
  %2969 = getelementptr inbounds i32, ptr %6, i64 %2958
  %2970 = load i32, ptr %2969, align 4, !tbaa !6
  %2971 = add nsw i32 %2970, %2968
  store i32 %2971, ptr %2969, align 4, !tbaa !6
  br label %2990

2972:                                             ; preds = %2948, %2965
  %2973 = phi i32 [ %2960, %2965 ], [ %2949, %2948 ]
  %2974 = phi ptr [ %2959, %2965 ], [ %4, %2948 ]
  %2975 = phi i64 [ %2958, %2965 ], [ 0, %2948 ]
  %2976 = add nsw i32 %2973, 1
  store i32 %2976, ptr %2974, align 4, !tbaa !6
  %2977 = getelementptr inbounds i32, ptr %7, i64 %2975
  %2978 = load i32, ptr %2977, align 4, !tbaa !6
  %2979 = getelementptr inbounds i32, ptr %6, i64 %2975
  br label %2990

2980:                                             ; preds = %2957
  %2981 = icmp eq i32 %2960, %2963
  br i1 %2981, label %2982, label %2988

2982:                                             ; preds = %2980
  store i32 0, ptr %2959, align 4, !tbaa !6
  %2983 = getelementptr inbounds i32, ptr %8, i64 %2958
  %2984 = load i32, ptr %2983, align 4, !tbaa !6
  %2985 = getelementptr inbounds i32, ptr %6, i64 %2958
  store i32 %2984, ptr %2985, align 4, !tbaa !6
  %2986 = add nuw nsw i64 %2958, 1
  %2987 = icmp eq i64 %2986, %2857
  br i1 %2987, label %2995, label %2957, !llvm.loop !578

2988:                                             ; preds = %2953, %2980
  store double %2945, ptr %2521, align 8, !tbaa !19
  %2989 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

2990:                                             ; preds = %2966, %2972
  %2991 = phi ptr [ %2979, %2972 ], [ %2959, %2966 ]
  %2992 = phi i32 [ %2978, %2972 ], [ 1, %2966 ]
  %2993 = load i32, ptr %2991, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, %2992
  store i32 %2994, ptr %2991, align 4, !tbaa !6
  br label %2995

2995:                                             ; preds = %2982, %2990, %2955, %2934
  %2996 = icmp eq i32 %2947, %5
  br i1 %2996, label %3144, label %2860, !llvm.loop !579

2997:                                             ; preds = %2843, %3137
  %2998 = phi double [ 0.000000e+00, %2843 ], [ %3085, %3137 ]
  %2999 = phi i32 [ 0, %2843 ], [ %3086, %3137 ]
  %3000 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2844, label %3001, label %3070

3001:                                             ; preds = %2997, %3060
  %3002 = phi i32 [ %3069, %3060 ], [ 0, %2997 ]
  %3003 = phi i64 [ %3011, %3060 ], [ %2848, %2997 ]
  %3004 = phi i64 [ %3068, %3060 ], [ %2847, %2997 ]
  %3005 = phi i32 [ %3066, %3060 ], [ %3000, %2997 ]
  %3006 = sub i32 %2846, %3002
  %3007 = tail call i32 @llvm.smin.i32(i32 %3006, i32 0)
  %3008 = sub i32 %3006, %3007
  %3009 = zext i32 %3008 to i64
  %3010 = add nuw nsw i64 %3009, 1
  %3011 = add nsw i64 %3003, -1
  %3012 = icmp ult i32 %3008, 31
  br i1 %3012, label %3048, label %3013

3013:                                             ; preds = %3001
  %3014 = and i64 %3010, 8589934560
  %3015 = sub i64 %3004, %3014
  br label %3016

3016:                                             ; preds = %3016, %3013
  %3017 = phi i64 [ 0, %3013 ], [ %3040, %3016 ]
  %3018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3013 ], [ %3036, %3016 ]
  %3019 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3013 ], [ %3037, %3016 ]
  %3020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3013 ], [ %3038, %3016 ]
  %3021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3013 ], [ %3039, %3016 ]
  %3022 = sub i64 %3004, %3017
  %3023 = getelementptr inbounds i32, ptr %11, i64 %3022
  %3024 = getelementptr inbounds i32, ptr %3023, i64 -7
  %3025 = load <8 x i32>, ptr %3024, align 4, !tbaa !6
  %3026 = shufflevector <8 x i32> %3025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3027 = getelementptr inbounds i32, ptr %3023, i64 -15
  %3028 = load <8 x i32>, ptr %3027, align 4, !tbaa !6
  %3029 = shufflevector <8 x i32> %3028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3030 = getelementptr inbounds i32, ptr %3023, i64 -23
  %3031 = load <8 x i32>, ptr %3030, align 4, !tbaa !6
  %3032 = shufflevector <8 x i32> %3031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3033 = getelementptr inbounds i32, ptr %3023, i64 -31
  %3034 = load <8 x i32>, ptr %3033, align 4, !tbaa !6
  %3035 = shufflevector <8 x i32> %3034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3036 = mul <8 x i32> %3026, %3018
  %3037 = mul <8 x i32> %3029, %3019
  %3038 = mul <8 x i32> %3032, %3020
  %3039 = mul <8 x i32> %3035, %3021
  %3040 = add nuw i64 %3017, 32
  %3041 = icmp eq i64 %3040, %3014
  br i1 %3041, label %3042, label %3016, !llvm.loop !580

3042:                                             ; preds = %3016
  %3043 = mul <8 x i32> %3037, %3036
  %3044 = mul <8 x i32> %3038, %3043
  %3045 = mul <8 x i32> %3039, %3044
  %3046 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3045)
  %3047 = icmp eq i64 %3010, %3014
  br i1 %3047, label %3060, label %3048

3048:                                             ; preds = %3001, %3042
  %3049 = phi i64 [ %3004, %3001 ], [ %3015, %3042 ]
  %3050 = phi i32 [ 1, %3001 ], [ %3046, %3042 ]
  br label %3051

3051:                                             ; preds = %3048, %3051
  %3052 = phi i64 [ %3057, %3051 ], [ %3049, %3048 ]
  %3053 = phi i32 [ %3056, %3051 ], [ %3050, %3048 ]
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3052
  %3055 = load i32, ptr %3054, align 4, !tbaa !6
  %3056 = mul nsw i32 %3055, %3053
  %3057 = add nsw i64 %3052, -1
  %3058 = trunc i64 %3052 to i32
  %3059 = icmp sgt i32 %3058, 0
  br i1 %3059, label %3051, label %3060, !llvm.loop !581

3060:                                             ; preds = %3051, %3042
  %3061 = phi i32 [ %3046, %3042 ], [ %3056, %3051 ]
  %3062 = and i64 %3011, 4294967295
  %3063 = getelementptr inbounds i32, ptr %6, i64 %3062
  %3064 = load i32, ptr %3063, align 4, !tbaa !6
  %3065 = mul nsw i32 %3064, %3061
  %3066 = add nsw i32 %3065, %3005
  %3067 = icmp sgt i64 %3003, 2
  %3068 = add nsw i64 %3004, -1
  %3069 = add i32 %3002, 1
  br i1 %3067, label %3001, label %3070, !llvm.loop !582

3070:                                             ; preds = %3060, %2997
  %3071 = phi i32 [ %3000, %2997 ], [ %3066, %3060 ]
  %3072 = icmp slt i32 %3071, %5
  br i1 %3072, label %3075, label %3073

3073:                                             ; preds = %3070
  %3074 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3150

3075:                                             ; preds = %3070
  %3076 = sext i32 %3071 to i64
  %3077 = getelementptr inbounds i16, ptr %2519, i64 %3076
  %3078 = load i16, ptr %3077, align 2, !tbaa !79
  %3079 = sitofp i16 %3078 to double
  %3080 = icmp slt i16 %3078, 0
  %3081 = fneg fast double %3079
  %3082 = select i1 %3080, double %3081, double %3079
  %3083 = fmul fast double %3079, %3079
  %3084 = fmul fast double %3083, %3082
  %3085 = fadd fast double %3084, %2998
  store double %3085, ptr %2521, align 8, !tbaa !19
  %3086 = add nuw nsw i32 %2999, 1
  br i1 %2845, label %3087, label %3137

3087:                                             ; preds = %3075
  %3088 = load i32, ptr %4, align 4, !tbaa !6
  %3089 = load i32, ptr %12, align 4, !tbaa !6
  %3090 = add nsw i32 %3089, -1
  %3091 = icmp slt i32 %3088, %3090
  br i1 %3091, label %3114, label %3092

3092:                                             ; preds = %3087
  %3093 = icmp eq i32 %3088, %3090
  br i1 %3093, label %3094, label %3130

3094:                                             ; preds = %3092
  store i32 0, ptr %4, align 4, !tbaa !6
  %3095 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3095, ptr %6, align 4, !tbaa !6
  br i1 %2850, label %3137, label %3096

3096:                                             ; preds = %3094, %3124
  %3097 = phi i64 [ %3128, %3124 ], [ 1, %3094 ]
  %3098 = getelementptr inbounds i32, ptr %4, i64 %3097
  %3099 = load i32, ptr %3098, align 4, !tbaa !6
  %3100 = getelementptr inbounds i32, ptr %12, i64 %3097
  %3101 = load i32, ptr %3100, align 4, !tbaa !6
  %3102 = add nsw i32 %3101, -1
  %3103 = icmp slt i32 %3099, %3102
  br i1 %3103, label %3104, label %3122

3104:                                             ; preds = %3096
  br i1 %3091, label %3114, label %3105

3105:                                             ; preds = %3104
  %3106 = shl i64 %3097, 32
  %3107 = add i64 %3106, -4294967296
  %3108 = ashr exact i64 %3107, 32
  %3109 = getelementptr inbounds i32, ptr %7, i64 %3108
  %3110 = load i32, ptr %3109, align 4, !tbaa !6
  %3111 = getelementptr inbounds i32, ptr %6, i64 %3097
  %3112 = load i32, ptr %3111, align 4, !tbaa !6
  %3113 = add nsw i32 %3112, %3110
  store i32 %3113, ptr %3111, align 4, !tbaa !6
  br label %3132

3114:                                             ; preds = %3087, %3104
  %3115 = phi i32 [ %3099, %3104 ], [ %3088, %3087 ]
  %3116 = phi ptr [ %3098, %3104 ], [ %4, %3087 ]
  %3117 = phi i64 [ %3097, %3104 ], [ 0, %3087 ]
  %3118 = add nsw i32 %3115, 1
  store i32 %3118, ptr %3116, align 4, !tbaa !6
  %3119 = getelementptr inbounds i32, ptr %7, i64 %3117
  %3120 = load i32, ptr %3119, align 4, !tbaa !6
  %3121 = getelementptr inbounds i32, ptr %6, i64 %3117
  br label %3132

3122:                                             ; preds = %3096
  %3123 = icmp eq i32 %3099, %3102
  br i1 %3123, label %3124, label %3130

3124:                                             ; preds = %3122
  store i32 0, ptr %3098, align 4, !tbaa !6
  %3125 = getelementptr inbounds i32, ptr %8, i64 %3097
  %3126 = load i32, ptr %3125, align 4, !tbaa !6
  %3127 = getelementptr inbounds i32, ptr %6, i64 %3097
  store i32 %3126, ptr %3127, align 4, !tbaa !6
  %3128 = add nuw nsw i64 %3097, 1
  %3129 = icmp eq i64 %3128, %2848
  br i1 %3129, label %3137, label %3096, !llvm.loop !583

3130:                                             ; preds = %3092, %3122
  %3131 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3150

3132:                                             ; preds = %3105, %3114
  %3133 = phi ptr [ %3121, %3114 ], [ %3098, %3105 ]
  %3134 = phi i32 [ %3120, %3114 ], [ 1, %3105 ]
  %3135 = load i32, ptr %3133, align 4, !tbaa !6
  %3136 = add nsw i32 %3135, %3134
  store i32 %3136, ptr %3133, align 4, !tbaa !6
  br label %3137

3137:                                             ; preds = %3124, %3132, %3094, %3075
  %3138 = icmp eq i32 %3086, %5
  br i1 %3138, label %3145, label %2997, !llvm.loop !584

3139:                                             ; preds = %2531
  %3140 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 924, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3145

3141:                                             ; preds = %1743
  store double %1693, ptr %1269, align 8, !tbaa !19
  br label %3145

3142:                                             ; preds = %2067
  store float %2017, ptr %1893, align 4, !tbaa !163
  br label %3145

3143:                                             ; preds = %2371
  store float %2321, ptr %1893, align 4, !tbaa !163
  br label %3145

3144:                                             ; preds = %2995
  store double %2945, ptr %2521, align 8, !tbaa !19
  br label %3145

3145:                                             ; preds = %3137, %2835, %2693, %2513, %2211, %1885, %1583, %1441, %1261, %1119, %959, %815, %633, %494, %337, %198, %2842, %2851, %3144, %2537, %2546, %2218, %2227, %3143, %1909, %1918, %3142, %1590, %1599, %3141, %1285, %1294, %966, %975, %657, %666, %344, %353, %39, %48, %2523, %3139, %1895, %2515, %1271, %1887, %643, %1263, %28, %635, %18
  %3146 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1887 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %2515 ], [ 0.000000e+00, %1895 ], [ 0.000000e+00, %3139 ], [ 0.000000e+00, %2523 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %666 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %975 ], [ 0.000000e+00, %966 ], [ 0.000000e+00, %1294 ], [ 0.000000e+00, %1285 ], [ %1694, %3141 ], [ 0.000000e+00, %1599 ], [ 0.000000e+00, %1590 ], [ %2018, %3142 ], [ 0.000000e+00, %1918 ], [ 0.000000e+00, %1909 ], [ %2322, %3143 ], [ 0.000000e+00, %2227 ], [ 0.000000e+00, %2218 ], [ 0.000000e+00, %2546 ], [ 0.000000e+00, %2537 ], [ %2946, %3144 ], [ 0.000000e+00, %2851 ], [ 0.000000e+00, %2842 ], [ %149, %198 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %766, %815 ], [ 0.000000e+00, %959 ], [ %1070, %1119 ], [ 0.000000e+00, %1261 ], [ %1392, %1441 ], [ 0.000000e+00, %1583 ], [ 0.000000e+00, %1885 ], [ 0.000000e+00, %2211 ], [ 0.000000e+00, %2513 ], [ %2644, %2693 ], [ 0.000000e+00, %2835 ], [ 0.000000e+00, %3137 ]
  %3147 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1263 ], [ 1, %643 ], [ 1, %1887 ], [ 1, %1271 ], [ 1, %2515 ], [ 1, %1895 ], [ 1, %3139 ], [ 1, %2523 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %666 ], [ 1, %657 ], [ 1, %975 ], [ 1, %966 ], [ 1, %1294 ], [ 1, %1285 ], [ %1606, %3141 ], [ 1, %1599 ], [ 1, %1590 ], [ %1925, %3142 ], [ 1, %1918 ], [ 1, %1909 ], [ %2234, %3143 ], [ 1, %2227 ], [ 1, %2218 ], [ 1, %2546 ], [ 1, %2537 ], [ %2858, %3144 ], [ 1, %2851 ], [ 1, %2842 ], [ %55, %198 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %673, %815 ], [ %664, %959 ], [ %982, %1119 ], [ %973, %1261 ], [ %1301, %1441 ], [ %1292, %1583 ], [ %1597, %1885 ], [ %1916, %2211 ], [ %2225, %2513 ], [ %2553, %2693 ], [ %2544, %2835 ], [ %2849, %3137 ]
  %3148 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3147, ptr noundef nonnull @.str.5) #3
  %3149 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3146, ptr noundef nonnull @.str.6) #3
  br label %3150

3150:                                             ; preds = %2686, %2771, %2828, %2988, %3073, %3130, %2060, %2145, %2204, %2364, %2449, %2506, %1434, %1519, %1576, %1736, %1821, %1878, %808, %892, %952, %1112, %1196, %1254, %191, %275, %330, %487, %571, %626, %3145
  %3151 = phi i32 [ 0, %3145 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1254 ], [ -1, %1196 ], [ -1, %1112 ], [ -1, %952 ], [ -1, %892 ], [ -1, %808 ], [ -1, %1878 ], [ -1, %1821 ], [ -1, %1736 ], [ -1, %1576 ], [ -1, %1519 ], [ -1, %1434 ], [ -1, %2506 ], [ -1, %2449 ], [ -1, %2364 ], [ -1, %2204 ], [ -1, %2145 ], [ -1, %2060 ], [ -1, %3130 ], [ -1, %3073 ], [ -1, %2988 ], [ -1, %2828 ], [ -1, %2771 ], [ -1, %2686 ]
  ret i32 %3151
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5686 [
    i32 101, label %22
    i32 102, label %640
    i32 103, label %1265
    i32 104, label %1906
    i32 105, label %2547
    i32 106, label %3172
    i32 107, label %3800
    i32 108, label %4424
    i32 109, label %5054
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !6
  %30 = mul i32 %29, %29
  %31 = mul i32 %30, %29
  %32 = trunc i32 %31 to i8
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5686

33:                                               ; preds = %22
  switch i32 %1, label %638 [
    i32 1, label %34
    i32 0, label %342
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5686

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %5686

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !585

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !586

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !587

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i32, ptr %24, i64 %132
  %136 = load i32, ptr %135, align 4, !tbaa !6
  %137 = load i8, ptr %26, align 1, !tbaa !12
  %138 = uitofp i8 %137 to double
  %139 = and i32 %136, 255
  %140 = sitofp i32 %139 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %138
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !588

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %5686, label %57, !llvm.loop !589

200:                                              ; preds = %40, %340
  %201 = phi i32 [ 0, %40 ], [ %289, %340 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !590

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !591

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !592

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = uitofp i8 %278 to double
  %280 = sext i32 %273 to i64
  %281 = getelementptr inbounds i32, ptr %24, i64 %280
  %282 = load i32, ptr %281, align 4, !tbaa !6
  %283 = and i32 %282, 255
  %284 = sitofp i32 %283 to double
  %285 = fmul fast double %284, %284
  %286 = fmul fast double %285, %284
  %287 = fadd fast double %286, %279
  %288 = fptoui double %287 to i8
  store i8 %288, ptr %26, align 1, !tbaa !12
  %289 = add nuw nsw i32 %201, 1
  br i1 %42, label %290, label %340

290:                                              ; preds = %277
  %291 = load i32, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %12, align 4, !tbaa !6
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %317, label %295

295:                                              ; preds = %290
  %296 = icmp eq i32 %291, %293
  br i1 %296, label %297, label %333

297:                                              ; preds = %295
  store i32 0, ptr %4, align 4, !tbaa !6
  %298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %298, ptr %6, align 4, !tbaa !6
  br i1 %47, label %340, label %299

299:                                              ; preds = %297, %327
  %300 = phi i64 [ %331, %327 ], [ 1, %297 ]
  %301 = getelementptr inbounds i32, ptr %4, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !6
  %303 = getelementptr inbounds i32, ptr %12, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = add nsw i32 %304, -1
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %307, label %325

307:                                              ; preds = %299
  br i1 %294, label %317, label %308

308:                                              ; preds = %307
  %309 = shl i64 %300, 32
  %310 = add i64 %309, -4294967296
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i32, ptr %7, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %300
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = add nsw i32 %315, %313
  store i32 %316, ptr %314, align 4, !tbaa !6
  br label %335

317:                                              ; preds = %290, %307
  %318 = phi i32 [ %302, %307 ], [ %291, %290 ]
  %319 = phi ptr [ %301, %307 ], [ %4, %290 ]
  %320 = phi i64 [ %300, %307 ], [ 0, %290 ]
  %321 = add nsw i32 %318, 1
  store i32 %321, ptr %319, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %7, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %320
  br label %335

325:                                              ; preds = %299
  %326 = icmp eq i32 %302, %305
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  store i32 0, ptr %301, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %8, i64 %300
  %329 = load i32, ptr %328, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %6, i64 %300
  store i32 %329, ptr %330, align 4, !tbaa !6
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %45
  br i1 %332, label %340, label %299, !llvm.loop !593

333:                                              ; preds = %295, %325
  %334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

335:                                              ; preds = %308, %317
  %336 = phi ptr [ %324, %317 ], [ %301, %308 ]
  %337 = phi i32 [ %323, %317 ], [ 1, %308 ]
  %338 = load i32, ptr %336, align 4, !tbaa !6
  %339 = add nsw i32 %338, %337
  store i32 %339, ptr %336, align 4, !tbaa !6
  br label %340

340:                                              ; preds = %327, %335, %297, %277
  %341 = icmp eq i32 %289, %5
  br i1 %341, label %5686, label %200, !llvm.loop !594

342:                                              ; preds = %33
  %343 = getelementptr inbounds i32, ptr %3, i64 %19
  %344 = load i32, ptr %343, align 4, !tbaa !6
  %345 = icmp eq i32 %344, 0
  %346 = icmp sgt i32 %5, 0
  br i1 %345, label %356, label %347

347:                                              ; preds = %342
  br i1 %346, label %348, label %5686

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %499

356:                                              ; preds = %342
  br i1 %346, label %357, label %5686

357:                                              ; preds = %356
  %358 = icmp sgt i32 %13, 1
  %359 = icmp sgt i32 %13, 0
  %360 = add i32 %13, -2
  %361 = zext i32 %360 to i64
  %362 = zext i32 %13 to i64
  %363 = add nuw i32 %5, 1
  %364 = icmp eq i32 %13, 1
  br label %365

365:                                              ; preds = %357, %497
  %366 = phi i32 [ 0, %357 ], [ %449, %497 ]
  %367 = phi double [ 0.000000e+00, %357 ], [ %448, %497 ]
  %368 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %358, label %369, label %438

369:                                              ; preds = %365, %428
  %370 = phi i32 [ %437, %428 ], [ 0, %365 ]
  %371 = phi i64 [ %379, %428 ], [ %362, %365 ]
  %372 = phi i64 [ %436, %428 ], [ %361, %365 ]
  %373 = phi i32 [ %434, %428 ], [ %368, %365 ]
  %374 = sub i32 %360, %370
  %375 = tail call i32 @llvm.smin.i32(i32 %374, i32 0)
  %376 = sub i32 %374, %375
  %377 = zext i32 %376 to i64
  %378 = add nuw nsw i64 %377, 1
  %379 = add nsw i64 %371, -1
  %380 = icmp ult i32 %376, 31
  br i1 %380, label %416, label %381

381:                                              ; preds = %369
  %382 = and i64 %378, 8589934560
  %383 = sub i64 %372, %382
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i64 [ 0, %381 ], [ %408, %384 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %404, %384 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %405, %384 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %406, %384 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %407, %384 ]
  %390 = sub i64 %372, %385
  %391 = getelementptr inbounds i32, ptr %9, i64 %390
  %392 = getelementptr inbounds i32, ptr %391, i64 -7
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %391, i64 -15
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %391, i64 -23
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i32, ptr %391, i64 -31
  %402 = load <8 x i32>, ptr %401, align 4, !tbaa !6
  %403 = shufflevector <8 x i32> %402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %404 = mul <8 x i32> %394, %386
  %405 = mul <8 x i32> %397, %387
  %406 = mul <8 x i32> %400, %388
  %407 = mul <8 x i32> %403, %389
  %408 = add nuw i64 %385, 32
  %409 = icmp eq i64 %408, %382
  br i1 %409, label %410, label %384, !llvm.loop !595

410:                                              ; preds = %384
  %411 = mul <8 x i32> %405, %404
  %412 = mul <8 x i32> %406, %411
  %413 = mul <8 x i32> %407, %412
  %414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %413)
  %415 = icmp eq i64 %378, %382
  br i1 %415, label %428, label %416

416:                                              ; preds = %369, %410
  %417 = phi i64 [ %372, %369 ], [ %383, %410 ]
  %418 = phi i32 [ 1, %369 ], [ %414, %410 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %425, %419 ], [ %417, %416 ]
  %421 = phi i32 [ %424, %419 ], [ %418, %416 ]
  %422 = getelementptr inbounds i32, ptr %9, i64 %420
  %423 = load i32, ptr %422, align 4, !tbaa !6
  %424 = mul nsw i32 %423, %421
  %425 = add nsw i64 %420, -1
  %426 = trunc i64 %420 to i32
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %419, label %428, !llvm.loop !596

428:                                              ; preds = %419, %410
  %429 = phi i32 [ %414, %410 ], [ %424, %419 ]
  %430 = and i64 %379, 4294967295
  %431 = getelementptr inbounds i32, ptr %6, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !6
  %433 = mul nsw i32 %432, %429
  %434 = add nsw i32 %433, %373
  %435 = icmp sgt i64 %371, 2
  %436 = add nsw i64 %372, -1
  %437 = add i32 %370, 1
  br i1 %435, label %369, label %438, !llvm.loop !597

438:                                              ; preds = %428, %365
  %439 = phi i32 [ %368, %365 ], [ %434, %428 ]
  %440 = load i8, ptr %26, align 1, !tbaa !12
  %441 = sext i32 %439 to i64
  %442 = getelementptr inbounds i32, ptr %24, i64 %441
  %443 = load i32, ptr %442, align 4, !tbaa !6
  %444 = mul i32 %443, %443
  %445 = mul i32 %444, %443
  %446 = trunc i32 %445 to i8
  %447 = add i8 %440, %446
  store i8 %447, ptr %26, align 1, !tbaa !12
  %448 = fadd fast double %367, 1.000000e+00
  %449 = add nuw nsw i32 %366, 1
  br i1 %359, label %450, label %497

450:                                              ; preds = %438
  %451 = load i32, ptr %4, align 4, !tbaa !6
  %452 = load i32, ptr %12, align 4, !tbaa !6
  %453 = add nsw i32 %452, -1
  %454 = icmp slt i32 %451, %453
  br i1 %454, label %474, label %455

455:                                              ; preds = %450
  %456 = icmp eq i32 %451, %453
  br i1 %456, label %457, label %490

457:                                              ; preds = %455
  store i32 0, ptr %4, align 4, !tbaa !6
  %458 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %458, ptr %6, align 4, !tbaa !6
  br i1 %364, label %497, label %459

459:                                              ; preds = %457, %484
  %460 = phi i64 [ %488, %484 ], [ 1, %457 ]
  %461 = getelementptr inbounds i32, ptr %4, i64 %460
  %462 = load i32, ptr %461, align 4, !tbaa !6
  %463 = getelementptr inbounds i32, ptr %12, i64 %460
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = add nsw i32 %464, -1
  %466 = icmp slt i32 %462, %465
  br i1 %466, label %467, label %482

467:                                              ; preds = %459
  br i1 %454, label %474, label %468

468:                                              ; preds = %467
  %469 = getelementptr inbounds i32, ptr %7, i64 %460
  %470 = load i32, ptr %469, align 4, !tbaa !6
  %471 = getelementptr inbounds i32, ptr %6, i64 %460
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = add nsw i32 %472, %470
  store i32 %473, ptr %471, align 4, !tbaa !6
  br label %492

474:                                              ; preds = %450, %467
  %475 = phi i32 [ %462, %467 ], [ %451, %450 ]
  %476 = phi ptr [ %461, %467 ], [ %4, %450 ]
  %477 = phi i64 [ %460, %467 ], [ 0, %450 ]
  %478 = add nsw i32 %475, 1
  store i32 %478, ptr %476, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %7, i64 %477
  %480 = load i32, ptr %479, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %6, i64 %477
  br label %492

482:                                              ; preds = %459
  %483 = icmp eq i32 %462, %465
  br i1 %483, label %484, label %490

484:                                              ; preds = %482
  store i32 0, ptr %461, align 4, !tbaa !6
  %485 = getelementptr inbounds i32, ptr %8, i64 %460
  %486 = load i32, ptr %485, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %6, i64 %460
  store i32 %486, ptr %487, align 4, !tbaa !6
  %488 = add nuw nsw i64 %460, 1
  %489 = icmp eq i64 %488, %362
  br i1 %489, label %497, label %459, !llvm.loop !598

490:                                              ; preds = %455, %482
  %491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

492:                                              ; preds = %468, %474
  %493 = phi ptr [ %481, %474 ], [ %461, %468 ]
  %494 = phi i32 [ %480, %474 ], [ 1, %468 ]
  %495 = load i32, ptr %493, align 4, !tbaa !6
  %496 = add nsw i32 %495, %494
  store i32 %496, ptr %493, align 4, !tbaa !6
  br label %497

497:                                              ; preds = %484, %492, %457, %438
  %498 = icmp eq i32 %449, %5
  br i1 %498, label %5686, label %365, !llvm.loop !599

499:                                              ; preds = %348, %636
  %500 = phi i32 [ 0, %348 ], [ %585, %636 ]
  %501 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %349, label %502, label %571

502:                                              ; preds = %499, %561
  %503 = phi i32 [ %570, %561 ], [ 0, %499 ]
  %504 = phi i64 [ %512, %561 ], [ %353, %499 ]
  %505 = phi i64 [ %569, %561 ], [ %352, %499 ]
  %506 = phi i32 [ %567, %561 ], [ %501, %499 ]
  %507 = sub i32 %351, %503
  %508 = tail call i32 @llvm.smin.i32(i32 %507, i32 0)
  %509 = sub i32 %507, %508
  %510 = zext i32 %509 to i64
  %511 = add nuw nsw i64 %510, 1
  %512 = add nsw i64 %504, -1
  %513 = icmp ult i32 %509, 31
  br i1 %513, label %549, label %514

514:                                              ; preds = %502
  %515 = and i64 %511, 8589934560
  %516 = sub i64 %505, %515
  br label %517

517:                                              ; preds = %517, %514
  %518 = phi i64 [ 0, %514 ], [ %541, %517 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %537, %517 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %538, %517 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %539, %517 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %540, %517 ]
  %523 = sub i64 %505, %518
  %524 = getelementptr inbounds i32, ptr %11, i64 %523
  %525 = getelementptr inbounds i32, ptr %524, i64 -7
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %524, i64 -15
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %524, i64 -23
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = getelementptr inbounds i32, ptr %524, i64 -31
  %535 = load <8 x i32>, ptr %534, align 4, !tbaa !6
  %536 = shufflevector <8 x i32> %535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %537 = mul <8 x i32> %527, %519
  %538 = mul <8 x i32> %530, %520
  %539 = mul <8 x i32> %533, %521
  %540 = mul <8 x i32> %536, %522
  %541 = add nuw i64 %518, 32
  %542 = icmp eq i64 %541, %515
  br i1 %542, label %543, label %517, !llvm.loop !600

543:                                              ; preds = %517
  %544 = mul <8 x i32> %538, %537
  %545 = mul <8 x i32> %539, %544
  %546 = mul <8 x i32> %540, %545
  %547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %546)
  %548 = icmp eq i64 %511, %515
  br i1 %548, label %561, label %549

549:                                              ; preds = %502, %543
  %550 = phi i64 [ %505, %502 ], [ %516, %543 ]
  %551 = phi i32 [ 1, %502 ], [ %547, %543 ]
  br label %552

552:                                              ; preds = %549, %552
  %553 = phi i64 [ %558, %552 ], [ %550, %549 ]
  %554 = phi i32 [ %557, %552 ], [ %551, %549 ]
  %555 = getelementptr inbounds i32, ptr %11, i64 %553
  %556 = load i32, ptr %555, align 4, !tbaa !6
  %557 = mul nsw i32 %556, %554
  %558 = add nsw i64 %553, -1
  %559 = trunc i64 %553 to i32
  %560 = icmp sgt i32 %559, 0
  br i1 %560, label %552, label %561, !llvm.loop !601

561:                                              ; preds = %552, %543
  %562 = phi i32 [ %547, %543 ], [ %557, %552 ]
  %563 = and i64 %512, 4294967295
  %564 = getelementptr inbounds i32, ptr %6, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !6
  %566 = mul nsw i32 %565, %562
  %567 = add nsw i32 %566, %506
  %568 = icmp sgt i64 %504, 2
  %569 = add nsw i64 %505, -1
  %570 = add i32 %503, 1
  br i1 %568, label %502, label %571, !llvm.loop !602

571:                                              ; preds = %561, %499
  %572 = phi i32 [ %501, %499 ], [ %567, %561 ]
  %573 = icmp slt i32 %572, %5
  br i1 %573, label %576, label %574

574:                                              ; preds = %571
  %575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

576:                                              ; preds = %571
  %577 = load i8, ptr %26, align 1, !tbaa !12
  %578 = sext i32 %572 to i64
  %579 = getelementptr inbounds i32, ptr %24, i64 %578
  %580 = load i32, ptr %579, align 4, !tbaa !6
  %581 = mul i32 %580, %580
  %582 = mul i32 %581, %580
  %583 = trunc i32 %582 to i8
  %584 = add i8 %577, %583
  store i8 %584, ptr %26, align 1, !tbaa !12
  %585 = add nuw nsw i32 %500, 1
  br i1 %350, label %586, label %636

586:                                              ; preds = %576
  %587 = load i32, ptr %4, align 4, !tbaa !6
  %588 = load i32, ptr %12, align 4, !tbaa !6
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %587, %589
  br i1 %590, label %613, label %591

591:                                              ; preds = %586
  %592 = icmp eq i32 %587, %589
  br i1 %592, label %593, label %629

593:                                              ; preds = %591
  store i32 0, ptr %4, align 4, !tbaa !6
  %594 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %594, ptr %6, align 4, !tbaa !6
  br i1 %355, label %636, label %595

595:                                              ; preds = %593, %623
  %596 = phi i64 [ %627, %623 ], [ 1, %593 ]
  %597 = getelementptr inbounds i32, ptr %4, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !6
  %599 = getelementptr inbounds i32, ptr %12, i64 %596
  %600 = load i32, ptr %599, align 4, !tbaa !6
  %601 = add nsw i32 %600, -1
  %602 = icmp slt i32 %598, %601
  br i1 %602, label %603, label %621

603:                                              ; preds = %595
  br i1 %590, label %613, label %604

604:                                              ; preds = %603
  %605 = shl i64 %596, 32
  %606 = add i64 %605, -4294967296
  %607 = ashr exact i64 %606, 32
  %608 = getelementptr inbounds i32, ptr %7, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %6, i64 %596
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, %609
  store i32 %612, ptr %610, align 4, !tbaa !6
  br label %631

613:                                              ; preds = %586, %603
  %614 = phi i32 [ %598, %603 ], [ %587, %586 ]
  %615 = phi ptr [ %597, %603 ], [ %4, %586 ]
  %616 = phi i64 [ %596, %603 ], [ 0, %586 ]
  %617 = add nsw i32 %614, 1
  store i32 %617, ptr %615, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %7, i64 %616
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %616
  br label %631

621:                                              ; preds = %595
  %622 = icmp eq i32 %598, %601
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  store i32 0, ptr %597, align 4, !tbaa !6
  %624 = getelementptr inbounds i32, ptr %8, i64 %596
  %625 = load i32, ptr %624, align 4, !tbaa !6
  %626 = getelementptr inbounds i32, ptr %6, i64 %596
  store i32 %625, ptr %626, align 4, !tbaa !6
  %627 = add nuw nsw i64 %596, 1
  %628 = icmp eq i64 %627, %353
  br i1 %628, label %636, label %595, !llvm.loop !603

629:                                              ; preds = %591, %621
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

631:                                              ; preds = %604, %613
  %632 = phi ptr [ %620, %613 ], [ %597, %604 ]
  %633 = phi i32 [ %619, %613 ], [ 1, %604 ]
  %634 = load i32, ptr %632, align 4, !tbaa !6
  %635 = add nsw i32 %634, %633
  store i32 %635, ptr %632, align 4, !tbaa !6
  br label %636

636:                                              ; preds = %623, %631, %593, %576
  %637 = icmp eq i32 %585, %5
  br i1 %637, label %5686, label %499, !llvm.loop !604

638:                                              ; preds = %33
  %639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1166, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

640:                                              ; preds = %18
  %641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %642 = load ptr, ptr %641, align 8, !tbaa !10
  %643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !10
  store i32 0, ptr %644, align 4, !tbaa !6
  %645 = icmp eq i32 %13, 0
  br i1 %645, label %646, label %653

646:                                              ; preds = %640
  %647 = load i32, ptr %642, align 4, !tbaa !6
  %648 = icmp slt i32 %647, 0
  %649 = mul nsw i32 %647, %647
  %650 = sub nsw i32 0, %649
  %651 = select i1 %648, i32 %650, i32 %649
  %652 = mul i32 %651, %647
  store i32 %652, ptr %644, align 4, !tbaa !6
  br label %5686

653:                                              ; preds = %640
  switch i32 %1, label %1263 [
    i32 1, label %654
    i32 0, label %963
  ]

654:                                              ; preds = %653
  %655 = getelementptr inbounds i32, ptr %3, i64 %19
  %656 = load i32, ptr %655, align 4, !tbaa !6
  %657 = icmp eq i32 %656, 0
  %658 = icmp sgt i32 %5, 0
  br i1 %657, label %668, label %659

659:                                              ; preds = %654
  br i1 %658, label %660, label %5686

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %819

668:                                              ; preds = %654
  br i1 %658, label %669, label %5686

669:                                              ; preds = %668
  %670 = icmp sgt i32 %13, 1
  %671 = icmp sgt i32 %13, 0
  %672 = add i32 %13, -2
  %673 = zext i32 %672 to i64
  %674 = zext i32 %13 to i64
  %675 = add nuw i32 %5, 1
  %676 = icmp eq i32 %13, 1
  br label %677

677:                                              ; preds = %669, %817
  %678 = phi i32 [ 0, %669 ], [ %769, %817 ]
  %679 = phi double [ 0.000000e+00, %669 ], [ %768, %817 ]
  %680 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %670, label %681, label %750

681:                                              ; preds = %677, %740
  %682 = phi i32 [ %749, %740 ], [ 0, %677 ]
  %683 = phi i64 [ %691, %740 ], [ %674, %677 ]
  %684 = phi i64 [ %748, %740 ], [ %673, %677 ]
  %685 = phi i32 [ %746, %740 ], [ %680, %677 ]
  %686 = sub i32 %672, %682
  %687 = tail call i32 @llvm.smin.i32(i32 %686, i32 0)
  %688 = sub i32 %686, %687
  %689 = zext i32 %688 to i64
  %690 = add nuw nsw i64 %689, 1
  %691 = add nsw i64 %683, -1
  %692 = icmp ult i32 %688, 31
  br i1 %692, label %728, label %693

693:                                              ; preds = %681
  %694 = and i64 %690, 8589934560
  %695 = sub i64 %684, %694
  br label %696

696:                                              ; preds = %696, %693
  %697 = phi i64 [ 0, %693 ], [ %720, %696 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %716, %696 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %717, %696 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %718, %696 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %719, %696 ]
  %702 = sub i64 %684, %697
  %703 = getelementptr inbounds i32, ptr %9, i64 %702
  %704 = getelementptr inbounds i32, ptr %703, i64 -7
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !6
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %703, i64 -15
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %703, i64 -23
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !6
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = getelementptr inbounds i32, ptr %703, i64 -31
  %714 = load <8 x i32>, ptr %713, align 4, !tbaa !6
  %715 = shufflevector <8 x i32> %714, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %716 = mul <8 x i32> %706, %698
  %717 = mul <8 x i32> %709, %699
  %718 = mul <8 x i32> %712, %700
  %719 = mul <8 x i32> %715, %701
  %720 = add nuw i64 %697, 32
  %721 = icmp eq i64 %720, %694
  br i1 %721, label %722, label %696, !llvm.loop !605

722:                                              ; preds = %696
  %723 = mul <8 x i32> %717, %716
  %724 = mul <8 x i32> %718, %723
  %725 = mul <8 x i32> %719, %724
  %726 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %725)
  %727 = icmp eq i64 %690, %694
  br i1 %727, label %740, label %728

728:                                              ; preds = %681, %722
  %729 = phi i64 [ %684, %681 ], [ %695, %722 ]
  %730 = phi i32 [ 1, %681 ], [ %726, %722 ]
  br label %731

731:                                              ; preds = %728, %731
  %732 = phi i64 [ %737, %731 ], [ %729, %728 ]
  %733 = phi i32 [ %736, %731 ], [ %730, %728 ]
  %734 = getelementptr inbounds i32, ptr %9, i64 %732
  %735 = load i32, ptr %734, align 4, !tbaa !6
  %736 = mul nsw i32 %735, %733
  %737 = add nsw i64 %732, -1
  %738 = trunc i64 %732 to i32
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %731, label %740, !llvm.loop !606

740:                                              ; preds = %731, %722
  %741 = phi i32 [ %726, %722 ], [ %736, %731 ]
  %742 = and i64 %691, 4294967295
  %743 = getelementptr inbounds i32, ptr %6, i64 %742
  %744 = load i32, ptr %743, align 4, !tbaa !6
  %745 = mul nsw i32 %744, %741
  %746 = add nsw i32 %745, %685
  %747 = icmp sgt i64 %683, 2
  %748 = add nsw i64 %684, -1
  %749 = add i32 %682, 1
  br i1 %747, label %681, label %750, !llvm.loop !607

750:                                              ; preds = %740, %677
  %751 = phi i32 [ %680, %677 ], [ %746, %740 ]
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds double, ptr %2, i64 %752
  %754 = load double, ptr %753, align 8, !tbaa !19
  %755 = getelementptr inbounds i32, ptr %642, i64 %752
  %756 = load i32, ptr %755, align 4, !tbaa !6
  %757 = load i32, ptr %644, align 4, !tbaa !6
  %758 = sitofp i32 %757 to double
  %759 = sitofp i32 %756 to double
  %760 = fmul fast double %754, %759
  %761 = fcmp fast olt double %760, 0.000000e+00
  %762 = fneg fast double %760
  %763 = select nnan ninf i1 %761, double %762, double %760
  %764 = fmul fast double %760, %760
  %765 = fmul fast double %764, %763
  %766 = fadd fast double %765, %758
  %767 = fptosi double %766 to i32
  store i32 %767, ptr %644, align 4, !tbaa !6
  %768 = fadd fast double %754, %679
  %769 = add nuw nsw i32 %678, 1
  br i1 %671, label %770, label %817

770:                                              ; preds = %750
  %771 = load i32, ptr %4, align 4, !tbaa !6
  %772 = load i32, ptr %12, align 4, !tbaa !6
  %773 = add nsw i32 %772, -1
  %774 = icmp slt i32 %771, %773
  br i1 %774, label %794, label %775

775:                                              ; preds = %770
  %776 = icmp eq i32 %771, %773
  br i1 %776, label %777, label %810

777:                                              ; preds = %775
  store i32 0, ptr %4, align 4, !tbaa !6
  %778 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %778, ptr %6, align 4, !tbaa !6
  br i1 %676, label %817, label %779

779:                                              ; preds = %777, %804
  %780 = phi i64 [ %808, %804 ], [ 1, %777 ]
  %781 = getelementptr inbounds i32, ptr %4, i64 %780
  %782 = load i32, ptr %781, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %12, i64 %780
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = add nsw i32 %784, -1
  %786 = icmp slt i32 %782, %785
  br i1 %786, label %787, label %802

787:                                              ; preds = %779
  br i1 %774, label %794, label %788

788:                                              ; preds = %787
  %789 = getelementptr inbounds i32, ptr %7, i64 %780
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %6, i64 %780
  %792 = load i32, ptr %791, align 4, !tbaa !6
  %793 = add nsw i32 %792, %790
  store i32 %793, ptr %791, align 4, !tbaa !6
  br label %812

794:                                              ; preds = %770, %787
  %795 = phi i32 [ %782, %787 ], [ %771, %770 ]
  %796 = phi ptr [ %781, %787 ], [ %4, %770 ]
  %797 = phi i64 [ %780, %787 ], [ 0, %770 ]
  %798 = add nsw i32 %795, 1
  store i32 %798, ptr %796, align 4, !tbaa !6
  %799 = getelementptr inbounds i32, ptr %7, i64 %797
  %800 = load i32, ptr %799, align 4, !tbaa !6
  %801 = getelementptr inbounds i32, ptr %6, i64 %797
  br label %812

802:                                              ; preds = %779
  %803 = icmp eq i32 %782, %785
  br i1 %803, label %804, label %810

804:                                              ; preds = %802
  store i32 0, ptr %781, align 4, !tbaa !6
  %805 = getelementptr inbounds i32, ptr %8, i64 %780
  %806 = load i32, ptr %805, align 4, !tbaa !6
  %807 = getelementptr inbounds i32, ptr %6, i64 %780
  store i32 %806, ptr %807, align 4, !tbaa !6
  %808 = add nuw nsw i64 %780, 1
  %809 = icmp eq i64 %808, %674
  br i1 %809, label %817, label %779, !llvm.loop !608

810:                                              ; preds = %775, %802
  %811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

812:                                              ; preds = %788, %794
  %813 = phi ptr [ %801, %794 ], [ %781, %788 ]
  %814 = phi i32 [ %800, %794 ], [ 1, %788 ]
  %815 = load i32, ptr %813, align 4, !tbaa !6
  %816 = add nsw i32 %815, %814
  store i32 %816, ptr %813, align 4, !tbaa !6
  br label %817

817:                                              ; preds = %804, %812, %777, %750
  %818 = icmp eq i32 %769, %5
  br i1 %818, label %5686, label %677, !llvm.loop !609

819:                                              ; preds = %660, %961
  %820 = phi i32 [ 0, %660 ], [ %910, %961 ]
  %821 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %661, label %822, label %891

822:                                              ; preds = %819, %881
  %823 = phi i32 [ %890, %881 ], [ 0, %819 ]
  %824 = phi i64 [ %832, %881 ], [ %665, %819 ]
  %825 = phi i64 [ %889, %881 ], [ %664, %819 ]
  %826 = phi i32 [ %887, %881 ], [ %821, %819 ]
  %827 = sub i32 %663, %823
  %828 = tail call i32 @llvm.smin.i32(i32 %827, i32 0)
  %829 = sub i32 %827, %828
  %830 = zext i32 %829 to i64
  %831 = add nuw nsw i64 %830, 1
  %832 = add nsw i64 %824, -1
  %833 = icmp ult i32 %829, 31
  br i1 %833, label %869, label %834

834:                                              ; preds = %822
  %835 = and i64 %831, 8589934560
  %836 = sub i64 %825, %835
  br label %837

837:                                              ; preds = %837, %834
  %838 = phi i64 [ 0, %834 ], [ %861, %837 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %857, %837 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %858, %837 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %859, %837 ]
  %842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %834 ], [ %860, %837 ]
  %843 = sub i64 %825, %838
  %844 = getelementptr inbounds i32, ptr %11, i64 %843
  %845 = getelementptr inbounds i32, ptr %844, i64 -7
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %844, i64 -15
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !6
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %844, i64 -23
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !6
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = getelementptr inbounds i32, ptr %844, i64 -31
  %855 = load <8 x i32>, ptr %854, align 4, !tbaa !6
  %856 = shufflevector <8 x i32> %855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %857 = mul <8 x i32> %847, %839
  %858 = mul <8 x i32> %850, %840
  %859 = mul <8 x i32> %853, %841
  %860 = mul <8 x i32> %856, %842
  %861 = add nuw i64 %838, 32
  %862 = icmp eq i64 %861, %835
  br i1 %862, label %863, label %837, !llvm.loop !610

863:                                              ; preds = %837
  %864 = mul <8 x i32> %858, %857
  %865 = mul <8 x i32> %859, %864
  %866 = mul <8 x i32> %860, %865
  %867 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %866)
  %868 = icmp eq i64 %831, %835
  br i1 %868, label %881, label %869

869:                                              ; preds = %822, %863
  %870 = phi i64 [ %825, %822 ], [ %836, %863 ]
  %871 = phi i32 [ 1, %822 ], [ %867, %863 ]
  br label %872

872:                                              ; preds = %869, %872
  %873 = phi i64 [ %878, %872 ], [ %870, %869 ]
  %874 = phi i32 [ %877, %872 ], [ %871, %869 ]
  %875 = getelementptr inbounds i32, ptr %11, i64 %873
  %876 = load i32, ptr %875, align 4, !tbaa !6
  %877 = mul nsw i32 %876, %874
  %878 = add nsw i64 %873, -1
  %879 = trunc i64 %873 to i32
  %880 = icmp sgt i32 %879, 0
  br i1 %880, label %872, label %881, !llvm.loop !611

881:                                              ; preds = %872, %863
  %882 = phi i32 [ %867, %863 ], [ %877, %872 ]
  %883 = and i64 %832, 4294967295
  %884 = getelementptr inbounds i32, ptr %6, i64 %883
  %885 = load i32, ptr %884, align 4, !tbaa !6
  %886 = mul nsw i32 %885, %882
  %887 = add nsw i32 %886, %826
  %888 = icmp sgt i64 %824, 2
  %889 = add nsw i64 %825, -1
  %890 = add i32 %823, 1
  br i1 %888, label %822, label %891, !llvm.loop !612

891:                                              ; preds = %881, %819
  %892 = phi i32 [ %821, %819 ], [ %887, %881 ]
  %893 = icmp slt i32 %892, %5
  br i1 %893, label %896, label %894

894:                                              ; preds = %891
  %895 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

896:                                              ; preds = %891
  %897 = sext i32 %892 to i64
  %898 = getelementptr inbounds i32, ptr %642, i64 %897
  %899 = load i32, ptr %898, align 4, !tbaa !6
  %900 = load i32, ptr %644, align 4, !tbaa !6
  %901 = sitofp i32 %900 to double
  %902 = sitofp i32 %899 to double
  %903 = icmp slt i32 %899, 0
  %904 = fneg fast double %902
  %905 = select i1 %903, double %904, double %902
  %906 = fmul fast double %902, %902
  %907 = fmul fast double %906, %905
  %908 = fadd fast double %907, %901
  %909 = fptosi double %908 to i32
  store i32 %909, ptr %644, align 4, !tbaa !6
  %910 = add nuw nsw i32 %820, 1
  br i1 %662, label %911, label %961

911:                                              ; preds = %896
  %912 = load i32, ptr %4, align 4, !tbaa !6
  %913 = load i32, ptr %12, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %912, %914
  br i1 %915, label %938, label %916

916:                                              ; preds = %911
  %917 = icmp eq i32 %912, %914
  br i1 %917, label %918, label %954

918:                                              ; preds = %916
  store i32 0, ptr %4, align 4, !tbaa !6
  %919 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %919, ptr %6, align 4, !tbaa !6
  br i1 %667, label %961, label %920

920:                                              ; preds = %918, %948
  %921 = phi i64 [ %952, %948 ], [ 1, %918 ]
  %922 = getelementptr inbounds i32, ptr %4, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %12, i64 %921
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, -1
  %927 = icmp slt i32 %923, %926
  br i1 %927, label %928, label %946

928:                                              ; preds = %920
  br i1 %915, label %938, label %929

929:                                              ; preds = %928
  %930 = shl i64 %921, 32
  %931 = add i64 %930, -4294967296
  %932 = ashr exact i64 %931, 32
  %933 = getelementptr inbounds i32, ptr %7, i64 %932
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %921
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = add nsw i32 %936, %934
  store i32 %937, ptr %935, align 4, !tbaa !6
  br label %956

938:                                              ; preds = %911, %928
  %939 = phi i32 [ %923, %928 ], [ %912, %911 ]
  %940 = phi ptr [ %922, %928 ], [ %4, %911 ]
  %941 = phi i64 [ %921, %928 ], [ 0, %911 ]
  %942 = add nsw i32 %939, 1
  store i32 %942, ptr %940, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %7, i64 %941
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %6, i64 %941
  br label %956

946:                                              ; preds = %920
  %947 = icmp eq i32 %923, %926
  br i1 %947, label %948, label %954

948:                                              ; preds = %946
  store i32 0, ptr %922, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %8, i64 %921
  %950 = load i32, ptr %949, align 4, !tbaa !6
  %951 = getelementptr inbounds i32, ptr %6, i64 %921
  store i32 %950, ptr %951, align 4, !tbaa !6
  %952 = add nuw nsw i64 %921, 1
  %953 = icmp eq i64 %952, %665
  br i1 %953, label %961, label %920, !llvm.loop !613

954:                                              ; preds = %916, %946
  %955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

956:                                              ; preds = %929, %938
  %957 = phi ptr [ %945, %938 ], [ %922, %929 ]
  %958 = phi i32 [ %944, %938 ], [ 1, %929 ]
  %959 = load i32, ptr %957, align 4, !tbaa !6
  %960 = add nsw i32 %959, %958
  store i32 %960, ptr %957, align 4, !tbaa !6
  br label %961

961:                                              ; preds = %948, %956, %918, %896
  %962 = icmp eq i32 %910, %5
  br i1 %962, label %5686, label %819, !llvm.loop !614

963:                                              ; preds = %653
  %964 = getelementptr inbounds i32, ptr %3, i64 %19
  %965 = load i32, ptr %964, align 4, !tbaa !6
  %966 = icmp eq i32 %965, 0
  %967 = icmp sgt i32 %5, 0
  br i1 %966, label %977, label %968

968:                                              ; preds = %963
  br i1 %967, label %969, label %5686

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %1122

977:                                              ; preds = %963
  br i1 %967, label %978, label %5686

978:                                              ; preds = %977
  %979 = icmp sgt i32 %13, 1
  %980 = icmp sgt i32 %13, 0
  %981 = add i32 %13, -2
  %982 = zext i32 %981 to i64
  %983 = zext i32 %13 to i64
  %984 = add nuw i32 %5, 1
  %985 = icmp eq i32 %13, 1
  br label %986

986:                                              ; preds = %978, %1120
  %987 = phi i32 [ 0, %978 ], [ %1072, %1120 ]
  %988 = phi double [ 0.000000e+00, %978 ], [ %1071, %1120 ]
  %989 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %979, label %990, label %1059

990:                                              ; preds = %986, %1049
  %991 = phi i32 [ %1058, %1049 ], [ 0, %986 ]
  %992 = phi i64 [ %1000, %1049 ], [ %983, %986 ]
  %993 = phi i64 [ %1057, %1049 ], [ %982, %986 ]
  %994 = phi i32 [ %1055, %1049 ], [ %989, %986 ]
  %995 = sub i32 %981, %991
  %996 = tail call i32 @llvm.smin.i32(i32 %995, i32 0)
  %997 = sub i32 %995, %996
  %998 = zext i32 %997 to i64
  %999 = add nuw nsw i64 %998, 1
  %1000 = add nsw i64 %992, -1
  %1001 = icmp ult i32 %997, 31
  br i1 %1001, label %1037, label %1002

1002:                                             ; preds = %990
  %1003 = and i64 %999, 8589934560
  %1004 = sub i64 %993, %1003
  br label %1005

1005:                                             ; preds = %1005, %1002
  %1006 = phi i64 [ 0, %1002 ], [ %1029, %1005 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1025, %1005 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1026, %1005 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1027, %1005 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1028, %1005 ]
  %1011 = sub i64 %993, %1006
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1013 = getelementptr inbounds i32, ptr %1012, i64 -7
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = getelementptr inbounds i32, ptr %1012, i64 -15
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !6
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1012, i64 -23
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !6
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1012, i64 -31
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !6
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = mul <8 x i32> %1015, %1007
  %1026 = mul <8 x i32> %1018, %1008
  %1027 = mul <8 x i32> %1021, %1009
  %1028 = mul <8 x i32> %1024, %1010
  %1029 = add nuw i64 %1006, 32
  %1030 = icmp eq i64 %1029, %1003
  br i1 %1030, label %1031, label %1005, !llvm.loop !615

1031:                                             ; preds = %1005
  %1032 = mul <8 x i32> %1026, %1025
  %1033 = mul <8 x i32> %1027, %1032
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1034)
  %1036 = icmp eq i64 %999, %1003
  br i1 %1036, label %1049, label %1037

1037:                                             ; preds = %990, %1031
  %1038 = phi i64 [ %993, %990 ], [ %1004, %1031 ]
  %1039 = phi i32 [ 1, %990 ], [ %1035, %1031 ]
  br label %1040

1040:                                             ; preds = %1037, %1040
  %1041 = phi i64 [ %1046, %1040 ], [ %1038, %1037 ]
  %1042 = phi i32 [ %1045, %1040 ], [ %1039, %1037 ]
  %1043 = getelementptr inbounds i32, ptr %9, i64 %1041
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1042
  %1046 = add nsw i64 %1041, -1
  %1047 = trunc i64 %1041 to i32
  %1048 = icmp sgt i32 %1047, 0
  br i1 %1048, label %1040, label %1049, !llvm.loop !616

1049:                                             ; preds = %1040, %1031
  %1050 = phi i32 [ %1035, %1031 ], [ %1045, %1040 ]
  %1051 = and i64 %1000, 4294967295
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !6
  %1054 = mul nsw i32 %1053, %1050
  %1055 = add nsw i32 %1054, %994
  %1056 = icmp sgt i64 %992, 2
  %1057 = add nsw i64 %993, -1
  %1058 = add i32 %991, 1
  br i1 %1056, label %990, label %1059, !llvm.loop !617

1059:                                             ; preds = %1049, %986
  %1060 = phi i32 [ %989, %986 ], [ %1055, %1049 ]
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds i32, ptr %642, i64 %1061
  %1063 = load i32, ptr %1062, align 4, !tbaa !6
  %1064 = load i32, ptr %644, align 4, !tbaa !6
  %1065 = icmp slt i32 %1063, 0
  %1066 = mul nsw i32 %1063, %1063
  %1067 = sub nsw i32 0, %1066
  %1068 = select i1 %1065, i32 %1067, i32 %1066
  %1069 = mul i32 %1068, %1063
  %1070 = add nsw i32 %1069, %1064
  store i32 %1070, ptr %644, align 4, !tbaa !6
  %1071 = fadd fast double %988, 1.000000e+00
  %1072 = add nuw nsw i32 %987, 1
  br i1 %980, label %1073, label %1120

1073:                                             ; preds = %1059
  %1074 = load i32, ptr %4, align 4, !tbaa !6
  %1075 = load i32, ptr %12, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1074, %1076
  br i1 %1077, label %1097, label %1078

1078:                                             ; preds = %1073
  %1079 = icmp eq i32 %1074, %1076
  br i1 %1079, label %1080, label %1113

1080:                                             ; preds = %1078
  store i32 0, ptr %4, align 4, !tbaa !6
  %1081 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1081, ptr %6, align 4, !tbaa !6
  br i1 %985, label %1120, label %1082

1082:                                             ; preds = %1080, %1107
  %1083 = phi i64 [ %1111, %1107 ], [ 1, %1080 ]
  %1084 = getelementptr inbounds i32, ptr %4, i64 %1083
  %1085 = load i32, ptr %1084, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %12, i64 %1083
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = add nsw i32 %1087, -1
  %1089 = icmp slt i32 %1085, %1088
  br i1 %1089, label %1090, label %1105

1090:                                             ; preds = %1082
  br i1 %1077, label %1097, label %1091

1091:                                             ; preds = %1090
  %1092 = getelementptr inbounds i32, ptr %7, i64 %1083
  %1093 = load i32, ptr %1092, align 4, !tbaa !6
  %1094 = getelementptr inbounds i32, ptr %6, i64 %1083
  %1095 = load i32, ptr %1094, align 4, !tbaa !6
  %1096 = add nsw i32 %1095, %1093
  store i32 %1096, ptr %1094, align 4, !tbaa !6
  br label %1115

1097:                                             ; preds = %1073, %1090
  %1098 = phi i32 [ %1085, %1090 ], [ %1074, %1073 ]
  %1099 = phi ptr [ %1084, %1090 ], [ %4, %1073 ]
  %1100 = phi i64 [ %1083, %1090 ], [ 0, %1073 ]
  %1101 = add nsw i32 %1098, 1
  store i32 %1101, ptr %1099, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %7, i64 %1100
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = getelementptr inbounds i32, ptr %6, i64 %1100
  br label %1115

1105:                                             ; preds = %1082
  %1106 = icmp eq i32 %1085, %1088
  br i1 %1106, label %1107, label %1113

1107:                                             ; preds = %1105
  store i32 0, ptr %1084, align 4, !tbaa !6
  %1108 = getelementptr inbounds i32, ptr %8, i64 %1083
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1083
  store i32 %1109, ptr %1110, align 4, !tbaa !6
  %1111 = add nuw nsw i64 %1083, 1
  %1112 = icmp eq i64 %1111, %983
  br i1 %1112, label %1120, label %1082, !llvm.loop !618

1113:                                             ; preds = %1078, %1105
  %1114 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1115:                                             ; preds = %1091, %1097
  %1116 = phi ptr [ %1104, %1097 ], [ %1084, %1091 ]
  %1117 = phi i32 [ %1103, %1097 ], [ 1, %1091 ]
  %1118 = load i32, ptr %1116, align 4, !tbaa !6
  %1119 = add nsw i32 %1118, %1117
  store i32 %1119, ptr %1116, align 4, !tbaa !6
  br label %1120

1120:                                             ; preds = %1107, %1115, %1080, %1059
  %1121 = icmp eq i32 %1072, %5
  br i1 %1121, label %5686, label %986, !llvm.loop !619

1122:                                             ; preds = %969, %1261
  %1123 = phi i32 [ 0, %969 ], [ %1210, %1261 ]
  %1124 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %1125, label %1194

1125:                                             ; preds = %1122, %1184
  %1126 = phi i32 [ %1193, %1184 ], [ 0, %1122 ]
  %1127 = phi i64 [ %1135, %1184 ], [ %974, %1122 ]
  %1128 = phi i64 [ %1192, %1184 ], [ %973, %1122 ]
  %1129 = phi i32 [ %1190, %1184 ], [ %1124, %1122 ]
  %1130 = sub i32 %972, %1126
  %1131 = tail call i32 @llvm.smin.i32(i32 %1130, i32 0)
  %1132 = sub i32 %1130, %1131
  %1133 = zext i32 %1132 to i64
  %1134 = add nuw nsw i64 %1133, 1
  %1135 = add nsw i64 %1127, -1
  %1136 = icmp ult i32 %1132, 31
  br i1 %1136, label %1172, label %1137

1137:                                             ; preds = %1125
  %1138 = and i64 %1134, 8589934560
  %1139 = sub i64 %1128, %1138
  br label %1140

1140:                                             ; preds = %1140, %1137
  %1141 = phi i64 [ 0, %1137 ], [ %1164, %1140 ]
  %1142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1160, %1140 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1161, %1140 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1162, %1140 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1163, %1140 ]
  %1146 = sub i64 %1128, %1141
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1148 = getelementptr inbounds i32, ptr %1147, i64 -7
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !6
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = getelementptr inbounds i32, ptr %1147, i64 -15
  %1152 = load <8 x i32>, ptr %1151, align 4, !tbaa !6
  %1153 = shufflevector <8 x i32> %1152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1154 = getelementptr inbounds i32, ptr %1147, i64 -23
  %1155 = load <8 x i32>, ptr %1154, align 4, !tbaa !6
  %1156 = shufflevector <8 x i32> %1155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1157 = getelementptr inbounds i32, ptr %1147, i64 -31
  %1158 = load <8 x i32>, ptr %1157, align 4, !tbaa !6
  %1159 = shufflevector <8 x i32> %1158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1160 = mul <8 x i32> %1150, %1142
  %1161 = mul <8 x i32> %1153, %1143
  %1162 = mul <8 x i32> %1156, %1144
  %1163 = mul <8 x i32> %1159, %1145
  %1164 = add nuw i64 %1141, 32
  %1165 = icmp eq i64 %1164, %1138
  br i1 %1165, label %1166, label %1140, !llvm.loop !620

1166:                                             ; preds = %1140
  %1167 = mul <8 x i32> %1161, %1160
  %1168 = mul <8 x i32> %1162, %1167
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1169)
  %1171 = icmp eq i64 %1134, %1138
  br i1 %1171, label %1184, label %1172

1172:                                             ; preds = %1125, %1166
  %1173 = phi i64 [ %1128, %1125 ], [ %1139, %1166 ]
  %1174 = phi i32 [ 1, %1125 ], [ %1170, %1166 ]
  br label %1175

1175:                                             ; preds = %1172, %1175
  %1176 = phi i64 [ %1181, %1175 ], [ %1173, %1172 ]
  %1177 = phi i32 [ %1180, %1175 ], [ %1174, %1172 ]
  %1178 = getelementptr inbounds i32, ptr %11, i64 %1176
  %1179 = load i32, ptr %1178, align 4, !tbaa !6
  %1180 = mul nsw i32 %1179, %1177
  %1181 = add nsw i64 %1176, -1
  %1182 = trunc i64 %1176 to i32
  %1183 = icmp sgt i32 %1182, 0
  br i1 %1183, label %1175, label %1184, !llvm.loop !621

1184:                                             ; preds = %1175, %1166
  %1185 = phi i32 [ %1170, %1166 ], [ %1180, %1175 ]
  %1186 = and i64 %1135, 4294967295
  %1187 = getelementptr inbounds i32, ptr %6, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !6
  %1189 = mul nsw i32 %1188, %1185
  %1190 = add nsw i32 %1189, %1129
  %1191 = icmp sgt i64 %1127, 2
  %1192 = add nsw i64 %1128, -1
  %1193 = add i32 %1126, 1
  br i1 %1191, label %1125, label %1194, !llvm.loop !622

1194:                                             ; preds = %1184, %1122
  %1195 = phi i32 [ %1124, %1122 ], [ %1190, %1184 ]
  %1196 = icmp slt i32 %1195, %5
  br i1 %1196, label %1199, label %1197

1197:                                             ; preds = %1194
  %1198 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1199:                                             ; preds = %1194
  %1200 = sext i32 %1195 to i64
  %1201 = getelementptr inbounds i32, ptr %642, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !6
  %1203 = load i32, ptr %644, align 4, !tbaa !6
  %1204 = icmp slt i32 %1202, 0
  %1205 = mul nsw i32 %1202, %1202
  %1206 = sub nsw i32 0, %1205
  %1207 = select i1 %1204, i32 %1206, i32 %1205
  %1208 = mul i32 %1207, %1202
  %1209 = add nsw i32 %1208, %1203
  store i32 %1209, ptr %644, align 4, !tbaa !6
  %1210 = add nuw nsw i32 %1123, 1
  br i1 %971, label %1211, label %1261

1211:                                             ; preds = %1199
  %1212 = load i32, ptr %4, align 4, !tbaa !6
  %1213 = load i32, ptr %12, align 4, !tbaa !6
  %1214 = add nsw i32 %1213, -1
  %1215 = icmp slt i32 %1212, %1214
  br i1 %1215, label %1238, label %1216

1216:                                             ; preds = %1211
  %1217 = icmp eq i32 %1212, %1214
  br i1 %1217, label %1218, label %1254

1218:                                             ; preds = %1216
  store i32 0, ptr %4, align 4, !tbaa !6
  %1219 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1219, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1261, label %1220

1220:                                             ; preds = %1218, %1248
  %1221 = phi i64 [ %1252, %1248 ], [ 1, %1218 ]
  %1222 = getelementptr inbounds i32, ptr %4, i64 %1221
  %1223 = load i32, ptr %1222, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %12, i64 %1221
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = add nsw i32 %1225, -1
  %1227 = icmp slt i32 %1223, %1226
  br i1 %1227, label %1228, label %1246

1228:                                             ; preds = %1220
  br i1 %1215, label %1238, label %1229

1229:                                             ; preds = %1228
  %1230 = shl i64 %1221, 32
  %1231 = add i64 %1230, -4294967296
  %1232 = ashr exact i64 %1231, 32
  %1233 = getelementptr inbounds i32, ptr %7, i64 %1232
  %1234 = load i32, ptr %1233, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %6, i64 %1221
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = add nsw i32 %1236, %1234
  store i32 %1237, ptr %1235, align 4, !tbaa !6
  br label %1256

1238:                                             ; preds = %1211, %1228
  %1239 = phi i32 [ %1223, %1228 ], [ %1212, %1211 ]
  %1240 = phi ptr [ %1222, %1228 ], [ %4, %1211 ]
  %1241 = phi i64 [ %1221, %1228 ], [ 0, %1211 ]
  %1242 = add nsw i32 %1239, 1
  store i32 %1242, ptr %1240, align 4, !tbaa !6
  %1243 = getelementptr inbounds i32, ptr %7, i64 %1241
  %1244 = load i32, ptr %1243, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %6, i64 %1241
  br label %1256

1246:                                             ; preds = %1220
  %1247 = icmp eq i32 %1223, %1226
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1246
  store i32 0, ptr %1222, align 4, !tbaa !6
  %1249 = getelementptr inbounds i32, ptr %8, i64 %1221
  %1250 = load i32, ptr %1249, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %6, i64 %1221
  store i32 %1250, ptr %1251, align 4, !tbaa !6
  %1252 = add nuw nsw i64 %1221, 1
  %1253 = icmp eq i64 %1252, %974
  br i1 %1253, label %1261, label %1220, !llvm.loop !623

1254:                                             ; preds = %1216, %1246
  %1255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1256:                                             ; preds = %1229, %1238
  %1257 = phi ptr [ %1245, %1238 ], [ %1222, %1229 ]
  %1258 = phi i32 [ %1244, %1238 ], [ 1, %1229 ]
  %1259 = load i32, ptr %1257, align 4, !tbaa !6
  %1260 = add nsw i32 %1259, %1258
  store i32 %1260, ptr %1257, align 4, !tbaa !6
  br label %1261

1261:                                             ; preds = %1248, %1256, %1218, %1199
  %1262 = icmp eq i32 %1210, %5
  br i1 %1262, label %5686, label %1122, !llvm.loop !624

1263:                                             ; preds = %653
  %1264 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1169, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

1265:                                             ; preds = %18
  %1266 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1267 = load ptr, ptr %1266, align 8, !tbaa !10
  %1268 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  store i8 0, ptr %1269, align 1, !tbaa !12
  %1270 = icmp eq i32 %13, 0
  br i1 %1270, label %1271, label %1282

1271:                                             ; preds = %1265
  %1272 = load i32, ptr %1267, align 4, !tbaa !6
  %1273 = and i32 %1272, 128
  %1274 = icmp eq i32 %1273, 0
  %1275 = shl i32 %1272, 24
  %1276 = ashr exact i32 %1275, 24
  %1277 = mul nsw i32 %1276, %1276
  %1278 = mul nsw i32 %1277, %1276
  %1279 = sub nsw i32 0, %1278
  %1280 = select i1 %1274, i32 %1278, i32 %1279
  %1281 = trunc i32 %1280 to i8
  store i8 %1281, ptr %1269, align 1, !tbaa !12
  br label %5686

1282:                                             ; preds = %1265
  switch i32 %1, label %1904 [
    i32 1, label %1283
    i32 0, label %1596
  ]

1283:                                             ; preds = %1282
  %1284 = getelementptr inbounds i32, ptr %3, i64 %19
  %1285 = load i32, ptr %1284, align 4, !tbaa !6
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp sgt i32 %5, 0
  br i1 %1286, label %1297, label %1288

1288:                                             ; preds = %1283
  br i1 %1287, label %1289, label %5686

1289:                                             ; preds = %1288
  %1290 = icmp sgt i32 %13, 1
  %1291 = icmp sgt i32 %13, 0
  %1292 = add i32 %13, -2
  %1293 = zext i32 %1292 to i64
  %1294 = zext i32 %13 to i64
  %1295 = add nuw i32 %5, 1
  %1296 = icmp eq i32 %13, 1
  br label %1450

1297:                                             ; preds = %1283
  br i1 %1287, label %1298, label %5686

1298:                                             ; preds = %1297
  %1299 = icmp sgt i32 %13, 1
  %1300 = icmp sgt i32 %13, 0
  %1301 = add i32 %13, -2
  %1302 = zext i32 %1301 to i64
  %1303 = zext i32 %13 to i64
  %1304 = add nuw i32 %5, 1
  %1305 = icmp eq i32 %13, 1
  br label %1306

1306:                                             ; preds = %1298, %1448
  %1307 = phi i32 [ 0, %1298 ], [ %1400, %1448 ]
  %1308 = phi double [ 0.000000e+00, %1298 ], [ %1399, %1448 ]
  %1309 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1299, label %1310, label %1379

1310:                                             ; preds = %1306, %1369
  %1311 = phi i32 [ %1378, %1369 ], [ 0, %1306 ]
  %1312 = phi i64 [ %1320, %1369 ], [ %1303, %1306 ]
  %1313 = phi i64 [ %1377, %1369 ], [ %1302, %1306 ]
  %1314 = phi i32 [ %1375, %1369 ], [ %1309, %1306 ]
  %1315 = sub i32 %1301, %1311
  %1316 = tail call i32 @llvm.smin.i32(i32 %1315, i32 0)
  %1317 = sub i32 %1315, %1316
  %1318 = zext i32 %1317 to i64
  %1319 = add nuw nsw i64 %1318, 1
  %1320 = add nsw i64 %1312, -1
  %1321 = icmp ult i32 %1317, 31
  br i1 %1321, label %1357, label %1322

1322:                                             ; preds = %1310
  %1323 = and i64 %1319, 8589934560
  %1324 = sub i64 %1313, %1323
  br label %1325

1325:                                             ; preds = %1325, %1322
  %1326 = phi i64 [ 0, %1322 ], [ %1349, %1325 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1345, %1325 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1346, %1325 ]
  %1329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1347, %1325 ]
  %1330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1322 ], [ %1348, %1325 ]
  %1331 = sub i64 %1313, %1326
  %1332 = getelementptr inbounds i32, ptr %9, i64 %1331
  %1333 = getelementptr inbounds i32, ptr %1332, i64 -7
  %1334 = load <8 x i32>, ptr %1333, align 4, !tbaa !6
  %1335 = shufflevector <8 x i32> %1334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1336 = getelementptr inbounds i32, ptr %1332, i64 -15
  %1337 = load <8 x i32>, ptr %1336, align 4, !tbaa !6
  %1338 = shufflevector <8 x i32> %1337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1339 = getelementptr inbounds i32, ptr %1332, i64 -23
  %1340 = load <8 x i32>, ptr %1339, align 4, !tbaa !6
  %1341 = shufflevector <8 x i32> %1340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1342 = getelementptr inbounds i32, ptr %1332, i64 -31
  %1343 = load <8 x i32>, ptr %1342, align 4, !tbaa !6
  %1344 = shufflevector <8 x i32> %1343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1345 = mul <8 x i32> %1335, %1327
  %1346 = mul <8 x i32> %1338, %1328
  %1347 = mul <8 x i32> %1341, %1329
  %1348 = mul <8 x i32> %1344, %1330
  %1349 = add nuw i64 %1326, 32
  %1350 = icmp eq i64 %1349, %1323
  br i1 %1350, label %1351, label %1325, !llvm.loop !625

1351:                                             ; preds = %1325
  %1352 = mul <8 x i32> %1346, %1345
  %1353 = mul <8 x i32> %1347, %1352
  %1354 = mul <8 x i32> %1348, %1353
  %1355 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1354)
  %1356 = icmp eq i64 %1319, %1323
  br i1 %1356, label %1369, label %1357

1357:                                             ; preds = %1310, %1351
  %1358 = phi i64 [ %1313, %1310 ], [ %1324, %1351 ]
  %1359 = phi i32 [ 1, %1310 ], [ %1355, %1351 ]
  br label %1360

1360:                                             ; preds = %1357, %1360
  %1361 = phi i64 [ %1366, %1360 ], [ %1358, %1357 ]
  %1362 = phi i32 [ %1365, %1360 ], [ %1359, %1357 ]
  %1363 = getelementptr inbounds i32, ptr %9, i64 %1361
  %1364 = load i32, ptr %1363, align 4, !tbaa !6
  %1365 = mul nsw i32 %1364, %1362
  %1366 = add nsw i64 %1361, -1
  %1367 = trunc i64 %1361 to i32
  %1368 = icmp sgt i32 %1367, 0
  br i1 %1368, label %1360, label %1369, !llvm.loop !626

1369:                                             ; preds = %1360, %1351
  %1370 = phi i32 [ %1355, %1351 ], [ %1365, %1360 ]
  %1371 = and i64 %1320, 4294967295
  %1372 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !6
  %1374 = mul nsw i32 %1373, %1370
  %1375 = add nsw i32 %1374, %1314
  %1376 = icmp sgt i64 %1312, 2
  %1377 = add nsw i64 %1313, -1
  %1378 = add i32 %1311, 1
  br i1 %1376, label %1310, label %1379, !llvm.loop !627

1379:                                             ; preds = %1369, %1306
  %1380 = phi i32 [ %1309, %1306 ], [ %1375, %1369 ]
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds double, ptr %2, i64 %1381
  %1383 = load double, ptr %1382, align 8, !tbaa !19
  %1384 = getelementptr inbounds i32, ptr %1267, i64 %1381
  %1385 = load i32, ptr %1384, align 4, !tbaa !6
  %1386 = load i8, ptr %1269, align 1, !tbaa !12
  %1387 = sitofp i8 %1386 to double
  %1388 = shl i32 %1385, 24
  %1389 = ashr exact i32 %1388, 24
  %1390 = sitofp i32 %1389 to double
  %1391 = fmul fast double %1383, %1390
  %1392 = fcmp fast olt double %1391, 0.000000e+00
  %1393 = fneg fast double %1391
  %1394 = select nnan ninf i1 %1392, double %1393, double %1391
  %1395 = fmul fast double %1391, %1391
  %1396 = fmul fast double %1395, %1394
  %1397 = fadd fast double %1396, %1387
  %1398 = fptosi double %1397 to i8
  store i8 %1398, ptr %1269, align 1, !tbaa !12
  %1399 = fadd fast double %1383, %1308
  %1400 = add nuw nsw i32 %1307, 1
  br i1 %1300, label %1401, label %1448

1401:                                             ; preds = %1379
  %1402 = load i32, ptr %4, align 4, !tbaa !6
  %1403 = load i32, ptr %12, align 4, !tbaa !6
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1402, %1404
  br i1 %1405, label %1425, label %1406

1406:                                             ; preds = %1401
  %1407 = icmp eq i32 %1402, %1404
  br i1 %1407, label %1408, label %1441

1408:                                             ; preds = %1406
  store i32 0, ptr %4, align 4, !tbaa !6
  %1409 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1409, ptr %6, align 4, !tbaa !6
  br i1 %1305, label %1448, label %1410

1410:                                             ; preds = %1408, %1435
  %1411 = phi i64 [ %1439, %1435 ], [ 1, %1408 ]
  %1412 = getelementptr inbounds i32, ptr %4, i64 %1411
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %12, i64 %1411
  %1415 = load i32, ptr %1414, align 4, !tbaa !6
  %1416 = add nsw i32 %1415, -1
  %1417 = icmp slt i32 %1413, %1416
  br i1 %1417, label %1418, label %1433

1418:                                             ; preds = %1410
  br i1 %1405, label %1425, label %1419

1419:                                             ; preds = %1418
  %1420 = getelementptr inbounds i32, ptr %7, i64 %1411
  %1421 = load i32, ptr %1420, align 4, !tbaa !6
  %1422 = getelementptr inbounds i32, ptr %6, i64 %1411
  %1423 = load i32, ptr %1422, align 4, !tbaa !6
  %1424 = add nsw i32 %1423, %1421
  store i32 %1424, ptr %1422, align 4, !tbaa !6
  br label %1443

1425:                                             ; preds = %1401, %1418
  %1426 = phi i32 [ %1413, %1418 ], [ %1402, %1401 ]
  %1427 = phi ptr [ %1412, %1418 ], [ %4, %1401 ]
  %1428 = phi i64 [ %1411, %1418 ], [ 0, %1401 ]
  %1429 = add nsw i32 %1426, 1
  store i32 %1429, ptr %1427, align 4, !tbaa !6
  %1430 = getelementptr inbounds i32, ptr %7, i64 %1428
  %1431 = load i32, ptr %1430, align 4, !tbaa !6
  %1432 = getelementptr inbounds i32, ptr %6, i64 %1428
  br label %1443

1433:                                             ; preds = %1410
  %1434 = icmp eq i32 %1413, %1416
  br i1 %1434, label %1435, label %1441

1435:                                             ; preds = %1433
  store i32 0, ptr %1412, align 4, !tbaa !6
  %1436 = getelementptr inbounds i32, ptr %8, i64 %1411
  %1437 = load i32, ptr %1436, align 4, !tbaa !6
  %1438 = getelementptr inbounds i32, ptr %6, i64 %1411
  store i32 %1437, ptr %1438, align 4, !tbaa !6
  %1439 = add nuw nsw i64 %1411, 1
  %1440 = icmp eq i64 %1439, %1303
  br i1 %1440, label %1448, label %1410, !llvm.loop !628

1441:                                             ; preds = %1406, %1433
  %1442 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1443:                                             ; preds = %1419, %1425
  %1444 = phi ptr [ %1432, %1425 ], [ %1412, %1419 ]
  %1445 = phi i32 [ %1431, %1425 ], [ 1, %1419 ]
  %1446 = load i32, ptr %1444, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, %1445
  store i32 %1447, ptr %1444, align 4, !tbaa !6
  br label %1448

1448:                                             ; preds = %1435, %1443, %1408, %1379
  %1449 = icmp eq i32 %1400, %5
  br i1 %1449, label %5686, label %1306, !llvm.loop !629

1450:                                             ; preds = %1289, %1594
  %1451 = phi i32 [ 0, %1289 ], [ %1543, %1594 ]
  %1452 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1290, label %1453, label %1522

1453:                                             ; preds = %1450, %1512
  %1454 = phi i32 [ %1521, %1512 ], [ 0, %1450 ]
  %1455 = phi i64 [ %1463, %1512 ], [ %1294, %1450 ]
  %1456 = phi i64 [ %1520, %1512 ], [ %1293, %1450 ]
  %1457 = phi i32 [ %1518, %1512 ], [ %1452, %1450 ]
  %1458 = sub i32 %1292, %1454
  %1459 = tail call i32 @llvm.smin.i32(i32 %1458, i32 0)
  %1460 = sub i32 %1458, %1459
  %1461 = zext i32 %1460 to i64
  %1462 = add nuw nsw i64 %1461, 1
  %1463 = add nsw i64 %1455, -1
  %1464 = icmp ult i32 %1460, 31
  br i1 %1464, label %1500, label %1465

1465:                                             ; preds = %1453
  %1466 = and i64 %1462, 8589934560
  %1467 = sub i64 %1456, %1466
  br label %1468

1468:                                             ; preds = %1468, %1465
  %1469 = phi i64 [ 0, %1465 ], [ %1492, %1468 ]
  %1470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1488, %1468 ]
  %1471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1489, %1468 ]
  %1472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1490, %1468 ]
  %1473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1465 ], [ %1491, %1468 ]
  %1474 = sub i64 %1456, %1469
  %1475 = getelementptr inbounds i32, ptr %11, i64 %1474
  %1476 = getelementptr inbounds i32, ptr %1475, i64 -7
  %1477 = load <8 x i32>, ptr %1476, align 4, !tbaa !6
  %1478 = shufflevector <8 x i32> %1477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1479 = getelementptr inbounds i32, ptr %1475, i64 -15
  %1480 = load <8 x i32>, ptr %1479, align 4, !tbaa !6
  %1481 = shufflevector <8 x i32> %1480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1482 = getelementptr inbounds i32, ptr %1475, i64 -23
  %1483 = load <8 x i32>, ptr %1482, align 4, !tbaa !6
  %1484 = shufflevector <8 x i32> %1483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1485 = getelementptr inbounds i32, ptr %1475, i64 -31
  %1486 = load <8 x i32>, ptr %1485, align 4, !tbaa !6
  %1487 = shufflevector <8 x i32> %1486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1488 = mul <8 x i32> %1478, %1470
  %1489 = mul <8 x i32> %1481, %1471
  %1490 = mul <8 x i32> %1484, %1472
  %1491 = mul <8 x i32> %1487, %1473
  %1492 = add nuw i64 %1469, 32
  %1493 = icmp eq i64 %1492, %1466
  br i1 %1493, label %1494, label %1468, !llvm.loop !630

1494:                                             ; preds = %1468
  %1495 = mul <8 x i32> %1489, %1488
  %1496 = mul <8 x i32> %1490, %1495
  %1497 = mul <8 x i32> %1491, %1496
  %1498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1497)
  %1499 = icmp eq i64 %1462, %1466
  br i1 %1499, label %1512, label %1500

1500:                                             ; preds = %1453, %1494
  %1501 = phi i64 [ %1456, %1453 ], [ %1467, %1494 ]
  %1502 = phi i32 [ 1, %1453 ], [ %1498, %1494 ]
  br label %1503

1503:                                             ; preds = %1500, %1503
  %1504 = phi i64 [ %1509, %1503 ], [ %1501, %1500 ]
  %1505 = phi i32 [ %1508, %1503 ], [ %1502, %1500 ]
  %1506 = getelementptr inbounds i32, ptr %11, i64 %1504
  %1507 = load i32, ptr %1506, align 4, !tbaa !6
  %1508 = mul nsw i32 %1507, %1505
  %1509 = add nsw i64 %1504, -1
  %1510 = trunc i64 %1504 to i32
  %1511 = icmp sgt i32 %1510, 0
  br i1 %1511, label %1503, label %1512, !llvm.loop !631

1512:                                             ; preds = %1503, %1494
  %1513 = phi i32 [ %1498, %1494 ], [ %1508, %1503 ]
  %1514 = and i64 %1463, 4294967295
  %1515 = getelementptr inbounds i32, ptr %6, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !6
  %1517 = mul nsw i32 %1516, %1513
  %1518 = add nsw i32 %1517, %1457
  %1519 = icmp sgt i64 %1455, 2
  %1520 = add nsw i64 %1456, -1
  %1521 = add i32 %1454, 1
  br i1 %1519, label %1453, label %1522, !llvm.loop !632

1522:                                             ; preds = %1512, %1450
  %1523 = phi i32 [ %1452, %1450 ], [ %1518, %1512 ]
  %1524 = icmp slt i32 %1523, %5
  br i1 %1524, label %1527, label %1525

1525:                                             ; preds = %1522
  %1526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1527:                                             ; preds = %1522
  %1528 = sext i32 %1523 to i64
  %1529 = getelementptr inbounds i32, ptr %1267, i64 %1528
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = load i8, ptr %1269, align 1, !tbaa !12
  %1532 = sitofp i8 %1531 to double
  %1533 = shl i32 %1530, 24
  %1534 = ashr exact i32 %1533, 24
  %1535 = sitofp i32 %1534 to double
  %1536 = icmp slt i32 %1533, 0
  %1537 = fneg fast double %1535
  %1538 = select i1 %1536, double %1537, double %1535
  %1539 = fmul fast double %1535, %1535
  %1540 = fmul fast double %1539, %1538
  %1541 = fadd fast double %1540, %1532
  %1542 = fptosi double %1541 to i8
  store i8 %1542, ptr %1269, align 1, !tbaa !12
  %1543 = add nuw nsw i32 %1451, 1
  br i1 %1291, label %1544, label %1594

1544:                                             ; preds = %1527
  %1545 = load i32, ptr %4, align 4, !tbaa !6
  %1546 = load i32, ptr %12, align 4, !tbaa !6
  %1547 = add nsw i32 %1546, -1
  %1548 = icmp slt i32 %1545, %1547
  br i1 %1548, label %1571, label %1549

1549:                                             ; preds = %1544
  %1550 = icmp eq i32 %1545, %1547
  br i1 %1550, label %1551, label %1587

1551:                                             ; preds = %1549
  store i32 0, ptr %4, align 4, !tbaa !6
  %1552 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1552, ptr %6, align 4, !tbaa !6
  br i1 %1296, label %1594, label %1553

1553:                                             ; preds = %1551, %1581
  %1554 = phi i64 [ %1585, %1581 ], [ 1, %1551 ]
  %1555 = getelementptr inbounds i32, ptr %4, i64 %1554
  %1556 = load i32, ptr %1555, align 4, !tbaa !6
  %1557 = getelementptr inbounds i32, ptr %12, i64 %1554
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = add nsw i32 %1558, -1
  %1560 = icmp slt i32 %1556, %1559
  br i1 %1560, label %1561, label %1579

1561:                                             ; preds = %1553
  br i1 %1548, label %1571, label %1562

1562:                                             ; preds = %1561
  %1563 = shl i64 %1554, 32
  %1564 = add i64 %1563, -4294967296
  %1565 = ashr exact i64 %1564, 32
  %1566 = getelementptr inbounds i32, ptr %7, i64 %1565
  %1567 = load i32, ptr %1566, align 4, !tbaa !6
  %1568 = getelementptr inbounds i32, ptr %6, i64 %1554
  %1569 = load i32, ptr %1568, align 4, !tbaa !6
  %1570 = add nsw i32 %1569, %1567
  store i32 %1570, ptr %1568, align 4, !tbaa !6
  br label %1589

1571:                                             ; preds = %1544, %1561
  %1572 = phi i32 [ %1556, %1561 ], [ %1545, %1544 ]
  %1573 = phi ptr [ %1555, %1561 ], [ %4, %1544 ]
  %1574 = phi i64 [ %1554, %1561 ], [ 0, %1544 ]
  %1575 = add nsw i32 %1572, 1
  store i32 %1575, ptr %1573, align 4, !tbaa !6
  %1576 = getelementptr inbounds i32, ptr %7, i64 %1574
  %1577 = load i32, ptr %1576, align 4, !tbaa !6
  %1578 = getelementptr inbounds i32, ptr %6, i64 %1574
  br label %1589

1579:                                             ; preds = %1553
  %1580 = icmp eq i32 %1556, %1559
  br i1 %1580, label %1581, label %1587

1581:                                             ; preds = %1579
  store i32 0, ptr %1555, align 4, !tbaa !6
  %1582 = getelementptr inbounds i32, ptr %8, i64 %1554
  %1583 = load i32, ptr %1582, align 4, !tbaa !6
  %1584 = getelementptr inbounds i32, ptr %6, i64 %1554
  store i32 %1583, ptr %1584, align 4, !tbaa !6
  %1585 = add nuw nsw i64 %1554, 1
  %1586 = icmp eq i64 %1585, %1294
  br i1 %1586, label %1594, label %1553, !llvm.loop !633

1587:                                             ; preds = %1549, %1579
  %1588 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1589:                                             ; preds = %1562, %1571
  %1590 = phi ptr [ %1578, %1571 ], [ %1555, %1562 ]
  %1591 = phi i32 [ %1577, %1571 ], [ 1, %1562 ]
  %1592 = load i32, ptr %1590, align 4, !tbaa !6
  %1593 = add nsw i32 %1592, %1591
  store i32 %1593, ptr %1590, align 4, !tbaa !6
  br label %1594

1594:                                             ; preds = %1581, %1589, %1551, %1527
  %1595 = icmp eq i32 %1543, %5
  br i1 %1595, label %5686, label %1450, !llvm.loop !634

1596:                                             ; preds = %1282
  %1597 = getelementptr inbounds i32, ptr %3, i64 %19
  %1598 = load i32, ptr %1597, align 4, !tbaa !6
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp sgt i32 %5, 0
  br i1 %1599, label %1610, label %1601

1601:                                             ; preds = %1596
  br i1 %1600, label %1602, label %5686

1602:                                             ; preds = %1601
  %1603 = icmp sgt i32 %13, 1
  %1604 = icmp sgt i32 %13, 0
  %1605 = add i32 %13, -2
  %1606 = zext i32 %1605 to i64
  %1607 = zext i32 %13 to i64
  %1608 = add nuw i32 %5, 1
  %1609 = icmp eq i32 %13, 1
  br label %1759

1610:                                             ; preds = %1596
  br i1 %1600, label %1611, label %5686

1611:                                             ; preds = %1610
  %1612 = icmp sgt i32 %13, 1
  %1613 = icmp sgt i32 %13, 0
  %1614 = add i32 %13, -2
  %1615 = zext i32 %1614 to i64
  %1616 = zext i32 %13 to i64
  %1617 = add nuw i32 %5, 1
  %1618 = icmp eq i32 %13, 1
  br label %1619

1619:                                             ; preds = %1611, %1757
  %1620 = phi i32 [ 0, %1611 ], [ %1709, %1757 ]
  %1621 = phi double [ 0.000000e+00, %1611 ], [ %1708, %1757 ]
  %1622 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1612, label %1623, label %1692

1623:                                             ; preds = %1619, %1682
  %1624 = phi i32 [ %1691, %1682 ], [ 0, %1619 ]
  %1625 = phi i64 [ %1633, %1682 ], [ %1616, %1619 ]
  %1626 = phi i64 [ %1690, %1682 ], [ %1615, %1619 ]
  %1627 = phi i32 [ %1688, %1682 ], [ %1622, %1619 ]
  %1628 = sub i32 %1614, %1624
  %1629 = tail call i32 @llvm.smin.i32(i32 %1628, i32 0)
  %1630 = sub i32 %1628, %1629
  %1631 = zext i32 %1630 to i64
  %1632 = add nuw nsw i64 %1631, 1
  %1633 = add nsw i64 %1625, -1
  %1634 = icmp ult i32 %1630, 31
  br i1 %1634, label %1670, label %1635

1635:                                             ; preds = %1623
  %1636 = and i64 %1632, 8589934560
  %1637 = sub i64 %1626, %1636
  br label %1638

1638:                                             ; preds = %1638, %1635
  %1639 = phi i64 [ 0, %1635 ], [ %1662, %1638 ]
  %1640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1658, %1638 ]
  %1641 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1659, %1638 ]
  %1642 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1660, %1638 ]
  %1643 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1635 ], [ %1661, %1638 ]
  %1644 = sub i64 %1626, %1639
  %1645 = getelementptr inbounds i32, ptr %9, i64 %1644
  %1646 = getelementptr inbounds i32, ptr %1645, i64 -7
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !6
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = getelementptr inbounds i32, ptr %1645, i64 -15
  %1650 = load <8 x i32>, ptr %1649, align 4, !tbaa !6
  %1651 = shufflevector <8 x i32> %1650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1652 = getelementptr inbounds i32, ptr %1645, i64 -23
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = getelementptr inbounds i32, ptr %1645, i64 -31
  %1656 = load <8 x i32>, ptr %1655, align 4, !tbaa !6
  %1657 = shufflevector <8 x i32> %1656, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1658 = mul <8 x i32> %1648, %1640
  %1659 = mul <8 x i32> %1651, %1641
  %1660 = mul <8 x i32> %1654, %1642
  %1661 = mul <8 x i32> %1657, %1643
  %1662 = add nuw i64 %1639, 32
  %1663 = icmp eq i64 %1662, %1636
  br i1 %1663, label %1664, label %1638, !llvm.loop !635

1664:                                             ; preds = %1638
  %1665 = mul <8 x i32> %1659, %1658
  %1666 = mul <8 x i32> %1660, %1665
  %1667 = mul <8 x i32> %1661, %1666
  %1668 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1667)
  %1669 = icmp eq i64 %1632, %1636
  br i1 %1669, label %1682, label %1670

1670:                                             ; preds = %1623, %1664
  %1671 = phi i64 [ %1626, %1623 ], [ %1637, %1664 ]
  %1672 = phi i32 [ 1, %1623 ], [ %1668, %1664 ]
  br label %1673

1673:                                             ; preds = %1670, %1673
  %1674 = phi i64 [ %1679, %1673 ], [ %1671, %1670 ]
  %1675 = phi i32 [ %1678, %1673 ], [ %1672, %1670 ]
  %1676 = getelementptr inbounds i32, ptr %9, i64 %1674
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = mul nsw i32 %1677, %1675
  %1679 = add nsw i64 %1674, -1
  %1680 = trunc i64 %1674 to i32
  %1681 = icmp sgt i32 %1680, 0
  br i1 %1681, label %1673, label %1682, !llvm.loop !636

1682:                                             ; preds = %1673, %1664
  %1683 = phi i32 [ %1668, %1664 ], [ %1678, %1673 ]
  %1684 = and i64 %1633, 4294967295
  %1685 = getelementptr inbounds i32, ptr %6, i64 %1684
  %1686 = load i32, ptr %1685, align 4, !tbaa !6
  %1687 = mul nsw i32 %1686, %1683
  %1688 = add nsw i32 %1687, %1627
  %1689 = icmp sgt i64 %1625, 2
  %1690 = add nsw i64 %1626, -1
  %1691 = add i32 %1624, 1
  br i1 %1689, label %1623, label %1692, !llvm.loop !637

1692:                                             ; preds = %1682, %1619
  %1693 = phi i32 [ %1622, %1619 ], [ %1688, %1682 ]
  %1694 = sext i32 %1693 to i64
  %1695 = getelementptr inbounds i32, ptr %1267, i64 %1694
  %1696 = load i32, ptr %1695, align 4, !tbaa !6
  %1697 = load i8, ptr %1269, align 1, !tbaa !12
  %1698 = and i32 %1696, 128
  %1699 = icmp eq i32 %1698, 0
  %1700 = shl i32 %1696, 24
  %1701 = ashr exact i32 %1700, 24
  %1702 = mul nsw i32 %1701, %1701
  %1703 = mul nsw i32 %1702, %1701
  %1704 = sub nsw i32 0, %1703
  %1705 = select i1 %1699, i32 %1703, i32 %1704
  %1706 = trunc i32 %1705 to i8
  %1707 = add i8 %1697, %1706
  store i8 %1707, ptr %1269, align 1, !tbaa !12
  %1708 = fadd fast double %1621, 1.000000e+00
  %1709 = add nuw nsw i32 %1620, 1
  br i1 %1613, label %1710, label %1757

1710:                                             ; preds = %1692
  %1711 = load i32, ptr %4, align 4, !tbaa !6
  %1712 = load i32, ptr %12, align 4, !tbaa !6
  %1713 = add nsw i32 %1712, -1
  %1714 = icmp slt i32 %1711, %1713
  br i1 %1714, label %1734, label %1715

1715:                                             ; preds = %1710
  %1716 = icmp eq i32 %1711, %1713
  br i1 %1716, label %1717, label %1750

1717:                                             ; preds = %1715
  store i32 0, ptr %4, align 4, !tbaa !6
  %1718 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1718, ptr %6, align 4, !tbaa !6
  br i1 %1618, label %1757, label %1719

1719:                                             ; preds = %1717, %1744
  %1720 = phi i64 [ %1748, %1744 ], [ 1, %1717 ]
  %1721 = getelementptr inbounds i32, ptr %4, i64 %1720
  %1722 = load i32, ptr %1721, align 4, !tbaa !6
  %1723 = getelementptr inbounds i32, ptr %12, i64 %1720
  %1724 = load i32, ptr %1723, align 4, !tbaa !6
  %1725 = add nsw i32 %1724, -1
  %1726 = icmp slt i32 %1722, %1725
  br i1 %1726, label %1727, label %1742

1727:                                             ; preds = %1719
  br i1 %1714, label %1734, label %1728

1728:                                             ; preds = %1727
  %1729 = getelementptr inbounds i32, ptr %7, i64 %1720
  %1730 = load i32, ptr %1729, align 4, !tbaa !6
  %1731 = getelementptr inbounds i32, ptr %6, i64 %1720
  %1732 = load i32, ptr %1731, align 4, !tbaa !6
  %1733 = add nsw i32 %1732, %1730
  store i32 %1733, ptr %1731, align 4, !tbaa !6
  br label %1752

1734:                                             ; preds = %1710, %1727
  %1735 = phi i32 [ %1722, %1727 ], [ %1711, %1710 ]
  %1736 = phi ptr [ %1721, %1727 ], [ %4, %1710 ]
  %1737 = phi i64 [ %1720, %1727 ], [ 0, %1710 ]
  %1738 = add nsw i32 %1735, 1
  store i32 %1738, ptr %1736, align 4, !tbaa !6
  %1739 = getelementptr inbounds i32, ptr %7, i64 %1737
  %1740 = load i32, ptr %1739, align 4, !tbaa !6
  %1741 = getelementptr inbounds i32, ptr %6, i64 %1737
  br label %1752

1742:                                             ; preds = %1719
  %1743 = icmp eq i32 %1722, %1725
  br i1 %1743, label %1744, label %1750

1744:                                             ; preds = %1742
  store i32 0, ptr %1721, align 4, !tbaa !6
  %1745 = getelementptr inbounds i32, ptr %8, i64 %1720
  %1746 = load i32, ptr %1745, align 4, !tbaa !6
  %1747 = getelementptr inbounds i32, ptr %6, i64 %1720
  store i32 %1746, ptr %1747, align 4, !tbaa !6
  %1748 = add nuw nsw i64 %1720, 1
  %1749 = icmp eq i64 %1748, %1616
  br i1 %1749, label %1757, label %1719, !llvm.loop !638

1750:                                             ; preds = %1715, %1742
  %1751 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1752:                                             ; preds = %1728, %1734
  %1753 = phi ptr [ %1741, %1734 ], [ %1721, %1728 ]
  %1754 = phi i32 [ %1740, %1734 ], [ 1, %1728 ]
  %1755 = load i32, ptr %1753, align 4, !tbaa !6
  %1756 = add nsw i32 %1755, %1754
  store i32 %1756, ptr %1753, align 4, !tbaa !6
  br label %1757

1757:                                             ; preds = %1744, %1752, %1717, %1692
  %1758 = icmp eq i32 %1709, %5
  br i1 %1758, label %5686, label %1619, !llvm.loop !639

1759:                                             ; preds = %1602, %1902
  %1760 = phi i32 [ 0, %1602 ], [ %1851, %1902 ]
  %1761 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1603, label %1762, label %1831

1762:                                             ; preds = %1759, %1821
  %1763 = phi i32 [ %1830, %1821 ], [ 0, %1759 ]
  %1764 = phi i64 [ %1772, %1821 ], [ %1607, %1759 ]
  %1765 = phi i64 [ %1829, %1821 ], [ %1606, %1759 ]
  %1766 = phi i32 [ %1827, %1821 ], [ %1761, %1759 ]
  %1767 = sub i32 %1605, %1763
  %1768 = tail call i32 @llvm.smin.i32(i32 %1767, i32 0)
  %1769 = sub i32 %1767, %1768
  %1770 = zext i32 %1769 to i64
  %1771 = add nuw nsw i64 %1770, 1
  %1772 = add nsw i64 %1764, -1
  %1773 = icmp ult i32 %1769, 31
  br i1 %1773, label %1809, label %1774

1774:                                             ; preds = %1762
  %1775 = and i64 %1771, 8589934560
  %1776 = sub i64 %1765, %1775
  br label %1777

1777:                                             ; preds = %1777, %1774
  %1778 = phi i64 [ 0, %1774 ], [ %1801, %1777 ]
  %1779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1797, %1777 ]
  %1780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1798, %1777 ]
  %1781 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1799, %1777 ]
  %1782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1774 ], [ %1800, %1777 ]
  %1783 = sub i64 %1765, %1778
  %1784 = getelementptr inbounds i32, ptr %11, i64 %1783
  %1785 = getelementptr inbounds i32, ptr %1784, i64 -7
  %1786 = load <8 x i32>, ptr %1785, align 4, !tbaa !6
  %1787 = shufflevector <8 x i32> %1786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1788 = getelementptr inbounds i32, ptr %1784, i64 -15
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = getelementptr inbounds i32, ptr %1784, i64 -23
  %1792 = load <8 x i32>, ptr %1791, align 4, !tbaa !6
  %1793 = shufflevector <8 x i32> %1792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1794 = getelementptr inbounds i32, ptr %1784, i64 -31
  %1795 = load <8 x i32>, ptr %1794, align 4, !tbaa !6
  %1796 = shufflevector <8 x i32> %1795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1797 = mul <8 x i32> %1787, %1779
  %1798 = mul <8 x i32> %1790, %1780
  %1799 = mul <8 x i32> %1793, %1781
  %1800 = mul <8 x i32> %1796, %1782
  %1801 = add nuw i64 %1778, 32
  %1802 = icmp eq i64 %1801, %1775
  br i1 %1802, label %1803, label %1777, !llvm.loop !640

1803:                                             ; preds = %1777
  %1804 = mul <8 x i32> %1798, %1797
  %1805 = mul <8 x i32> %1799, %1804
  %1806 = mul <8 x i32> %1800, %1805
  %1807 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1806)
  %1808 = icmp eq i64 %1771, %1775
  br i1 %1808, label %1821, label %1809

1809:                                             ; preds = %1762, %1803
  %1810 = phi i64 [ %1765, %1762 ], [ %1776, %1803 ]
  %1811 = phi i32 [ 1, %1762 ], [ %1807, %1803 ]
  br label %1812

1812:                                             ; preds = %1809, %1812
  %1813 = phi i64 [ %1818, %1812 ], [ %1810, %1809 ]
  %1814 = phi i32 [ %1817, %1812 ], [ %1811, %1809 ]
  %1815 = getelementptr inbounds i32, ptr %11, i64 %1813
  %1816 = load i32, ptr %1815, align 4, !tbaa !6
  %1817 = mul nsw i32 %1816, %1814
  %1818 = add nsw i64 %1813, -1
  %1819 = trunc i64 %1813 to i32
  %1820 = icmp sgt i32 %1819, 0
  br i1 %1820, label %1812, label %1821, !llvm.loop !641

1821:                                             ; preds = %1812, %1803
  %1822 = phi i32 [ %1807, %1803 ], [ %1817, %1812 ]
  %1823 = and i64 %1772, 4294967295
  %1824 = getelementptr inbounds i32, ptr %6, i64 %1823
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = mul nsw i32 %1825, %1822
  %1827 = add nsw i32 %1826, %1766
  %1828 = icmp sgt i64 %1764, 2
  %1829 = add nsw i64 %1765, -1
  %1830 = add i32 %1763, 1
  br i1 %1828, label %1762, label %1831, !llvm.loop !642

1831:                                             ; preds = %1821, %1759
  %1832 = phi i32 [ %1761, %1759 ], [ %1827, %1821 ]
  %1833 = icmp slt i32 %1832, %5
  br i1 %1833, label %1836, label %1834

1834:                                             ; preds = %1831
  %1835 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

1836:                                             ; preds = %1831
  %1837 = sext i32 %1832 to i64
  %1838 = getelementptr inbounds i32, ptr %1267, i64 %1837
  %1839 = load i32, ptr %1838, align 4, !tbaa !6
  %1840 = load i8, ptr %1269, align 1, !tbaa !12
  %1841 = and i32 %1839, 128
  %1842 = icmp eq i32 %1841, 0
  %1843 = shl i32 %1839, 24
  %1844 = ashr exact i32 %1843, 24
  %1845 = mul nsw i32 %1844, %1844
  %1846 = mul nsw i32 %1845, %1844
  %1847 = sub nsw i32 0, %1846
  %1848 = select i1 %1842, i32 %1846, i32 %1847
  %1849 = trunc i32 %1848 to i8
  %1850 = add i8 %1840, %1849
  store i8 %1850, ptr %1269, align 1, !tbaa !12
  %1851 = add nuw nsw i32 %1760, 1
  br i1 %1604, label %1852, label %1902

1852:                                             ; preds = %1836
  %1853 = load i32, ptr %4, align 4, !tbaa !6
  %1854 = load i32, ptr %12, align 4, !tbaa !6
  %1855 = add nsw i32 %1854, -1
  %1856 = icmp slt i32 %1853, %1855
  br i1 %1856, label %1879, label %1857

1857:                                             ; preds = %1852
  %1858 = icmp eq i32 %1853, %1855
  br i1 %1858, label %1859, label %1895

1859:                                             ; preds = %1857
  store i32 0, ptr %4, align 4, !tbaa !6
  %1860 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1860, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1902, label %1861

1861:                                             ; preds = %1859, %1889
  %1862 = phi i64 [ %1893, %1889 ], [ 1, %1859 ]
  %1863 = getelementptr inbounds i32, ptr %4, i64 %1862
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = getelementptr inbounds i32, ptr %12, i64 %1862
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = add nsw i32 %1866, -1
  %1868 = icmp slt i32 %1864, %1867
  br i1 %1868, label %1869, label %1887

1869:                                             ; preds = %1861
  br i1 %1856, label %1879, label %1870

1870:                                             ; preds = %1869
  %1871 = shl i64 %1862, 32
  %1872 = add i64 %1871, -4294967296
  %1873 = ashr exact i64 %1872, 32
  %1874 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1875 = load i32, ptr %1874, align 4, !tbaa !6
  %1876 = getelementptr inbounds i32, ptr %6, i64 %1862
  %1877 = load i32, ptr %1876, align 4, !tbaa !6
  %1878 = add nsw i32 %1877, %1875
  store i32 %1878, ptr %1876, align 4, !tbaa !6
  br label %1897

1879:                                             ; preds = %1852, %1869
  %1880 = phi i32 [ %1864, %1869 ], [ %1853, %1852 ]
  %1881 = phi ptr [ %1863, %1869 ], [ %4, %1852 ]
  %1882 = phi i64 [ %1862, %1869 ], [ 0, %1852 ]
  %1883 = add nsw i32 %1880, 1
  store i32 %1883, ptr %1881, align 4, !tbaa !6
  %1884 = getelementptr inbounds i32, ptr %7, i64 %1882
  %1885 = load i32, ptr %1884, align 4, !tbaa !6
  %1886 = getelementptr inbounds i32, ptr %6, i64 %1882
  br label %1897

1887:                                             ; preds = %1861
  %1888 = icmp eq i32 %1864, %1867
  br i1 %1888, label %1889, label %1895

1889:                                             ; preds = %1887
  store i32 0, ptr %1863, align 4, !tbaa !6
  %1890 = getelementptr inbounds i32, ptr %8, i64 %1862
  %1891 = load i32, ptr %1890, align 4, !tbaa !6
  %1892 = getelementptr inbounds i32, ptr %6, i64 %1862
  store i32 %1891, ptr %1892, align 4, !tbaa !6
  %1893 = add nuw nsw i64 %1862, 1
  %1894 = icmp eq i64 %1893, %1607
  br i1 %1894, label %1902, label %1861, !llvm.loop !643

1895:                                             ; preds = %1857, %1887
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

1897:                                             ; preds = %1870, %1879
  %1898 = phi ptr [ %1886, %1879 ], [ %1863, %1870 ]
  %1899 = phi i32 [ %1885, %1879 ], [ 1, %1870 ]
  %1900 = load i32, ptr %1898, align 4, !tbaa !6
  %1901 = add nsw i32 %1900, %1899
  store i32 %1901, ptr %1898, align 4, !tbaa !6
  br label %1902

1902:                                             ; preds = %1889, %1897, %1859, %1836
  %1903 = icmp eq i32 %1851, %5
  br i1 %1903, label %5686, label %1759, !llvm.loop !644

1904:                                             ; preds = %1282
  %1905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1173, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

1906:                                             ; preds = %18
  %1907 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1908 = load ptr, ptr %1907, align 8, !tbaa !10
  %1909 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1910 = load ptr, ptr %1909, align 8, !tbaa !10
  store i16 0, ptr %1910, align 2, !tbaa !79
  %1911 = icmp eq i32 %13, 0
  br i1 %1911, label %1912, label %1923

1912:                                             ; preds = %1906
  %1913 = load i32, ptr %1908, align 4, !tbaa !6
  %1914 = and i32 %1913, 32768
  %1915 = icmp eq i32 %1914, 0
  %1916 = shl i32 %1913, 16
  %1917 = ashr exact i32 %1916, 16
  %1918 = mul nsw i32 %1917, %1917
  %1919 = mul i32 %1918, %1917
  %1920 = sub i32 0, %1919
  %1921 = select i1 %1915, i32 %1919, i32 %1920
  %1922 = trunc i32 %1921 to i16
  store i16 %1922, ptr %1910, align 2, !tbaa !79
  br label %5686

1923:                                             ; preds = %1906
  switch i32 %1, label %2545 [
    i32 1, label %1924
    i32 0, label %2237
  ]

1924:                                             ; preds = %1923
  %1925 = getelementptr inbounds i32, ptr %3, i64 %19
  %1926 = load i32, ptr %1925, align 4, !tbaa !6
  %1927 = icmp eq i32 %1926, 0
  %1928 = icmp sgt i32 %5, 0
  br i1 %1927, label %1938, label %1929

1929:                                             ; preds = %1924
  br i1 %1928, label %1930, label %5686

1930:                                             ; preds = %1929
  %1931 = icmp sgt i32 %13, 1
  %1932 = icmp sgt i32 %13, 0
  %1933 = add i32 %13, -2
  %1934 = zext i32 %1933 to i64
  %1935 = zext i32 %13 to i64
  %1936 = add nuw i32 %5, 1
  %1937 = icmp eq i32 %13, 1
  br label %2091

1938:                                             ; preds = %1924
  br i1 %1928, label %1939, label %5686

1939:                                             ; preds = %1938
  %1940 = icmp sgt i32 %13, 1
  %1941 = icmp sgt i32 %13, 0
  %1942 = add i32 %13, -2
  %1943 = zext i32 %1942 to i64
  %1944 = zext i32 %13 to i64
  %1945 = add nuw i32 %5, 1
  %1946 = icmp eq i32 %13, 1
  br label %1947

1947:                                             ; preds = %1939, %2089
  %1948 = phi i16 [ 0, %1939 ], [ %2039, %2089 ]
  %1949 = phi i32 [ 0, %1939 ], [ %2041, %2089 ]
  %1950 = phi double [ 0.000000e+00, %1939 ], [ %2040, %2089 ]
  %1951 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1940, label %1952, label %2021

1952:                                             ; preds = %1947, %2011
  %1953 = phi i32 [ %2020, %2011 ], [ 0, %1947 ]
  %1954 = phi i64 [ %1962, %2011 ], [ %1944, %1947 ]
  %1955 = phi i64 [ %2019, %2011 ], [ %1943, %1947 ]
  %1956 = phi i32 [ %2017, %2011 ], [ %1951, %1947 ]
  %1957 = sub i32 %1942, %1953
  %1958 = tail call i32 @llvm.smin.i32(i32 %1957, i32 0)
  %1959 = sub i32 %1957, %1958
  %1960 = zext i32 %1959 to i64
  %1961 = add nuw nsw i64 %1960, 1
  %1962 = add nsw i64 %1954, -1
  %1963 = icmp ult i32 %1959, 31
  br i1 %1963, label %1999, label %1964

1964:                                             ; preds = %1952
  %1965 = and i64 %1961, 8589934560
  %1966 = sub i64 %1955, %1965
  br label %1967

1967:                                             ; preds = %1967, %1964
  %1968 = phi i64 [ 0, %1964 ], [ %1991, %1967 ]
  %1969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1987, %1967 ]
  %1970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1988, %1967 ]
  %1971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1989, %1967 ]
  %1972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1964 ], [ %1990, %1967 ]
  %1973 = sub i64 %1955, %1968
  %1974 = getelementptr inbounds i32, ptr %9, i64 %1973
  %1975 = getelementptr inbounds i32, ptr %1974, i64 -7
  %1976 = load <8 x i32>, ptr %1975, align 4, !tbaa !6
  %1977 = shufflevector <8 x i32> %1976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1978 = getelementptr inbounds i32, ptr %1974, i64 -15
  %1979 = load <8 x i32>, ptr %1978, align 4, !tbaa !6
  %1980 = shufflevector <8 x i32> %1979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1981 = getelementptr inbounds i32, ptr %1974, i64 -23
  %1982 = load <8 x i32>, ptr %1981, align 4, !tbaa !6
  %1983 = shufflevector <8 x i32> %1982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1984 = getelementptr inbounds i32, ptr %1974, i64 -31
  %1985 = load <8 x i32>, ptr %1984, align 4, !tbaa !6
  %1986 = shufflevector <8 x i32> %1985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1987 = mul <8 x i32> %1977, %1969
  %1988 = mul <8 x i32> %1980, %1970
  %1989 = mul <8 x i32> %1983, %1971
  %1990 = mul <8 x i32> %1986, %1972
  %1991 = add nuw i64 %1968, 32
  %1992 = icmp eq i64 %1991, %1965
  br i1 %1992, label %1993, label %1967, !llvm.loop !645

1993:                                             ; preds = %1967
  %1994 = mul <8 x i32> %1988, %1987
  %1995 = mul <8 x i32> %1989, %1994
  %1996 = mul <8 x i32> %1990, %1995
  %1997 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1996)
  %1998 = icmp eq i64 %1961, %1965
  br i1 %1998, label %2011, label %1999

1999:                                             ; preds = %1952, %1993
  %2000 = phi i64 [ %1955, %1952 ], [ %1966, %1993 ]
  %2001 = phi i32 [ 1, %1952 ], [ %1997, %1993 ]
  br label %2002

2002:                                             ; preds = %1999, %2002
  %2003 = phi i64 [ %2008, %2002 ], [ %2000, %1999 ]
  %2004 = phi i32 [ %2007, %2002 ], [ %2001, %1999 ]
  %2005 = getelementptr inbounds i32, ptr %9, i64 %2003
  %2006 = load i32, ptr %2005, align 4, !tbaa !6
  %2007 = mul nsw i32 %2006, %2004
  %2008 = add nsw i64 %2003, -1
  %2009 = trunc i64 %2003 to i32
  %2010 = icmp sgt i32 %2009, 0
  br i1 %2010, label %2002, label %2011, !llvm.loop !646

2011:                                             ; preds = %2002, %1993
  %2012 = phi i32 [ %1997, %1993 ], [ %2007, %2002 ]
  %2013 = and i64 %1962, 4294967295
  %2014 = getelementptr inbounds i32, ptr %6, i64 %2013
  %2015 = load i32, ptr %2014, align 4, !tbaa !6
  %2016 = mul nsw i32 %2015, %2012
  %2017 = add nsw i32 %2016, %1956
  %2018 = icmp sgt i64 %1954, 2
  %2019 = add nsw i64 %1955, -1
  %2020 = add i32 %1953, 1
  br i1 %2018, label %1952, label %2021, !llvm.loop !647

2021:                                             ; preds = %2011, %1947
  %2022 = phi i32 [ %1951, %1947 ], [ %2017, %2011 ]
  %2023 = sext i32 %2022 to i64
  %2024 = getelementptr inbounds double, ptr %2, i64 %2023
  %2025 = load double, ptr %2024, align 8, !tbaa !19
  %2026 = getelementptr inbounds i32, ptr %1908, i64 %2023
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = sitofp i16 %1948 to double
  %2029 = shl i32 %2027, 16
  %2030 = ashr exact i32 %2029, 16
  %2031 = sitofp i32 %2030 to double
  %2032 = fmul fast double %2025, %2031
  %2033 = fcmp fast olt double %2032, 0.000000e+00
  %2034 = fneg fast double %2032
  %2035 = select nnan ninf i1 %2033, double %2034, double %2032
  %2036 = fmul fast double %2032, %2032
  %2037 = fmul fast double %2036, %2035
  %2038 = fadd fast double %2037, %2028
  %2039 = fptosi double %2038 to i16
  %2040 = fadd fast double %2025, %1950
  %2041 = add nuw nsw i32 %1949, 1
  br i1 %1941, label %2042, label %2089

2042:                                             ; preds = %2021
  %2043 = load i32, ptr %4, align 4, !tbaa !6
  %2044 = load i32, ptr %12, align 4, !tbaa !6
  %2045 = add nsw i32 %2044, -1
  %2046 = icmp slt i32 %2043, %2045
  br i1 %2046, label %2066, label %2047

2047:                                             ; preds = %2042
  %2048 = icmp eq i32 %2043, %2045
  br i1 %2048, label %2049, label %2082

2049:                                             ; preds = %2047
  store i32 0, ptr %4, align 4, !tbaa !6
  %2050 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2050, ptr %6, align 4, !tbaa !6
  br i1 %1946, label %2089, label %2051

2051:                                             ; preds = %2049, %2076
  %2052 = phi i64 [ %2080, %2076 ], [ 1, %2049 ]
  %2053 = getelementptr inbounds i32, ptr %4, i64 %2052
  %2054 = load i32, ptr %2053, align 4, !tbaa !6
  %2055 = getelementptr inbounds i32, ptr %12, i64 %2052
  %2056 = load i32, ptr %2055, align 4, !tbaa !6
  %2057 = add nsw i32 %2056, -1
  %2058 = icmp slt i32 %2054, %2057
  br i1 %2058, label %2059, label %2074

2059:                                             ; preds = %2051
  br i1 %2046, label %2066, label %2060

2060:                                             ; preds = %2059
  %2061 = getelementptr inbounds i32, ptr %7, i64 %2052
  %2062 = load i32, ptr %2061, align 4, !tbaa !6
  %2063 = getelementptr inbounds i32, ptr %6, i64 %2052
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = add nsw i32 %2064, %2062
  store i32 %2065, ptr %2063, align 4, !tbaa !6
  br label %2084

2066:                                             ; preds = %2042, %2059
  %2067 = phi i32 [ %2054, %2059 ], [ %2043, %2042 ]
  %2068 = phi ptr [ %2053, %2059 ], [ %4, %2042 ]
  %2069 = phi i64 [ %2052, %2059 ], [ 0, %2042 ]
  %2070 = add nsw i32 %2067, 1
  store i32 %2070, ptr %2068, align 4, !tbaa !6
  %2071 = getelementptr inbounds i32, ptr %7, i64 %2069
  %2072 = load i32, ptr %2071, align 4, !tbaa !6
  %2073 = getelementptr inbounds i32, ptr %6, i64 %2069
  br label %2084

2074:                                             ; preds = %2051
  %2075 = icmp eq i32 %2054, %2057
  br i1 %2075, label %2076, label %2082

2076:                                             ; preds = %2074
  store i32 0, ptr %2053, align 4, !tbaa !6
  %2077 = getelementptr inbounds i32, ptr %8, i64 %2052
  %2078 = load i32, ptr %2077, align 4, !tbaa !6
  %2079 = getelementptr inbounds i32, ptr %6, i64 %2052
  store i32 %2078, ptr %2079, align 4, !tbaa !6
  %2080 = add nuw nsw i64 %2052, 1
  %2081 = icmp eq i64 %2080, %1944
  br i1 %2081, label %2089, label %2051, !llvm.loop !648

2082:                                             ; preds = %2047, %2074
  store i16 %2039, ptr %1910, align 2, !tbaa !79
  %2083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2084:                                             ; preds = %2060, %2066
  %2085 = phi ptr [ %2073, %2066 ], [ %2053, %2060 ]
  %2086 = phi i32 [ %2072, %2066 ], [ 1, %2060 ]
  %2087 = load i32, ptr %2085, align 4, !tbaa !6
  %2088 = add nsw i32 %2087, %2086
  store i32 %2088, ptr %2085, align 4, !tbaa !6
  br label %2089

2089:                                             ; preds = %2076, %2084, %2049, %2021
  %2090 = icmp eq i32 %2041, %5
  br i1 %2090, label %5678, label %1947, !llvm.loop !649

2091:                                             ; preds = %1930, %2235
  %2092 = phi i16 [ 0, %1930 ], [ %2183, %2235 ]
  %2093 = phi i32 [ 0, %1930 ], [ %2184, %2235 ]
  %2094 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1931, label %2095, label %2164

2095:                                             ; preds = %2091, %2154
  %2096 = phi i32 [ %2163, %2154 ], [ 0, %2091 ]
  %2097 = phi i64 [ %2105, %2154 ], [ %1935, %2091 ]
  %2098 = phi i64 [ %2162, %2154 ], [ %1934, %2091 ]
  %2099 = phi i32 [ %2160, %2154 ], [ %2094, %2091 ]
  %2100 = sub i32 %1933, %2096
  %2101 = tail call i32 @llvm.smin.i32(i32 %2100, i32 0)
  %2102 = sub i32 %2100, %2101
  %2103 = zext i32 %2102 to i64
  %2104 = add nuw nsw i64 %2103, 1
  %2105 = add nsw i64 %2097, -1
  %2106 = icmp ult i32 %2102, 31
  br i1 %2106, label %2142, label %2107

2107:                                             ; preds = %2095
  %2108 = and i64 %2104, 8589934560
  %2109 = sub i64 %2098, %2108
  br label %2110

2110:                                             ; preds = %2110, %2107
  %2111 = phi i64 [ 0, %2107 ], [ %2134, %2110 ]
  %2112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2130, %2110 ]
  %2113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2131, %2110 ]
  %2114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2132, %2110 ]
  %2115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2107 ], [ %2133, %2110 ]
  %2116 = sub i64 %2098, %2111
  %2117 = getelementptr inbounds i32, ptr %11, i64 %2116
  %2118 = getelementptr inbounds i32, ptr %2117, i64 -7
  %2119 = load <8 x i32>, ptr %2118, align 4, !tbaa !6
  %2120 = shufflevector <8 x i32> %2119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2121 = getelementptr inbounds i32, ptr %2117, i64 -15
  %2122 = load <8 x i32>, ptr %2121, align 4, !tbaa !6
  %2123 = shufflevector <8 x i32> %2122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2124 = getelementptr inbounds i32, ptr %2117, i64 -23
  %2125 = load <8 x i32>, ptr %2124, align 4, !tbaa !6
  %2126 = shufflevector <8 x i32> %2125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2127 = getelementptr inbounds i32, ptr %2117, i64 -31
  %2128 = load <8 x i32>, ptr %2127, align 4, !tbaa !6
  %2129 = shufflevector <8 x i32> %2128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2130 = mul <8 x i32> %2120, %2112
  %2131 = mul <8 x i32> %2123, %2113
  %2132 = mul <8 x i32> %2126, %2114
  %2133 = mul <8 x i32> %2129, %2115
  %2134 = add nuw i64 %2111, 32
  %2135 = icmp eq i64 %2134, %2108
  br i1 %2135, label %2136, label %2110, !llvm.loop !650

2136:                                             ; preds = %2110
  %2137 = mul <8 x i32> %2131, %2130
  %2138 = mul <8 x i32> %2132, %2137
  %2139 = mul <8 x i32> %2133, %2138
  %2140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2139)
  %2141 = icmp eq i64 %2104, %2108
  br i1 %2141, label %2154, label %2142

2142:                                             ; preds = %2095, %2136
  %2143 = phi i64 [ %2098, %2095 ], [ %2109, %2136 ]
  %2144 = phi i32 [ 1, %2095 ], [ %2140, %2136 ]
  br label %2145

2145:                                             ; preds = %2142, %2145
  %2146 = phi i64 [ %2151, %2145 ], [ %2143, %2142 ]
  %2147 = phi i32 [ %2150, %2145 ], [ %2144, %2142 ]
  %2148 = getelementptr inbounds i32, ptr %11, i64 %2146
  %2149 = load i32, ptr %2148, align 4, !tbaa !6
  %2150 = mul nsw i32 %2149, %2147
  %2151 = add nsw i64 %2146, -1
  %2152 = trunc i64 %2146 to i32
  %2153 = icmp sgt i32 %2152, 0
  br i1 %2153, label %2145, label %2154, !llvm.loop !651

2154:                                             ; preds = %2145, %2136
  %2155 = phi i32 [ %2140, %2136 ], [ %2150, %2145 ]
  %2156 = and i64 %2105, 4294967295
  %2157 = getelementptr inbounds i32, ptr %6, i64 %2156
  %2158 = load i32, ptr %2157, align 4, !tbaa !6
  %2159 = mul nsw i32 %2158, %2155
  %2160 = add nsw i32 %2159, %2099
  %2161 = icmp sgt i64 %2097, 2
  %2162 = add nsw i64 %2098, -1
  %2163 = add i32 %2096, 1
  br i1 %2161, label %2095, label %2164, !llvm.loop !652

2164:                                             ; preds = %2154, %2091
  %2165 = phi i32 [ %2094, %2091 ], [ %2160, %2154 ]
  %2166 = icmp slt i32 %2165, %5
  br i1 %2166, label %2169, label %2167

2167:                                             ; preds = %2164
  %2168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2169:                                             ; preds = %2164
  %2170 = sext i32 %2165 to i64
  %2171 = getelementptr inbounds i32, ptr %1908, i64 %2170
  %2172 = load i32, ptr %2171, align 4, !tbaa !6
  %2173 = sitofp i16 %2092 to double
  %2174 = shl i32 %2172, 16
  %2175 = ashr exact i32 %2174, 16
  %2176 = sitofp i32 %2175 to double
  %2177 = icmp slt i32 %2174, 0
  %2178 = fneg fast double %2176
  %2179 = select i1 %2177, double %2178, double %2176
  %2180 = fmul fast double %2176, %2176
  %2181 = fmul fast double %2180, %2179
  %2182 = fadd fast double %2181, %2173
  %2183 = fptosi double %2182 to i16
  store i16 %2183, ptr %1910, align 2, !tbaa !79
  %2184 = add nuw nsw i32 %2093, 1
  br i1 %1932, label %2185, label %2235

2185:                                             ; preds = %2169
  %2186 = load i32, ptr %4, align 4, !tbaa !6
  %2187 = load i32, ptr %12, align 4, !tbaa !6
  %2188 = add nsw i32 %2187, -1
  %2189 = icmp slt i32 %2186, %2188
  br i1 %2189, label %2212, label %2190

2190:                                             ; preds = %2185
  %2191 = icmp eq i32 %2186, %2188
  br i1 %2191, label %2192, label %2228

2192:                                             ; preds = %2190
  store i32 0, ptr %4, align 4, !tbaa !6
  %2193 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2193, ptr %6, align 4, !tbaa !6
  br i1 %1937, label %2235, label %2194

2194:                                             ; preds = %2192, %2222
  %2195 = phi i64 [ %2226, %2222 ], [ 1, %2192 ]
  %2196 = getelementptr inbounds i32, ptr %4, i64 %2195
  %2197 = load i32, ptr %2196, align 4, !tbaa !6
  %2198 = getelementptr inbounds i32, ptr %12, i64 %2195
  %2199 = load i32, ptr %2198, align 4, !tbaa !6
  %2200 = add nsw i32 %2199, -1
  %2201 = icmp slt i32 %2197, %2200
  br i1 %2201, label %2202, label %2220

2202:                                             ; preds = %2194
  br i1 %2189, label %2212, label %2203

2203:                                             ; preds = %2202
  %2204 = shl i64 %2195, 32
  %2205 = add i64 %2204, -4294967296
  %2206 = ashr exact i64 %2205, 32
  %2207 = getelementptr inbounds i32, ptr %7, i64 %2206
  %2208 = load i32, ptr %2207, align 4, !tbaa !6
  %2209 = getelementptr inbounds i32, ptr %6, i64 %2195
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = add nsw i32 %2210, %2208
  store i32 %2211, ptr %2209, align 4, !tbaa !6
  br label %2230

2212:                                             ; preds = %2185, %2202
  %2213 = phi i32 [ %2197, %2202 ], [ %2186, %2185 ]
  %2214 = phi ptr [ %2196, %2202 ], [ %4, %2185 ]
  %2215 = phi i64 [ %2195, %2202 ], [ 0, %2185 ]
  %2216 = add nsw i32 %2213, 1
  store i32 %2216, ptr %2214, align 4, !tbaa !6
  %2217 = getelementptr inbounds i32, ptr %7, i64 %2215
  %2218 = load i32, ptr %2217, align 4, !tbaa !6
  %2219 = getelementptr inbounds i32, ptr %6, i64 %2215
  br label %2230

2220:                                             ; preds = %2194
  %2221 = icmp eq i32 %2197, %2200
  br i1 %2221, label %2222, label %2228

2222:                                             ; preds = %2220
  store i32 0, ptr %2196, align 4, !tbaa !6
  %2223 = getelementptr inbounds i32, ptr %8, i64 %2195
  %2224 = load i32, ptr %2223, align 4, !tbaa !6
  %2225 = getelementptr inbounds i32, ptr %6, i64 %2195
  store i32 %2224, ptr %2225, align 4, !tbaa !6
  %2226 = add nuw nsw i64 %2195, 1
  %2227 = icmp eq i64 %2226, %1935
  br i1 %2227, label %2235, label %2194, !llvm.loop !653

2228:                                             ; preds = %2190, %2220
  %2229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2230:                                             ; preds = %2203, %2212
  %2231 = phi ptr [ %2219, %2212 ], [ %2196, %2203 ]
  %2232 = phi i32 [ %2218, %2212 ], [ 1, %2203 ]
  %2233 = load i32, ptr %2231, align 4, !tbaa !6
  %2234 = add nsw i32 %2233, %2232
  store i32 %2234, ptr %2231, align 4, !tbaa !6
  br label %2235

2235:                                             ; preds = %2222, %2230, %2192, %2169
  %2236 = icmp eq i32 %2184, %5
  br i1 %2236, label %5686, label %2091, !llvm.loop !654

2237:                                             ; preds = %1923
  %2238 = getelementptr inbounds i32, ptr %3, i64 %19
  %2239 = load i32, ptr %2238, align 4, !tbaa !6
  %2240 = icmp eq i32 %2239, 0
  %2241 = icmp sgt i32 %5, 0
  br i1 %2240, label %2251, label %2242

2242:                                             ; preds = %2237
  br i1 %2241, label %2243, label %5686

2243:                                             ; preds = %2242
  %2244 = icmp sgt i32 %13, 1
  %2245 = icmp sgt i32 %13, 0
  %2246 = add i32 %13, -2
  %2247 = zext i32 %2246 to i64
  %2248 = zext i32 %13 to i64
  %2249 = add nuw i32 %5, 1
  %2250 = icmp eq i32 %13, 1
  br label %2400

2251:                                             ; preds = %2237
  br i1 %2241, label %2252, label %5686

2252:                                             ; preds = %2251
  %2253 = icmp sgt i32 %13, 1
  %2254 = icmp sgt i32 %13, 0
  %2255 = add i32 %13, -2
  %2256 = zext i32 %2255 to i64
  %2257 = zext i32 %13 to i64
  %2258 = add nuw i32 %5, 1
  %2259 = icmp eq i32 %13, 1
  br label %2260

2260:                                             ; preds = %2252, %2398
  %2261 = phi i16 [ 0, %2252 ], [ %2348, %2398 ]
  %2262 = phi i32 [ 0, %2252 ], [ %2350, %2398 ]
  %2263 = phi double [ 0.000000e+00, %2252 ], [ %2349, %2398 ]
  %2264 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2253, label %2265, label %2334

2265:                                             ; preds = %2260, %2324
  %2266 = phi i32 [ %2333, %2324 ], [ 0, %2260 ]
  %2267 = phi i64 [ %2275, %2324 ], [ %2257, %2260 ]
  %2268 = phi i64 [ %2332, %2324 ], [ %2256, %2260 ]
  %2269 = phi i32 [ %2330, %2324 ], [ %2264, %2260 ]
  %2270 = sub i32 %2255, %2266
  %2271 = tail call i32 @llvm.smin.i32(i32 %2270, i32 0)
  %2272 = sub i32 %2270, %2271
  %2273 = zext i32 %2272 to i64
  %2274 = add nuw nsw i64 %2273, 1
  %2275 = add nsw i64 %2267, -1
  %2276 = icmp ult i32 %2272, 31
  br i1 %2276, label %2312, label %2277

2277:                                             ; preds = %2265
  %2278 = and i64 %2274, 8589934560
  %2279 = sub i64 %2268, %2278
  br label %2280

2280:                                             ; preds = %2280, %2277
  %2281 = phi i64 [ 0, %2277 ], [ %2304, %2280 ]
  %2282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2300, %2280 ]
  %2283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2301, %2280 ]
  %2284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2302, %2280 ]
  %2285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2303, %2280 ]
  %2286 = sub i64 %2268, %2281
  %2287 = getelementptr inbounds i32, ptr %9, i64 %2286
  %2288 = getelementptr inbounds i32, ptr %2287, i64 -7
  %2289 = load <8 x i32>, ptr %2288, align 4, !tbaa !6
  %2290 = shufflevector <8 x i32> %2289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2291 = getelementptr inbounds i32, ptr %2287, i64 -15
  %2292 = load <8 x i32>, ptr %2291, align 4, !tbaa !6
  %2293 = shufflevector <8 x i32> %2292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2294 = getelementptr inbounds i32, ptr %2287, i64 -23
  %2295 = load <8 x i32>, ptr %2294, align 4, !tbaa !6
  %2296 = shufflevector <8 x i32> %2295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2297 = getelementptr inbounds i32, ptr %2287, i64 -31
  %2298 = load <8 x i32>, ptr %2297, align 4, !tbaa !6
  %2299 = shufflevector <8 x i32> %2298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2300 = mul <8 x i32> %2290, %2282
  %2301 = mul <8 x i32> %2293, %2283
  %2302 = mul <8 x i32> %2296, %2284
  %2303 = mul <8 x i32> %2299, %2285
  %2304 = add nuw i64 %2281, 32
  %2305 = icmp eq i64 %2304, %2278
  br i1 %2305, label %2306, label %2280, !llvm.loop !655

2306:                                             ; preds = %2280
  %2307 = mul <8 x i32> %2301, %2300
  %2308 = mul <8 x i32> %2302, %2307
  %2309 = mul <8 x i32> %2303, %2308
  %2310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2309)
  %2311 = icmp eq i64 %2274, %2278
  br i1 %2311, label %2324, label %2312

2312:                                             ; preds = %2265, %2306
  %2313 = phi i64 [ %2268, %2265 ], [ %2279, %2306 ]
  %2314 = phi i32 [ 1, %2265 ], [ %2310, %2306 ]
  br label %2315

2315:                                             ; preds = %2312, %2315
  %2316 = phi i64 [ %2321, %2315 ], [ %2313, %2312 ]
  %2317 = phi i32 [ %2320, %2315 ], [ %2314, %2312 ]
  %2318 = getelementptr inbounds i32, ptr %9, i64 %2316
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = mul nsw i32 %2319, %2317
  %2321 = add nsw i64 %2316, -1
  %2322 = trunc i64 %2316 to i32
  %2323 = icmp sgt i32 %2322, 0
  br i1 %2323, label %2315, label %2324, !llvm.loop !656

2324:                                             ; preds = %2315, %2306
  %2325 = phi i32 [ %2310, %2306 ], [ %2320, %2315 ]
  %2326 = and i64 %2275, 4294967295
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2326
  %2328 = load i32, ptr %2327, align 4, !tbaa !6
  %2329 = mul nsw i32 %2328, %2325
  %2330 = add nsw i32 %2329, %2269
  %2331 = icmp sgt i64 %2267, 2
  %2332 = add nsw i64 %2268, -1
  %2333 = add i32 %2266, 1
  br i1 %2331, label %2265, label %2334, !llvm.loop !657

2334:                                             ; preds = %2324, %2260
  %2335 = phi i32 [ %2264, %2260 ], [ %2330, %2324 ]
  %2336 = sext i32 %2335 to i64
  %2337 = getelementptr inbounds i32, ptr %1908, i64 %2336
  %2338 = load i32, ptr %2337, align 4, !tbaa !6
  %2339 = and i32 %2338, 32768
  %2340 = icmp eq i32 %2339, 0
  %2341 = shl i32 %2338, 16
  %2342 = ashr exact i32 %2341, 16
  %2343 = mul nsw i32 %2342, %2342
  %2344 = mul i32 %2343, %2342
  %2345 = sub i32 0, %2344
  %2346 = select i1 %2340, i32 %2344, i32 %2345
  %2347 = trunc i32 %2346 to i16
  %2348 = add i16 %2261, %2347
  %2349 = fadd fast double %2263, 1.000000e+00
  %2350 = add nuw nsw i32 %2262, 1
  br i1 %2254, label %2351, label %2398

2351:                                             ; preds = %2334
  %2352 = load i32, ptr %4, align 4, !tbaa !6
  %2353 = load i32, ptr %12, align 4, !tbaa !6
  %2354 = add nsw i32 %2353, -1
  %2355 = icmp slt i32 %2352, %2354
  br i1 %2355, label %2375, label %2356

2356:                                             ; preds = %2351
  %2357 = icmp eq i32 %2352, %2354
  br i1 %2357, label %2358, label %2391

2358:                                             ; preds = %2356
  store i32 0, ptr %4, align 4, !tbaa !6
  %2359 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2359, ptr %6, align 4, !tbaa !6
  br i1 %2259, label %2398, label %2360

2360:                                             ; preds = %2358, %2385
  %2361 = phi i64 [ %2389, %2385 ], [ 1, %2358 ]
  %2362 = getelementptr inbounds i32, ptr %4, i64 %2361
  %2363 = load i32, ptr %2362, align 4, !tbaa !6
  %2364 = getelementptr inbounds i32, ptr %12, i64 %2361
  %2365 = load i32, ptr %2364, align 4, !tbaa !6
  %2366 = add nsw i32 %2365, -1
  %2367 = icmp slt i32 %2363, %2366
  br i1 %2367, label %2368, label %2383

2368:                                             ; preds = %2360
  br i1 %2355, label %2375, label %2369

2369:                                             ; preds = %2368
  %2370 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2371 = load i32, ptr %2370, align 4, !tbaa !6
  %2372 = getelementptr inbounds i32, ptr %6, i64 %2361
  %2373 = load i32, ptr %2372, align 4, !tbaa !6
  %2374 = add nsw i32 %2373, %2371
  store i32 %2374, ptr %2372, align 4, !tbaa !6
  br label %2393

2375:                                             ; preds = %2351, %2368
  %2376 = phi i32 [ %2363, %2368 ], [ %2352, %2351 ]
  %2377 = phi ptr [ %2362, %2368 ], [ %4, %2351 ]
  %2378 = phi i64 [ %2361, %2368 ], [ 0, %2351 ]
  %2379 = add nsw i32 %2376, 1
  store i32 %2379, ptr %2377, align 4, !tbaa !6
  %2380 = getelementptr inbounds i32, ptr %7, i64 %2378
  %2381 = load i32, ptr %2380, align 4, !tbaa !6
  %2382 = getelementptr inbounds i32, ptr %6, i64 %2378
  br label %2393

2383:                                             ; preds = %2360
  %2384 = icmp eq i32 %2363, %2366
  br i1 %2384, label %2385, label %2391

2385:                                             ; preds = %2383
  store i32 0, ptr %2362, align 4, !tbaa !6
  %2386 = getelementptr inbounds i32, ptr %8, i64 %2361
  %2387 = load i32, ptr %2386, align 4, !tbaa !6
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2361
  store i32 %2387, ptr %2388, align 4, !tbaa !6
  %2389 = add nuw nsw i64 %2361, 1
  %2390 = icmp eq i64 %2389, %2257
  br i1 %2390, label %2398, label %2360, !llvm.loop !658

2391:                                             ; preds = %2356, %2383
  store i16 %2348, ptr %1910, align 2, !tbaa !79
  %2392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2393:                                             ; preds = %2369, %2375
  %2394 = phi ptr [ %2382, %2375 ], [ %2362, %2369 ]
  %2395 = phi i32 [ %2381, %2375 ], [ 1, %2369 ]
  %2396 = load i32, ptr %2394, align 4, !tbaa !6
  %2397 = add nsw i32 %2396, %2395
  store i32 %2397, ptr %2394, align 4, !tbaa !6
  br label %2398

2398:                                             ; preds = %2385, %2393, %2358, %2334
  %2399 = icmp eq i32 %2350, %5
  br i1 %2399, label %5679, label %2260, !llvm.loop !659

2400:                                             ; preds = %2243, %2543
  %2401 = phi i16 [ 0, %2243 ], [ %2491, %2543 ]
  %2402 = phi i32 [ 0, %2243 ], [ %2492, %2543 ]
  %2403 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2244, label %2404, label %2473

2404:                                             ; preds = %2400, %2463
  %2405 = phi i32 [ %2472, %2463 ], [ 0, %2400 ]
  %2406 = phi i64 [ %2414, %2463 ], [ %2248, %2400 ]
  %2407 = phi i64 [ %2471, %2463 ], [ %2247, %2400 ]
  %2408 = phi i32 [ %2469, %2463 ], [ %2403, %2400 ]
  %2409 = sub i32 %2246, %2405
  %2410 = tail call i32 @llvm.smin.i32(i32 %2409, i32 0)
  %2411 = sub i32 %2409, %2410
  %2412 = zext i32 %2411 to i64
  %2413 = add nuw nsw i64 %2412, 1
  %2414 = add nsw i64 %2406, -1
  %2415 = icmp ult i32 %2411, 31
  br i1 %2415, label %2451, label %2416

2416:                                             ; preds = %2404
  %2417 = and i64 %2413, 8589934560
  %2418 = sub i64 %2407, %2417
  br label %2419

2419:                                             ; preds = %2419, %2416
  %2420 = phi i64 [ 0, %2416 ], [ %2443, %2419 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2439, %2419 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2440, %2419 ]
  %2423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2441, %2419 ]
  %2424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2416 ], [ %2442, %2419 ]
  %2425 = sub i64 %2407, %2420
  %2426 = getelementptr inbounds i32, ptr %11, i64 %2425
  %2427 = getelementptr inbounds i32, ptr %2426, i64 -7
  %2428 = load <8 x i32>, ptr %2427, align 4, !tbaa !6
  %2429 = shufflevector <8 x i32> %2428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2430 = getelementptr inbounds i32, ptr %2426, i64 -15
  %2431 = load <8 x i32>, ptr %2430, align 4, !tbaa !6
  %2432 = shufflevector <8 x i32> %2431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2433 = getelementptr inbounds i32, ptr %2426, i64 -23
  %2434 = load <8 x i32>, ptr %2433, align 4, !tbaa !6
  %2435 = shufflevector <8 x i32> %2434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2436 = getelementptr inbounds i32, ptr %2426, i64 -31
  %2437 = load <8 x i32>, ptr %2436, align 4, !tbaa !6
  %2438 = shufflevector <8 x i32> %2437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2439 = mul <8 x i32> %2429, %2421
  %2440 = mul <8 x i32> %2432, %2422
  %2441 = mul <8 x i32> %2435, %2423
  %2442 = mul <8 x i32> %2438, %2424
  %2443 = add nuw i64 %2420, 32
  %2444 = icmp eq i64 %2443, %2417
  br i1 %2444, label %2445, label %2419, !llvm.loop !660

2445:                                             ; preds = %2419
  %2446 = mul <8 x i32> %2440, %2439
  %2447 = mul <8 x i32> %2441, %2446
  %2448 = mul <8 x i32> %2442, %2447
  %2449 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2448)
  %2450 = icmp eq i64 %2413, %2417
  br i1 %2450, label %2463, label %2451

2451:                                             ; preds = %2404, %2445
  %2452 = phi i64 [ %2407, %2404 ], [ %2418, %2445 ]
  %2453 = phi i32 [ 1, %2404 ], [ %2449, %2445 ]
  br label %2454

2454:                                             ; preds = %2451, %2454
  %2455 = phi i64 [ %2460, %2454 ], [ %2452, %2451 ]
  %2456 = phi i32 [ %2459, %2454 ], [ %2453, %2451 ]
  %2457 = getelementptr inbounds i32, ptr %11, i64 %2455
  %2458 = load i32, ptr %2457, align 4, !tbaa !6
  %2459 = mul nsw i32 %2458, %2456
  %2460 = add nsw i64 %2455, -1
  %2461 = trunc i64 %2455 to i32
  %2462 = icmp sgt i32 %2461, 0
  br i1 %2462, label %2454, label %2463, !llvm.loop !661

2463:                                             ; preds = %2454, %2445
  %2464 = phi i32 [ %2449, %2445 ], [ %2459, %2454 ]
  %2465 = and i64 %2414, 4294967295
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2465
  %2467 = load i32, ptr %2466, align 4, !tbaa !6
  %2468 = mul nsw i32 %2467, %2464
  %2469 = add nsw i32 %2468, %2408
  %2470 = icmp sgt i64 %2406, 2
  %2471 = add nsw i64 %2407, -1
  %2472 = add i32 %2405, 1
  br i1 %2470, label %2404, label %2473, !llvm.loop !662

2473:                                             ; preds = %2463, %2400
  %2474 = phi i32 [ %2403, %2400 ], [ %2469, %2463 ]
  %2475 = icmp slt i32 %2474, %5
  br i1 %2475, label %2478, label %2476

2476:                                             ; preds = %2473
  %2477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2478:                                             ; preds = %2473
  %2479 = sext i32 %2474 to i64
  %2480 = getelementptr inbounds i32, ptr %1908, i64 %2479
  %2481 = load i32, ptr %2480, align 4, !tbaa !6
  %2482 = and i32 %2481, 32768
  %2483 = icmp eq i32 %2482, 0
  %2484 = shl i32 %2481, 16
  %2485 = ashr exact i32 %2484, 16
  %2486 = mul nsw i32 %2485, %2485
  %2487 = mul i32 %2486, %2485
  %2488 = sub i32 0, %2487
  %2489 = select i1 %2483, i32 %2487, i32 %2488
  %2490 = trunc i32 %2489 to i16
  %2491 = add i16 %2401, %2490
  store i16 %2491, ptr %1910, align 2, !tbaa !79
  %2492 = add nuw nsw i32 %2402, 1
  br i1 %2245, label %2493, label %2543

2493:                                             ; preds = %2478
  %2494 = load i32, ptr %4, align 4, !tbaa !6
  %2495 = load i32, ptr %12, align 4, !tbaa !6
  %2496 = add nsw i32 %2495, -1
  %2497 = icmp slt i32 %2494, %2496
  br i1 %2497, label %2520, label %2498

2498:                                             ; preds = %2493
  %2499 = icmp eq i32 %2494, %2496
  br i1 %2499, label %2500, label %2536

2500:                                             ; preds = %2498
  store i32 0, ptr %4, align 4, !tbaa !6
  %2501 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2501, ptr %6, align 4, !tbaa !6
  br i1 %2250, label %2543, label %2502

2502:                                             ; preds = %2500, %2530
  %2503 = phi i64 [ %2534, %2530 ], [ 1, %2500 ]
  %2504 = getelementptr inbounds i32, ptr %4, i64 %2503
  %2505 = load i32, ptr %2504, align 4, !tbaa !6
  %2506 = getelementptr inbounds i32, ptr %12, i64 %2503
  %2507 = load i32, ptr %2506, align 4, !tbaa !6
  %2508 = add nsw i32 %2507, -1
  %2509 = icmp slt i32 %2505, %2508
  br i1 %2509, label %2510, label %2528

2510:                                             ; preds = %2502
  br i1 %2497, label %2520, label %2511

2511:                                             ; preds = %2510
  %2512 = shl i64 %2503, 32
  %2513 = add i64 %2512, -4294967296
  %2514 = ashr exact i64 %2513, 32
  %2515 = getelementptr inbounds i32, ptr %7, i64 %2514
  %2516 = load i32, ptr %2515, align 4, !tbaa !6
  %2517 = getelementptr inbounds i32, ptr %6, i64 %2503
  %2518 = load i32, ptr %2517, align 4, !tbaa !6
  %2519 = add nsw i32 %2518, %2516
  store i32 %2519, ptr %2517, align 4, !tbaa !6
  br label %2538

2520:                                             ; preds = %2493, %2510
  %2521 = phi i32 [ %2505, %2510 ], [ %2494, %2493 ]
  %2522 = phi ptr [ %2504, %2510 ], [ %4, %2493 ]
  %2523 = phi i64 [ %2503, %2510 ], [ 0, %2493 ]
  %2524 = add nsw i32 %2521, 1
  store i32 %2524, ptr %2522, align 4, !tbaa !6
  %2525 = getelementptr inbounds i32, ptr %7, i64 %2523
  %2526 = load i32, ptr %2525, align 4, !tbaa !6
  %2527 = getelementptr inbounds i32, ptr %6, i64 %2523
  br label %2538

2528:                                             ; preds = %2502
  %2529 = icmp eq i32 %2505, %2508
  br i1 %2529, label %2530, label %2536

2530:                                             ; preds = %2528
  store i32 0, ptr %2504, align 4, !tbaa !6
  %2531 = getelementptr inbounds i32, ptr %8, i64 %2503
  %2532 = load i32, ptr %2531, align 4, !tbaa !6
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2503
  store i32 %2532, ptr %2533, align 4, !tbaa !6
  %2534 = add nuw nsw i64 %2503, 1
  %2535 = icmp eq i64 %2534, %2248
  br i1 %2535, label %2543, label %2502, !llvm.loop !663

2536:                                             ; preds = %2498, %2528
  %2537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2538:                                             ; preds = %2511, %2520
  %2539 = phi ptr [ %2527, %2520 ], [ %2504, %2511 ]
  %2540 = phi i32 [ %2526, %2520 ], [ 1, %2511 ]
  %2541 = load i32, ptr %2539, align 4, !tbaa !6
  %2542 = add nsw i32 %2541, %2540
  store i32 %2542, ptr %2539, align 4, !tbaa !6
  br label %2543

2543:                                             ; preds = %2530, %2538, %2500, %2478
  %2544 = icmp eq i32 %2492, %5
  br i1 %2544, label %5686, label %2400, !llvm.loop !664

2545:                                             ; preds = %1923
  %2546 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1178, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

2547:                                             ; preds = %18
  %2548 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2549 = load ptr, ptr %2548, align 8, !tbaa !10
  %2550 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2551 = load ptr, ptr %2550, align 8, !tbaa !10
  store i32 0, ptr %2551, align 4, !tbaa !6
  %2552 = icmp eq i32 %13, 0
  br i1 %2552, label %2553, label %2560

2553:                                             ; preds = %2547
  %2554 = load i32, ptr %2549, align 4, !tbaa !6
  %2555 = icmp slt i32 %2554, 0
  %2556 = mul nsw i32 %2554, %2554
  %2557 = sub nsw i32 0, %2556
  %2558 = select i1 %2555, i32 %2557, i32 %2556
  %2559 = mul i32 %2558, %2554
  store i32 %2559, ptr %2551, align 4, !tbaa !6
  br label %5686

2560:                                             ; preds = %2547
  switch i32 %1, label %3170 [
    i32 1, label %2561
    i32 0, label %2870
  ]

2561:                                             ; preds = %2560
  %2562 = getelementptr inbounds i32, ptr %3, i64 %19
  %2563 = load i32, ptr %2562, align 4, !tbaa !6
  %2564 = icmp eq i32 %2563, 0
  %2565 = icmp sgt i32 %5, 0
  br i1 %2564, label %2575, label %2566

2566:                                             ; preds = %2561
  br i1 %2565, label %2567, label %5686

2567:                                             ; preds = %2566
  %2568 = icmp sgt i32 %13, 1
  %2569 = icmp sgt i32 %13, 0
  %2570 = add i32 %13, -2
  %2571 = zext i32 %2570 to i64
  %2572 = zext i32 %13 to i64
  %2573 = add nuw i32 %5, 1
  %2574 = icmp eq i32 %13, 1
  br label %2726

2575:                                             ; preds = %2561
  br i1 %2565, label %2576, label %5686

2576:                                             ; preds = %2575
  %2577 = icmp sgt i32 %13, 1
  %2578 = icmp sgt i32 %13, 0
  %2579 = add i32 %13, -2
  %2580 = zext i32 %2579 to i64
  %2581 = zext i32 %13 to i64
  %2582 = add nuw i32 %5, 1
  %2583 = icmp eq i32 %13, 1
  br label %2584

2584:                                             ; preds = %2576, %2724
  %2585 = phi i32 [ 0, %2576 ], [ %2676, %2724 ]
  %2586 = phi double [ 0.000000e+00, %2576 ], [ %2675, %2724 ]
  %2587 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2577, label %2588, label %2657

2588:                                             ; preds = %2584, %2647
  %2589 = phi i32 [ %2656, %2647 ], [ 0, %2584 ]
  %2590 = phi i64 [ %2598, %2647 ], [ %2581, %2584 ]
  %2591 = phi i64 [ %2655, %2647 ], [ %2580, %2584 ]
  %2592 = phi i32 [ %2653, %2647 ], [ %2587, %2584 ]
  %2593 = sub i32 %2579, %2589
  %2594 = tail call i32 @llvm.smin.i32(i32 %2593, i32 0)
  %2595 = sub i32 %2593, %2594
  %2596 = zext i32 %2595 to i64
  %2597 = add nuw nsw i64 %2596, 1
  %2598 = add nsw i64 %2590, -1
  %2599 = icmp ult i32 %2595, 31
  br i1 %2599, label %2635, label %2600

2600:                                             ; preds = %2588
  %2601 = and i64 %2597, 8589934560
  %2602 = sub i64 %2591, %2601
  br label %2603

2603:                                             ; preds = %2603, %2600
  %2604 = phi i64 [ 0, %2600 ], [ %2627, %2603 ]
  %2605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2623, %2603 ]
  %2606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2624, %2603 ]
  %2607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2625, %2603 ]
  %2608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2600 ], [ %2626, %2603 ]
  %2609 = sub i64 %2591, %2604
  %2610 = getelementptr inbounds i32, ptr %9, i64 %2609
  %2611 = getelementptr inbounds i32, ptr %2610, i64 -7
  %2612 = load <8 x i32>, ptr %2611, align 4, !tbaa !6
  %2613 = shufflevector <8 x i32> %2612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2614 = getelementptr inbounds i32, ptr %2610, i64 -15
  %2615 = load <8 x i32>, ptr %2614, align 4, !tbaa !6
  %2616 = shufflevector <8 x i32> %2615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2617 = getelementptr inbounds i32, ptr %2610, i64 -23
  %2618 = load <8 x i32>, ptr %2617, align 4, !tbaa !6
  %2619 = shufflevector <8 x i32> %2618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2620 = getelementptr inbounds i32, ptr %2610, i64 -31
  %2621 = load <8 x i32>, ptr %2620, align 4, !tbaa !6
  %2622 = shufflevector <8 x i32> %2621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2623 = mul <8 x i32> %2613, %2605
  %2624 = mul <8 x i32> %2616, %2606
  %2625 = mul <8 x i32> %2619, %2607
  %2626 = mul <8 x i32> %2622, %2608
  %2627 = add nuw i64 %2604, 32
  %2628 = icmp eq i64 %2627, %2601
  br i1 %2628, label %2629, label %2603, !llvm.loop !665

2629:                                             ; preds = %2603
  %2630 = mul <8 x i32> %2624, %2623
  %2631 = mul <8 x i32> %2625, %2630
  %2632 = mul <8 x i32> %2626, %2631
  %2633 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2632)
  %2634 = icmp eq i64 %2597, %2601
  br i1 %2634, label %2647, label %2635

2635:                                             ; preds = %2588, %2629
  %2636 = phi i64 [ %2591, %2588 ], [ %2602, %2629 ]
  %2637 = phi i32 [ 1, %2588 ], [ %2633, %2629 ]
  br label %2638

2638:                                             ; preds = %2635, %2638
  %2639 = phi i64 [ %2644, %2638 ], [ %2636, %2635 ]
  %2640 = phi i32 [ %2643, %2638 ], [ %2637, %2635 ]
  %2641 = getelementptr inbounds i32, ptr %9, i64 %2639
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = mul nsw i32 %2642, %2640
  %2644 = add nsw i64 %2639, -1
  %2645 = trunc i64 %2639 to i32
  %2646 = icmp sgt i32 %2645, 0
  br i1 %2646, label %2638, label %2647, !llvm.loop !666

2647:                                             ; preds = %2638, %2629
  %2648 = phi i32 [ %2633, %2629 ], [ %2643, %2638 ]
  %2649 = and i64 %2598, 4294967295
  %2650 = getelementptr inbounds i32, ptr %6, i64 %2649
  %2651 = load i32, ptr %2650, align 4, !tbaa !6
  %2652 = mul nsw i32 %2651, %2648
  %2653 = add nsw i32 %2652, %2592
  %2654 = icmp sgt i64 %2590, 2
  %2655 = add nsw i64 %2591, -1
  %2656 = add i32 %2589, 1
  br i1 %2654, label %2588, label %2657, !llvm.loop !667

2657:                                             ; preds = %2647, %2584
  %2658 = phi i32 [ %2587, %2584 ], [ %2653, %2647 ]
  %2659 = sext i32 %2658 to i64
  %2660 = getelementptr inbounds double, ptr %2, i64 %2659
  %2661 = load double, ptr %2660, align 8, !tbaa !19
  %2662 = getelementptr inbounds i32, ptr %2549, i64 %2659
  %2663 = load i32, ptr %2662, align 4, !tbaa !6
  %2664 = load i32, ptr %2551, align 4, !tbaa !6
  %2665 = sitofp i32 %2664 to double
  %2666 = sitofp i32 %2663 to double
  %2667 = fmul fast double %2661, %2666
  %2668 = fcmp fast olt double %2667, 0.000000e+00
  %2669 = fneg fast double %2667
  %2670 = select nnan ninf i1 %2668, double %2669, double %2667
  %2671 = fmul fast double %2667, %2667
  %2672 = fmul fast double %2671, %2670
  %2673 = fadd fast double %2672, %2665
  %2674 = fptosi double %2673 to i32
  store i32 %2674, ptr %2551, align 4, !tbaa !6
  %2675 = fadd fast double %2661, %2586
  %2676 = add nuw nsw i32 %2585, 1
  br i1 %2578, label %2677, label %2724

2677:                                             ; preds = %2657
  %2678 = load i32, ptr %4, align 4, !tbaa !6
  %2679 = load i32, ptr %12, align 4, !tbaa !6
  %2680 = add nsw i32 %2679, -1
  %2681 = icmp slt i32 %2678, %2680
  br i1 %2681, label %2701, label %2682

2682:                                             ; preds = %2677
  %2683 = icmp eq i32 %2678, %2680
  br i1 %2683, label %2684, label %2717

2684:                                             ; preds = %2682
  store i32 0, ptr %4, align 4, !tbaa !6
  %2685 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2685, ptr %6, align 4, !tbaa !6
  br i1 %2583, label %2724, label %2686

2686:                                             ; preds = %2684, %2711
  %2687 = phi i64 [ %2715, %2711 ], [ 1, %2684 ]
  %2688 = getelementptr inbounds i32, ptr %4, i64 %2687
  %2689 = load i32, ptr %2688, align 4, !tbaa !6
  %2690 = getelementptr inbounds i32, ptr %12, i64 %2687
  %2691 = load i32, ptr %2690, align 4, !tbaa !6
  %2692 = add nsw i32 %2691, -1
  %2693 = icmp slt i32 %2689, %2692
  br i1 %2693, label %2694, label %2709

2694:                                             ; preds = %2686
  br i1 %2681, label %2701, label %2695

2695:                                             ; preds = %2694
  %2696 = getelementptr inbounds i32, ptr %7, i64 %2687
  %2697 = load i32, ptr %2696, align 4, !tbaa !6
  %2698 = getelementptr inbounds i32, ptr %6, i64 %2687
  %2699 = load i32, ptr %2698, align 4, !tbaa !6
  %2700 = add nsw i32 %2699, %2697
  store i32 %2700, ptr %2698, align 4, !tbaa !6
  br label %2719

2701:                                             ; preds = %2677, %2694
  %2702 = phi i32 [ %2689, %2694 ], [ %2678, %2677 ]
  %2703 = phi ptr [ %2688, %2694 ], [ %4, %2677 ]
  %2704 = phi i64 [ %2687, %2694 ], [ 0, %2677 ]
  %2705 = add nsw i32 %2702, 1
  store i32 %2705, ptr %2703, align 4, !tbaa !6
  %2706 = getelementptr inbounds i32, ptr %7, i64 %2704
  %2707 = load i32, ptr %2706, align 4, !tbaa !6
  %2708 = getelementptr inbounds i32, ptr %6, i64 %2704
  br label %2719

2709:                                             ; preds = %2686
  %2710 = icmp eq i32 %2689, %2692
  br i1 %2710, label %2711, label %2717

2711:                                             ; preds = %2709
  store i32 0, ptr %2688, align 4, !tbaa !6
  %2712 = getelementptr inbounds i32, ptr %8, i64 %2687
  %2713 = load i32, ptr %2712, align 4, !tbaa !6
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2687
  store i32 %2713, ptr %2714, align 4, !tbaa !6
  %2715 = add nuw nsw i64 %2687, 1
  %2716 = icmp eq i64 %2715, %2581
  br i1 %2716, label %2724, label %2686, !llvm.loop !668

2717:                                             ; preds = %2682, %2709
  %2718 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2719:                                             ; preds = %2695, %2701
  %2720 = phi ptr [ %2708, %2701 ], [ %2688, %2695 ]
  %2721 = phi i32 [ %2707, %2701 ], [ 1, %2695 ]
  %2722 = load i32, ptr %2720, align 4, !tbaa !6
  %2723 = add nsw i32 %2722, %2721
  store i32 %2723, ptr %2720, align 4, !tbaa !6
  br label %2724

2724:                                             ; preds = %2711, %2719, %2684, %2657
  %2725 = icmp eq i32 %2676, %5
  br i1 %2725, label %5686, label %2584, !llvm.loop !669

2726:                                             ; preds = %2567, %2868
  %2727 = phi i32 [ 0, %2567 ], [ %2817, %2868 ]
  %2728 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2568, label %2729, label %2798

2729:                                             ; preds = %2726, %2788
  %2730 = phi i32 [ %2797, %2788 ], [ 0, %2726 ]
  %2731 = phi i64 [ %2739, %2788 ], [ %2572, %2726 ]
  %2732 = phi i64 [ %2796, %2788 ], [ %2571, %2726 ]
  %2733 = phi i32 [ %2794, %2788 ], [ %2728, %2726 ]
  %2734 = sub i32 %2570, %2730
  %2735 = tail call i32 @llvm.smin.i32(i32 %2734, i32 0)
  %2736 = sub i32 %2734, %2735
  %2737 = zext i32 %2736 to i64
  %2738 = add nuw nsw i64 %2737, 1
  %2739 = add nsw i64 %2731, -1
  %2740 = icmp ult i32 %2736, 31
  br i1 %2740, label %2776, label %2741

2741:                                             ; preds = %2729
  %2742 = and i64 %2738, 8589934560
  %2743 = sub i64 %2732, %2742
  br label %2744

2744:                                             ; preds = %2744, %2741
  %2745 = phi i64 [ 0, %2741 ], [ %2768, %2744 ]
  %2746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2764, %2744 ]
  %2747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2765, %2744 ]
  %2748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2766, %2744 ]
  %2749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2741 ], [ %2767, %2744 ]
  %2750 = sub i64 %2732, %2745
  %2751 = getelementptr inbounds i32, ptr %11, i64 %2750
  %2752 = getelementptr inbounds i32, ptr %2751, i64 -7
  %2753 = load <8 x i32>, ptr %2752, align 4, !tbaa !6
  %2754 = shufflevector <8 x i32> %2753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2755 = getelementptr inbounds i32, ptr %2751, i64 -15
  %2756 = load <8 x i32>, ptr %2755, align 4, !tbaa !6
  %2757 = shufflevector <8 x i32> %2756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2758 = getelementptr inbounds i32, ptr %2751, i64 -23
  %2759 = load <8 x i32>, ptr %2758, align 4, !tbaa !6
  %2760 = shufflevector <8 x i32> %2759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2761 = getelementptr inbounds i32, ptr %2751, i64 -31
  %2762 = load <8 x i32>, ptr %2761, align 4, !tbaa !6
  %2763 = shufflevector <8 x i32> %2762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2764 = mul <8 x i32> %2754, %2746
  %2765 = mul <8 x i32> %2757, %2747
  %2766 = mul <8 x i32> %2760, %2748
  %2767 = mul <8 x i32> %2763, %2749
  %2768 = add nuw i64 %2745, 32
  %2769 = icmp eq i64 %2768, %2742
  br i1 %2769, label %2770, label %2744, !llvm.loop !670

2770:                                             ; preds = %2744
  %2771 = mul <8 x i32> %2765, %2764
  %2772 = mul <8 x i32> %2766, %2771
  %2773 = mul <8 x i32> %2767, %2772
  %2774 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2773)
  %2775 = icmp eq i64 %2738, %2742
  br i1 %2775, label %2788, label %2776

2776:                                             ; preds = %2729, %2770
  %2777 = phi i64 [ %2732, %2729 ], [ %2743, %2770 ]
  %2778 = phi i32 [ 1, %2729 ], [ %2774, %2770 ]
  br label %2779

2779:                                             ; preds = %2776, %2779
  %2780 = phi i64 [ %2785, %2779 ], [ %2777, %2776 ]
  %2781 = phi i32 [ %2784, %2779 ], [ %2778, %2776 ]
  %2782 = getelementptr inbounds i32, ptr %11, i64 %2780
  %2783 = load i32, ptr %2782, align 4, !tbaa !6
  %2784 = mul nsw i32 %2783, %2781
  %2785 = add nsw i64 %2780, -1
  %2786 = trunc i64 %2780 to i32
  %2787 = icmp sgt i32 %2786, 0
  br i1 %2787, label %2779, label %2788, !llvm.loop !671

2788:                                             ; preds = %2779, %2770
  %2789 = phi i32 [ %2774, %2770 ], [ %2784, %2779 ]
  %2790 = and i64 %2739, 4294967295
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2790
  %2792 = load i32, ptr %2791, align 4, !tbaa !6
  %2793 = mul nsw i32 %2792, %2789
  %2794 = add nsw i32 %2793, %2733
  %2795 = icmp sgt i64 %2731, 2
  %2796 = add nsw i64 %2732, -1
  %2797 = add i32 %2730, 1
  br i1 %2795, label %2729, label %2798, !llvm.loop !672

2798:                                             ; preds = %2788, %2726
  %2799 = phi i32 [ %2728, %2726 ], [ %2794, %2788 ]
  %2800 = icmp slt i32 %2799, %5
  br i1 %2800, label %2803, label %2801

2801:                                             ; preds = %2798
  %2802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

2803:                                             ; preds = %2798
  %2804 = sext i32 %2799 to i64
  %2805 = getelementptr inbounds i32, ptr %2549, i64 %2804
  %2806 = load i32, ptr %2805, align 4, !tbaa !6
  %2807 = load i32, ptr %2551, align 4, !tbaa !6
  %2808 = sitofp i32 %2807 to double
  %2809 = sitofp i32 %2806 to double
  %2810 = icmp slt i32 %2806, 0
  %2811 = fneg fast double %2809
  %2812 = select i1 %2810, double %2811, double %2809
  %2813 = fmul fast double %2809, %2809
  %2814 = fmul fast double %2813, %2812
  %2815 = fadd fast double %2814, %2808
  %2816 = fptosi double %2815 to i32
  store i32 %2816, ptr %2551, align 4, !tbaa !6
  %2817 = add nuw nsw i32 %2727, 1
  br i1 %2569, label %2818, label %2868

2818:                                             ; preds = %2803
  %2819 = load i32, ptr %4, align 4, !tbaa !6
  %2820 = load i32, ptr %12, align 4, !tbaa !6
  %2821 = add nsw i32 %2820, -1
  %2822 = icmp slt i32 %2819, %2821
  br i1 %2822, label %2845, label %2823

2823:                                             ; preds = %2818
  %2824 = icmp eq i32 %2819, %2821
  br i1 %2824, label %2825, label %2861

2825:                                             ; preds = %2823
  store i32 0, ptr %4, align 4, !tbaa !6
  %2826 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2826, ptr %6, align 4, !tbaa !6
  br i1 %2574, label %2868, label %2827

2827:                                             ; preds = %2825, %2855
  %2828 = phi i64 [ %2859, %2855 ], [ 1, %2825 ]
  %2829 = getelementptr inbounds i32, ptr %4, i64 %2828
  %2830 = load i32, ptr %2829, align 4, !tbaa !6
  %2831 = getelementptr inbounds i32, ptr %12, i64 %2828
  %2832 = load i32, ptr %2831, align 4, !tbaa !6
  %2833 = add nsw i32 %2832, -1
  %2834 = icmp slt i32 %2830, %2833
  br i1 %2834, label %2835, label %2853

2835:                                             ; preds = %2827
  br i1 %2822, label %2845, label %2836

2836:                                             ; preds = %2835
  %2837 = shl i64 %2828, 32
  %2838 = add i64 %2837, -4294967296
  %2839 = ashr exact i64 %2838, 32
  %2840 = getelementptr inbounds i32, ptr %7, i64 %2839
  %2841 = load i32, ptr %2840, align 4, !tbaa !6
  %2842 = getelementptr inbounds i32, ptr %6, i64 %2828
  %2843 = load i32, ptr %2842, align 4, !tbaa !6
  %2844 = add nsw i32 %2843, %2841
  store i32 %2844, ptr %2842, align 4, !tbaa !6
  br label %2863

2845:                                             ; preds = %2818, %2835
  %2846 = phi i32 [ %2830, %2835 ], [ %2819, %2818 ]
  %2847 = phi ptr [ %2829, %2835 ], [ %4, %2818 ]
  %2848 = phi i64 [ %2828, %2835 ], [ 0, %2818 ]
  %2849 = add nsw i32 %2846, 1
  store i32 %2849, ptr %2847, align 4, !tbaa !6
  %2850 = getelementptr inbounds i32, ptr %7, i64 %2848
  %2851 = load i32, ptr %2850, align 4, !tbaa !6
  %2852 = getelementptr inbounds i32, ptr %6, i64 %2848
  br label %2863

2853:                                             ; preds = %2827
  %2854 = icmp eq i32 %2830, %2833
  br i1 %2854, label %2855, label %2861

2855:                                             ; preds = %2853
  store i32 0, ptr %2829, align 4, !tbaa !6
  %2856 = getelementptr inbounds i32, ptr %8, i64 %2828
  %2857 = load i32, ptr %2856, align 4, !tbaa !6
  %2858 = getelementptr inbounds i32, ptr %6, i64 %2828
  store i32 %2857, ptr %2858, align 4, !tbaa !6
  %2859 = add nuw nsw i64 %2828, 1
  %2860 = icmp eq i64 %2859, %2572
  br i1 %2860, label %2868, label %2827, !llvm.loop !673

2861:                                             ; preds = %2823, %2853
  %2862 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

2863:                                             ; preds = %2836, %2845
  %2864 = phi ptr [ %2852, %2845 ], [ %2829, %2836 ]
  %2865 = phi i32 [ %2851, %2845 ], [ 1, %2836 ]
  %2866 = load i32, ptr %2864, align 4, !tbaa !6
  %2867 = add nsw i32 %2866, %2865
  store i32 %2867, ptr %2864, align 4, !tbaa !6
  br label %2868

2868:                                             ; preds = %2855, %2863, %2825, %2803
  %2869 = icmp eq i32 %2817, %5
  br i1 %2869, label %5686, label %2726, !llvm.loop !674

2870:                                             ; preds = %2560
  %2871 = getelementptr inbounds i32, ptr %3, i64 %19
  %2872 = load i32, ptr %2871, align 4, !tbaa !6
  %2873 = icmp eq i32 %2872, 0
  %2874 = icmp sgt i32 %5, 0
  br i1 %2873, label %2884, label %2875

2875:                                             ; preds = %2870
  br i1 %2874, label %2876, label %5686

2876:                                             ; preds = %2875
  %2877 = icmp sgt i32 %13, 1
  %2878 = icmp sgt i32 %13, 0
  %2879 = add i32 %13, -2
  %2880 = zext i32 %2879 to i64
  %2881 = zext i32 %13 to i64
  %2882 = add nuw i32 %5, 1
  %2883 = icmp eq i32 %13, 1
  br label %3029

2884:                                             ; preds = %2870
  br i1 %2874, label %2885, label %5686

2885:                                             ; preds = %2884
  %2886 = icmp sgt i32 %13, 1
  %2887 = icmp sgt i32 %13, 0
  %2888 = add i32 %13, -2
  %2889 = zext i32 %2888 to i64
  %2890 = zext i32 %13 to i64
  %2891 = add nuw i32 %5, 1
  %2892 = icmp eq i32 %13, 1
  br label %2893

2893:                                             ; preds = %2885, %3027
  %2894 = phi i32 [ 0, %2885 ], [ %2979, %3027 ]
  %2895 = phi double [ 0.000000e+00, %2885 ], [ %2978, %3027 ]
  %2896 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2886, label %2897, label %2966

2897:                                             ; preds = %2893, %2956
  %2898 = phi i32 [ %2965, %2956 ], [ 0, %2893 ]
  %2899 = phi i64 [ %2907, %2956 ], [ %2890, %2893 ]
  %2900 = phi i64 [ %2964, %2956 ], [ %2889, %2893 ]
  %2901 = phi i32 [ %2962, %2956 ], [ %2896, %2893 ]
  %2902 = sub i32 %2888, %2898
  %2903 = tail call i32 @llvm.smin.i32(i32 %2902, i32 0)
  %2904 = sub i32 %2902, %2903
  %2905 = zext i32 %2904 to i64
  %2906 = add nuw nsw i64 %2905, 1
  %2907 = add nsw i64 %2899, -1
  %2908 = icmp ult i32 %2904, 31
  br i1 %2908, label %2944, label %2909

2909:                                             ; preds = %2897
  %2910 = and i64 %2906, 8589934560
  %2911 = sub i64 %2900, %2910
  br label %2912

2912:                                             ; preds = %2912, %2909
  %2913 = phi i64 [ 0, %2909 ], [ %2936, %2912 ]
  %2914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2932, %2912 ]
  %2915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2933, %2912 ]
  %2916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2934, %2912 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2909 ], [ %2935, %2912 ]
  %2918 = sub i64 %2900, %2913
  %2919 = getelementptr inbounds i32, ptr %9, i64 %2918
  %2920 = getelementptr inbounds i32, ptr %2919, i64 -7
  %2921 = load <8 x i32>, ptr %2920, align 4, !tbaa !6
  %2922 = shufflevector <8 x i32> %2921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2923 = getelementptr inbounds i32, ptr %2919, i64 -15
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !6
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2919, i64 -23
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !6
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2919, i64 -31
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !6
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = mul <8 x i32> %2922, %2914
  %2933 = mul <8 x i32> %2925, %2915
  %2934 = mul <8 x i32> %2928, %2916
  %2935 = mul <8 x i32> %2931, %2917
  %2936 = add nuw i64 %2913, 32
  %2937 = icmp eq i64 %2936, %2910
  br i1 %2937, label %2938, label %2912, !llvm.loop !675

2938:                                             ; preds = %2912
  %2939 = mul <8 x i32> %2933, %2932
  %2940 = mul <8 x i32> %2934, %2939
  %2941 = mul <8 x i32> %2935, %2940
  %2942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2941)
  %2943 = icmp eq i64 %2906, %2910
  br i1 %2943, label %2956, label %2944

2944:                                             ; preds = %2897, %2938
  %2945 = phi i64 [ %2900, %2897 ], [ %2911, %2938 ]
  %2946 = phi i32 [ 1, %2897 ], [ %2942, %2938 ]
  br label %2947

2947:                                             ; preds = %2944, %2947
  %2948 = phi i64 [ %2953, %2947 ], [ %2945, %2944 ]
  %2949 = phi i32 [ %2952, %2947 ], [ %2946, %2944 ]
  %2950 = getelementptr inbounds i32, ptr %9, i64 %2948
  %2951 = load i32, ptr %2950, align 4, !tbaa !6
  %2952 = mul nsw i32 %2951, %2949
  %2953 = add nsw i64 %2948, -1
  %2954 = trunc i64 %2948 to i32
  %2955 = icmp sgt i32 %2954, 0
  br i1 %2955, label %2947, label %2956, !llvm.loop !676

2956:                                             ; preds = %2947, %2938
  %2957 = phi i32 [ %2942, %2938 ], [ %2952, %2947 ]
  %2958 = and i64 %2907, 4294967295
  %2959 = getelementptr inbounds i32, ptr %6, i64 %2958
  %2960 = load i32, ptr %2959, align 4, !tbaa !6
  %2961 = mul nsw i32 %2960, %2957
  %2962 = add nsw i32 %2961, %2901
  %2963 = icmp sgt i64 %2899, 2
  %2964 = add nsw i64 %2900, -1
  %2965 = add i32 %2898, 1
  br i1 %2963, label %2897, label %2966, !llvm.loop !677

2966:                                             ; preds = %2956, %2893
  %2967 = phi i32 [ %2896, %2893 ], [ %2962, %2956 ]
  %2968 = sext i32 %2967 to i64
  %2969 = getelementptr inbounds i32, ptr %2549, i64 %2968
  %2970 = load i32, ptr %2969, align 4, !tbaa !6
  %2971 = load i32, ptr %2551, align 4, !tbaa !6
  %2972 = icmp slt i32 %2970, 0
  %2973 = mul nsw i32 %2970, %2970
  %2974 = sub nsw i32 0, %2973
  %2975 = select i1 %2972, i32 %2974, i32 %2973
  %2976 = mul i32 %2975, %2970
  %2977 = add nsw i32 %2976, %2971
  store i32 %2977, ptr %2551, align 4, !tbaa !6
  %2978 = fadd fast double %2895, 1.000000e+00
  %2979 = add nuw nsw i32 %2894, 1
  br i1 %2887, label %2980, label %3027

2980:                                             ; preds = %2966
  %2981 = load i32, ptr %4, align 4, !tbaa !6
  %2982 = load i32, ptr %12, align 4, !tbaa !6
  %2983 = add nsw i32 %2982, -1
  %2984 = icmp slt i32 %2981, %2983
  br i1 %2984, label %3004, label %2985

2985:                                             ; preds = %2980
  %2986 = icmp eq i32 %2981, %2983
  br i1 %2986, label %2987, label %3020

2987:                                             ; preds = %2985
  store i32 0, ptr %4, align 4, !tbaa !6
  %2988 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2988, ptr %6, align 4, !tbaa !6
  br i1 %2892, label %3027, label %2989

2989:                                             ; preds = %2987, %3014
  %2990 = phi i64 [ %3018, %3014 ], [ 1, %2987 ]
  %2991 = getelementptr inbounds i32, ptr %4, i64 %2990
  %2992 = load i32, ptr %2991, align 4, !tbaa !6
  %2993 = getelementptr inbounds i32, ptr %12, i64 %2990
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = add nsw i32 %2994, -1
  %2996 = icmp slt i32 %2992, %2995
  br i1 %2996, label %2997, label %3012

2997:                                             ; preds = %2989
  br i1 %2984, label %3004, label %2998

2998:                                             ; preds = %2997
  %2999 = getelementptr inbounds i32, ptr %7, i64 %2990
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2990
  %3002 = load i32, ptr %3001, align 4, !tbaa !6
  %3003 = add nsw i32 %3002, %3000
  store i32 %3003, ptr %3001, align 4, !tbaa !6
  br label %3022

3004:                                             ; preds = %2980, %2997
  %3005 = phi i32 [ %2992, %2997 ], [ %2981, %2980 ]
  %3006 = phi ptr [ %2991, %2997 ], [ %4, %2980 ]
  %3007 = phi i64 [ %2990, %2997 ], [ 0, %2980 ]
  %3008 = add nsw i32 %3005, 1
  store i32 %3008, ptr %3006, align 4, !tbaa !6
  %3009 = getelementptr inbounds i32, ptr %7, i64 %3007
  %3010 = load i32, ptr %3009, align 4, !tbaa !6
  %3011 = getelementptr inbounds i32, ptr %6, i64 %3007
  br label %3022

3012:                                             ; preds = %2989
  %3013 = icmp eq i32 %2992, %2995
  br i1 %3013, label %3014, label %3020

3014:                                             ; preds = %3012
  store i32 0, ptr %2991, align 4, !tbaa !6
  %3015 = getelementptr inbounds i32, ptr %8, i64 %2990
  %3016 = load i32, ptr %3015, align 4, !tbaa !6
  %3017 = getelementptr inbounds i32, ptr %6, i64 %2990
  store i32 %3016, ptr %3017, align 4, !tbaa !6
  %3018 = add nuw nsw i64 %2990, 1
  %3019 = icmp eq i64 %3018, %2890
  br i1 %3019, label %3027, label %2989, !llvm.loop !678

3020:                                             ; preds = %2985, %3012
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3022:                                             ; preds = %2998, %3004
  %3023 = phi ptr [ %3011, %3004 ], [ %2991, %2998 ]
  %3024 = phi i32 [ %3010, %3004 ], [ 1, %2998 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3014, %3022, %2987, %2966
  %3028 = icmp eq i32 %2979, %5
  br i1 %3028, label %5686, label %2893, !llvm.loop !679

3029:                                             ; preds = %2876, %3168
  %3030 = phi i32 [ 0, %2876 ], [ %3117, %3168 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2877, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2881, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2880, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2879, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !680

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !681

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !682

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3106:                                             ; preds = %3101
  %3107 = sext i32 %3102 to i64
  %3108 = getelementptr inbounds i32, ptr %2549, i64 %3107
  %3109 = load i32, ptr %3108, align 4, !tbaa !6
  %3110 = load i32, ptr %2551, align 4, !tbaa !6
  %3111 = icmp slt i32 %3109, 0
  %3112 = mul nsw i32 %3109, %3109
  %3113 = sub nsw i32 0, %3112
  %3114 = select i1 %3111, i32 %3113, i32 %3112
  %3115 = mul i32 %3114, %3109
  %3116 = add nsw i32 %3115, %3110
  store i32 %3116, ptr %2551, align 4, !tbaa !6
  %3117 = add nuw nsw i32 %3030, 1
  br i1 %2878, label %3118, label %3168

3118:                                             ; preds = %3106
  %3119 = load i32, ptr %4, align 4, !tbaa !6
  %3120 = load i32, ptr %12, align 4, !tbaa !6
  %3121 = add nsw i32 %3120, -1
  %3122 = icmp slt i32 %3119, %3121
  br i1 %3122, label %3145, label %3123

3123:                                             ; preds = %3118
  %3124 = icmp eq i32 %3119, %3121
  br i1 %3124, label %3125, label %3161

3125:                                             ; preds = %3123
  store i32 0, ptr %4, align 4, !tbaa !6
  %3126 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3126, ptr %6, align 4, !tbaa !6
  br i1 %2883, label %3168, label %3127

3127:                                             ; preds = %3125, %3155
  %3128 = phi i64 [ %3159, %3155 ], [ 1, %3125 ]
  %3129 = getelementptr inbounds i32, ptr %4, i64 %3128
  %3130 = load i32, ptr %3129, align 4, !tbaa !6
  %3131 = getelementptr inbounds i32, ptr %12, i64 %3128
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = add nsw i32 %3132, -1
  %3134 = icmp slt i32 %3130, %3133
  br i1 %3134, label %3135, label %3153

3135:                                             ; preds = %3127
  br i1 %3122, label %3145, label %3136

3136:                                             ; preds = %3135
  %3137 = shl i64 %3128, 32
  %3138 = add i64 %3137, -4294967296
  %3139 = ashr exact i64 %3138, 32
  %3140 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3141 = load i32, ptr %3140, align 4, !tbaa !6
  %3142 = getelementptr inbounds i32, ptr %6, i64 %3128
  %3143 = load i32, ptr %3142, align 4, !tbaa !6
  %3144 = add nsw i32 %3143, %3141
  store i32 %3144, ptr %3142, align 4, !tbaa !6
  br label %3163

3145:                                             ; preds = %3118, %3135
  %3146 = phi i32 [ %3130, %3135 ], [ %3119, %3118 ]
  %3147 = phi ptr [ %3129, %3135 ], [ %4, %3118 ]
  %3148 = phi i64 [ %3128, %3135 ], [ 0, %3118 ]
  %3149 = add nsw i32 %3146, 1
  store i32 %3149, ptr %3147, align 4, !tbaa !6
  %3150 = getelementptr inbounds i32, ptr %7, i64 %3148
  %3151 = load i32, ptr %3150, align 4, !tbaa !6
  %3152 = getelementptr inbounds i32, ptr %6, i64 %3148
  br label %3163

3153:                                             ; preds = %3127
  %3154 = icmp eq i32 %3130, %3133
  br i1 %3154, label %3155, label %3161

3155:                                             ; preds = %3153
  store i32 0, ptr %3129, align 4, !tbaa !6
  %3156 = getelementptr inbounds i32, ptr %8, i64 %3128
  %3157 = load i32, ptr %3156, align 4, !tbaa !6
  %3158 = getelementptr inbounds i32, ptr %6, i64 %3128
  store i32 %3157, ptr %3158, align 4, !tbaa !6
  %3159 = add nuw nsw i64 %3128, 1
  %3160 = icmp eq i64 %3159, %2881
  br i1 %3160, label %3168, label %3127, !llvm.loop !683

3161:                                             ; preds = %3123, %3153
  %3162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3163:                                             ; preds = %3136, %3145
  %3164 = phi ptr [ %3152, %3145 ], [ %3129, %3136 ]
  %3165 = phi i32 [ %3151, %3145 ], [ 1, %3136 ]
  %3166 = load i32, ptr %3164, align 4, !tbaa !6
  %3167 = add nsw i32 %3166, %3165
  store i32 %3167, ptr %3164, align 4, !tbaa !6
  br label %3168

3168:                                             ; preds = %3155, %3163, %3125, %3106
  %3169 = icmp eq i32 %3117, %5
  br i1 %3169, label %5686, label %3029, !llvm.loop !684

3170:                                             ; preds = %2560
  %3171 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1183, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

3172:                                             ; preds = %18
  %3173 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3174 = load ptr, ptr %3173, align 8, !tbaa !10
  %3175 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3176 = load ptr, ptr %3175, align 8, !tbaa !10
  store i64 0, ptr %3176, align 8, !tbaa !121
  %3177 = icmp eq i32 %13, 0
  br i1 %3177, label %3178, label %3186

3178:                                             ; preds = %3172
  %3179 = load i32, ptr %3174, align 4, !tbaa !6
  %3180 = sext i32 %3179 to i64
  %3181 = icmp slt i32 %3179, 0
  %3182 = mul nsw i64 %3180, %3180
  %3183 = sub nsw i64 0, %3182
  %3184 = select i1 %3181, i64 %3183, i64 %3182
  %3185 = mul i64 %3184, %3180
  store i64 %3185, ptr %3176, align 8, !tbaa !121
  br label %5686

3186:                                             ; preds = %3172
  switch i32 %1, label %3798 [
    i32 1, label %3187
    i32 0, label %3496
  ]

3187:                                             ; preds = %3186
  %3188 = getelementptr inbounds i32, ptr %3, i64 %19
  %3189 = load i32, ptr %3188, align 4, !tbaa !6
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp sgt i32 %5, 0
  br i1 %3190, label %3201, label %3192

3192:                                             ; preds = %3187
  br i1 %3191, label %3193, label %5686

3193:                                             ; preds = %3192
  %3194 = icmp sgt i32 %13, 1
  %3195 = icmp sgt i32 %13, 0
  %3196 = add i32 %13, -2
  %3197 = zext i32 %3196 to i64
  %3198 = zext i32 %13 to i64
  %3199 = add nuw i32 %5, 1
  %3200 = icmp eq i32 %13, 1
  br label %3352

3201:                                             ; preds = %3187
  br i1 %3191, label %3202, label %5686

3202:                                             ; preds = %3201
  %3203 = icmp sgt i32 %13, 1
  %3204 = icmp sgt i32 %13, 0
  %3205 = add i32 %13, -2
  %3206 = zext i32 %3205 to i64
  %3207 = zext i32 %13 to i64
  %3208 = add nuw i32 %5, 1
  %3209 = icmp eq i32 %13, 1
  br label %3210

3210:                                             ; preds = %3202, %3350
  %3211 = phi i64 [ 0, %3202 ], [ %3300, %3350 ]
  %3212 = phi i32 [ 0, %3202 ], [ %3302, %3350 ]
  %3213 = phi double [ 0.000000e+00, %3202 ], [ %3301, %3350 ]
  %3214 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3203, label %3215, label %3284

3215:                                             ; preds = %3210, %3274
  %3216 = phi i32 [ %3283, %3274 ], [ 0, %3210 ]
  %3217 = phi i64 [ %3225, %3274 ], [ %3207, %3210 ]
  %3218 = phi i64 [ %3282, %3274 ], [ %3206, %3210 ]
  %3219 = phi i32 [ %3280, %3274 ], [ %3214, %3210 ]
  %3220 = sub i32 %3205, %3216
  %3221 = tail call i32 @llvm.smin.i32(i32 %3220, i32 0)
  %3222 = sub i32 %3220, %3221
  %3223 = zext i32 %3222 to i64
  %3224 = add nuw nsw i64 %3223, 1
  %3225 = add nsw i64 %3217, -1
  %3226 = icmp ult i32 %3222, 31
  br i1 %3226, label %3262, label %3227

3227:                                             ; preds = %3215
  %3228 = and i64 %3224, 8589934560
  %3229 = sub i64 %3218, %3228
  br label %3230

3230:                                             ; preds = %3230, %3227
  %3231 = phi i64 [ 0, %3227 ], [ %3254, %3230 ]
  %3232 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3250, %3230 ]
  %3233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3251, %3230 ]
  %3234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3252, %3230 ]
  %3235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3227 ], [ %3253, %3230 ]
  %3236 = sub i64 %3218, %3231
  %3237 = getelementptr inbounds i32, ptr %9, i64 %3236
  %3238 = getelementptr inbounds i32, ptr %3237, i64 -7
  %3239 = load <8 x i32>, ptr %3238, align 4, !tbaa !6
  %3240 = shufflevector <8 x i32> %3239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3241 = getelementptr inbounds i32, ptr %3237, i64 -15
  %3242 = load <8 x i32>, ptr %3241, align 4, !tbaa !6
  %3243 = shufflevector <8 x i32> %3242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3244 = getelementptr inbounds i32, ptr %3237, i64 -23
  %3245 = load <8 x i32>, ptr %3244, align 4, !tbaa !6
  %3246 = shufflevector <8 x i32> %3245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3247 = getelementptr inbounds i32, ptr %3237, i64 -31
  %3248 = load <8 x i32>, ptr %3247, align 4, !tbaa !6
  %3249 = shufflevector <8 x i32> %3248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3250 = mul <8 x i32> %3240, %3232
  %3251 = mul <8 x i32> %3243, %3233
  %3252 = mul <8 x i32> %3246, %3234
  %3253 = mul <8 x i32> %3249, %3235
  %3254 = add nuw i64 %3231, 32
  %3255 = icmp eq i64 %3254, %3228
  br i1 %3255, label %3256, label %3230, !llvm.loop !685

3256:                                             ; preds = %3230
  %3257 = mul <8 x i32> %3251, %3250
  %3258 = mul <8 x i32> %3252, %3257
  %3259 = mul <8 x i32> %3253, %3258
  %3260 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3259)
  %3261 = icmp eq i64 %3224, %3228
  br i1 %3261, label %3274, label %3262

3262:                                             ; preds = %3215, %3256
  %3263 = phi i64 [ %3218, %3215 ], [ %3229, %3256 ]
  %3264 = phi i32 [ 1, %3215 ], [ %3260, %3256 ]
  br label %3265

3265:                                             ; preds = %3262, %3265
  %3266 = phi i64 [ %3271, %3265 ], [ %3263, %3262 ]
  %3267 = phi i32 [ %3270, %3265 ], [ %3264, %3262 ]
  %3268 = getelementptr inbounds i32, ptr %9, i64 %3266
  %3269 = load i32, ptr %3268, align 4, !tbaa !6
  %3270 = mul nsw i32 %3269, %3267
  %3271 = add nsw i64 %3266, -1
  %3272 = trunc i64 %3266 to i32
  %3273 = icmp sgt i32 %3272, 0
  br i1 %3273, label %3265, label %3274, !llvm.loop !686

3274:                                             ; preds = %3265, %3256
  %3275 = phi i32 [ %3260, %3256 ], [ %3270, %3265 ]
  %3276 = and i64 %3225, 4294967295
  %3277 = getelementptr inbounds i32, ptr %6, i64 %3276
  %3278 = load i32, ptr %3277, align 4, !tbaa !6
  %3279 = mul nsw i32 %3278, %3275
  %3280 = add nsw i32 %3279, %3219
  %3281 = icmp sgt i64 %3217, 2
  %3282 = add nsw i64 %3218, -1
  %3283 = add i32 %3216, 1
  br i1 %3281, label %3215, label %3284, !llvm.loop !687

3284:                                             ; preds = %3274, %3210
  %3285 = phi i32 [ %3214, %3210 ], [ %3280, %3274 ]
  %3286 = sext i32 %3285 to i64
  %3287 = getelementptr inbounds double, ptr %2, i64 %3286
  %3288 = load double, ptr %3287, align 8, !tbaa !19
  %3289 = getelementptr inbounds i32, ptr %3174, i64 %3286
  %3290 = load i32, ptr %3289, align 4, !tbaa !6
  %3291 = sitofp i64 %3211 to double
  %3292 = sitofp i32 %3290 to double
  %3293 = fmul fast double %3288, %3292
  %3294 = fcmp fast olt double %3293, 0.000000e+00
  %3295 = fneg fast double %3293
  %3296 = select nnan ninf i1 %3294, double %3295, double %3293
  %3297 = fmul fast double %3293, %3293
  %3298 = fmul fast double %3297, %3296
  %3299 = fadd fast double %3298, %3291
  %3300 = fptosi double %3299 to i64
  %3301 = fadd fast double %3288, %3213
  %3302 = add nuw nsw i32 %3212, 1
  br i1 %3204, label %3303, label %3350

3303:                                             ; preds = %3284
  %3304 = load i32, ptr %4, align 4, !tbaa !6
  %3305 = load i32, ptr %12, align 4, !tbaa !6
  %3306 = add nsw i32 %3305, -1
  %3307 = icmp slt i32 %3304, %3306
  br i1 %3307, label %3327, label %3308

3308:                                             ; preds = %3303
  %3309 = icmp eq i32 %3304, %3306
  br i1 %3309, label %3310, label %3343

3310:                                             ; preds = %3308
  store i32 0, ptr %4, align 4, !tbaa !6
  %3311 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3311, ptr %6, align 4, !tbaa !6
  br i1 %3209, label %3350, label %3312

3312:                                             ; preds = %3310, %3337
  %3313 = phi i64 [ %3341, %3337 ], [ 1, %3310 ]
  %3314 = getelementptr inbounds i32, ptr %4, i64 %3313
  %3315 = load i32, ptr %3314, align 4, !tbaa !6
  %3316 = getelementptr inbounds i32, ptr %12, i64 %3313
  %3317 = load i32, ptr %3316, align 4, !tbaa !6
  %3318 = add nsw i32 %3317, -1
  %3319 = icmp slt i32 %3315, %3318
  br i1 %3319, label %3320, label %3335

3320:                                             ; preds = %3312
  br i1 %3307, label %3327, label %3321

3321:                                             ; preds = %3320
  %3322 = getelementptr inbounds i32, ptr %7, i64 %3313
  %3323 = load i32, ptr %3322, align 4, !tbaa !6
  %3324 = getelementptr inbounds i32, ptr %6, i64 %3313
  %3325 = load i32, ptr %3324, align 4, !tbaa !6
  %3326 = add nsw i32 %3325, %3323
  store i32 %3326, ptr %3324, align 4, !tbaa !6
  br label %3345

3327:                                             ; preds = %3303, %3320
  %3328 = phi i32 [ %3315, %3320 ], [ %3304, %3303 ]
  %3329 = phi ptr [ %3314, %3320 ], [ %4, %3303 ]
  %3330 = phi i64 [ %3313, %3320 ], [ 0, %3303 ]
  %3331 = add nsw i32 %3328, 1
  store i32 %3331, ptr %3329, align 4, !tbaa !6
  %3332 = getelementptr inbounds i32, ptr %7, i64 %3330
  %3333 = load i32, ptr %3332, align 4, !tbaa !6
  %3334 = getelementptr inbounds i32, ptr %6, i64 %3330
  br label %3345

3335:                                             ; preds = %3312
  %3336 = icmp eq i32 %3315, %3318
  br i1 %3336, label %3337, label %3343

3337:                                             ; preds = %3335
  store i32 0, ptr %3314, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %8, i64 %3313
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = getelementptr inbounds i32, ptr %6, i64 %3313
  store i32 %3339, ptr %3340, align 4, !tbaa !6
  %3341 = add nuw nsw i64 %3313, 1
  %3342 = icmp eq i64 %3341, %3207
  br i1 %3342, label %3350, label %3312, !llvm.loop !688

3343:                                             ; preds = %3308, %3335
  store i64 %3300, ptr %3176, align 8, !tbaa !121
  %3344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3345:                                             ; preds = %3321, %3327
  %3346 = phi ptr [ %3334, %3327 ], [ %3314, %3321 ]
  %3347 = phi i32 [ %3333, %3327 ], [ 1, %3321 ]
  %3348 = load i32, ptr %3346, align 4, !tbaa !6
  %3349 = add nsw i32 %3348, %3347
  store i32 %3349, ptr %3346, align 4, !tbaa !6
  br label %3350

3350:                                             ; preds = %3337, %3345, %3310, %3284
  %3351 = icmp eq i32 %3302, %5
  br i1 %3351, label %5680, label %3210, !llvm.loop !689

3352:                                             ; preds = %3193, %3494
  %3353 = phi i64 [ 0, %3193 ], [ %3442, %3494 ]
  %3354 = phi i32 [ 0, %3193 ], [ %3443, %3494 ]
  %3355 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3194, label %3356, label %3425

3356:                                             ; preds = %3352, %3415
  %3357 = phi i32 [ %3424, %3415 ], [ 0, %3352 ]
  %3358 = phi i64 [ %3366, %3415 ], [ %3198, %3352 ]
  %3359 = phi i64 [ %3423, %3415 ], [ %3197, %3352 ]
  %3360 = phi i32 [ %3421, %3415 ], [ %3355, %3352 ]
  %3361 = sub i32 %3196, %3357
  %3362 = tail call i32 @llvm.smin.i32(i32 %3361, i32 0)
  %3363 = sub i32 %3361, %3362
  %3364 = zext i32 %3363 to i64
  %3365 = add nuw nsw i64 %3364, 1
  %3366 = add nsw i64 %3358, -1
  %3367 = icmp ult i32 %3363, 31
  br i1 %3367, label %3403, label %3368

3368:                                             ; preds = %3356
  %3369 = and i64 %3365, 8589934560
  %3370 = sub i64 %3359, %3369
  br label %3371

3371:                                             ; preds = %3371, %3368
  %3372 = phi i64 [ 0, %3368 ], [ %3395, %3371 ]
  %3373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3391, %3371 ]
  %3374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3392, %3371 ]
  %3375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3393, %3371 ]
  %3376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3368 ], [ %3394, %3371 ]
  %3377 = sub i64 %3359, %3372
  %3378 = getelementptr inbounds i32, ptr %11, i64 %3377
  %3379 = getelementptr inbounds i32, ptr %3378, i64 -7
  %3380 = load <8 x i32>, ptr %3379, align 4, !tbaa !6
  %3381 = shufflevector <8 x i32> %3380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3382 = getelementptr inbounds i32, ptr %3378, i64 -15
  %3383 = load <8 x i32>, ptr %3382, align 4, !tbaa !6
  %3384 = shufflevector <8 x i32> %3383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3385 = getelementptr inbounds i32, ptr %3378, i64 -23
  %3386 = load <8 x i32>, ptr %3385, align 4, !tbaa !6
  %3387 = shufflevector <8 x i32> %3386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3388 = getelementptr inbounds i32, ptr %3378, i64 -31
  %3389 = load <8 x i32>, ptr %3388, align 4, !tbaa !6
  %3390 = shufflevector <8 x i32> %3389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3391 = mul <8 x i32> %3381, %3373
  %3392 = mul <8 x i32> %3384, %3374
  %3393 = mul <8 x i32> %3387, %3375
  %3394 = mul <8 x i32> %3390, %3376
  %3395 = add nuw i64 %3372, 32
  %3396 = icmp eq i64 %3395, %3369
  br i1 %3396, label %3397, label %3371, !llvm.loop !690

3397:                                             ; preds = %3371
  %3398 = mul <8 x i32> %3392, %3391
  %3399 = mul <8 x i32> %3393, %3398
  %3400 = mul <8 x i32> %3394, %3399
  %3401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3400)
  %3402 = icmp eq i64 %3365, %3369
  br i1 %3402, label %3415, label %3403

3403:                                             ; preds = %3356, %3397
  %3404 = phi i64 [ %3359, %3356 ], [ %3370, %3397 ]
  %3405 = phi i32 [ 1, %3356 ], [ %3401, %3397 ]
  br label %3406

3406:                                             ; preds = %3403, %3406
  %3407 = phi i64 [ %3412, %3406 ], [ %3404, %3403 ]
  %3408 = phi i32 [ %3411, %3406 ], [ %3405, %3403 ]
  %3409 = getelementptr inbounds i32, ptr %11, i64 %3407
  %3410 = load i32, ptr %3409, align 4, !tbaa !6
  %3411 = mul nsw i32 %3410, %3408
  %3412 = add nsw i64 %3407, -1
  %3413 = trunc i64 %3407 to i32
  %3414 = icmp sgt i32 %3413, 0
  br i1 %3414, label %3406, label %3415, !llvm.loop !691

3415:                                             ; preds = %3406, %3397
  %3416 = phi i32 [ %3401, %3397 ], [ %3411, %3406 ]
  %3417 = and i64 %3366, 4294967295
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3417
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = mul nsw i32 %3419, %3416
  %3421 = add nsw i32 %3420, %3360
  %3422 = icmp sgt i64 %3358, 2
  %3423 = add nsw i64 %3359, -1
  %3424 = add i32 %3357, 1
  br i1 %3422, label %3356, label %3425, !llvm.loop !692

3425:                                             ; preds = %3415, %3352
  %3426 = phi i32 [ %3355, %3352 ], [ %3421, %3415 ]
  %3427 = icmp slt i32 %3426, %5
  br i1 %3427, label %3430, label %3428

3428:                                             ; preds = %3425
  %3429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3430:                                             ; preds = %3425
  %3431 = sext i32 %3426 to i64
  %3432 = getelementptr inbounds i32, ptr %3174, i64 %3431
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = sitofp i64 %3353 to double
  %3435 = sitofp i32 %3433 to double
  %3436 = icmp slt i32 %3433, 0
  %3437 = fneg fast double %3435
  %3438 = select i1 %3436, double %3437, double %3435
  %3439 = fmul fast double %3435, %3435
  %3440 = fmul fast double %3439, %3438
  %3441 = fadd fast double %3440, %3434
  %3442 = fptosi double %3441 to i64
  store i64 %3442, ptr %3176, align 8, !tbaa !121
  %3443 = add nuw nsw i32 %3354, 1
  br i1 %3195, label %3444, label %3494

3444:                                             ; preds = %3430
  %3445 = load i32, ptr %4, align 4, !tbaa !6
  %3446 = load i32, ptr %12, align 4, !tbaa !6
  %3447 = add nsw i32 %3446, -1
  %3448 = icmp slt i32 %3445, %3447
  br i1 %3448, label %3471, label %3449

3449:                                             ; preds = %3444
  %3450 = icmp eq i32 %3445, %3447
  br i1 %3450, label %3451, label %3487

3451:                                             ; preds = %3449
  store i32 0, ptr %4, align 4, !tbaa !6
  %3452 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3452, ptr %6, align 4, !tbaa !6
  br i1 %3200, label %3494, label %3453

3453:                                             ; preds = %3451, %3481
  %3454 = phi i64 [ %3485, %3481 ], [ 1, %3451 ]
  %3455 = getelementptr inbounds i32, ptr %4, i64 %3454
  %3456 = load i32, ptr %3455, align 4, !tbaa !6
  %3457 = getelementptr inbounds i32, ptr %12, i64 %3454
  %3458 = load i32, ptr %3457, align 4, !tbaa !6
  %3459 = add nsw i32 %3458, -1
  %3460 = icmp slt i32 %3456, %3459
  br i1 %3460, label %3461, label %3479

3461:                                             ; preds = %3453
  br i1 %3448, label %3471, label %3462

3462:                                             ; preds = %3461
  %3463 = shl i64 %3454, 32
  %3464 = add i64 %3463, -4294967296
  %3465 = ashr exact i64 %3464, 32
  %3466 = getelementptr inbounds i32, ptr %7, i64 %3465
  %3467 = load i32, ptr %3466, align 4, !tbaa !6
  %3468 = getelementptr inbounds i32, ptr %6, i64 %3454
  %3469 = load i32, ptr %3468, align 4, !tbaa !6
  %3470 = add nsw i32 %3469, %3467
  store i32 %3470, ptr %3468, align 4, !tbaa !6
  br label %3489

3471:                                             ; preds = %3444, %3461
  %3472 = phi i32 [ %3456, %3461 ], [ %3445, %3444 ]
  %3473 = phi ptr [ %3455, %3461 ], [ %4, %3444 ]
  %3474 = phi i64 [ %3454, %3461 ], [ 0, %3444 ]
  %3475 = add nsw i32 %3472, 1
  store i32 %3475, ptr %3473, align 4, !tbaa !6
  %3476 = getelementptr inbounds i32, ptr %7, i64 %3474
  %3477 = load i32, ptr %3476, align 4, !tbaa !6
  %3478 = getelementptr inbounds i32, ptr %6, i64 %3474
  br label %3489

3479:                                             ; preds = %3453
  %3480 = icmp eq i32 %3456, %3459
  br i1 %3480, label %3481, label %3487

3481:                                             ; preds = %3479
  store i32 0, ptr %3455, align 4, !tbaa !6
  %3482 = getelementptr inbounds i32, ptr %8, i64 %3454
  %3483 = load i32, ptr %3482, align 4, !tbaa !6
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3454
  store i32 %3483, ptr %3484, align 4, !tbaa !6
  %3485 = add nuw nsw i64 %3454, 1
  %3486 = icmp eq i64 %3485, %3198
  br i1 %3486, label %3494, label %3453, !llvm.loop !693

3487:                                             ; preds = %3449, %3479
  %3488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3489:                                             ; preds = %3462, %3471
  %3490 = phi ptr [ %3478, %3471 ], [ %3455, %3462 ]
  %3491 = phi i32 [ %3477, %3471 ], [ 1, %3462 ]
  %3492 = load i32, ptr %3490, align 4, !tbaa !6
  %3493 = add nsw i32 %3492, %3491
  store i32 %3493, ptr %3490, align 4, !tbaa !6
  br label %3494

3494:                                             ; preds = %3481, %3489, %3451, %3430
  %3495 = icmp eq i32 %3443, %5
  br i1 %3495, label %5686, label %3352, !llvm.loop !694

3496:                                             ; preds = %3186
  %3497 = getelementptr inbounds i32, ptr %3, i64 %19
  %3498 = load i32, ptr %3497, align 4, !tbaa !6
  %3499 = icmp eq i32 %3498, 0
  %3500 = icmp sgt i32 %5, 0
  br i1 %3499, label %3510, label %3501

3501:                                             ; preds = %3496
  br i1 %3500, label %3502, label %5686

3502:                                             ; preds = %3501
  %3503 = icmp sgt i32 %13, 1
  %3504 = icmp sgt i32 %13, 0
  %3505 = add i32 %13, -2
  %3506 = zext i32 %3505 to i64
  %3507 = zext i32 %13 to i64
  %3508 = add nuw i32 %5, 1
  %3509 = icmp eq i32 %13, 1
  br label %3656

3510:                                             ; preds = %3496
  br i1 %3500, label %3511, label %5686

3511:                                             ; preds = %3510
  %3512 = icmp sgt i32 %13, 1
  %3513 = icmp sgt i32 %13, 0
  %3514 = add i32 %13, -2
  %3515 = zext i32 %3514 to i64
  %3516 = zext i32 %13 to i64
  %3517 = add nuw i32 %5, 1
  %3518 = icmp eq i32 %13, 1
  br label %3519

3519:                                             ; preds = %3511, %3654
  %3520 = phi i64 [ 0, %3511 ], [ %3604, %3654 ]
  %3521 = phi i32 [ 0, %3511 ], [ %3606, %3654 ]
  %3522 = phi double [ 0.000000e+00, %3511 ], [ %3605, %3654 ]
  %3523 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3512, label %3524, label %3593

3524:                                             ; preds = %3519, %3583
  %3525 = phi i32 [ %3592, %3583 ], [ 0, %3519 ]
  %3526 = phi i64 [ %3534, %3583 ], [ %3516, %3519 ]
  %3527 = phi i64 [ %3591, %3583 ], [ %3515, %3519 ]
  %3528 = phi i32 [ %3589, %3583 ], [ %3523, %3519 ]
  %3529 = sub i32 %3514, %3525
  %3530 = tail call i32 @llvm.smin.i32(i32 %3529, i32 0)
  %3531 = sub i32 %3529, %3530
  %3532 = zext i32 %3531 to i64
  %3533 = add nuw nsw i64 %3532, 1
  %3534 = add nsw i64 %3526, -1
  %3535 = icmp ult i32 %3531, 31
  br i1 %3535, label %3571, label %3536

3536:                                             ; preds = %3524
  %3537 = and i64 %3533, 8589934560
  %3538 = sub i64 %3527, %3537
  br label %3539

3539:                                             ; preds = %3539, %3536
  %3540 = phi i64 [ 0, %3536 ], [ %3563, %3539 ]
  %3541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3559, %3539 ]
  %3542 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3560, %3539 ]
  %3543 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3561, %3539 ]
  %3544 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3536 ], [ %3562, %3539 ]
  %3545 = sub i64 %3527, %3540
  %3546 = getelementptr inbounds i32, ptr %9, i64 %3545
  %3547 = getelementptr inbounds i32, ptr %3546, i64 -7
  %3548 = load <8 x i32>, ptr %3547, align 4, !tbaa !6
  %3549 = shufflevector <8 x i32> %3548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3550 = getelementptr inbounds i32, ptr %3546, i64 -15
  %3551 = load <8 x i32>, ptr %3550, align 4, !tbaa !6
  %3552 = shufflevector <8 x i32> %3551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3553 = getelementptr inbounds i32, ptr %3546, i64 -23
  %3554 = load <8 x i32>, ptr %3553, align 4, !tbaa !6
  %3555 = shufflevector <8 x i32> %3554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3556 = getelementptr inbounds i32, ptr %3546, i64 -31
  %3557 = load <8 x i32>, ptr %3556, align 4, !tbaa !6
  %3558 = shufflevector <8 x i32> %3557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3559 = mul <8 x i32> %3549, %3541
  %3560 = mul <8 x i32> %3552, %3542
  %3561 = mul <8 x i32> %3555, %3543
  %3562 = mul <8 x i32> %3558, %3544
  %3563 = add nuw i64 %3540, 32
  %3564 = icmp eq i64 %3563, %3537
  br i1 %3564, label %3565, label %3539, !llvm.loop !695

3565:                                             ; preds = %3539
  %3566 = mul <8 x i32> %3560, %3559
  %3567 = mul <8 x i32> %3561, %3566
  %3568 = mul <8 x i32> %3562, %3567
  %3569 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3568)
  %3570 = icmp eq i64 %3533, %3537
  br i1 %3570, label %3583, label %3571

3571:                                             ; preds = %3524, %3565
  %3572 = phi i64 [ %3527, %3524 ], [ %3538, %3565 ]
  %3573 = phi i32 [ 1, %3524 ], [ %3569, %3565 ]
  br label %3574

3574:                                             ; preds = %3571, %3574
  %3575 = phi i64 [ %3580, %3574 ], [ %3572, %3571 ]
  %3576 = phi i32 [ %3579, %3574 ], [ %3573, %3571 ]
  %3577 = getelementptr inbounds i32, ptr %9, i64 %3575
  %3578 = load i32, ptr %3577, align 4, !tbaa !6
  %3579 = mul nsw i32 %3578, %3576
  %3580 = add nsw i64 %3575, -1
  %3581 = trunc i64 %3575 to i32
  %3582 = icmp sgt i32 %3581, 0
  br i1 %3582, label %3574, label %3583, !llvm.loop !696

3583:                                             ; preds = %3574, %3565
  %3584 = phi i32 [ %3569, %3565 ], [ %3579, %3574 ]
  %3585 = and i64 %3534, 4294967295
  %3586 = getelementptr inbounds i32, ptr %6, i64 %3585
  %3587 = load i32, ptr %3586, align 4, !tbaa !6
  %3588 = mul nsw i32 %3587, %3584
  %3589 = add nsw i32 %3588, %3528
  %3590 = icmp sgt i64 %3526, 2
  %3591 = add nsw i64 %3527, -1
  %3592 = add i32 %3525, 1
  br i1 %3590, label %3524, label %3593, !llvm.loop !697

3593:                                             ; preds = %3583, %3519
  %3594 = phi i32 [ %3523, %3519 ], [ %3589, %3583 ]
  %3595 = sext i32 %3594 to i64
  %3596 = getelementptr inbounds i32, ptr %3174, i64 %3595
  %3597 = load i32, ptr %3596, align 4, !tbaa !6
  %3598 = sext i32 %3597 to i64
  %3599 = icmp slt i32 %3597, 0
  %3600 = mul nsw i64 %3598, %3598
  %3601 = sub nsw i64 0, %3600
  %3602 = select i1 %3599, i64 %3601, i64 %3600
  %3603 = mul i64 %3602, %3598
  %3604 = add nsw i64 %3603, %3520
  %3605 = fadd fast double %3522, 1.000000e+00
  %3606 = add nuw nsw i32 %3521, 1
  br i1 %3513, label %3607, label %3654

3607:                                             ; preds = %3593
  %3608 = load i32, ptr %4, align 4, !tbaa !6
  %3609 = load i32, ptr %12, align 4, !tbaa !6
  %3610 = add nsw i32 %3609, -1
  %3611 = icmp slt i32 %3608, %3610
  br i1 %3611, label %3631, label %3612

3612:                                             ; preds = %3607
  %3613 = icmp eq i32 %3608, %3610
  br i1 %3613, label %3614, label %3647

3614:                                             ; preds = %3612
  store i32 0, ptr %4, align 4, !tbaa !6
  %3615 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3615, ptr %6, align 4, !tbaa !6
  br i1 %3518, label %3654, label %3616

3616:                                             ; preds = %3614, %3641
  %3617 = phi i64 [ %3645, %3641 ], [ 1, %3614 ]
  %3618 = getelementptr inbounds i32, ptr %4, i64 %3617
  %3619 = load i32, ptr %3618, align 4, !tbaa !6
  %3620 = getelementptr inbounds i32, ptr %12, i64 %3617
  %3621 = load i32, ptr %3620, align 4, !tbaa !6
  %3622 = add nsw i32 %3621, -1
  %3623 = icmp slt i32 %3619, %3622
  br i1 %3623, label %3624, label %3639

3624:                                             ; preds = %3616
  br i1 %3611, label %3631, label %3625

3625:                                             ; preds = %3624
  %3626 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3627 = load i32, ptr %3626, align 4, !tbaa !6
  %3628 = getelementptr inbounds i32, ptr %6, i64 %3617
  %3629 = load i32, ptr %3628, align 4, !tbaa !6
  %3630 = add nsw i32 %3629, %3627
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  br label %3649

3631:                                             ; preds = %3607, %3624
  %3632 = phi i32 [ %3619, %3624 ], [ %3608, %3607 ]
  %3633 = phi ptr [ %3618, %3624 ], [ %4, %3607 ]
  %3634 = phi i64 [ %3617, %3624 ], [ 0, %3607 ]
  %3635 = add nsw i32 %3632, 1
  store i32 %3635, ptr %3633, align 4, !tbaa !6
  %3636 = getelementptr inbounds i32, ptr %7, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !6
  %3638 = getelementptr inbounds i32, ptr %6, i64 %3634
  br label %3649

3639:                                             ; preds = %3616
  %3640 = icmp eq i32 %3619, %3622
  br i1 %3640, label %3641, label %3647

3641:                                             ; preds = %3639
  store i32 0, ptr %3618, align 4, !tbaa !6
  %3642 = getelementptr inbounds i32, ptr %8, i64 %3617
  %3643 = load i32, ptr %3642, align 4, !tbaa !6
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3617
  store i32 %3643, ptr %3644, align 4, !tbaa !6
  %3645 = add nuw nsw i64 %3617, 1
  %3646 = icmp eq i64 %3645, %3516
  br i1 %3646, label %3654, label %3616, !llvm.loop !698

3647:                                             ; preds = %3612, %3639
  store i64 %3604, ptr %3176, align 8, !tbaa !121
  %3648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3649:                                             ; preds = %3625, %3631
  %3650 = phi ptr [ %3638, %3631 ], [ %3618, %3625 ]
  %3651 = phi i32 [ %3637, %3631 ], [ 1, %3625 ]
  %3652 = load i32, ptr %3650, align 4, !tbaa !6
  %3653 = add nsw i32 %3652, %3651
  store i32 %3653, ptr %3650, align 4, !tbaa !6
  br label %3654

3654:                                             ; preds = %3641, %3649, %3614, %3593
  %3655 = icmp eq i32 %3606, %5
  br i1 %3655, label %5681, label %3519, !llvm.loop !699

3656:                                             ; preds = %3502, %3796
  %3657 = phi i64 [ 0, %3502 ], [ %3744, %3796 ]
  %3658 = phi i32 [ 0, %3502 ], [ %3745, %3796 ]
  %3659 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3503, label %3660, label %3729

3660:                                             ; preds = %3656, %3719
  %3661 = phi i32 [ %3728, %3719 ], [ 0, %3656 ]
  %3662 = phi i64 [ %3670, %3719 ], [ %3507, %3656 ]
  %3663 = phi i64 [ %3727, %3719 ], [ %3506, %3656 ]
  %3664 = phi i32 [ %3725, %3719 ], [ %3659, %3656 ]
  %3665 = sub i32 %3505, %3661
  %3666 = tail call i32 @llvm.smin.i32(i32 %3665, i32 0)
  %3667 = sub i32 %3665, %3666
  %3668 = zext i32 %3667 to i64
  %3669 = add nuw nsw i64 %3668, 1
  %3670 = add nsw i64 %3662, -1
  %3671 = icmp ult i32 %3667, 31
  br i1 %3671, label %3707, label %3672

3672:                                             ; preds = %3660
  %3673 = and i64 %3669, 8589934560
  %3674 = sub i64 %3663, %3673
  br label %3675

3675:                                             ; preds = %3675, %3672
  %3676 = phi i64 [ 0, %3672 ], [ %3699, %3675 ]
  %3677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3695, %3675 ]
  %3678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3696, %3675 ]
  %3679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3697, %3675 ]
  %3680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3672 ], [ %3698, %3675 ]
  %3681 = sub i64 %3663, %3676
  %3682 = getelementptr inbounds i32, ptr %11, i64 %3681
  %3683 = getelementptr inbounds i32, ptr %3682, i64 -7
  %3684 = load <8 x i32>, ptr %3683, align 4, !tbaa !6
  %3685 = shufflevector <8 x i32> %3684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3686 = getelementptr inbounds i32, ptr %3682, i64 -15
  %3687 = load <8 x i32>, ptr %3686, align 4, !tbaa !6
  %3688 = shufflevector <8 x i32> %3687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3689 = getelementptr inbounds i32, ptr %3682, i64 -23
  %3690 = load <8 x i32>, ptr %3689, align 4, !tbaa !6
  %3691 = shufflevector <8 x i32> %3690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3692 = getelementptr inbounds i32, ptr %3682, i64 -31
  %3693 = load <8 x i32>, ptr %3692, align 4, !tbaa !6
  %3694 = shufflevector <8 x i32> %3693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3695 = mul <8 x i32> %3685, %3677
  %3696 = mul <8 x i32> %3688, %3678
  %3697 = mul <8 x i32> %3691, %3679
  %3698 = mul <8 x i32> %3694, %3680
  %3699 = add nuw i64 %3676, 32
  %3700 = icmp eq i64 %3699, %3673
  br i1 %3700, label %3701, label %3675, !llvm.loop !700

3701:                                             ; preds = %3675
  %3702 = mul <8 x i32> %3696, %3695
  %3703 = mul <8 x i32> %3697, %3702
  %3704 = mul <8 x i32> %3698, %3703
  %3705 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3704)
  %3706 = icmp eq i64 %3669, %3673
  br i1 %3706, label %3719, label %3707

3707:                                             ; preds = %3660, %3701
  %3708 = phi i64 [ %3663, %3660 ], [ %3674, %3701 ]
  %3709 = phi i32 [ 1, %3660 ], [ %3705, %3701 ]
  br label %3710

3710:                                             ; preds = %3707, %3710
  %3711 = phi i64 [ %3716, %3710 ], [ %3708, %3707 ]
  %3712 = phi i32 [ %3715, %3710 ], [ %3709, %3707 ]
  %3713 = getelementptr inbounds i32, ptr %11, i64 %3711
  %3714 = load i32, ptr %3713, align 4, !tbaa !6
  %3715 = mul nsw i32 %3714, %3712
  %3716 = add nsw i64 %3711, -1
  %3717 = trunc i64 %3711 to i32
  %3718 = icmp sgt i32 %3717, 0
  br i1 %3718, label %3710, label %3719, !llvm.loop !701

3719:                                             ; preds = %3710, %3701
  %3720 = phi i32 [ %3705, %3701 ], [ %3715, %3710 ]
  %3721 = and i64 %3670, 4294967295
  %3722 = getelementptr inbounds i32, ptr %6, i64 %3721
  %3723 = load i32, ptr %3722, align 4, !tbaa !6
  %3724 = mul nsw i32 %3723, %3720
  %3725 = add nsw i32 %3724, %3664
  %3726 = icmp sgt i64 %3662, 2
  %3727 = add nsw i64 %3663, -1
  %3728 = add i32 %3661, 1
  br i1 %3726, label %3660, label %3729, !llvm.loop !702

3729:                                             ; preds = %3719, %3656
  %3730 = phi i32 [ %3659, %3656 ], [ %3725, %3719 ]
  %3731 = icmp slt i32 %3730, %5
  br i1 %3731, label %3734, label %3732

3732:                                             ; preds = %3729
  %3733 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

3734:                                             ; preds = %3729
  %3735 = sext i32 %3730 to i64
  %3736 = getelementptr inbounds i32, ptr %3174, i64 %3735
  %3737 = load i32, ptr %3736, align 4, !tbaa !6
  %3738 = sext i32 %3737 to i64
  %3739 = icmp slt i32 %3737, 0
  %3740 = mul nsw i64 %3738, %3738
  %3741 = sub nsw i64 0, %3740
  %3742 = select i1 %3739, i64 %3741, i64 %3740
  %3743 = mul i64 %3742, %3738
  %3744 = add nsw i64 %3743, %3657
  store i64 %3744, ptr %3176, align 8, !tbaa !121
  %3745 = add nuw nsw i32 %3658, 1
  br i1 %3504, label %3746, label %3796

3746:                                             ; preds = %3734
  %3747 = load i32, ptr %4, align 4, !tbaa !6
  %3748 = load i32, ptr %12, align 4, !tbaa !6
  %3749 = add nsw i32 %3748, -1
  %3750 = icmp slt i32 %3747, %3749
  br i1 %3750, label %3773, label %3751

3751:                                             ; preds = %3746
  %3752 = icmp eq i32 %3747, %3749
  br i1 %3752, label %3753, label %3789

3753:                                             ; preds = %3751
  store i32 0, ptr %4, align 4, !tbaa !6
  %3754 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3754, ptr %6, align 4, !tbaa !6
  br i1 %3509, label %3796, label %3755

3755:                                             ; preds = %3753, %3783
  %3756 = phi i64 [ %3787, %3783 ], [ 1, %3753 ]
  %3757 = getelementptr inbounds i32, ptr %4, i64 %3756
  %3758 = load i32, ptr %3757, align 4, !tbaa !6
  %3759 = getelementptr inbounds i32, ptr %12, i64 %3756
  %3760 = load i32, ptr %3759, align 4, !tbaa !6
  %3761 = add nsw i32 %3760, -1
  %3762 = icmp slt i32 %3758, %3761
  br i1 %3762, label %3763, label %3781

3763:                                             ; preds = %3755
  br i1 %3750, label %3773, label %3764

3764:                                             ; preds = %3763
  %3765 = shl i64 %3756, 32
  %3766 = add i64 %3765, -4294967296
  %3767 = ashr exact i64 %3766, 32
  %3768 = getelementptr inbounds i32, ptr %7, i64 %3767
  %3769 = load i32, ptr %3768, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %6, i64 %3756
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = add nsw i32 %3771, %3769
  store i32 %3772, ptr %3770, align 4, !tbaa !6
  br label %3791

3773:                                             ; preds = %3746, %3763
  %3774 = phi i32 [ %3758, %3763 ], [ %3747, %3746 ]
  %3775 = phi ptr [ %3757, %3763 ], [ %4, %3746 ]
  %3776 = phi i64 [ %3756, %3763 ], [ 0, %3746 ]
  %3777 = add nsw i32 %3774, 1
  store i32 %3777, ptr %3775, align 4, !tbaa !6
  %3778 = getelementptr inbounds i32, ptr %7, i64 %3776
  %3779 = load i32, ptr %3778, align 4, !tbaa !6
  %3780 = getelementptr inbounds i32, ptr %6, i64 %3776
  br label %3791

3781:                                             ; preds = %3755
  %3782 = icmp eq i32 %3758, %3761
  br i1 %3782, label %3783, label %3789

3783:                                             ; preds = %3781
  store i32 0, ptr %3757, align 4, !tbaa !6
  %3784 = getelementptr inbounds i32, ptr %8, i64 %3756
  %3785 = load i32, ptr %3784, align 4, !tbaa !6
  %3786 = getelementptr inbounds i32, ptr %6, i64 %3756
  store i32 %3785, ptr %3786, align 4, !tbaa !6
  %3787 = add nuw nsw i64 %3756, 1
  %3788 = icmp eq i64 %3787, %3507
  br i1 %3788, label %3796, label %3755, !llvm.loop !703

3789:                                             ; preds = %3751, %3781
  %3790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3791:                                             ; preds = %3764, %3773
  %3792 = phi ptr [ %3780, %3773 ], [ %3757, %3764 ]
  %3793 = phi i32 [ %3779, %3773 ], [ 1, %3764 ]
  %3794 = load i32, ptr %3792, align 4, !tbaa !6
  %3795 = add nsw i32 %3794, %3793
  store i32 %3795, ptr %3792, align 4, !tbaa !6
  br label %3796

3796:                                             ; preds = %3783, %3791, %3753, %3734
  %3797 = icmp eq i32 %3745, %5
  br i1 %3797, label %5686, label %3656, !llvm.loop !704

3798:                                             ; preds = %3186
  %3799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1188, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

3800:                                             ; preds = %18
  %3801 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3802 = load ptr, ptr %3801, align 8, !tbaa !10
  %3803 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3804 = load ptr, ptr %3803, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3804, align 8, !tbaa !19
  %3805 = icmp eq i32 %13, 0
  br i1 %3805, label %3806, label %3814

3806:                                             ; preds = %3800
  %3807 = load i32, ptr %3802, align 4, !tbaa !6
  %3808 = sitofp i32 %3807 to double
  %3809 = icmp slt i32 %3807, 0
  %3810 = fneg fast double %3808
  %3811 = select i1 %3809, double %3810, double %3808
  %3812 = fmul fast double %3808, %3808
  %3813 = fmul fast double %3812, %3811
  store double %3813, ptr %3804, align 8, !tbaa !19
  br label %5686

3814:                                             ; preds = %3800
  switch i32 %1, label %4422 [
    i32 1, label %3815
    i32 0, label %4120
  ]

3815:                                             ; preds = %3814
  %3816 = getelementptr inbounds i32, ptr %3, i64 %19
  %3817 = load i32, ptr %3816, align 4, !tbaa !6
  %3818 = icmp eq i32 %3817, 0
  %3819 = icmp sgt i32 %5, 0
  br i1 %3818, label %3829, label %3820

3820:                                             ; preds = %3815
  br i1 %3819, label %3821, label %5686

3821:                                             ; preds = %3820
  %3822 = icmp sgt i32 %13, 1
  %3823 = icmp sgt i32 %13, 0
  %3824 = add i32 %13, -2
  %3825 = zext i32 %3824 to i64
  %3826 = zext i32 %13 to i64
  %3827 = add nuw i32 %5, 1
  %3828 = icmp eq i32 %13, 1
  br label %3978

3829:                                             ; preds = %3815
  br i1 %3819, label %3830, label %5686

3830:                                             ; preds = %3829
  %3831 = icmp sgt i32 %13, 1
  %3832 = icmp sgt i32 %13, 0
  %3833 = add i32 %13, -2
  %3834 = zext i32 %3833 to i64
  %3835 = zext i32 %13 to i64
  %3836 = add nuw i32 %5, 1
  %3837 = icmp eq i32 %13, 1
  br label %3838

3838:                                             ; preds = %3830, %3976
  %3839 = phi double [ 0.000000e+00, %3830 ], [ %3926, %3976 ]
  %3840 = phi i32 [ 0, %3830 ], [ %3928, %3976 ]
  %3841 = phi double [ 0.000000e+00, %3830 ], [ %3927, %3976 ]
  %3842 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3831, label %3843, label %3912

3843:                                             ; preds = %3838, %3902
  %3844 = phi i32 [ %3911, %3902 ], [ 0, %3838 ]
  %3845 = phi i64 [ %3853, %3902 ], [ %3835, %3838 ]
  %3846 = phi i64 [ %3910, %3902 ], [ %3834, %3838 ]
  %3847 = phi i32 [ %3908, %3902 ], [ %3842, %3838 ]
  %3848 = sub i32 %3833, %3844
  %3849 = tail call i32 @llvm.smin.i32(i32 %3848, i32 0)
  %3850 = sub i32 %3848, %3849
  %3851 = zext i32 %3850 to i64
  %3852 = add nuw nsw i64 %3851, 1
  %3853 = add nsw i64 %3845, -1
  %3854 = icmp ult i32 %3850, 31
  br i1 %3854, label %3890, label %3855

3855:                                             ; preds = %3843
  %3856 = and i64 %3852, 8589934560
  %3857 = sub i64 %3846, %3856
  br label %3858

3858:                                             ; preds = %3858, %3855
  %3859 = phi i64 [ 0, %3855 ], [ %3882, %3858 ]
  %3860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3878, %3858 ]
  %3861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3879, %3858 ]
  %3862 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3880, %3858 ]
  %3863 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3855 ], [ %3881, %3858 ]
  %3864 = sub i64 %3846, %3859
  %3865 = getelementptr inbounds i32, ptr %9, i64 %3864
  %3866 = getelementptr inbounds i32, ptr %3865, i64 -7
  %3867 = load <8 x i32>, ptr %3866, align 4, !tbaa !6
  %3868 = shufflevector <8 x i32> %3867, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3869 = getelementptr inbounds i32, ptr %3865, i64 -15
  %3870 = load <8 x i32>, ptr %3869, align 4, !tbaa !6
  %3871 = shufflevector <8 x i32> %3870, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3872 = getelementptr inbounds i32, ptr %3865, i64 -23
  %3873 = load <8 x i32>, ptr %3872, align 4, !tbaa !6
  %3874 = shufflevector <8 x i32> %3873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3875 = getelementptr inbounds i32, ptr %3865, i64 -31
  %3876 = load <8 x i32>, ptr %3875, align 4, !tbaa !6
  %3877 = shufflevector <8 x i32> %3876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3878 = mul <8 x i32> %3868, %3860
  %3879 = mul <8 x i32> %3871, %3861
  %3880 = mul <8 x i32> %3874, %3862
  %3881 = mul <8 x i32> %3877, %3863
  %3882 = add nuw i64 %3859, 32
  %3883 = icmp eq i64 %3882, %3856
  br i1 %3883, label %3884, label %3858, !llvm.loop !705

3884:                                             ; preds = %3858
  %3885 = mul <8 x i32> %3879, %3878
  %3886 = mul <8 x i32> %3880, %3885
  %3887 = mul <8 x i32> %3881, %3886
  %3888 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3887)
  %3889 = icmp eq i64 %3852, %3856
  br i1 %3889, label %3902, label %3890

3890:                                             ; preds = %3843, %3884
  %3891 = phi i64 [ %3846, %3843 ], [ %3857, %3884 ]
  %3892 = phi i32 [ 1, %3843 ], [ %3888, %3884 ]
  br label %3893

3893:                                             ; preds = %3890, %3893
  %3894 = phi i64 [ %3899, %3893 ], [ %3891, %3890 ]
  %3895 = phi i32 [ %3898, %3893 ], [ %3892, %3890 ]
  %3896 = getelementptr inbounds i32, ptr %9, i64 %3894
  %3897 = load i32, ptr %3896, align 4, !tbaa !6
  %3898 = mul nsw i32 %3897, %3895
  %3899 = add nsw i64 %3894, -1
  %3900 = trunc i64 %3894 to i32
  %3901 = icmp sgt i32 %3900, 0
  br i1 %3901, label %3893, label %3902, !llvm.loop !706

3902:                                             ; preds = %3893, %3884
  %3903 = phi i32 [ %3888, %3884 ], [ %3898, %3893 ]
  %3904 = and i64 %3853, 4294967295
  %3905 = getelementptr inbounds i32, ptr %6, i64 %3904
  %3906 = load i32, ptr %3905, align 4, !tbaa !6
  %3907 = mul nsw i32 %3906, %3903
  %3908 = add nsw i32 %3907, %3847
  %3909 = icmp sgt i64 %3845, 2
  %3910 = add nsw i64 %3846, -1
  %3911 = add i32 %3844, 1
  br i1 %3909, label %3843, label %3912, !llvm.loop !707

3912:                                             ; preds = %3902, %3838
  %3913 = phi i32 [ %3842, %3838 ], [ %3908, %3902 ]
  %3914 = sext i32 %3913 to i64
  %3915 = getelementptr inbounds double, ptr %2, i64 %3914
  %3916 = load double, ptr %3915, align 8, !tbaa !19
  %3917 = getelementptr inbounds i32, ptr %3802, i64 %3914
  %3918 = load i32, ptr %3917, align 4, !tbaa !6
  %3919 = sitofp i32 %3918 to double
  %3920 = fmul fast double %3916, %3919
  %3921 = fcmp fast olt double %3920, 0.000000e+00
  %3922 = fneg fast double %3920
  %3923 = select nnan ninf i1 %3921, double %3922, double %3920
  %3924 = fmul fast double %3920, %3920
  %3925 = fmul fast double %3924, %3923
  %3926 = fadd fast double %3925, %3839
  store double %3926, ptr %3804, align 8, !tbaa !19
  %3927 = fadd fast double %3916, %3841
  %3928 = add nuw nsw i32 %3840, 1
  br i1 %3832, label %3929, label %3976

3929:                                             ; preds = %3912
  %3930 = load i32, ptr %4, align 4, !tbaa !6
  %3931 = load i32, ptr %12, align 4, !tbaa !6
  %3932 = add nsw i32 %3931, -1
  %3933 = icmp slt i32 %3930, %3932
  br i1 %3933, label %3953, label %3934

3934:                                             ; preds = %3929
  %3935 = icmp eq i32 %3930, %3932
  br i1 %3935, label %3936, label %3969

3936:                                             ; preds = %3934
  store i32 0, ptr %4, align 4, !tbaa !6
  %3937 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3937, ptr %6, align 4, !tbaa !6
  br i1 %3837, label %3976, label %3938

3938:                                             ; preds = %3936, %3963
  %3939 = phi i64 [ %3967, %3963 ], [ 1, %3936 ]
  %3940 = getelementptr inbounds i32, ptr %4, i64 %3939
  %3941 = load i32, ptr %3940, align 4, !tbaa !6
  %3942 = getelementptr inbounds i32, ptr %12, i64 %3939
  %3943 = load i32, ptr %3942, align 4, !tbaa !6
  %3944 = add nsw i32 %3943, -1
  %3945 = icmp slt i32 %3941, %3944
  br i1 %3945, label %3946, label %3961

3946:                                             ; preds = %3938
  br i1 %3933, label %3953, label %3947

3947:                                             ; preds = %3946
  %3948 = getelementptr inbounds i32, ptr %7, i64 %3939
  %3949 = load i32, ptr %3948, align 4, !tbaa !6
  %3950 = getelementptr inbounds i32, ptr %6, i64 %3939
  %3951 = load i32, ptr %3950, align 4, !tbaa !6
  %3952 = add nsw i32 %3951, %3949
  store i32 %3952, ptr %3950, align 4, !tbaa !6
  br label %3971

3953:                                             ; preds = %3929, %3946
  %3954 = phi i32 [ %3941, %3946 ], [ %3930, %3929 ]
  %3955 = phi ptr [ %3940, %3946 ], [ %4, %3929 ]
  %3956 = phi i64 [ %3939, %3946 ], [ 0, %3929 ]
  %3957 = add nsw i32 %3954, 1
  store i32 %3957, ptr %3955, align 4, !tbaa !6
  %3958 = getelementptr inbounds i32, ptr %7, i64 %3956
  %3959 = load i32, ptr %3958, align 4, !tbaa !6
  %3960 = getelementptr inbounds i32, ptr %6, i64 %3956
  br label %3971

3961:                                             ; preds = %3938
  %3962 = icmp eq i32 %3941, %3944
  br i1 %3962, label %3963, label %3969

3963:                                             ; preds = %3961
  store i32 0, ptr %3940, align 4, !tbaa !6
  %3964 = getelementptr inbounds i32, ptr %8, i64 %3939
  %3965 = load i32, ptr %3964, align 4, !tbaa !6
  %3966 = getelementptr inbounds i32, ptr %6, i64 %3939
  store i32 %3965, ptr %3966, align 4, !tbaa !6
  %3967 = add nuw nsw i64 %3939, 1
  %3968 = icmp eq i64 %3967, %3835
  br i1 %3968, label %3976, label %3938, !llvm.loop !708

3969:                                             ; preds = %3934, %3961
  %3970 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

3971:                                             ; preds = %3947, %3953
  %3972 = phi ptr [ %3960, %3953 ], [ %3940, %3947 ]
  %3973 = phi i32 [ %3959, %3953 ], [ 1, %3947 ]
  %3974 = load i32, ptr %3972, align 4, !tbaa !6
  %3975 = add nsw i32 %3974, %3973
  store i32 %3975, ptr %3972, align 4, !tbaa !6
  br label %3976

3976:                                             ; preds = %3963, %3971, %3936, %3912
  %3977 = icmp eq i32 %3928, %5
  br i1 %3977, label %5686, label %3838, !llvm.loop !709

3978:                                             ; preds = %3821, %4118
  %3979 = phi double [ 0.000000e+00, %3821 ], [ %4066, %4118 ]
  %3980 = phi i32 [ 0, %3821 ], [ %4067, %4118 ]
  %3981 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3822, label %3982, label %4051

3982:                                             ; preds = %3978, %4041
  %3983 = phi i32 [ %4050, %4041 ], [ 0, %3978 ]
  %3984 = phi i64 [ %3992, %4041 ], [ %3826, %3978 ]
  %3985 = phi i64 [ %4049, %4041 ], [ %3825, %3978 ]
  %3986 = phi i32 [ %4047, %4041 ], [ %3981, %3978 ]
  %3987 = sub i32 %3824, %3983
  %3988 = tail call i32 @llvm.smin.i32(i32 %3987, i32 0)
  %3989 = sub i32 %3987, %3988
  %3990 = zext i32 %3989 to i64
  %3991 = add nuw nsw i64 %3990, 1
  %3992 = add nsw i64 %3984, -1
  %3993 = icmp ult i32 %3989, 31
  br i1 %3993, label %4029, label %3994

3994:                                             ; preds = %3982
  %3995 = and i64 %3991, 8589934560
  %3996 = sub i64 %3985, %3995
  br label %3997

3997:                                             ; preds = %3997, %3994
  %3998 = phi i64 [ 0, %3994 ], [ %4021, %3997 ]
  %3999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4017, %3997 ]
  %4000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4018, %3997 ]
  %4001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4019, %3997 ]
  %4002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3994 ], [ %4020, %3997 ]
  %4003 = sub i64 %3985, %3998
  %4004 = getelementptr inbounds i32, ptr %11, i64 %4003
  %4005 = getelementptr inbounds i32, ptr %4004, i64 -7
  %4006 = load <8 x i32>, ptr %4005, align 4, !tbaa !6
  %4007 = shufflevector <8 x i32> %4006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4008 = getelementptr inbounds i32, ptr %4004, i64 -15
  %4009 = load <8 x i32>, ptr %4008, align 4, !tbaa !6
  %4010 = shufflevector <8 x i32> %4009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4011 = getelementptr inbounds i32, ptr %4004, i64 -23
  %4012 = load <8 x i32>, ptr %4011, align 4, !tbaa !6
  %4013 = shufflevector <8 x i32> %4012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4014 = getelementptr inbounds i32, ptr %4004, i64 -31
  %4015 = load <8 x i32>, ptr %4014, align 4, !tbaa !6
  %4016 = shufflevector <8 x i32> %4015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4017 = mul <8 x i32> %4007, %3999
  %4018 = mul <8 x i32> %4010, %4000
  %4019 = mul <8 x i32> %4013, %4001
  %4020 = mul <8 x i32> %4016, %4002
  %4021 = add nuw i64 %3998, 32
  %4022 = icmp eq i64 %4021, %3995
  br i1 %4022, label %4023, label %3997, !llvm.loop !710

4023:                                             ; preds = %3997
  %4024 = mul <8 x i32> %4018, %4017
  %4025 = mul <8 x i32> %4019, %4024
  %4026 = mul <8 x i32> %4020, %4025
  %4027 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4026)
  %4028 = icmp eq i64 %3991, %3995
  br i1 %4028, label %4041, label %4029

4029:                                             ; preds = %3982, %4023
  %4030 = phi i64 [ %3985, %3982 ], [ %3996, %4023 ]
  %4031 = phi i32 [ 1, %3982 ], [ %4027, %4023 ]
  br label %4032

4032:                                             ; preds = %4029, %4032
  %4033 = phi i64 [ %4038, %4032 ], [ %4030, %4029 ]
  %4034 = phi i32 [ %4037, %4032 ], [ %4031, %4029 ]
  %4035 = getelementptr inbounds i32, ptr %11, i64 %4033
  %4036 = load i32, ptr %4035, align 4, !tbaa !6
  %4037 = mul nsw i32 %4036, %4034
  %4038 = add nsw i64 %4033, -1
  %4039 = trunc i64 %4033 to i32
  %4040 = icmp sgt i32 %4039, 0
  br i1 %4040, label %4032, label %4041, !llvm.loop !711

4041:                                             ; preds = %4032, %4023
  %4042 = phi i32 [ %4027, %4023 ], [ %4037, %4032 ]
  %4043 = and i64 %3992, 4294967295
  %4044 = getelementptr inbounds i32, ptr %6, i64 %4043
  %4045 = load i32, ptr %4044, align 4, !tbaa !6
  %4046 = mul nsw i32 %4045, %4042
  %4047 = add nsw i32 %4046, %3986
  %4048 = icmp sgt i64 %3984, 2
  %4049 = add nsw i64 %3985, -1
  %4050 = add i32 %3983, 1
  br i1 %4048, label %3982, label %4051, !llvm.loop !712

4051:                                             ; preds = %4041, %3978
  %4052 = phi i32 [ %3981, %3978 ], [ %4047, %4041 ]
  %4053 = icmp slt i32 %4052, %5
  br i1 %4053, label %4056, label %4054

4054:                                             ; preds = %4051
  %4055 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4056:                                             ; preds = %4051
  %4057 = sext i32 %4052 to i64
  %4058 = getelementptr inbounds i32, ptr %3802, i64 %4057
  %4059 = load i32, ptr %4058, align 4, !tbaa !6
  %4060 = sitofp i32 %4059 to double
  %4061 = icmp slt i32 %4059, 0
  %4062 = fneg fast double %4060
  %4063 = select i1 %4061, double %4062, double %4060
  %4064 = fmul fast double %4060, %4060
  %4065 = fmul fast double %4064, %4063
  %4066 = fadd fast double %4065, %3979
  store double %4066, ptr %3804, align 8, !tbaa !19
  %4067 = add nuw nsw i32 %3980, 1
  br i1 %3823, label %4068, label %4118

4068:                                             ; preds = %4056
  %4069 = load i32, ptr %4, align 4, !tbaa !6
  %4070 = load i32, ptr %12, align 4, !tbaa !6
  %4071 = add nsw i32 %4070, -1
  %4072 = icmp slt i32 %4069, %4071
  br i1 %4072, label %4095, label %4073

4073:                                             ; preds = %4068
  %4074 = icmp eq i32 %4069, %4071
  br i1 %4074, label %4075, label %4111

4075:                                             ; preds = %4073
  store i32 0, ptr %4, align 4, !tbaa !6
  %4076 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4076, ptr %6, align 4, !tbaa !6
  br i1 %3828, label %4118, label %4077

4077:                                             ; preds = %4075, %4105
  %4078 = phi i64 [ %4109, %4105 ], [ 1, %4075 ]
  %4079 = getelementptr inbounds i32, ptr %4, i64 %4078
  %4080 = load i32, ptr %4079, align 4, !tbaa !6
  %4081 = getelementptr inbounds i32, ptr %12, i64 %4078
  %4082 = load i32, ptr %4081, align 4, !tbaa !6
  %4083 = add nsw i32 %4082, -1
  %4084 = icmp slt i32 %4080, %4083
  br i1 %4084, label %4085, label %4103

4085:                                             ; preds = %4077
  br i1 %4072, label %4095, label %4086

4086:                                             ; preds = %4085
  %4087 = shl i64 %4078, 32
  %4088 = add i64 %4087, -4294967296
  %4089 = ashr exact i64 %4088, 32
  %4090 = getelementptr inbounds i32, ptr %7, i64 %4089
  %4091 = load i32, ptr %4090, align 4, !tbaa !6
  %4092 = getelementptr inbounds i32, ptr %6, i64 %4078
  %4093 = load i32, ptr %4092, align 4, !tbaa !6
  %4094 = add nsw i32 %4093, %4091
  store i32 %4094, ptr %4092, align 4, !tbaa !6
  br label %4113

4095:                                             ; preds = %4068, %4085
  %4096 = phi i32 [ %4080, %4085 ], [ %4069, %4068 ]
  %4097 = phi ptr [ %4079, %4085 ], [ %4, %4068 ]
  %4098 = phi i64 [ %4078, %4085 ], [ 0, %4068 ]
  %4099 = add nsw i32 %4096, 1
  store i32 %4099, ptr %4097, align 4, !tbaa !6
  %4100 = getelementptr inbounds i32, ptr %7, i64 %4098
  %4101 = load i32, ptr %4100, align 4, !tbaa !6
  %4102 = getelementptr inbounds i32, ptr %6, i64 %4098
  br label %4113

4103:                                             ; preds = %4077
  %4104 = icmp eq i32 %4080, %4083
  br i1 %4104, label %4105, label %4111

4105:                                             ; preds = %4103
  store i32 0, ptr %4079, align 4, !tbaa !6
  %4106 = getelementptr inbounds i32, ptr %8, i64 %4078
  %4107 = load i32, ptr %4106, align 4, !tbaa !6
  %4108 = getelementptr inbounds i32, ptr %6, i64 %4078
  store i32 %4107, ptr %4108, align 4, !tbaa !6
  %4109 = add nuw nsw i64 %4078, 1
  %4110 = icmp eq i64 %4109, %3826
  br i1 %4110, label %4118, label %4077, !llvm.loop !713

4111:                                             ; preds = %4073, %4103
  %4112 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4113:                                             ; preds = %4086, %4095
  %4114 = phi ptr [ %4102, %4095 ], [ %4079, %4086 ]
  %4115 = phi i32 [ %4101, %4095 ], [ 1, %4086 ]
  %4116 = load i32, ptr %4114, align 4, !tbaa !6
  %4117 = add nsw i32 %4116, %4115
  store i32 %4117, ptr %4114, align 4, !tbaa !6
  br label %4118

4118:                                             ; preds = %4105, %4113, %4075, %4056
  %4119 = icmp eq i32 %4067, %5
  br i1 %4119, label %5686, label %3978, !llvm.loop !714

4120:                                             ; preds = %3814
  %4121 = getelementptr inbounds i32, ptr %3, i64 %19
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = icmp eq i32 %4122, 0
  %4124 = icmp sgt i32 %5, 0
  br i1 %4123, label %4134, label %4125

4125:                                             ; preds = %4120
  br i1 %4124, label %4126, label %5686

4126:                                             ; preds = %4125
  %4127 = icmp sgt i32 %13, 1
  %4128 = icmp sgt i32 %13, 0
  %4129 = add i32 %13, -2
  %4130 = zext i32 %4129 to i64
  %4131 = zext i32 %13 to i64
  %4132 = add nuw i32 %5, 1
  %4133 = icmp eq i32 %13, 1
  br label %4280

4134:                                             ; preds = %4120
  br i1 %4124, label %4135, label %5686

4135:                                             ; preds = %4134
  %4136 = icmp sgt i32 %13, 1
  %4137 = icmp sgt i32 %13, 0
  %4138 = add i32 %13, -2
  %4139 = zext i32 %4138 to i64
  %4140 = zext i32 %13 to i64
  %4141 = add nuw i32 %5, 1
  %4142 = icmp eq i32 %13, 1
  br label %4143

4143:                                             ; preds = %4135, %4278
  %4144 = phi double [ 0.000000e+00, %4135 ], [ %4228, %4278 ]
  %4145 = phi i32 [ 0, %4135 ], [ %4230, %4278 ]
  %4146 = phi double [ 0.000000e+00, %4135 ], [ %4229, %4278 ]
  %4147 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4136, label %4148, label %4217

4148:                                             ; preds = %4143, %4207
  %4149 = phi i32 [ %4216, %4207 ], [ 0, %4143 ]
  %4150 = phi i64 [ %4158, %4207 ], [ %4140, %4143 ]
  %4151 = phi i64 [ %4215, %4207 ], [ %4139, %4143 ]
  %4152 = phi i32 [ %4213, %4207 ], [ %4147, %4143 ]
  %4153 = sub i32 %4138, %4149
  %4154 = tail call i32 @llvm.smin.i32(i32 %4153, i32 0)
  %4155 = sub i32 %4153, %4154
  %4156 = zext i32 %4155 to i64
  %4157 = add nuw nsw i64 %4156, 1
  %4158 = add nsw i64 %4150, -1
  %4159 = icmp ult i32 %4155, 31
  br i1 %4159, label %4195, label %4160

4160:                                             ; preds = %4148
  %4161 = and i64 %4157, 8589934560
  %4162 = sub i64 %4151, %4161
  br label %4163

4163:                                             ; preds = %4163, %4160
  %4164 = phi i64 [ 0, %4160 ], [ %4187, %4163 ]
  %4165 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4183, %4163 ]
  %4166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4184, %4163 ]
  %4167 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4185, %4163 ]
  %4168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4160 ], [ %4186, %4163 ]
  %4169 = sub i64 %4151, %4164
  %4170 = getelementptr inbounds i32, ptr %9, i64 %4169
  %4171 = getelementptr inbounds i32, ptr %4170, i64 -7
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !6
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4170, i64 -15
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !6
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = getelementptr inbounds i32, ptr %4170, i64 -23
  %4178 = load <8 x i32>, ptr %4177, align 4, !tbaa !6
  %4179 = shufflevector <8 x i32> %4178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4180 = getelementptr inbounds i32, ptr %4170, i64 -31
  %4181 = load <8 x i32>, ptr %4180, align 4, !tbaa !6
  %4182 = shufflevector <8 x i32> %4181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4183 = mul <8 x i32> %4173, %4165
  %4184 = mul <8 x i32> %4176, %4166
  %4185 = mul <8 x i32> %4179, %4167
  %4186 = mul <8 x i32> %4182, %4168
  %4187 = add nuw i64 %4164, 32
  %4188 = icmp eq i64 %4187, %4161
  br i1 %4188, label %4189, label %4163, !llvm.loop !715

4189:                                             ; preds = %4163
  %4190 = mul <8 x i32> %4184, %4183
  %4191 = mul <8 x i32> %4185, %4190
  %4192 = mul <8 x i32> %4186, %4191
  %4193 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4192)
  %4194 = icmp eq i64 %4157, %4161
  br i1 %4194, label %4207, label %4195

4195:                                             ; preds = %4148, %4189
  %4196 = phi i64 [ %4151, %4148 ], [ %4162, %4189 ]
  %4197 = phi i32 [ 1, %4148 ], [ %4193, %4189 ]
  br label %4198

4198:                                             ; preds = %4195, %4198
  %4199 = phi i64 [ %4204, %4198 ], [ %4196, %4195 ]
  %4200 = phi i32 [ %4203, %4198 ], [ %4197, %4195 ]
  %4201 = getelementptr inbounds i32, ptr %9, i64 %4199
  %4202 = load i32, ptr %4201, align 4, !tbaa !6
  %4203 = mul nsw i32 %4202, %4200
  %4204 = add nsw i64 %4199, -1
  %4205 = trunc i64 %4199 to i32
  %4206 = icmp sgt i32 %4205, 0
  br i1 %4206, label %4198, label %4207, !llvm.loop !716

4207:                                             ; preds = %4198, %4189
  %4208 = phi i32 [ %4193, %4189 ], [ %4203, %4198 ]
  %4209 = and i64 %4158, 4294967295
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4209
  %4211 = load i32, ptr %4210, align 4, !tbaa !6
  %4212 = mul nsw i32 %4211, %4208
  %4213 = add nsw i32 %4212, %4152
  %4214 = icmp sgt i64 %4150, 2
  %4215 = add nsw i64 %4151, -1
  %4216 = add i32 %4149, 1
  br i1 %4214, label %4148, label %4217, !llvm.loop !717

4217:                                             ; preds = %4207, %4143
  %4218 = phi i32 [ %4147, %4143 ], [ %4213, %4207 ]
  %4219 = sext i32 %4218 to i64
  %4220 = getelementptr inbounds i32, ptr %3802, i64 %4219
  %4221 = load i32, ptr %4220, align 4, !tbaa !6
  %4222 = sitofp i32 %4221 to double
  %4223 = icmp slt i32 %4221, 0
  %4224 = fneg fast double %4222
  %4225 = select i1 %4223, double %4224, double %4222
  %4226 = fmul fast double %4222, %4222
  %4227 = fmul fast double %4226, %4225
  %4228 = fadd fast double %4227, %4144
  %4229 = fadd fast double %4146, 1.000000e+00
  %4230 = add nuw nsw i32 %4145, 1
  br i1 %4137, label %4231, label %4278

4231:                                             ; preds = %4217
  %4232 = load i32, ptr %4, align 4, !tbaa !6
  %4233 = load i32, ptr %12, align 4, !tbaa !6
  %4234 = add nsw i32 %4233, -1
  %4235 = icmp slt i32 %4232, %4234
  br i1 %4235, label %4255, label %4236

4236:                                             ; preds = %4231
  %4237 = icmp eq i32 %4232, %4234
  br i1 %4237, label %4238, label %4271

4238:                                             ; preds = %4236
  store i32 0, ptr %4, align 4, !tbaa !6
  %4239 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4239, ptr %6, align 4, !tbaa !6
  br i1 %4142, label %4278, label %4240

4240:                                             ; preds = %4238, %4265
  %4241 = phi i64 [ %4269, %4265 ], [ 1, %4238 ]
  %4242 = getelementptr inbounds i32, ptr %4, i64 %4241
  %4243 = load i32, ptr %4242, align 4, !tbaa !6
  %4244 = getelementptr inbounds i32, ptr %12, i64 %4241
  %4245 = load i32, ptr %4244, align 4, !tbaa !6
  %4246 = add nsw i32 %4245, -1
  %4247 = icmp slt i32 %4243, %4246
  br i1 %4247, label %4248, label %4263

4248:                                             ; preds = %4240
  br i1 %4235, label %4255, label %4249

4249:                                             ; preds = %4248
  %4250 = getelementptr inbounds i32, ptr %7, i64 %4241
  %4251 = load i32, ptr %4250, align 4, !tbaa !6
  %4252 = getelementptr inbounds i32, ptr %6, i64 %4241
  %4253 = load i32, ptr %4252, align 4, !tbaa !6
  %4254 = add nsw i32 %4253, %4251
  store i32 %4254, ptr %4252, align 4, !tbaa !6
  br label %4273

4255:                                             ; preds = %4231, %4248
  %4256 = phi i32 [ %4243, %4248 ], [ %4232, %4231 ]
  %4257 = phi ptr [ %4242, %4248 ], [ %4, %4231 ]
  %4258 = phi i64 [ %4241, %4248 ], [ 0, %4231 ]
  %4259 = add nsw i32 %4256, 1
  store i32 %4259, ptr %4257, align 4, !tbaa !6
  %4260 = getelementptr inbounds i32, ptr %7, i64 %4258
  %4261 = load i32, ptr %4260, align 4, !tbaa !6
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4258
  br label %4273

4263:                                             ; preds = %4240
  %4264 = icmp eq i32 %4243, %4246
  br i1 %4264, label %4265, label %4271

4265:                                             ; preds = %4263
  store i32 0, ptr %4242, align 4, !tbaa !6
  %4266 = getelementptr inbounds i32, ptr %8, i64 %4241
  %4267 = load i32, ptr %4266, align 4, !tbaa !6
  %4268 = getelementptr inbounds i32, ptr %6, i64 %4241
  store i32 %4267, ptr %4268, align 4, !tbaa !6
  %4269 = add nuw nsw i64 %4241, 1
  %4270 = icmp eq i64 %4269, %4140
  br i1 %4270, label %4278, label %4240, !llvm.loop !718

4271:                                             ; preds = %4236, %4263
  store double %4228, ptr %3804, align 8, !tbaa !19
  %4272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4273:                                             ; preds = %4249, %4255
  %4274 = phi ptr [ %4262, %4255 ], [ %4242, %4249 ]
  %4275 = phi i32 [ %4261, %4255 ], [ 1, %4249 ]
  %4276 = load i32, ptr %4274, align 4, !tbaa !6
  %4277 = add nsw i32 %4276, %4275
  store i32 %4277, ptr %4274, align 4, !tbaa !6
  br label %4278

4278:                                             ; preds = %4265, %4273, %4238, %4217
  %4279 = icmp eq i32 %4230, %5
  br i1 %4279, label %5682, label %4143, !llvm.loop !719

4280:                                             ; preds = %4126, %4420
  %4281 = phi double [ 0.000000e+00, %4126 ], [ %4368, %4420 ]
  %4282 = phi i32 [ 0, %4126 ], [ %4369, %4420 ]
  %4283 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4127, label %4284, label %4353

4284:                                             ; preds = %4280, %4343
  %4285 = phi i32 [ %4352, %4343 ], [ 0, %4280 ]
  %4286 = phi i64 [ %4294, %4343 ], [ %4131, %4280 ]
  %4287 = phi i64 [ %4351, %4343 ], [ %4130, %4280 ]
  %4288 = phi i32 [ %4349, %4343 ], [ %4283, %4280 ]
  %4289 = sub i32 %4129, %4285
  %4290 = tail call i32 @llvm.smin.i32(i32 %4289, i32 0)
  %4291 = sub i32 %4289, %4290
  %4292 = zext i32 %4291 to i64
  %4293 = add nuw nsw i64 %4292, 1
  %4294 = add nsw i64 %4286, -1
  %4295 = icmp ult i32 %4291, 31
  br i1 %4295, label %4331, label %4296

4296:                                             ; preds = %4284
  %4297 = and i64 %4293, 8589934560
  %4298 = sub i64 %4287, %4297
  br label %4299

4299:                                             ; preds = %4299, %4296
  %4300 = phi i64 [ 0, %4296 ], [ %4323, %4299 ]
  %4301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4319, %4299 ]
  %4302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4320, %4299 ]
  %4303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4321, %4299 ]
  %4304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4296 ], [ %4322, %4299 ]
  %4305 = sub i64 %4287, %4300
  %4306 = getelementptr inbounds i32, ptr %11, i64 %4305
  %4307 = getelementptr inbounds i32, ptr %4306, i64 -7
  %4308 = load <8 x i32>, ptr %4307, align 4, !tbaa !6
  %4309 = shufflevector <8 x i32> %4308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4310 = getelementptr inbounds i32, ptr %4306, i64 -15
  %4311 = load <8 x i32>, ptr %4310, align 4, !tbaa !6
  %4312 = shufflevector <8 x i32> %4311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4313 = getelementptr inbounds i32, ptr %4306, i64 -23
  %4314 = load <8 x i32>, ptr %4313, align 4, !tbaa !6
  %4315 = shufflevector <8 x i32> %4314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4316 = getelementptr inbounds i32, ptr %4306, i64 -31
  %4317 = load <8 x i32>, ptr %4316, align 4, !tbaa !6
  %4318 = shufflevector <8 x i32> %4317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4319 = mul <8 x i32> %4309, %4301
  %4320 = mul <8 x i32> %4312, %4302
  %4321 = mul <8 x i32> %4315, %4303
  %4322 = mul <8 x i32> %4318, %4304
  %4323 = add nuw i64 %4300, 32
  %4324 = icmp eq i64 %4323, %4297
  br i1 %4324, label %4325, label %4299, !llvm.loop !720

4325:                                             ; preds = %4299
  %4326 = mul <8 x i32> %4320, %4319
  %4327 = mul <8 x i32> %4321, %4326
  %4328 = mul <8 x i32> %4322, %4327
  %4329 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4328)
  %4330 = icmp eq i64 %4293, %4297
  br i1 %4330, label %4343, label %4331

4331:                                             ; preds = %4284, %4325
  %4332 = phi i64 [ %4287, %4284 ], [ %4298, %4325 ]
  %4333 = phi i32 [ 1, %4284 ], [ %4329, %4325 ]
  br label %4334

4334:                                             ; preds = %4331, %4334
  %4335 = phi i64 [ %4340, %4334 ], [ %4332, %4331 ]
  %4336 = phi i32 [ %4339, %4334 ], [ %4333, %4331 ]
  %4337 = getelementptr inbounds i32, ptr %11, i64 %4335
  %4338 = load i32, ptr %4337, align 4, !tbaa !6
  %4339 = mul nsw i32 %4338, %4336
  %4340 = add nsw i64 %4335, -1
  %4341 = trunc i64 %4335 to i32
  %4342 = icmp sgt i32 %4341, 0
  br i1 %4342, label %4334, label %4343, !llvm.loop !721

4343:                                             ; preds = %4334, %4325
  %4344 = phi i32 [ %4329, %4325 ], [ %4339, %4334 ]
  %4345 = and i64 %4294, 4294967295
  %4346 = getelementptr inbounds i32, ptr %6, i64 %4345
  %4347 = load i32, ptr %4346, align 4, !tbaa !6
  %4348 = mul nsw i32 %4347, %4344
  %4349 = add nsw i32 %4348, %4288
  %4350 = icmp sgt i64 %4286, 2
  %4351 = add nsw i64 %4287, -1
  %4352 = add i32 %4285, 1
  br i1 %4350, label %4284, label %4353, !llvm.loop !722

4353:                                             ; preds = %4343, %4280
  %4354 = phi i32 [ %4283, %4280 ], [ %4349, %4343 ]
  %4355 = icmp slt i32 %4354, %5
  br i1 %4355, label %4358, label %4356

4356:                                             ; preds = %4353
  %4357 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4358:                                             ; preds = %4353
  %4359 = sext i32 %4354 to i64
  %4360 = getelementptr inbounds i32, ptr %3802, i64 %4359
  %4361 = load i32, ptr %4360, align 4, !tbaa !6
  %4362 = sitofp i32 %4361 to double
  %4363 = icmp slt i32 %4361, 0
  %4364 = fneg fast double %4362
  %4365 = select i1 %4363, double %4364, double %4362
  %4366 = fmul fast double %4362, %4362
  %4367 = fmul fast double %4366, %4365
  %4368 = fadd fast double %4367, %4281
  store double %4368, ptr %3804, align 8, !tbaa !19
  %4369 = add nuw nsw i32 %4282, 1
  br i1 %4128, label %4370, label %4420

4370:                                             ; preds = %4358
  %4371 = load i32, ptr %4, align 4, !tbaa !6
  %4372 = load i32, ptr %12, align 4, !tbaa !6
  %4373 = add nsw i32 %4372, -1
  %4374 = icmp slt i32 %4371, %4373
  br i1 %4374, label %4397, label %4375

4375:                                             ; preds = %4370
  %4376 = icmp eq i32 %4371, %4373
  br i1 %4376, label %4377, label %4413

4377:                                             ; preds = %4375
  store i32 0, ptr %4, align 4, !tbaa !6
  %4378 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4378, ptr %6, align 4, !tbaa !6
  br i1 %4133, label %4420, label %4379

4379:                                             ; preds = %4377, %4407
  %4380 = phi i64 [ %4411, %4407 ], [ 1, %4377 ]
  %4381 = getelementptr inbounds i32, ptr %4, i64 %4380
  %4382 = load i32, ptr %4381, align 4, !tbaa !6
  %4383 = getelementptr inbounds i32, ptr %12, i64 %4380
  %4384 = load i32, ptr %4383, align 4, !tbaa !6
  %4385 = add nsw i32 %4384, -1
  %4386 = icmp slt i32 %4382, %4385
  br i1 %4386, label %4387, label %4405

4387:                                             ; preds = %4379
  br i1 %4374, label %4397, label %4388

4388:                                             ; preds = %4387
  %4389 = shl i64 %4380, 32
  %4390 = add i64 %4389, -4294967296
  %4391 = ashr exact i64 %4390, 32
  %4392 = getelementptr inbounds i32, ptr %7, i64 %4391
  %4393 = load i32, ptr %4392, align 4, !tbaa !6
  %4394 = getelementptr inbounds i32, ptr %6, i64 %4380
  %4395 = load i32, ptr %4394, align 4, !tbaa !6
  %4396 = add nsw i32 %4395, %4393
  store i32 %4396, ptr %4394, align 4, !tbaa !6
  br label %4415

4397:                                             ; preds = %4370, %4387
  %4398 = phi i32 [ %4382, %4387 ], [ %4371, %4370 ]
  %4399 = phi ptr [ %4381, %4387 ], [ %4, %4370 ]
  %4400 = phi i64 [ %4380, %4387 ], [ 0, %4370 ]
  %4401 = add nsw i32 %4398, 1
  store i32 %4401, ptr %4399, align 4, !tbaa !6
  %4402 = getelementptr inbounds i32, ptr %7, i64 %4400
  %4403 = load i32, ptr %4402, align 4, !tbaa !6
  %4404 = getelementptr inbounds i32, ptr %6, i64 %4400
  br label %4415

4405:                                             ; preds = %4379
  %4406 = icmp eq i32 %4382, %4385
  br i1 %4406, label %4407, label %4413

4407:                                             ; preds = %4405
  store i32 0, ptr %4381, align 4, !tbaa !6
  %4408 = getelementptr inbounds i32, ptr %8, i64 %4380
  %4409 = load i32, ptr %4408, align 4, !tbaa !6
  %4410 = getelementptr inbounds i32, ptr %6, i64 %4380
  store i32 %4409, ptr %4410, align 4, !tbaa !6
  %4411 = add nuw nsw i64 %4380, 1
  %4412 = icmp eq i64 %4411, %4131
  br i1 %4412, label %4420, label %4379, !llvm.loop !723

4413:                                             ; preds = %4375, %4405
  %4414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4415:                                             ; preds = %4388, %4397
  %4416 = phi ptr [ %4404, %4397 ], [ %4381, %4388 ]
  %4417 = phi i32 [ %4403, %4397 ], [ 1, %4388 ]
  %4418 = load i32, ptr %4416, align 4, !tbaa !6
  %4419 = add nsw i32 %4418, %4417
  store i32 %4419, ptr %4416, align 4, !tbaa !6
  br label %4420

4420:                                             ; preds = %4407, %4415, %4377, %4358
  %4421 = icmp eq i32 %4369, %5
  br i1 %4421, label %5686, label %4280, !llvm.loop !724

4422:                                             ; preds = %3814
  %4423 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1192, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

4424:                                             ; preds = %18
  %4425 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4426 = load ptr, ptr %4425, align 8, !tbaa !10
  %4427 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4428 = load ptr, ptr %4427, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4428, align 4, !tbaa !163
  %4429 = icmp eq i32 %13, 0
  br i1 %4429, label %4430, label %4438

4430:                                             ; preds = %4424
  %4431 = load i32, ptr %4426, align 4, !tbaa !6
  %4432 = sitofp i32 %4431 to float
  %4433 = icmp slt i32 %4431, 0
  %4434 = fneg fast float %4432
  %4435 = select i1 %4433, float %4434, float %4432
  %4436 = fmul fast float %4432, %4432
  %4437 = fmul fast float %4436, %4435
  store float %4437, ptr %4428, align 4, !tbaa !163
  br label %5686

4438:                                             ; preds = %4424
  switch i32 %1, label %5052 [
    i32 1, label %4439
    i32 0, label %4750
  ]

4439:                                             ; preds = %4438
  %4440 = getelementptr inbounds i32, ptr %3, i64 %19
  %4441 = load i32, ptr %4440, align 4, !tbaa !6
  %4442 = icmp eq i32 %4441, 0
  %4443 = icmp sgt i32 %5, 0
  br i1 %4442, label %4453, label %4444

4444:                                             ; preds = %4439
  br i1 %4443, label %4445, label %5686

4445:                                             ; preds = %4444
  %4446 = icmp sgt i32 %13, 1
  %4447 = icmp sgt i32 %13, 0
  %4448 = add i32 %13, -2
  %4449 = zext i32 %4448 to i64
  %4450 = zext i32 %13 to i64
  %4451 = add nuw i32 %5, 1
  %4452 = icmp eq i32 %13, 1
  br label %4605

4453:                                             ; preds = %4439
  br i1 %4443, label %4454, label %5686

4454:                                             ; preds = %4453
  %4455 = icmp sgt i32 %13, 1
  %4456 = icmp sgt i32 %13, 0
  %4457 = add i32 %13, -2
  %4458 = zext i32 %4457 to i64
  %4459 = zext i32 %13 to i64
  %4460 = add nuw i32 %5, 1
  %4461 = icmp eq i32 %13, 1
  br label %4462

4462:                                             ; preds = %4454, %4603
  %4463 = phi float [ 0.000000e+00, %4454 ], [ %4553, %4603 ]
  %4464 = phi i32 [ 0, %4454 ], [ %4555, %4603 ]
  %4465 = phi double [ 0.000000e+00, %4454 ], [ %4554, %4603 ]
  %4466 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4455, label %4467, label %4536

4467:                                             ; preds = %4462, %4526
  %4468 = phi i32 [ %4535, %4526 ], [ 0, %4462 ]
  %4469 = phi i64 [ %4477, %4526 ], [ %4459, %4462 ]
  %4470 = phi i64 [ %4534, %4526 ], [ %4458, %4462 ]
  %4471 = phi i32 [ %4532, %4526 ], [ %4466, %4462 ]
  %4472 = sub i32 %4457, %4468
  %4473 = tail call i32 @llvm.smin.i32(i32 %4472, i32 0)
  %4474 = sub i32 %4472, %4473
  %4475 = zext i32 %4474 to i64
  %4476 = add nuw nsw i64 %4475, 1
  %4477 = add nsw i64 %4469, -1
  %4478 = icmp ult i32 %4474, 31
  br i1 %4478, label %4514, label %4479

4479:                                             ; preds = %4467
  %4480 = and i64 %4476, 8589934560
  %4481 = sub i64 %4470, %4480
  br label %4482

4482:                                             ; preds = %4482, %4479
  %4483 = phi i64 [ 0, %4479 ], [ %4506, %4482 ]
  %4484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4502, %4482 ]
  %4485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4503, %4482 ]
  %4486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4504, %4482 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4505, %4482 ]
  %4488 = sub i64 %4470, %4483
  %4489 = getelementptr inbounds i32, ptr %9, i64 %4488
  %4490 = getelementptr inbounds i32, ptr %4489, i64 -7
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !6
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4489, i64 -15
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !6
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4489, i64 -23
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !6
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = getelementptr inbounds i32, ptr %4489, i64 -31
  %4500 = load <8 x i32>, ptr %4499, align 4, !tbaa !6
  %4501 = shufflevector <8 x i32> %4500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4502 = mul <8 x i32> %4492, %4484
  %4503 = mul <8 x i32> %4495, %4485
  %4504 = mul <8 x i32> %4498, %4486
  %4505 = mul <8 x i32> %4501, %4487
  %4506 = add nuw i64 %4483, 32
  %4507 = icmp eq i64 %4506, %4480
  br i1 %4507, label %4508, label %4482, !llvm.loop !725

4508:                                             ; preds = %4482
  %4509 = mul <8 x i32> %4503, %4502
  %4510 = mul <8 x i32> %4504, %4509
  %4511 = mul <8 x i32> %4505, %4510
  %4512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4511)
  %4513 = icmp eq i64 %4476, %4480
  br i1 %4513, label %4526, label %4514

4514:                                             ; preds = %4467, %4508
  %4515 = phi i64 [ %4470, %4467 ], [ %4481, %4508 ]
  %4516 = phi i32 [ 1, %4467 ], [ %4512, %4508 ]
  br label %4517

4517:                                             ; preds = %4514, %4517
  %4518 = phi i64 [ %4523, %4517 ], [ %4515, %4514 ]
  %4519 = phi i32 [ %4522, %4517 ], [ %4516, %4514 ]
  %4520 = getelementptr inbounds i32, ptr %9, i64 %4518
  %4521 = load i32, ptr %4520, align 4, !tbaa !6
  %4522 = mul nsw i32 %4521, %4519
  %4523 = add nsw i64 %4518, -1
  %4524 = trunc i64 %4518 to i32
  %4525 = icmp sgt i32 %4524, 0
  br i1 %4525, label %4517, label %4526, !llvm.loop !726

4526:                                             ; preds = %4517, %4508
  %4527 = phi i32 [ %4512, %4508 ], [ %4522, %4517 ]
  %4528 = and i64 %4477, 4294967295
  %4529 = getelementptr inbounds i32, ptr %6, i64 %4528
  %4530 = load i32, ptr %4529, align 4, !tbaa !6
  %4531 = mul nsw i32 %4530, %4527
  %4532 = add nsw i32 %4531, %4471
  %4533 = icmp sgt i64 %4469, 2
  %4534 = add nsw i64 %4470, -1
  %4535 = add i32 %4468, 1
  br i1 %4533, label %4467, label %4536, !llvm.loop !727

4536:                                             ; preds = %4526, %4462
  %4537 = phi i32 [ %4466, %4462 ], [ %4532, %4526 ]
  %4538 = sext i32 %4537 to i64
  %4539 = getelementptr inbounds double, ptr %2, i64 %4538
  %4540 = load double, ptr %4539, align 8, !tbaa !19
  %4541 = getelementptr inbounds i32, ptr %4426, i64 %4538
  %4542 = load i32, ptr %4541, align 4, !tbaa !6
  %4543 = sitofp i32 %4542 to float
  %4544 = fpext float %4463 to double
  %4545 = fpext float %4543 to double
  %4546 = fmul fast double %4540, %4545
  %4547 = fcmp fast olt double %4546, 0.000000e+00
  %4548 = fneg fast double %4546
  %4549 = select nnan ninf i1 %4547, double %4548, double %4546
  %4550 = fmul fast double %4546, %4546
  %4551 = fmul fast double %4550, %4549
  %4552 = fadd fast double %4551, %4544
  %4553 = fptrunc double %4552 to float
  %4554 = fadd fast double %4540, %4465
  %4555 = add nuw nsw i32 %4464, 1
  br i1 %4456, label %4556, label %4603

4556:                                             ; preds = %4536
  %4557 = load i32, ptr %4, align 4, !tbaa !6
  %4558 = load i32, ptr %12, align 4, !tbaa !6
  %4559 = add nsw i32 %4558, -1
  %4560 = icmp slt i32 %4557, %4559
  br i1 %4560, label %4580, label %4561

4561:                                             ; preds = %4556
  %4562 = icmp eq i32 %4557, %4559
  br i1 %4562, label %4563, label %4596

4563:                                             ; preds = %4561
  store i32 0, ptr %4, align 4, !tbaa !6
  %4564 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4564, ptr %6, align 4, !tbaa !6
  br i1 %4461, label %4603, label %4565

4565:                                             ; preds = %4563, %4590
  %4566 = phi i64 [ %4594, %4590 ], [ 1, %4563 ]
  %4567 = getelementptr inbounds i32, ptr %4, i64 %4566
  %4568 = load i32, ptr %4567, align 4, !tbaa !6
  %4569 = getelementptr inbounds i32, ptr %12, i64 %4566
  %4570 = load i32, ptr %4569, align 4, !tbaa !6
  %4571 = add nsw i32 %4570, -1
  %4572 = icmp slt i32 %4568, %4571
  br i1 %4572, label %4573, label %4588

4573:                                             ; preds = %4565
  br i1 %4560, label %4580, label %4574

4574:                                             ; preds = %4573
  %4575 = getelementptr inbounds i32, ptr %7, i64 %4566
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = getelementptr inbounds i32, ptr %6, i64 %4566
  %4578 = load i32, ptr %4577, align 4, !tbaa !6
  %4579 = add nsw i32 %4578, %4576
  store i32 %4579, ptr %4577, align 4, !tbaa !6
  br label %4598

4580:                                             ; preds = %4556, %4573
  %4581 = phi i32 [ %4568, %4573 ], [ %4557, %4556 ]
  %4582 = phi ptr [ %4567, %4573 ], [ %4, %4556 ]
  %4583 = phi i64 [ %4566, %4573 ], [ 0, %4556 ]
  %4584 = add nsw i32 %4581, 1
  store i32 %4584, ptr %4582, align 4, !tbaa !6
  %4585 = getelementptr inbounds i32, ptr %7, i64 %4583
  %4586 = load i32, ptr %4585, align 4, !tbaa !6
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4583
  br label %4598

4588:                                             ; preds = %4565
  %4589 = icmp eq i32 %4568, %4571
  br i1 %4589, label %4590, label %4596

4590:                                             ; preds = %4588
  store i32 0, ptr %4567, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %8, i64 %4566
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = getelementptr inbounds i32, ptr %6, i64 %4566
  store i32 %4592, ptr %4593, align 4, !tbaa !6
  %4594 = add nuw nsw i64 %4566, 1
  %4595 = icmp eq i64 %4594, %4459
  br i1 %4595, label %4603, label %4565, !llvm.loop !728

4596:                                             ; preds = %4561, %4588
  store float %4553, ptr %4428, align 4, !tbaa !163
  %4597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4598:                                             ; preds = %4574, %4580
  %4599 = phi ptr [ %4587, %4580 ], [ %4567, %4574 ]
  %4600 = phi i32 [ %4586, %4580 ], [ 1, %4574 ]
  %4601 = load i32, ptr %4599, align 4, !tbaa !6
  %4602 = add nsw i32 %4601, %4600
  store i32 %4602, ptr %4599, align 4, !tbaa !6
  br label %4603

4603:                                             ; preds = %4590, %4598, %4563, %4536
  %4604 = icmp eq i32 %4555, %5
  br i1 %4604, label %5683, label %4462, !llvm.loop !729

4605:                                             ; preds = %4445, %4748
  %4606 = phi float [ 0.000000e+00, %4445 ], [ %4696, %4748 ]
  %4607 = phi i32 [ 0, %4445 ], [ %4697, %4748 ]
  %4608 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4446, label %4609, label %4678

4609:                                             ; preds = %4605, %4668
  %4610 = phi i32 [ %4677, %4668 ], [ 0, %4605 ]
  %4611 = phi i64 [ %4619, %4668 ], [ %4450, %4605 ]
  %4612 = phi i64 [ %4676, %4668 ], [ %4449, %4605 ]
  %4613 = phi i32 [ %4674, %4668 ], [ %4608, %4605 ]
  %4614 = sub i32 %4448, %4610
  %4615 = tail call i32 @llvm.smin.i32(i32 %4614, i32 0)
  %4616 = sub i32 %4614, %4615
  %4617 = zext i32 %4616 to i64
  %4618 = add nuw nsw i64 %4617, 1
  %4619 = add nsw i64 %4611, -1
  %4620 = icmp ult i32 %4616, 31
  br i1 %4620, label %4656, label %4621

4621:                                             ; preds = %4609
  %4622 = and i64 %4618, 8589934560
  %4623 = sub i64 %4612, %4622
  br label %4624

4624:                                             ; preds = %4624, %4621
  %4625 = phi i64 [ 0, %4621 ], [ %4648, %4624 ]
  %4626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4644, %4624 ]
  %4627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4645, %4624 ]
  %4628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4646, %4624 ]
  %4629 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4621 ], [ %4647, %4624 ]
  %4630 = sub i64 %4612, %4625
  %4631 = getelementptr inbounds i32, ptr %11, i64 %4630
  %4632 = getelementptr inbounds i32, ptr %4631, i64 -7
  %4633 = load <8 x i32>, ptr %4632, align 4, !tbaa !6
  %4634 = shufflevector <8 x i32> %4633, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4635 = getelementptr inbounds i32, ptr %4631, i64 -15
  %4636 = load <8 x i32>, ptr %4635, align 4, !tbaa !6
  %4637 = shufflevector <8 x i32> %4636, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4638 = getelementptr inbounds i32, ptr %4631, i64 -23
  %4639 = load <8 x i32>, ptr %4638, align 4, !tbaa !6
  %4640 = shufflevector <8 x i32> %4639, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4641 = getelementptr inbounds i32, ptr %4631, i64 -31
  %4642 = load <8 x i32>, ptr %4641, align 4, !tbaa !6
  %4643 = shufflevector <8 x i32> %4642, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4644 = mul <8 x i32> %4634, %4626
  %4645 = mul <8 x i32> %4637, %4627
  %4646 = mul <8 x i32> %4640, %4628
  %4647 = mul <8 x i32> %4643, %4629
  %4648 = add nuw i64 %4625, 32
  %4649 = icmp eq i64 %4648, %4622
  br i1 %4649, label %4650, label %4624, !llvm.loop !730

4650:                                             ; preds = %4624
  %4651 = mul <8 x i32> %4645, %4644
  %4652 = mul <8 x i32> %4646, %4651
  %4653 = mul <8 x i32> %4647, %4652
  %4654 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4653)
  %4655 = icmp eq i64 %4618, %4622
  br i1 %4655, label %4668, label %4656

4656:                                             ; preds = %4609, %4650
  %4657 = phi i64 [ %4612, %4609 ], [ %4623, %4650 ]
  %4658 = phi i32 [ 1, %4609 ], [ %4654, %4650 ]
  br label %4659

4659:                                             ; preds = %4656, %4659
  %4660 = phi i64 [ %4665, %4659 ], [ %4657, %4656 ]
  %4661 = phi i32 [ %4664, %4659 ], [ %4658, %4656 ]
  %4662 = getelementptr inbounds i32, ptr %11, i64 %4660
  %4663 = load i32, ptr %4662, align 4, !tbaa !6
  %4664 = mul nsw i32 %4663, %4661
  %4665 = add nsw i64 %4660, -1
  %4666 = trunc i64 %4660 to i32
  %4667 = icmp sgt i32 %4666, 0
  br i1 %4667, label %4659, label %4668, !llvm.loop !731

4668:                                             ; preds = %4659, %4650
  %4669 = phi i32 [ %4654, %4650 ], [ %4664, %4659 ]
  %4670 = and i64 %4619, 4294967295
  %4671 = getelementptr inbounds i32, ptr %6, i64 %4670
  %4672 = load i32, ptr %4671, align 4, !tbaa !6
  %4673 = mul nsw i32 %4672, %4669
  %4674 = add nsw i32 %4673, %4613
  %4675 = icmp sgt i64 %4611, 2
  %4676 = add nsw i64 %4612, -1
  %4677 = add i32 %4610, 1
  br i1 %4675, label %4609, label %4678, !llvm.loop !732

4678:                                             ; preds = %4668, %4605
  %4679 = phi i32 [ %4608, %4605 ], [ %4674, %4668 ]
  %4680 = icmp slt i32 %4679, %5
  br i1 %4680, label %4683, label %4681

4681:                                             ; preds = %4678
  %4682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4683:                                             ; preds = %4678
  %4684 = sext i32 %4679 to i64
  %4685 = getelementptr inbounds i32, ptr %4426, i64 %4684
  %4686 = load i32, ptr %4685, align 4, !tbaa !6
  %4687 = sitofp i32 %4686 to float
  %4688 = fpext float %4606 to double
  %4689 = fpext float %4687 to double
  %4690 = icmp slt i32 %4686, 0
  %4691 = fneg fast double %4689
  %4692 = select i1 %4690, double %4691, double %4689
  %4693 = fmul fast double %4689, %4689
  %4694 = fmul fast double %4693, %4692
  %4695 = fadd fast double %4694, %4688
  %4696 = fptrunc double %4695 to float
  store float %4696, ptr %4428, align 4, !tbaa !163
  %4697 = add nuw nsw i32 %4607, 1
  br i1 %4447, label %4698, label %4748

4698:                                             ; preds = %4683
  %4699 = load i32, ptr %4, align 4, !tbaa !6
  %4700 = load i32, ptr %12, align 4, !tbaa !6
  %4701 = add nsw i32 %4700, -1
  %4702 = icmp slt i32 %4699, %4701
  br i1 %4702, label %4725, label %4703

4703:                                             ; preds = %4698
  %4704 = icmp eq i32 %4699, %4701
  br i1 %4704, label %4705, label %4741

4705:                                             ; preds = %4703
  store i32 0, ptr %4, align 4, !tbaa !6
  %4706 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4706, ptr %6, align 4, !tbaa !6
  br i1 %4452, label %4748, label %4707

4707:                                             ; preds = %4705, %4735
  %4708 = phi i64 [ %4739, %4735 ], [ 1, %4705 ]
  %4709 = getelementptr inbounds i32, ptr %4, i64 %4708
  %4710 = load i32, ptr %4709, align 4, !tbaa !6
  %4711 = getelementptr inbounds i32, ptr %12, i64 %4708
  %4712 = load i32, ptr %4711, align 4, !tbaa !6
  %4713 = add nsw i32 %4712, -1
  %4714 = icmp slt i32 %4710, %4713
  br i1 %4714, label %4715, label %4733

4715:                                             ; preds = %4707
  br i1 %4702, label %4725, label %4716

4716:                                             ; preds = %4715
  %4717 = shl i64 %4708, 32
  %4718 = add i64 %4717, -4294967296
  %4719 = ashr exact i64 %4718, 32
  %4720 = getelementptr inbounds i32, ptr %7, i64 %4719
  %4721 = load i32, ptr %4720, align 4, !tbaa !6
  %4722 = getelementptr inbounds i32, ptr %6, i64 %4708
  %4723 = load i32, ptr %4722, align 4, !tbaa !6
  %4724 = add nsw i32 %4723, %4721
  store i32 %4724, ptr %4722, align 4, !tbaa !6
  br label %4743

4725:                                             ; preds = %4698, %4715
  %4726 = phi i32 [ %4710, %4715 ], [ %4699, %4698 ]
  %4727 = phi ptr [ %4709, %4715 ], [ %4, %4698 ]
  %4728 = phi i64 [ %4708, %4715 ], [ 0, %4698 ]
  %4729 = add nsw i32 %4726, 1
  store i32 %4729, ptr %4727, align 4, !tbaa !6
  %4730 = getelementptr inbounds i32, ptr %7, i64 %4728
  %4731 = load i32, ptr %4730, align 4, !tbaa !6
  %4732 = getelementptr inbounds i32, ptr %6, i64 %4728
  br label %4743

4733:                                             ; preds = %4707
  %4734 = icmp eq i32 %4710, %4713
  br i1 %4734, label %4735, label %4741

4735:                                             ; preds = %4733
  store i32 0, ptr %4709, align 4, !tbaa !6
  %4736 = getelementptr inbounds i32, ptr %8, i64 %4708
  %4737 = load i32, ptr %4736, align 4, !tbaa !6
  %4738 = getelementptr inbounds i32, ptr %6, i64 %4708
  store i32 %4737, ptr %4738, align 4, !tbaa !6
  %4739 = add nuw nsw i64 %4708, 1
  %4740 = icmp eq i64 %4739, %4450
  br i1 %4740, label %4748, label %4707, !llvm.loop !733

4741:                                             ; preds = %4703, %4733
  %4742 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4743:                                             ; preds = %4716, %4725
  %4744 = phi ptr [ %4732, %4725 ], [ %4709, %4716 ]
  %4745 = phi i32 [ %4731, %4725 ], [ 1, %4716 ]
  %4746 = load i32, ptr %4744, align 4, !tbaa !6
  %4747 = add nsw i32 %4746, %4745
  store i32 %4747, ptr %4744, align 4, !tbaa !6
  br label %4748

4748:                                             ; preds = %4735, %4743, %4705, %4683
  %4749 = icmp eq i32 %4697, %5
  br i1 %4749, label %5686, label %4605, !llvm.loop !734

4750:                                             ; preds = %4438
  %4751 = getelementptr inbounds i32, ptr %3, i64 %19
  %4752 = load i32, ptr %4751, align 4, !tbaa !6
  %4753 = icmp eq i32 %4752, 0
  %4754 = icmp sgt i32 %5, 0
  br i1 %4753, label %4764, label %4755

4755:                                             ; preds = %4750
  br i1 %4754, label %4756, label %5686

4756:                                             ; preds = %4755
  %4757 = icmp sgt i32 %13, 1
  %4758 = icmp sgt i32 %13, 0
  %4759 = add i32 %13, -2
  %4760 = zext i32 %4759 to i64
  %4761 = zext i32 %13 to i64
  %4762 = add nuw i32 %5, 1
  %4763 = icmp eq i32 %13, 1
  br label %4910

4764:                                             ; preds = %4750
  br i1 %4754, label %4765, label %5686

4765:                                             ; preds = %4764
  %4766 = icmp sgt i32 %13, 1
  %4767 = icmp sgt i32 %13, 0
  %4768 = add i32 %13, -2
  %4769 = zext i32 %4768 to i64
  %4770 = zext i32 %13 to i64
  %4771 = add nuw i32 %5, 1
  %4772 = icmp eq i32 %13, 1
  br label %4773

4773:                                             ; preds = %4765, %4908
  %4774 = phi float [ 0.000000e+00, %4765 ], [ %4858, %4908 ]
  %4775 = phi i32 [ 0, %4765 ], [ %4860, %4908 ]
  %4776 = phi double [ 0.000000e+00, %4765 ], [ %4859, %4908 ]
  %4777 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4766, label %4778, label %4847

4778:                                             ; preds = %4773, %4837
  %4779 = phi i32 [ %4846, %4837 ], [ 0, %4773 ]
  %4780 = phi i64 [ %4788, %4837 ], [ %4770, %4773 ]
  %4781 = phi i64 [ %4845, %4837 ], [ %4769, %4773 ]
  %4782 = phi i32 [ %4843, %4837 ], [ %4777, %4773 ]
  %4783 = sub i32 %4768, %4779
  %4784 = tail call i32 @llvm.smin.i32(i32 %4783, i32 0)
  %4785 = sub i32 %4783, %4784
  %4786 = zext i32 %4785 to i64
  %4787 = add nuw nsw i64 %4786, 1
  %4788 = add nsw i64 %4780, -1
  %4789 = icmp ult i32 %4785, 31
  br i1 %4789, label %4825, label %4790

4790:                                             ; preds = %4778
  %4791 = and i64 %4787, 8589934560
  %4792 = sub i64 %4781, %4791
  br label %4793

4793:                                             ; preds = %4793, %4790
  %4794 = phi i64 [ 0, %4790 ], [ %4817, %4793 ]
  %4795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4813, %4793 ]
  %4796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4814, %4793 ]
  %4797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4815, %4793 ]
  %4798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4790 ], [ %4816, %4793 ]
  %4799 = sub i64 %4781, %4794
  %4800 = getelementptr inbounds i32, ptr %9, i64 %4799
  %4801 = getelementptr inbounds i32, ptr %4800, i64 -7
  %4802 = load <8 x i32>, ptr %4801, align 4, !tbaa !6
  %4803 = shufflevector <8 x i32> %4802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4804 = getelementptr inbounds i32, ptr %4800, i64 -15
  %4805 = load <8 x i32>, ptr %4804, align 4, !tbaa !6
  %4806 = shufflevector <8 x i32> %4805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4807 = getelementptr inbounds i32, ptr %4800, i64 -23
  %4808 = load <8 x i32>, ptr %4807, align 4, !tbaa !6
  %4809 = shufflevector <8 x i32> %4808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4810 = getelementptr inbounds i32, ptr %4800, i64 -31
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !6
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = mul <8 x i32> %4803, %4795
  %4814 = mul <8 x i32> %4806, %4796
  %4815 = mul <8 x i32> %4809, %4797
  %4816 = mul <8 x i32> %4812, %4798
  %4817 = add nuw i64 %4794, 32
  %4818 = icmp eq i64 %4817, %4791
  br i1 %4818, label %4819, label %4793, !llvm.loop !735

4819:                                             ; preds = %4793
  %4820 = mul <8 x i32> %4814, %4813
  %4821 = mul <8 x i32> %4815, %4820
  %4822 = mul <8 x i32> %4816, %4821
  %4823 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4822)
  %4824 = icmp eq i64 %4787, %4791
  br i1 %4824, label %4837, label %4825

4825:                                             ; preds = %4778, %4819
  %4826 = phi i64 [ %4781, %4778 ], [ %4792, %4819 ]
  %4827 = phi i32 [ 1, %4778 ], [ %4823, %4819 ]
  br label %4828

4828:                                             ; preds = %4825, %4828
  %4829 = phi i64 [ %4834, %4828 ], [ %4826, %4825 ]
  %4830 = phi i32 [ %4833, %4828 ], [ %4827, %4825 ]
  %4831 = getelementptr inbounds i32, ptr %9, i64 %4829
  %4832 = load i32, ptr %4831, align 4, !tbaa !6
  %4833 = mul nsw i32 %4832, %4830
  %4834 = add nsw i64 %4829, -1
  %4835 = trunc i64 %4829 to i32
  %4836 = icmp sgt i32 %4835, 0
  br i1 %4836, label %4828, label %4837, !llvm.loop !736

4837:                                             ; preds = %4828, %4819
  %4838 = phi i32 [ %4823, %4819 ], [ %4833, %4828 ]
  %4839 = and i64 %4788, 4294967295
  %4840 = getelementptr inbounds i32, ptr %6, i64 %4839
  %4841 = load i32, ptr %4840, align 4, !tbaa !6
  %4842 = mul nsw i32 %4841, %4838
  %4843 = add nsw i32 %4842, %4782
  %4844 = icmp sgt i64 %4780, 2
  %4845 = add nsw i64 %4781, -1
  %4846 = add i32 %4779, 1
  br i1 %4844, label %4778, label %4847, !llvm.loop !737

4847:                                             ; preds = %4837, %4773
  %4848 = phi i32 [ %4777, %4773 ], [ %4843, %4837 ]
  %4849 = sext i32 %4848 to i64
  %4850 = getelementptr inbounds i32, ptr %4426, i64 %4849
  %4851 = load i32, ptr %4850, align 4, !tbaa !6
  %4852 = sitofp i32 %4851 to float
  %4853 = icmp slt i32 %4851, 0
  %4854 = fneg fast float %4852
  %4855 = select i1 %4853, float %4854, float %4852
  %4856 = fmul fast float %4852, %4852
  %4857 = fmul fast float %4856, %4855
  %4858 = fadd fast float %4857, %4774
  %4859 = fadd fast double %4776, 1.000000e+00
  %4860 = add nuw nsw i32 %4775, 1
  br i1 %4767, label %4861, label %4908

4861:                                             ; preds = %4847
  %4862 = load i32, ptr %4, align 4, !tbaa !6
  %4863 = load i32, ptr %12, align 4, !tbaa !6
  %4864 = add nsw i32 %4863, -1
  %4865 = icmp slt i32 %4862, %4864
  br i1 %4865, label %4885, label %4866

4866:                                             ; preds = %4861
  %4867 = icmp eq i32 %4862, %4864
  br i1 %4867, label %4868, label %4901

4868:                                             ; preds = %4866
  store i32 0, ptr %4, align 4, !tbaa !6
  %4869 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4869, ptr %6, align 4, !tbaa !6
  br i1 %4772, label %4908, label %4870

4870:                                             ; preds = %4868, %4895
  %4871 = phi i64 [ %4899, %4895 ], [ 1, %4868 ]
  %4872 = getelementptr inbounds i32, ptr %4, i64 %4871
  %4873 = load i32, ptr %4872, align 4, !tbaa !6
  %4874 = getelementptr inbounds i32, ptr %12, i64 %4871
  %4875 = load i32, ptr %4874, align 4, !tbaa !6
  %4876 = add nsw i32 %4875, -1
  %4877 = icmp slt i32 %4873, %4876
  br i1 %4877, label %4878, label %4893

4878:                                             ; preds = %4870
  br i1 %4865, label %4885, label %4879

4879:                                             ; preds = %4878
  %4880 = getelementptr inbounds i32, ptr %7, i64 %4871
  %4881 = load i32, ptr %4880, align 4, !tbaa !6
  %4882 = getelementptr inbounds i32, ptr %6, i64 %4871
  %4883 = load i32, ptr %4882, align 4, !tbaa !6
  %4884 = add nsw i32 %4883, %4881
  store i32 %4884, ptr %4882, align 4, !tbaa !6
  br label %4903

4885:                                             ; preds = %4861, %4878
  %4886 = phi i32 [ %4873, %4878 ], [ %4862, %4861 ]
  %4887 = phi ptr [ %4872, %4878 ], [ %4, %4861 ]
  %4888 = phi i64 [ %4871, %4878 ], [ 0, %4861 ]
  %4889 = add nsw i32 %4886, 1
  store i32 %4889, ptr %4887, align 4, !tbaa !6
  %4890 = getelementptr inbounds i32, ptr %7, i64 %4888
  %4891 = load i32, ptr %4890, align 4, !tbaa !6
  %4892 = getelementptr inbounds i32, ptr %6, i64 %4888
  br label %4903

4893:                                             ; preds = %4870
  %4894 = icmp eq i32 %4873, %4876
  br i1 %4894, label %4895, label %4901

4895:                                             ; preds = %4893
  store i32 0, ptr %4872, align 4, !tbaa !6
  %4896 = getelementptr inbounds i32, ptr %8, i64 %4871
  %4897 = load i32, ptr %4896, align 4, !tbaa !6
  %4898 = getelementptr inbounds i32, ptr %6, i64 %4871
  store i32 %4897, ptr %4898, align 4, !tbaa !6
  %4899 = add nuw nsw i64 %4871, 1
  %4900 = icmp eq i64 %4899, %4770
  br i1 %4900, label %4908, label %4870, !llvm.loop !738

4901:                                             ; preds = %4866, %4893
  store float %4858, ptr %4428, align 4, !tbaa !163
  %4902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

4903:                                             ; preds = %4879, %4885
  %4904 = phi ptr [ %4892, %4885 ], [ %4872, %4879 ]
  %4905 = phi i32 [ %4891, %4885 ], [ 1, %4879 ]
  %4906 = load i32, ptr %4904, align 4, !tbaa !6
  %4907 = add nsw i32 %4906, %4905
  store i32 %4907, ptr %4904, align 4, !tbaa !6
  br label %4908

4908:                                             ; preds = %4895, %4903, %4868, %4847
  %4909 = icmp eq i32 %4860, %5
  br i1 %4909, label %5684, label %4773, !llvm.loop !739

4910:                                             ; preds = %4756, %5050
  %4911 = phi float [ 0.000000e+00, %4756 ], [ %4998, %5050 ]
  %4912 = phi i32 [ 0, %4756 ], [ %4999, %5050 ]
  %4913 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4757, label %4914, label %4983

4914:                                             ; preds = %4910, %4973
  %4915 = phi i32 [ %4982, %4973 ], [ 0, %4910 ]
  %4916 = phi i64 [ %4924, %4973 ], [ %4761, %4910 ]
  %4917 = phi i64 [ %4981, %4973 ], [ %4760, %4910 ]
  %4918 = phi i32 [ %4979, %4973 ], [ %4913, %4910 ]
  %4919 = sub i32 %4759, %4915
  %4920 = tail call i32 @llvm.smin.i32(i32 %4919, i32 0)
  %4921 = sub i32 %4919, %4920
  %4922 = zext i32 %4921 to i64
  %4923 = add nuw nsw i64 %4922, 1
  %4924 = add nsw i64 %4916, -1
  %4925 = icmp ult i32 %4921, 31
  br i1 %4925, label %4961, label %4926

4926:                                             ; preds = %4914
  %4927 = and i64 %4923, 8589934560
  %4928 = sub i64 %4917, %4927
  br label %4929

4929:                                             ; preds = %4929, %4926
  %4930 = phi i64 [ 0, %4926 ], [ %4953, %4929 ]
  %4931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4949, %4929 ]
  %4932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4950, %4929 ]
  %4933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4951, %4929 ]
  %4934 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4926 ], [ %4952, %4929 ]
  %4935 = sub i64 %4917, %4930
  %4936 = getelementptr inbounds i32, ptr %11, i64 %4935
  %4937 = getelementptr inbounds i32, ptr %4936, i64 -7
  %4938 = load <8 x i32>, ptr %4937, align 4, !tbaa !6
  %4939 = shufflevector <8 x i32> %4938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4940 = getelementptr inbounds i32, ptr %4936, i64 -15
  %4941 = load <8 x i32>, ptr %4940, align 4, !tbaa !6
  %4942 = shufflevector <8 x i32> %4941, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4943 = getelementptr inbounds i32, ptr %4936, i64 -23
  %4944 = load <8 x i32>, ptr %4943, align 4, !tbaa !6
  %4945 = shufflevector <8 x i32> %4944, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4946 = getelementptr inbounds i32, ptr %4936, i64 -31
  %4947 = load <8 x i32>, ptr %4946, align 4, !tbaa !6
  %4948 = shufflevector <8 x i32> %4947, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4949 = mul <8 x i32> %4939, %4931
  %4950 = mul <8 x i32> %4942, %4932
  %4951 = mul <8 x i32> %4945, %4933
  %4952 = mul <8 x i32> %4948, %4934
  %4953 = add nuw i64 %4930, 32
  %4954 = icmp eq i64 %4953, %4927
  br i1 %4954, label %4955, label %4929, !llvm.loop !740

4955:                                             ; preds = %4929
  %4956 = mul <8 x i32> %4950, %4949
  %4957 = mul <8 x i32> %4951, %4956
  %4958 = mul <8 x i32> %4952, %4957
  %4959 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4958)
  %4960 = icmp eq i64 %4923, %4927
  br i1 %4960, label %4973, label %4961

4961:                                             ; preds = %4914, %4955
  %4962 = phi i64 [ %4917, %4914 ], [ %4928, %4955 ]
  %4963 = phi i32 [ 1, %4914 ], [ %4959, %4955 ]
  br label %4964

4964:                                             ; preds = %4961, %4964
  %4965 = phi i64 [ %4970, %4964 ], [ %4962, %4961 ]
  %4966 = phi i32 [ %4969, %4964 ], [ %4963, %4961 ]
  %4967 = getelementptr inbounds i32, ptr %11, i64 %4965
  %4968 = load i32, ptr %4967, align 4, !tbaa !6
  %4969 = mul nsw i32 %4968, %4966
  %4970 = add nsw i64 %4965, -1
  %4971 = trunc i64 %4965 to i32
  %4972 = icmp sgt i32 %4971, 0
  br i1 %4972, label %4964, label %4973, !llvm.loop !741

4973:                                             ; preds = %4964, %4955
  %4974 = phi i32 [ %4959, %4955 ], [ %4969, %4964 ]
  %4975 = and i64 %4924, 4294967295
  %4976 = getelementptr inbounds i32, ptr %6, i64 %4975
  %4977 = load i32, ptr %4976, align 4, !tbaa !6
  %4978 = mul nsw i32 %4977, %4974
  %4979 = add nsw i32 %4978, %4918
  %4980 = icmp sgt i64 %4916, 2
  %4981 = add nsw i64 %4917, -1
  %4982 = add i32 %4915, 1
  br i1 %4980, label %4914, label %4983, !llvm.loop !742

4983:                                             ; preds = %4973, %4910
  %4984 = phi i32 [ %4913, %4910 ], [ %4979, %4973 ]
  %4985 = icmp slt i32 %4984, %5
  br i1 %4985, label %4988, label %4986

4986:                                             ; preds = %4983
  %4987 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

4988:                                             ; preds = %4983
  %4989 = sext i32 %4984 to i64
  %4990 = getelementptr inbounds i32, ptr %4426, i64 %4989
  %4991 = load i32, ptr %4990, align 4, !tbaa !6
  %4992 = sitofp i32 %4991 to float
  %4993 = icmp slt i32 %4991, 0
  %4994 = fneg fast float %4992
  %4995 = select i1 %4993, float %4994, float %4992
  %4996 = fmul fast float %4992, %4992
  %4997 = fmul fast float %4996, %4995
  %4998 = fadd fast float %4997, %4911
  store float %4998, ptr %4428, align 4, !tbaa !163
  %4999 = add nuw nsw i32 %4912, 1
  br i1 %4758, label %5000, label %5050

5000:                                             ; preds = %4988
  %5001 = load i32, ptr %4, align 4, !tbaa !6
  %5002 = load i32, ptr %12, align 4, !tbaa !6
  %5003 = add nsw i32 %5002, -1
  %5004 = icmp slt i32 %5001, %5003
  br i1 %5004, label %5027, label %5005

5005:                                             ; preds = %5000
  %5006 = icmp eq i32 %5001, %5003
  br i1 %5006, label %5007, label %5043

5007:                                             ; preds = %5005
  store i32 0, ptr %4, align 4, !tbaa !6
  %5008 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5008, ptr %6, align 4, !tbaa !6
  br i1 %4763, label %5050, label %5009

5009:                                             ; preds = %5007, %5037
  %5010 = phi i64 [ %5041, %5037 ], [ 1, %5007 ]
  %5011 = getelementptr inbounds i32, ptr %4, i64 %5010
  %5012 = load i32, ptr %5011, align 4, !tbaa !6
  %5013 = getelementptr inbounds i32, ptr %12, i64 %5010
  %5014 = load i32, ptr %5013, align 4, !tbaa !6
  %5015 = add nsw i32 %5014, -1
  %5016 = icmp slt i32 %5012, %5015
  br i1 %5016, label %5017, label %5035

5017:                                             ; preds = %5009
  br i1 %5004, label %5027, label %5018

5018:                                             ; preds = %5017
  %5019 = shl i64 %5010, 32
  %5020 = add i64 %5019, -4294967296
  %5021 = ashr exact i64 %5020, 32
  %5022 = getelementptr inbounds i32, ptr %7, i64 %5021
  %5023 = load i32, ptr %5022, align 4, !tbaa !6
  %5024 = getelementptr inbounds i32, ptr %6, i64 %5010
  %5025 = load i32, ptr %5024, align 4, !tbaa !6
  %5026 = add nsw i32 %5025, %5023
  store i32 %5026, ptr %5024, align 4, !tbaa !6
  br label %5045

5027:                                             ; preds = %5000, %5017
  %5028 = phi i32 [ %5012, %5017 ], [ %5001, %5000 ]
  %5029 = phi ptr [ %5011, %5017 ], [ %4, %5000 ]
  %5030 = phi i64 [ %5010, %5017 ], [ 0, %5000 ]
  %5031 = add nsw i32 %5028, 1
  store i32 %5031, ptr %5029, align 4, !tbaa !6
  %5032 = getelementptr inbounds i32, ptr %7, i64 %5030
  %5033 = load i32, ptr %5032, align 4, !tbaa !6
  %5034 = getelementptr inbounds i32, ptr %6, i64 %5030
  br label %5045

5035:                                             ; preds = %5009
  %5036 = icmp eq i32 %5012, %5015
  br i1 %5036, label %5037, label %5043

5037:                                             ; preds = %5035
  store i32 0, ptr %5011, align 4, !tbaa !6
  %5038 = getelementptr inbounds i32, ptr %8, i64 %5010
  %5039 = load i32, ptr %5038, align 4, !tbaa !6
  %5040 = getelementptr inbounds i32, ptr %6, i64 %5010
  store i32 %5039, ptr %5040, align 4, !tbaa !6
  %5041 = add nuw nsw i64 %5010, 1
  %5042 = icmp eq i64 %5041, %4761
  br i1 %5042, label %5050, label %5009, !llvm.loop !743

5043:                                             ; preds = %5005, %5035
  %5044 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5045:                                             ; preds = %5018, %5027
  %5046 = phi ptr [ %5034, %5027 ], [ %5011, %5018 ]
  %5047 = phi i32 [ %5033, %5027 ], [ 1, %5018 ]
  %5048 = load i32, ptr %5046, align 4, !tbaa !6
  %5049 = add nsw i32 %5048, %5047
  store i32 %5049, ptr %5046, align 4, !tbaa !6
  br label %5050

5050:                                             ; preds = %5037, %5045, %5007, %4988
  %5051 = icmp eq i32 %4999, %5
  br i1 %5051, label %5686, label %4910, !llvm.loop !744

5052:                                             ; preds = %4438
  %5053 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1196, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

5054:                                             ; preds = %18
  %5055 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5056 = load ptr, ptr %5055, align 8, !tbaa !10
  %5057 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5058 = load ptr, ptr %5057, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5058, align 8, !tbaa !19
  %5059 = icmp eq i32 %13, 0
  br i1 %5059, label %5060, label %5068

5060:                                             ; preds = %5054
  %5061 = load i32, ptr %5056, align 4, !tbaa !6
  %5062 = sitofp i32 %5061 to double
  %5063 = icmp slt i32 %5061, 0
  %5064 = fneg fast double %5062
  %5065 = select i1 %5063, double %5064, double %5062
  %5066 = fmul fast double %5062, %5062
  %5067 = fmul fast double %5066, %5065
  store double %5067, ptr %5058, align 8, !tbaa !19
  br label %5686

5068:                                             ; preds = %5054
  switch i32 %1, label %5676 [
    i32 1, label %5069
    i32 0, label %5374
  ]

5069:                                             ; preds = %5068
  %5070 = getelementptr inbounds i32, ptr %3, i64 %19
  %5071 = load i32, ptr %5070, align 4, !tbaa !6
  %5072 = icmp eq i32 %5071, 0
  %5073 = icmp sgt i32 %5, 0
  br i1 %5072, label %5083, label %5074

5074:                                             ; preds = %5069
  br i1 %5073, label %5075, label %5686

5075:                                             ; preds = %5074
  %5076 = icmp sgt i32 %13, 1
  %5077 = icmp sgt i32 %13, 0
  %5078 = add i32 %13, -2
  %5079 = zext i32 %5078 to i64
  %5080 = zext i32 %13 to i64
  %5081 = add nuw i32 %5, 1
  %5082 = icmp eq i32 %13, 1
  br label %5232

5083:                                             ; preds = %5069
  br i1 %5073, label %5084, label %5686

5084:                                             ; preds = %5083
  %5085 = icmp sgt i32 %13, 1
  %5086 = icmp sgt i32 %13, 0
  %5087 = add i32 %13, -2
  %5088 = zext i32 %5087 to i64
  %5089 = zext i32 %13 to i64
  %5090 = add nuw i32 %5, 1
  %5091 = icmp eq i32 %13, 1
  br label %5092

5092:                                             ; preds = %5084, %5230
  %5093 = phi double [ 0.000000e+00, %5084 ], [ %5180, %5230 ]
  %5094 = phi i32 [ 0, %5084 ], [ %5182, %5230 ]
  %5095 = phi double [ 0.000000e+00, %5084 ], [ %5181, %5230 ]
  %5096 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5085, label %5097, label %5166

5097:                                             ; preds = %5092, %5156
  %5098 = phi i32 [ %5165, %5156 ], [ 0, %5092 ]
  %5099 = phi i64 [ %5107, %5156 ], [ %5089, %5092 ]
  %5100 = phi i64 [ %5164, %5156 ], [ %5088, %5092 ]
  %5101 = phi i32 [ %5162, %5156 ], [ %5096, %5092 ]
  %5102 = sub i32 %5087, %5098
  %5103 = tail call i32 @llvm.smin.i32(i32 %5102, i32 0)
  %5104 = sub i32 %5102, %5103
  %5105 = zext i32 %5104 to i64
  %5106 = add nuw nsw i64 %5105, 1
  %5107 = add nsw i64 %5099, -1
  %5108 = icmp ult i32 %5104, 31
  br i1 %5108, label %5144, label %5109

5109:                                             ; preds = %5097
  %5110 = and i64 %5106, 8589934560
  %5111 = sub i64 %5100, %5110
  br label %5112

5112:                                             ; preds = %5112, %5109
  %5113 = phi i64 [ 0, %5109 ], [ %5136, %5112 ]
  %5114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5132, %5112 ]
  %5115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5133, %5112 ]
  %5116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5134, %5112 ]
  %5117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5109 ], [ %5135, %5112 ]
  %5118 = sub i64 %5100, %5113
  %5119 = getelementptr inbounds i32, ptr %9, i64 %5118
  %5120 = getelementptr inbounds i32, ptr %5119, i64 -7
  %5121 = load <8 x i32>, ptr %5120, align 4, !tbaa !6
  %5122 = shufflevector <8 x i32> %5121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5123 = getelementptr inbounds i32, ptr %5119, i64 -15
  %5124 = load <8 x i32>, ptr %5123, align 4, !tbaa !6
  %5125 = shufflevector <8 x i32> %5124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5126 = getelementptr inbounds i32, ptr %5119, i64 -23
  %5127 = load <8 x i32>, ptr %5126, align 4, !tbaa !6
  %5128 = shufflevector <8 x i32> %5127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5129 = getelementptr inbounds i32, ptr %5119, i64 -31
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !6
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = mul <8 x i32> %5122, %5114
  %5133 = mul <8 x i32> %5125, %5115
  %5134 = mul <8 x i32> %5128, %5116
  %5135 = mul <8 x i32> %5131, %5117
  %5136 = add nuw i64 %5113, 32
  %5137 = icmp eq i64 %5136, %5110
  br i1 %5137, label %5138, label %5112, !llvm.loop !745

5138:                                             ; preds = %5112
  %5139 = mul <8 x i32> %5133, %5132
  %5140 = mul <8 x i32> %5134, %5139
  %5141 = mul <8 x i32> %5135, %5140
  %5142 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5141)
  %5143 = icmp eq i64 %5106, %5110
  br i1 %5143, label %5156, label %5144

5144:                                             ; preds = %5097, %5138
  %5145 = phi i64 [ %5100, %5097 ], [ %5111, %5138 ]
  %5146 = phi i32 [ 1, %5097 ], [ %5142, %5138 ]
  br label %5147

5147:                                             ; preds = %5144, %5147
  %5148 = phi i64 [ %5153, %5147 ], [ %5145, %5144 ]
  %5149 = phi i32 [ %5152, %5147 ], [ %5146, %5144 ]
  %5150 = getelementptr inbounds i32, ptr %9, i64 %5148
  %5151 = load i32, ptr %5150, align 4, !tbaa !6
  %5152 = mul nsw i32 %5151, %5149
  %5153 = add nsw i64 %5148, -1
  %5154 = trunc i64 %5148 to i32
  %5155 = icmp sgt i32 %5154, 0
  br i1 %5155, label %5147, label %5156, !llvm.loop !746

5156:                                             ; preds = %5147, %5138
  %5157 = phi i32 [ %5142, %5138 ], [ %5152, %5147 ]
  %5158 = and i64 %5107, 4294967295
  %5159 = getelementptr inbounds i32, ptr %6, i64 %5158
  %5160 = load i32, ptr %5159, align 4, !tbaa !6
  %5161 = mul nsw i32 %5160, %5157
  %5162 = add nsw i32 %5161, %5101
  %5163 = icmp sgt i64 %5099, 2
  %5164 = add nsw i64 %5100, -1
  %5165 = add i32 %5098, 1
  br i1 %5163, label %5097, label %5166, !llvm.loop !747

5166:                                             ; preds = %5156, %5092
  %5167 = phi i32 [ %5096, %5092 ], [ %5162, %5156 ]
  %5168 = sext i32 %5167 to i64
  %5169 = getelementptr inbounds double, ptr %2, i64 %5168
  %5170 = load double, ptr %5169, align 8, !tbaa !19
  %5171 = getelementptr inbounds i32, ptr %5056, i64 %5168
  %5172 = load i32, ptr %5171, align 4, !tbaa !6
  %5173 = sitofp i32 %5172 to double
  %5174 = fmul fast double %5170, %5173
  %5175 = fcmp fast olt double %5174, 0.000000e+00
  %5176 = fneg fast double %5174
  %5177 = select nnan ninf i1 %5175, double %5176, double %5174
  %5178 = fmul fast double %5174, %5174
  %5179 = fmul fast double %5178, %5177
  %5180 = fadd fast double %5179, %5093
  store double %5180, ptr %5058, align 8, !tbaa !19
  %5181 = fadd fast double %5170, %5095
  %5182 = add nuw nsw i32 %5094, 1
  br i1 %5086, label %5183, label %5230

5183:                                             ; preds = %5166
  %5184 = load i32, ptr %4, align 4, !tbaa !6
  %5185 = load i32, ptr %12, align 4, !tbaa !6
  %5186 = add nsw i32 %5185, -1
  %5187 = icmp slt i32 %5184, %5186
  br i1 %5187, label %5207, label %5188

5188:                                             ; preds = %5183
  %5189 = icmp eq i32 %5184, %5186
  br i1 %5189, label %5190, label %5223

5190:                                             ; preds = %5188
  store i32 0, ptr %4, align 4, !tbaa !6
  %5191 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5191, ptr %6, align 4, !tbaa !6
  br i1 %5091, label %5230, label %5192

5192:                                             ; preds = %5190, %5217
  %5193 = phi i64 [ %5221, %5217 ], [ 1, %5190 ]
  %5194 = getelementptr inbounds i32, ptr %4, i64 %5193
  %5195 = load i32, ptr %5194, align 4, !tbaa !6
  %5196 = getelementptr inbounds i32, ptr %12, i64 %5193
  %5197 = load i32, ptr %5196, align 4, !tbaa !6
  %5198 = add nsw i32 %5197, -1
  %5199 = icmp slt i32 %5195, %5198
  br i1 %5199, label %5200, label %5215

5200:                                             ; preds = %5192
  br i1 %5187, label %5207, label %5201

5201:                                             ; preds = %5200
  %5202 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5203 = load i32, ptr %5202, align 4, !tbaa !6
  %5204 = getelementptr inbounds i32, ptr %6, i64 %5193
  %5205 = load i32, ptr %5204, align 4, !tbaa !6
  %5206 = add nsw i32 %5205, %5203
  store i32 %5206, ptr %5204, align 4, !tbaa !6
  br label %5225

5207:                                             ; preds = %5183, %5200
  %5208 = phi i32 [ %5195, %5200 ], [ %5184, %5183 ]
  %5209 = phi ptr [ %5194, %5200 ], [ %4, %5183 ]
  %5210 = phi i64 [ %5193, %5200 ], [ 0, %5183 ]
  %5211 = add nsw i32 %5208, 1
  store i32 %5211, ptr %5209, align 4, !tbaa !6
  %5212 = getelementptr inbounds i32, ptr %7, i64 %5210
  %5213 = load i32, ptr %5212, align 4, !tbaa !6
  %5214 = getelementptr inbounds i32, ptr %6, i64 %5210
  br label %5225

5215:                                             ; preds = %5192
  %5216 = icmp eq i32 %5195, %5198
  br i1 %5216, label %5217, label %5223

5217:                                             ; preds = %5215
  store i32 0, ptr %5194, align 4, !tbaa !6
  %5218 = getelementptr inbounds i32, ptr %8, i64 %5193
  %5219 = load i32, ptr %5218, align 4, !tbaa !6
  %5220 = getelementptr inbounds i32, ptr %6, i64 %5193
  store i32 %5219, ptr %5220, align 4, !tbaa !6
  %5221 = add nuw nsw i64 %5193, 1
  %5222 = icmp eq i64 %5221, %5089
  br i1 %5222, label %5230, label %5192, !llvm.loop !748

5223:                                             ; preds = %5188, %5215
  %5224 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5225:                                             ; preds = %5201, %5207
  %5226 = phi ptr [ %5214, %5207 ], [ %5194, %5201 ]
  %5227 = phi i32 [ %5213, %5207 ], [ 1, %5201 ]
  %5228 = load i32, ptr %5226, align 4, !tbaa !6
  %5229 = add nsw i32 %5228, %5227
  store i32 %5229, ptr %5226, align 4, !tbaa !6
  br label %5230

5230:                                             ; preds = %5217, %5225, %5190, %5166
  %5231 = icmp eq i32 %5182, %5
  br i1 %5231, label %5686, label %5092, !llvm.loop !749

5232:                                             ; preds = %5075, %5372
  %5233 = phi double [ 0.000000e+00, %5075 ], [ %5320, %5372 ]
  %5234 = phi i32 [ 0, %5075 ], [ %5321, %5372 ]
  %5235 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5076, label %5236, label %5305

5236:                                             ; preds = %5232, %5295
  %5237 = phi i32 [ %5304, %5295 ], [ 0, %5232 ]
  %5238 = phi i64 [ %5246, %5295 ], [ %5080, %5232 ]
  %5239 = phi i64 [ %5303, %5295 ], [ %5079, %5232 ]
  %5240 = phi i32 [ %5301, %5295 ], [ %5235, %5232 ]
  %5241 = sub i32 %5078, %5237
  %5242 = tail call i32 @llvm.smin.i32(i32 %5241, i32 0)
  %5243 = sub i32 %5241, %5242
  %5244 = zext i32 %5243 to i64
  %5245 = add nuw nsw i64 %5244, 1
  %5246 = add nsw i64 %5238, -1
  %5247 = icmp ult i32 %5243, 31
  br i1 %5247, label %5283, label %5248

5248:                                             ; preds = %5236
  %5249 = and i64 %5245, 8589934560
  %5250 = sub i64 %5239, %5249
  br label %5251

5251:                                             ; preds = %5251, %5248
  %5252 = phi i64 [ 0, %5248 ], [ %5275, %5251 ]
  %5253 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5271, %5251 ]
  %5254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5272, %5251 ]
  %5255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5273, %5251 ]
  %5256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5248 ], [ %5274, %5251 ]
  %5257 = sub i64 %5239, %5252
  %5258 = getelementptr inbounds i32, ptr %11, i64 %5257
  %5259 = getelementptr inbounds i32, ptr %5258, i64 -7
  %5260 = load <8 x i32>, ptr %5259, align 4, !tbaa !6
  %5261 = shufflevector <8 x i32> %5260, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5262 = getelementptr inbounds i32, ptr %5258, i64 -15
  %5263 = load <8 x i32>, ptr %5262, align 4, !tbaa !6
  %5264 = shufflevector <8 x i32> %5263, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5265 = getelementptr inbounds i32, ptr %5258, i64 -23
  %5266 = load <8 x i32>, ptr %5265, align 4, !tbaa !6
  %5267 = shufflevector <8 x i32> %5266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5268 = getelementptr inbounds i32, ptr %5258, i64 -31
  %5269 = load <8 x i32>, ptr %5268, align 4, !tbaa !6
  %5270 = shufflevector <8 x i32> %5269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5271 = mul <8 x i32> %5261, %5253
  %5272 = mul <8 x i32> %5264, %5254
  %5273 = mul <8 x i32> %5267, %5255
  %5274 = mul <8 x i32> %5270, %5256
  %5275 = add nuw i64 %5252, 32
  %5276 = icmp eq i64 %5275, %5249
  br i1 %5276, label %5277, label %5251, !llvm.loop !750

5277:                                             ; preds = %5251
  %5278 = mul <8 x i32> %5272, %5271
  %5279 = mul <8 x i32> %5273, %5278
  %5280 = mul <8 x i32> %5274, %5279
  %5281 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5280)
  %5282 = icmp eq i64 %5245, %5249
  br i1 %5282, label %5295, label %5283

5283:                                             ; preds = %5236, %5277
  %5284 = phi i64 [ %5239, %5236 ], [ %5250, %5277 ]
  %5285 = phi i32 [ 1, %5236 ], [ %5281, %5277 ]
  br label %5286

5286:                                             ; preds = %5283, %5286
  %5287 = phi i64 [ %5292, %5286 ], [ %5284, %5283 ]
  %5288 = phi i32 [ %5291, %5286 ], [ %5285, %5283 ]
  %5289 = getelementptr inbounds i32, ptr %11, i64 %5287
  %5290 = load i32, ptr %5289, align 4, !tbaa !6
  %5291 = mul nsw i32 %5290, %5288
  %5292 = add nsw i64 %5287, -1
  %5293 = trunc i64 %5287 to i32
  %5294 = icmp sgt i32 %5293, 0
  br i1 %5294, label %5286, label %5295, !llvm.loop !751

5295:                                             ; preds = %5286, %5277
  %5296 = phi i32 [ %5281, %5277 ], [ %5291, %5286 ]
  %5297 = and i64 %5246, 4294967295
  %5298 = getelementptr inbounds i32, ptr %6, i64 %5297
  %5299 = load i32, ptr %5298, align 4, !tbaa !6
  %5300 = mul nsw i32 %5299, %5296
  %5301 = add nsw i32 %5300, %5240
  %5302 = icmp sgt i64 %5238, 2
  %5303 = add nsw i64 %5239, -1
  %5304 = add i32 %5237, 1
  br i1 %5302, label %5236, label %5305, !llvm.loop !752

5305:                                             ; preds = %5295, %5232
  %5306 = phi i32 [ %5235, %5232 ], [ %5301, %5295 ]
  %5307 = icmp slt i32 %5306, %5
  br i1 %5307, label %5310, label %5308

5308:                                             ; preds = %5305
  %5309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

5310:                                             ; preds = %5305
  %5311 = sext i32 %5306 to i64
  %5312 = getelementptr inbounds i32, ptr %5056, i64 %5311
  %5313 = load i32, ptr %5312, align 4, !tbaa !6
  %5314 = sitofp i32 %5313 to double
  %5315 = icmp slt i32 %5313, 0
  %5316 = fneg fast double %5314
  %5317 = select i1 %5315, double %5316, double %5314
  %5318 = fmul fast double %5314, %5314
  %5319 = fmul fast double %5318, %5317
  %5320 = fadd fast double %5319, %5233
  store double %5320, ptr %5058, align 8, !tbaa !19
  %5321 = add nuw nsw i32 %5234, 1
  br i1 %5077, label %5322, label %5372

5322:                                             ; preds = %5310
  %5323 = load i32, ptr %4, align 4, !tbaa !6
  %5324 = load i32, ptr %12, align 4, !tbaa !6
  %5325 = add nsw i32 %5324, -1
  %5326 = icmp slt i32 %5323, %5325
  br i1 %5326, label %5349, label %5327

5327:                                             ; preds = %5322
  %5328 = icmp eq i32 %5323, %5325
  br i1 %5328, label %5329, label %5365

5329:                                             ; preds = %5327
  store i32 0, ptr %4, align 4, !tbaa !6
  %5330 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5330, ptr %6, align 4, !tbaa !6
  br i1 %5082, label %5372, label %5331

5331:                                             ; preds = %5329, %5359
  %5332 = phi i64 [ %5363, %5359 ], [ 1, %5329 ]
  %5333 = getelementptr inbounds i32, ptr %4, i64 %5332
  %5334 = load i32, ptr %5333, align 4, !tbaa !6
  %5335 = getelementptr inbounds i32, ptr %12, i64 %5332
  %5336 = load i32, ptr %5335, align 4, !tbaa !6
  %5337 = add nsw i32 %5336, -1
  %5338 = icmp slt i32 %5334, %5337
  br i1 %5338, label %5339, label %5357

5339:                                             ; preds = %5331
  br i1 %5326, label %5349, label %5340

5340:                                             ; preds = %5339
  %5341 = shl i64 %5332, 32
  %5342 = add i64 %5341, -4294967296
  %5343 = ashr exact i64 %5342, 32
  %5344 = getelementptr inbounds i32, ptr %7, i64 %5343
  %5345 = load i32, ptr %5344, align 4, !tbaa !6
  %5346 = getelementptr inbounds i32, ptr %6, i64 %5332
  %5347 = load i32, ptr %5346, align 4, !tbaa !6
  %5348 = add nsw i32 %5347, %5345
  store i32 %5348, ptr %5346, align 4, !tbaa !6
  br label %5367

5349:                                             ; preds = %5322, %5339
  %5350 = phi i32 [ %5334, %5339 ], [ %5323, %5322 ]
  %5351 = phi ptr [ %5333, %5339 ], [ %4, %5322 ]
  %5352 = phi i64 [ %5332, %5339 ], [ 0, %5322 ]
  %5353 = add nsw i32 %5350, 1
  store i32 %5353, ptr %5351, align 4, !tbaa !6
  %5354 = getelementptr inbounds i32, ptr %7, i64 %5352
  %5355 = load i32, ptr %5354, align 4, !tbaa !6
  %5356 = getelementptr inbounds i32, ptr %6, i64 %5352
  br label %5367

5357:                                             ; preds = %5331
  %5358 = icmp eq i32 %5334, %5337
  br i1 %5358, label %5359, label %5365

5359:                                             ; preds = %5357
  store i32 0, ptr %5333, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %8, i64 %5332
  %5361 = load i32, ptr %5360, align 4, !tbaa !6
  %5362 = getelementptr inbounds i32, ptr %6, i64 %5332
  store i32 %5361, ptr %5362, align 4, !tbaa !6
  %5363 = add nuw nsw i64 %5332, 1
  %5364 = icmp eq i64 %5363, %5080
  br i1 %5364, label %5372, label %5331, !llvm.loop !753

5365:                                             ; preds = %5327, %5357
  %5366 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5367:                                             ; preds = %5340, %5349
  %5368 = phi ptr [ %5356, %5349 ], [ %5333, %5340 ]
  %5369 = phi i32 [ %5355, %5349 ], [ 1, %5340 ]
  %5370 = load i32, ptr %5368, align 4, !tbaa !6
  %5371 = add nsw i32 %5370, %5369
  store i32 %5371, ptr %5368, align 4, !tbaa !6
  br label %5372

5372:                                             ; preds = %5359, %5367, %5329, %5310
  %5373 = icmp eq i32 %5321, %5
  br i1 %5373, label %5686, label %5232, !llvm.loop !754

5374:                                             ; preds = %5068
  %5375 = getelementptr inbounds i32, ptr %3, i64 %19
  %5376 = load i32, ptr %5375, align 4, !tbaa !6
  %5377 = icmp eq i32 %5376, 0
  %5378 = icmp sgt i32 %5, 0
  br i1 %5377, label %5388, label %5379

5379:                                             ; preds = %5374
  br i1 %5378, label %5380, label %5686

5380:                                             ; preds = %5379
  %5381 = icmp sgt i32 %13, 1
  %5382 = icmp sgt i32 %13, 0
  %5383 = add i32 %13, -2
  %5384 = zext i32 %5383 to i64
  %5385 = zext i32 %13 to i64
  %5386 = add nuw i32 %5, 1
  %5387 = icmp eq i32 %13, 1
  br label %5534

5388:                                             ; preds = %5374
  br i1 %5378, label %5389, label %5686

5389:                                             ; preds = %5388
  %5390 = icmp sgt i32 %13, 1
  %5391 = icmp sgt i32 %13, 0
  %5392 = add i32 %13, -2
  %5393 = zext i32 %5392 to i64
  %5394 = zext i32 %13 to i64
  %5395 = add nuw i32 %5, 1
  %5396 = icmp eq i32 %13, 1
  br label %5397

5397:                                             ; preds = %5389, %5532
  %5398 = phi double [ 0.000000e+00, %5389 ], [ %5482, %5532 ]
  %5399 = phi i32 [ 0, %5389 ], [ %5484, %5532 ]
  %5400 = phi double [ 0.000000e+00, %5389 ], [ %5483, %5532 ]
  %5401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5390, label %5402, label %5471

5402:                                             ; preds = %5397, %5461
  %5403 = phi i32 [ %5470, %5461 ], [ 0, %5397 ]
  %5404 = phi i64 [ %5412, %5461 ], [ %5394, %5397 ]
  %5405 = phi i64 [ %5469, %5461 ], [ %5393, %5397 ]
  %5406 = phi i32 [ %5467, %5461 ], [ %5401, %5397 ]
  %5407 = sub i32 %5392, %5403
  %5408 = tail call i32 @llvm.smin.i32(i32 %5407, i32 0)
  %5409 = sub i32 %5407, %5408
  %5410 = zext i32 %5409 to i64
  %5411 = add nuw nsw i64 %5410, 1
  %5412 = add nsw i64 %5404, -1
  %5413 = icmp ult i32 %5409, 31
  br i1 %5413, label %5449, label %5414

5414:                                             ; preds = %5402
  %5415 = and i64 %5411, 8589934560
  %5416 = sub i64 %5405, %5415
  br label %5417

5417:                                             ; preds = %5417, %5414
  %5418 = phi i64 [ 0, %5414 ], [ %5441, %5417 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5437, %5417 ]
  %5420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5438, %5417 ]
  %5421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5439, %5417 ]
  %5422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5414 ], [ %5440, %5417 ]
  %5423 = sub i64 %5405, %5418
  %5424 = getelementptr inbounds i32, ptr %9, i64 %5423
  %5425 = getelementptr inbounds i32, ptr %5424, i64 -7
  %5426 = load <8 x i32>, ptr %5425, align 4, !tbaa !6
  %5427 = shufflevector <8 x i32> %5426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5428 = getelementptr inbounds i32, ptr %5424, i64 -15
  %5429 = load <8 x i32>, ptr %5428, align 4, !tbaa !6
  %5430 = shufflevector <8 x i32> %5429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5431 = getelementptr inbounds i32, ptr %5424, i64 -23
  %5432 = load <8 x i32>, ptr %5431, align 4, !tbaa !6
  %5433 = shufflevector <8 x i32> %5432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5434 = getelementptr inbounds i32, ptr %5424, i64 -31
  %5435 = load <8 x i32>, ptr %5434, align 4, !tbaa !6
  %5436 = shufflevector <8 x i32> %5435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5437 = mul <8 x i32> %5427, %5419
  %5438 = mul <8 x i32> %5430, %5420
  %5439 = mul <8 x i32> %5433, %5421
  %5440 = mul <8 x i32> %5436, %5422
  %5441 = add nuw i64 %5418, 32
  %5442 = icmp eq i64 %5441, %5415
  br i1 %5442, label %5443, label %5417, !llvm.loop !755

5443:                                             ; preds = %5417
  %5444 = mul <8 x i32> %5438, %5437
  %5445 = mul <8 x i32> %5439, %5444
  %5446 = mul <8 x i32> %5440, %5445
  %5447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5446)
  %5448 = icmp eq i64 %5411, %5415
  br i1 %5448, label %5461, label %5449

5449:                                             ; preds = %5402, %5443
  %5450 = phi i64 [ %5405, %5402 ], [ %5416, %5443 ]
  %5451 = phi i32 [ 1, %5402 ], [ %5447, %5443 ]
  br label %5452

5452:                                             ; preds = %5449, %5452
  %5453 = phi i64 [ %5458, %5452 ], [ %5450, %5449 ]
  %5454 = phi i32 [ %5457, %5452 ], [ %5451, %5449 ]
  %5455 = getelementptr inbounds i32, ptr %9, i64 %5453
  %5456 = load i32, ptr %5455, align 4, !tbaa !6
  %5457 = mul nsw i32 %5456, %5454
  %5458 = add nsw i64 %5453, -1
  %5459 = trunc i64 %5453 to i32
  %5460 = icmp sgt i32 %5459, 0
  br i1 %5460, label %5452, label %5461, !llvm.loop !756

5461:                                             ; preds = %5452, %5443
  %5462 = phi i32 [ %5447, %5443 ], [ %5457, %5452 ]
  %5463 = and i64 %5412, 4294967295
  %5464 = getelementptr inbounds i32, ptr %6, i64 %5463
  %5465 = load i32, ptr %5464, align 4, !tbaa !6
  %5466 = mul nsw i32 %5465, %5462
  %5467 = add nsw i32 %5466, %5406
  %5468 = icmp sgt i64 %5404, 2
  %5469 = add nsw i64 %5405, -1
  %5470 = add i32 %5403, 1
  br i1 %5468, label %5402, label %5471, !llvm.loop !757

5471:                                             ; preds = %5461, %5397
  %5472 = phi i32 [ %5401, %5397 ], [ %5467, %5461 ]
  %5473 = sext i32 %5472 to i64
  %5474 = getelementptr inbounds i32, ptr %5056, i64 %5473
  %5475 = load i32, ptr %5474, align 4, !tbaa !6
  %5476 = sitofp i32 %5475 to double
  %5477 = icmp slt i32 %5475, 0
  %5478 = fneg fast double %5476
  %5479 = select i1 %5477, double %5478, double %5476
  %5480 = fmul fast double %5476, %5476
  %5481 = fmul fast double %5480, %5479
  %5482 = fadd fast double %5481, %5398
  %5483 = fadd fast double %5400, 1.000000e+00
  %5484 = add nuw nsw i32 %5399, 1
  br i1 %5391, label %5485, label %5532

5485:                                             ; preds = %5471
  %5486 = load i32, ptr %4, align 4, !tbaa !6
  %5487 = load i32, ptr %12, align 4, !tbaa !6
  %5488 = add nsw i32 %5487, -1
  %5489 = icmp slt i32 %5486, %5488
  br i1 %5489, label %5509, label %5490

5490:                                             ; preds = %5485
  %5491 = icmp eq i32 %5486, %5488
  br i1 %5491, label %5492, label %5525

5492:                                             ; preds = %5490
  store i32 0, ptr %4, align 4, !tbaa !6
  %5493 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5493, ptr %6, align 4, !tbaa !6
  br i1 %5396, label %5532, label %5494

5494:                                             ; preds = %5492, %5519
  %5495 = phi i64 [ %5523, %5519 ], [ 1, %5492 ]
  %5496 = getelementptr inbounds i32, ptr %4, i64 %5495
  %5497 = load i32, ptr %5496, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %12, i64 %5495
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = add nsw i32 %5499, -1
  %5501 = icmp slt i32 %5497, %5500
  br i1 %5501, label %5502, label %5517

5502:                                             ; preds = %5494
  br i1 %5489, label %5509, label %5503

5503:                                             ; preds = %5502
  %5504 = getelementptr inbounds i32, ptr %7, i64 %5495
  %5505 = load i32, ptr %5504, align 4, !tbaa !6
  %5506 = getelementptr inbounds i32, ptr %6, i64 %5495
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = add nsw i32 %5507, %5505
  store i32 %5508, ptr %5506, align 4, !tbaa !6
  br label %5527

5509:                                             ; preds = %5485, %5502
  %5510 = phi i32 [ %5497, %5502 ], [ %5486, %5485 ]
  %5511 = phi ptr [ %5496, %5502 ], [ %4, %5485 ]
  %5512 = phi i64 [ %5495, %5502 ], [ 0, %5485 ]
  %5513 = add nsw i32 %5510, 1
  store i32 %5513, ptr %5511, align 4, !tbaa !6
  %5514 = getelementptr inbounds i32, ptr %7, i64 %5512
  %5515 = load i32, ptr %5514, align 4, !tbaa !6
  %5516 = getelementptr inbounds i32, ptr %6, i64 %5512
  br label %5527

5517:                                             ; preds = %5494
  %5518 = icmp eq i32 %5497, %5500
  br i1 %5518, label %5519, label %5525

5519:                                             ; preds = %5517
  store i32 0, ptr %5496, align 4, !tbaa !6
  %5520 = getelementptr inbounds i32, ptr %8, i64 %5495
  %5521 = load i32, ptr %5520, align 4, !tbaa !6
  %5522 = getelementptr inbounds i32, ptr %6, i64 %5495
  store i32 %5521, ptr %5522, align 4, !tbaa !6
  %5523 = add nuw nsw i64 %5495, 1
  %5524 = icmp eq i64 %5523, %5394
  br i1 %5524, label %5532, label %5494, !llvm.loop !758

5525:                                             ; preds = %5490, %5517
  store double %5482, ptr %5058, align 8, !tbaa !19
  %5526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5527:                                             ; preds = %5503, %5509
  %5528 = phi ptr [ %5516, %5509 ], [ %5496, %5503 ]
  %5529 = phi i32 [ %5515, %5509 ], [ 1, %5503 ]
  %5530 = load i32, ptr %5528, align 4, !tbaa !6
  %5531 = add nsw i32 %5530, %5529
  store i32 %5531, ptr %5528, align 4, !tbaa !6
  br label %5532

5532:                                             ; preds = %5519, %5527, %5492, %5471
  %5533 = icmp eq i32 %5484, %5
  br i1 %5533, label %5685, label %5397, !llvm.loop !759

5534:                                             ; preds = %5380, %5674
  %5535 = phi double [ 0.000000e+00, %5380 ], [ %5622, %5674 ]
  %5536 = phi i32 [ 0, %5380 ], [ %5623, %5674 ]
  %5537 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5381, label %5538, label %5607

5538:                                             ; preds = %5534, %5597
  %5539 = phi i32 [ %5606, %5597 ], [ 0, %5534 ]
  %5540 = phi i64 [ %5548, %5597 ], [ %5385, %5534 ]
  %5541 = phi i64 [ %5605, %5597 ], [ %5384, %5534 ]
  %5542 = phi i32 [ %5603, %5597 ], [ %5537, %5534 ]
  %5543 = sub i32 %5383, %5539
  %5544 = tail call i32 @llvm.smin.i32(i32 %5543, i32 0)
  %5545 = sub i32 %5543, %5544
  %5546 = zext i32 %5545 to i64
  %5547 = add nuw nsw i64 %5546, 1
  %5548 = add nsw i64 %5540, -1
  %5549 = icmp ult i32 %5545, 31
  br i1 %5549, label %5585, label %5550

5550:                                             ; preds = %5538
  %5551 = and i64 %5547, 8589934560
  %5552 = sub i64 %5541, %5551
  br label %5553

5553:                                             ; preds = %5553, %5550
  %5554 = phi i64 [ 0, %5550 ], [ %5577, %5553 ]
  %5555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5573, %5553 ]
  %5556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5574, %5553 ]
  %5557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5575, %5553 ]
  %5558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5550 ], [ %5576, %5553 ]
  %5559 = sub i64 %5541, %5554
  %5560 = getelementptr inbounds i32, ptr %11, i64 %5559
  %5561 = getelementptr inbounds i32, ptr %5560, i64 -7
  %5562 = load <8 x i32>, ptr %5561, align 4, !tbaa !6
  %5563 = shufflevector <8 x i32> %5562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5564 = getelementptr inbounds i32, ptr %5560, i64 -15
  %5565 = load <8 x i32>, ptr %5564, align 4, !tbaa !6
  %5566 = shufflevector <8 x i32> %5565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5567 = getelementptr inbounds i32, ptr %5560, i64 -23
  %5568 = load <8 x i32>, ptr %5567, align 4, !tbaa !6
  %5569 = shufflevector <8 x i32> %5568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5570 = getelementptr inbounds i32, ptr %5560, i64 -31
  %5571 = load <8 x i32>, ptr %5570, align 4, !tbaa !6
  %5572 = shufflevector <8 x i32> %5571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5573 = mul <8 x i32> %5563, %5555
  %5574 = mul <8 x i32> %5566, %5556
  %5575 = mul <8 x i32> %5569, %5557
  %5576 = mul <8 x i32> %5572, %5558
  %5577 = add nuw i64 %5554, 32
  %5578 = icmp eq i64 %5577, %5551
  br i1 %5578, label %5579, label %5553, !llvm.loop !760

5579:                                             ; preds = %5553
  %5580 = mul <8 x i32> %5574, %5573
  %5581 = mul <8 x i32> %5575, %5580
  %5582 = mul <8 x i32> %5576, %5581
  %5583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5582)
  %5584 = icmp eq i64 %5547, %5551
  br i1 %5584, label %5597, label %5585

5585:                                             ; preds = %5538, %5579
  %5586 = phi i64 [ %5541, %5538 ], [ %5552, %5579 ]
  %5587 = phi i32 [ 1, %5538 ], [ %5583, %5579 ]
  br label %5588

5588:                                             ; preds = %5585, %5588
  %5589 = phi i64 [ %5594, %5588 ], [ %5586, %5585 ]
  %5590 = phi i32 [ %5593, %5588 ], [ %5587, %5585 ]
  %5591 = getelementptr inbounds i32, ptr %11, i64 %5589
  %5592 = load i32, ptr %5591, align 4, !tbaa !6
  %5593 = mul nsw i32 %5592, %5590
  %5594 = add nsw i64 %5589, -1
  %5595 = trunc i64 %5589 to i32
  %5596 = icmp sgt i32 %5595, 0
  br i1 %5596, label %5588, label %5597, !llvm.loop !761

5597:                                             ; preds = %5588, %5579
  %5598 = phi i32 [ %5583, %5579 ], [ %5593, %5588 ]
  %5599 = and i64 %5548, 4294967295
  %5600 = getelementptr inbounds i32, ptr %6, i64 %5599
  %5601 = load i32, ptr %5600, align 4, !tbaa !6
  %5602 = mul nsw i32 %5601, %5598
  %5603 = add nsw i32 %5602, %5542
  %5604 = icmp sgt i64 %5540, 2
  %5605 = add nsw i64 %5541, -1
  %5606 = add i32 %5539, 1
  br i1 %5604, label %5538, label %5607, !llvm.loop !762

5607:                                             ; preds = %5597, %5534
  %5608 = phi i32 [ %5537, %5534 ], [ %5603, %5597 ]
  %5609 = icmp slt i32 %5608, %5
  br i1 %5609, label %5612, label %5610

5610:                                             ; preds = %5607
  %5611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5691

5612:                                             ; preds = %5607
  %5613 = sext i32 %5608 to i64
  %5614 = getelementptr inbounds i32, ptr %5056, i64 %5613
  %5615 = load i32, ptr %5614, align 4, !tbaa !6
  %5616 = sitofp i32 %5615 to double
  %5617 = icmp slt i32 %5615, 0
  %5618 = fneg fast double %5616
  %5619 = select i1 %5617, double %5618, double %5616
  %5620 = fmul fast double %5616, %5616
  %5621 = fmul fast double %5620, %5619
  %5622 = fadd fast double %5621, %5535
  store double %5622, ptr %5058, align 8, !tbaa !19
  %5623 = add nuw nsw i32 %5536, 1
  br i1 %5382, label %5624, label %5674

5624:                                             ; preds = %5612
  %5625 = load i32, ptr %4, align 4, !tbaa !6
  %5626 = load i32, ptr %12, align 4, !tbaa !6
  %5627 = add nsw i32 %5626, -1
  %5628 = icmp slt i32 %5625, %5627
  br i1 %5628, label %5651, label %5629

5629:                                             ; preds = %5624
  %5630 = icmp eq i32 %5625, %5627
  br i1 %5630, label %5631, label %5667

5631:                                             ; preds = %5629
  store i32 0, ptr %4, align 4, !tbaa !6
  %5632 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5632, ptr %6, align 4, !tbaa !6
  br i1 %5387, label %5674, label %5633

5633:                                             ; preds = %5631, %5661
  %5634 = phi i64 [ %5665, %5661 ], [ 1, %5631 ]
  %5635 = getelementptr inbounds i32, ptr %4, i64 %5634
  %5636 = load i32, ptr %5635, align 4, !tbaa !6
  %5637 = getelementptr inbounds i32, ptr %12, i64 %5634
  %5638 = load i32, ptr %5637, align 4, !tbaa !6
  %5639 = add nsw i32 %5638, -1
  %5640 = icmp slt i32 %5636, %5639
  br i1 %5640, label %5641, label %5659

5641:                                             ; preds = %5633
  br i1 %5628, label %5651, label %5642

5642:                                             ; preds = %5641
  %5643 = shl i64 %5634, 32
  %5644 = add i64 %5643, -4294967296
  %5645 = ashr exact i64 %5644, 32
  %5646 = getelementptr inbounds i32, ptr %7, i64 %5645
  %5647 = load i32, ptr %5646, align 4, !tbaa !6
  %5648 = getelementptr inbounds i32, ptr %6, i64 %5634
  %5649 = load i32, ptr %5648, align 4, !tbaa !6
  %5650 = add nsw i32 %5649, %5647
  store i32 %5650, ptr %5648, align 4, !tbaa !6
  br label %5669

5651:                                             ; preds = %5624, %5641
  %5652 = phi i32 [ %5636, %5641 ], [ %5625, %5624 ]
  %5653 = phi ptr [ %5635, %5641 ], [ %4, %5624 ]
  %5654 = phi i64 [ %5634, %5641 ], [ 0, %5624 ]
  %5655 = add nsw i32 %5652, 1
  store i32 %5655, ptr %5653, align 4, !tbaa !6
  %5656 = getelementptr inbounds i32, ptr %7, i64 %5654
  %5657 = load i32, ptr %5656, align 4, !tbaa !6
  %5658 = getelementptr inbounds i32, ptr %6, i64 %5654
  br label %5669

5659:                                             ; preds = %5633
  %5660 = icmp eq i32 %5636, %5639
  br i1 %5660, label %5661, label %5667

5661:                                             ; preds = %5659
  store i32 0, ptr %5635, align 4, !tbaa !6
  %5662 = getelementptr inbounds i32, ptr %8, i64 %5634
  %5663 = load i32, ptr %5662, align 4, !tbaa !6
  %5664 = getelementptr inbounds i32, ptr %6, i64 %5634
  store i32 %5663, ptr %5664, align 4, !tbaa !6
  %5665 = add nuw nsw i64 %5634, 1
  %5666 = icmp eq i64 %5665, %5385
  br i1 %5666, label %5674, label %5633, !llvm.loop !763

5667:                                             ; preds = %5629, %5659
  %5668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5691

5669:                                             ; preds = %5642, %5651
  %5670 = phi ptr [ %5658, %5651 ], [ %5635, %5642 ]
  %5671 = phi i32 [ %5657, %5651 ], [ 1, %5642 ]
  %5672 = load i32, ptr %5670, align 4, !tbaa !6
  %5673 = add nsw i32 %5672, %5671
  store i32 %5673, ptr %5670, align 4, !tbaa !6
  br label %5674

5674:                                             ; preds = %5661, %5669, %5631, %5612
  %5675 = icmp eq i32 %5623, %5
  br i1 %5675, label %5686, label %5534, !llvm.loop !764

5676:                                             ; preds = %5068
  %5677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1201, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5686

5678:                                             ; preds = %2089
  store i16 %2039, ptr %1910, align 2, !tbaa !79
  br label %5686

5679:                                             ; preds = %2398
  store i16 %2348, ptr %1910, align 2, !tbaa !79
  br label %5686

5680:                                             ; preds = %3350
  store i64 %3300, ptr %3176, align 8, !tbaa !121
  br label %5686

5681:                                             ; preds = %3654
  store i64 %3604, ptr %3176, align 8, !tbaa !121
  br label %5686

5682:                                             ; preds = %4278
  store double %4228, ptr %3804, align 8, !tbaa !19
  br label %5686

5683:                                             ; preds = %4603
  store float %4553, ptr %4428, align 4, !tbaa !163
  br label %5686

5684:                                             ; preds = %4908
  store float %4858, ptr %4428, align 4, !tbaa !163
  br label %5686

5685:                                             ; preds = %5532
  store double %5482, ptr %5058, align 8, !tbaa !19
  br label %5686

5686:                                             ; preds = %5674, %5372, %5230, %5050, %4748, %4420, %4118, %3976, %3796, %3494, %3168, %3027, %2868, %2724, %2543, %2235, %1902, %1757, %1594, %1448, %1261, %1120, %961, %817, %636, %497, %340, %198, %5379, %5388, %5685, %5074, %5083, %4755, %4764, %5684, %4444, %4453, %5683, %4125, %4134, %5682, %3820, %3829, %3501, %3510, %5681, %3192, %3201, %5680, %2875, %2884, %2566, %2575, %2242, %2251, %5679, %1929, %1938, %5678, %1601, %1610, %1288, %1297, %968, %977, %659, %668, %347, %356, %39, %48, %5060, %5676, %4430, %5052, %3806, %4422, %3178, %3798, %2553, %3170, %1912, %2545, %1271, %1904, %646, %1263, %28, %638, %18
  %5687 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %646 ], [ 0.000000e+00, %1904 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %2545 ], [ 0.000000e+00, %1912 ], [ 0.000000e+00, %3170 ], [ 0.000000e+00, %2553 ], [ 0.000000e+00, %3798 ], [ 0.000000e+00, %3178 ], [ 0.000000e+00, %4422 ], [ 0.000000e+00, %3806 ], [ 0.000000e+00, %5052 ], [ 0.000000e+00, %4430 ], [ 0.000000e+00, %5676 ], [ 0.000000e+00, %5060 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %356 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %668 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %977 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %1297 ], [ 0.000000e+00, %1288 ], [ 0.000000e+00, %1610 ], [ 0.000000e+00, %1601 ], [ %2040, %5678 ], [ 0.000000e+00, %1938 ], [ 0.000000e+00, %1929 ], [ %2349, %5679 ], [ 0.000000e+00, %2251 ], [ 0.000000e+00, %2242 ], [ 0.000000e+00, %2575 ], [ 0.000000e+00, %2566 ], [ 0.000000e+00, %2884 ], [ 0.000000e+00, %2875 ], [ %3301, %5680 ], [ 0.000000e+00, %3201 ], [ 0.000000e+00, %3192 ], [ %3605, %5681 ], [ 0.000000e+00, %3510 ], [ 0.000000e+00, %3501 ], [ 0.000000e+00, %3829 ], [ 0.000000e+00, %3820 ], [ %4229, %5682 ], [ 0.000000e+00, %4134 ], [ 0.000000e+00, %4125 ], [ %4554, %5683 ], [ 0.000000e+00, %4453 ], [ 0.000000e+00, %4444 ], [ %4859, %5684 ], [ 0.000000e+00, %4764 ], [ 0.000000e+00, %4755 ], [ 0.000000e+00, %5083 ], [ 0.000000e+00, %5074 ], [ %5483, %5685 ], [ 0.000000e+00, %5388 ], [ 0.000000e+00, %5379 ], [ %149, %198 ], [ 0.000000e+00, %340 ], [ %448, %497 ], [ 0.000000e+00, %636 ], [ %768, %817 ], [ 0.000000e+00, %961 ], [ %1071, %1120 ], [ 0.000000e+00, %1261 ], [ %1399, %1448 ], [ 0.000000e+00, %1594 ], [ %1708, %1757 ], [ 0.000000e+00, %1902 ], [ 0.000000e+00, %2235 ], [ 0.000000e+00, %2543 ], [ %2675, %2724 ], [ 0.000000e+00, %2868 ], [ %2978, %3027 ], [ 0.000000e+00, %3168 ], [ 0.000000e+00, %3494 ], [ 0.000000e+00, %3796 ], [ %3927, %3976 ], [ 0.000000e+00, %4118 ], [ 0.000000e+00, %4420 ], [ 0.000000e+00, %4748 ], [ 0.000000e+00, %5050 ], [ %5181, %5230 ], [ 0.000000e+00, %5372 ], [ 0.000000e+00, %5674 ]
  %5688 = phi i32 [ %10, %18 ], [ 1, %638 ], [ 1, %28 ], [ 1, %1263 ], [ 1, %646 ], [ 1, %1904 ], [ 1, %1271 ], [ 1, %2545 ], [ 1, %1912 ], [ 1, %3170 ], [ 1, %2553 ], [ 1, %3798 ], [ 1, %3178 ], [ 1, %4422 ], [ 1, %3806 ], [ 1, %5052 ], [ 1, %4430 ], [ 1, %5676 ], [ 1, %5060 ], [ 1, %48 ], [ 1, %39 ], [ 1, %356 ], [ 1, %347 ], [ 1, %668 ], [ 1, %659 ], [ 1, %977 ], [ 1, %968 ], [ 1, %1297 ], [ 1, %1288 ], [ 1, %1610 ], [ 1, %1601 ], [ %1945, %5678 ], [ 1, %1938 ], [ 1, %1929 ], [ %2258, %5679 ], [ 1, %2251 ], [ 1, %2242 ], [ 1, %2575 ], [ 1, %2566 ], [ 1, %2884 ], [ 1, %2875 ], [ %3208, %5680 ], [ 1, %3201 ], [ 1, %3192 ], [ %3517, %5681 ], [ 1, %3510 ], [ 1, %3501 ], [ 1, %3829 ], [ 1, %3820 ], [ %4141, %5682 ], [ 1, %4134 ], [ 1, %4125 ], [ %4460, %5683 ], [ 1, %4453 ], [ 1, %4444 ], [ %4771, %5684 ], [ 1, %4764 ], [ 1, %4755 ], [ 1, %5083 ], [ 1, %5074 ], [ %5395, %5685 ], [ 1, %5388 ], [ 1, %5379 ], [ %55, %198 ], [ %46, %340 ], [ %363, %497 ], [ %354, %636 ], [ %675, %817 ], [ %666, %961 ], [ %984, %1120 ], [ %975, %1261 ], [ %1304, %1448 ], [ %1295, %1594 ], [ %1617, %1757 ], [ %1608, %1902 ], [ %1936, %2235 ], [ %2249, %2543 ], [ %2582, %2724 ], [ %2573, %2868 ], [ %2891, %3027 ], [ %2882, %3168 ], [ %3199, %3494 ], [ %3508, %3796 ], [ %3836, %3976 ], [ %3827, %4118 ], [ %4132, %4420 ], [ %4451, %4748 ], [ %4762, %5050 ], [ %5090, %5230 ], [ %5081, %5372 ], [ %5386, %5674 ]
  %5689 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5688, ptr noundef nonnull @.str.5) #3
  %5690 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5687, ptr noundef nonnull @.str.6) #3
  br label %5691

5691:                                             ; preds = %5223, %5308, %5365, %5525, %5610, %5667, %4596, %4681, %4741, %4901, %4986, %5043, %3969, %4054, %4111, %4271, %4356, %4413, %3343, %3428, %3487, %3647, %3732, %3789, %2717, %2801, %2861, %3020, %3104, %3161, %2082, %2167, %2228, %2391, %2476, %2536, %1441, %1525, %1587, %1750, %1834, %1895, %810, %894, %954, %1113, %1197, %1254, %191, %275, %333, %490, %574, %629, %5686
  %5692 = phi i32 [ 0, %5686 ], [ -1, %629 ], [ -1, %574 ], [ -1, %490 ], [ -1, %333 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1254 ], [ -1, %1197 ], [ -1, %1113 ], [ -1, %954 ], [ -1, %894 ], [ -1, %810 ], [ -1, %1895 ], [ -1, %1834 ], [ -1, %1750 ], [ -1, %1587 ], [ -1, %1525 ], [ -1, %1441 ], [ -1, %2536 ], [ -1, %2476 ], [ -1, %2391 ], [ -1, %2228 ], [ -1, %2167 ], [ -1, %2082 ], [ -1, %3161 ], [ -1, %3104 ], [ -1, %3020 ], [ -1, %2861 ], [ -1, %2801 ], [ -1, %2717 ], [ -1, %3789 ], [ -1, %3732 ], [ -1, %3647 ], [ -1, %3487 ], [ -1, %3428 ], [ -1, %3343 ], [ -1, %4413 ], [ -1, %4356 ], [ -1, %4271 ], [ -1, %4111 ], [ -1, %4054 ], [ -1, %3969 ], [ -1, %5043 ], [ -1, %4986 ], [ -1, %4901 ], [ -1, %4741 ], [ -1, %4681 ], [ -1, %4596 ], [ -1, %5667 ], [ -1, %5610 ], [ -1, %5525 ], [ -1, %5365 ], [ -1, %5308 ], [ -1, %5223 ]
  ret i32 %5692
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5679 [
    i32 101, label %22
    i32 102, label %642
    i32 103, label %1272
    i32 104, label %1906
    i32 105, label %2540
    i32 106, label %3170
    i32 107, label %3795
    i32 108, label %4419
    i32 109, label %5049
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !121
  %30 = trunc i64 %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5679

33:                                               ; preds = %22
  switch i32 %1, label %640 [
    i32 1, label %34
    i32 0, label %344
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5679

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %201

48:                                               ; preds = %34
  br i1 %38, label %49, label %5679

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %199
  %58 = phi i32 [ 0, %49 ], [ %151, %199 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %150, %199 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !765

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !766

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !767

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i64, ptr %24, i64 %132
  %136 = load i64, ptr %135, align 8, !tbaa !121
  %137 = trunc i64 %136 to i32
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = and i32 %137, 255
  %141 = sitofp i32 %140 to double
  %142 = fmul fast double %134, %141
  %143 = fcmp fast olt double %142, 0.000000e+00
  %144 = fneg fast double %142
  %145 = select nnan ninf i1 %143, double %144, double %142
  %146 = fmul fast double %142, %142
  %147 = fmul fast double %146, %145
  %148 = fadd fast double %147, %139
  %149 = fptoui double %148 to i8
  store i8 %149, ptr %26, align 1, !tbaa !12
  %150 = fadd fast double %134, %59
  %151 = add nuw nsw i32 %58, 1
  br i1 %51, label %152, label %199

152:                                              ; preds = %130
  %153 = load i32, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %12, align 4, !tbaa !6
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !6
  %160 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %160, ptr %6, align 4, !tbaa !6
  br i1 %56, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !6
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !6
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !6
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !6
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !6
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !6
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !6
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %54
  br i1 %191, label %199, label %161, !llvm.loop !768

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !6
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !6
  br label %199

199:                                              ; preds = %186, %194, %159, %130
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %5679, label %57, !llvm.loop !769

201:                                              ; preds = %40, %342
  %202 = phi i32 [ 0, %40 ], [ %291, %342 ]
  %203 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %45, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %44, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %43, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !6
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !770

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !6
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !771

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !6
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !772

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

278:                                              ; preds = %273
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = uitofp i8 %279 to double
  %281 = sext i32 %274 to i64
  %282 = getelementptr inbounds i64, ptr %24, i64 %281
  %283 = load i64, ptr %282, align 8, !tbaa !121
  %284 = trunc i64 %283 to i32
  %285 = and i32 %284, 255
  %286 = sitofp i32 %285 to double
  %287 = fmul fast double %286, %286
  %288 = fmul fast double %287, %286
  %289 = fadd fast double %288, %280
  %290 = fptoui double %289 to i8
  store i8 %290, ptr %26, align 1, !tbaa !12
  %291 = add nuw nsw i32 %202, 1
  br i1 %42, label %292, label %342

292:                                              ; preds = %278
  %293 = load i32, ptr %4, align 4, !tbaa !6
  %294 = load i32, ptr %12, align 4, !tbaa !6
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %293, %295
  br i1 %296, label %319, label %297

297:                                              ; preds = %292
  %298 = icmp eq i32 %293, %295
  br i1 %298, label %299, label %335

299:                                              ; preds = %297
  store i32 0, ptr %4, align 4, !tbaa !6
  %300 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %300, ptr %6, align 4, !tbaa !6
  br i1 %47, label %342, label %301

301:                                              ; preds = %299, %329
  %302 = phi i64 [ %333, %329 ], [ 1, %299 ]
  %303 = getelementptr inbounds i32, ptr %4, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = getelementptr inbounds i32, ptr %12, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !6
  %307 = add nsw i32 %306, -1
  %308 = icmp slt i32 %304, %307
  br i1 %308, label %309, label %327

309:                                              ; preds = %301
  br i1 %296, label %319, label %310

310:                                              ; preds = %309
  %311 = shl i64 %302, 32
  %312 = add i64 %311, -4294967296
  %313 = ashr exact i64 %312, 32
  %314 = getelementptr inbounds i32, ptr %7, i64 %313
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %6, i64 %302
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = add nsw i32 %317, %315
  store i32 %318, ptr %316, align 4, !tbaa !6
  br label %337

319:                                              ; preds = %292, %309
  %320 = phi i32 [ %304, %309 ], [ %293, %292 ]
  %321 = phi ptr [ %303, %309 ], [ %4, %292 ]
  %322 = phi i64 [ %302, %309 ], [ 0, %292 ]
  %323 = add nsw i32 %320, 1
  store i32 %323, ptr %321, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %7, i64 %322
  %325 = load i32, ptr %324, align 4, !tbaa !6
  %326 = getelementptr inbounds i32, ptr %6, i64 %322
  br label %337

327:                                              ; preds = %301
  %328 = icmp eq i32 %304, %307
  br i1 %328, label %329, label %335

329:                                              ; preds = %327
  store i32 0, ptr %303, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %8, i64 %302
  %331 = load i32, ptr %330, align 4, !tbaa !6
  %332 = getelementptr inbounds i32, ptr %6, i64 %302
  store i32 %331, ptr %332, align 4, !tbaa !6
  %333 = add nuw nsw i64 %302, 1
  %334 = icmp eq i64 %333, %45
  br i1 %334, label %342, label %301, !llvm.loop !773

335:                                              ; preds = %297, %327
  %336 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

337:                                              ; preds = %310, %319
  %338 = phi ptr [ %326, %319 ], [ %303, %310 ]
  %339 = phi i32 [ %325, %319 ], [ 1, %310 ]
  %340 = load i32, ptr %338, align 4, !tbaa !6
  %341 = add nsw i32 %340, %339
  store i32 %341, ptr %338, align 4, !tbaa !6
  br label %342

342:                                              ; preds = %329, %337, %299, %278
  %343 = icmp eq i32 %291, %5
  br i1 %343, label %5679, label %201, !llvm.loop !774

344:                                              ; preds = %33
  %345 = getelementptr inbounds i32, ptr %3, i64 %19
  %346 = load i32, ptr %345, align 4, !tbaa !6
  %347 = icmp eq i32 %346, 0
  %348 = icmp sgt i32 %5, 0
  br i1 %347, label %358, label %349

349:                                              ; preds = %344
  br i1 %348, label %350, label %5679

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %501

358:                                              ; preds = %344
  br i1 %348, label %359, label %5679

359:                                              ; preds = %358
  %360 = icmp sgt i32 %13, 1
  %361 = icmp sgt i32 %13, 0
  %362 = add i32 %13, -2
  %363 = zext i32 %362 to i64
  %364 = zext i32 %13 to i64
  %365 = add nuw i32 %5, 1
  %366 = icmp eq i32 %13, 1
  br label %367

367:                                              ; preds = %359, %499
  %368 = phi i32 [ 0, %359 ], [ %451, %499 ]
  %369 = phi double [ 0.000000e+00, %359 ], [ %450, %499 ]
  %370 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %360, label %371, label %440

371:                                              ; preds = %367, %430
  %372 = phi i32 [ %439, %430 ], [ 0, %367 ]
  %373 = phi i64 [ %381, %430 ], [ %364, %367 ]
  %374 = phi i64 [ %438, %430 ], [ %363, %367 ]
  %375 = phi i32 [ %436, %430 ], [ %370, %367 ]
  %376 = sub i32 %362, %372
  %377 = tail call i32 @llvm.smin.i32(i32 %376, i32 0)
  %378 = sub i32 %376, %377
  %379 = zext i32 %378 to i64
  %380 = add nuw nsw i64 %379, 1
  %381 = add nsw i64 %373, -1
  %382 = icmp ult i32 %378, 31
  br i1 %382, label %418, label %383

383:                                              ; preds = %371
  %384 = and i64 %380, 8589934560
  %385 = sub i64 %374, %384
  br label %386

386:                                              ; preds = %386, %383
  %387 = phi i64 [ 0, %383 ], [ %410, %386 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %383 ], [ %406, %386 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %383 ], [ %407, %386 ]
  %390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %383 ], [ %408, %386 ]
  %391 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %383 ], [ %409, %386 ]
  %392 = sub i64 %374, %387
  %393 = getelementptr inbounds i32, ptr %9, i64 %392
  %394 = getelementptr inbounds i32, ptr %393, i64 -7
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !6
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %393, i64 -15
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !6
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = getelementptr inbounds i32, ptr %393, i64 -23
  %401 = load <8 x i32>, ptr %400, align 4, !tbaa !6
  %402 = shufflevector <8 x i32> %401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %403 = getelementptr inbounds i32, ptr %393, i64 -31
  %404 = load <8 x i32>, ptr %403, align 4, !tbaa !6
  %405 = shufflevector <8 x i32> %404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %406 = mul <8 x i32> %396, %388
  %407 = mul <8 x i32> %399, %389
  %408 = mul <8 x i32> %402, %390
  %409 = mul <8 x i32> %405, %391
  %410 = add nuw i64 %387, 32
  %411 = icmp eq i64 %410, %384
  br i1 %411, label %412, label %386, !llvm.loop !775

412:                                              ; preds = %386
  %413 = mul <8 x i32> %407, %406
  %414 = mul <8 x i32> %408, %413
  %415 = mul <8 x i32> %409, %414
  %416 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %415)
  %417 = icmp eq i64 %380, %384
  br i1 %417, label %430, label %418

418:                                              ; preds = %371, %412
  %419 = phi i64 [ %374, %371 ], [ %385, %412 ]
  %420 = phi i32 [ 1, %371 ], [ %416, %412 ]
  br label %421

421:                                              ; preds = %418, %421
  %422 = phi i64 [ %427, %421 ], [ %419, %418 ]
  %423 = phi i32 [ %426, %421 ], [ %420, %418 ]
  %424 = getelementptr inbounds i32, ptr %9, i64 %422
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = mul nsw i32 %425, %423
  %427 = add nsw i64 %422, -1
  %428 = trunc i64 %422 to i32
  %429 = icmp sgt i32 %428, 0
  br i1 %429, label %421, label %430, !llvm.loop !776

430:                                              ; preds = %421, %412
  %431 = phi i32 [ %416, %412 ], [ %426, %421 ]
  %432 = and i64 %381, 4294967295
  %433 = getelementptr inbounds i32, ptr %6, i64 %432
  %434 = load i32, ptr %433, align 4, !tbaa !6
  %435 = mul nsw i32 %434, %431
  %436 = add nsw i32 %435, %375
  %437 = icmp sgt i64 %373, 2
  %438 = add nsw i64 %374, -1
  %439 = add i32 %372, 1
  br i1 %437, label %371, label %440, !llvm.loop !777

440:                                              ; preds = %430, %367
  %441 = phi i32 [ %370, %367 ], [ %436, %430 ]
  %442 = load i8, ptr %26, align 1, !tbaa !12
  %443 = sext i32 %441 to i64
  %444 = getelementptr inbounds i64, ptr %24, i64 %443
  %445 = load i64, ptr %444, align 8, !tbaa !121
  %446 = trunc i64 %445 to i8
  %447 = mul i8 %446, %446
  %448 = mul i8 %447, %446
  %449 = add i8 %448, %442
  store i8 %449, ptr %26, align 1, !tbaa !12
  %450 = fadd fast double %369, 1.000000e+00
  %451 = add nuw nsw i32 %368, 1
  br i1 %361, label %452, label %499

452:                                              ; preds = %440
  %453 = load i32, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %12, align 4, !tbaa !6
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %453, %455
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = icmp eq i32 %453, %455
  br i1 %458, label %459, label %492

459:                                              ; preds = %457
  store i32 0, ptr %4, align 4, !tbaa !6
  %460 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %460, ptr %6, align 4, !tbaa !6
  br i1 %366, label %499, label %461

461:                                              ; preds = %459, %486
  %462 = phi i64 [ %490, %486 ], [ 1, %459 ]
  %463 = getelementptr inbounds i32, ptr %4, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %12, i64 %462
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, -1
  %468 = icmp slt i32 %464, %467
  br i1 %468, label %469, label %484

469:                                              ; preds = %461
  br i1 %456, label %476, label %470

470:                                              ; preds = %469
  %471 = getelementptr inbounds i32, ptr %7, i64 %462
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %462
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = add nsw i32 %474, %472
  store i32 %475, ptr %473, align 4, !tbaa !6
  br label %494

476:                                              ; preds = %452, %469
  %477 = phi i32 [ %464, %469 ], [ %453, %452 ]
  %478 = phi ptr [ %463, %469 ], [ %4, %452 ]
  %479 = phi i64 [ %462, %469 ], [ 0, %452 ]
  %480 = add nsw i32 %477, 1
  store i32 %480, ptr %478, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %7, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %479
  br label %494

484:                                              ; preds = %461
  %485 = icmp eq i32 %464, %467
  br i1 %485, label %486, label %492

486:                                              ; preds = %484
  store i32 0, ptr %463, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %8, i64 %462
  %488 = load i32, ptr %487, align 4, !tbaa !6
  %489 = getelementptr inbounds i32, ptr %6, i64 %462
  store i32 %488, ptr %489, align 4, !tbaa !6
  %490 = add nuw nsw i64 %462, 1
  %491 = icmp eq i64 %490, %364
  br i1 %491, label %499, label %461, !llvm.loop !778

492:                                              ; preds = %457, %484
  %493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

494:                                              ; preds = %470, %476
  %495 = phi ptr [ %483, %476 ], [ %463, %470 ]
  %496 = phi i32 [ %482, %476 ], [ 1, %470 ]
  %497 = load i32, ptr %495, align 4, !tbaa !6
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %495, align 4, !tbaa !6
  br label %499

499:                                              ; preds = %486, %494, %459, %440
  %500 = icmp eq i32 %451, %5
  br i1 %500, label %5679, label %367, !llvm.loop !779

501:                                              ; preds = %350, %638
  %502 = phi i32 [ 0, %350 ], [ %587, %638 ]
  %503 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %351, label %504, label %573

504:                                              ; preds = %501, %563
  %505 = phi i32 [ %572, %563 ], [ 0, %501 ]
  %506 = phi i64 [ %514, %563 ], [ %355, %501 ]
  %507 = phi i64 [ %571, %563 ], [ %354, %501 ]
  %508 = phi i32 [ %569, %563 ], [ %503, %501 ]
  %509 = sub i32 %353, %505
  %510 = tail call i32 @llvm.smin.i32(i32 %509, i32 0)
  %511 = sub i32 %509, %510
  %512 = zext i32 %511 to i64
  %513 = add nuw nsw i64 %512, 1
  %514 = add nsw i64 %506, -1
  %515 = icmp ult i32 %511, 31
  br i1 %515, label %551, label %516

516:                                              ; preds = %504
  %517 = and i64 %513, 8589934560
  %518 = sub i64 %507, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %543, %519 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %539, %519 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %540, %519 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %541, %519 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %542, %519 ]
  %525 = sub i64 %507, %520
  %526 = getelementptr inbounds i32, ptr %11, i64 %525
  %527 = getelementptr inbounds i32, ptr %526, i64 -7
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %526, i64 -15
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %526, i64 -23
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !6
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = getelementptr inbounds i32, ptr %526, i64 -31
  %537 = load <8 x i32>, ptr %536, align 4, !tbaa !6
  %538 = shufflevector <8 x i32> %537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %539 = mul <8 x i32> %529, %521
  %540 = mul <8 x i32> %532, %522
  %541 = mul <8 x i32> %535, %523
  %542 = mul <8 x i32> %538, %524
  %543 = add nuw i64 %520, 32
  %544 = icmp eq i64 %543, %517
  br i1 %544, label %545, label %519, !llvm.loop !780

545:                                              ; preds = %519
  %546 = mul <8 x i32> %540, %539
  %547 = mul <8 x i32> %541, %546
  %548 = mul <8 x i32> %542, %547
  %549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %548)
  %550 = icmp eq i64 %513, %517
  br i1 %550, label %563, label %551

551:                                              ; preds = %504, %545
  %552 = phi i64 [ %507, %504 ], [ %518, %545 ]
  %553 = phi i32 [ 1, %504 ], [ %549, %545 ]
  br label %554

554:                                              ; preds = %551, %554
  %555 = phi i64 [ %560, %554 ], [ %552, %551 ]
  %556 = phi i32 [ %559, %554 ], [ %553, %551 ]
  %557 = getelementptr inbounds i32, ptr %11, i64 %555
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %556
  %560 = add nsw i64 %555, -1
  %561 = trunc i64 %555 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %554, label %563, !llvm.loop !781

563:                                              ; preds = %554, %545
  %564 = phi i32 [ %549, %545 ], [ %559, %554 ]
  %565 = and i64 %514, 4294967295
  %566 = getelementptr inbounds i32, ptr %6, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !6
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %508
  %570 = icmp sgt i64 %506, 2
  %571 = add nsw i64 %507, -1
  %572 = add i32 %505, 1
  br i1 %570, label %504, label %573, !llvm.loop !782

573:                                              ; preds = %563, %501
  %574 = phi i32 [ %503, %501 ], [ %569, %563 ]
  %575 = icmp slt i32 %574, %5
  br i1 %575, label %578, label %576

576:                                              ; preds = %573
  %577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

578:                                              ; preds = %573
  %579 = load i8, ptr %26, align 1, !tbaa !12
  %580 = sext i32 %574 to i64
  %581 = getelementptr inbounds i64, ptr %24, i64 %580
  %582 = load i64, ptr %581, align 8, !tbaa !121
  %583 = trunc i64 %582 to i8
  %584 = mul i8 %583, %583
  %585 = mul i8 %584, %583
  %586 = add i8 %585, %579
  store i8 %586, ptr %26, align 1, !tbaa !12
  %587 = add nuw nsw i32 %502, 1
  br i1 %352, label %588, label %638

588:                                              ; preds = %578
  %589 = load i32, ptr %4, align 4, !tbaa !6
  %590 = load i32, ptr %12, align 4, !tbaa !6
  %591 = add nsw i32 %590, -1
  %592 = icmp slt i32 %589, %591
  br i1 %592, label %615, label %593

593:                                              ; preds = %588
  %594 = icmp eq i32 %589, %591
  br i1 %594, label %595, label %631

595:                                              ; preds = %593
  store i32 0, ptr %4, align 4, !tbaa !6
  %596 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %596, ptr %6, align 4, !tbaa !6
  br i1 %357, label %638, label %597

597:                                              ; preds = %595, %625
  %598 = phi i64 [ %629, %625 ], [ 1, %595 ]
  %599 = getelementptr inbounds i32, ptr %4, i64 %598
  %600 = load i32, ptr %599, align 4, !tbaa !6
  %601 = getelementptr inbounds i32, ptr %12, i64 %598
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = add nsw i32 %602, -1
  %604 = icmp slt i32 %600, %603
  br i1 %604, label %605, label %623

605:                                              ; preds = %597
  br i1 %592, label %615, label %606

606:                                              ; preds = %605
  %607 = shl i64 %598, 32
  %608 = add i64 %607, -4294967296
  %609 = ashr exact i64 %608, 32
  %610 = getelementptr inbounds i32, ptr %7, i64 %609
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %6, i64 %598
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = add nsw i32 %613, %611
  store i32 %614, ptr %612, align 4, !tbaa !6
  br label %633

615:                                              ; preds = %588, %605
  %616 = phi i32 [ %600, %605 ], [ %589, %588 ]
  %617 = phi ptr [ %599, %605 ], [ %4, %588 ]
  %618 = phi i64 [ %598, %605 ], [ 0, %588 ]
  %619 = add nsw i32 %616, 1
  store i32 %619, ptr %617, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %7, i64 %618
  %621 = load i32, ptr %620, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %6, i64 %618
  br label %633

623:                                              ; preds = %597
  %624 = icmp eq i32 %600, %603
  br i1 %624, label %625, label %631

625:                                              ; preds = %623
  store i32 0, ptr %599, align 4, !tbaa !6
  %626 = getelementptr inbounds i32, ptr %8, i64 %598
  %627 = load i32, ptr %626, align 4, !tbaa !6
  %628 = getelementptr inbounds i32, ptr %6, i64 %598
  store i32 %627, ptr %628, align 4, !tbaa !6
  %629 = add nuw nsw i64 %598, 1
  %630 = icmp eq i64 %629, %355
  br i1 %630, label %638, label %597, !llvm.loop !783

631:                                              ; preds = %593, %623
  %632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

633:                                              ; preds = %606, %615
  %634 = phi ptr [ %622, %615 ], [ %599, %606 ]
  %635 = phi i32 [ %621, %615 ], [ 1, %606 ]
  %636 = load i32, ptr %634, align 4, !tbaa !6
  %637 = add nsw i32 %636, %635
  store i32 %637, ptr %634, align 4, !tbaa !6
  br label %638

638:                                              ; preds = %625, %633, %595, %578
  %639 = icmp eq i32 %587, %5
  br i1 %639, label %5679, label %501, !llvm.loop !784

640:                                              ; preds = %33
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

642:                                              ; preds = %18
  %643 = getelementptr inbounds ptr, ptr %14, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !10
  %645 = getelementptr inbounds ptr, ptr %16, i64 %19
  %646 = load ptr, ptr %645, align 8, !tbaa !10
  store i32 0, ptr %646, align 4, !tbaa !6
  %647 = icmp eq i32 %13, 0
  br i1 %647, label %648, label %656

648:                                              ; preds = %642
  %649 = load i64, ptr %644, align 8, !tbaa !121
  %650 = trunc i64 %649 to i32
  %651 = icmp slt i32 %650, 0
  %652 = mul nsw i32 %650, %650
  %653 = sub nsw i32 0, %652
  %654 = select i1 %651, i32 %653, i32 %652
  %655 = mul i32 %654, %650
  store i32 %655, ptr %646, align 4, !tbaa !6
  br label %5679

656:                                              ; preds = %642
  switch i32 %1, label %1270 [
    i32 1, label %657
    i32 0, label %968
  ]

657:                                              ; preds = %656
  %658 = getelementptr inbounds i32, ptr %3, i64 %19
  %659 = load i32, ptr %658, align 4, !tbaa !6
  %660 = icmp eq i32 %659, 0
  %661 = icmp sgt i32 %5, 0
  br i1 %660, label %671, label %662

662:                                              ; preds = %657
  br i1 %661, label %663, label %5679

663:                                              ; preds = %662
  %664 = icmp sgt i32 %13, 1
  %665 = icmp sgt i32 %13, 0
  %666 = add i32 %13, -2
  %667 = zext i32 %666 to i64
  %668 = zext i32 %13 to i64
  %669 = add nuw i32 %5, 1
  %670 = icmp eq i32 %13, 1
  br label %823

671:                                              ; preds = %657
  br i1 %661, label %672, label %5679

672:                                              ; preds = %671
  %673 = icmp sgt i32 %13, 1
  %674 = icmp sgt i32 %13, 0
  %675 = add i32 %13, -2
  %676 = zext i32 %675 to i64
  %677 = zext i32 %13 to i64
  %678 = add nuw i32 %5, 1
  %679 = icmp eq i32 %13, 1
  br label %680

680:                                              ; preds = %672, %821
  %681 = phi i32 [ 0, %672 ], [ %773, %821 ]
  %682 = phi double [ 0.000000e+00, %672 ], [ %772, %821 ]
  %683 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %673, label %684, label %753

684:                                              ; preds = %680, %743
  %685 = phi i32 [ %752, %743 ], [ 0, %680 ]
  %686 = phi i64 [ %694, %743 ], [ %677, %680 ]
  %687 = phi i64 [ %751, %743 ], [ %676, %680 ]
  %688 = phi i32 [ %749, %743 ], [ %683, %680 ]
  %689 = sub i32 %675, %685
  %690 = tail call i32 @llvm.smin.i32(i32 %689, i32 0)
  %691 = sub i32 %689, %690
  %692 = zext i32 %691 to i64
  %693 = add nuw nsw i64 %692, 1
  %694 = add nsw i64 %686, -1
  %695 = icmp ult i32 %691, 31
  br i1 %695, label %731, label %696

696:                                              ; preds = %684
  %697 = and i64 %693, 8589934560
  %698 = sub i64 %687, %697
  br label %699

699:                                              ; preds = %699, %696
  %700 = phi i64 [ 0, %696 ], [ %723, %699 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %696 ], [ %719, %699 ]
  %702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %696 ], [ %720, %699 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %696 ], [ %721, %699 ]
  %704 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %696 ], [ %722, %699 ]
  %705 = sub i64 %687, %700
  %706 = getelementptr inbounds i32, ptr %9, i64 %705
  %707 = getelementptr inbounds i32, ptr %706, i64 -7
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !6
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %706, i64 -15
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !6
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = getelementptr inbounds i32, ptr %706, i64 -23
  %714 = load <8 x i32>, ptr %713, align 4, !tbaa !6
  %715 = shufflevector <8 x i32> %714, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %716 = getelementptr inbounds i32, ptr %706, i64 -31
  %717 = load <8 x i32>, ptr %716, align 4, !tbaa !6
  %718 = shufflevector <8 x i32> %717, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %719 = mul <8 x i32> %709, %701
  %720 = mul <8 x i32> %712, %702
  %721 = mul <8 x i32> %715, %703
  %722 = mul <8 x i32> %718, %704
  %723 = add nuw i64 %700, 32
  %724 = icmp eq i64 %723, %697
  br i1 %724, label %725, label %699, !llvm.loop !785

725:                                              ; preds = %699
  %726 = mul <8 x i32> %720, %719
  %727 = mul <8 x i32> %721, %726
  %728 = mul <8 x i32> %722, %727
  %729 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %728)
  %730 = icmp eq i64 %693, %697
  br i1 %730, label %743, label %731

731:                                              ; preds = %684, %725
  %732 = phi i64 [ %687, %684 ], [ %698, %725 ]
  %733 = phi i32 [ 1, %684 ], [ %729, %725 ]
  br label %734

734:                                              ; preds = %731, %734
  %735 = phi i64 [ %740, %734 ], [ %732, %731 ]
  %736 = phi i32 [ %739, %734 ], [ %733, %731 ]
  %737 = getelementptr inbounds i32, ptr %9, i64 %735
  %738 = load i32, ptr %737, align 4, !tbaa !6
  %739 = mul nsw i32 %738, %736
  %740 = add nsw i64 %735, -1
  %741 = trunc i64 %735 to i32
  %742 = icmp sgt i32 %741, 0
  br i1 %742, label %734, label %743, !llvm.loop !786

743:                                              ; preds = %734, %725
  %744 = phi i32 [ %729, %725 ], [ %739, %734 ]
  %745 = and i64 %694, 4294967295
  %746 = getelementptr inbounds i32, ptr %6, i64 %745
  %747 = load i32, ptr %746, align 4, !tbaa !6
  %748 = mul nsw i32 %747, %744
  %749 = add nsw i32 %748, %688
  %750 = icmp sgt i64 %686, 2
  %751 = add nsw i64 %687, -1
  %752 = add i32 %685, 1
  br i1 %750, label %684, label %753, !llvm.loop !787

753:                                              ; preds = %743, %680
  %754 = phi i32 [ %683, %680 ], [ %749, %743 ]
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds double, ptr %2, i64 %755
  %757 = load double, ptr %756, align 8, !tbaa !19
  %758 = getelementptr inbounds i64, ptr %644, i64 %755
  %759 = load i64, ptr %758, align 8, !tbaa !121
  %760 = trunc i64 %759 to i32
  %761 = load i32, ptr %646, align 4, !tbaa !6
  %762 = sitofp i32 %761 to double
  %763 = sitofp i32 %760 to double
  %764 = fmul fast double %757, %763
  %765 = fcmp fast olt double %764, 0.000000e+00
  %766 = fneg fast double %764
  %767 = select nnan ninf i1 %765, double %766, double %764
  %768 = fmul fast double %764, %764
  %769 = fmul fast double %768, %767
  %770 = fadd fast double %769, %762
  %771 = fptosi double %770 to i32
  store i32 %771, ptr %646, align 4, !tbaa !6
  %772 = fadd fast double %757, %682
  %773 = add nuw nsw i32 %681, 1
  br i1 %674, label %774, label %821

774:                                              ; preds = %753
  %775 = load i32, ptr %4, align 4, !tbaa !6
  %776 = load i32, ptr %12, align 4, !tbaa !6
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %775, %777
  br i1 %778, label %798, label %779

779:                                              ; preds = %774
  %780 = icmp eq i32 %775, %777
  br i1 %780, label %781, label %814

781:                                              ; preds = %779
  store i32 0, ptr %4, align 4, !tbaa !6
  %782 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %782, ptr %6, align 4, !tbaa !6
  br i1 %679, label %821, label %783

783:                                              ; preds = %781, %808
  %784 = phi i64 [ %812, %808 ], [ 1, %781 ]
  %785 = getelementptr inbounds i32, ptr %4, i64 %784
  %786 = load i32, ptr %785, align 4, !tbaa !6
  %787 = getelementptr inbounds i32, ptr %12, i64 %784
  %788 = load i32, ptr %787, align 4, !tbaa !6
  %789 = add nsw i32 %788, -1
  %790 = icmp slt i32 %786, %789
  br i1 %790, label %791, label %806

791:                                              ; preds = %783
  br i1 %778, label %798, label %792

792:                                              ; preds = %791
  %793 = getelementptr inbounds i32, ptr %7, i64 %784
  %794 = load i32, ptr %793, align 4, !tbaa !6
  %795 = getelementptr inbounds i32, ptr %6, i64 %784
  %796 = load i32, ptr %795, align 4, !tbaa !6
  %797 = add nsw i32 %796, %794
  store i32 %797, ptr %795, align 4, !tbaa !6
  br label %816

798:                                              ; preds = %774, %791
  %799 = phi i32 [ %786, %791 ], [ %775, %774 ]
  %800 = phi ptr [ %785, %791 ], [ %4, %774 ]
  %801 = phi i64 [ %784, %791 ], [ 0, %774 ]
  %802 = add nsw i32 %799, 1
  store i32 %802, ptr %800, align 4, !tbaa !6
  %803 = getelementptr inbounds i32, ptr %7, i64 %801
  %804 = load i32, ptr %803, align 4, !tbaa !6
  %805 = getelementptr inbounds i32, ptr %6, i64 %801
  br label %816

806:                                              ; preds = %783
  %807 = icmp eq i32 %786, %789
  br i1 %807, label %808, label %814

808:                                              ; preds = %806
  store i32 0, ptr %785, align 4, !tbaa !6
  %809 = getelementptr inbounds i32, ptr %8, i64 %784
  %810 = load i32, ptr %809, align 4, !tbaa !6
  %811 = getelementptr inbounds i32, ptr %6, i64 %784
  store i32 %810, ptr %811, align 4, !tbaa !6
  %812 = add nuw nsw i64 %784, 1
  %813 = icmp eq i64 %812, %677
  br i1 %813, label %821, label %783, !llvm.loop !788

814:                                              ; preds = %779, %806
  %815 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

816:                                              ; preds = %792, %798
  %817 = phi ptr [ %805, %798 ], [ %785, %792 ]
  %818 = phi i32 [ %804, %798 ], [ 1, %792 ]
  %819 = load i32, ptr %817, align 4, !tbaa !6
  %820 = add nsw i32 %819, %818
  store i32 %820, ptr %817, align 4, !tbaa !6
  br label %821

821:                                              ; preds = %808, %816, %781, %753
  %822 = icmp eq i32 %773, %5
  br i1 %822, label %5679, label %680, !llvm.loop !789

823:                                              ; preds = %663, %966
  %824 = phi i32 [ 0, %663 ], [ %915, %966 ]
  %825 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %664, label %826, label %895

826:                                              ; preds = %823, %885
  %827 = phi i32 [ %894, %885 ], [ 0, %823 ]
  %828 = phi i64 [ %836, %885 ], [ %668, %823 ]
  %829 = phi i64 [ %893, %885 ], [ %667, %823 ]
  %830 = phi i32 [ %891, %885 ], [ %825, %823 ]
  %831 = sub i32 %666, %827
  %832 = tail call i32 @llvm.smin.i32(i32 %831, i32 0)
  %833 = sub i32 %831, %832
  %834 = zext i32 %833 to i64
  %835 = add nuw nsw i64 %834, 1
  %836 = add nsw i64 %828, -1
  %837 = icmp ult i32 %833, 31
  br i1 %837, label %873, label %838

838:                                              ; preds = %826
  %839 = and i64 %835, 8589934560
  %840 = sub i64 %829, %839
  br label %841

841:                                              ; preds = %841, %838
  %842 = phi i64 [ 0, %838 ], [ %865, %841 ]
  %843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %838 ], [ %861, %841 ]
  %844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %838 ], [ %862, %841 ]
  %845 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %838 ], [ %863, %841 ]
  %846 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %838 ], [ %864, %841 ]
  %847 = sub i64 %829, %842
  %848 = getelementptr inbounds i32, ptr %11, i64 %847
  %849 = getelementptr inbounds i32, ptr %848, i64 -7
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !6
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = getelementptr inbounds i32, ptr %848, i64 -15
  %853 = load <8 x i32>, ptr %852, align 4, !tbaa !6
  %854 = shufflevector <8 x i32> %853, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %855 = getelementptr inbounds i32, ptr %848, i64 -23
  %856 = load <8 x i32>, ptr %855, align 4, !tbaa !6
  %857 = shufflevector <8 x i32> %856, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %858 = getelementptr inbounds i32, ptr %848, i64 -31
  %859 = load <8 x i32>, ptr %858, align 4, !tbaa !6
  %860 = shufflevector <8 x i32> %859, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %861 = mul <8 x i32> %851, %843
  %862 = mul <8 x i32> %854, %844
  %863 = mul <8 x i32> %857, %845
  %864 = mul <8 x i32> %860, %846
  %865 = add nuw i64 %842, 32
  %866 = icmp eq i64 %865, %839
  br i1 %866, label %867, label %841, !llvm.loop !790

867:                                              ; preds = %841
  %868 = mul <8 x i32> %862, %861
  %869 = mul <8 x i32> %863, %868
  %870 = mul <8 x i32> %864, %869
  %871 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %870)
  %872 = icmp eq i64 %835, %839
  br i1 %872, label %885, label %873

873:                                              ; preds = %826, %867
  %874 = phi i64 [ %829, %826 ], [ %840, %867 ]
  %875 = phi i32 [ 1, %826 ], [ %871, %867 ]
  br label %876

876:                                              ; preds = %873, %876
  %877 = phi i64 [ %882, %876 ], [ %874, %873 ]
  %878 = phi i32 [ %881, %876 ], [ %875, %873 ]
  %879 = getelementptr inbounds i32, ptr %11, i64 %877
  %880 = load i32, ptr %879, align 4, !tbaa !6
  %881 = mul nsw i32 %880, %878
  %882 = add nsw i64 %877, -1
  %883 = trunc i64 %877 to i32
  %884 = icmp sgt i32 %883, 0
  br i1 %884, label %876, label %885, !llvm.loop !791

885:                                              ; preds = %876, %867
  %886 = phi i32 [ %871, %867 ], [ %881, %876 ]
  %887 = and i64 %836, 4294967295
  %888 = getelementptr inbounds i32, ptr %6, i64 %887
  %889 = load i32, ptr %888, align 4, !tbaa !6
  %890 = mul nsw i32 %889, %886
  %891 = add nsw i32 %890, %830
  %892 = icmp sgt i64 %828, 2
  %893 = add nsw i64 %829, -1
  %894 = add i32 %827, 1
  br i1 %892, label %826, label %895, !llvm.loop !792

895:                                              ; preds = %885, %823
  %896 = phi i32 [ %825, %823 ], [ %891, %885 ]
  %897 = icmp slt i32 %896, %5
  br i1 %897, label %900, label %898

898:                                              ; preds = %895
  %899 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

900:                                              ; preds = %895
  %901 = sext i32 %896 to i64
  %902 = getelementptr inbounds i64, ptr %644, i64 %901
  %903 = load i64, ptr %902, align 8, !tbaa !121
  %904 = trunc i64 %903 to i32
  %905 = load i32, ptr %646, align 4, !tbaa !6
  %906 = sitofp i32 %905 to double
  %907 = sitofp i32 %904 to double
  %908 = icmp slt i32 %904, 0
  %909 = fneg fast double %907
  %910 = select i1 %908, double %909, double %907
  %911 = fmul fast double %907, %907
  %912 = fmul fast double %911, %910
  %913 = fadd fast double %912, %906
  %914 = fptosi double %913 to i32
  store i32 %914, ptr %646, align 4, !tbaa !6
  %915 = add nuw nsw i32 %824, 1
  br i1 %665, label %916, label %966

916:                                              ; preds = %900
  %917 = load i32, ptr %4, align 4, !tbaa !6
  %918 = load i32, ptr %12, align 4, !tbaa !6
  %919 = add nsw i32 %918, -1
  %920 = icmp slt i32 %917, %919
  br i1 %920, label %943, label %921

921:                                              ; preds = %916
  %922 = icmp eq i32 %917, %919
  br i1 %922, label %923, label %959

923:                                              ; preds = %921
  store i32 0, ptr %4, align 4, !tbaa !6
  %924 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %924, ptr %6, align 4, !tbaa !6
  br i1 %670, label %966, label %925

925:                                              ; preds = %923, %953
  %926 = phi i64 [ %957, %953 ], [ 1, %923 ]
  %927 = getelementptr inbounds i32, ptr %4, i64 %926
  %928 = load i32, ptr %927, align 4, !tbaa !6
  %929 = getelementptr inbounds i32, ptr %12, i64 %926
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = add nsw i32 %930, -1
  %932 = icmp slt i32 %928, %931
  br i1 %932, label %933, label %951

933:                                              ; preds = %925
  br i1 %920, label %943, label %934

934:                                              ; preds = %933
  %935 = shl i64 %926, 32
  %936 = add i64 %935, -4294967296
  %937 = ashr exact i64 %936, 32
  %938 = getelementptr inbounds i32, ptr %7, i64 %937
  %939 = load i32, ptr %938, align 4, !tbaa !6
  %940 = getelementptr inbounds i32, ptr %6, i64 %926
  %941 = load i32, ptr %940, align 4, !tbaa !6
  %942 = add nsw i32 %941, %939
  store i32 %942, ptr %940, align 4, !tbaa !6
  br label %961

943:                                              ; preds = %916, %933
  %944 = phi i32 [ %928, %933 ], [ %917, %916 ]
  %945 = phi ptr [ %927, %933 ], [ %4, %916 ]
  %946 = phi i64 [ %926, %933 ], [ 0, %916 ]
  %947 = add nsw i32 %944, 1
  store i32 %947, ptr %945, align 4, !tbaa !6
  %948 = getelementptr inbounds i32, ptr %7, i64 %946
  %949 = load i32, ptr %948, align 4, !tbaa !6
  %950 = getelementptr inbounds i32, ptr %6, i64 %946
  br label %961

951:                                              ; preds = %925
  %952 = icmp eq i32 %928, %931
  br i1 %952, label %953, label %959

953:                                              ; preds = %951
  store i32 0, ptr %927, align 4, !tbaa !6
  %954 = getelementptr inbounds i32, ptr %8, i64 %926
  %955 = load i32, ptr %954, align 4, !tbaa !6
  %956 = getelementptr inbounds i32, ptr %6, i64 %926
  store i32 %955, ptr %956, align 4, !tbaa !6
  %957 = add nuw nsw i64 %926, 1
  %958 = icmp eq i64 %957, %668
  br i1 %958, label %966, label %925, !llvm.loop !793

959:                                              ; preds = %921, %951
  %960 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

961:                                              ; preds = %934, %943
  %962 = phi ptr [ %950, %943 ], [ %927, %934 ]
  %963 = phi i32 [ %949, %943 ], [ 1, %934 ]
  %964 = load i32, ptr %962, align 4, !tbaa !6
  %965 = add nsw i32 %964, %963
  store i32 %965, ptr %962, align 4, !tbaa !6
  br label %966

966:                                              ; preds = %953, %961, %923, %900
  %967 = icmp eq i32 %915, %5
  br i1 %967, label %5679, label %823, !llvm.loop !794

968:                                              ; preds = %656
  %969 = getelementptr inbounds i32, ptr %3, i64 %19
  %970 = load i32, ptr %969, align 4, !tbaa !6
  %971 = icmp eq i32 %970, 0
  %972 = icmp sgt i32 %5, 0
  br i1 %971, label %982, label %973

973:                                              ; preds = %968
  br i1 %972, label %974, label %5679

974:                                              ; preds = %973
  %975 = icmp sgt i32 %13, 1
  %976 = icmp sgt i32 %13, 0
  %977 = add i32 %13, -2
  %978 = zext i32 %977 to i64
  %979 = zext i32 %13 to i64
  %980 = add nuw i32 %5, 1
  %981 = icmp eq i32 %13, 1
  br label %1128

982:                                              ; preds = %968
  br i1 %972, label %983, label %5679

983:                                              ; preds = %982
  %984 = icmp sgt i32 %13, 1
  %985 = icmp sgt i32 %13, 0
  %986 = add i32 %13, -2
  %987 = zext i32 %986 to i64
  %988 = zext i32 %13 to i64
  %989 = add nuw i32 %5, 1
  %990 = icmp eq i32 %13, 1
  br label %991

991:                                              ; preds = %983, %1126
  %992 = phi i32 [ 0, %983 ], [ %1078, %1126 ]
  %993 = phi double [ 0.000000e+00, %983 ], [ %1077, %1126 ]
  %994 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %984, label %995, label %1064

995:                                              ; preds = %991, %1054
  %996 = phi i32 [ %1063, %1054 ], [ 0, %991 ]
  %997 = phi i64 [ %1005, %1054 ], [ %988, %991 ]
  %998 = phi i64 [ %1062, %1054 ], [ %987, %991 ]
  %999 = phi i32 [ %1060, %1054 ], [ %994, %991 ]
  %1000 = sub i32 %986, %996
  %1001 = tail call i32 @llvm.smin.i32(i32 %1000, i32 0)
  %1002 = sub i32 %1000, %1001
  %1003 = zext i32 %1002 to i64
  %1004 = add nuw nsw i64 %1003, 1
  %1005 = add nsw i64 %997, -1
  %1006 = icmp ult i32 %1002, 31
  br i1 %1006, label %1042, label %1007

1007:                                             ; preds = %995
  %1008 = and i64 %1004, 8589934560
  %1009 = sub i64 %998, %1008
  br label %1010

1010:                                             ; preds = %1010, %1007
  %1011 = phi i64 [ 0, %1007 ], [ %1034, %1010 ]
  %1012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1007 ], [ %1030, %1010 ]
  %1013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1007 ], [ %1031, %1010 ]
  %1014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1007 ], [ %1032, %1010 ]
  %1015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1007 ], [ %1033, %1010 ]
  %1016 = sub i64 %998, %1011
  %1017 = getelementptr inbounds i32, ptr %9, i64 %1016
  %1018 = getelementptr inbounds i32, ptr %1017, i64 -7
  %1019 = load <8 x i32>, ptr %1018, align 4, !tbaa !6
  %1020 = shufflevector <8 x i32> %1019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1021 = getelementptr inbounds i32, ptr %1017, i64 -15
  %1022 = load <8 x i32>, ptr %1021, align 4, !tbaa !6
  %1023 = shufflevector <8 x i32> %1022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1024 = getelementptr inbounds i32, ptr %1017, i64 -23
  %1025 = load <8 x i32>, ptr %1024, align 4, !tbaa !6
  %1026 = shufflevector <8 x i32> %1025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1027 = getelementptr inbounds i32, ptr %1017, i64 -31
  %1028 = load <8 x i32>, ptr %1027, align 4, !tbaa !6
  %1029 = shufflevector <8 x i32> %1028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1030 = mul <8 x i32> %1020, %1012
  %1031 = mul <8 x i32> %1023, %1013
  %1032 = mul <8 x i32> %1026, %1014
  %1033 = mul <8 x i32> %1029, %1015
  %1034 = add nuw i64 %1011, 32
  %1035 = icmp eq i64 %1034, %1008
  br i1 %1035, label %1036, label %1010, !llvm.loop !795

1036:                                             ; preds = %1010
  %1037 = mul <8 x i32> %1031, %1030
  %1038 = mul <8 x i32> %1032, %1037
  %1039 = mul <8 x i32> %1033, %1038
  %1040 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1039)
  %1041 = icmp eq i64 %1004, %1008
  br i1 %1041, label %1054, label %1042

1042:                                             ; preds = %995, %1036
  %1043 = phi i64 [ %998, %995 ], [ %1009, %1036 ]
  %1044 = phi i32 [ 1, %995 ], [ %1040, %1036 ]
  br label %1045

1045:                                             ; preds = %1042, %1045
  %1046 = phi i64 [ %1051, %1045 ], [ %1043, %1042 ]
  %1047 = phi i32 [ %1050, %1045 ], [ %1044, %1042 ]
  %1048 = getelementptr inbounds i32, ptr %9, i64 %1046
  %1049 = load i32, ptr %1048, align 4, !tbaa !6
  %1050 = mul nsw i32 %1049, %1047
  %1051 = add nsw i64 %1046, -1
  %1052 = trunc i64 %1046 to i32
  %1053 = icmp sgt i32 %1052, 0
  br i1 %1053, label %1045, label %1054, !llvm.loop !796

1054:                                             ; preds = %1045, %1036
  %1055 = phi i32 [ %1040, %1036 ], [ %1050, %1045 ]
  %1056 = and i64 %1005, 4294967295
  %1057 = getelementptr inbounds i32, ptr %6, i64 %1056
  %1058 = load i32, ptr %1057, align 4, !tbaa !6
  %1059 = mul nsw i32 %1058, %1055
  %1060 = add nsw i32 %1059, %999
  %1061 = icmp sgt i64 %997, 2
  %1062 = add nsw i64 %998, -1
  %1063 = add i32 %996, 1
  br i1 %1061, label %995, label %1064, !llvm.loop !797

1064:                                             ; preds = %1054, %991
  %1065 = phi i32 [ %994, %991 ], [ %1060, %1054 ]
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds i64, ptr %644, i64 %1066
  %1068 = load i64, ptr %1067, align 8, !tbaa !121
  %1069 = trunc i64 %1068 to i32
  %1070 = load i32, ptr %646, align 4, !tbaa !6
  %1071 = icmp slt i32 %1069, 0
  %1072 = mul nsw i32 %1069, %1069
  %1073 = sub nsw i32 0, %1072
  %1074 = select i1 %1071, i32 %1073, i32 %1072
  %1075 = mul i32 %1074, %1069
  %1076 = add nsw i32 %1075, %1070
  store i32 %1076, ptr %646, align 4, !tbaa !6
  %1077 = fadd fast double %993, 1.000000e+00
  %1078 = add nuw nsw i32 %992, 1
  br i1 %985, label %1079, label %1126

1079:                                             ; preds = %1064
  %1080 = load i32, ptr %4, align 4, !tbaa !6
  %1081 = load i32, ptr %12, align 4, !tbaa !6
  %1082 = add nsw i32 %1081, -1
  %1083 = icmp slt i32 %1080, %1082
  br i1 %1083, label %1103, label %1084

1084:                                             ; preds = %1079
  %1085 = icmp eq i32 %1080, %1082
  br i1 %1085, label %1086, label %1119

1086:                                             ; preds = %1084
  store i32 0, ptr %4, align 4, !tbaa !6
  %1087 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1087, ptr %6, align 4, !tbaa !6
  br i1 %990, label %1126, label %1088

1088:                                             ; preds = %1086, %1113
  %1089 = phi i64 [ %1117, %1113 ], [ 1, %1086 ]
  %1090 = getelementptr inbounds i32, ptr %4, i64 %1089
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %12, i64 %1089
  %1093 = load i32, ptr %1092, align 4, !tbaa !6
  %1094 = add nsw i32 %1093, -1
  %1095 = icmp slt i32 %1091, %1094
  br i1 %1095, label %1096, label %1111

1096:                                             ; preds = %1088
  br i1 %1083, label %1103, label %1097

1097:                                             ; preds = %1096
  %1098 = getelementptr inbounds i32, ptr %7, i64 %1089
  %1099 = load i32, ptr %1098, align 4, !tbaa !6
  %1100 = getelementptr inbounds i32, ptr %6, i64 %1089
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = add nsw i32 %1101, %1099
  store i32 %1102, ptr %1100, align 4, !tbaa !6
  br label %1121

1103:                                             ; preds = %1079, %1096
  %1104 = phi i32 [ %1091, %1096 ], [ %1080, %1079 ]
  %1105 = phi ptr [ %1090, %1096 ], [ %4, %1079 ]
  %1106 = phi i64 [ %1089, %1096 ], [ 0, %1079 ]
  %1107 = add nsw i32 %1104, 1
  store i32 %1107, ptr %1105, align 4, !tbaa !6
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1106
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1106
  br label %1121

1111:                                             ; preds = %1088
  %1112 = icmp eq i32 %1091, %1094
  br i1 %1112, label %1113, label %1119

1113:                                             ; preds = %1111
  store i32 0, ptr %1090, align 4, !tbaa !6
  %1114 = getelementptr inbounds i32, ptr %8, i64 %1089
  %1115 = load i32, ptr %1114, align 4, !tbaa !6
  %1116 = getelementptr inbounds i32, ptr %6, i64 %1089
  store i32 %1115, ptr %1116, align 4, !tbaa !6
  %1117 = add nuw nsw i64 %1089, 1
  %1118 = icmp eq i64 %1117, %988
  br i1 %1118, label %1126, label %1088, !llvm.loop !798

1119:                                             ; preds = %1084, %1111
  %1120 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1121:                                             ; preds = %1097, %1103
  %1122 = phi ptr [ %1110, %1103 ], [ %1090, %1097 ]
  %1123 = phi i32 [ %1109, %1103 ], [ 1, %1097 ]
  %1124 = load i32, ptr %1122, align 4, !tbaa !6
  %1125 = add nsw i32 %1124, %1123
  store i32 %1125, ptr %1122, align 4, !tbaa !6
  br label %1126

1126:                                             ; preds = %1113, %1121, %1086, %1064
  %1127 = icmp eq i32 %1078, %5
  br i1 %1127, label %5679, label %991, !llvm.loop !799

1128:                                             ; preds = %974, %1268
  %1129 = phi i32 [ 0, %974 ], [ %1217, %1268 ]
  %1130 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %975, label %1131, label %1200

1131:                                             ; preds = %1128, %1190
  %1132 = phi i32 [ %1199, %1190 ], [ 0, %1128 ]
  %1133 = phi i64 [ %1141, %1190 ], [ %979, %1128 ]
  %1134 = phi i64 [ %1198, %1190 ], [ %978, %1128 ]
  %1135 = phi i32 [ %1196, %1190 ], [ %1130, %1128 ]
  %1136 = sub i32 %977, %1132
  %1137 = tail call i32 @llvm.smin.i32(i32 %1136, i32 0)
  %1138 = sub i32 %1136, %1137
  %1139 = zext i32 %1138 to i64
  %1140 = add nuw nsw i64 %1139, 1
  %1141 = add nsw i64 %1133, -1
  %1142 = icmp ult i32 %1138, 31
  br i1 %1142, label %1178, label %1143

1143:                                             ; preds = %1131
  %1144 = and i64 %1140, 8589934560
  %1145 = sub i64 %1134, %1144
  br label %1146

1146:                                             ; preds = %1146, %1143
  %1147 = phi i64 [ 0, %1143 ], [ %1170, %1146 ]
  %1148 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1143 ], [ %1166, %1146 ]
  %1149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1143 ], [ %1167, %1146 ]
  %1150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1143 ], [ %1168, %1146 ]
  %1151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1143 ], [ %1169, %1146 ]
  %1152 = sub i64 %1134, %1147
  %1153 = getelementptr inbounds i32, ptr %11, i64 %1152
  %1154 = getelementptr inbounds i32, ptr %1153, i64 -7
  %1155 = load <8 x i32>, ptr %1154, align 4, !tbaa !6
  %1156 = shufflevector <8 x i32> %1155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1157 = getelementptr inbounds i32, ptr %1153, i64 -15
  %1158 = load <8 x i32>, ptr %1157, align 4, !tbaa !6
  %1159 = shufflevector <8 x i32> %1158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1160 = getelementptr inbounds i32, ptr %1153, i64 -23
  %1161 = load <8 x i32>, ptr %1160, align 4, !tbaa !6
  %1162 = shufflevector <8 x i32> %1161, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1163 = getelementptr inbounds i32, ptr %1153, i64 -31
  %1164 = load <8 x i32>, ptr %1163, align 4, !tbaa !6
  %1165 = shufflevector <8 x i32> %1164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1166 = mul <8 x i32> %1156, %1148
  %1167 = mul <8 x i32> %1159, %1149
  %1168 = mul <8 x i32> %1162, %1150
  %1169 = mul <8 x i32> %1165, %1151
  %1170 = add nuw i64 %1147, 32
  %1171 = icmp eq i64 %1170, %1144
  br i1 %1171, label %1172, label %1146, !llvm.loop !800

1172:                                             ; preds = %1146
  %1173 = mul <8 x i32> %1167, %1166
  %1174 = mul <8 x i32> %1168, %1173
  %1175 = mul <8 x i32> %1169, %1174
  %1176 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1175)
  %1177 = icmp eq i64 %1140, %1144
  br i1 %1177, label %1190, label %1178

1178:                                             ; preds = %1131, %1172
  %1179 = phi i64 [ %1134, %1131 ], [ %1145, %1172 ]
  %1180 = phi i32 [ 1, %1131 ], [ %1176, %1172 ]
  br label %1181

1181:                                             ; preds = %1178, %1181
  %1182 = phi i64 [ %1187, %1181 ], [ %1179, %1178 ]
  %1183 = phi i32 [ %1186, %1181 ], [ %1180, %1178 ]
  %1184 = getelementptr inbounds i32, ptr %11, i64 %1182
  %1185 = load i32, ptr %1184, align 4, !tbaa !6
  %1186 = mul nsw i32 %1185, %1183
  %1187 = add nsw i64 %1182, -1
  %1188 = trunc i64 %1182 to i32
  %1189 = icmp sgt i32 %1188, 0
  br i1 %1189, label %1181, label %1190, !llvm.loop !801

1190:                                             ; preds = %1181, %1172
  %1191 = phi i32 [ %1176, %1172 ], [ %1186, %1181 ]
  %1192 = and i64 %1141, 4294967295
  %1193 = getelementptr inbounds i32, ptr %6, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !6
  %1195 = mul nsw i32 %1194, %1191
  %1196 = add nsw i32 %1195, %1135
  %1197 = icmp sgt i64 %1133, 2
  %1198 = add nsw i64 %1134, -1
  %1199 = add i32 %1132, 1
  br i1 %1197, label %1131, label %1200, !llvm.loop !802

1200:                                             ; preds = %1190, %1128
  %1201 = phi i32 [ %1130, %1128 ], [ %1196, %1190 ]
  %1202 = icmp slt i32 %1201, %5
  br i1 %1202, label %1205, label %1203

1203:                                             ; preds = %1200
  %1204 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

1205:                                             ; preds = %1200
  %1206 = sext i32 %1201 to i64
  %1207 = getelementptr inbounds i64, ptr %644, i64 %1206
  %1208 = load i64, ptr %1207, align 8, !tbaa !121
  %1209 = trunc i64 %1208 to i32
  %1210 = load i32, ptr %646, align 4, !tbaa !6
  %1211 = icmp slt i32 %1209, 0
  %1212 = mul nsw i32 %1209, %1209
  %1213 = sub nsw i32 0, %1212
  %1214 = select i1 %1211, i32 %1213, i32 %1212
  %1215 = mul i32 %1214, %1209
  %1216 = add nsw i32 %1215, %1210
  store i32 %1216, ptr %646, align 4, !tbaa !6
  %1217 = add nuw nsw i32 %1129, 1
  br i1 %976, label %1218, label %1268

1218:                                             ; preds = %1205
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %981, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %979
  br i1 %1260, label %1268, label %1227, !llvm.loop !803

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1205
  %1269 = icmp eq i32 %1217, %5
  br i1 %1269, label %5679, label %1128, !llvm.loop !804

1270:                                             ; preds = %656
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  %1275 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1276 = load ptr, ptr %1275, align 8, !tbaa !10
  store i8 0, ptr %1276, align 1, !tbaa !12
  %1277 = icmp eq i32 %13, 0
  br i1 %1277, label %1278, label %1286

1278:                                             ; preds = %1272
  %1279 = load i64, ptr %1274, align 8, !tbaa !121
  %1280 = trunc i64 %1279 to i8
  %1281 = icmp slt i8 %1280, 0
  %1282 = mul i8 %1280, %1280
  %1283 = sub i8 0, %1282
  %1284 = select i1 %1281, i8 %1283, i8 %1282
  %1285 = mul i8 %1284, %1280
  store i8 %1285, ptr %1276, align 1, !tbaa !12
  br label %5679

1286:                                             ; preds = %1272
  switch i32 %1, label %1904 [
    i32 1, label %1287
    i32 0, label %1602
  ]

1287:                                             ; preds = %1286
  %1288 = getelementptr inbounds i32, ptr %3, i64 %19
  %1289 = load i32, ptr %1288, align 4, !tbaa !6
  %1290 = icmp eq i32 %1289, 0
  %1291 = icmp sgt i32 %5, 0
  br i1 %1290, label %1301, label %1292

1292:                                             ; preds = %1287
  br i1 %1291, label %1293, label %5679

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 1
  %1295 = icmp sgt i32 %13, 0
  %1296 = add i32 %13, -2
  %1297 = zext i32 %1296 to i64
  %1298 = zext i32 %13 to i64
  %1299 = add nuw i32 %5, 1
  %1300 = icmp eq i32 %13, 1
  br label %1455

1301:                                             ; preds = %1287
  br i1 %1291, label %1302, label %5679

1302:                                             ; preds = %1301
  %1303 = icmp sgt i32 %13, 1
  %1304 = icmp sgt i32 %13, 0
  %1305 = add i32 %13, -2
  %1306 = zext i32 %1305 to i64
  %1307 = zext i32 %13 to i64
  %1308 = add nuw i32 %5, 1
  %1309 = icmp eq i32 %13, 1
  br label %1310

1310:                                             ; preds = %1302, %1453
  %1311 = phi i32 [ 0, %1302 ], [ %1405, %1453 ]
  %1312 = phi double [ 0.000000e+00, %1302 ], [ %1404, %1453 ]
  %1313 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1303, label %1314, label %1383

1314:                                             ; preds = %1310, %1373
  %1315 = phi i32 [ %1382, %1373 ], [ 0, %1310 ]
  %1316 = phi i64 [ %1324, %1373 ], [ %1307, %1310 ]
  %1317 = phi i64 [ %1381, %1373 ], [ %1306, %1310 ]
  %1318 = phi i32 [ %1379, %1373 ], [ %1313, %1310 ]
  %1319 = sub i32 %1305, %1315
  %1320 = tail call i32 @llvm.smin.i32(i32 %1319, i32 0)
  %1321 = sub i32 %1319, %1320
  %1322 = zext i32 %1321 to i64
  %1323 = add nuw nsw i64 %1322, 1
  %1324 = add nsw i64 %1316, -1
  %1325 = icmp ult i32 %1321, 31
  br i1 %1325, label %1361, label %1326

1326:                                             ; preds = %1314
  %1327 = and i64 %1323, 8589934560
  %1328 = sub i64 %1317, %1327
  br label %1329

1329:                                             ; preds = %1329, %1326
  %1330 = phi i64 [ 0, %1326 ], [ %1353, %1329 ]
  %1331 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1326 ], [ %1349, %1329 ]
  %1332 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1326 ], [ %1350, %1329 ]
  %1333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1326 ], [ %1351, %1329 ]
  %1334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1326 ], [ %1352, %1329 ]
  %1335 = sub i64 %1317, %1330
  %1336 = getelementptr inbounds i32, ptr %9, i64 %1335
  %1337 = getelementptr inbounds i32, ptr %1336, i64 -7
  %1338 = load <8 x i32>, ptr %1337, align 4, !tbaa !6
  %1339 = shufflevector <8 x i32> %1338, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1340 = getelementptr inbounds i32, ptr %1336, i64 -15
  %1341 = load <8 x i32>, ptr %1340, align 4, !tbaa !6
  %1342 = shufflevector <8 x i32> %1341, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1343 = getelementptr inbounds i32, ptr %1336, i64 -23
  %1344 = load <8 x i32>, ptr %1343, align 4, !tbaa !6
  %1345 = shufflevector <8 x i32> %1344, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1346 = getelementptr inbounds i32, ptr %1336, i64 -31
  %1347 = load <8 x i32>, ptr %1346, align 4, !tbaa !6
  %1348 = shufflevector <8 x i32> %1347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1349 = mul <8 x i32> %1339, %1331
  %1350 = mul <8 x i32> %1342, %1332
  %1351 = mul <8 x i32> %1345, %1333
  %1352 = mul <8 x i32> %1348, %1334
  %1353 = add nuw i64 %1330, 32
  %1354 = icmp eq i64 %1353, %1327
  br i1 %1354, label %1355, label %1329, !llvm.loop !805

1355:                                             ; preds = %1329
  %1356 = mul <8 x i32> %1350, %1349
  %1357 = mul <8 x i32> %1351, %1356
  %1358 = mul <8 x i32> %1352, %1357
  %1359 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1358)
  %1360 = icmp eq i64 %1323, %1327
  br i1 %1360, label %1373, label %1361

1361:                                             ; preds = %1314, %1355
  %1362 = phi i64 [ %1317, %1314 ], [ %1328, %1355 ]
  %1363 = phi i32 [ 1, %1314 ], [ %1359, %1355 ]
  br label %1364

1364:                                             ; preds = %1361, %1364
  %1365 = phi i64 [ %1370, %1364 ], [ %1362, %1361 ]
  %1366 = phi i32 [ %1369, %1364 ], [ %1363, %1361 ]
  %1367 = getelementptr inbounds i32, ptr %9, i64 %1365
  %1368 = load i32, ptr %1367, align 4, !tbaa !6
  %1369 = mul nsw i32 %1368, %1366
  %1370 = add nsw i64 %1365, -1
  %1371 = trunc i64 %1365 to i32
  %1372 = icmp sgt i32 %1371, 0
  br i1 %1372, label %1364, label %1373, !llvm.loop !806

1373:                                             ; preds = %1364, %1355
  %1374 = phi i32 [ %1359, %1355 ], [ %1369, %1364 ]
  %1375 = and i64 %1324, 4294967295
  %1376 = getelementptr inbounds i32, ptr %6, i64 %1375
  %1377 = load i32, ptr %1376, align 4, !tbaa !6
  %1378 = mul nsw i32 %1377, %1374
  %1379 = add nsw i32 %1378, %1318
  %1380 = icmp sgt i64 %1316, 2
  %1381 = add nsw i64 %1317, -1
  %1382 = add i32 %1315, 1
  br i1 %1380, label %1314, label %1383, !llvm.loop !807

1383:                                             ; preds = %1373, %1310
  %1384 = phi i32 [ %1313, %1310 ], [ %1379, %1373 ]
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds double, ptr %2, i64 %1385
  %1387 = load double, ptr %1386, align 8, !tbaa !19
  %1388 = getelementptr inbounds i64, ptr %1274, i64 %1385
  %1389 = load i64, ptr %1388, align 8, !tbaa !121
  %1390 = trunc i64 %1389 to i32
  %1391 = load i8, ptr %1276, align 1, !tbaa !12
  %1392 = sitofp i8 %1391 to double
  %1393 = shl i32 %1390, 24
  %1394 = ashr exact i32 %1393, 24
  %1395 = sitofp i32 %1394 to double
  %1396 = fmul fast double %1387, %1395
  %1397 = fcmp fast olt double %1396, 0.000000e+00
  %1398 = fneg fast double %1396
  %1399 = select nnan ninf i1 %1397, double %1398, double %1396
  %1400 = fmul fast double %1396, %1396
  %1401 = fmul fast double %1400, %1399
  %1402 = fadd fast double %1401, %1392
  %1403 = fptosi double %1402 to i8
  store i8 %1403, ptr %1276, align 1, !tbaa !12
  %1404 = fadd fast double %1387, %1312
  %1405 = add nuw nsw i32 %1311, 1
  br i1 %1304, label %1406, label %1453

1406:                                             ; preds = %1383
  %1407 = load i32, ptr %4, align 4, !tbaa !6
  %1408 = load i32, ptr %12, align 4, !tbaa !6
  %1409 = add nsw i32 %1408, -1
  %1410 = icmp slt i32 %1407, %1409
  br i1 %1410, label %1430, label %1411

1411:                                             ; preds = %1406
  %1412 = icmp eq i32 %1407, %1409
  br i1 %1412, label %1413, label %1446

1413:                                             ; preds = %1411
  store i32 0, ptr %4, align 4, !tbaa !6
  %1414 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1414, ptr %6, align 4, !tbaa !6
  br i1 %1309, label %1453, label %1415

1415:                                             ; preds = %1413, %1440
  %1416 = phi i64 [ %1444, %1440 ], [ 1, %1413 ]
  %1417 = getelementptr inbounds i32, ptr %4, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = getelementptr inbounds i32, ptr %12, i64 %1416
  %1420 = load i32, ptr %1419, align 4, !tbaa !6
  %1421 = add nsw i32 %1420, -1
  %1422 = icmp slt i32 %1418, %1421
  br i1 %1422, label %1423, label %1438

1423:                                             ; preds = %1415
  br i1 %1410, label %1430, label %1424

1424:                                             ; preds = %1423
  %1425 = getelementptr inbounds i32, ptr %7, i64 %1416
  %1426 = load i32, ptr %1425, align 4, !tbaa !6
  %1427 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1428 = load i32, ptr %1427, align 4, !tbaa !6
  %1429 = add nsw i32 %1428, %1426
  store i32 %1429, ptr %1427, align 4, !tbaa !6
  br label %1448

1430:                                             ; preds = %1406, %1423
  %1431 = phi i32 [ %1418, %1423 ], [ %1407, %1406 ]
  %1432 = phi ptr [ %1417, %1423 ], [ %4, %1406 ]
  %1433 = phi i64 [ %1416, %1423 ], [ 0, %1406 ]
  %1434 = add nsw i32 %1431, 1
  store i32 %1434, ptr %1432, align 4, !tbaa !6
  %1435 = getelementptr inbounds i32, ptr %7, i64 %1433
  %1436 = load i32, ptr %1435, align 4, !tbaa !6
  %1437 = getelementptr inbounds i32, ptr %6, i64 %1433
  br label %1448

1438:                                             ; preds = %1415
  %1439 = icmp eq i32 %1418, %1421
  br i1 %1439, label %1440, label %1446

1440:                                             ; preds = %1438
  store i32 0, ptr %1417, align 4, !tbaa !6
  %1441 = getelementptr inbounds i32, ptr %8, i64 %1416
  %1442 = load i32, ptr %1441, align 4, !tbaa !6
  %1443 = getelementptr inbounds i32, ptr %6, i64 %1416
  store i32 %1442, ptr %1443, align 4, !tbaa !6
  %1444 = add nuw nsw i64 %1416, 1
  %1445 = icmp eq i64 %1444, %1307
  br i1 %1445, label %1453, label %1415, !llvm.loop !808

1446:                                             ; preds = %1411, %1438
  %1447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1448:                                             ; preds = %1424, %1430
  %1449 = phi ptr [ %1437, %1430 ], [ %1417, %1424 ]
  %1450 = phi i32 [ %1436, %1430 ], [ 1, %1424 ]
  %1451 = load i32, ptr %1449, align 4, !tbaa !6
  %1452 = add nsw i32 %1451, %1450
  store i32 %1452, ptr %1449, align 4, !tbaa !6
  br label %1453

1453:                                             ; preds = %1440, %1448, %1413, %1383
  %1454 = icmp eq i32 %1405, %5
  br i1 %1454, label %5679, label %1310, !llvm.loop !809

1455:                                             ; preds = %1293, %1600
  %1456 = phi i32 [ 0, %1293 ], [ %1549, %1600 ]
  %1457 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1294, label %1458, label %1527

1458:                                             ; preds = %1455, %1517
  %1459 = phi i32 [ %1526, %1517 ], [ 0, %1455 ]
  %1460 = phi i64 [ %1468, %1517 ], [ %1298, %1455 ]
  %1461 = phi i64 [ %1525, %1517 ], [ %1297, %1455 ]
  %1462 = phi i32 [ %1523, %1517 ], [ %1457, %1455 ]
  %1463 = sub i32 %1296, %1459
  %1464 = tail call i32 @llvm.smin.i32(i32 %1463, i32 0)
  %1465 = sub i32 %1463, %1464
  %1466 = zext i32 %1465 to i64
  %1467 = add nuw nsw i64 %1466, 1
  %1468 = add nsw i64 %1460, -1
  %1469 = icmp ult i32 %1465, 31
  br i1 %1469, label %1505, label %1470

1470:                                             ; preds = %1458
  %1471 = and i64 %1467, 8589934560
  %1472 = sub i64 %1461, %1471
  br label %1473

1473:                                             ; preds = %1473, %1470
  %1474 = phi i64 [ 0, %1470 ], [ %1497, %1473 ]
  %1475 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1470 ], [ %1493, %1473 ]
  %1476 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1470 ], [ %1494, %1473 ]
  %1477 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1470 ], [ %1495, %1473 ]
  %1478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1470 ], [ %1496, %1473 ]
  %1479 = sub i64 %1461, %1474
  %1480 = getelementptr inbounds i32, ptr %11, i64 %1479
  %1481 = getelementptr inbounds i32, ptr %1480, i64 -7
  %1482 = load <8 x i32>, ptr %1481, align 4, !tbaa !6
  %1483 = shufflevector <8 x i32> %1482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1484 = getelementptr inbounds i32, ptr %1480, i64 -15
  %1485 = load <8 x i32>, ptr %1484, align 4, !tbaa !6
  %1486 = shufflevector <8 x i32> %1485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1487 = getelementptr inbounds i32, ptr %1480, i64 -23
  %1488 = load <8 x i32>, ptr %1487, align 4, !tbaa !6
  %1489 = shufflevector <8 x i32> %1488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1490 = getelementptr inbounds i32, ptr %1480, i64 -31
  %1491 = load <8 x i32>, ptr %1490, align 4, !tbaa !6
  %1492 = shufflevector <8 x i32> %1491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1493 = mul <8 x i32> %1483, %1475
  %1494 = mul <8 x i32> %1486, %1476
  %1495 = mul <8 x i32> %1489, %1477
  %1496 = mul <8 x i32> %1492, %1478
  %1497 = add nuw i64 %1474, 32
  %1498 = icmp eq i64 %1497, %1471
  br i1 %1498, label %1499, label %1473, !llvm.loop !810

1499:                                             ; preds = %1473
  %1500 = mul <8 x i32> %1494, %1493
  %1501 = mul <8 x i32> %1495, %1500
  %1502 = mul <8 x i32> %1496, %1501
  %1503 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1502)
  %1504 = icmp eq i64 %1467, %1471
  br i1 %1504, label %1517, label %1505

1505:                                             ; preds = %1458, %1499
  %1506 = phi i64 [ %1461, %1458 ], [ %1472, %1499 ]
  %1507 = phi i32 [ 1, %1458 ], [ %1503, %1499 ]
  br label %1508

1508:                                             ; preds = %1505, %1508
  %1509 = phi i64 [ %1514, %1508 ], [ %1506, %1505 ]
  %1510 = phi i32 [ %1513, %1508 ], [ %1507, %1505 ]
  %1511 = getelementptr inbounds i32, ptr %11, i64 %1509
  %1512 = load i32, ptr %1511, align 4, !tbaa !6
  %1513 = mul nsw i32 %1512, %1510
  %1514 = add nsw i64 %1509, -1
  %1515 = trunc i64 %1509 to i32
  %1516 = icmp sgt i32 %1515, 0
  br i1 %1516, label %1508, label %1517, !llvm.loop !811

1517:                                             ; preds = %1508, %1499
  %1518 = phi i32 [ %1503, %1499 ], [ %1513, %1508 ]
  %1519 = and i64 %1468, 4294967295
  %1520 = getelementptr inbounds i32, ptr %6, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !6
  %1522 = mul nsw i32 %1521, %1518
  %1523 = add nsw i32 %1522, %1462
  %1524 = icmp sgt i64 %1460, 2
  %1525 = add nsw i64 %1461, -1
  %1526 = add i32 %1459, 1
  br i1 %1524, label %1458, label %1527, !llvm.loop !812

1527:                                             ; preds = %1517, %1455
  %1528 = phi i32 [ %1457, %1455 ], [ %1523, %1517 ]
  %1529 = icmp slt i32 %1528, %5
  br i1 %1529, label %1532, label %1530

1530:                                             ; preds = %1527
  %1531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

1532:                                             ; preds = %1527
  %1533 = sext i32 %1528 to i64
  %1534 = getelementptr inbounds i64, ptr %1274, i64 %1533
  %1535 = load i64, ptr %1534, align 8, !tbaa !121
  %1536 = trunc i64 %1535 to i32
  %1537 = load i8, ptr %1276, align 1, !tbaa !12
  %1538 = sitofp i8 %1537 to double
  %1539 = shl i32 %1536, 24
  %1540 = ashr exact i32 %1539, 24
  %1541 = sitofp i32 %1540 to double
  %1542 = icmp slt i32 %1539, 0
  %1543 = fneg fast double %1541
  %1544 = select i1 %1542, double %1543, double %1541
  %1545 = fmul fast double %1541, %1541
  %1546 = fmul fast double %1545, %1544
  %1547 = fadd fast double %1546, %1538
  %1548 = fptosi double %1547 to i8
  store i8 %1548, ptr %1276, align 1, !tbaa !12
  %1549 = add nuw nsw i32 %1456, 1
  br i1 %1295, label %1550, label %1600

1550:                                             ; preds = %1532
  %1551 = load i32, ptr %4, align 4, !tbaa !6
  %1552 = load i32, ptr %12, align 4, !tbaa !6
  %1553 = add nsw i32 %1552, -1
  %1554 = icmp slt i32 %1551, %1553
  br i1 %1554, label %1577, label %1555

1555:                                             ; preds = %1550
  %1556 = icmp eq i32 %1551, %1553
  br i1 %1556, label %1557, label %1593

1557:                                             ; preds = %1555
  store i32 0, ptr %4, align 4, !tbaa !6
  %1558 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1558, ptr %6, align 4, !tbaa !6
  br i1 %1300, label %1600, label %1559

1559:                                             ; preds = %1557, %1587
  %1560 = phi i64 [ %1591, %1587 ], [ 1, %1557 ]
  %1561 = getelementptr inbounds i32, ptr %4, i64 %1560
  %1562 = load i32, ptr %1561, align 4, !tbaa !6
  %1563 = getelementptr inbounds i32, ptr %12, i64 %1560
  %1564 = load i32, ptr %1563, align 4, !tbaa !6
  %1565 = add nsw i32 %1564, -1
  %1566 = icmp slt i32 %1562, %1565
  br i1 %1566, label %1567, label %1585

1567:                                             ; preds = %1559
  br i1 %1554, label %1577, label %1568

1568:                                             ; preds = %1567
  %1569 = shl i64 %1560, 32
  %1570 = add i64 %1569, -4294967296
  %1571 = ashr exact i64 %1570, 32
  %1572 = getelementptr inbounds i32, ptr %7, i64 %1571
  %1573 = load i32, ptr %1572, align 4, !tbaa !6
  %1574 = getelementptr inbounds i32, ptr %6, i64 %1560
  %1575 = load i32, ptr %1574, align 4, !tbaa !6
  %1576 = add nsw i32 %1575, %1573
  store i32 %1576, ptr %1574, align 4, !tbaa !6
  br label %1595

1577:                                             ; preds = %1550, %1567
  %1578 = phi i32 [ %1562, %1567 ], [ %1551, %1550 ]
  %1579 = phi ptr [ %1561, %1567 ], [ %4, %1550 ]
  %1580 = phi i64 [ %1560, %1567 ], [ 0, %1550 ]
  %1581 = add nsw i32 %1578, 1
  store i32 %1581, ptr %1579, align 4, !tbaa !6
  %1582 = getelementptr inbounds i32, ptr %7, i64 %1580
  %1583 = load i32, ptr %1582, align 4, !tbaa !6
  %1584 = getelementptr inbounds i32, ptr %6, i64 %1580
  br label %1595

1585:                                             ; preds = %1559
  %1586 = icmp eq i32 %1562, %1565
  br i1 %1586, label %1587, label %1593

1587:                                             ; preds = %1585
  store i32 0, ptr %1561, align 4, !tbaa !6
  %1588 = getelementptr inbounds i32, ptr %8, i64 %1560
  %1589 = load i32, ptr %1588, align 4, !tbaa !6
  %1590 = getelementptr inbounds i32, ptr %6, i64 %1560
  store i32 %1589, ptr %1590, align 4, !tbaa !6
  %1591 = add nuw nsw i64 %1560, 1
  %1592 = icmp eq i64 %1591, %1298
  br i1 %1592, label %1600, label %1559, !llvm.loop !813

1593:                                             ; preds = %1555, %1585
  %1594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1595:                                             ; preds = %1568, %1577
  %1596 = phi ptr [ %1584, %1577 ], [ %1561, %1568 ]
  %1597 = phi i32 [ %1583, %1577 ], [ 1, %1568 ]
  %1598 = load i32, ptr %1596, align 4, !tbaa !6
  %1599 = add nsw i32 %1598, %1597
  store i32 %1599, ptr %1596, align 4, !tbaa !6
  br label %1600

1600:                                             ; preds = %1587, %1595, %1557, %1532
  %1601 = icmp eq i32 %1549, %5
  br i1 %1601, label %5679, label %1455, !llvm.loop !814

1602:                                             ; preds = %1286
  %1603 = getelementptr inbounds i32, ptr %3, i64 %19
  %1604 = load i32, ptr %1603, align 4, !tbaa !6
  %1605 = icmp eq i32 %1604, 0
  %1606 = icmp sgt i32 %5, 0
  br i1 %1605, label %1616, label %1607

1607:                                             ; preds = %1602
  br i1 %1606, label %1608, label %5679

1608:                                             ; preds = %1607
  %1609 = icmp sgt i32 %13, 1
  %1610 = icmp sgt i32 %13, 0
  %1611 = add i32 %13, -2
  %1612 = zext i32 %1611 to i64
  %1613 = zext i32 %13 to i64
  %1614 = add nuw i32 %5, 1
  %1615 = icmp eq i32 %13, 1
  br label %1762

1616:                                             ; preds = %1602
  br i1 %1606, label %1617, label %5679

1617:                                             ; preds = %1616
  %1618 = icmp sgt i32 %13, 1
  %1619 = icmp sgt i32 %13, 0
  %1620 = add i32 %13, -2
  %1621 = zext i32 %1620 to i64
  %1622 = zext i32 %13 to i64
  %1623 = add nuw i32 %5, 1
  %1624 = icmp eq i32 %13, 1
  br label %1625

1625:                                             ; preds = %1617, %1760
  %1626 = phi i32 [ 0, %1617 ], [ %1712, %1760 ]
  %1627 = phi double [ 0.000000e+00, %1617 ], [ %1711, %1760 ]
  %1628 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1618, label %1629, label %1698

1629:                                             ; preds = %1625, %1688
  %1630 = phi i32 [ %1697, %1688 ], [ 0, %1625 ]
  %1631 = phi i64 [ %1639, %1688 ], [ %1622, %1625 ]
  %1632 = phi i64 [ %1696, %1688 ], [ %1621, %1625 ]
  %1633 = phi i32 [ %1694, %1688 ], [ %1628, %1625 ]
  %1634 = sub i32 %1620, %1630
  %1635 = tail call i32 @llvm.smin.i32(i32 %1634, i32 0)
  %1636 = sub i32 %1634, %1635
  %1637 = zext i32 %1636 to i64
  %1638 = add nuw nsw i64 %1637, 1
  %1639 = add nsw i64 %1631, -1
  %1640 = icmp ult i32 %1636, 31
  br i1 %1640, label %1676, label %1641

1641:                                             ; preds = %1629
  %1642 = and i64 %1638, 8589934560
  %1643 = sub i64 %1632, %1642
  br label %1644

1644:                                             ; preds = %1644, %1641
  %1645 = phi i64 [ 0, %1641 ], [ %1668, %1644 ]
  %1646 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1641 ], [ %1664, %1644 ]
  %1647 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1641 ], [ %1665, %1644 ]
  %1648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1641 ], [ %1666, %1644 ]
  %1649 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1641 ], [ %1667, %1644 ]
  %1650 = sub i64 %1632, %1645
  %1651 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1652 = getelementptr inbounds i32, ptr %1651, i64 -7
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = getelementptr inbounds i32, ptr %1651, i64 -15
  %1656 = load <8 x i32>, ptr %1655, align 4, !tbaa !6
  %1657 = shufflevector <8 x i32> %1656, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1658 = getelementptr inbounds i32, ptr %1651, i64 -23
  %1659 = load <8 x i32>, ptr %1658, align 4, !tbaa !6
  %1660 = shufflevector <8 x i32> %1659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1661 = getelementptr inbounds i32, ptr %1651, i64 -31
  %1662 = load <8 x i32>, ptr %1661, align 4, !tbaa !6
  %1663 = shufflevector <8 x i32> %1662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1664 = mul <8 x i32> %1654, %1646
  %1665 = mul <8 x i32> %1657, %1647
  %1666 = mul <8 x i32> %1660, %1648
  %1667 = mul <8 x i32> %1663, %1649
  %1668 = add nuw i64 %1645, 32
  %1669 = icmp eq i64 %1668, %1642
  br i1 %1669, label %1670, label %1644, !llvm.loop !815

1670:                                             ; preds = %1644
  %1671 = mul <8 x i32> %1665, %1664
  %1672 = mul <8 x i32> %1666, %1671
  %1673 = mul <8 x i32> %1667, %1672
  %1674 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1673)
  %1675 = icmp eq i64 %1638, %1642
  br i1 %1675, label %1688, label %1676

1676:                                             ; preds = %1629, %1670
  %1677 = phi i64 [ %1632, %1629 ], [ %1643, %1670 ]
  %1678 = phi i32 [ 1, %1629 ], [ %1674, %1670 ]
  br label %1679

1679:                                             ; preds = %1676, %1679
  %1680 = phi i64 [ %1685, %1679 ], [ %1677, %1676 ]
  %1681 = phi i32 [ %1684, %1679 ], [ %1678, %1676 ]
  %1682 = getelementptr inbounds i32, ptr %9, i64 %1680
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = mul nsw i32 %1683, %1681
  %1685 = add nsw i64 %1680, -1
  %1686 = trunc i64 %1680 to i32
  %1687 = icmp sgt i32 %1686, 0
  br i1 %1687, label %1679, label %1688, !llvm.loop !816

1688:                                             ; preds = %1679, %1670
  %1689 = phi i32 [ %1674, %1670 ], [ %1684, %1679 ]
  %1690 = and i64 %1639, 4294967295
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1690
  %1692 = load i32, ptr %1691, align 4, !tbaa !6
  %1693 = mul nsw i32 %1692, %1689
  %1694 = add nsw i32 %1693, %1633
  %1695 = icmp sgt i64 %1631, 2
  %1696 = add nsw i64 %1632, -1
  %1697 = add i32 %1630, 1
  br i1 %1695, label %1629, label %1698, !llvm.loop !817

1698:                                             ; preds = %1688, %1625
  %1699 = phi i32 [ %1628, %1625 ], [ %1694, %1688 ]
  %1700 = sext i32 %1699 to i64
  %1701 = getelementptr inbounds i64, ptr %1274, i64 %1700
  %1702 = load i64, ptr %1701, align 8, !tbaa !121
  %1703 = trunc i64 %1702 to i8
  %1704 = load i8, ptr %1276, align 1, !tbaa !12
  %1705 = icmp slt i8 %1703, 0
  %1706 = mul i8 %1703, %1703
  %1707 = sub i8 0, %1706
  %1708 = select i1 %1705, i8 %1707, i8 %1706
  %1709 = mul i8 %1708, %1703
  %1710 = add i8 %1709, %1704
  store i8 %1710, ptr %1276, align 1, !tbaa !12
  %1711 = fadd fast double %1627, 1.000000e+00
  %1712 = add nuw nsw i32 %1626, 1
  br i1 %1619, label %1713, label %1760

1713:                                             ; preds = %1698
  %1714 = load i32, ptr %4, align 4, !tbaa !6
  %1715 = load i32, ptr %12, align 4, !tbaa !6
  %1716 = add nsw i32 %1715, -1
  %1717 = icmp slt i32 %1714, %1716
  br i1 %1717, label %1737, label %1718

1718:                                             ; preds = %1713
  %1719 = icmp eq i32 %1714, %1716
  br i1 %1719, label %1720, label %1753

1720:                                             ; preds = %1718
  store i32 0, ptr %4, align 4, !tbaa !6
  %1721 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1721, ptr %6, align 4, !tbaa !6
  br i1 %1624, label %1760, label %1722

1722:                                             ; preds = %1720, %1747
  %1723 = phi i64 [ %1751, %1747 ], [ 1, %1720 ]
  %1724 = getelementptr inbounds i32, ptr %4, i64 %1723
  %1725 = load i32, ptr %1724, align 4, !tbaa !6
  %1726 = getelementptr inbounds i32, ptr %12, i64 %1723
  %1727 = load i32, ptr %1726, align 4, !tbaa !6
  %1728 = add nsw i32 %1727, -1
  %1729 = icmp slt i32 %1725, %1728
  br i1 %1729, label %1730, label %1745

1730:                                             ; preds = %1722
  br i1 %1717, label %1737, label %1731

1731:                                             ; preds = %1730
  %1732 = getelementptr inbounds i32, ptr %7, i64 %1723
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %6, i64 %1723
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, %1733
  store i32 %1736, ptr %1734, align 4, !tbaa !6
  br label %1755

1737:                                             ; preds = %1713, %1730
  %1738 = phi i32 [ %1725, %1730 ], [ %1714, %1713 ]
  %1739 = phi ptr [ %1724, %1730 ], [ %4, %1713 ]
  %1740 = phi i64 [ %1723, %1730 ], [ 0, %1713 ]
  %1741 = add nsw i32 %1738, 1
  store i32 %1741, ptr %1739, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %7, i64 %1740
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = getelementptr inbounds i32, ptr %6, i64 %1740
  br label %1755

1745:                                             ; preds = %1722
  %1746 = icmp eq i32 %1725, %1728
  br i1 %1746, label %1747, label %1753

1747:                                             ; preds = %1745
  store i32 0, ptr %1724, align 4, !tbaa !6
  %1748 = getelementptr inbounds i32, ptr %8, i64 %1723
  %1749 = load i32, ptr %1748, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %6, i64 %1723
  store i32 %1749, ptr %1750, align 4, !tbaa !6
  %1751 = add nuw nsw i64 %1723, 1
  %1752 = icmp eq i64 %1751, %1622
  br i1 %1752, label %1760, label %1722, !llvm.loop !818

1753:                                             ; preds = %1718, %1745
  %1754 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1755:                                             ; preds = %1731, %1737
  %1756 = phi ptr [ %1744, %1737 ], [ %1724, %1731 ]
  %1757 = phi i32 [ %1743, %1737 ], [ 1, %1731 ]
  %1758 = load i32, ptr %1756, align 4, !tbaa !6
  %1759 = add nsw i32 %1758, %1757
  store i32 %1759, ptr %1756, align 4, !tbaa !6
  br label %1760

1760:                                             ; preds = %1747, %1755, %1720, %1698
  %1761 = icmp eq i32 %1712, %5
  br i1 %1761, label %5679, label %1625, !llvm.loop !819

1762:                                             ; preds = %1608, %1902
  %1763 = phi i32 [ 0, %1608 ], [ %1851, %1902 ]
  %1764 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1765, label %1834

1765:                                             ; preds = %1762, %1824
  %1766 = phi i32 [ %1833, %1824 ], [ 0, %1762 ]
  %1767 = phi i64 [ %1775, %1824 ], [ %1613, %1762 ]
  %1768 = phi i64 [ %1832, %1824 ], [ %1612, %1762 ]
  %1769 = phi i32 [ %1830, %1824 ], [ %1764, %1762 ]
  %1770 = sub i32 %1611, %1766
  %1771 = tail call i32 @llvm.smin.i32(i32 %1770, i32 0)
  %1772 = sub i32 %1770, %1771
  %1773 = zext i32 %1772 to i64
  %1774 = add nuw nsw i64 %1773, 1
  %1775 = add nsw i64 %1767, -1
  %1776 = icmp ult i32 %1772, 31
  br i1 %1776, label %1812, label %1777

1777:                                             ; preds = %1765
  %1778 = and i64 %1774, 8589934560
  %1779 = sub i64 %1768, %1778
  br label %1780

1780:                                             ; preds = %1780, %1777
  %1781 = phi i64 [ 0, %1777 ], [ %1804, %1780 ]
  %1782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1777 ], [ %1800, %1780 ]
  %1783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1777 ], [ %1801, %1780 ]
  %1784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1777 ], [ %1802, %1780 ]
  %1785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1777 ], [ %1803, %1780 ]
  %1786 = sub i64 %1768, %1781
  %1787 = getelementptr inbounds i32, ptr %11, i64 %1786
  %1788 = getelementptr inbounds i32, ptr %1787, i64 -7
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = getelementptr inbounds i32, ptr %1787, i64 -15
  %1792 = load <8 x i32>, ptr %1791, align 4, !tbaa !6
  %1793 = shufflevector <8 x i32> %1792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1794 = getelementptr inbounds i32, ptr %1787, i64 -23
  %1795 = load <8 x i32>, ptr %1794, align 4, !tbaa !6
  %1796 = shufflevector <8 x i32> %1795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1797 = getelementptr inbounds i32, ptr %1787, i64 -31
  %1798 = load <8 x i32>, ptr %1797, align 4, !tbaa !6
  %1799 = shufflevector <8 x i32> %1798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1800 = mul <8 x i32> %1790, %1782
  %1801 = mul <8 x i32> %1793, %1783
  %1802 = mul <8 x i32> %1796, %1784
  %1803 = mul <8 x i32> %1799, %1785
  %1804 = add nuw i64 %1781, 32
  %1805 = icmp eq i64 %1804, %1778
  br i1 %1805, label %1806, label %1780, !llvm.loop !820

1806:                                             ; preds = %1780
  %1807 = mul <8 x i32> %1801, %1800
  %1808 = mul <8 x i32> %1802, %1807
  %1809 = mul <8 x i32> %1803, %1808
  %1810 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1809)
  %1811 = icmp eq i64 %1774, %1778
  br i1 %1811, label %1824, label %1812

1812:                                             ; preds = %1765, %1806
  %1813 = phi i64 [ %1768, %1765 ], [ %1779, %1806 ]
  %1814 = phi i32 [ 1, %1765 ], [ %1810, %1806 ]
  br label %1815

1815:                                             ; preds = %1812, %1815
  %1816 = phi i64 [ %1821, %1815 ], [ %1813, %1812 ]
  %1817 = phi i32 [ %1820, %1815 ], [ %1814, %1812 ]
  %1818 = getelementptr inbounds i32, ptr %11, i64 %1816
  %1819 = load i32, ptr %1818, align 4, !tbaa !6
  %1820 = mul nsw i32 %1819, %1817
  %1821 = add nsw i64 %1816, -1
  %1822 = trunc i64 %1816 to i32
  %1823 = icmp sgt i32 %1822, 0
  br i1 %1823, label %1815, label %1824, !llvm.loop !821

1824:                                             ; preds = %1815, %1806
  %1825 = phi i32 [ %1810, %1806 ], [ %1820, %1815 ]
  %1826 = and i64 %1775, 4294967295
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1826
  %1828 = load i32, ptr %1827, align 4, !tbaa !6
  %1829 = mul nsw i32 %1828, %1825
  %1830 = add nsw i32 %1829, %1769
  %1831 = icmp sgt i64 %1767, 2
  %1832 = add nsw i64 %1768, -1
  %1833 = add i32 %1766, 1
  br i1 %1831, label %1765, label %1834, !llvm.loop !822

1834:                                             ; preds = %1824, %1762
  %1835 = phi i32 [ %1764, %1762 ], [ %1830, %1824 ]
  %1836 = icmp slt i32 %1835, %5
  br i1 %1836, label %1839, label %1837

1837:                                             ; preds = %1834
  %1838 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

1839:                                             ; preds = %1834
  %1840 = sext i32 %1835 to i64
  %1841 = getelementptr inbounds i64, ptr %1274, i64 %1840
  %1842 = load i64, ptr %1841, align 8, !tbaa !121
  %1843 = trunc i64 %1842 to i8
  %1844 = load i8, ptr %1276, align 1, !tbaa !12
  %1845 = icmp slt i8 %1843, 0
  %1846 = mul i8 %1843, %1843
  %1847 = sub i8 0, %1846
  %1848 = select i1 %1845, i8 %1847, i8 %1846
  %1849 = mul i8 %1848, %1843
  %1850 = add i8 %1849, %1844
  store i8 %1850, ptr %1276, align 1, !tbaa !12
  %1851 = add nuw nsw i32 %1763, 1
  br i1 %1610, label %1852, label %1902

1852:                                             ; preds = %1839
  %1853 = load i32, ptr %4, align 4, !tbaa !6
  %1854 = load i32, ptr %12, align 4, !tbaa !6
  %1855 = add nsw i32 %1854, -1
  %1856 = icmp slt i32 %1853, %1855
  br i1 %1856, label %1879, label %1857

1857:                                             ; preds = %1852
  %1858 = icmp eq i32 %1853, %1855
  br i1 %1858, label %1859, label %1895

1859:                                             ; preds = %1857
  store i32 0, ptr %4, align 4, !tbaa !6
  %1860 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1860, ptr %6, align 4, !tbaa !6
  br i1 %1615, label %1902, label %1861

1861:                                             ; preds = %1859, %1889
  %1862 = phi i64 [ %1893, %1889 ], [ 1, %1859 ]
  %1863 = getelementptr inbounds i32, ptr %4, i64 %1862
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = getelementptr inbounds i32, ptr %12, i64 %1862
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = add nsw i32 %1866, -1
  %1868 = icmp slt i32 %1864, %1867
  br i1 %1868, label %1869, label %1887

1869:                                             ; preds = %1861
  br i1 %1856, label %1879, label %1870

1870:                                             ; preds = %1869
  %1871 = shl i64 %1862, 32
  %1872 = add i64 %1871, -4294967296
  %1873 = ashr exact i64 %1872, 32
  %1874 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1875 = load i32, ptr %1874, align 4, !tbaa !6
  %1876 = getelementptr inbounds i32, ptr %6, i64 %1862
  %1877 = load i32, ptr %1876, align 4, !tbaa !6
  %1878 = add nsw i32 %1877, %1875
  store i32 %1878, ptr %1876, align 4, !tbaa !6
  br label %1897

1879:                                             ; preds = %1852, %1869
  %1880 = phi i32 [ %1864, %1869 ], [ %1853, %1852 ]
  %1881 = phi ptr [ %1863, %1869 ], [ %4, %1852 ]
  %1882 = phi i64 [ %1862, %1869 ], [ 0, %1852 ]
  %1883 = add nsw i32 %1880, 1
  store i32 %1883, ptr %1881, align 4, !tbaa !6
  %1884 = getelementptr inbounds i32, ptr %7, i64 %1882
  %1885 = load i32, ptr %1884, align 4, !tbaa !6
  %1886 = getelementptr inbounds i32, ptr %6, i64 %1882
  br label %1897

1887:                                             ; preds = %1861
  %1888 = icmp eq i32 %1864, %1867
  br i1 %1888, label %1889, label %1895

1889:                                             ; preds = %1887
  store i32 0, ptr %1863, align 4, !tbaa !6
  %1890 = getelementptr inbounds i32, ptr %8, i64 %1862
  %1891 = load i32, ptr %1890, align 4, !tbaa !6
  %1892 = getelementptr inbounds i32, ptr %6, i64 %1862
  store i32 %1891, ptr %1892, align 4, !tbaa !6
  %1893 = add nuw nsw i64 %1862, 1
  %1894 = icmp eq i64 %1893, %1613
  br i1 %1894, label %1902, label %1861, !llvm.loop !823

1895:                                             ; preds = %1857, %1887
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

1897:                                             ; preds = %1870, %1879
  %1898 = phi ptr [ %1886, %1879 ], [ %1863, %1870 ]
  %1899 = phi i32 [ %1885, %1879 ], [ 1, %1870 ]
  %1900 = load i32, ptr %1898, align 4, !tbaa !6
  %1901 = add nsw i32 %1900, %1899
  store i32 %1901, ptr %1898, align 4, !tbaa !6
  br label %1902

1902:                                             ; preds = %1889, %1897, %1859, %1839
  %1903 = icmp eq i32 %1851, %5
  br i1 %1903, label %5679, label %1762, !llvm.loop !824

1904:                                             ; preds = %1286
  %1905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

1906:                                             ; preds = %18
  %1907 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1908 = load ptr, ptr %1907, align 8, !tbaa !10
  %1909 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1910 = load ptr, ptr %1909, align 8, !tbaa !10
  store i16 0, ptr %1910, align 2, !tbaa !79
  %1911 = icmp eq i32 %13, 0
  br i1 %1911, label %1912, label %1920

1912:                                             ; preds = %1906
  %1913 = load i64, ptr %1908, align 8, !tbaa !121
  %1914 = trunc i64 %1913 to i16
  %1915 = icmp slt i16 %1914, 0
  %1916 = mul i16 %1914, %1914
  %1917 = sub i16 0, %1916
  %1918 = select i1 %1915, i16 %1917, i16 %1916
  %1919 = mul i16 %1918, %1914
  store i16 %1919, ptr %1910, align 2, !tbaa !79
  br label %5679

1920:                                             ; preds = %1906
  switch i32 %1, label %2538 [
    i32 1, label %1921
    i32 0, label %2236
  ]

1921:                                             ; preds = %1920
  %1922 = getelementptr inbounds i32, ptr %3, i64 %19
  %1923 = load i32, ptr %1922, align 4, !tbaa !6
  %1924 = icmp eq i32 %1923, 0
  %1925 = icmp sgt i32 %5, 0
  br i1 %1924, label %1935, label %1926

1926:                                             ; preds = %1921
  br i1 %1925, label %1927, label %5679

1927:                                             ; preds = %1926
  %1928 = icmp sgt i32 %13, 1
  %1929 = icmp sgt i32 %13, 0
  %1930 = add i32 %13, -2
  %1931 = zext i32 %1930 to i64
  %1932 = zext i32 %13 to i64
  %1933 = add nuw i32 %5, 1
  %1934 = icmp eq i32 %13, 1
  br label %2089

1935:                                             ; preds = %1921
  br i1 %1925, label %1936, label %5679

1936:                                             ; preds = %1935
  %1937 = icmp sgt i32 %13, 1
  %1938 = icmp sgt i32 %13, 0
  %1939 = add i32 %13, -2
  %1940 = zext i32 %1939 to i64
  %1941 = zext i32 %13 to i64
  %1942 = add nuw i32 %5, 1
  %1943 = icmp eq i32 %13, 1
  br label %1944

1944:                                             ; preds = %1936, %2087
  %1945 = phi i16 [ 0, %1936 ], [ %2037, %2087 ]
  %1946 = phi i32 [ 0, %1936 ], [ %2039, %2087 ]
  %1947 = phi double [ 0.000000e+00, %1936 ], [ %2038, %2087 ]
  %1948 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1937, label %1949, label %2018

1949:                                             ; preds = %1944, %2008
  %1950 = phi i32 [ %2017, %2008 ], [ 0, %1944 ]
  %1951 = phi i64 [ %1959, %2008 ], [ %1941, %1944 ]
  %1952 = phi i64 [ %2016, %2008 ], [ %1940, %1944 ]
  %1953 = phi i32 [ %2014, %2008 ], [ %1948, %1944 ]
  %1954 = sub i32 %1939, %1950
  %1955 = tail call i32 @llvm.smin.i32(i32 %1954, i32 0)
  %1956 = sub i32 %1954, %1955
  %1957 = zext i32 %1956 to i64
  %1958 = add nuw nsw i64 %1957, 1
  %1959 = add nsw i64 %1951, -1
  %1960 = icmp ult i32 %1956, 31
  br i1 %1960, label %1996, label %1961

1961:                                             ; preds = %1949
  %1962 = and i64 %1958, 8589934560
  %1963 = sub i64 %1952, %1962
  br label %1964

1964:                                             ; preds = %1964, %1961
  %1965 = phi i64 [ 0, %1961 ], [ %1988, %1964 ]
  %1966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1961 ], [ %1984, %1964 ]
  %1967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1961 ], [ %1985, %1964 ]
  %1968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1961 ], [ %1986, %1964 ]
  %1969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1961 ], [ %1987, %1964 ]
  %1970 = sub i64 %1952, %1965
  %1971 = getelementptr inbounds i32, ptr %9, i64 %1970
  %1972 = getelementptr inbounds i32, ptr %1971, i64 -7
  %1973 = load <8 x i32>, ptr %1972, align 4, !tbaa !6
  %1974 = shufflevector <8 x i32> %1973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1975 = getelementptr inbounds i32, ptr %1971, i64 -15
  %1976 = load <8 x i32>, ptr %1975, align 4, !tbaa !6
  %1977 = shufflevector <8 x i32> %1976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1978 = getelementptr inbounds i32, ptr %1971, i64 -23
  %1979 = load <8 x i32>, ptr %1978, align 4, !tbaa !6
  %1980 = shufflevector <8 x i32> %1979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1981 = getelementptr inbounds i32, ptr %1971, i64 -31
  %1982 = load <8 x i32>, ptr %1981, align 4, !tbaa !6
  %1983 = shufflevector <8 x i32> %1982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1984 = mul <8 x i32> %1974, %1966
  %1985 = mul <8 x i32> %1977, %1967
  %1986 = mul <8 x i32> %1980, %1968
  %1987 = mul <8 x i32> %1983, %1969
  %1988 = add nuw i64 %1965, 32
  %1989 = icmp eq i64 %1988, %1962
  br i1 %1989, label %1990, label %1964, !llvm.loop !825

1990:                                             ; preds = %1964
  %1991 = mul <8 x i32> %1985, %1984
  %1992 = mul <8 x i32> %1986, %1991
  %1993 = mul <8 x i32> %1987, %1992
  %1994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1993)
  %1995 = icmp eq i64 %1958, %1962
  br i1 %1995, label %2008, label %1996

1996:                                             ; preds = %1949, %1990
  %1997 = phi i64 [ %1952, %1949 ], [ %1963, %1990 ]
  %1998 = phi i32 [ 1, %1949 ], [ %1994, %1990 ]
  br label %1999

1999:                                             ; preds = %1996, %1999
  %2000 = phi i64 [ %2005, %1999 ], [ %1997, %1996 ]
  %2001 = phi i32 [ %2004, %1999 ], [ %1998, %1996 ]
  %2002 = getelementptr inbounds i32, ptr %9, i64 %2000
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = mul nsw i32 %2003, %2001
  %2005 = add nsw i64 %2000, -1
  %2006 = trunc i64 %2000 to i32
  %2007 = icmp sgt i32 %2006, 0
  br i1 %2007, label %1999, label %2008, !llvm.loop !826

2008:                                             ; preds = %1999, %1990
  %2009 = phi i32 [ %1994, %1990 ], [ %2004, %1999 ]
  %2010 = and i64 %1959, 4294967295
  %2011 = getelementptr inbounds i32, ptr %6, i64 %2010
  %2012 = load i32, ptr %2011, align 4, !tbaa !6
  %2013 = mul nsw i32 %2012, %2009
  %2014 = add nsw i32 %2013, %1953
  %2015 = icmp sgt i64 %1951, 2
  %2016 = add nsw i64 %1952, -1
  %2017 = add i32 %1950, 1
  br i1 %2015, label %1949, label %2018, !llvm.loop !827

2018:                                             ; preds = %2008, %1944
  %2019 = phi i32 [ %1948, %1944 ], [ %2014, %2008 ]
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds double, ptr %2, i64 %2020
  %2022 = load double, ptr %2021, align 8, !tbaa !19
  %2023 = getelementptr inbounds i64, ptr %1908, i64 %2020
  %2024 = load i64, ptr %2023, align 8, !tbaa !121
  %2025 = trunc i64 %2024 to i32
  %2026 = sitofp i16 %1945 to double
  %2027 = shl i32 %2025, 16
  %2028 = ashr exact i32 %2027, 16
  %2029 = sitofp i32 %2028 to double
  %2030 = fmul fast double %2022, %2029
  %2031 = fcmp fast olt double %2030, 0.000000e+00
  %2032 = fneg fast double %2030
  %2033 = select nnan ninf i1 %2031, double %2032, double %2030
  %2034 = fmul fast double %2030, %2030
  %2035 = fmul fast double %2034, %2033
  %2036 = fadd fast double %2035, %2026
  %2037 = fptosi double %2036 to i16
  %2038 = fadd fast double %2022, %1947
  %2039 = add nuw nsw i32 %1946, 1
  br i1 %1938, label %2040, label %2087

2040:                                             ; preds = %2018
  %2041 = load i32, ptr %4, align 4, !tbaa !6
  %2042 = load i32, ptr %12, align 4, !tbaa !6
  %2043 = add nsw i32 %2042, -1
  %2044 = icmp slt i32 %2041, %2043
  br i1 %2044, label %2064, label %2045

2045:                                             ; preds = %2040
  %2046 = icmp eq i32 %2041, %2043
  br i1 %2046, label %2047, label %2080

2047:                                             ; preds = %2045
  store i32 0, ptr %4, align 4, !tbaa !6
  %2048 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2048, ptr %6, align 4, !tbaa !6
  br i1 %1943, label %2087, label %2049

2049:                                             ; preds = %2047, %2074
  %2050 = phi i64 [ %2078, %2074 ], [ 1, %2047 ]
  %2051 = getelementptr inbounds i32, ptr %4, i64 %2050
  %2052 = load i32, ptr %2051, align 4, !tbaa !6
  %2053 = getelementptr inbounds i32, ptr %12, i64 %2050
  %2054 = load i32, ptr %2053, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2052, %2055
  br i1 %2056, label %2057, label %2072

2057:                                             ; preds = %2049
  br i1 %2044, label %2064, label %2058

2058:                                             ; preds = %2057
  %2059 = getelementptr inbounds i32, ptr %7, i64 %2050
  %2060 = load i32, ptr %2059, align 4, !tbaa !6
  %2061 = getelementptr inbounds i32, ptr %6, i64 %2050
  %2062 = load i32, ptr %2061, align 4, !tbaa !6
  %2063 = add nsw i32 %2062, %2060
  store i32 %2063, ptr %2061, align 4, !tbaa !6
  br label %2082

2064:                                             ; preds = %2040, %2057
  %2065 = phi i32 [ %2052, %2057 ], [ %2041, %2040 ]
  %2066 = phi ptr [ %2051, %2057 ], [ %4, %2040 ]
  %2067 = phi i64 [ %2050, %2057 ], [ 0, %2040 ]
  %2068 = add nsw i32 %2065, 1
  store i32 %2068, ptr %2066, align 4, !tbaa !6
  %2069 = getelementptr inbounds i32, ptr %7, i64 %2067
  %2070 = load i32, ptr %2069, align 4, !tbaa !6
  %2071 = getelementptr inbounds i32, ptr %6, i64 %2067
  br label %2082

2072:                                             ; preds = %2049
  %2073 = icmp eq i32 %2052, %2055
  br i1 %2073, label %2074, label %2080

2074:                                             ; preds = %2072
  store i32 0, ptr %2051, align 4, !tbaa !6
  %2075 = getelementptr inbounds i32, ptr %8, i64 %2050
  %2076 = load i32, ptr %2075, align 4, !tbaa !6
  %2077 = getelementptr inbounds i32, ptr %6, i64 %2050
  store i32 %2076, ptr %2077, align 4, !tbaa !6
  %2078 = add nuw nsw i64 %2050, 1
  %2079 = icmp eq i64 %2078, %1941
  br i1 %2079, label %2087, label %2049, !llvm.loop !828

2080:                                             ; preds = %2045, %2072
  store i16 %2037, ptr %1910, align 2, !tbaa !79
  %2081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2082:                                             ; preds = %2058, %2064
  %2083 = phi ptr [ %2071, %2064 ], [ %2051, %2058 ]
  %2084 = phi i32 [ %2070, %2064 ], [ 1, %2058 ]
  %2085 = load i32, ptr %2083, align 4, !tbaa !6
  %2086 = add nsw i32 %2085, %2084
  store i32 %2086, ptr %2083, align 4, !tbaa !6
  br label %2087

2087:                                             ; preds = %2074, %2082, %2047, %2018
  %2088 = icmp eq i32 %2039, %5
  br i1 %2088, label %5673, label %1944, !llvm.loop !829

2089:                                             ; preds = %1927, %2234
  %2090 = phi i16 [ 0, %1927 ], [ %2182, %2234 ]
  %2091 = phi i32 [ 0, %1927 ], [ %2183, %2234 ]
  %2092 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1928, label %2093, label %2162

2093:                                             ; preds = %2089, %2152
  %2094 = phi i32 [ %2161, %2152 ], [ 0, %2089 ]
  %2095 = phi i64 [ %2103, %2152 ], [ %1932, %2089 ]
  %2096 = phi i64 [ %2160, %2152 ], [ %1931, %2089 ]
  %2097 = phi i32 [ %2158, %2152 ], [ %2092, %2089 ]
  %2098 = sub i32 %1930, %2094
  %2099 = tail call i32 @llvm.smin.i32(i32 %2098, i32 0)
  %2100 = sub i32 %2098, %2099
  %2101 = zext i32 %2100 to i64
  %2102 = add nuw nsw i64 %2101, 1
  %2103 = add nsw i64 %2095, -1
  %2104 = icmp ult i32 %2100, 31
  br i1 %2104, label %2140, label %2105

2105:                                             ; preds = %2093
  %2106 = and i64 %2102, 8589934560
  %2107 = sub i64 %2096, %2106
  br label %2108

2108:                                             ; preds = %2108, %2105
  %2109 = phi i64 [ 0, %2105 ], [ %2132, %2108 ]
  %2110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2105 ], [ %2128, %2108 ]
  %2111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2105 ], [ %2129, %2108 ]
  %2112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2105 ], [ %2130, %2108 ]
  %2113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2105 ], [ %2131, %2108 ]
  %2114 = sub i64 %2096, %2109
  %2115 = getelementptr inbounds i32, ptr %11, i64 %2114
  %2116 = getelementptr inbounds i32, ptr %2115, i64 -7
  %2117 = load <8 x i32>, ptr %2116, align 4, !tbaa !6
  %2118 = shufflevector <8 x i32> %2117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2119 = getelementptr inbounds i32, ptr %2115, i64 -15
  %2120 = load <8 x i32>, ptr %2119, align 4, !tbaa !6
  %2121 = shufflevector <8 x i32> %2120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2122 = getelementptr inbounds i32, ptr %2115, i64 -23
  %2123 = load <8 x i32>, ptr %2122, align 4, !tbaa !6
  %2124 = shufflevector <8 x i32> %2123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2125 = getelementptr inbounds i32, ptr %2115, i64 -31
  %2126 = load <8 x i32>, ptr %2125, align 4, !tbaa !6
  %2127 = shufflevector <8 x i32> %2126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2128 = mul <8 x i32> %2118, %2110
  %2129 = mul <8 x i32> %2121, %2111
  %2130 = mul <8 x i32> %2124, %2112
  %2131 = mul <8 x i32> %2127, %2113
  %2132 = add nuw i64 %2109, 32
  %2133 = icmp eq i64 %2132, %2106
  br i1 %2133, label %2134, label %2108, !llvm.loop !830

2134:                                             ; preds = %2108
  %2135 = mul <8 x i32> %2129, %2128
  %2136 = mul <8 x i32> %2130, %2135
  %2137 = mul <8 x i32> %2131, %2136
  %2138 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2137)
  %2139 = icmp eq i64 %2102, %2106
  br i1 %2139, label %2152, label %2140

2140:                                             ; preds = %2093, %2134
  %2141 = phi i64 [ %2096, %2093 ], [ %2107, %2134 ]
  %2142 = phi i32 [ 1, %2093 ], [ %2138, %2134 ]
  br label %2143

2143:                                             ; preds = %2140, %2143
  %2144 = phi i64 [ %2149, %2143 ], [ %2141, %2140 ]
  %2145 = phi i32 [ %2148, %2143 ], [ %2142, %2140 ]
  %2146 = getelementptr inbounds i32, ptr %11, i64 %2144
  %2147 = load i32, ptr %2146, align 4, !tbaa !6
  %2148 = mul nsw i32 %2147, %2145
  %2149 = add nsw i64 %2144, -1
  %2150 = trunc i64 %2144 to i32
  %2151 = icmp sgt i32 %2150, 0
  br i1 %2151, label %2143, label %2152, !llvm.loop !831

2152:                                             ; preds = %2143, %2134
  %2153 = phi i32 [ %2138, %2134 ], [ %2148, %2143 ]
  %2154 = and i64 %2103, 4294967295
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2154
  %2156 = load i32, ptr %2155, align 4, !tbaa !6
  %2157 = mul nsw i32 %2156, %2153
  %2158 = add nsw i32 %2157, %2097
  %2159 = icmp sgt i64 %2095, 2
  %2160 = add nsw i64 %2096, -1
  %2161 = add i32 %2094, 1
  br i1 %2159, label %2093, label %2162, !llvm.loop !832

2162:                                             ; preds = %2152, %2089
  %2163 = phi i32 [ %2092, %2089 ], [ %2158, %2152 ]
  %2164 = icmp slt i32 %2163, %5
  br i1 %2164, label %2167, label %2165

2165:                                             ; preds = %2162
  %2166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

2167:                                             ; preds = %2162
  %2168 = sext i32 %2163 to i64
  %2169 = getelementptr inbounds i64, ptr %1908, i64 %2168
  %2170 = load i64, ptr %2169, align 8, !tbaa !121
  %2171 = trunc i64 %2170 to i32
  %2172 = sitofp i16 %2090 to double
  %2173 = shl i32 %2171, 16
  %2174 = ashr exact i32 %2173, 16
  %2175 = sitofp i32 %2174 to double
  %2176 = icmp slt i32 %2173, 0
  %2177 = fneg fast double %2175
  %2178 = select i1 %2176, double %2177, double %2175
  %2179 = fmul fast double %2175, %2175
  %2180 = fmul fast double %2179, %2178
  %2181 = fadd fast double %2180, %2172
  %2182 = fptosi double %2181 to i16
  store i16 %2182, ptr %1910, align 2, !tbaa !79
  %2183 = add nuw nsw i32 %2091, 1
  br i1 %1929, label %2184, label %2234

2184:                                             ; preds = %2167
  %2185 = load i32, ptr %4, align 4, !tbaa !6
  %2186 = load i32, ptr %12, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, -1
  %2188 = icmp slt i32 %2185, %2187
  br i1 %2188, label %2211, label %2189

2189:                                             ; preds = %2184
  %2190 = icmp eq i32 %2185, %2187
  br i1 %2190, label %2191, label %2227

2191:                                             ; preds = %2189
  store i32 0, ptr %4, align 4, !tbaa !6
  %2192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2192, ptr %6, align 4, !tbaa !6
  br i1 %1934, label %2234, label %2193

2193:                                             ; preds = %2191, %2221
  %2194 = phi i64 [ %2225, %2221 ], [ 1, %2191 ]
  %2195 = getelementptr inbounds i32, ptr %4, i64 %2194
  %2196 = load i32, ptr %2195, align 4, !tbaa !6
  %2197 = getelementptr inbounds i32, ptr %12, i64 %2194
  %2198 = load i32, ptr %2197, align 4, !tbaa !6
  %2199 = add nsw i32 %2198, -1
  %2200 = icmp slt i32 %2196, %2199
  br i1 %2200, label %2201, label %2219

2201:                                             ; preds = %2193
  br i1 %2188, label %2211, label %2202

2202:                                             ; preds = %2201
  %2203 = shl i64 %2194, 32
  %2204 = add i64 %2203, -4294967296
  %2205 = ashr exact i64 %2204, 32
  %2206 = getelementptr inbounds i32, ptr %7, i64 %2205
  %2207 = load i32, ptr %2206, align 4, !tbaa !6
  %2208 = getelementptr inbounds i32, ptr %6, i64 %2194
  %2209 = load i32, ptr %2208, align 4, !tbaa !6
  %2210 = add nsw i32 %2209, %2207
  store i32 %2210, ptr %2208, align 4, !tbaa !6
  br label %2229

2211:                                             ; preds = %2184, %2201
  %2212 = phi i32 [ %2196, %2201 ], [ %2185, %2184 ]
  %2213 = phi ptr [ %2195, %2201 ], [ %4, %2184 ]
  %2214 = phi i64 [ %2194, %2201 ], [ 0, %2184 ]
  %2215 = add nsw i32 %2212, 1
  store i32 %2215, ptr %2213, align 4, !tbaa !6
  %2216 = getelementptr inbounds i32, ptr %7, i64 %2214
  %2217 = load i32, ptr %2216, align 4, !tbaa !6
  %2218 = getelementptr inbounds i32, ptr %6, i64 %2214
  br label %2229

2219:                                             ; preds = %2193
  %2220 = icmp eq i32 %2196, %2199
  br i1 %2220, label %2221, label %2227

2221:                                             ; preds = %2219
  store i32 0, ptr %2195, align 4, !tbaa !6
  %2222 = getelementptr inbounds i32, ptr %8, i64 %2194
  %2223 = load i32, ptr %2222, align 4, !tbaa !6
  %2224 = getelementptr inbounds i32, ptr %6, i64 %2194
  store i32 %2223, ptr %2224, align 4, !tbaa !6
  %2225 = add nuw nsw i64 %2194, 1
  %2226 = icmp eq i64 %2225, %1932
  br i1 %2226, label %2234, label %2193, !llvm.loop !833

2227:                                             ; preds = %2189, %2219
  %2228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2229:                                             ; preds = %2202, %2211
  %2230 = phi ptr [ %2218, %2211 ], [ %2195, %2202 ]
  %2231 = phi i32 [ %2217, %2211 ], [ 1, %2202 ]
  %2232 = load i32, ptr %2230, align 4, !tbaa !6
  %2233 = add nsw i32 %2232, %2231
  store i32 %2233, ptr %2230, align 4, !tbaa !6
  br label %2234

2234:                                             ; preds = %2221, %2229, %2191, %2167
  %2235 = icmp eq i32 %2183, %5
  br i1 %2235, label %5679, label %2089, !llvm.loop !834

2236:                                             ; preds = %1920
  %2237 = getelementptr inbounds i32, ptr %3, i64 %19
  %2238 = load i32, ptr %2237, align 4, !tbaa !6
  %2239 = icmp eq i32 %2238, 0
  %2240 = icmp sgt i32 %5, 0
  br i1 %2239, label %2250, label %2241

2241:                                             ; preds = %2236
  br i1 %2240, label %2242, label %5679

2242:                                             ; preds = %2241
  %2243 = icmp sgt i32 %13, 1
  %2244 = icmp sgt i32 %13, 0
  %2245 = add i32 %13, -2
  %2246 = zext i32 %2245 to i64
  %2247 = zext i32 %13 to i64
  %2248 = add nuw i32 %5, 1
  %2249 = icmp eq i32 %13, 1
  br label %2396

2250:                                             ; preds = %2236
  br i1 %2240, label %2251, label %5679

2251:                                             ; preds = %2250
  %2252 = icmp sgt i32 %13, 1
  %2253 = icmp sgt i32 %13, 0
  %2254 = add i32 %13, -2
  %2255 = zext i32 %2254 to i64
  %2256 = zext i32 %13 to i64
  %2257 = add nuw i32 %5, 1
  %2258 = icmp eq i32 %13, 1
  br label %2259

2259:                                             ; preds = %2251, %2394
  %2260 = phi i16 [ 0, %2251 ], [ %2344, %2394 ]
  %2261 = phi i32 [ 0, %2251 ], [ %2346, %2394 ]
  %2262 = phi double [ 0.000000e+00, %2251 ], [ %2345, %2394 ]
  %2263 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2252, label %2264, label %2333

2264:                                             ; preds = %2259, %2323
  %2265 = phi i32 [ %2332, %2323 ], [ 0, %2259 ]
  %2266 = phi i64 [ %2274, %2323 ], [ %2256, %2259 ]
  %2267 = phi i64 [ %2331, %2323 ], [ %2255, %2259 ]
  %2268 = phi i32 [ %2329, %2323 ], [ %2263, %2259 ]
  %2269 = sub i32 %2254, %2265
  %2270 = tail call i32 @llvm.smin.i32(i32 %2269, i32 0)
  %2271 = sub i32 %2269, %2270
  %2272 = zext i32 %2271 to i64
  %2273 = add nuw nsw i64 %2272, 1
  %2274 = add nsw i64 %2266, -1
  %2275 = icmp ult i32 %2271, 31
  br i1 %2275, label %2311, label %2276

2276:                                             ; preds = %2264
  %2277 = and i64 %2273, 8589934560
  %2278 = sub i64 %2267, %2277
  br label %2279

2279:                                             ; preds = %2279, %2276
  %2280 = phi i64 [ 0, %2276 ], [ %2303, %2279 ]
  %2281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2276 ], [ %2299, %2279 ]
  %2282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2276 ], [ %2300, %2279 ]
  %2283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2276 ], [ %2301, %2279 ]
  %2284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2276 ], [ %2302, %2279 ]
  %2285 = sub i64 %2267, %2280
  %2286 = getelementptr inbounds i32, ptr %9, i64 %2285
  %2287 = getelementptr inbounds i32, ptr %2286, i64 -7
  %2288 = load <8 x i32>, ptr %2287, align 4, !tbaa !6
  %2289 = shufflevector <8 x i32> %2288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2290 = getelementptr inbounds i32, ptr %2286, i64 -15
  %2291 = load <8 x i32>, ptr %2290, align 4, !tbaa !6
  %2292 = shufflevector <8 x i32> %2291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2293 = getelementptr inbounds i32, ptr %2286, i64 -23
  %2294 = load <8 x i32>, ptr %2293, align 4, !tbaa !6
  %2295 = shufflevector <8 x i32> %2294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2296 = getelementptr inbounds i32, ptr %2286, i64 -31
  %2297 = load <8 x i32>, ptr %2296, align 4, !tbaa !6
  %2298 = shufflevector <8 x i32> %2297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2299 = mul <8 x i32> %2289, %2281
  %2300 = mul <8 x i32> %2292, %2282
  %2301 = mul <8 x i32> %2295, %2283
  %2302 = mul <8 x i32> %2298, %2284
  %2303 = add nuw i64 %2280, 32
  %2304 = icmp eq i64 %2303, %2277
  br i1 %2304, label %2305, label %2279, !llvm.loop !835

2305:                                             ; preds = %2279
  %2306 = mul <8 x i32> %2300, %2299
  %2307 = mul <8 x i32> %2301, %2306
  %2308 = mul <8 x i32> %2302, %2307
  %2309 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2308)
  %2310 = icmp eq i64 %2273, %2277
  br i1 %2310, label %2323, label %2311

2311:                                             ; preds = %2264, %2305
  %2312 = phi i64 [ %2267, %2264 ], [ %2278, %2305 ]
  %2313 = phi i32 [ 1, %2264 ], [ %2309, %2305 ]
  br label %2314

2314:                                             ; preds = %2311, %2314
  %2315 = phi i64 [ %2320, %2314 ], [ %2312, %2311 ]
  %2316 = phi i32 [ %2319, %2314 ], [ %2313, %2311 ]
  %2317 = getelementptr inbounds i32, ptr %9, i64 %2315
  %2318 = load i32, ptr %2317, align 4, !tbaa !6
  %2319 = mul nsw i32 %2318, %2316
  %2320 = add nsw i64 %2315, -1
  %2321 = trunc i64 %2315 to i32
  %2322 = icmp sgt i32 %2321, 0
  br i1 %2322, label %2314, label %2323, !llvm.loop !836

2323:                                             ; preds = %2314, %2305
  %2324 = phi i32 [ %2309, %2305 ], [ %2319, %2314 ]
  %2325 = and i64 %2274, 4294967295
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2325
  %2327 = load i32, ptr %2326, align 4, !tbaa !6
  %2328 = mul nsw i32 %2327, %2324
  %2329 = add nsw i32 %2328, %2268
  %2330 = icmp sgt i64 %2266, 2
  %2331 = add nsw i64 %2267, -1
  %2332 = add i32 %2265, 1
  br i1 %2330, label %2264, label %2333, !llvm.loop !837

2333:                                             ; preds = %2323, %2259
  %2334 = phi i32 [ %2263, %2259 ], [ %2329, %2323 ]
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds i64, ptr %1908, i64 %2335
  %2337 = load i64, ptr %2336, align 8, !tbaa !121
  %2338 = trunc i64 %2337 to i16
  %2339 = icmp slt i16 %2338, 0
  %2340 = mul i16 %2338, %2338
  %2341 = sub i16 0, %2340
  %2342 = select i1 %2339, i16 %2341, i16 %2340
  %2343 = mul i16 %2342, %2338
  %2344 = add i16 %2343, %2260
  %2345 = fadd fast double %2262, 1.000000e+00
  %2346 = add nuw nsw i32 %2261, 1
  br i1 %2253, label %2347, label %2394

2347:                                             ; preds = %2333
  %2348 = load i32, ptr %4, align 4, !tbaa !6
  %2349 = load i32, ptr %12, align 4, !tbaa !6
  %2350 = add nsw i32 %2349, -1
  %2351 = icmp slt i32 %2348, %2350
  br i1 %2351, label %2371, label %2352

2352:                                             ; preds = %2347
  %2353 = icmp eq i32 %2348, %2350
  br i1 %2353, label %2354, label %2387

2354:                                             ; preds = %2352
  store i32 0, ptr %4, align 4, !tbaa !6
  %2355 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2355, ptr %6, align 4, !tbaa !6
  br i1 %2258, label %2394, label %2356

2356:                                             ; preds = %2354, %2381
  %2357 = phi i64 [ %2385, %2381 ], [ 1, %2354 ]
  %2358 = getelementptr inbounds i32, ptr %4, i64 %2357
  %2359 = load i32, ptr %2358, align 4, !tbaa !6
  %2360 = getelementptr inbounds i32, ptr %12, i64 %2357
  %2361 = load i32, ptr %2360, align 4, !tbaa !6
  %2362 = add nsw i32 %2361, -1
  %2363 = icmp slt i32 %2359, %2362
  br i1 %2363, label %2364, label %2379

2364:                                             ; preds = %2356
  br i1 %2351, label %2371, label %2365

2365:                                             ; preds = %2364
  %2366 = getelementptr inbounds i32, ptr %7, i64 %2357
  %2367 = load i32, ptr %2366, align 4, !tbaa !6
  %2368 = getelementptr inbounds i32, ptr %6, i64 %2357
  %2369 = load i32, ptr %2368, align 4, !tbaa !6
  %2370 = add nsw i32 %2369, %2367
  store i32 %2370, ptr %2368, align 4, !tbaa !6
  br label %2389

2371:                                             ; preds = %2347, %2364
  %2372 = phi i32 [ %2359, %2364 ], [ %2348, %2347 ]
  %2373 = phi ptr [ %2358, %2364 ], [ %4, %2347 ]
  %2374 = phi i64 [ %2357, %2364 ], [ 0, %2347 ]
  %2375 = add nsw i32 %2372, 1
  store i32 %2375, ptr %2373, align 4, !tbaa !6
  %2376 = getelementptr inbounds i32, ptr %7, i64 %2374
  %2377 = load i32, ptr %2376, align 4, !tbaa !6
  %2378 = getelementptr inbounds i32, ptr %6, i64 %2374
  br label %2389

2379:                                             ; preds = %2356
  %2380 = icmp eq i32 %2359, %2362
  br i1 %2380, label %2381, label %2387

2381:                                             ; preds = %2379
  store i32 0, ptr %2358, align 4, !tbaa !6
  %2382 = getelementptr inbounds i32, ptr %8, i64 %2357
  %2383 = load i32, ptr %2382, align 4, !tbaa !6
  %2384 = getelementptr inbounds i32, ptr %6, i64 %2357
  store i32 %2383, ptr %2384, align 4, !tbaa !6
  %2385 = add nuw nsw i64 %2357, 1
  %2386 = icmp eq i64 %2385, %2256
  br i1 %2386, label %2394, label %2356, !llvm.loop !838

2387:                                             ; preds = %2352, %2379
  store i16 %2344, ptr %1910, align 2, !tbaa !79
  %2388 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2389:                                             ; preds = %2365, %2371
  %2390 = phi ptr [ %2378, %2371 ], [ %2358, %2365 ]
  %2391 = phi i32 [ %2377, %2371 ], [ 1, %2365 ]
  %2392 = load i32, ptr %2390, align 4, !tbaa !6
  %2393 = add nsw i32 %2392, %2391
  store i32 %2393, ptr %2390, align 4, !tbaa !6
  br label %2394

2394:                                             ; preds = %2381, %2389, %2354, %2333
  %2395 = icmp eq i32 %2346, %5
  br i1 %2395, label %5674, label %2259, !llvm.loop !839

2396:                                             ; preds = %2242, %2536
  %2397 = phi i16 [ 0, %2242 ], [ %2484, %2536 ]
  %2398 = phi i32 [ 0, %2242 ], [ %2485, %2536 ]
  %2399 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2243, label %2400, label %2469

2400:                                             ; preds = %2396, %2459
  %2401 = phi i32 [ %2468, %2459 ], [ 0, %2396 ]
  %2402 = phi i64 [ %2410, %2459 ], [ %2247, %2396 ]
  %2403 = phi i64 [ %2467, %2459 ], [ %2246, %2396 ]
  %2404 = phi i32 [ %2465, %2459 ], [ %2399, %2396 ]
  %2405 = sub i32 %2245, %2401
  %2406 = tail call i32 @llvm.smin.i32(i32 %2405, i32 0)
  %2407 = sub i32 %2405, %2406
  %2408 = zext i32 %2407 to i64
  %2409 = add nuw nsw i64 %2408, 1
  %2410 = add nsw i64 %2402, -1
  %2411 = icmp ult i32 %2407, 31
  br i1 %2411, label %2447, label %2412

2412:                                             ; preds = %2400
  %2413 = and i64 %2409, 8589934560
  %2414 = sub i64 %2403, %2413
  br label %2415

2415:                                             ; preds = %2415, %2412
  %2416 = phi i64 [ 0, %2412 ], [ %2439, %2415 ]
  %2417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2412 ], [ %2435, %2415 ]
  %2418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2412 ], [ %2436, %2415 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2412 ], [ %2437, %2415 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2412 ], [ %2438, %2415 ]
  %2421 = sub i64 %2403, %2416
  %2422 = getelementptr inbounds i32, ptr %11, i64 %2421
  %2423 = getelementptr inbounds i32, ptr %2422, i64 -7
  %2424 = load <8 x i32>, ptr %2423, align 4, !tbaa !6
  %2425 = shufflevector <8 x i32> %2424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2426 = getelementptr inbounds i32, ptr %2422, i64 -15
  %2427 = load <8 x i32>, ptr %2426, align 4, !tbaa !6
  %2428 = shufflevector <8 x i32> %2427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2429 = getelementptr inbounds i32, ptr %2422, i64 -23
  %2430 = load <8 x i32>, ptr %2429, align 4, !tbaa !6
  %2431 = shufflevector <8 x i32> %2430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2432 = getelementptr inbounds i32, ptr %2422, i64 -31
  %2433 = load <8 x i32>, ptr %2432, align 4, !tbaa !6
  %2434 = shufflevector <8 x i32> %2433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2435 = mul <8 x i32> %2425, %2417
  %2436 = mul <8 x i32> %2428, %2418
  %2437 = mul <8 x i32> %2431, %2419
  %2438 = mul <8 x i32> %2434, %2420
  %2439 = add nuw i64 %2416, 32
  %2440 = icmp eq i64 %2439, %2413
  br i1 %2440, label %2441, label %2415, !llvm.loop !840

2441:                                             ; preds = %2415
  %2442 = mul <8 x i32> %2436, %2435
  %2443 = mul <8 x i32> %2437, %2442
  %2444 = mul <8 x i32> %2438, %2443
  %2445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2444)
  %2446 = icmp eq i64 %2409, %2413
  br i1 %2446, label %2459, label %2447

2447:                                             ; preds = %2400, %2441
  %2448 = phi i64 [ %2403, %2400 ], [ %2414, %2441 ]
  %2449 = phi i32 [ 1, %2400 ], [ %2445, %2441 ]
  br label %2450

2450:                                             ; preds = %2447, %2450
  %2451 = phi i64 [ %2456, %2450 ], [ %2448, %2447 ]
  %2452 = phi i32 [ %2455, %2450 ], [ %2449, %2447 ]
  %2453 = getelementptr inbounds i32, ptr %11, i64 %2451
  %2454 = load i32, ptr %2453, align 4, !tbaa !6
  %2455 = mul nsw i32 %2454, %2452
  %2456 = add nsw i64 %2451, -1
  %2457 = trunc i64 %2451 to i32
  %2458 = icmp sgt i32 %2457, 0
  br i1 %2458, label %2450, label %2459, !llvm.loop !841

2459:                                             ; preds = %2450, %2441
  %2460 = phi i32 [ %2445, %2441 ], [ %2455, %2450 ]
  %2461 = and i64 %2410, 4294967295
  %2462 = getelementptr inbounds i32, ptr %6, i64 %2461
  %2463 = load i32, ptr %2462, align 4, !tbaa !6
  %2464 = mul nsw i32 %2463, %2460
  %2465 = add nsw i32 %2464, %2404
  %2466 = icmp sgt i64 %2402, 2
  %2467 = add nsw i64 %2403, -1
  %2468 = add i32 %2401, 1
  br i1 %2466, label %2400, label %2469, !llvm.loop !842

2469:                                             ; preds = %2459, %2396
  %2470 = phi i32 [ %2399, %2396 ], [ %2465, %2459 ]
  %2471 = icmp slt i32 %2470, %5
  br i1 %2471, label %2474, label %2472

2472:                                             ; preds = %2469
  %2473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

2474:                                             ; preds = %2469
  %2475 = sext i32 %2470 to i64
  %2476 = getelementptr inbounds i64, ptr %1908, i64 %2475
  %2477 = load i64, ptr %2476, align 8, !tbaa !121
  %2478 = trunc i64 %2477 to i16
  %2479 = icmp slt i16 %2478, 0
  %2480 = mul i16 %2478, %2478
  %2481 = sub i16 0, %2480
  %2482 = select i1 %2479, i16 %2481, i16 %2480
  %2483 = mul i16 %2482, %2478
  %2484 = add i16 %2483, %2397
  store i16 %2484, ptr %1910, align 2, !tbaa !79
  %2485 = add nuw nsw i32 %2398, 1
  br i1 %2244, label %2486, label %2536

2486:                                             ; preds = %2474
  %2487 = load i32, ptr %4, align 4, !tbaa !6
  %2488 = load i32, ptr %12, align 4, !tbaa !6
  %2489 = add nsw i32 %2488, -1
  %2490 = icmp slt i32 %2487, %2489
  br i1 %2490, label %2513, label %2491

2491:                                             ; preds = %2486
  %2492 = icmp eq i32 %2487, %2489
  br i1 %2492, label %2493, label %2529

2493:                                             ; preds = %2491
  store i32 0, ptr %4, align 4, !tbaa !6
  %2494 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2494, ptr %6, align 4, !tbaa !6
  br i1 %2249, label %2536, label %2495

2495:                                             ; preds = %2493, %2523
  %2496 = phi i64 [ %2527, %2523 ], [ 1, %2493 ]
  %2497 = getelementptr inbounds i32, ptr %4, i64 %2496
  %2498 = load i32, ptr %2497, align 4, !tbaa !6
  %2499 = getelementptr inbounds i32, ptr %12, i64 %2496
  %2500 = load i32, ptr %2499, align 4, !tbaa !6
  %2501 = add nsw i32 %2500, -1
  %2502 = icmp slt i32 %2498, %2501
  br i1 %2502, label %2503, label %2521

2503:                                             ; preds = %2495
  br i1 %2490, label %2513, label %2504

2504:                                             ; preds = %2503
  %2505 = shl i64 %2496, 32
  %2506 = add i64 %2505, -4294967296
  %2507 = ashr exact i64 %2506, 32
  %2508 = getelementptr inbounds i32, ptr %7, i64 %2507
  %2509 = load i32, ptr %2508, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %6, i64 %2496
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = add nsw i32 %2511, %2509
  store i32 %2512, ptr %2510, align 4, !tbaa !6
  br label %2531

2513:                                             ; preds = %2486, %2503
  %2514 = phi i32 [ %2498, %2503 ], [ %2487, %2486 ]
  %2515 = phi ptr [ %2497, %2503 ], [ %4, %2486 ]
  %2516 = phi i64 [ %2496, %2503 ], [ 0, %2486 ]
  %2517 = add nsw i32 %2514, 1
  store i32 %2517, ptr %2515, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %7, i64 %2516
  %2519 = load i32, ptr %2518, align 4, !tbaa !6
  %2520 = getelementptr inbounds i32, ptr %6, i64 %2516
  br label %2531

2521:                                             ; preds = %2495
  %2522 = icmp eq i32 %2498, %2501
  br i1 %2522, label %2523, label %2529

2523:                                             ; preds = %2521
  store i32 0, ptr %2497, align 4, !tbaa !6
  %2524 = getelementptr inbounds i32, ptr %8, i64 %2496
  %2525 = load i32, ptr %2524, align 4, !tbaa !6
  %2526 = getelementptr inbounds i32, ptr %6, i64 %2496
  store i32 %2525, ptr %2526, align 4, !tbaa !6
  %2527 = add nuw nsw i64 %2496, 1
  %2528 = icmp eq i64 %2527, %2247
  br i1 %2528, label %2536, label %2495, !llvm.loop !843

2529:                                             ; preds = %2491, %2521
  %2530 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2531:                                             ; preds = %2504, %2513
  %2532 = phi ptr [ %2520, %2513 ], [ %2497, %2504 ]
  %2533 = phi i32 [ %2519, %2513 ], [ 1, %2504 ]
  %2534 = load i32, ptr %2532, align 4, !tbaa !6
  %2535 = add nsw i32 %2534, %2533
  store i32 %2535, ptr %2532, align 4, !tbaa !6
  br label %2536

2536:                                             ; preds = %2523, %2531, %2493, %2474
  %2537 = icmp eq i32 %2485, %5
  br i1 %2537, label %5679, label %2396, !llvm.loop !844

2538:                                             ; preds = %1920
  %2539 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

2540:                                             ; preds = %18
  %2541 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2542 = load ptr, ptr %2541, align 8, !tbaa !10
  %2543 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2544 = load ptr, ptr %2543, align 8, !tbaa !10
  store i32 0, ptr %2544, align 4, !tbaa !6
  %2545 = icmp eq i32 %13, 0
  br i1 %2545, label %2546, label %2554

2546:                                             ; preds = %2540
  %2547 = load i64, ptr %2542, align 8, !tbaa !121
  %2548 = trunc i64 %2547 to i32
  %2549 = icmp slt i32 %2548, 0
  %2550 = mul nsw i32 %2548, %2548
  %2551 = sub nsw i32 0, %2550
  %2552 = select i1 %2549, i32 %2551, i32 %2550
  %2553 = mul i32 %2552, %2548
  store i32 %2553, ptr %2544, align 4, !tbaa !6
  br label %5679

2554:                                             ; preds = %2540
  switch i32 %1, label %3168 [
    i32 1, label %2555
    i32 0, label %2866
  ]

2555:                                             ; preds = %2554
  %2556 = getelementptr inbounds i32, ptr %3, i64 %19
  %2557 = load i32, ptr %2556, align 4, !tbaa !6
  %2558 = icmp eq i32 %2557, 0
  %2559 = icmp sgt i32 %5, 0
  br i1 %2558, label %2569, label %2560

2560:                                             ; preds = %2555
  br i1 %2559, label %2561, label %5679

2561:                                             ; preds = %2560
  %2562 = icmp sgt i32 %13, 1
  %2563 = icmp sgt i32 %13, 0
  %2564 = add i32 %13, -2
  %2565 = zext i32 %2564 to i64
  %2566 = zext i32 %13 to i64
  %2567 = add nuw i32 %5, 1
  %2568 = icmp eq i32 %13, 1
  br label %2721

2569:                                             ; preds = %2555
  br i1 %2559, label %2570, label %5679

2570:                                             ; preds = %2569
  %2571 = icmp sgt i32 %13, 1
  %2572 = icmp sgt i32 %13, 0
  %2573 = add i32 %13, -2
  %2574 = zext i32 %2573 to i64
  %2575 = zext i32 %13 to i64
  %2576 = add nuw i32 %5, 1
  %2577 = icmp eq i32 %13, 1
  br label %2578

2578:                                             ; preds = %2570, %2719
  %2579 = phi i32 [ 0, %2570 ], [ %2671, %2719 ]
  %2580 = phi double [ 0.000000e+00, %2570 ], [ %2670, %2719 ]
  %2581 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2571, label %2582, label %2651

2582:                                             ; preds = %2578, %2641
  %2583 = phi i32 [ %2650, %2641 ], [ 0, %2578 ]
  %2584 = phi i64 [ %2592, %2641 ], [ %2575, %2578 ]
  %2585 = phi i64 [ %2649, %2641 ], [ %2574, %2578 ]
  %2586 = phi i32 [ %2647, %2641 ], [ %2581, %2578 ]
  %2587 = sub i32 %2573, %2583
  %2588 = tail call i32 @llvm.smin.i32(i32 %2587, i32 0)
  %2589 = sub i32 %2587, %2588
  %2590 = zext i32 %2589 to i64
  %2591 = add nuw nsw i64 %2590, 1
  %2592 = add nsw i64 %2584, -1
  %2593 = icmp ult i32 %2589, 31
  br i1 %2593, label %2629, label %2594

2594:                                             ; preds = %2582
  %2595 = and i64 %2591, 8589934560
  %2596 = sub i64 %2585, %2595
  br label %2597

2597:                                             ; preds = %2597, %2594
  %2598 = phi i64 [ 0, %2594 ], [ %2621, %2597 ]
  %2599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2594 ], [ %2617, %2597 ]
  %2600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2594 ], [ %2618, %2597 ]
  %2601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2594 ], [ %2619, %2597 ]
  %2602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2594 ], [ %2620, %2597 ]
  %2603 = sub i64 %2585, %2598
  %2604 = getelementptr inbounds i32, ptr %9, i64 %2603
  %2605 = getelementptr inbounds i32, ptr %2604, i64 -7
  %2606 = load <8 x i32>, ptr %2605, align 4, !tbaa !6
  %2607 = shufflevector <8 x i32> %2606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2608 = getelementptr inbounds i32, ptr %2604, i64 -15
  %2609 = load <8 x i32>, ptr %2608, align 4, !tbaa !6
  %2610 = shufflevector <8 x i32> %2609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2611 = getelementptr inbounds i32, ptr %2604, i64 -23
  %2612 = load <8 x i32>, ptr %2611, align 4, !tbaa !6
  %2613 = shufflevector <8 x i32> %2612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2614 = getelementptr inbounds i32, ptr %2604, i64 -31
  %2615 = load <8 x i32>, ptr %2614, align 4, !tbaa !6
  %2616 = shufflevector <8 x i32> %2615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2617 = mul <8 x i32> %2607, %2599
  %2618 = mul <8 x i32> %2610, %2600
  %2619 = mul <8 x i32> %2613, %2601
  %2620 = mul <8 x i32> %2616, %2602
  %2621 = add nuw i64 %2598, 32
  %2622 = icmp eq i64 %2621, %2595
  br i1 %2622, label %2623, label %2597, !llvm.loop !845

2623:                                             ; preds = %2597
  %2624 = mul <8 x i32> %2618, %2617
  %2625 = mul <8 x i32> %2619, %2624
  %2626 = mul <8 x i32> %2620, %2625
  %2627 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2626)
  %2628 = icmp eq i64 %2591, %2595
  br i1 %2628, label %2641, label %2629

2629:                                             ; preds = %2582, %2623
  %2630 = phi i64 [ %2585, %2582 ], [ %2596, %2623 ]
  %2631 = phi i32 [ 1, %2582 ], [ %2627, %2623 ]
  br label %2632

2632:                                             ; preds = %2629, %2632
  %2633 = phi i64 [ %2638, %2632 ], [ %2630, %2629 ]
  %2634 = phi i32 [ %2637, %2632 ], [ %2631, %2629 ]
  %2635 = getelementptr inbounds i32, ptr %9, i64 %2633
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = mul nsw i32 %2636, %2634
  %2638 = add nsw i64 %2633, -1
  %2639 = trunc i64 %2633 to i32
  %2640 = icmp sgt i32 %2639, 0
  br i1 %2640, label %2632, label %2641, !llvm.loop !846

2641:                                             ; preds = %2632, %2623
  %2642 = phi i32 [ %2627, %2623 ], [ %2637, %2632 ]
  %2643 = and i64 %2592, 4294967295
  %2644 = getelementptr inbounds i32, ptr %6, i64 %2643
  %2645 = load i32, ptr %2644, align 4, !tbaa !6
  %2646 = mul nsw i32 %2645, %2642
  %2647 = add nsw i32 %2646, %2586
  %2648 = icmp sgt i64 %2584, 2
  %2649 = add nsw i64 %2585, -1
  %2650 = add i32 %2583, 1
  br i1 %2648, label %2582, label %2651, !llvm.loop !847

2651:                                             ; preds = %2641, %2578
  %2652 = phi i32 [ %2581, %2578 ], [ %2647, %2641 ]
  %2653 = sext i32 %2652 to i64
  %2654 = getelementptr inbounds double, ptr %2, i64 %2653
  %2655 = load double, ptr %2654, align 8, !tbaa !19
  %2656 = getelementptr inbounds i64, ptr %2542, i64 %2653
  %2657 = load i64, ptr %2656, align 8, !tbaa !121
  %2658 = trunc i64 %2657 to i32
  %2659 = load i32, ptr %2544, align 4, !tbaa !6
  %2660 = sitofp i32 %2659 to double
  %2661 = sitofp i32 %2658 to double
  %2662 = fmul fast double %2655, %2661
  %2663 = fcmp fast olt double %2662, 0.000000e+00
  %2664 = fneg fast double %2662
  %2665 = select nnan ninf i1 %2663, double %2664, double %2662
  %2666 = fmul fast double %2662, %2662
  %2667 = fmul fast double %2666, %2665
  %2668 = fadd fast double %2667, %2660
  %2669 = fptosi double %2668 to i32
  store i32 %2669, ptr %2544, align 4, !tbaa !6
  %2670 = fadd fast double %2655, %2580
  %2671 = add nuw nsw i32 %2579, 1
  br i1 %2572, label %2672, label %2719

2672:                                             ; preds = %2651
  %2673 = load i32, ptr %4, align 4, !tbaa !6
  %2674 = load i32, ptr %12, align 4, !tbaa !6
  %2675 = add nsw i32 %2674, -1
  %2676 = icmp slt i32 %2673, %2675
  br i1 %2676, label %2696, label %2677

2677:                                             ; preds = %2672
  %2678 = icmp eq i32 %2673, %2675
  br i1 %2678, label %2679, label %2712

2679:                                             ; preds = %2677
  store i32 0, ptr %4, align 4, !tbaa !6
  %2680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2680, ptr %6, align 4, !tbaa !6
  br i1 %2577, label %2719, label %2681

2681:                                             ; preds = %2679, %2706
  %2682 = phi i64 [ %2710, %2706 ], [ 1, %2679 ]
  %2683 = getelementptr inbounds i32, ptr %4, i64 %2682
  %2684 = load i32, ptr %2683, align 4, !tbaa !6
  %2685 = getelementptr inbounds i32, ptr %12, i64 %2682
  %2686 = load i32, ptr %2685, align 4, !tbaa !6
  %2687 = add nsw i32 %2686, -1
  %2688 = icmp slt i32 %2684, %2687
  br i1 %2688, label %2689, label %2704

2689:                                             ; preds = %2681
  br i1 %2676, label %2696, label %2690

2690:                                             ; preds = %2689
  %2691 = getelementptr inbounds i32, ptr %7, i64 %2682
  %2692 = load i32, ptr %2691, align 4, !tbaa !6
  %2693 = getelementptr inbounds i32, ptr %6, i64 %2682
  %2694 = load i32, ptr %2693, align 4, !tbaa !6
  %2695 = add nsw i32 %2694, %2692
  store i32 %2695, ptr %2693, align 4, !tbaa !6
  br label %2714

2696:                                             ; preds = %2672, %2689
  %2697 = phi i32 [ %2684, %2689 ], [ %2673, %2672 ]
  %2698 = phi ptr [ %2683, %2689 ], [ %4, %2672 ]
  %2699 = phi i64 [ %2682, %2689 ], [ 0, %2672 ]
  %2700 = add nsw i32 %2697, 1
  store i32 %2700, ptr %2698, align 4, !tbaa !6
  %2701 = getelementptr inbounds i32, ptr %7, i64 %2699
  %2702 = load i32, ptr %2701, align 4, !tbaa !6
  %2703 = getelementptr inbounds i32, ptr %6, i64 %2699
  br label %2714

2704:                                             ; preds = %2681
  %2705 = icmp eq i32 %2684, %2687
  br i1 %2705, label %2706, label %2712

2706:                                             ; preds = %2704
  store i32 0, ptr %2683, align 4, !tbaa !6
  %2707 = getelementptr inbounds i32, ptr %8, i64 %2682
  %2708 = load i32, ptr %2707, align 4, !tbaa !6
  %2709 = getelementptr inbounds i32, ptr %6, i64 %2682
  store i32 %2708, ptr %2709, align 4, !tbaa !6
  %2710 = add nuw nsw i64 %2682, 1
  %2711 = icmp eq i64 %2710, %2575
  br i1 %2711, label %2719, label %2681, !llvm.loop !848

2712:                                             ; preds = %2677, %2704
  %2713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2714:                                             ; preds = %2690, %2696
  %2715 = phi ptr [ %2703, %2696 ], [ %2683, %2690 ]
  %2716 = phi i32 [ %2702, %2696 ], [ 1, %2690 ]
  %2717 = load i32, ptr %2715, align 4, !tbaa !6
  %2718 = add nsw i32 %2717, %2716
  store i32 %2718, ptr %2715, align 4, !tbaa !6
  br label %2719

2719:                                             ; preds = %2706, %2714, %2679, %2651
  %2720 = icmp eq i32 %2671, %5
  br i1 %2720, label %5679, label %2578, !llvm.loop !849

2721:                                             ; preds = %2561, %2864
  %2722 = phi i32 [ 0, %2561 ], [ %2813, %2864 ]
  %2723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2562, label %2724, label %2793

2724:                                             ; preds = %2721, %2783
  %2725 = phi i32 [ %2792, %2783 ], [ 0, %2721 ]
  %2726 = phi i64 [ %2734, %2783 ], [ %2566, %2721 ]
  %2727 = phi i64 [ %2791, %2783 ], [ %2565, %2721 ]
  %2728 = phi i32 [ %2789, %2783 ], [ %2723, %2721 ]
  %2729 = sub i32 %2564, %2725
  %2730 = tail call i32 @llvm.smin.i32(i32 %2729, i32 0)
  %2731 = sub i32 %2729, %2730
  %2732 = zext i32 %2731 to i64
  %2733 = add nuw nsw i64 %2732, 1
  %2734 = add nsw i64 %2726, -1
  %2735 = icmp ult i32 %2731, 31
  br i1 %2735, label %2771, label %2736

2736:                                             ; preds = %2724
  %2737 = and i64 %2733, 8589934560
  %2738 = sub i64 %2727, %2737
  br label %2739

2739:                                             ; preds = %2739, %2736
  %2740 = phi i64 [ 0, %2736 ], [ %2763, %2739 ]
  %2741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2736 ], [ %2759, %2739 ]
  %2742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2736 ], [ %2760, %2739 ]
  %2743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2736 ], [ %2761, %2739 ]
  %2744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2736 ], [ %2762, %2739 ]
  %2745 = sub i64 %2727, %2740
  %2746 = getelementptr inbounds i32, ptr %11, i64 %2745
  %2747 = getelementptr inbounds i32, ptr %2746, i64 -7
  %2748 = load <8 x i32>, ptr %2747, align 4, !tbaa !6
  %2749 = shufflevector <8 x i32> %2748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2750 = getelementptr inbounds i32, ptr %2746, i64 -15
  %2751 = load <8 x i32>, ptr %2750, align 4, !tbaa !6
  %2752 = shufflevector <8 x i32> %2751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2753 = getelementptr inbounds i32, ptr %2746, i64 -23
  %2754 = load <8 x i32>, ptr %2753, align 4, !tbaa !6
  %2755 = shufflevector <8 x i32> %2754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2756 = getelementptr inbounds i32, ptr %2746, i64 -31
  %2757 = load <8 x i32>, ptr %2756, align 4, !tbaa !6
  %2758 = shufflevector <8 x i32> %2757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2759 = mul <8 x i32> %2749, %2741
  %2760 = mul <8 x i32> %2752, %2742
  %2761 = mul <8 x i32> %2755, %2743
  %2762 = mul <8 x i32> %2758, %2744
  %2763 = add nuw i64 %2740, 32
  %2764 = icmp eq i64 %2763, %2737
  br i1 %2764, label %2765, label %2739, !llvm.loop !850

2765:                                             ; preds = %2739
  %2766 = mul <8 x i32> %2760, %2759
  %2767 = mul <8 x i32> %2761, %2766
  %2768 = mul <8 x i32> %2762, %2767
  %2769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2768)
  %2770 = icmp eq i64 %2733, %2737
  br i1 %2770, label %2783, label %2771

2771:                                             ; preds = %2724, %2765
  %2772 = phi i64 [ %2727, %2724 ], [ %2738, %2765 ]
  %2773 = phi i32 [ 1, %2724 ], [ %2769, %2765 ]
  br label %2774

2774:                                             ; preds = %2771, %2774
  %2775 = phi i64 [ %2780, %2774 ], [ %2772, %2771 ]
  %2776 = phi i32 [ %2779, %2774 ], [ %2773, %2771 ]
  %2777 = getelementptr inbounds i32, ptr %11, i64 %2775
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = mul nsw i32 %2778, %2776
  %2780 = add nsw i64 %2775, -1
  %2781 = trunc i64 %2775 to i32
  %2782 = icmp sgt i32 %2781, 0
  br i1 %2782, label %2774, label %2783, !llvm.loop !851

2783:                                             ; preds = %2774, %2765
  %2784 = phi i32 [ %2769, %2765 ], [ %2779, %2774 ]
  %2785 = and i64 %2734, 4294967295
  %2786 = getelementptr inbounds i32, ptr %6, i64 %2785
  %2787 = load i32, ptr %2786, align 4, !tbaa !6
  %2788 = mul nsw i32 %2787, %2784
  %2789 = add nsw i32 %2788, %2728
  %2790 = icmp sgt i64 %2726, 2
  %2791 = add nsw i64 %2727, -1
  %2792 = add i32 %2725, 1
  br i1 %2790, label %2724, label %2793, !llvm.loop !852

2793:                                             ; preds = %2783, %2721
  %2794 = phi i32 [ %2723, %2721 ], [ %2789, %2783 ]
  %2795 = icmp slt i32 %2794, %5
  br i1 %2795, label %2798, label %2796

2796:                                             ; preds = %2793
  %2797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

2798:                                             ; preds = %2793
  %2799 = sext i32 %2794 to i64
  %2800 = getelementptr inbounds i64, ptr %2542, i64 %2799
  %2801 = load i64, ptr %2800, align 8, !tbaa !121
  %2802 = trunc i64 %2801 to i32
  %2803 = load i32, ptr %2544, align 4, !tbaa !6
  %2804 = sitofp i32 %2803 to double
  %2805 = sitofp i32 %2802 to double
  %2806 = icmp slt i32 %2802, 0
  %2807 = fneg fast double %2805
  %2808 = select i1 %2806, double %2807, double %2805
  %2809 = fmul fast double %2805, %2805
  %2810 = fmul fast double %2809, %2808
  %2811 = fadd fast double %2810, %2804
  %2812 = fptosi double %2811 to i32
  store i32 %2812, ptr %2544, align 4, !tbaa !6
  %2813 = add nuw nsw i32 %2722, 1
  br i1 %2563, label %2814, label %2864

2814:                                             ; preds = %2798
  %2815 = load i32, ptr %4, align 4, !tbaa !6
  %2816 = load i32, ptr %12, align 4, !tbaa !6
  %2817 = add nsw i32 %2816, -1
  %2818 = icmp slt i32 %2815, %2817
  br i1 %2818, label %2841, label %2819

2819:                                             ; preds = %2814
  %2820 = icmp eq i32 %2815, %2817
  br i1 %2820, label %2821, label %2857

2821:                                             ; preds = %2819
  store i32 0, ptr %4, align 4, !tbaa !6
  %2822 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2822, ptr %6, align 4, !tbaa !6
  br i1 %2568, label %2864, label %2823

2823:                                             ; preds = %2821, %2851
  %2824 = phi i64 [ %2855, %2851 ], [ 1, %2821 ]
  %2825 = getelementptr inbounds i32, ptr %4, i64 %2824
  %2826 = load i32, ptr %2825, align 4, !tbaa !6
  %2827 = getelementptr inbounds i32, ptr %12, i64 %2824
  %2828 = load i32, ptr %2827, align 4, !tbaa !6
  %2829 = add nsw i32 %2828, -1
  %2830 = icmp slt i32 %2826, %2829
  br i1 %2830, label %2831, label %2849

2831:                                             ; preds = %2823
  br i1 %2818, label %2841, label %2832

2832:                                             ; preds = %2831
  %2833 = shl i64 %2824, 32
  %2834 = add i64 %2833, -4294967296
  %2835 = ashr exact i64 %2834, 32
  %2836 = getelementptr inbounds i32, ptr %7, i64 %2835
  %2837 = load i32, ptr %2836, align 4, !tbaa !6
  %2838 = getelementptr inbounds i32, ptr %6, i64 %2824
  %2839 = load i32, ptr %2838, align 4, !tbaa !6
  %2840 = add nsw i32 %2839, %2837
  store i32 %2840, ptr %2838, align 4, !tbaa !6
  br label %2859

2841:                                             ; preds = %2814, %2831
  %2842 = phi i32 [ %2826, %2831 ], [ %2815, %2814 ]
  %2843 = phi ptr [ %2825, %2831 ], [ %4, %2814 ]
  %2844 = phi i64 [ %2824, %2831 ], [ 0, %2814 ]
  %2845 = add nsw i32 %2842, 1
  store i32 %2845, ptr %2843, align 4, !tbaa !6
  %2846 = getelementptr inbounds i32, ptr %7, i64 %2844
  %2847 = load i32, ptr %2846, align 4, !tbaa !6
  %2848 = getelementptr inbounds i32, ptr %6, i64 %2844
  br label %2859

2849:                                             ; preds = %2823
  %2850 = icmp eq i32 %2826, %2829
  br i1 %2850, label %2851, label %2857

2851:                                             ; preds = %2849
  store i32 0, ptr %2825, align 4, !tbaa !6
  %2852 = getelementptr inbounds i32, ptr %8, i64 %2824
  %2853 = load i32, ptr %2852, align 4, !tbaa !6
  %2854 = getelementptr inbounds i32, ptr %6, i64 %2824
  store i32 %2853, ptr %2854, align 4, !tbaa !6
  %2855 = add nuw nsw i64 %2824, 1
  %2856 = icmp eq i64 %2855, %2566
  br i1 %2856, label %2864, label %2823, !llvm.loop !853

2857:                                             ; preds = %2819, %2849
  %2858 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

2859:                                             ; preds = %2832, %2841
  %2860 = phi ptr [ %2848, %2841 ], [ %2825, %2832 ]
  %2861 = phi i32 [ %2847, %2841 ], [ 1, %2832 ]
  %2862 = load i32, ptr %2860, align 4, !tbaa !6
  %2863 = add nsw i32 %2862, %2861
  store i32 %2863, ptr %2860, align 4, !tbaa !6
  br label %2864

2864:                                             ; preds = %2851, %2859, %2821, %2798
  %2865 = icmp eq i32 %2813, %5
  br i1 %2865, label %5679, label %2721, !llvm.loop !854

2866:                                             ; preds = %2554
  %2867 = getelementptr inbounds i32, ptr %3, i64 %19
  %2868 = load i32, ptr %2867, align 4, !tbaa !6
  %2869 = icmp eq i32 %2868, 0
  %2870 = icmp sgt i32 %5, 0
  br i1 %2869, label %2880, label %2871

2871:                                             ; preds = %2866
  br i1 %2870, label %2872, label %5679

2872:                                             ; preds = %2871
  %2873 = icmp sgt i32 %13, 1
  %2874 = icmp sgt i32 %13, 0
  %2875 = add i32 %13, -2
  %2876 = zext i32 %2875 to i64
  %2877 = zext i32 %13 to i64
  %2878 = add nuw i32 %5, 1
  %2879 = icmp eq i32 %13, 1
  br label %3026

2880:                                             ; preds = %2866
  br i1 %2870, label %2881, label %5679

2881:                                             ; preds = %2880
  %2882 = icmp sgt i32 %13, 1
  %2883 = icmp sgt i32 %13, 0
  %2884 = add i32 %13, -2
  %2885 = zext i32 %2884 to i64
  %2886 = zext i32 %13 to i64
  %2887 = add nuw i32 %5, 1
  %2888 = icmp eq i32 %13, 1
  br label %2889

2889:                                             ; preds = %2881, %3024
  %2890 = phi i32 [ 0, %2881 ], [ %2976, %3024 ]
  %2891 = phi double [ 0.000000e+00, %2881 ], [ %2975, %3024 ]
  %2892 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2882, label %2893, label %2962

2893:                                             ; preds = %2889, %2952
  %2894 = phi i32 [ %2961, %2952 ], [ 0, %2889 ]
  %2895 = phi i64 [ %2903, %2952 ], [ %2886, %2889 ]
  %2896 = phi i64 [ %2960, %2952 ], [ %2885, %2889 ]
  %2897 = phi i32 [ %2958, %2952 ], [ %2892, %2889 ]
  %2898 = sub i32 %2884, %2894
  %2899 = tail call i32 @llvm.smin.i32(i32 %2898, i32 0)
  %2900 = sub i32 %2898, %2899
  %2901 = zext i32 %2900 to i64
  %2902 = add nuw nsw i64 %2901, 1
  %2903 = add nsw i64 %2895, -1
  %2904 = icmp ult i32 %2900, 31
  br i1 %2904, label %2940, label %2905

2905:                                             ; preds = %2893
  %2906 = and i64 %2902, 8589934560
  %2907 = sub i64 %2896, %2906
  br label %2908

2908:                                             ; preds = %2908, %2905
  %2909 = phi i64 [ 0, %2905 ], [ %2932, %2908 ]
  %2910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2905 ], [ %2928, %2908 ]
  %2911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2905 ], [ %2929, %2908 ]
  %2912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2905 ], [ %2930, %2908 ]
  %2913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2905 ], [ %2931, %2908 ]
  %2914 = sub i64 %2896, %2909
  %2915 = getelementptr inbounds i32, ptr %9, i64 %2914
  %2916 = getelementptr inbounds i32, ptr %2915, i64 -7
  %2917 = load <8 x i32>, ptr %2916, align 4, !tbaa !6
  %2918 = shufflevector <8 x i32> %2917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2919 = getelementptr inbounds i32, ptr %2915, i64 -15
  %2920 = load <8 x i32>, ptr %2919, align 4, !tbaa !6
  %2921 = shufflevector <8 x i32> %2920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2922 = getelementptr inbounds i32, ptr %2915, i64 -23
  %2923 = load <8 x i32>, ptr %2922, align 4, !tbaa !6
  %2924 = shufflevector <8 x i32> %2923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2925 = getelementptr inbounds i32, ptr %2915, i64 -31
  %2926 = load <8 x i32>, ptr %2925, align 4, !tbaa !6
  %2927 = shufflevector <8 x i32> %2926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2928 = mul <8 x i32> %2918, %2910
  %2929 = mul <8 x i32> %2921, %2911
  %2930 = mul <8 x i32> %2924, %2912
  %2931 = mul <8 x i32> %2927, %2913
  %2932 = add nuw i64 %2909, 32
  %2933 = icmp eq i64 %2932, %2906
  br i1 %2933, label %2934, label %2908, !llvm.loop !855

2934:                                             ; preds = %2908
  %2935 = mul <8 x i32> %2929, %2928
  %2936 = mul <8 x i32> %2930, %2935
  %2937 = mul <8 x i32> %2931, %2936
  %2938 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2937)
  %2939 = icmp eq i64 %2902, %2906
  br i1 %2939, label %2952, label %2940

2940:                                             ; preds = %2893, %2934
  %2941 = phi i64 [ %2896, %2893 ], [ %2907, %2934 ]
  %2942 = phi i32 [ 1, %2893 ], [ %2938, %2934 ]
  br label %2943

2943:                                             ; preds = %2940, %2943
  %2944 = phi i64 [ %2949, %2943 ], [ %2941, %2940 ]
  %2945 = phi i32 [ %2948, %2943 ], [ %2942, %2940 ]
  %2946 = getelementptr inbounds i32, ptr %9, i64 %2944
  %2947 = load i32, ptr %2946, align 4, !tbaa !6
  %2948 = mul nsw i32 %2947, %2945
  %2949 = add nsw i64 %2944, -1
  %2950 = trunc i64 %2944 to i32
  %2951 = icmp sgt i32 %2950, 0
  br i1 %2951, label %2943, label %2952, !llvm.loop !856

2952:                                             ; preds = %2943, %2934
  %2953 = phi i32 [ %2938, %2934 ], [ %2948, %2943 ]
  %2954 = and i64 %2903, 4294967295
  %2955 = getelementptr inbounds i32, ptr %6, i64 %2954
  %2956 = load i32, ptr %2955, align 4, !tbaa !6
  %2957 = mul nsw i32 %2956, %2953
  %2958 = add nsw i32 %2957, %2897
  %2959 = icmp sgt i64 %2895, 2
  %2960 = add nsw i64 %2896, -1
  %2961 = add i32 %2894, 1
  br i1 %2959, label %2893, label %2962, !llvm.loop !857

2962:                                             ; preds = %2952, %2889
  %2963 = phi i32 [ %2892, %2889 ], [ %2958, %2952 ]
  %2964 = sext i32 %2963 to i64
  %2965 = getelementptr inbounds i64, ptr %2542, i64 %2964
  %2966 = load i64, ptr %2965, align 8, !tbaa !121
  %2967 = trunc i64 %2966 to i32
  %2968 = load i32, ptr %2544, align 4, !tbaa !6
  %2969 = icmp slt i32 %2967, 0
  %2970 = mul nsw i32 %2967, %2967
  %2971 = sub nsw i32 0, %2970
  %2972 = select i1 %2969, i32 %2971, i32 %2970
  %2973 = mul i32 %2972, %2967
  %2974 = add nsw i32 %2973, %2968
  store i32 %2974, ptr %2544, align 4, !tbaa !6
  %2975 = fadd fast double %2891, 1.000000e+00
  %2976 = add nuw nsw i32 %2890, 1
  br i1 %2883, label %2977, label %3024

2977:                                             ; preds = %2962
  %2978 = load i32, ptr %4, align 4, !tbaa !6
  %2979 = load i32, ptr %12, align 4, !tbaa !6
  %2980 = add nsw i32 %2979, -1
  %2981 = icmp slt i32 %2978, %2980
  br i1 %2981, label %3001, label %2982

2982:                                             ; preds = %2977
  %2983 = icmp eq i32 %2978, %2980
  br i1 %2983, label %2984, label %3017

2984:                                             ; preds = %2982
  store i32 0, ptr %4, align 4, !tbaa !6
  %2985 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2985, ptr %6, align 4, !tbaa !6
  br i1 %2888, label %3024, label %2986

2986:                                             ; preds = %2984, %3011
  %2987 = phi i64 [ %3015, %3011 ], [ 1, %2984 ]
  %2988 = getelementptr inbounds i32, ptr %4, i64 %2987
  %2989 = load i32, ptr %2988, align 4, !tbaa !6
  %2990 = getelementptr inbounds i32, ptr %12, i64 %2987
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = add nsw i32 %2991, -1
  %2993 = icmp slt i32 %2989, %2992
  br i1 %2993, label %2994, label %3009

2994:                                             ; preds = %2986
  br i1 %2981, label %3001, label %2995

2995:                                             ; preds = %2994
  %2996 = getelementptr inbounds i32, ptr %7, i64 %2987
  %2997 = load i32, ptr %2996, align 4, !tbaa !6
  %2998 = getelementptr inbounds i32, ptr %6, i64 %2987
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = add nsw i32 %2999, %2997
  store i32 %3000, ptr %2998, align 4, !tbaa !6
  br label %3019

3001:                                             ; preds = %2977, %2994
  %3002 = phi i32 [ %2989, %2994 ], [ %2978, %2977 ]
  %3003 = phi ptr [ %2988, %2994 ], [ %4, %2977 ]
  %3004 = phi i64 [ %2987, %2994 ], [ 0, %2977 ]
  %3005 = add nsw i32 %3002, 1
  store i32 %3005, ptr %3003, align 4, !tbaa !6
  %3006 = getelementptr inbounds i32, ptr %7, i64 %3004
  %3007 = load i32, ptr %3006, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %6, i64 %3004
  br label %3019

3009:                                             ; preds = %2986
  %3010 = icmp eq i32 %2989, %2992
  br i1 %3010, label %3011, label %3017

3011:                                             ; preds = %3009
  store i32 0, ptr %2988, align 4, !tbaa !6
  %3012 = getelementptr inbounds i32, ptr %8, i64 %2987
  %3013 = load i32, ptr %3012, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %6, i64 %2987
  store i32 %3013, ptr %3014, align 4, !tbaa !6
  %3015 = add nuw nsw i64 %2987, 1
  %3016 = icmp eq i64 %3015, %2886
  br i1 %3016, label %3024, label %2986, !llvm.loop !858

3017:                                             ; preds = %2982, %3009
  %3018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3019:                                             ; preds = %2995, %3001
  %3020 = phi ptr [ %3008, %3001 ], [ %2988, %2995 ]
  %3021 = phi i32 [ %3007, %3001 ], [ 1, %2995 ]
  %3022 = load i32, ptr %3020, align 4, !tbaa !6
  %3023 = add nsw i32 %3022, %3021
  store i32 %3023, ptr %3020, align 4, !tbaa !6
  br label %3024

3024:                                             ; preds = %3011, %3019, %2984, %2962
  %3025 = icmp eq i32 %2976, %5
  br i1 %3025, label %5679, label %2889, !llvm.loop !859

3026:                                             ; preds = %2872, %3166
  %3027 = phi i32 [ 0, %2872 ], [ %3115, %3166 ]
  %3028 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2873, label %3029, label %3098

3029:                                             ; preds = %3026, %3088
  %3030 = phi i32 [ %3097, %3088 ], [ 0, %3026 ]
  %3031 = phi i64 [ %3039, %3088 ], [ %2877, %3026 ]
  %3032 = phi i64 [ %3096, %3088 ], [ %2876, %3026 ]
  %3033 = phi i32 [ %3094, %3088 ], [ %3028, %3026 ]
  %3034 = sub i32 %2875, %3030
  %3035 = tail call i32 @llvm.smin.i32(i32 %3034, i32 0)
  %3036 = sub i32 %3034, %3035
  %3037 = zext i32 %3036 to i64
  %3038 = add nuw nsw i64 %3037, 1
  %3039 = add nsw i64 %3031, -1
  %3040 = icmp ult i32 %3036, 31
  br i1 %3040, label %3076, label %3041

3041:                                             ; preds = %3029
  %3042 = and i64 %3038, 8589934560
  %3043 = sub i64 %3032, %3042
  br label %3044

3044:                                             ; preds = %3044, %3041
  %3045 = phi i64 [ 0, %3041 ], [ %3068, %3044 ]
  %3046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3041 ], [ %3064, %3044 ]
  %3047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3041 ], [ %3065, %3044 ]
  %3048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3041 ], [ %3066, %3044 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3041 ], [ %3067, %3044 ]
  %3050 = sub i64 %3032, %3045
  %3051 = getelementptr inbounds i32, ptr %11, i64 %3050
  %3052 = getelementptr inbounds i32, ptr %3051, i64 -7
  %3053 = load <8 x i32>, ptr %3052, align 4, !tbaa !6
  %3054 = shufflevector <8 x i32> %3053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3055 = getelementptr inbounds i32, ptr %3051, i64 -15
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3051, i64 -23
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3051, i64 -31
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = mul <8 x i32> %3054, %3046
  %3065 = mul <8 x i32> %3057, %3047
  %3066 = mul <8 x i32> %3060, %3048
  %3067 = mul <8 x i32> %3063, %3049
  %3068 = add nuw i64 %3045, 32
  %3069 = icmp eq i64 %3068, %3042
  br i1 %3069, label %3070, label %3044, !llvm.loop !860

3070:                                             ; preds = %3044
  %3071 = mul <8 x i32> %3065, %3064
  %3072 = mul <8 x i32> %3066, %3071
  %3073 = mul <8 x i32> %3067, %3072
  %3074 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3073)
  %3075 = icmp eq i64 %3038, %3042
  br i1 %3075, label %3088, label %3076

3076:                                             ; preds = %3029, %3070
  %3077 = phi i64 [ %3032, %3029 ], [ %3043, %3070 ]
  %3078 = phi i32 [ 1, %3029 ], [ %3074, %3070 ]
  br label %3079

3079:                                             ; preds = %3076, %3079
  %3080 = phi i64 [ %3085, %3079 ], [ %3077, %3076 ]
  %3081 = phi i32 [ %3084, %3079 ], [ %3078, %3076 ]
  %3082 = getelementptr inbounds i32, ptr %11, i64 %3080
  %3083 = load i32, ptr %3082, align 4, !tbaa !6
  %3084 = mul nsw i32 %3083, %3081
  %3085 = add nsw i64 %3080, -1
  %3086 = trunc i64 %3080 to i32
  %3087 = icmp sgt i32 %3086, 0
  br i1 %3087, label %3079, label %3088, !llvm.loop !861

3088:                                             ; preds = %3079, %3070
  %3089 = phi i32 [ %3074, %3070 ], [ %3084, %3079 ]
  %3090 = and i64 %3039, 4294967295
  %3091 = getelementptr inbounds i32, ptr %6, i64 %3090
  %3092 = load i32, ptr %3091, align 4, !tbaa !6
  %3093 = mul nsw i32 %3092, %3089
  %3094 = add nsw i32 %3093, %3033
  %3095 = icmp sgt i64 %3031, 2
  %3096 = add nsw i64 %3032, -1
  %3097 = add i32 %3030, 1
  br i1 %3095, label %3029, label %3098, !llvm.loop !862

3098:                                             ; preds = %3088, %3026
  %3099 = phi i32 [ %3028, %3026 ], [ %3094, %3088 ]
  %3100 = icmp slt i32 %3099, %5
  br i1 %3100, label %3103, label %3101

3101:                                             ; preds = %3098
  %3102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

3103:                                             ; preds = %3098
  %3104 = sext i32 %3099 to i64
  %3105 = getelementptr inbounds i64, ptr %2542, i64 %3104
  %3106 = load i64, ptr %3105, align 8, !tbaa !121
  %3107 = trunc i64 %3106 to i32
  %3108 = load i32, ptr %2544, align 4, !tbaa !6
  %3109 = icmp slt i32 %3107, 0
  %3110 = mul nsw i32 %3107, %3107
  %3111 = sub nsw i32 0, %3110
  %3112 = select i1 %3109, i32 %3111, i32 %3110
  %3113 = mul i32 %3112, %3107
  %3114 = add nsw i32 %3113, %3108
  store i32 %3114, ptr %2544, align 4, !tbaa !6
  %3115 = add nuw nsw i32 %3027, 1
  br i1 %2874, label %3116, label %3166

3116:                                             ; preds = %3103
  %3117 = load i32, ptr %4, align 4, !tbaa !6
  %3118 = load i32, ptr %12, align 4, !tbaa !6
  %3119 = add nsw i32 %3118, -1
  %3120 = icmp slt i32 %3117, %3119
  br i1 %3120, label %3143, label %3121

3121:                                             ; preds = %3116
  %3122 = icmp eq i32 %3117, %3119
  br i1 %3122, label %3123, label %3159

3123:                                             ; preds = %3121
  store i32 0, ptr %4, align 4, !tbaa !6
  %3124 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3124, ptr %6, align 4, !tbaa !6
  br i1 %2879, label %3166, label %3125

3125:                                             ; preds = %3123, %3153
  %3126 = phi i64 [ %3157, %3153 ], [ 1, %3123 ]
  %3127 = getelementptr inbounds i32, ptr %4, i64 %3126
  %3128 = load i32, ptr %3127, align 4, !tbaa !6
  %3129 = getelementptr inbounds i32, ptr %12, i64 %3126
  %3130 = load i32, ptr %3129, align 4, !tbaa !6
  %3131 = add nsw i32 %3130, -1
  %3132 = icmp slt i32 %3128, %3131
  br i1 %3132, label %3133, label %3151

3133:                                             ; preds = %3125
  br i1 %3120, label %3143, label %3134

3134:                                             ; preds = %3133
  %3135 = shl i64 %3126, 32
  %3136 = add i64 %3135, -4294967296
  %3137 = ashr exact i64 %3136, 32
  %3138 = getelementptr inbounds i32, ptr %7, i64 %3137
  %3139 = load i32, ptr %3138, align 4, !tbaa !6
  %3140 = getelementptr inbounds i32, ptr %6, i64 %3126
  %3141 = load i32, ptr %3140, align 4, !tbaa !6
  %3142 = add nsw i32 %3141, %3139
  store i32 %3142, ptr %3140, align 4, !tbaa !6
  br label %3161

3143:                                             ; preds = %3116, %3133
  %3144 = phi i32 [ %3128, %3133 ], [ %3117, %3116 ]
  %3145 = phi ptr [ %3127, %3133 ], [ %4, %3116 ]
  %3146 = phi i64 [ %3126, %3133 ], [ 0, %3116 ]
  %3147 = add nsw i32 %3144, 1
  store i32 %3147, ptr %3145, align 4, !tbaa !6
  %3148 = getelementptr inbounds i32, ptr %7, i64 %3146
  %3149 = load i32, ptr %3148, align 4, !tbaa !6
  %3150 = getelementptr inbounds i32, ptr %6, i64 %3146
  br label %3161

3151:                                             ; preds = %3125
  %3152 = icmp eq i32 %3128, %3131
  br i1 %3152, label %3153, label %3159

3153:                                             ; preds = %3151
  store i32 0, ptr %3127, align 4, !tbaa !6
  %3154 = getelementptr inbounds i32, ptr %8, i64 %3126
  %3155 = load i32, ptr %3154, align 4, !tbaa !6
  %3156 = getelementptr inbounds i32, ptr %6, i64 %3126
  store i32 %3155, ptr %3156, align 4, !tbaa !6
  %3157 = add nuw nsw i64 %3126, 1
  %3158 = icmp eq i64 %3157, %2877
  br i1 %3158, label %3166, label %3125, !llvm.loop !863

3159:                                             ; preds = %3121, %3151
  %3160 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3161:                                             ; preds = %3134, %3143
  %3162 = phi ptr [ %3150, %3143 ], [ %3127, %3134 ]
  %3163 = phi i32 [ %3149, %3143 ], [ 1, %3134 ]
  %3164 = load i32, ptr %3162, align 4, !tbaa !6
  %3165 = add nsw i32 %3164, %3163
  store i32 %3165, ptr %3162, align 4, !tbaa !6
  br label %3166

3166:                                             ; preds = %3153, %3161, %3123, %3103
  %3167 = icmp eq i32 %3115, %5
  br i1 %3167, label %5679, label %3026, !llvm.loop !864

3168:                                             ; preds = %2554
  %3169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

3170:                                             ; preds = %18
  %3171 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3172 = load ptr, ptr %3171, align 8, !tbaa !10
  %3173 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3174 = load ptr, ptr %3173, align 8, !tbaa !10
  store i64 0, ptr %3174, align 8, !tbaa !121
  %3175 = icmp eq i32 %13, 0
  br i1 %3175, label %3176, label %3183

3176:                                             ; preds = %3170
  %3177 = load i64, ptr %3172, align 8, !tbaa !121
  %3178 = icmp slt i64 %3177, 0
  %3179 = mul nsw i64 %3177, %3177
  %3180 = sub nsw i64 0, %3179
  %3181 = select i1 %3178, i64 %3180, i64 %3179
  %3182 = mul i64 %3181, %3177
  store i64 %3182, ptr %3174, align 8, !tbaa !121
  br label %5679

3183:                                             ; preds = %3170
  switch i32 %1, label %3793 [
    i32 1, label %3184
    i32 0, label %3493
  ]

3184:                                             ; preds = %3183
  %3185 = getelementptr inbounds i32, ptr %3, i64 %19
  %3186 = load i32, ptr %3185, align 4, !tbaa !6
  %3187 = icmp eq i32 %3186, 0
  %3188 = icmp sgt i32 %5, 0
  br i1 %3187, label %3198, label %3189

3189:                                             ; preds = %3184
  br i1 %3188, label %3190, label %5679

3190:                                             ; preds = %3189
  %3191 = icmp sgt i32 %13, 1
  %3192 = icmp sgt i32 %13, 0
  %3193 = add i32 %13, -2
  %3194 = zext i32 %3193 to i64
  %3195 = zext i32 %13 to i64
  %3196 = add nuw i32 %5, 1
  %3197 = icmp eq i32 %13, 1
  br label %3349

3198:                                             ; preds = %3184
  br i1 %3188, label %3199, label %5679

3199:                                             ; preds = %3198
  %3200 = icmp sgt i32 %13, 1
  %3201 = icmp sgt i32 %13, 0
  %3202 = add i32 %13, -2
  %3203 = zext i32 %3202 to i64
  %3204 = zext i32 %13 to i64
  %3205 = add nuw i32 %5, 1
  %3206 = icmp eq i32 %13, 1
  br label %3207

3207:                                             ; preds = %3199, %3347
  %3208 = phi i64 [ 0, %3199 ], [ %3297, %3347 ]
  %3209 = phi i32 [ 0, %3199 ], [ %3299, %3347 ]
  %3210 = phi double [ 0.000000e+00, %3199 ], [ %3298, %3347 ]
  %3211 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3200, label %3212, label %3281

3212:                                             ; preds = %3207, %3271
  %3213 = phi i32 [ %3280, %3271 ], [ 0, %3207 ]
  %3214 = phi i64 [ %3222, %3271 ], [ %3204, %3207 ]
  %3215 = phi i64 [ %3279, %3271 ], [ %3203, %3207 ]
  %3216 = phi i32 [ %3277, %3271 ], [ %3211, %3207 ]
  %3217 = sub i32 %3202, %3213
  %3218 = tail call i32 @llvm.smin.i32(i32 %3217, i32 0)
  %3219 = sub i32 %3217, %3218
  %3220 = zext i32 %3219 to i64
  %3221 = add nuw nsw i64 %3220, 1
  %3222 = add nsw i64 %3214, -1
  %3223 = icmp ult i32 %3219, 31
  br i1 %3223, label %3259, label %3224

3224:                                             ; preds = %3212
  %3225 = and i64 %3221, 8589934560
  %3226 = sub i64 %3215, %3225
  br label %3227

3227:                                             ; preds = %3227, %3224
  %3228 = phi i64 [ 0, %3224 ], [ %3251, %3227 ]
  %3229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3224 ], [ %3247, %3227 ]
  %3230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3224 ], [ %3248, %3227 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3224 ], [ %3249, %3227 ]
  %3232 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3224 ], [ %3250, %3227 ]
  %3233 = sub i64 %3215, %3228
  %3234 = getelementptr inbounds i32, ptr %9, i64 %3233
  %3235 = getelementptr inbounds i32, ptr %3234, i64 -7
  %3236 = load <8 x i32>, ptr %3235, align 4, !tbaa !6
  %3237 = shufflevector <8 x i32> %3236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3238 = getelementptr inbounds i32, ptr %3234, i64 -15
  %3239 = load <8 x i32>, ptr %3238, align 4, !tbaa !6
  %3240 = shufflevector <8 x i32> %3239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3241 = getelementptr inbounds i32, ptr %3234, i64 -23
  %3242 = load <8 x i32>, ptr %3241, align 4, !tbaa !6
  %3243 = shufflevector <8 x i32> %3242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3244 = getelementptr inbounds i32, ptr %3234, i64 -31
  %3245 = load <8 x i32>, ptr %3244, align 4, !tbaa !6
  %3246 = shufflevector <8 x i32> %3245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3247 = mul <8 x i32> %3237, %3229
  %3248 = mul <8 x i32> %3240, %3230
  %3249 = mul <8 x i32> %3243, %3231
  %3250 = mul <8 x i32> %3246, %3232
  %3251 = add nuw i64 %3228, 32
  %3252 = icmp eq i64 %3251, %3225
  br i1 %3252, label %3253, label %3227, !llvm.loop !865

3253:                                             ; preds = %3227
  %3254 = mul <8 x i32> %3248, %3247
  %3255 = mul <8 x i32> %3249, %3254
  %3256 = mul <8 x i32> %3250, %3255
  %3257 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3256)
  %3258 = icmp eq i64 %3221, %3225
  br i1 %3258, label %3271, label %3259

3259:                                             ; preds = %3212, %3253
  %3260 = phi i64 [ %3215, %3212 ], [ %3226, %3253 ]
  %3261 = phi i32 [ 1, %3212 ], [ %3257, %3253 ]
  br label %3262

3262:                                             ; preds = %3259, %3262
  %3263 = phi i64 [ %3268, %3262 ], [ %3260, %3259 ]
  %3264 = phi i32 [ %3267, %3262 ], [ %3261, %3259 ]
  %3265 = getelementptr inbounds i32, ptr %9, i64 %3263
  %3266 = load i32, ptr %3265, align 4, !tbaa !6
  %3267 = mul nsw i32 %3266, %3264
  %3268 = add nsw i64 %3263, -1
  %3269 = trunc i64 %3263 to i32
  %3270 = icmp sgt i32 %3269, 0
  br i1 %3270, label %3262, label %3271, !llvm.loop !866

3271:                                             ; preds = %3262, %3253
  %3272 = phi i32 [ %3257, %3253 ], [ %3267, %3262 ]
  %3273 = and i64 %3222, 4294967295
  %3274 = getelementptr inbounds i32, ptr %6, i64 %3273
  %3275 = load i32, ptr %3274, align 4, !tbaa !6
  %3276 = mul nsw i32 %3275, %3272
  %3277 = add nsw i32 %3276, %3216
  %3278 = icmp sgt i64 %3214, 2
  %3279 = add nsw i64 %3215, -1
  %3280 = add i32 %3213, 1
  br i1 %3278, label %3212, label %3281, !llvm.loop !867

3281:                                             ; preds = %3271, %3207
  %3282 = phi i32 [ %3211, %3207 ], [ %3277, %3271 ]
  %3283 = sext i32 %3282 to i64
  %3284 = getelementptr inbounds double, ptr %2, i64 %3283
  %3285 = load double, ptr %3284, align 8, !tbaa !19
  %3286 = getelementptr inbounds i64, ptr %3172, i64 %3283
  %3287 = load i64, ptr %3286, align 8, !tbaa !121
  %3288 = sitofp i64 %3208 to double
  %3289 = sitofp i64 %3287 to double
  %3290 = fmul fast double %3285, %3289
  %3291 = fcmp fast olt double %3290, 0.000000e+00
  %3292 = fneg fast double %3290
  %3293 = select nnan ninf i1 %3291, double %3292, double %3290
  %3294 = fmul fast double %3290, %3290
  %3295 = fmul fast double %3294, %3293
  %3296 = fadd fast double %3295, %3288
  %3297 = fptosi double %3296 to i64
  store i64 %3297, ptr %3174, align 8, !tbaa !121
  %3298 = fadd fast double %3285, %3210
  %3299 = add nuw nsw i32 %3209, 1
  br i1 %3201, label %3300, label %3347

3300:                                             ; preds = %3281
  %3301 = load i32, ptr %4, align 4, !tbaa !6
  %3302 = load i32, ptr %12, align 4, !tbaa !6
  %3303 = add nsw i32 %3302, -1
  %3304 = icmp slt i32 %3301, %3303
  br i1 %3304, label %3324, label %3305

3305:                                             ; preds = %3300
  %3306 = icmp eq i32 %3301, %3303
  br i1 %3306, label %3307, label %3340

3307:                                             ; preds = %3305
  store i32 0, ptr %4, align 4, !tbaa !6
  %3308 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3308, ptr %6, align 4, !tbaa !6
  br i1 %3206, label %3347, label %3309

3309:                                             ; preds = %3307, %3334
  %3310 = phi i64 [ %3338, %3334 ], [ 1, %3307 ]
  %3311 = getelementptr inbounds i32, ptr %4, i64 %3310
  %3312 = load i32, ptr %3311, align 4, !tbaa !6
  %3313 = getelementptr inbounds i32, ptr %12, i64 %3310
  %3314 = load i32, ptr %3313, align 4, !tbaa !6
  %3315 = add nsw i32 %3314, -1
  %3316 = icmp slt i32 %3312, %3315
  br i1 %3316, label %3317, label %3332

3317:                                             ; preds = %3309
  br i1 %3304, label %3324, label %3318

3318:                                             ; preds = %3317
  %3319 = getelementptr inbounds i32, ptr %7, i64 %3310
  %3320 = load i32, ptr %3319, align 4, !tbaa !6
  %3321 = getelementptr inbounds i32, ptr %6, i64 %3310
  %3322 = load i32, ptr %3321, align 4, !tbaa !6
  %3323 = add nsw i32 %3322, %3320
  store i32 %3323, ptr %3321, align 4, !tbaa !6
  br label %3342

3324:                                             ; preds = %3300, %3317
  %3325 = phi i32 [ %3312, %3317 ], [ %3301, %3300 ]
  %3326 = phi ptr [ %3311, %3317 ], [ %4, %3300 ]
  %3327 = phi i64 [ %3310, %3317 ], [ 0, %3300 ]
  %3328 = add nsw i32 %3325, 1
  store i32 %3328, ptr %3326, align 4, !tbaa !6
  %3329 = getelementptr inbounds i32, ptr %7, i64 %3327
  %3330 = load i32, ptr %3329, align 4, !tbaa !6
  %3331 = getelementptr inbounds i32, ptr %6, i64 %3327
  br label %3342

3332:                                             ; preds = %3309
  %3333 = icmp eq i32 %3312, %3315
  br i1 %3333, label %3334, label %3340

3334:                                             ; preds = %3332
  store i32 0, ptr %3311, align 4, !tbaa !6
  %3335 = getelementptr inbounds i32, ptr %8, i64 %3310
  %3336 = load i32, ptr %3335, align 4, !tbaa !6
  %3337 = getelementptr inbounds i32, ptr %6, i64 %3310
  store i32 %3336, ptr %3337, align 4, !tbaa !6
  %3338 = add nuw nsw i64 %3310, 1
  %3339 = icmp eq i64 %3338, %3204
  br i1 %3339, label %3347, label %3309, !llvm.loop !868

3340:                                             ; preds = %3305, %3332
  %3341 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3342:                                             ; preds = %3318, %3324
  %3343 = phi ptr [ %3331, %3324 ], [ %3311, %3318 ]
  %3344 = phi i32 [ %3330, %3324 ], [ 1, %3318 ]
  %3345 = load i32, ptr %3343, align 4, !tbaa !6
  %3346 = add nsw i32 %3345, %3344
  store i32 %3346, ptr %3343, align 4, !tbaa !6
  br label %3347

3347:                                             ; preds = %3334, %3342, %3307, %3281
  %3348 = icmp eq i32 %3299, %5
  br i1 %3348, label %5679, label %3207, !llvm.loop !869

3349:                                             ; preds = %3190, %3491
  %3350 = phi i64 [ 0, %3190 ], [ %3439, %3491 ]
  %3351 = phi i32 [ 0, %3190 ], [ %3440, %3491 ]
  %3352 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3191, label %3353, label %3422

3353:                                             ; preds = %3349, %3412
  %3354 = phi i32 [ %3421, %3412 ], [ 0, %3349 ]
  %3355 = phi i64 [ %3363, %3412 ], [ %3195, %3349 ]
  %3356 = phi i64 [ %3420, %3412 ], [ %3194, %3349 ]
  %3357 = phi i32 [ %3418, %3412 ], [ %3352, %3349 ]
  %3358 = sub i32 %3193, %3354
  %3359 = tail call i32 @llvm.smin.i32(i32 %3358, i32 0)
  %3360 = sub i32 %3358, %3359
  %3361 = zext i32 %3360 to i64
  %3362 = add nuw nsw i64 %3361, 1
  %3363 = add nsw i64 %3355, -1
  %3364 = icmp ult i32 %3360, 31
  br i1 %3364, label %3400, label %3365

3365:                                             ; preds = %3353
  %3366 = and i64 %3362, 8589934560
  %3367 = sub i64 %3356, %3366
  br label %3368

3368:                                             ; preds = %3368, %3365
  %3369 = phi i64 [ 0, %3365 ], [ %3392, %3368 ]
  %3370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3365 ], [ %3388, %3368 ]
  %3371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3365 ], [ %3389, %3368 ]
  %3372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3365 ], [ %3390, %3368 ]
  %3373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3365 ], [ %3391, %3368 ]
  %3374 = sub i64 %3356, %3369
  %3375 = getelementptr inbounds i32, ptr %11, i64 %3374
  %3376 = getelementptr inbounds i32, ptr %3375, i64 -7
  %3377 = load <8 x i32>, ptr %3376, align 4, !tbaa !6
  %3378 = shufflevector <8 x i32> %3377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3379 = getelementptr inbounds i32, ptr %3375, i64 -15
  %3380 = load <8 x i32>, ptr %3379, align 4, !tbaa !6
  %3381 = shufflevector <8 x i32> %3380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3382 = getelementptr inbounds i32, ptr %3375, i64 -23
  %3383 = load <8 x i32>, ptr %3382, align 4, !tbaa !6
  %3384 = shufflevector <8 x i32> %3383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3385 = getelementptr inbounds i32, ptr %3375, i64 -31
  %3386 = load <8 x i32>, ptr %3385, align 4, !tbaa !6
  %3387 = shufflevector <8 x i32> %3386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3388 = mul <8 x i32> %3378, %3370
  %3389 = mul <8 x i32> %3381, %3371
  %3390 = mul <8 x i32> %3384, %3372
  %3391 = mul <8 x i32> %3387, %3373
  %3392 = add nuw i64 %3369, 32
  %3393 = icmp eq i64 %3392, %3366
  br i1 %3393, label %3394, label %3368, !llvm.loop !870

3394:                                             ; preds = %3368
  %3395 = mul <8 x i32> %3389, %3388
  %3396 = mul <8 x i32> %3390, %3395
  %3397 = mul <8 x i32> %3391, %3396
  %3398 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3397)
  %3399 = icmp eq i64 %3362, %3366
  br i1 %3399, label %3412, label %3400

3400:                                             ; preds = %3353, %3394
  %3401 = phi i64 [ %3356, %3353 ], [ %3367, %3394 ]
  %3402 = phi i32 [ 1, %3353 ], [ %3398, %3394 ]
  br label %3403

3403:                                             ; preds = %3400, %3403
  %3404 = phi i64 [ %3409, %3403 ], [ %3401, %3400 ]
  %3405 = phi i32 [ %3408, %3403 ], [ %3402, %3400 ]
  %3406 = getelementptr inbounds i32, ptr %11, i64 %3404
  %3407 = load i32, ptr %3406, align 4, !tbaa !6
  %3408 = mul nsw i32 %3407, %3405
  %3409 = add nsw i64 %3404, -1
  %3410 = trunc i64 %3404 to i32
  %3411 = icmp sgt i32 %3410, 0
  br i1 %3411, label %3403, label %3412, !llvm.loop !871

3412:                                             ; preds = %3403, %3394
  %3413 = phi i32 [ %3398, %3394 ], [ %3408, %3403 ]
  %3414 = and i64 %3363, 4294967295
  %3415 = getelementptr inbounds i32, ptr %6, i64 %3414
  %3416 = load i32, ptr %3415, align 4, !tbaa !6
  %3417 = mul nsw i32 %3416, %3413
  %3418 = add nsw i32 %3417, %3357
  %3419 = icmp sgt i64 %3355, 2
  %3420 = add nsw i64 %3356, -1
  %3421 = add i32 %3354, 1
  br i1 %3419, label %3353, label %3422, !llvm.loop !872

3422:                                             ; preds = %3412, %3349
  %3423 = phi i32 [ %3352, %3349 ], [ %3418, %3412 ]
  %3424 = icmp slt i32 %3423, %5
  br i1 %3424, label %3427, label %3425

3425:                                             ; preds = %3422
  %3426 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

3427:                                             ; preds = %3422
  %3428 = sext i32 %3423 to i64
  %3429 = getelementptr inbounds i64, ptr %3172, i64 %3428
  %3430 = load i64, ptr %3429, align 8, !tbaa !121
  %3431 = sitofp i64 %3350 to double
  %3432 = sitofp i64 %3430 to double
  %3433 = icmp slt i64 %3430, 0
  %3434 = fneg fast double %3432
  %3435 = select i1 %3433, double %3434, double %3432
  %3436 = fmul fast double %3432, %3432
  %3437 = fmul fast double %3436, %3435
  %3438 = fadd fast double %3437, %3431
  %3439 = fptosi double %3438 to i64
  store i64 %3439, ptr %3174, align 8, !tbaa !121
  %3440 = add nuw nsw i32 %3351, 1
  br i1 %3192, label %3441, label %3491

3441:                                             ; preds = %3427
  %3442 = load i32, ptr %4, align 4, !tbaa !6
  %3443 = load i32, ptr %12, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, -1
  %3445 = icmp slt i32 %3442, %3444
  br i1 %3445, label %3468, label %3446

3446:                                             ; preds = %3441
  %3447 = icmp eq i32 %3442, %3444
  br i1 %3447, label %3448, label %3484

3448:                                             ; preds = %3446
  store i32 0, ptr %4, align 4, !tbaa !6
  %3449 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3449, ptr %6, align 4, !tbaa !6
  br i1 %3197, label %3491, label %3450

3450:                                             ; preds = %3448, %3478
  %3451 = phi i64 [ %3482, %3478 ], [ 1, %3448 ]
  %3452 = getelementptr inbounds i32, ptr %4, i64 %3451
  %3453 = load i32, ptr %3452, align 4, !tbaa !6
  %3454 = getelementptr inbounds i32, ptr %12, i64 %3451
  %3455 = load i32, ptr %3454, align 4, !tbaa !6
  %3456 = add nsw i32 %3455, -1
  %3457 = icmp slt i32 %3453, %3456
  br i1 %3457, label %3458, label %3476

3458:                                             ; preds = %3450
  br i1 %3445, label %3468, label %3459

3459:                                             ; preds = %3458
  %3460 = shl i64 %3451, 32
  %3461 = add i64 %3460, -4294967296
  %3462 = ashr exact i64 %3461, 32
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3462
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3451
  %3466 = load i32, ptr %3465, align 4, !tbaa !6
  %3467 = add nsw i32 %3466, %3464
  store i32 %3467, ptr %3465, align 4, !tbaa !6
  br label %3486

3468:                                             ; preds = %3441, %3458
  %3469 = phi i32 [ %3453, %3458 ], [ %3442, %3441 ]
  %3470 = phi ptr [ %3452, %3458 ], [ %4, %3441 ]
  %3471 = phi i64 [ %3451, %3458 ], [ 0, %3441 ]
  %3472 = add nsw i32 %3469, 1
  store i32 %3472, ptr %3470, align 4, !tbaa !6
  %3473 = getelementptr inbounds i32, ptr %7, i64 %3471
  %3474 = load i32, ptr %3473, align 4, !tbaa !6
  %3475 = getelementptr inbounds i32, ptr %6, i64 %3471
  br label %3486

3476:                                             ; preds = %3450
  %3477 = icmp eq i32 %3453, %3456
  br i1 %3477, label %3478, label %3484

3478:                                             ; preds = %3476
  store i32 0, ptr %3452, align 4, !tbaa !6
  %3479 = getelementptr inbounds i32, ptr %8, i64 %3451
  %3480 = load i32, ptr %3479, align 4, !tbaa !6
  %3481 = getelementptr inbounds i32, ptr %6, i64 %3451
  store i32 %3480, ptr %3481, align 4, !tbaa !6
  %3482 = add nuw nsw i64 %3451, 1
  %3483 = icmp eq i64 %3482, %3195
  br i1 %3483, label %3491, label %3450, !llvm.loop !873

3484:                                             ; preds = %3446, %3476
  %3485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3486:                                             ; preds = %3459, %3468
  %3487 = phi ptr [ %3475, %3468 ], [ %3452, %3459 ]
  %3488 = phi i32 [ %3474, %3468 ], [ 1, %3459 ]
  %3489 = load i32, ptr %3487, align 4, !tbaa !6
  %3490 = add nsw i32 %3489, %3488
  store i32 %3490, ptr %3487, align 4, !tbaa !6
  br label %3491

3491:                                             ; preds = %3478, %3486, %3448, %3427
  %3492 = icmp eq i32 %3440, %5
  br i1 %3492, label %5679, label %3349, !llvm.loop !874

3493:                                             ; preds = %3183
  %3494 = getelementptr inbounds i32, ptr %3, i64 %19
  %3495 = load i32, ptr %3494, align 4, !tbaa !6
  %3496 = icmp eq i32 %3495, 0
  %3497 = icmp sgt i32 %5, 0
  br i1 %3496, label %3507, label %3498

3498:                                             ; preds = %3493
  br i1 %3497, label %3499, label %5679

3499:                                             ; preds = %3498
  %3500 = icmp sgt i32 %13, 1
  %3501 = icmp sgt i32 %13, 0
  %3502 = add i32 %13, -2
  %3503 = zext i32 %3502 to i64
  %3504 = zext i32 %13 to i64
  %3505 = add nuw i32 %5, 1
  %3506 = icmp eq i32 %13, 1
  br label %3652

3507:                                             ; preds = %3493
  br i1 %3497, label %3508, label %5679

3508:                                             ; preds = %3507
  %3509 = icmp sgt i32 %13, 1
  %3510 = icmp sgt i32 %13, 0
  %3511 = add i32 %13, -2
  %3512 = zext i32 %3511 to i64
  %3513 = zext i32 %13 to i64
  %3514 = add nuw i32 %5, 1
  %3515 = icmp eq i32 %13, 1
  br label %3516

3516:                                             ; preds = %3508, %3650
  %3517 = phi i64 [ 0, %3508 ], [ %3600, %3650 ]
  %3518 = phi i32 [ 0, %3508 ], [ %3602, %3650 ]
  %3519 = phi double [ 0.000000e+00, %3508 ], [ %3601, %3650 ]
  %3520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3509, label %3521, label %3590

3521:                                             ; preds = %3516, %3580
  %3522 = phi i32 [ %3589, %3580 ], [ 0, %3516 ]
  %3523 = phi i64 [ %3531, %3580 ], [ %3513, %3516 ]
  %3524 = phi i64 [ %3588, %3580 ], [ %3512, %3516 ]
  %3525 = phi i32 [ %3586, %3580 ], [ %3520, %3516 ]
  %3526 = sub i32 %3511, %3522
  %3527 = tail call i32 @llvm.smin.i32(i32 %3526, i32 0)
  %3528 = sub i32 %3526, %3527
  %3529 = zext i32 %3528 to i64
  %3530 = add nuw nsw i64 %3529, 1
  %3531 = add nsw i64 %3523, -1
  %3532 = icmp ult i32 %3528, 31
  br i1 %3532, label %3568, label %3533

3533:                                             ; preds = %3521
  %3534 = and i64 %3530, 8589934560
  %3535 = sub i64 %3524, %3534
  br label %3536

3536:                                             ; preds = %3536, %3533
  %3537 = phi i64 [ 0, %3533 ], [ %3560, %3536 ]
  %3538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3556, %3536 ]
  %3539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3557, %3536 ]
  %3540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3558, %3536 ]
  %3541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3559, %3536 ]
  %3542 = sub i64 %3524, %3537
  %3543 = getelementptr inbounds i32, ptr %9, i64 %3542
  %3544 = getelementptr inbounds i32, ptr %3543, i64 -7
  %3545 = load <8 x i32>, ptr %3544, align 4, !tbaa !6
  %3546 = shufflevector <8 x i32> %3545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3547 = getelementptr inbounds i32, ptr %3543, i64 -15
  %3548 = load <8 x i32>, ptr %3547, align 4, !tbaa !6
  %3549 = shufflevector <8 x i32> %3548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3550 = getelementptr inbounds i32, ptr %3543, i64 -23
  %3551 = load <8 x i32>, ptr %3550, align 4, !tbaa !6
  %3552 = shufflevector <8 x i32> %3551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3553 = getelementptr inbounds i32, ptr %3543, i64 -31
  %3554 = load <8 x i32>, ptr %3553, align 4, !tbaa !6
  %3555 = shufflevector <8 x i32> %3554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3556 = mul <8 x i32> %3546, %3538
  %3557 = mul <8 x i32> %3549, %3539
  %3558 = mul <8 x i32> %3552, %3540
  %3559 = mul <8 x i32> %3555, %3541
  %3560 = add nuw i64 %3537, 32
  %3561 = icmp eq i64 %3560, %3534
  br i1 %3561, label %3562, label %3536, !llvm.loop !875

3562:                                             ; preds = %3536
  %3563 = mul <8 x i32> %3557, %3556
  %3564 = mul <8 x i32> %3558, %3563
  %3565 = mul <8 x i32> %3559, %3564
  %3566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3565)
  %3567 = icmp eq i64 %3530, %3534
  br i1 %3567, label %3580, label %3568

3568:                                             ; preds = %3521, %3562
  %3569 = phi i64 [ %3524, %3521 ], [ %3535, %3562 ]
  %3570 = phi i32 [ 1, %3521 ], [ %3566, %3562 ]
  br label %3571

3571:                                             ; preds = %3568, %3571
  %3572 = phi i64 [ %3577, %3571 ], [ %3569, %3568 ]
  %3573 = phi i32 [ %3576, %3571 ], [ %3570, %3568 ]
  %3574 = getelementptr inbounds i32, ptr %9, i64 %3572
  %3575 = load i32, ptr %3574, align 4, !tbaa !6
  %3576 = mul nsw i32 %3575, %3573
  %3577 = add nsw i64 %3572, -1
  %3578 = trunc i64 %3572 to i32
  %3579 = icmp sgt i32 %3578, 0
  br i1 %3579, label %3571, label %3580, !llvm.loop !876

3580:                                             ; preds = %3571, %3562
  %3581 = phi i32 [ %3566, %3562 ], [ %3576, %3571 ]
  %3582 = and i64 %3531, 4294967295
  %3583 = getelementptr inbounds i32, ptr %6, i64 %3582
  %3584 = load i32, ptr %3583, align 4, !tbaa !6
  %3585 = mul nsw i32 %3584, %3581
  %3586 = add nsw i32 %3585, %3525
  %3587 = icmp sgt i64 %3523, 2
  %3588 = add nsw i64 %3524, -1
  %3589 = add i32 %3522, 1
  br i1 %3587, label %3521, label %3590, !llvm.loop !877

3590:                                             ; preds = %3580, %3516
  %3591 = phi i32 [ %3520, %3516 ], [ %3586, %3580 ]
  %3592 = sext i32 %3591 to i64
  %3593 = getelementptr inbounds i64, ptr %3172, i64 %3592
  %3594 = load i64, ptr %3593, align 8, !tbaa !121
  %3595 = icmp slt i64 %3594, 0
  %3596 = mul nsw i64 %3594, %3594
  %3597 = sub nsw i64 0, %3596
  %3598 = select i1 %3595, i64 %3597, i64 %3596
  %3599 = mul i64 %3598, %3594
  %3600 = add nsw i64 %3599, %3517
  store i64 %3600, ptr %3174, align 8, !tbaa !121
  %3601 = fadd fast double %3519, 1.000000e+00
  %3602 = add nuw nsw i32 %3518, 1
  br i1 %3510, label %3603, label %3650

3603:                                             ; preds = %3590
  %3604 = load i32, ptr %4, align 4, !tbaa !6
  %3605 = load i32, ptr %12, align 4, !tbaa !6
  %3606 = add nsw i32 %3605, -1
  %3607 = icmp slt i32 %3604, %3606
  br i1 %3607, label %3627, label %3608

3608:                                             ; preds = %3603
  %3609 = icmp eq i32 %3604, %3606
  br i1 %3609, label %3610, label %3643

3610:                                             ; preds = %3608
  store i32 0, ptr %4, align 4, !tbaa !6
  %3611 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3611, ptr %6, align 4, !tbaa !6
  br i1 %3515, label %3650, label %3612

3612:                                             ; preds = %3610, %3637
  %3613 = phi i64 [ %3641, %3637 ], [ 1, %3610 ]
  %3614 = getelementptr inbounds i32, ptr %4, i64 %3613
  %3615 = load i32, ptr %3614, align 4, !tbaa !6
  %3616 = getelementptr inbounds i32, ptr %12, i64 %3613
  %3617 = load i32, ptr %3616, align 4, !tbaa !6
  %3618 = add nsw i32 %3617, -1
  %3619 = icmp slt i32 %3615, %3618
  br i1 %3619, label %3620, label %3635

3620:                                             ; preds = %3612
  br i1 %3607, label %3627, label %3621

3621:                                             ; preds = %3620
  %3622 = getelementptr inbounds i32, ptr %7, i64 %3613
  %3623 = load i32, ptr %3622, align 4, !tbaa !6
  %3624 = getelementptr inbounds i32, ptr %6, i64 %3613
  %3625 = load i32, ptr %3624, align 4, !tbaa !6
  %3626 = add nsw i32 %3625, %3623
  store i32 %3626, ptr %3624, align 4, !tbaa !6
  br label %3645

3627:                                             ; preds = %3603, %3620
  %3628 = phi i32 [ %3615, %3620 ], [ %3604, %3603 ]
  %3629 = phi ptr [ %3614, %3620 ], [ %4, %3603 ]
  %3630 = phi i64 [ %3613, %3620 ], [ 0, %3603 ]
  %3631 = add nsw i32 %3628, 1
  store i32 %3631, ptr %3629, align 4, !tbaa !6
  %3632 = getelementptr inbounds i32, ptr %7, i64 %3630
  %3633 = load i32, ptr %3632, align 4, !tbaa !6
  %3634 = getelementptr inbounds i32, ptr %6, i64 %3630
  br label %3645

3635:                                             ; preds = %3612
  %3636 = icmp eq i32 %3615, %3618
  br i1 %3636, label %3637, label %3643

3637:                                             ; preds = %3635
  store i32 0, ptr %3614, align 4, !tbaa !6
  %3638 = getelementptr inbounds i32, ptr %8, i64 %3613
  %3639 = load i32, ptr %3638, align 4, !tbaa !6
  %3640 = getelementptr inbounds i32, ptr %6, i64 %3613
  store i32 %3639, ptr %3640, align 4, !tbaa !6
  %3641 = add nuw nsw i64 %3613, 1
  %3642 = icmp eq i64 %3641, %3513
  br i1 %3642, label %3650, label %3612, !llvm.loop !878

3643:                                             ; preds = %3608, %3635
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3645:                                             ; preds = %3621, %3627
  %3646 = phi ptr [ %3634, %3627 ], [ %3614, %3621 ]
  %3647 = phi i32 [ %3633, %3627 ], [ 1, %3621 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3637, %3645, %3610, %3590
  %3651 = icmp eq i32 %3602, %5
  br i1 %3651, label %5679, label %3516, !llvm.loop !879

3652:                                             ; preds = %3499, %3791
  %3653 = phi i64 [ 0, %3499 ], [ %3739, %3791 ]
  %3654 = phi i32 [ 0, %3499 ], [ %3740, %3791 ]
  %3655 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3500, label %3656, label %3725

3656:                                             ; preds = %3652, %3715
  %3657 = phi i32 [ %3724, %3715 ], [ 0, %3652 ]
  %3658 = phi i64 [ %3666, %3715 ], [ %3504, %3652 ]
  %3659 = phi i64 [ %3723, %3715 ], [ %3503, %3652 ]
  %3660 = phi i32 [ %3721, %3715 ], [ %3655, %3652 ]
  %3661 = sub i32 %3502, %3657
  %3662 = tail call i32 @llvm.smin.i32(i32 %3661, i32 0)
  %3663 = sub i32 %3661, %3662
  %3664 = zext i32 %3663 to i64
  %3665 = add nuw nsw i64 %3664, 1
  %3666 = add nsw i64 %3658, -1
  %3667 = icmp ult i32 %3663, 31
  br i1 %3667, label %3703, label %3668

3668:                                             ; preds = %3656
  %3669 = and i64 %3665, 8589934560
  %3670 = sub i64 %3659, %3669
  br label %3671

3671:                                             ; preds = %3671, %3668
  %3672 = phi i64 [ 0, %3668 ], [ %3695, %3671 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3668 ], [ %3691, %3671 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3668 ], [ %3692, %3671 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3668 ], [ %3693, %3671 ]
  %3676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3668 ], [ %3694, %3671 ]
  %3677 = sub i64 %3659, %3672
  %3678 = getelementptr inbounds i32, ptr %11, i64 %3677
  %3679 = getelementptr inbounds i32, ptr %3678, i64 -7
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !6
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = getelementptr inbounds i32, ptr %3678, i64 -15
  %3683 = load <8 x i32>, ptr %3682, align 4, !tbaa !6
  %3684 = shufflevector <8 x i32> %3683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3685 = getelementptr inbounds i32, ptr %3678, i64 -23
  %3686 = load <8 x i32>, ptr %3685, align 4, !tbaa !6
  %3687 = shufflevector <8 x i32> %3686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3688 = getelementptr inbounds i32, ptr %3678, i64 -31
  %3689 = load <8 x i32>, ptr %3688, align 4, !tbaa !6
  %3690 = shufflevector <8 x i32> %3689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3691 = mul <8 x i32> %3681, %3673
  %3692 = mul <8 x i32> %3684, %3674
  %3693 = mul <8 x i32> %3687, %3675
  %3694 = mul <8 x i32> %3690, %3676
  %3695 = add nuw i64 %3672, 32
  %3696 = icmp eq i64 %3695, %3669
  br i1 %3696, label %3697, label %3671, !llvm.loop !880

3697:                                             ; preds = %3671
  %3698 = mul <8 x i32> %3692, %3691
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = mul <8 x i32> %3694, %3699
  %3701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3700)
  %3702 = icmp eq i64 %3665, %3669
  br i1 %3702, label %3715, label %3703

3703:                                             ; preds = %3656, %3697
  %3704 = phi i64 [ %3659, %3656 ], [ %3670, %3697 ]
  %3705 = phi i32 [ 1, %3656 ], [ %3701, %3697 ]
  br label %3706

3706:                                             ; preds = %3703, %3706
  %3707 = phi i64 [ %3712, %3706 ], [ %3704, %3703 ]
  %3708 = phi i32 [ %3711, %3706 ], [ %3705, %3703 ]
  %3709 = getelementptr inbounds i32, ptr %11, i64 %3707
  %3710 = load i32, ptr %3709, align 4, !tbaa !6
  %3711 = mul nsw i32 %3710, %3708
  %3712 = add nsw i64 %3707, -1
  %3713 = trunc i64 %3707 to i32
  %3714 = icmp sgt i32 %3713, 0
  br i1 %3714, label %3706, label %3715, !llvm.loop !881

3715:                                             ; preds = %3706, %3697
  %3716 = phi i32 [ %3701, %3697 ], [ %3711, %3706 ]
  %3717 = and i64 %3666, 4294967295
  %3718 = getelementptr inbounds i32, ptr %6, i64 %3717
  %3719 = load i32, ptr %3718, align 4, !tbaa !6
  %3720 = mul nsw i32 %3719, %3716
  %3721 = add nsw i32 %3720, %3660
  %3722 = icmp sgt i64 %3658, 2
  %3723 = add nsw i64 %3659, -1
  %3724 = add i32 %3657, 1
  br i1 %3722, label %3656, label %3725, !llvm.loop !882

3725:                                             ; preds = %3715, %3652
  %3726 = phi i32 [ %3655, %3652 ], [ %3721, %3715 ]
  %3727 = icmp slt i32 %3726, %5
  br i1 %3727, label %3730, label %3728

3728:                                             ; preds = %3725
  %3729 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

3730:                                             ; preds = %3725
  %3731 = sext i32 %3726 to i64
  %3732 = getelementptr inbounds i64, ptr %3172, i64 %3731
  %3733 = load i64, ptr %3732, align 8, !tbaa !121
  %3734 = icmp slt i64 %3733, 0
  %3735 = mul nsw i64 %3733, %3733
  %3736 = sub nsw i64 0, %3735
  %3737 = select i1 %3734, i64 %3736, i64 %3735
  %3738 = mul i64 %3737, %3733
  %3739 = add nsw i64 %3738, %3653
  store i64 %3739, ptr %3174, align 8, !tbaa !121
  %3740 = add nuw nsw i32 %3654, 1
  br i1 %3501, label %3741, label %3791

3741:                                             ; preds = %3730
  %3742 = load i32, ptr %4, align 4, !tbaa !6
  %3743 = load i32, ptr %12, align 4, !tbaa !6
  %3744 = add nsw i32 %3743, -1
  %3745 = icmp slt i32 %3742, %3744
  br i1 %3745, label %3768, label %3746

3746:                                             ; preds = %3741
  %3747 = icmp eq i32 %3742, %3744
  br i1 %3747, label %3748, label %3784

3748:                                             ; preds = %3746
  store i32 0, ptr %4, align 4, !tbaa !6
  %3749 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3749, ptr %6, align 4, !tbaa !6
  br i1 %3506, label %3791, label %3750

3750:                                             ; preds = %3748, %3778
  %3751 = phi i64 [ %3782, %3778 ], [ 1, %3748 ]
  %3752 = getelementptr inbounds i32, ptr %4, i64 %3751
  %3753 = load i32, ptr %3752, align 4, !tbaa !6
  %3754 = getelementptr inbounds i32, ptr %12, i64 %3751
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = add nsw i32 %3755, -1
  %3757 = icmp slt i32 %3753, %3756
  br i1 %3757, label %3758, label %3776

3758:                                             ; preds = %3750
  br i1 %3745, label %3768, label %3759

3759:                                             ; preds = %3758
  %3760 = shl i64 %3751, 32
  %3761 = add i64 %3760, -4294967296
  %3762 = ashr exact i64 %3761, 32
  %3763 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3764 = load i32, ptr %3763, align 4, !tbaa !6
  %3765 = getelementptr inbounds i32, ptr %6, i64 %3751
  %3766 = load i32, ptr %3765, align 4, !tbaa !6
  %3767 = add nsw i32 %3766, %3764
  store i32 %3767, ptr %3765, align 4, !tbaa !6
  br label %3786

3768:                                             ; preds = %3741, %3758
  %3769 = phi i32 [ %3753, %3758 ], [ %3742, %3741 ]
  %3770 = phi ptr [ %3752, %3758 ], [ %4, %3741 ]
  %3771 = phi i64 [ %3751, %3758 ], [ 0, %3741 ]
  %3772 = add nsw i32 %3769, 1
  store i32 %3772, ptr %3770, align 4, !tbaa !6
  %3773 = getelementptr inbounds i32, ptr %7, i64 %3771
  %3774 = load i32, ptr %3773, align 4, !tbaa !6
  %3775 = getelementptr inbounds i32, ptr %6, i64 %3771
  br label %3786

3776:                                             ; preds = %3750
  %3777 = icmp eq i32 %3753, %3756
  br i1 %3777, label %3778, label %3784

3778:                                             ; preds = %3776
  store i32 0, ptr %3752, align 4, !tbaa !6
  %3779 = getelementptr inbounds i32, ptr %8, i64 %3751
  %3780 = load i32, ptr %3779, align 4, !tbaa !6
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3751
  store i32 %3780, ptr %3781, align 4, !tbaa !6
  %3782 = add nuw nsw i64 %3751, 1
  %3783 = icmp eq i64 %3782, %3504
  br i1 %3783, label %3791, label %3750, !llvm.loop !883

3784:                                             ; preds = %3746, %3776
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3786:                                             ; preds = %3759, %3768
  %3787 = phi ptr [ %3775, %3768 ], [ %3752, %3759 ]
  %3788 = phi i32 [ %3774, %3768 ], [ 1, %3759 ]
  %3789 = load i32, ptr %3787, align 4, !tbaa !6
  %3790 = add nsw i32 %3789, %3788
  store i32 %3790, ptr %3787, align 4, !tbaa !6
  br label %3791

3791:                                             ; preds = %3778, %3786, %3748, %3730
  %3792 = icmp eq i32 %3740, %5
  br i1 %3792, label %5679, label %3652, !llvm.loop !884

3793:                                             ; preds = %3183
  %3794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

3795:                                             ; preds = %18
  %3796 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3797 = load ptr, ptr %3796, align 8, !tbaa !10
  %3798 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3799 = load ptr, ptr %3798, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3799, align 8, !tbaa !19
  %3800 = icmp eq i32 %13, 0
  br i1 %3800, label %3801, label %3809

3801:                                             ; preds = %3795
  %3802 = load i64, ptr %3797, align 8, !tbaa !121
  %3803 = sitofp i64 %3802 to double
  %3804 = icmp slt i64 %3802, 0
  %3805 = fneg fast double %3803
  %3806 = select i1 %3804, double %3805, double %3803
  %3807 = fmul fast double %3803, %3803
  %3808 = fmul fast double %3807, %3806
  store double %3808, ptr %3799, align 8, !tbaa !19
  br label %5679

3809:                                             ; preds = %3795
  switch i32 %1, label %4417 [
    i32 1, label %3810
    i32 0, label %4115
  ]

3810:                                             ; preds = %3809
  %3811 = getelementptr inbounds i32, ptr %3, i64 %19
  %3812 = load i32, ptr %3811, align 4, !tbaa !6
  %3813 = icmp eq i32 %3812, 0
  %3814 = icmp sgt i32 %5, 0
  br i1 %3813, label %3824, label %3815

3815:                                             ; preds = %3810
  br i1 %3814, label %3816, label %5679

3816:                                             ; preds = %3815
  %3817 = icmp sgt i32 %13, 1
  %3818 = icmp sgt i32 %13, 0
  %3819 = add i32 %13, -2
  %3820 = zext i32 %3819 to i64
  %3821 = zext i32 %13 to i64
  %3822 = add nuw i32 %5, 1
  %3823 = icmp eq i32 %13, 1
  br label %3973

3824:                                             ; preds = %3810
  br i1 %3814, label %3825, label %5679

3825:                                             ; preds = %3824
  %3826 = icmp sgt i32 %13, 1
  %3827 = icmp sgt i32 %13, 0
  %3828 = add i32 %13, -2
  %3829 = zext i32 %3828 to i64
  %3830 = zext i32 %13 to i64
  %3831 = add nuw i32 %5, 1
  %3832 = icmp eq i32 %13, 1
  br label %3833

3833:                                             ; preds = %3825, %3971
  %3834 = phi double [ 0.000000e+00, %3825 ], [ %3921, %3971 ]
  %3835 = phi i32 [ 0, %3825 ], [ %3923, %3971 ]
  %3836 = phi double [ 0.000000e+00, %3825 ], [ %3922, %3971 ]
  %3837 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3826, label %3838, label %3907

3838:                                             ; preds = %3833, %3897
  %3839 = phi i32 [ %3906, %3897 ], [ 0, %3833 ]
  %3840 = phi i64 [ %3848, %3897 ], [ %3830, %3833 ]
  %3841 = phi i64 [ %3905, %3897 ], [ %3829, %3833 ]
  %3842 = phi i32 [ %3903, %3897 ], [ %3837, %3833 ]
  %3843 = sub i32 %3828, %3839
  %3844 = tail call i32 @llvm.smin.i32(i32 %3843, i32 0)
  %3845 = sub i32 %3843, %3844
  %3846 = zext i32 %3845 to i64
  %3847 = add nuw nsw i64 %3846, 1
  %3848 = add nsw i64 %3840, -1
  %3849 = icmp ult i32 %3845, 31
  br i1 %3849, label %3885, label %3850

3850:                                             ; preds = %3838
  %3851 = and i64 %3847, 8589934560
  %3852 = sub i64 %3841, %3851
  br label %3853

3853:                                             ; preds = %3853, %3850
  %3854 = phi i64 [ 0, %3850 ], [ %3877, %3853 ]
  %3855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3850 ], [ %3873, %3853 ]
  %3856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3850 ], [ %3874, %3853 ]
  %3857 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3850 ], [ %3875, %3853 ]
  %3858 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3850 ], [ %3876, %3853 ]
  %3859 = sub i64 %3841, %3854
  %3860 = getelementptr inbounds i32, ptr %9, i64 %3859
  %3861 = getelementptr inbounds i32, ptr %3860, i64 -7
  %3862 = load <8 x i32>, ptr %3861, align 4, !tbaa !6
  %3863 = shufflevector <8 x i32> %3862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3864 = getelementptr inbounds i32, ptr %3860, i64 -15
  %3865 = load <8 x i32>, ptr %3864, align 4, !tbaa !6
  %3866 = shufflevector <8 x i32> %3865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3867 = getelementptr inbounds i32, ptr %3860, i64 -23
  %3868 = load <8 x i32>, ptr %3867, align 4, !tbaa !6
  %3869 = shufflevector <8 x i32> %3868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3870 = getelementptr inbounds i32, ptr %3860, i64 -31
  %3871 = load <8 x i32>, ptr %3870, align 4, !tbaa !6
  %3872 = shufflevector <8 x i32> %3871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3873 = mul <8 x i32> %3863, %3855
  %3874 = mul <8 x i32> %3866, %3856
  %3875 = mul <8 x i32> %3869, %3857
  %3876 = mul <8 x i32> %3872, %3858
  %3877 = add nuw i64 %3854, 32
  %3878 = icmp eq i64 %3877, %3851
  br i1 %3878, label %3879, label %3853, !llvm.loop !885

3879:                                             ; preds = %3853
  %3880 = mul <8 x i32> %3874, %3873
  %3881 = mul <8 x i32> %3875, %3880
  %3882 = mul <8 x i32> %3876, %3881
  %3883 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3882)
  %3884 = icmp eq i64 %3847, %3851
  br i1 %3884, label %3897, label %3885

3885:                                             ; preds = %3838, %3879
  %3886 = phi i64 [ %3841, %3838 ], [ %3852, %3879 ]
  %3887 = phi i32 [ 1, %3838 ], [ %3883, %3879 ]
  br label %3888

3888:                                             ; preds = %3885, %3888
  %3889 = phi i64 [ %3894, %3888 ], [ %3886, %3885 ]
  %3890 = phi i32 [ %3893, %3888 ], [ %3887, %3885 ]
  %3891 = getelementptr inbounds i32, ptr %9, i64 %3889
  %3892 = load i32, ptr %3891, align 4, !tbaa !6
  %3893 = mul nsw i32 %3892, %3890
  %3894 = add nsw i64 %3889, -1
  %3895 = trunc i64 %3889 to i32
  %3896 = icmp sgt i32 %3895, 0
  br i1 %3896, label %3888, label %3897, !llvm.loop !886

3897:                                             ; preds = %3888, %3879
  %3898 = phi i32 [ %3883, %3879 ], [ %3893, %3888 ]
  %3899 = and i64 %3848, 4294967295
  %3900 = getelementptr inbounds i32, ptr %6, i64 %3899
  %3901 = load i32, ptr %3900, align 4, !tbaa !6
  %3902 = mul nsw i32 %3901, %3898
  %3903 = add nsw i32 %3902, %3842
  %3904 = icmp sgt i64 %3840, 2
  %3905 = add nsw i64 %3841, -1
  %3906 = add i32 %3839, 1
  br i1 %3904, label %3838, label %3907, !llvm.loop !887

3907:                                             ; preds = %3897, %3833
  %3908 = phi i32 [ %3837, %3833 ], [ %3903, %3897 ]
  %3909 = sext i32 %3908 to i64
  %3910 = getelementptr inbounds double, ptr %2, i64 %3909
  %3911 = load double, ptr %3910, align 8, !tbaa !19
  %3912 = getelementptr inbounds i64, ptr %3797, i64 %3909
  %3913 = load i64, ptr %3912, align 8, !tbaa !121
  %3914 = sitofp i64 %3913 to double
  %3915 = fmul fast double %3911, %3914
  %3916 = fcmp fast olt double %3915, 0.000000e+00
  %3917 = fneg fast double %3915
  %3918 = select nnan ninf i1 %3916, double %3917, double %3915
  %3919 = fmul fast double %3915, %3915
  %3920 = fmul fast double %3919, %3918
  %3921 = fadd fast double %3920, %3834
  store double %3921, ptr %3799, align 8, !tbaa !19
  %3922 = fadd fast double %3911, %3836
  %3923 = add nuw nsw i32 %3835, 1
  br i1 %3827, label %3924, label %3971

3924:                                             ; preds = %3907
  %3925 = load i32, ptr %4, align 4, !tbaa !6
  %3926 = load i32, ptr %12, align 4, !tbaa !6
  %3927 = add nsw i32 %3926, -1
  %3928 = icmp slt i32 %3925, %3927
  br i1 %3928, label %3948, label %3929

3929:                                             ; preds = %3924
  %3930 = icmp eq i32 %3925, %3927
  br i1 %3930, label %3931, label %3964

3931:                                             ; preds = %3929
  store i32 0, ptr %4, align 4, !tbaa !6
  %3932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3932, ptr %6, align 4, !tbaa !6
  br i1 %3832, label %3971, label %3933

3933:                                             ; preds = %3931, %3958
  %3934 = phi i64 [ %3962, %3958 ], [ 1, %3931 ]
  %3935 = getelementptr inbounds i32, ptr %4, i64 %3934
  %3936 = load i32, ptr %3935, align 4, !tbaa !6
  %3937 = getelementptr inbounds i32, ptr %12, i64 %3934
  %3938 = load i32, ptr %3937, align 4, !tbaa !6
  %3939 = add nsw i32 %3938, -1
  %3940 = icmp slt i32 %3936, %3939
  br i1 %3940, label %3941, label %3956

3941:                                             ; preds = %3933
  br i1 %3928, label %3948, label %3942

3942:                                             ; preds = %3941
  %3943 = getelementptr inbounds i32, ptr %7, i64 %3934
  %3944 = load i32, ptr %3943, align 4, !tbaa !6
  %3945 = getelementptr inbounds i32, ptr %6, i64 %3934
  %3946 = load i32, ptr %3945, align 4, !tbaa !6
  %3947 = add nsw i32 %3946, %3944
  store i32 %3947, ptr %3945, align 4, !tbaa !6
  br label %3966

3948:                                             ; preds = %3924, %3941
  %3949 = phi i32 [ %3936, %3941 ], [ %3925, %3924 ]
  %3950 = phi ptr [ %3935, %3941 ], [ %4, %3924 ]
  %3951 = phi i64 [ %3934, %3941 ], [ 0, %3924 ]
  %3952 = add nsw i32 %3949, 1
  store i32 %3952, ptr %3950, align 4, !tbaa !6
  %3953 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3954 = load i32, ptr %3953, align 4, !tbaa !6
  %3955 = getelementptr inbounds i32, ptr %6, i64 %3951
  br label %3966

3956:                                             ; preds = %3933
  %3957 = icmp eq i32 %3936, %3939
  br i1 %3957, label %3958, label %3964

3958:                                             ; preds = %3956
  store i32 0, ptr %3935, align 4, !tbaa !6
  %3959 = getelementptr inbounds i32, ptr %8, i64 %3934
  %3960 = load i32, ptr %3959, align 4, !tbaa !6
  %3961 = getelementptr inbounds i32, ptr %6, i64 %3934
  store i32 %3960, ptr %3961, align 4, !tbaa !6
  %3962 = add nuw nsw i64 %3934, 1
  %3963 = icmp eq i64 %3962, %3830
  br i1 %3963, label %3971, label %3933, !llvm.loop !888

3964:                                             ; preds = %3929, %3956
  %3965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

3966:                                             ; preds = %3942, %3948
  %3967 = phi ptr [ %3955, %3948 ], [ %3935, %3942 ]
  %3968 = phi i32 [ %3954, %3948 ], [ 1, %3942 ]
  %3969 = load i32, ptr %3967, align 4, !tbaa !6
  %3970 = add nsw i32 %3969, %3968
  store i32 %3970, ptr %3967, align 4, !tbaa !6
  br label %3971

3971:                                             ; preds = %3958, %3966, %3931, %3907
  %3972 = icmp eq i32 %3923, %5
  br i1 %3972, label %5679, label %3833, !llvm.loop !889

3973:                                             ; preds = %3816, %4113
  %3974 = phi double [ 0.000000e+00, %3816 ], [ %4061, %4113 ]
  %3975 = phi i32 [ 0, %3816 ], [ %4062, %4113 ]
  %3976 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3817, label %3977, label %4046

3977:                                             ; preds = %3973, %4036
  %3978 = phi i32 [ %4045, %4036 ], [ 0, %3973 ]
  %3979 = phi i64 [ %3987, %4036 ], [ %3821, %3973 ]
  %3980 = phi i64 [ %4044, %4036 ], [ %3820, %3973 ]
  %3981 = phi i32 [ %4042, %4036 ], [ %3976, %3973 ]
  %3982 = sub i32 %3819, %3978
  %3983 = tail call i32 @llvm.smin.i32(i32 %3982, i32 0)
  %3984 = sub i32 %3982, %3983
  %3985 = zext i32 %3984 to i64
  %3986 = add nuw nsw i64 %3985, 1
  %3987 = add nsw i64 %3979, -1
  %3988 = icmp ult i32 %3984, 31
  br i1 %3988, label %4024, label %3989

3989:                                             ; preds = %3977
  %3990 = and i64 %3986, 8589934560
  %3991 = sub i64 %3980, %3990
  br label %3992

3992:                                             ; preds = %3992, %3989
  %3993 = phi i64 [ 0, %3989 ], [ %4016, %3992 ]
  %3994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3989 ], [ %4012, %3992 ]
  %3995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3989 ], [ %4013, %3992 ]
  %3996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3989 ], [ %4014, %3992 ]
  %3997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3989 ], [ %4015, %3992 ]
  %3998 = sub i64 %3980, %3993
  %3999 = getelementptr inbounds i32, ptr %11, i64 %3998
  %4000 = getelementptr inbounds i32, ptr %3999, i64 -7
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !6
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3999, i64 -15
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !6
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = getelementptr inbounds i32, ptr %3999, i64 -23
  %4007 = load <8 x i32>, ptr %4006, align 4, !tbaa !6
  %4008 = shufflevector <8 x i32> %4007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4009 = getelementptr inbounds i32, ptr %3999, i64 -31
  %4010 = load <8 x i32>, ptr %4009, align 4, !tbaa !6
  %4011 = shufflevector <8 x i32> %4010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4012 = mul <8 x i32> %4002, %3994
  %4013 = mul <8 x i32> %4005, %3995
  %4014 = mul <8 x i32> %4008, %3996
  %4015 = mul <8 x i32> %4011, %3997
  %4016 = add nuw i64 %3993, 32
  %4017 = icmp eq i64 %4016, %3990
  br i1 %4017, label %4018, label %3992, !llvm.loop !890

4018:                                             ; preds = %3992
  %4019 = mul <8 x i32> %4013, %4012
  %4020 = mul <8 x i32> %4014, %4019
  %4021 = mul <8 x i32> %4015, %4020
  %4022 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4021)
  %4023 = icmp eq i64 %3986, %3990
  br i1 %4023, label %4036, label %4024

4024:                                             ; preds = %3977, %4018
  %4025 = phi i64 [ %3980, %3977 ], [ %3991, %4018 ]
  %4026 = phi i32 [ 1, %3977 ], [ %4022, %4018 ]
  br label %4027

4027:                                             ; preds = %4024, %4027
  %4028 = phi i64 [ %4033, %4027 ], [ %4025, %4024 ]
  %4029 = phi i32 [ %4032, %4027 ], [ %4026, %4024 ]
  %4030 = getelementptr inbounds i32, ptr %11, i64 %4028
  %4031 = load i32, ptr %4030, align 4, !tbaa !6
  %4032 = mul nsw i32 %4031, %4029
  %4033 = add nsw i64 %4028, -1
  %4034 = trunc i64 %4028 to i32
  %4035 = icmp sgt i32 %4034, 0
  br i1 %4035, label %4027, label %4036, !llvm.loop !891

4036:                                             ; preds = %4027, %4018
  %4037 = phi i32 [ %4022, %4018 ], [ %4032, %4027 ]
  %4038 = and i64 %3987, 4294967295
  %4039 = getelementptr inbounds i32, ptr %6, i64 %4038
  %4040 = load i32, ptr %4039, align 4, !tbaa !6
  %4041 = mul nsw i32 %4040, %4037
  %4042 = add nsw i32 %4041, %3981
  %4043 = icmp sgt i64 %3979, 2
  %4044 = add nsw i64 %3980, -1
  %4045 = add i32 %3978, 1
  br i1 %4043, label %3977, label %4046, !llvm.loop !892

4046:                                             ; preds = %4036, %3973
  %4047 = phi i32 [ %3976, %3973 ], [ %4042, %4036 ]
  %4048 = icmp slt i32 %4047, %5
  br i1 %4048, label %4051, label %4049

4049:                                             ; preds = %4046
  %4050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

4051:                                             ; preds = %4046
  %4052 = sext i32 %4047 to i64
  %4053 = getelementptr inbounds i64, ptr %3797, i64 %4052
  %4054 = load i64, ptr %4053, align 8, !tbaa !121
  %4055 = sitofp i64 %4054 to double
  %4056 = icmp slt i64 %4054, 0
  %4057 = fneg fast double %4055
  %4058 = select i1 %4056, double %4057, double %4055
  %4059 = fmul fast double %4055, %4055
  %4060 = fmul fast double %4059, %4058
  %4061 = fadd fast double %4060, %3974
  store double %4061, ptr %3799, align 8, !tbaa !19
  %4062 = add nuw nsw i32 %3975, 1
  br i1 %3818, label %4063, label %4113

4063:                                             ; preds = %4051
  %4064 = load i32, ptr %4, align 4, !tbaa !6
  %4065 = load i32, ptr %12, align 4, !tbaa !6
  %4066 = add nsw i32 %4065, -1
  %4067 = icmp slt i32 %4064, %4066
  br i1 %4067, label %4090, label %4068

4068:                                             ; preds = %4063
  %4069 = icmp eq i32 %4064, %4066
  br i1 %4069, label %4070, label %4106

4070:                                             ; preds = %4068
  store i32 0, ptr %4, align 4, !tbaa !6
  %4071 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4071, ptr %6, align 4, !tbaa !6
  br i1 %3823, label %4113, label %4072

4072:                                             ; preds = %4070, %4100
  %4073 = phi i64 [ %4104, %4100 ], [ 1, %4070 ]
  %4074 = getelementptr inbounds i32, ptr %4, i64 %4073
  %4075 = load i32, ptr %4074, align 4, !tbaa !6
  %4076 = getelementptr inbounds i32, ptr %12, i64 %4073
  %4077 = load i32, ptr %4076, align 4, !tbaa !6
  %4078 = add nsw i32 %4077, -1
  %4079 = icmp slt i32 %4075, %4078
  br i1 %4079, label %4080, label %4098

4080:                                             ; preds = %4072
  br i1 %4067, label %4090, label %4081

4081:                                             ; preds = %4080
  %4082 = shl i64 %4073, 32
  %4083 = add i64 %4082, -4294967296
  %4084 = ashr exact i64 %4083, 32
  %4085 = getelementptr inbounds i32, ptr %7, i64 %4084
  %4086 = load i32, ptr %4085, align 4, !tbaa !6
  %4087 = getelementptr inbounds i32, ptr %6, i64 %4073
  %4088 = load i32, ptr %4087, align 4, !tbaa !6
  %4089 = add nsw i32 %4088, %4086
  store i32 %4089, ptr %4087, align 4, !tbaa !6
  br label %4108

4090:                                             ; preds = %4063, %4080
  %4091 = phi i32 [ %4075, %4080 ], [ %4064, %4063 ]
  %4092 = phi ptr [ %4074, %4080 ], [ %4, %4063 ]
  %4093 = phi i64 [ %4073, %4080 ], [ 0, %4063 ]
  %4094 = add nsw i32 %4091, 1
  store i32 %4094, ptr %4092, align 4, !tbaa !6
  %4095 = getelementptr inbounds i32, ptr %7, i64 %4093
  %4096 = load i32, ptr %4095, align 4, !tbaa !6
  %4097 = getelementptr inbounds i32, ptr %6, i64 %4093
  br label %4108

4098:                                             ; preds = %4072
  %4099 = icmp eq i32 %4075, %4078
  br i1 %4099, label %4100, label %4106

4100:                                             ; preds = %4098
  store i32 0, ptr %4074, align 4, !tbaa !6
  %4101 = getelementptr inbounds i32, ptr %8, i64 %4073
  %4102 = load i32, ptr %4101, align 4, !tbaa !6
  %4103 = getelementptr inbounds i32, ptr %6, i64 %4073
  store i32 %4102, ptr %4103, align 4, !tbaa !6
  %4104 = add nuw nsw i64 %4073, 1
  %4105 = icmp eq i64 %4104, %3821
  br i1 %4105, label %4113, label %4072, !llvm.loop !893

4106:                                             ; preds = %4068, %4098
  %4107 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4108:                                             ; preds = %4081, %4090
  %4109 = phi ptr [ %4097, %4090 ], [ %4074, %4081 ]
  %4110 = phi i32 [ %4096, %4090 ], [ 1, %4081 ]
  %4111 = load i32, ptr %4109, align 4, !tbaa !6
  %4112 = add nsw i32 %4111, %4110
  store i32 %4112, ptr %4109, align 4, !tbaa !6
  br label %4113

4113:                                             ; preds = %4100, %4108, %4070, %4051
  %4114 = icmp eq i32 %4062, %5
  br i1 %4114, label %5679, label %3973, !llvm.loop !894

4115:                                             ; preds = %3809
  %4116 = getelementptr inbounds i32, ptr %3, i64 %19
  %4117 = load i32, ptr %4116, align 4, !tbaa !6
  %4118 = icmp eq i32 %4117, 0
  %4119 = icmp sgt i32 %5, 0
  br i1 %4118, label %4129, label %4120

4120:                                             ; preds = %4115
  br i1 %4119, label %4121, label %5679

4121:                                             ; preds = %4120
  %4122 = icmp sgt i32 %13, 1
  %4123 = icmp sgt i32 %13, 0
  %4124 = add i32 %13, -2
  %4125 = zext i32 %4124 to i64
  %4126 = zext i32 %13 to i64
  %4127 = add nuw i32 %5, 1
  %4128 = icmp eq i32 %13, 1
  br label %4275

4129:                                             ; preds = %4115
  br i1 %4119, label %4130, label %5679

4130:                                             ; preds = %4129
  %4131 = icmp sgt i32 %13, 1
  %4132 = icmp sgt i32 %13, 0
  %4133 = add i32 %13, -2
  %4134 = zext i32 %4133 to i64
  %4135 = zext i32 %13 to i64
  %4136 = add nuw i32 %5, 1
  %4137 = icmp eq i32 %13, 1
  br label %4138

4138:                                             ; preds = %4130, %4273
  %4139 = phi double [ 0.000000e+00, %4130 ], [ %4223, %4273 ]
  %4140 = phi i32 [ 0, %4130 ], [ %4225, %4273 ]
  %4141 = phi double [ 0.000000e+00, %4130 ], [ %4224, %4273 ]
  %4142 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4131, label %4143, label %4212

4143:                                             ; preds = %4138, %4202
  %4144 = phi i32 [ %4211, %4202 ], [ 0, %4138 ]
  %4145 = phi i64 [ %4153, %4202 ], [ %4135, %4138 ]
  %4146 = phi i64 [ %4210, %4202 ], [ %4134, %4138 ]
  %4147 = phi i32 [ %4208, %4202 ], [ %4142, %4138 ]
  %4148 = sub i32 %4133, %4144
  %4149 = tail call i32 @llvm.smin.i32(i32 %4148, i32 0)
  %4150 = sub i32 %4148, %4149
  %4151 = zext i32 %4150 to i64
  %4152 = add nuw nsw i64 %4151, 1
  %4153 = add nsw i64 %4145, -1
  %4154 = icmp ult i32 %4150, 31
  br i1 %4154, label %4190, label %4155

4155:                                             ; preds = %4143
  %4156 = and i64 %4152, 8589934560
  %4157 = sub i64 %4146, %4156
  br label %4158

4158:                                             ; preds = %4158, %4155
  %4159 = phi i64 [ 0, %4155 ], [ %4182, %4158 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4155 ], [ %4178, %4158 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4155 ], [ %4179, %4158 ]
  %4162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4155 ], [ %4180, %4158 ]
  %4163 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4155 ], [ %4181, %4158 ]
  %4164 = sub i64 %4146, %4159
  %4165 = getelementptr inbounds i32, ptr %9, i64 %4164
  %4166 = getelementptr inbounds i32, ptr %4165, i64 -7
  %4167 = load <8 x i32>, ptr %4166, align 4, !tbaa !6
  %4168 = shufflevector <8 x i32> %4167, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4169 = getelementptr inbounds i32, ptr %4165, i64 -15
  %4170 = load <8 x i32>, ptr %4169, align 4, !tbaa !6
  %4171 = shufflevector <8 x i32> %4170, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4172 = getelementptr inbounds i32, ptr %4165, i64 -23
  %4173 = load <8 x i32>, ptr %4172, align 4, !tbaa !6
  %4174 = shufflevector <8 x i32> %4173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4175 = getelementptr inbounds i32, ptr %4165, i64 -31
  %4176 = load <8 x i32>, ptr %4175, align 4, !tbaa !6
  %4177 = shufflevector <8 x i32> %4176, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4178 = mul <8 x i32> %4168, %4160
  %4179 = mul <8 x i32> %4171, %4161
  %4180 = mul <8 x i32> %4174, %4162
  %4181 = mul <8 x i32> %4177, %4163
  %4182 = add nuw i64 %4159, 32
  %4183 = icmp eq i64 %4182, %4156
  br i1 %4183, label %4184, label %4158, !llvm.loop !895

4184:                                             ; preds = %4158
  %4185 = mul <8 x i32> %4179, %4178
  %4186 = mul <8 x i32> %4180, %4185
  %4187 = mul <8 x i32> %4181, %4186
  %4188 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4187)
  %4189 = icmp eq i64 %4152, %4156
  br i1 %4189, label %4202, label %4190

4190:                                             ; preds = %4143, %4184
  %4191 = phi i64 [ %4146, %4143 ], [ %4157, %4184 ]
  %4192 = phi i32 [ 1, %4143 ], [ %4188, %4184 ]
  br label %4193

4193:                                             ; preds = %4190, %4193
  %4194 = phi i64 [ %4199, %4193 ], [ %4191, %4190 ]
  %4195 = phi i32 [ %4198, %4193 ], [ %4192, %4190 ]
  %4196 = getelementptr inbounds i32, ptr %9, i64 %4194
  %4197 = load i32, ptr %4196, align 4, !tbaa !6
  %4198 = mul nsw i32 %4197, %4195
  %4199 = add nsw i64 %4194, -1
  %4200 = trunc i64 %4194 to i32
  %4201 = icmp sgt i32 %4200, 0
  br i1 %4201, label %4193, label %4202, !llvm.loop !896

4202:                                             ; preds = %4193, %4184
  %4203 = phi i32 [ %4188, %4184 ], [ %4198, %4193 ]
  %4204 = and i64 %4153, 4294967295
  %4205 = getelementptr inbounds i32, ptr %6, i64 %4204
  %4206 = load i32, ptr %4205, align 4, !tbaa !6
  %4207 = mul nsw i32 %4206, %4203
  %4208 = add nsw i32 %4207, %4147
  %4209 = icmp sgt i64 %4145, 2
  %4210 = add nsw i64 %4146, -1
  %4211 = add i32 %4144, 1
  br i1 %4209, label %4143, label %4212, !llvm.loop !897

4212:                                             ; preds = %4202, %4138
  %4213 = phi i32 [ %4142, %4138 ], [ %4208, %4202 ]
  %4214 = sext i32 %4213 to i64
  %4215 = getelementptr inbounds i64, ptr %3797, i64 %4214
  %4216 = load i64, ptr %4215, align 8, !tbaa !121
  %4217 = sitofp i64 %4216 to double
  %4218 = icmp slt i64 %4216, 0
  %4219 = fneg fast double %4217
  %4220 = select i1 %4218, double %4219, double %4217
  %4221 = fmul fast double %4217, %4217
  %4222 = fmul fast double %4221, %4220
  %4223 = fadd fast double %4222, %4139
  %4224 = fadd fast double %4141, 1.000000e+00
  %4225 = add nuw nsw i32 %4140, 1
  br i1 %4132, label %4226, label %4273

4226:                                             ; preds = %4212
  %4227 = load i32, ptr %4, align 4, !tbaa !6
  %4228 = load i32, ptr %12, align 4, !tbaa !6
  %4229 = add nsw i32 %4228, -1
  %4230 = icmp slt i32 %4227, %4229
  br i1 %4230, label %4250, label %4231

4231:                                             ; preds = %4226
  %4232 = icmp eq i32 %4227, %4229
  br i1 %4232, label %4233, label %4266

4233:                                             ; preds = %4231
  store i32 0, ptr %4, align 4, !tbaa !6
  %4234 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4234, ptr %6, align 4, !tbaa !6
  br i1 %4137, label %4273, label %4235

4235:                                             ; preds = %4233, %4260
  %4236 = phi i64 [ %4264, %4260 ], [ 1, %4233 ]
  %4237 = getelementptr inbounds i32, ptr %4, i64 %4236
  %4238 = load i32, ptr %4237, align 4, !tbaa !6
  %4239 = getelementptr inbounds i32, ptr %12, i64 %4236
  %4240 = load i32, ptr %4239, align 4, !tbaa !6
  %4241 = add nsw i32 %4240, -1
  %4242 = icmp slt i32 %4238, %4241
  br i1 %4242, label %4243, label %4258

4243:                                             ; preds = %4235
  br i1 %4230, label %4250, label %4244

4244:                                             ; preds = %4243
  %4245 = getelementptr inbounds i32, ptr %7, i64 %4236
  %4246 = load i32, ptr %4245, align 4, !tbaa !6
  %4247 = getelementptr inbounds i32, ptr %6, i64 %4236
  %4248 = load i32, ptr %4247, align 4, !tbaa !6
  %4249 = add nsw i32 %4248, %4246
  store i32 %4249, ptr %4247, align 4, !tbaa !6
  br label %4268

4250:                                             ; preds = %4226, %4243
  %4251 = phi i32 [ %4238, %4243 ], [ %4227, %4226 ]
  %4252 = phi ptr [ %4237, %4243 ], [ %4, %4226 ]
  %4253 = phi i64 [ %4236, %4243 ], [ 0, %4226 ]
  %4254 = add nsw i32 %4251, 1
  store i32 %4254, ptr %4252, align 4, !tbaa !6
  %4255 = getelementptr inbounds i32, ptr %7, i64 %4253
  %4256 = load i32, ptr %4255, align 4, !tbaa !6
  %4257 = getelementptr inbounds i32, ptr %6, i64 %4253
  br label %4268

4258:                                             ; preds = %4235
  %4259 = icmp eq i32 %4238, %4241
  br i1 %4259, label %4260, label %4266

4260:                                             ; preds = %4258
  store i32 0, ptr %4237, align 4, !tbaa !6
  %4261 = getelementptr inbounds i32, ptr %8, i64 %4236
  %4262 = load i32, ptr %4261, align 4, !tbaa !6
  %4263 = getelementptr inbounds i32, ptr %6, i64 %4236
  store i32 %4262, ptr %4263, align 4, !tbaa !6
  %4264 = add nuw nsw i64 %4236, 1
  %4265 = icmp eq i64 %4264, %4135
  br i1 %4265, label %4273, label %4235, !llvm.loop !898

4266:                                             ; preds = %4231, %4258
  store double %4223, ptr %3799, align 8, !tbaa !19
  %4267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4268:                                             ; preds = %4244, %4250
  %4269 = phi ptr [ %4257, %4250 ], [ %4237, %4244 ]
  %4270 = phi i32 [ %4256, %4250 ], [ 1, %4244 ]
  %4271 = load i32, ptr %4269, align 4, !tbaa !6
  %4272 = add nsw i32 %4271, %4270
  store i32 %4272, ptr %4269, align 4, !tbaa !6
  br label %4273

4273:                                             ; preds = %4260, %4268, %4233, %4212
  %4274 = icmp eq i32 %4225, %5
  br i1 %4274, label %5675, label %4138, !llvm.loop !899

4275:                                             ; preds = %4121, %4415
  %4276 = phi double [ 0.000000e+00, %4121 ], [ %4363, %4415 ]
  %4277 = phi i32 [ 0, %4121 ], [ %4364, %4415 ]
  %4278 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4122, label %4279, label %4348

4279:                                             ; preds = %4275, %4338
  %4280 = phi i32 [ %4347, %4338 ], [ 0, %4275 ]
  %4281 = phi i64 [ %4289, %4338 ], [ %4126, %4275 ]
  %4282 = phi i64 [ %4346, %4338 ], [ %4125, %4275 ]
  %4283 = phi i32 [ %4344, %4338 ], [ %4278, %4275 ]
  %4284 = sub i32 %4124, %4280
  %4285 = tail call i32 @llvm.smin.i32(i32 %4284, i32 0)
  %4286 = sub i32 %4284, %4285
  %4287 = zext i32 %4286 to i64
  %4288 = add nuw nsw i64 %4287, 1
  %4289 = add nsw i64 %4281, -1
  %4290 = icmp ult i32 %4286, 31
  br i1 %4290, label %4326, label %4291

4291:                                             ; preds = %4279
  %4292 = and i64 %4288, 8589934560
  %4293 = sub i64 %4282, %4292
  br label %4294

4294:                                             ; preds = %4294, %4291
  %4295 = phi i64 [ 0, %4291 ], [ %4318, %4294 ]
  %4296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4291 ], [ %4314, %4294 ]
  %4297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4291 ], [ %4315, %4294 ]
  %4298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4291 ], [ %4316, %4294 ]
  %4299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4291 ], [ %4317, %4294 ]
  %4300 = sub i64 %4282, %4295
  %4301 = getelementptr inbounds i32, ptr %11, i64 %4300
  %4302 = getelementptr inbounds i32, ptr %4301, i64 -7
  %4303 = load <8 x i32>, ptr %4302, align 4, !tbaa !6
  %4304 = shufflevector <8 x i32> %4303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4305 = getelementptr inbounds i32, ptr %4301, i64 -15
  %4306 = load <8 x i32>, ptr %4305, align 4, !tbaa !6
  %4307 = shufflevector <8 x i32> %4306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4308 = getelementptr inbounds i32, ptr %4301, i64 -23
  %4309 = load <8 x i32>, ptr %4308, align 4, !tbaa !6
  %4310 = shufflevector <8 x i32> %4309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4311 = getelementptr inbounds i32, ptr %4301, i64 -31
  %4312 = load <8 x i32>, ptr %4311, align 4, !tbaa !6
  %4313 = shufflevector <8 x i32> %4312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4314 = mul <8 x i32> %4304, %4296
  %4315 = mul <8 x i32> %4307, %4297
  %4316 = mul <8 x i32> %4310, %4298
  %4317 = mul <8 x i32> %4313, %4299
  %4318 = add nuw i64 %4295, 32
  %4319 = icmp eq i64 %4318, %4292
  br i1 %4319, label %4320, label %4294, !llvm.loop !900

4320:                                             ; preds = %4294
  %4321 = mul <8 x i32> %4315, %4314
  %4322 = mul <8 x i32> %4316, %4321
  %4323 = mul <8 x i32> %4317, %4322
  %4324 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4323)
  %4325 = icmp eq i64 %4288, %4292
  br i1 %4325, label %4338, label %4326

4326:                                             ; preds = %4279, %4320
  %4327 = phi i64 [ %4282, %4279 ], [ %4293, %4320 ]
  %4328 = phi i32 [ 1, %4279 ], [ %4324, %4320 ]
  br label %4329

4329:                                             ; preds = %4326, %4329
  %4330 = phi i64 [ %4335, %4329 ], [ %4327, %4326 ]
  %4331 = phi i32 [ %4334, %4329 ], [ %4328, %4326 ]
  %4332 = getelementptr inbounds i32, ptr %11, i64 %4330
  %4333 = load i32, ptr %4332, align 4, !tbaa !6
  %4334 = mul nsw i32 %4333, %4331
  %4335 = add nsw i64 %4330, -1
  %4336 = trunc i64 %4330 to i32
  %4337 = icmp sgt i32 %4336, 0
  br i1 %4337, label %4329, label %4338, !llvm.loop !901

4338:                                             ; preds = %4329, %4320
  %4339 = phi i32 [ %4324, %4320 ], [ %4334, %4329 ]
  %4340 = and i64 %4289, 4294967295
  %4341 = getelementptr inbounds i32, ptr %6, i64 %4340
  %4342 = load i32, ptr %4341, align 4, !tbaa !6
  %4343 = mul nsw i32 %4342, %4339
  %4344 = add nsw i32 %4343, %4283
  %4345 = icmp sgt i64 %4281, 2
  %4346 = add nsw i64 %4282, -1
  %4347 = add i32 %4280, 1
  br i1 %4345, label %4279, label %4348, !llvm.loop !902

4348:                                             ; preds = %4338, %4275
  %4349 = phi i32 [ %4278, %4275 ], [ %4344, %4338 ]
  %4350 = icmp slt i32 %4349, %5
  br i1 %4350, label %4353, label %4351

4351:                                             ; preds = %4348
  %4352 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

4353:                                             ; preds = %4348
  %4354 = sext i32 %4349 to i64
  %4355 = getelementptr inbounds i64, ptr %3797, i64 %4354
  %4356 = load i64, ptr %4355, align 8, !tbaa !121
  %4357 = sitofp i64 %4356 to double
  %4358 = icmp slt i64 %4356, 0
  %4359 = fneg fast double %4357
  %4360 = select i1 %4358, double %4359, double %4357
  %4361 = fmul fast double %4357, %4357
  %4362 = fmul fast double %4361, %4360
  %4363 = fadd fast double %4362, %4276
  store double %4363, ptr %3799, align 8, !tbaa !19
  %4364 = add nuw nsw i32 %4277, 1
  br i1 %4123, label %4365, label %4415

4365:                                             ; preds = %4353
  %4366 = load i32, ptr %4, align 4, !tbaa !6
  %4367 = load i32, ptr %12, align 4, !tbaa !6
  %4368 = add nsw i32 %4367, -1
  %4369 = icmp slt i32 %4366, %4368
  br i1 %4369, label %4392, label %4370

4370:                                             ; preds = %4365
  %4371 = icmp eq i32 %4366, %4368
  br i1 %4371, label %4372, label %4408

4372:                                             ; preds = %4370
  store i32 0, ptr %4, align 4, !tbaa !6
  %4373 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4373, ptr %6, align 4, !tbaa !6
  br i1 %4128, label %4415, label %4374

4374:                                             ; preds = %4372, %4402
  %4375 = phi i64 [ %4406, %4402 ], [ 1, %4372 ]
  %4376 = getelementptr inbounds i32, ptr %4, i64 %4375
  %4377 = load i32, ptr %4376, align 4, !tbaa !6
  %4378 = getelementptr inbounds i32, ptr %12, i64 %4375
  %4379 = load i32, ptr %4378, align 4, !tbaa !6
  %4380 = add nsw i32 %4379, -1
  %4381 = icmp slt i32 %4377, %4380
  br i1 %4381, label %4382, label %4400

4382:                                             ; preds = %4374
  br i1 %4369, label %4392, label %4383

4383:                                             ; preds = %4382
  %4384 = shl i64 %4375, 32
  %4385 = add i64 %4384, -4294967296
  %4386 = ashr exact i64 %4385, 32
  %4387 = getelementptr inbounds i32, ptr %7, i64 %4386
  %4388 = load i32, ptr %4387, align 4, !tbaa !6
  %4389 = getelementptr inbounds i32, ptr %6, i64 %4375
  %4390 = load i32, ptr %4389, align 4, !tbaa !6
  %4391 = add nsw i32 %4390, %4388
  store i32 %4391, ptr %4389, align 4, !tbaa !6
  br label %4410

4392:                                             ; preds = %4365, %4382
  %4393 = phi i32 [ %4377, %4382 ], [ %4366, %4365 ]
  %4394 = phi ptr [ %4376, %4382 ], [ %4, %4365 ]
  %4395 = phi i64 [ %4375, %4382 ], [ 0, %4365 ]
  %4396 = add nsw i32 %4393, 1
  store i32 %4396, ptr %4394, align 4, !tbaa !6
  %4397 = getelementptr inbounds i32, ptr %7, i64 %4395
  %4398 = load i32, ptr %4397, align 4, !tbaa !6
  %4399 = getelementptr inbounds i32, ptr %6, i64 %4395
  br label %4410

4400:                                             ; preds = %4374
  %4401 = icmp eq i32 %4377, %4380
  br i1 %4401, label %4402, label %4408

4402:                                             ; preds = %4400
  store i32 0, ptr %4376, align 4, !tbaa !6
  %4403 = getelementptr inbounds i32, ptr %8, i64 %4375
  %4404 = load i32, ptr %4403, align 4, !tbaa !6
  %4405 = getelementptr inbounds i32, ptr %6, i64 %4375
  store i32 %4404, ptr %4405, align 4, !tbaa !6
  %4406 = add nuw nsw i64 %4375, 1
  %4407 = icmp eq i64 %4406, %4126
  br i1 %4407, label %4415, label %4374, !llvm.loop !903

4408:                                             ; preds = %4370, %4400
  %4409 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4410:                                             ; preds = %4383, %4392
  %4411 = phi ptr [ %4399, %4392 ], [ %4376, %4383 ]
  %4412 = phi i32 [ %4398, %4392 ], [ 1, %4383 ]
  %4413 = load i32, ptr %4411, align 4, !tbaa !6
  %4414 = add nsw i32 %4413, %4412
  store i32 %4414, ptr %4411, align 4, !tbaa !6
  br label %4415

4415:                                             ; preds = %4402, %4410, %4372, %4353
  %4416 = icmp eq i32 %4364, %5
  br i1 %4416, label %5679, label %4275, !llvm.loop !904

4417:                                             ; preds = %3809
  %4418 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

4419:                                             ; preds = %18
  %4420 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4421 = load ptr, ptr %4420, align 8, !tbaa !10
  %4422 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4423 = load ptr, ptr %4422, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4423, align 4, !tbaa !163
  %4424 = icmp eq i32 %13, 0
  br i1 %4424, label %4425, label %4433

4425:                                             ; preds = %4419
  %4426 = load i64, ptr %4421, align 8, !tbaa !121
  %4427 = sitofp i64 %4426 to float
  %4428 = icmp slt i64 %4426, 0
  %4429 = fneg fast float %4427
  %4430 = select i1 %4428, float %4429, float %4427
  %4431 = fmul fast float %4427, %4427
  %4432 = fmul fast float %4431, %4430
  store float %4432, ptr %4423, align 4, !tbaa !163
  br label %5679

4433:                                             ; preds = %4419
  switch i32 %1, label %5047 [
    i32 1, label %4434
    i32 0, label %4745
  ]

4434:                                             ; preds = %4433
  %4435 = getelementptr inbounds i32, ptr %3, i64 %19
  %4436 = load i32, ptr %4435, align 4, !tbaa !6
  %4437 = icmp eq i32 %4436, 0
  %4438 = icmp sgt i32 %5, 0
  br i1 %4437, label %4448, label %4439

4439:                                             ; preds = %4434
  br i1 %4438, label %4440, label %5679

4440:                                             ; preds = %4439
  %4441 = icmp sgt i32 %13, 1
  %4442 = icmp sgt i32 %13, 0
  %4443 = add i32 %13, -2
  %4444 = zext i32 %4443 to i64
  %4445 = zext i32 %13 to i64
  %4446 = add nuw i32 %5, 1
  %4447 = icmp eq i32 %13, 1
  br label %4600

4448:                                             ; preds = %4434
  br i1 %4438, label %4449, label %5679

4449:                                             ; preds = %4448
  %4450 = icmp sgt i32 %13, 1
  %4451 = icmp sgt i32 %13, 0
  %4452 = add i32 %13, -2
  %4453 = zext i32 %4452 to i64
  %4454 = zext i32 %13 to i64
  %4455 = add nuw i32 %5, 1
  %4456 = icmp eq i32 %13, 1
  br label %4457

4457:                                             ; preds = %4449, %4598
  %4458 = phi float [ 0.000000e+00, %4449 ], [ %4548, %4598 ]
  %4459 = phi i32 [ 0, %4449 ], [ %4550, %4598 ]
  %4460 = phi double [ 0.000000e+00, %4449 ], [ %4549, %4598 ]
  %4461 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4450, label %4462, label %4531

4462:                                             ; preds = %4457, %4521
  %4463 = phi i32 [ %4530, %4521 ], [ 0, %4457 ]
  %4464 = phi i64 [ %4472, %4521 ], [ %4454, %4457 ]
  %4465 = phi i64 [ %4529, %4521 ], [ %4453, %4457 ]
  %4466 = phi i32 [ %4527, %4521 ], [ %4461, %4457 ]
  %4467 = sub i32 %4452, %4463
  %4468 = tail call i32 @llvm.smin.i32(i32 %4467, i32 0)
  %4469 = sub i32 %4467, %4468
  %4470 = zext i32 %4469 to i64
  %4471 = add nuw nsw i64 %4470, 1
  %4472 = add nsw i64 %4464, -1
  %4473 = icmp ult i32 %4469, 31
  br i1 %4473, label %4509, label %4474

4474:                                             ; preds = %4462
  %4475 = and i64 %4471, 8589934560
  %4476 = sub i64 %4465, %4475
  br label %4477

4477:                                             ; preds = %4477, %4474
  %4478 = phi i64 [ 0, %4474 ], [ %4501, %4477 ]
  %4479 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4474 ], [ %4497, %4477 ]
  %4480 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4474 ], [ %4498, %4477 ]
  %4481 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4474 ], [ %4499, %4477 ]
  %4482 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4474 ], [ %4500, %4477 ]
  %4483 = sub i64 %4465, %4478
  %4484 = getelementptr inbounds i32, ptr %9, i64 %4483
  %4485 = getelementptr inbounds i32, ptr %4484, i64 -7
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !6
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = getelementptr inbounds i32, ptr %4484, i64 -15
  %4489 = load <8 x i32>, ptr %4488, align 4, !tbaa !6
  %4490 = shufflevector <8 x i32> %4489, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4491 = getelementptr inbounds i32, ptr %4484, i64 -23
  %4492 = load <8 x i32>, ptr %4491, align 4, !tbaa !6
  %4493 = shufflevector <8 x i32> %4492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4494 = getelementptr inbounds i32, ptr %4484, i64 -31
  %4495 = load <8 x i32>, ptr %4494, align 4, !tbaa !6
  %4496 = shufflevector <8 x i32> %4495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4497 = mul <8 x i32> %4487, %4479
  %4498 = mul <8 x i32> %4490, %4480
  %4499 = mul <8 x i32> %4493, %4481
  %4500 = mul <8 x i32> %4496, %4482
  %4501 = add nuw i64 %4478, 32
  %4502 = icmp eq i64 %4501, %4475
  br i1 %4502, label %4503, label %4477, !llvm.loop !905

4503:                                             ; preds = %4477
  %4504 = mul <8 x i32> %4498, %4497
  %4505 = mul <8 x i32> %4499, %4504
  %4506 = mul <8 x i32> %4500, %4505
  %4507 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4506)
  %4508 = icmp eq i64 %4471, %4475
  br i1 %4508, label %4521, label %4509

4509:                                             ; preds = %4462, %4503
  %4510 = phi i64 [ %4465, %4462 ], [ %4476, %4503 ]
  %4511 = phi i32 [ 1, %4462 ], [ %4507, %4503 ]
  br label %4512

4512:                                             ; preds = %4509, %4512
  %4513 = phi i64 [ %4518, %4512 ], [ %4510, %4509 ]
  %4514 = phi i32 [ %4517, %4512 ], [ %4511, %4509 ]
  %4515 = getelementptr inbounds i32, ptr %9, i64 %4513
  %4516 = load i32, ptr %4515, align 4, !tbaa !6
  %4517 = mul nsw i32 %4516, %4514
  %4518 = add nsw i64 %4513, -1
  %4519 = trunc i64 %4513 to i32
  %4520 = icmp sgt i32 %4519, 0
  br i1 %4520, label %4512, label %4521, !llvm.loop !906

4521:                                             ; preds = %4512, %4503
  %4522 = phi i32 [ %4507, %4503 ], [ %4517, %4512 ]
  %4523 = and i64 %4472, 4294967295
  %4524 = getelementptr inbounds i32, ptr %6, i64 %4523
  %4525 = load i32, ptr %4524, align 4, !tbaa !6
  %4526 = mul nsw i32 %4525, %4522
  %4527 = add nsw i32 %4526, %4466
  %4528 = icmp sgt i64 %4464, 2
  %4529 = add nsw i64 %4465, -1
  %4530 = add i32 %4463, 1
  br i1 %4528, label %4462, label %4531, !llvm.loop !907

4531:                                             ; preds = %4521, %4457
  %4532 = phi i32 [ %4461, %4457 ], [ %4527, %4521 ]
  %4533 = sext i32 %4532 to i64
  %4534 = getelementptr inbounds double, ptr %2, i64 %4533
  %4535 = load double, ptr %4534, align 8, !tbaa !19
  %4536 = getelementptr inbounds i64, ptr %4421, i64 %4533
  %4537 = load i64, ptr %4536, align 8, !tbaa !121
  %4538 = sitofp i64 %4537 to float
  %4539 = fpext float %4458 to double
  %4540 = fpext float %4538 to double
  %4541 = fmul fast double %4535, %4540
  %4542 = fcmp fast olt double %4541, 0.000000e+00
  %4543 = fneg fast double %4541
  %4544 = select nnan ninf i1 %4542, double %4543, double %4541
  %4545 = fmul fast double %4541, %4541
  %4546 = fmul fast double %4545, %4544
  %4547 = fadd fast double %4546, %4539
  %4548 = fptrunc double %4547 to float
  %4549 = fadd fast double %4535, %4460
  %4550 = add nuw nsw i32 %4459, 1
  br i1 %4451, label %4551, label %4598

4551:                                             ; preds = %4531
  %4552 = load i32, ptr %4, align 4, !tbaa !6
  %4553 = load i32, ptr %12, align 4, !tbaa !6
  %4554 = add nsw i32 %4553, -1
  %4555 = icmp slt i32 %4552, %4554
  br i1 %4555, label %4575, label %4556

4556:                                             ; preds = %4551
  %4557 = icmp eq i32 %4552, %4554
  br i1 %4557, label %4558, label %4591

4558:                                             ; preds = %4556
  store i32 0, ptr %4, align 4, !tbaa !6
  %4559 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4559, ptr %6, align 4, !tbaa !6
  br i1 %4456, label %4598, label %4560

4560:                                             ; preds = %4558, %4585
  %4561 = phi i64 [ %4589, %4585 ], [ 1, %4558 ]
  %4562 = getelementptr inbounds i32, ptr %4, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !6
  %4564 = getelementptr inbounds i32, ptr %12, i64 %4561
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = add nsw i32 %4565, -1
  %4567 = icmp slt i32 %4563, %4566
  br i1 %4567, label %4568, label %4583

4568:                                             ; preds = %4560
  br i1 %4555, label %4575, label %4569

4569:                                             ; preds = %4568
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4561
  %4571 = load i32, ptr %4570, align 4, !tbaa !6
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4561
  %4573 = load i32, ptr %4572, align 4, !tbaa !6
  %4574 = add nsw i32 %4573, %4571
  store i32 %4574, ptr %4572, align 4, !tbaa !6
  br label %4593

4575:                                             ; preds = %4551, %4568
  %4576 = phi i32 [ %4563, %4568 ], [ %4552, %4551 ]
  %4577 = phi ptr [ %4562, %4568 ], [ %4, %4551 ]
  %4578 = phi i64 [ %4561, %4568 ], [ 0, %4551 ]
  %4579 = add nsw i32 %4576, 1
  store i32 %4579, ptr %4577, align 4, !tbaa !6
  %4580 = getelementptr inbounds i32, ptr %7, i64 %4578
  %4581 = load i32, ptr %4580, align 4, !tbaa !6
  %4582 = getelementptr inbounds i32, ptr %6, i64 %4578
  br label %4593

4583:                                             ; preds = %4560
  %4584 = icmp eq i32 %4563, %4566
  br i1 %4584, label %4585, label %4591

4585:                                             ; preds = %4583
  store i32 0, ptr %4562, align 4, !tbaa !6
  %4586 = getelementptr inbounds i32, ptr %8, i64 %4561
  %4587 = load i32, ptr %4586, align 4, !tbaa !6
  %4588 = getelementptr inbounds i32, ptr %6, i64 %4561
  store i32 %4587, ptr %4588, align 4, !tbaa !6
  %4589 = add nuw nsw i64 %4561, 1
  %4590 = icmp eq i64 %4589, %4454
  br i1 %4590, label %4598, label %4560, !llvm.loop !908

4591:                                             ; preds = %4556, %4583
  store float %4548, ptr %4423, align 4, !tbaa !163
  %4592 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4593:                                             ; preds = %4569, %4575
  %4594 = phi ptr [ %4582, %4575 ], [ %4562, %4569 ]
  %4595 = phi i32 [ %4581, %4575 ], [ 1, %4569 ]
  %4596 = load i32, ptr %4594, align 4, !tbaa !6
  %4597 = add nsw i32 %4596, %4595
  store i32 %4597, ptr %4594, align 4, !tbaa !6
  br label %4598

4598:                                             ; preds = %4585, %4593, %4558, %4531
  %4599 = icmp eq i32 %4550, %5
  br i1 %4599, label %5676, label %4457, !llvm.loop !909

4600:                                             ; preds = %4440, %4743
  %4601 = phi float [ 0.000000e+00, %4440 ], [ %4691, %4743 ]
  %4602 = phi i32 [ 0, %4440 ], [ %4692, %4743 ]
  %4603 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4441, label %4604, label %4673

4604:                                             ; preds = %4600, %4663
  %4605 = phi i32 [ %4672, %4663 ], [ 0, %4600 ]
  %4606 = phi i64 [ %4614, %4663 ], [ %4445, %4600 ]
  %4607 = phi i64 [ %4671, %4663 ], [ %4444, %4600 ]
  %4608 = phi i32 [ %4669, %4663 ], [ %4603, %4600 ]
  %4609 = sub i32 %4443, %4605
  %4610 = tail call i32 @llvm.smin.i32(i32 %4609, i32 0)
  %4611 = sub i32 %4609, %4610
  %4612 = zext i32 %4611 to i64
  %4613 = add nuw nsw i64 %4612, 1
  %4614 = add nsw i64 %4606, -1
  %4615 = icmp ult i32 %4611, 31
  br i1 %4615, label %4651, label %4616

4616:                                             ; preds = %4604
  %4617 = and i64 %4613, 8589934560
  %4618 = sub i64 %4607, %4617
  br label %4619

4619:                                             ; preds = %4619, %4616
  %4620 = phi i64 [ 0, %4616 ], [ %4643, %4619 ]
  %4621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4616 ], [ %4639, %4619 ]
  %4622 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4616 ], [ %4640, %4619 ]
  %4623 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4616 ], [ %4641, %4619 ]
  %4624 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4616 ], [ %4642, %4619 ]
  %4625 = sub i64 %4607, %4620
  %4626 = getelementptr inbounds i32, ptr %11, i64 %4625
  %4627 = getelementptr inbounds i32, ptr %4626, i64 -7
  %4628 = load <8 x i32>, ptr %4627, align 4, !tbaa !6
  %4629 = shufflevector <8 x i32> %4628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4630 = getelementptr inbounds i32, ptr %4626, i64 -15
  %4631 = load <8 x i32>, ptr %4630, align 4, !tbaa !6
  %4632 = shufflevector <8 x i32> %4631, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4633 = getelementptr inbounds i32, ptr %4626, i64 -23
  %4634 = load <8 x i32>, ptr %4633, align 4, !tbaa !6
  %4635 = shufflevector <8 x i32> %4634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4636 = getelementptr inbounds i32, ptr %4626, i64 -31
  %4637 = load <8 x i32>, ptr %4636, align 4, !tbaa !6
  %4638 = shufflevector <8 x i32> %4637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4639 = mul <8 x i32> %4629, %4621
  %4640 = mul <8 x i32> %4632, %4622
  %4641 = mul <8 x i32> %4635, %4623
  %4642 = mul <8 x i32> %4638, %4624
  %4643 = add nuw i64 %4620, 32
  %4644 = icmp eq i64 %4643, %4617
  br i1 %4644, label %4645, label %4619, !llvm.loop !910

4645:                                             ; preds = %4619
  %4646 = mul <8 x i32> %4640, %4639
  %4647 = mul <8 x i32> %4641, %4646
  %4648 = mul <8 x i32> %4642, %4647
  %4649 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4648)
  %4650 = icmp eq i64 %4613, %4617
  br i1 %4650, label %4663, label %4651

4651:                                             ; preds = %4604, %4645
  %4652 = phi i64 [ %4607, %4604 ], [ %4618, %4645 ]
  %4653 = phi i32 [ 1, %4604 ], [ %4649, %4645 ]
  br label %4654

4654:                                             ; preds = %4651, %4654
  %4655 = phi i64 [ %4660, %4654 ], [ %4652, %4651 ]
  %4656 = phi i32 [ %4659, %4654 ], [ %4653, %4651 ]
  %4657 = getelementptr inbounds i32, ptr %11, i64 %4655
  %4658 = load i32, ptr %4657, align 4, !tbaa !6
  %4659 = mul nsw i32 %4658, %4656
  %4660 = add nsw i64 %4655, -1
  %4661 = trunc i64 %4655 to i32
  %4662 = icmp sgt i32 %4661, 0
  br i1 %4662, label %4654, label %4663, !llvm.loop !911

4663:                                             ; preds = %4654, %4645
  %4664 = phi i32 [ %4649, %4645 ], [ %4659, %4654 ]
  %4665 = and i64 %4614, 4294967295
  %4666 = getelementptr inbounds i32, ptr %6, i64 %4665
  %4667 = load i32, ptr %4666, align 4, !tbaa !6
  %4668 = mul nsw i32 %4667, %4664
  %4669 = add nsw i32 %4668, %4608
  %4670 = icmp sgt i64 %4606, 2
  %4671 = add nsw i64 %4607, -1
  %4672 = add i32 %4605, 1
  br i1 %4670, label %4604, label %4673, !llvm.loop !912

4673:                                             ; preds = %4663, %4600
  %4674 = phi i32 [ %4603, %4600 ], [ %4669, %4663 ]
  %4675 = icmp slt i32 %4674, %5
  br i1 %4675, label %4678, label %4676

4676:                                             ; preds = %4673
  %4677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

4678:                                             ; preds = %4673
  %4679 = sext i32 %4674 to i64
  %4680 = getelementptr inbounds i64, ptr %4421, i64 %4679
  %4681 = load i64, ptr %4680, align 8, !tbaa !121
  %4682 = sitofp i64 %4681 to float
  %4683 = fpext float %4601 to double
  %4684 = fpext float %4682 to double
  %4685 = icmp slt i64 %4681, 0
  %4686 = fneg fast double %4684
  %4687 = select i1 %4685, double %4686, double %4684
  %4688 = fmul fast double %4684, %4684
  %4689 = fmul fast double %4688, %4687
  %4690 = fadd fast double %4689, %4683
  %4691 = fptrunc double %4690 to float
  store float %4691, ptr %4423, align 4, !tbaa !163
  %4692 = add nuw nsw i32 %4602, 1
  br i1 %4442, label %4693, label %4743

4693:                                             ; preds = %4678
  %4694 = load i32, ptr %4, align 4, !tbaa !6
  %4695 = load i32, ptr %12, align 4, !tbaa !6
  %4696 = add nsw i32 %4695, -1
  %4697 = icmp slt i32 %4694, %4696
  br i1 %4697, label %4720, label %4698

4698:                                             ; preds = %4693
  %4699 = icmp eq i32 %4694, %4696
  br i1 %4699, label %4700, label %4736

4700:                                             ; preds = %4698
  store i32 0, ptr %4, align 4, !tbaa !6
  %4701 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4701, ptr %6, align 4, !tbaa !6
  br i1 %4447, label %4743, label %4702

4702:                                             ; preds = %4700, %4730
  %4703 = phi i64 [ %4734, %4730 ], [ 1, %4700 ]
  %4704 = getelementptr inbounds i32, ptr %4, i64 %4703
  %4705 = load i32, ptr %4704, align 4, !tbaa !6
  %4706 = getelementptr inbounds i32, ptr %12, i64 %4703
  %4707 = load i32, ptr %4706, align 4, !tbaa !6
  %4708 = add nsw i32 %4707, -1
  %4709 = icmp slt i32 %4705, %4708
  br i1 %4709, label %4710, label %4728

4710:                                             ; preds = %4702
  br i1 %4697, label %4720, label %4711

4711:                                             ; preds = %4710
  %4712 = shl i64 %4703, 32
  %4713 = add i64 %4712, -4294967296
  %4714 = ashr exact i64 %4713, 32
  %4715 = getelementptr inbounds i32, ptr %7, i64 %4714
  %4716 = load i32, ptr %4715, align 4, !tbaa !6
  %4717 = getelementptr inbounds i32, ptr %6, i64 %4703
  %4718 = load i32, ptr %4717, align 4, !tbaa !6
  %4719 = add nsw i32 %4718, %4716
  store i32 %4719, ptr %4717, align 4, !tbaa !6
  br label %4738

4720:                                             ; preds = %4693, %4710
  %4721 = phi i32 [ %4705, %4710 ], [ %4694, %4693 ]
  %4722 = phi ptr [ %4704, %4710 ], [ %4, %4693 ]
  %4723 = phi i64 [ %4703, %4710 ], [ 0, %4693 ]
  %4724 = add nsw i32 %4721, 1
  store i32 %4724, ptr %4722, align 4, !tbaa !6
  %4725 = getelementptr inbounds i32, ptr %7, i64 %4723
  %4726 = load i32, ptr %4725, align 4, !tbaa !6
  %4727 = getelementptr inbounds i32, ptr %6, i64 %4723
  br label %4738

4728:                                             ; preds = %4702
  %4729 = icmp eq i32 %4705, %4708
  br i1 %4729, label %4730, label %4736

4730:                                             ; preds = %4728
  store i32 0, ptr %4704, align 4, !tbaa !6
  %4731 = getelementptr inbounds i32, ptr %8, i64 %4703
  %4732 = load i32, ptr %4731, align 4, !tbaa !6
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4703
  store i32 %4732, ptr %4733, align 4, !tbaa !6
  %4734 = add nuw nsw i64 %4703, 1
  %4735 = icmp eq i64 %4734, %4445
  br i1 %4735, label %4743, label %4702, !llvm.loop !913

4736:                                             ; preds = %4698, %4728
  %4737 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4738:                                             ; preds = %4711, %4720
  %4739 = phi ptr [ %4727, %4720 ], [ %4704, %4711 ]
  %4740 = phi i32 [ %4726, %4720 ], [ 1, %4711 ]
  %4741 = load i32, ptr %4739, align 4, !tbaa !6
  %4742 = add nsw i32 %4741, %4740
  store i32 %4742, ptr %4739, align 4, !tbaa !6
  br label %4743

4743:                                             ; preds = %4730, %4738, %4700, %4678
  %4744 = icmp eq i32 %4692, %5
  br i1 %4744, label %5679, label %4600, !llvm.loop !914

4745:                                             ; preds = %4433
  %4746 = getelementptr inbounds i32, ptr %3, i64 %19
  %4747 = load i32, ptr %4746, align 4, !tbaa !6
  %4748 = icmp eq i32 %4747, 0
  %4749 = icmp sgt i32 %5, 0
  br i1 %4748, label %4759, label %4750

4750:                                             ; preds = %4745
  br i1 %4749, label %4751, label %5679

4751:                                             ; preds = %4750
  %4752 = icmp sgt i32 %13, 1
  %4753 = icmp sgt i32 %13, 0
  %4754 = add i32 %13, -2
  %4755 = zext i32 %4754 to i64
  %4756 = zext i32 %13 to i64
  %4757 = add nuw i32 %5, 1
  %4758 = icmp eq i32 %13, 1
  br label %4905

4759:                                             ; preds = %4745
  br i1 %4749, label %4760, label %5679

4760:                                             ; preds = %4759
  %4761 = icmp sgt i32 %13, 1
  %4762 = icmp sgt i32 %13, 0
  %4763 = add i32 %13, -2
  %4764 = zext i32 %4763 to i64
  %4765 = zext i32 %13 to i64
  %4766 = add nuw i32 %5, 1
  %4767 = icmp eq i32 %13, 1
  br label %4768

4768:                                             ; preds = %4760, %4903
  %4769 = phi float [ 0.000000e+00, %4760 ], [ %4853, %4903 ]
  %4770 = phi i32 [ 0, %4760 ], [ %4855, %4903 ]
  %4771 = phi double [ 0.000000e+00, %4760 ], [ %4854, %4903 ]
  %4772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4761, label %4773, label %4842

4773:                                             ; preds = %4768, %4832
  %4774 = phi i32 [ %4841, %4832 ], [ 0, %4768 ]
  %4775 = phi i64 [ %4783, %4832 ], [ %4765, %4768 ]
  %4776 = phi i64 [ %4840, %4832 ], [ %4764, %4768 ]
  %4777 = phi i32 [ %4838, %4832 ], [ %4772, %4768 ]
  %4778 = sub i32 %4763, %4774
  %4779 = tail call i32 @llvm.smin.i32(i32 %4778, i32 0)
  %4780 = sub i32 %4778, %4779
  %4781 = zext i32 %4780 to i64
  %4782 = add nuw nsw i64 %4781, 1
  %4783 = add nsw i64 %4775, -1
  %4784 = icmp ult i32 %4780, 31
  br i1 %4784, label %4820, label %4785

4785:                                             ; preds = %4773
  %4786 = and i64 %4782, 8589934560
  %4787 = sub i64 %4776, %4786
  br label %4788

4788:                                             ; preds = %4788, %4785
  %4789 = phi i64 [ 0, %4785 ], [ %4812, %4788 ]
  %4790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4785 ], [ %4808, %4788 ]
  %4791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4785 ], [ %4809, %4788 ]
  %4792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4785 ], [ %4810, %4788 ]
  %4793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4785 ], [ %4811, %4788 ]
  %4794 = sub i64 %4776, %4789
  %4795 = getelementptr inbounds i32, ptr %9, i64 %4794
  %4796 = getelementptr inbounds i32, ptr %4795, i64 -7
  %4797 = load <8 x i32>, ptr %4796, align 4, !tbaa !6
  %4798 = shufflevector <8 x i32> %4797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4799 = getelementptr inbounds i32, ptr %4795, i64 -15
  %4800 = load <8 x i32>, ptr %4799, align 4, !tbaa !6
  %4801 = shufflevector <8 x i32> %4800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4802 = getelementptr inbounds i32, ptr %4795, i64 -23
  %4803 = load <8 x i32>, ptr %4802, align 4, !tbaa !6
  %4804 = shufflevector <8 x i32> %4803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4805 = getelementptr inbounds i32, ptr %4795, i64 -31
  %4806 = load <8 x i32>, ptr %4805, align 4, !tbaa !6
  %4807 = shufflevector <8 x i32> %4806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4808 = mul <8 x i32> %4798, %4790
  %4809 = mul <8 x i32> %4801, %4791
  %4810 = mul <8 x i32> %4804, %4792
  %4811 = mul <8 x i32> %4807, %4793
  %4812 = add nuw i64 %4789, 32
  %4813 = icmp eq i64 %4812, %4786
  br i1 %4813, label %4814, label %4788, !llvm.loop !915

4814:                                             ; preds = %4788
  %4815 = mul <8 x i32> %4809, %4808
  %4816 = mul <8 x i32> %4810, %4815
  %4817 = mul <8 x i32> %4811, %4816
  %4818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4817)
  %4819 = icmp eq i64 %4782, %4786
  br i1 %4819, label %4832, label %4820

4820:                                             ; preds = %4773, %4814
  %4821 = phi i64 [ %4776, %4773 ], [ %4787, %4814 ]
  %4822 = phi i32 [ 1, %4773 ], [ %4818, %4814 ]
  br label %4823

4823:                                             ; preds = %4820, %4823
  %4824 = phi i64 [ %4829, %4823 ], [ %4821, %4820 ]
  %4825 = phi i32 [ %4828, %4823 ], [ %4822, %4820 ]
  %4826 = getelementptr inbounds i32, ptr %9, i64 %4824
  %4827 = load i32, ptr %4826, align 4, !tbaa !6
  %4828 = mul nsw i32 %4827, %4825
  %4829 = add nsw i64 %4824, -1
  %4830 = trunc i64 %4824 to i32
  %4831 = icmp sgt i32 %4830, 0
  br i1 %4831, label %4823, label %4832, !llvm.loop !916

4832:                                             ; preds = %4823, %4814
  %4833 = phi i32 [ %4818, %4814 ], [ %4828, %4823 ]
  %4834 = and i64 %4783, 4294967295
  %4835 = getelementptr inbounds i32, ptr %6, i64 %4834
  %4836 = load i32, ptr %4835, align 4, !tbaa !6
  %4837 = mul nsw i32 %4836, %4833
  %4838 = add nsw i32 %4837, %4777
  %4839 = icmp sgt i64 %4775, 2
  %4840 = add nsw i64 %4776, -1
  %4841 = add i32 %4774, 1
  br i1 %4839, label %4773, label %4842, !llvm.loop !917

4842:                                             ; preds = %4832, %4768
  %4843 = phi i32 [ %4772, %4768 ], [ %4838, %4832 ]
  %4844 = sext i32 %4843 to i64
  %4845 = getelementptr inbounds i64, ptr %4421, i64 %4844
  %4846 = load i64, ptr %4845, align 8, !tbaa !121
  %4847 = sitofp i64 %4846 to float
  %4848 = icmp slt i64 %4846, 0
  %4849 = fneg fast float %4847
  %4850 = select i1 %4848, float %4849, float %4847
  %4851 = fmul fast float %4847, %4847
  %4852 = fmul fast float %4851, %4850
  %4853 = fadd fast float %4852, %4769
  %4854 = fadd fast double %4771, 1.000000e+00
  %4855 = add nuw nsw i32 %4770, 1
  br i1 %4762, label %4856, label %4903

4856:                                             ; preds = %4842
  %4857 = load i32, ptr %4, align 4, !tbaa !6
  %4858 = load i32, ptr %12, align 4, !tbaa !6
  %4859 = add nsw i32 %4858, -1
  %4860 = icmp slt i32 %4857, %4859
  br i1 %4860, label %4880, label %4861

4861:                                             ; preds = %4856
  %4862 = icmp eq i32 %4857, %4859
  br i1 %4862, label %4863, label %4896

4863:                                             ; preds = %4861
  store i32 0, ptr %4, align 4, !tbaa !6
  %4864 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4864, ptr %6, align 4, !tbaa !6
  br i1 %4767, label %4903, label %4865

4865:                                             ; preds = %4863, %4890
  %4866 = phi i64 [ %4894, %4890 ], [ 1, %4863 ]
  %4867 = getelementptr inbounds i32, ptr %4, i64 %4866
  %4868 = load i32, ptr %4867, align 4, !tbaa !6
  %4869 = getelementptr inbounds i32, ptr %12, i64 %4866
  %4870 = load i32, ptr %4869, align 4, !tbaa !6
  %4871 = add nsw i32 %4870, -1
  %4872 = icmp slt i32 %4868, %4871
  br i1 %4872, label %4873, label %4888

4873:                                             ; preds = %4865
  br i1 %4860, label %4880, label %4874

4874:                                             ; preds = %4873
  %4875 = getelementptr inbounds i32, ptr %7, i64 %4866
  %4876 = load i32, ptr %4875, align 4, !tbaa !6
  %4877 = getelementptr inbounds i32, ptr %6, i64 %4866
  %4878 = load i32, ptr %4877, align 4, !tbaa !6
  %4879 = add nsw i32 %4878, %4876
  store i32 %4879, ptr %4877, align 4, !tbaa !6
  br label %4898

4880:                                             ; preds = %4856, %4873
  %4881 = phi i32 [ %4868, %4873 ], [ %4857, %4856 ]
  %4882 = phi ptr [ %4867, %4873 ], [ %4, %4856 ]
  %4883 = phi i64 [ %4866, %4873 ], [ 0, %4856 ]
  %4884 = add nsw i32 %4881, 1
  store i32 %4884, ptr %4882, align 4, !tbaa !6
  %4885 = getelementptr inbounds i32, ptr %7, i64 %4883
  %4886 = load i32, ptr %4885, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %6, i64 %4883
  br label %4898

4888:                                             ; preds = %4865
  %4889 = icmp eq i32 %4868, %4871
  br i1 %4889, label %4890, label %4896

4890:                                             ; preds = %4888
  store i32 0, ptr %4867, align 4, !tbaa !6
  %4891 = getelementptr inbounds i32, ptr %8, i64 %4866
  %4892 = load i32, ptr %4891, align 4, !tbaa !6
  %4893 = getelementptr inbounds i32, ptr %6, i64 %4866
  store i32 %4892, ptr %4893, align 4, !tbaa !6
  %4894 = add nuw nsw i64 %4866, 1
  %4895 = icmp eq i64 %4894, %4765
  br i1 %4895, label %4903, label %4865, !llvm.loop !918

4896:                                             ; preds = %4861, %4888
  store float %4853, ptr %4423, align 4, !tbaa !163
  %4897 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

4898:                                             ; preds = %4874, %4880
  %4899 = phi ptr [ %4887, %4880 ], [ %4867, %4874 ]
  %4900 = phi i32 [ %4886, %4880 ], [ 1, %4874 ]
  %4901 = load i32, ptr %4899, align 4, !tbaa !6
  %4902 = add nsw i32 %4901, %4900
  store i32 %4902, ptr %4899, align 4, !tbaa !6
  br label %4903

4903:                                             ; preds = %4890, %4898, %4863, %4842
  %4904 = icmp eq i32 %4855, %5
  br i1 %4904, label %5677, label %4768, !llvm.loop !919

4905:                                             ; preds = %4751, %5045
  %4906 = phi float [ 0.000000e+00, %4751 ], [ %4993, %5045 ]
  %4907 = phi i32 [ 0, %4751 ], [ %4994, %5045 ]
  %4908 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4752, label %4909, label %4978

4909:                                             ; preds = %4905, %4968
  %4910 = phi i32 [ %4977, %4968 ], [ 0, %4905 ]
  %4911 = phi i64 [ %4919, %4968 ], [ %4756, %4905 ]
  %4912 = phi i64 [ %4976, %4968 ], [ %4755, %4905 ]
  %4913 = phi i32 [ %4974, %4968 ], [ %4908, %4905 ]
  %4914 = sub i32 %4754, %4910
  %4915 = tail call i32 @llvm.smin.i32(i32 %4914, i32 0)
  %4916 = sub i32 %4914, %4915
  %4917 = zext i32 %4916 to i64
  %4918 = add nuw nsw i64 %4917, 1
  %4919 = add nsw i64 %4911, -1
  %4920 = icmp ult i32 %4916, 31
  br i1 %4920, label %4956, label %4921

4921:                                             ; preds = %4909
  %4922 = and i64 %4918, 8589934560
  %4923 = sub i64 %4912, %4922
  br label %4924

4924:                                             ; preds = %4924, %4921
  %4925 = phi i64 [ 0, %4921 ], [ %4948, %4924 ]
  %4926 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4921 ], [ %4944, %4924 ]
  %4927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4921 ], [ %4945, %4924 ]
  %4928 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4921 ], [ %4946, %4924 ]
  %4929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4921 ], [ %4947, %4924 ]
  %4930 = sub i64 %4912, %4925
  %4931 = getelementptr inbounds i32, ptr %11, i64 %4930
  %4932 = getelementptr inbounds i32, ptr %4931, i64 -7
  %4933 = load <8 x i32>, ptr %4932, align 4, !tbaa !6
  %4934 = shufflevector <8 x i32> %4933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4935 = getelementptr inbounds i32, ptr %4931, i64 -15
  %4936 = load <8 x i32>, ptr %4935, align 4, !tbaa !6
  %4937 = shufflevector <8 x i32> %4936, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4938 = getelementptr inbounds i32, ptr %4931, i64 -23
  %4939 = load <8 x i32>, ptr %4938, align 4, !tbaa !6
  %4940 = shufflevector <8 x i32> %4939, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4941 = getelementptr inbounds i32, ptr %4931, i64 -31
  %4942 = load <8 x i32>, ptr %4941, align 4, !tbaa !6
  %4943 = shufflevector <8 x i32> %4942, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4944 = mul <8 x i32> %4934, %4926
  %4945 = mul <8 x i32> %4937, %4927
  %4946 = mul <8 x i32> %4940, %4928
  %4947 = mul <8 x i32> %4943, %4929
  %4948 = add nuw i64 %4925, 32
  %4949 = icmp eq i64 %4948, %4922
  br i1 %4949, label %4950, label %4924, !llvm.loop !920

4950:                                             ; preds = %4924
  %4951 = mul <8 x i32> %4945, %4944
  %4952 = mul <8 x i32> %4946, %4951
  %4953 = mul <8 x i32> %4947, %4952
  %4954 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4953)
  %4955 = icmp eq i64 %4918, %4922
  br i1 %4955, label %4968, label %4956

4956:                                             ; preds = %4909, %4950
  %4957 = phi i64 [ %4912, %4909 ], [ %4923, %4950 ]
  %4958 = phi i32 [ 1, %4909 ], [ %4954, %4950 ]
  br label %4959

4959:                                             ; preds = %4956, %4959
  %4960 = phi i64 [ %4965, %4959 ], [ %4957, %4956 ]
  %4961 = phi i32 [ %4964, %4959 ], [ %4958, %4956 ]
  %4962 = getelementptr inbounds i32, ptr %11, i64 %4960
  %4963 = load i32, ptr %4962, align 4, !tbaa !6
  %4964 = mul nsw i32 %4963, %4961
  %4965 = add nsw i64 %4960, -1
  %4966 = trunc i64 %4960 to i32
  %4967 = icmp sgt i32 %4966, 0
  br i1 %4967, label %4959, label %4968, !llvm.loop !921

4968:                                             ; preds = %4959, %4950
  %4969 = phi i32 [ %4954, %4950 ], [ %4964, %4959 ]
  %4970 = and i64 %4919, 4294967295
  %4971 = getelementptr inbounds i32, ptr %6, i64 %4970
  %4972 = load i32, ptr %4971, align 4, !tbaa !6
  %4973 = mul nsw i32 %4972, %4969
  %4974 = add nsw i32 %4973, %4913
  %4975 = icmp sgt i64 %4911, 2
  %4976 = add nsw i64 %4912, -1
  %4977 = add i32 %4910, 1
  br i1 %4975, label %4909, label %4978, !llvm.loop !922

4978:                                             ; preds = %4968, %4905
  %4979 = phi i32 [ %4908, %4905 ], [ %4974, %4968 ]
  %4980 = icmp slt i32 %4979, %5
  br i1 %4980, label %4983, label %4981

4981:                                             ; preds = %4978
  %4982 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

4983:                                             ; preds = %4978
  %4984 = sext i32 %4979 to i64
  %4985 = getelementptr inbounds i64, ptr %4421, i64 %4984
  %4986 = load i64, ptr %4985, align 8, !tbaa !121
  %4987 = sitofp i64 %4986 to float
  %4988 = icmp slt i64 %4986, 0
  %4989 = fneg fast float %4987
  %4990 = select i1 %4988, float %4989, float %4987
  %4991 = fmul fast float %4987, %4987
  %4992 = fmul fast float %4991, %4990
  %4993 = fadd fast float %4992, %4906
  store float %4993, ptr %4423, align 4, !tbaa !163
  %4994 = add nuw nsw i32 %4907, 1
  br i1 %4753, label %4995, label %5045

4995:                                             ; preds = %4983
  %4996 = load i32, ptr %4, align 4, !tbaa !6
  %4997 = load i32, ptr %12, align 4, !tbaa !6
  %4998 = add nsw i32 %4997, -1
  %4999 = icmp slt i32 %4996, %4998
  br i1 %4999, label %5022, label %5000

5000:                                             ; preds = %4995
  %5001 = icmp eq i32 %4996, %4998
  br i1 %5001, label %5002, label %5038

5002:                                             ; preds = %5000
  store i32 0, ptr %4, align 4, !tbaa !6
  %5003 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5003, ptr %6, align 4, !tbaa !6
  br i1 %4758, label %5045, label %5004

5004:                                             ; preds = %5002, %5032
  %5005 = phi i64 [ %5036, %5032 ], [ 1, %5002 ]
  %5006 = getelementptr inbounds i32, ptr %4, i64 %5005
  %5007 = load i32, ptr %5006, align 4, !tbaa !6
  %5008 = getelementptr inbounds i32, ptr %12, i64 %5005
  %5009 = load i32, ptr %5008, align 4, !tbaa !6
  %5010 = add nsw i32 %5009, -1
  %5011 = icmp slt i32 %5007, %5010
  br i1 %5011, label %5012, label %5030

5012:                                             ; preds = %5004
  br i1 %4999, label %5022, label %5013

5013:                                             ; preds = %5012
  %5014 = shl i64 %5005, 32
  %5015 = add i64 %5014, -4294967296
  %5016 = ashr exact i64 %5015, 32
  %5017 = getelementptr inbounds i32, ptr %7, i64 %5016
  %5018 = load i32, ptr %5017, align 4, !tbaa !6
  %5019 = getelementptr inbounds i32, ptr %6, i64 %5005
  %5020 = load i32, ptr %5019, align 4, !tbaa !6
  %5021 = add nsw i32 %5020, %5018
  store i32 %5021, ptr %5019, align 4, !tbaa !6
  br label %5040

5022:                                             ; preds = %4995, %5012
  %5023 = phi i32 [ %5007, %5012 ], [ %4996, %4995 ]
  %5024 = phi ptr [ %5006, %5012 ], [ %4, %4995 ]
  %5025 = phi i64 [ %5005, %5012 ], [ 0, %4995 ]
  %5026 = add nsw i32 %5023, 1
  store i32 %5026, ptr %5024, align 4, !tbaa !6
  %5027 = getelementptr inbounds i32, ptr %7, i64 %5025
  %5028 = load i32, ptr %5027, align 4, !tbaa !6
  %5029 = getelementptr inbounds i32, ptr %6, i64 %5025
  br label %5040

5030:                                             ; preds = %5004
  %5031 = icmp eq i32 %5007, %5010
  br i1 %5031, label %5032, label %5038

5032:                                             ; preds = %5030
  store i32 0, ptr %5006, align 4, !tbaa !6
  %5033 = getelementptr inbounds i32, ptr %8, i64 %5005
  %5034 = load i32, ptr %5033, align 4, !tbaa !6
  %5035 = getelementptr inbounds i32, ptr %6, i64 %5005
  store i32 %5034, ptr %5035, align 4, !tbaa !6
  %5036 = add nuw nsw i64 %5005, 1
  %5037 = icmp eq i64 %5036, %4756
  br i1 %5037, label %5045, label %5004, !llvm.loop !923

5038:                                             ; preds = %5000, %5030
  %5039 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

5040:                                             ; preds = %5013, %5022
  %5041 = phi ptr [ %5029, %5022 ], [ %5006, %5013 ]
  %5042 = phi i32 [ %5028, %5022 ], [ 1, %5013 ]
  %5043 = load i32, ptr %5041, align 4, !tbaa !6
  %5044 = add nsw i32 %5043, %5042
  store i32 %5044, ptr %5041, align 4, !tbaa !6
  br label %5045

5045:                                             ; preds = %5032, %5040, %5002, %4983
  %5046 = icmp eq i32 %4994, %5
  br i1 %5046, label %5679, label %4905, !llvm.loop !924

5047:                                             ; preds = %4433
  %5048 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

5049:                                             ; preds = %18
  %5050 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5051 = load ptr, ptr %5050, align 8, !tbaa !10
  %5052 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5053 = load ptr, ptr %5052, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5053, align 8, !tbaa !19
  %5054 = icmp eq i32 %13, 0
  br i1 %5054, label %5055, label %5063

5055:                                             ; preds = %5049
  %5056 = load i64, ptr %5051, align 8, !tbaa !121
  %5057 = sitofp i64 %5056 to double
  %5058 = icmp slt i64 %5056, 0
  %5059 = fneg fast double %5057
  %5060 = select i1 %5058, double %5059, double %5057
  %5061 = fmul fast double %5057, %5057
  %5062 = fmul fast double %5061, %5060
  store double %5062, ptr %5053, align 8, !tbaa !19
  br label %5679

5063:                                             ; preds = %5049
  switch i32 %1, label %5671 [
    i32 1, label %5064
    i32 0, label %5369
  ]

5064:                                             ; preds = %5063
  %5065 = getelementptr inbounds i32, ptr %3, i64 %19
  %5066 = load i32, ptr %5065, align 4, !tbaa !6
  %5067 = icmp eq i32 %5066, 0
  %5068 = icmp sgt i32 %5, 0
  br i1 %5067, label %5078, label %5069

5069:                                             ; preds = %5064
  br i1 %5068, label %5070, label %5679

5070:                                             ; preds = %5069
  %5071 = icmp sgt i32 %13, 1
  %5072 = icmp sgt i32 %13, 0
  %5073 = add i32 %13, -2
  %5074 = zext i32 %5073 to i64
  %5075 = zext i32 %13 to i64
  %5076 = add nuw i32 %5, 1
  %5077 = icmp eq i32 %13, 1
  br label %5227

5078:                                             ; preds = %5064
  br i1 %5068, label %5079, label %5679

5079:                                             ; preds = %5078
  %5080 = icmp sgt i32 %13, 1
  %5081 = icmp sgt i32 %13, 0
  %5082 = add i32 %13, -2
  %5083 = zext i32 %5082 to i64
  %5084 = zext i32 %13 to i64
  %5085 = add nuw i32 %5, 1
  %5086 = icmp eq i32 %13, 1
  br label %5087

5087:                                             ; preds = %5079, %5225
  %5088 = phi double [ 0.000000e+00, %5079 ], [ %5175, %5225 ]
  %5089 = phi i32 [ 0, %5079 ], [ %5177, %5225 ]
  %5090 = phi double [ 0.000000e+00, %5079 ], [ %5176, %5225 ]
  %5091 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5080, label %5092, label %5161

5092:                                             ; preds = %5087, %5151
  %5093 = phi i32 [ %5160, %5151 ], [ 0, %5087 ]
  %5094 = phi i64 [ %5102, %5151 ], [ %5084, %5087 ]
  %5095 = phi i64 [ %5159, %5151 ], [ %5083, %5087 ]
  %5096 = phi i32 [ %5157, %5151 ], [ %5091, %5087 ]
  %5097 = sub i32 %5082, %5093
  %5098 = tail call i32 @llvm.smin.i32(i32 %5097, i32 0)
  %5099 = sub i32 %5097, %5098
  %5100 = zext i32 %5099 to i64
  %5101 = add nuw nsw i64 %5100, 1
  %5102 = add nsw i64 %5094, -1
  %5103 = icmp ult i32 %5099, 31
  br i1 %5103, label %5139, label %5104

5104:                                             ; preds = %5092
  %5105 = and i64 %5101, 8589934560
  %5106 = sub i64 %5095, %5105
  br label %5107

5107:                                             ; preds = %5107, %5104
  %5108 = phi i64 [ 0, %5104 ], [ %5131, %5107 ]
  %5109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5104 ], [ %5127, %5107 ]
  %5110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5104 ], [ %5128, %5107 ]
  %5111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5104 ], [ %5129, %5107 ]
  %5112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5104 ], [ %5130, %5107 ]
  %5113 = sub i64 %5095, %5108
  %5114 = getelementptr inbounds i32, ptr %9, i64 %5113
  %5115 = getelementptr inbounds i32, ptr %5114, i64 -7
  %5116 = load <8 x i32>, ptr %5115, align 4, !tbaa !6
  %5117 = shufflevector <8 x i32> %5116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5118 = getelementptr inbounds i32, ptr %5114, i64 -15
  %5119 = load <8 x i32>, ptr %5118, align 4, !tbaa !6
  %5120 = shufflevector <8 x i32> %5119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5121 = getelementptr inbounds i32, ptr %5114, i64 -23
  %5122 = load <8 x i32>, ptr %5121, align 4, !tbaa !6
  %5123 = shufflevector <8 x i32> %5122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5124 = getelementptr inbounds i32, ptr %5114, i64 -31
  %5125 = load <8 x i32>, ptr %5124, align 4, !tbaa !6
  %5126 = shufflevector <8 x i32> %5125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5127 = mul <8 x i32> %5117, %5109
  %5128 = mul <8 x i32> %5120, %5110
  %5129 = mul <8 x i32> %5123, %5111
  %5130 = mul <8 x i32> %5126, %5112
  %5131 = add nuw i64 %5108, 32
  %5132 = icmp eq i64 %5131, %5105
  br i1 %5132, label %5133, label %5107, !llvm.loop !925

5133:                                             ; preds = %5107
  %5134 = mul <8 x i32> %5128, %5127
  %5135 = mul <8 x i32> %5129, %5134
  %5136 = mul <8 x i32> %5130, %5135
  %5137 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5136)
  %5138 = icmp eq i64 %5101, %5105
  br i1 %5138, label %5151, label %5139

5139:                                             ; preds = %5092, %5133
  %5140 = phi i64 [ %5095, %5092 ], [ %5106, %5133 ]
  %5141 = phi i32 [ 1, %5092 ], [ %5137, %5133 ]
  br label %5142

5142:                                             ; preds = %5139, %5142
  %5143 = phi i64 [ %5148, %5142 ], [ %5140, %5139 ]
  %5144 = phi i32 [ %5147, %5142 ], [ %5141, %5139 ]
  %5145 = getelementptr inbounds i32, ptr %9, i64 %5143
  %5146 = load i32, ptr %5145, align 4, !tbaa !6
  %5147 = mul nsw i32 %5146, %5144
  %5148 = add nsw i64 %5143, -1
  %5149 = trunc i64 %5143 to i32
  %5150 = icmp sgt i32 %5149, 0
  br i1 %5150, label %5142, label %5151, !llvm.loop !926

5151:                                             ; preds = %5142, %5133
  %5152 = phi i32 [ %5137, %5133 ], [ %5147, %5142 ]
  %5153 = and i64 %5102, 4294967295
  %5154 = getelementptr inbounds i32, ptr %6, i64 %5153
  %5155 = load i32, ptr %5154, align 4, !tbaa !6
  %5156 = mul nsw i32 %5155, %5152
  %5157 = add nsw i32 %5156, %5096
  %5158 = icmp sgt i64 %5094, 2
  %5159 = add nsw i64 %5095, -1
  %5160 = add i32 %5093, 1
  br i1 %5158, label %5092, label %5161, !llvm.loop !927

5161:                                             ; preds = %5151, %5087
  %5162 = phi i32 [ %5091, %5087 ], [ %5157, %5151 ]
  %5163 = sext i32 %5162 to i64
  %5164 = getelementptr inbounds double, ptr %2, i64 %5163
  %5165 = load double, ptr %5164, align 8, !tbaa !19
  %5166 = getelementptr inbounds i64, ptr %5051, i64 %5163
  %5167 = load i64, ptr %5166, align 8, !tbaa !121
  %5168 = sitofp i64 %5167 to double
  %5169 = fmul fast double %5165, %5168
  %5170 = fcmp fast olt double %5169, 0.000000e+00
  %5171 = fneg fast double %5169
  %5172 = select nnan ninf i1 %5170, double %5171, double %5169
  %5173 = fmul fast double %5169, %5169
  %5174 = fmul fast double %5173, %5172
  %5175 = fadd fast double %5174, %5088
  store double %5175, ptr %5053, align 8, !tbaa !19
  %5176 = fadd fast double %5165, %5090
  %5177 = add nuw nsw i32 %5089, 1
  br i1 %5081, label %5178, label %5225

5178:                                             ; preds = %5161
  %5179 = load i32, ptr %4, align 4, !tbaa !6
  %5180 = load i32, ptr %12, align 4, !tbaa !6
  %5181 = add nsw i32 %5180, -1
  %5182 = icmp slt i32 %5179, %5181
  br i1 %5182, label %5202, label %5183

5183:                                             ; preds = %5178
  %5184 = icmp eq i32 %5179, %5181
  br i1 %5184, label %5185, label %5218

5185:                                             ; preds = %5183
  store i32 0, ptr %4, align 4, !tbaa !6
  %5186 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5186, ptr %6, align 4, !tbaa !6
  br i1 %5086, label %5225, label %5187

5187:                                             ; preds = %5185, %5212
  %5188 = phi i64 [ %5216, %5212 ], [ 1, %5185 ]
  %5189 = getelementptr inbounds i32, ptr %4, i64 %5188
  %5190 = load i32, ptr %5189, align 4, !tbaa !6
  %5191 = getelementptr inbounds i32, ptr %12, i64 %5188
  %5192 = load i32, ptr %5191, align 4, !tbaa !6
  %5193 = add nsw i32 %5192, -1
  %5194 = icmp slt i32 %5190, %5193
  br i1 %5194, label %5195, label %5210

5195:                                             ; preds = %5187
  br i1 %5182, label %5202, label %5196

5196:                                             ; preds = %5195
  %5197 = getelementptr inbounds i32, ptr %7, i64 %5188
  %5198 = load i32, ptr %5197, align 4, !tbaa !6
  %5199 = getelementptr inbounds i32, ptr %6, i64 %5188
  %5200 = load i32, ptr %5199, align 4, !tbaa !6
  %5201 = add nsw i32 %5200, %5198
  store i32 %5201, ptr %5199, align 4, !tbaa !6
  br label %5220

5202:                                             ; preds = %5178, %5195
  %5203 = phi i32 [ %5190, %5195 ], [ %5179, %5178 ]
  %5204 = phi ptr [ %5189, %5195 ], [ %4, %5178 ]
  %5205 = phi i64 [ %5188, %5195 ], [ 0, %5178 ]
  %5206 = add nsw i32 %5203, 1
  store i32 %5206, ptr %5204, align 4, !tbaa !6
  %5207 = getelementptr inbounds i32, ptr %7, i64 %5205
  %5208 = load i32, ptr %5207, align 4, !tbaa !6
  %5209 = getelementptr inbounds i32, ptr %6, i64 %5205
  br label %5220

5210:                                             ; preds = %5187
  %5211 = icmp eq i32 %5190, %5193
  br i1 %5211, label %5212, label %5218

5212:                                             ; preds = %5210
  store i32 0, ptr %5189, align 4, !tbaa !6
  %5213 = getelementptr inbounds i32, ptr %8, i64 %5188
  %5214 = load i32, ptr %5213, align 4, !tbaa !6
  %5215 = getelementptr inbounds i32, ptr %6, i64 %5188
  store i32 %5214, ptr %5215, align 4, !tbaa !6
  %5216 = add nuw nsw i64 %5188, 1
  %5217 = icmp eq i64 %5216, %5084
  br i1 %5217, label %5225, label %5187, !llvm.loop !928

5218:                                             ; preds = %5183, %5210
  %5219 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

5220:                                             ; preds = %5196, %5202
  %5221 = phi ptr [ %5209, %5202 ], [ %5189, %5196 ]
  %5222 = phi i32 [ %5208, %5202 ], [ 1, %5196 ]
  %5223 = load i32, ptr %5221, align 4, !tbaa !6
  %5224 = add nsw i32 %5223, %5222
  store i32 %5224, ptr %5221, align 4, !tbaa !6
  br label %5225

5225:                                             ; preds = %5212, %5220, %5185, %5161
  %5226 = icmp eq i32 %5177, %5
  br i1 %5226, label %5679, label %5087, !llvm.loop !929

5227:                                             ; preds = %5070, %5367
  %5228 = phi double [ 0.000000e+00, %5070 ], [ %5315, %5367 ]
  %5229 = phi i32 [ 0, %5070 ], [ %5316, %5367 ]
  %5230 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5071, label %5231, label %5300

5231:                                             ; preds = %5227, %5290
  %5232 = phi i32 [ %5299, %5290 ], [ 0, %5227 ]
  %5233 = phi i64 [ %5241, %5290 ], [ %5075, %5227 ]
  %5234 = phi i64 [ %5298, %5290 ], [ %5074, %5227 ]
  %5235 = phi i32 [ %5296, %5290 ], [ %5230, %5227 ]
  %5236 = sub i32 %5073, %5232
  %5237 = tail call i32 @llvm.smin.i32(i32 %5236, i32 0)
  %5238 = sub i32 %5236, %5237
  %5239 = zext i32 %5238 to i64
  %5240 = add nuw nsw i64 %5239, 1
  %5241 = add nsw i64 %5233, -1
  %5242 = icmp ult i32 %5238, 31
  br i1 %5242, label %5278, label %5243

5243:                                             ; preds = %5231
  %5244 = and i64 %5240, 8589934560
  %5245 = sub i64 %5234, %5244
  br label %5246

5246:                                             ; preds = %5246, %5243
  %5247 = phi i64 [ 0, %5243 ], [ %5270, %5246 ]
  %5248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5266, %5246 ]
  %5249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5267, %5246 ]
  %5250 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5268, %5246 ]
  %5251 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5269, %5246 ]
  %5252 = sub i64 %5234, %5247
  %5253 = getelementptr inbounds i32, ptr %11, i64 %5252
  %5254 = getelementptr inbounds i32, ptr %5253, i64 -7
  %5255 = load <8 x i32>, ptr %5254, align 4, !tbaa !6
  %5256 = shufflevector <8 x i32> %5255, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5257 = getelementptr inbounds i32, ptr %5253, i64 -15
  %5258 = load <8 x i32>, ptr %5257, align 4, !tbaa !6
  %5259 = shufflevector <8 x i32> %5258, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5260 = getelementptr inbounds i32, ptr %5253, i64 -23
  %5261 = load <8 x i32>, ptr %5260, align 4, !tbaa !6
  %5262 = shufflevector <8 x i32> %5261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5263 = getelementptr inbounds i32, ptr %5253, i64 -31
  %5264 = load <8 x i32>, ptr %5263, align 4, !tbaa !6
  %5265 = shufflevector <8 x i32> %5264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5266 = mul <8 x i32> %5256, %5248
  %5267 = mul <8 x i32> %5259, %5249
  %5268 = mul <8 x i32> %5262, %5250
  %5269 = mul <8 x i32> %5265, %5251
  %5270 = add nuw i64 %5247, 32
  %5271 = icmp eq i64 %5270, %5244
  br i1 %5271, label %5272, label %5246, !llvm.loop !930

5272:                                             ; preds = %5246
  %5273 = mul <8 x i32> %5267, %5266
  %5274 = mul <8 x i32> %5268, %5273
  %5275 = mul <8 x i32> %5269, %5274
  %5276 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5275)
  %5277 = icmp eq i64 %5240, %5244
  br i1 %5277, label %5290, label %5278

5278:                                             ; preds = %5231, %5272
  %5279 = phi i64 [ %5234, %5231 ], [ %5245, %5272 ]
  %5280 = phi i32 [ 1, %5231 ], [ %5276, %5272 ]
  br label %5281

5281:                                             ; preds = %5278, %5281
  %5282 = phi i64 [ %5287, %5281 ], [ %5279, %5278 ]
  %5283 = phi i32 [ %5286, %5281 ], [ %5280, %5278 ]
  %5284 = getelementptr inbounds i32, ptr %11, i64 %5282
  %5285 = load i32, ptr %5284, align 4, !tbaa !6
  %5286 = mul nsw i32 %5285, %5283
  %5287 = add nsw i64 %5282, -1
  %5288 = trunc i64 %5282 to i32
  %5289 = icmp sgt i32 %5288, 0
  br i1 %5289, label %5281, label %5290, !llvm.loop !931

5290:                                             ; preds = %5281, %5272
  %5291 = phi i32 [ %5276, %5272 ], [ %5286, %5281 ]
  %5292 = and i64 %5241, 4294967295
  %5293 = getelementptr inbounds i32, ptr %6, i64 %5292
  %5294 = load i32, ptr %5293, align 4, !tbaa !6
  %5295 = mul nsw i32 %5294, %5291
  %5296 = add nsw i32 %5295, %5235
  %5297 = icmp sgt i64 %5233, 2
  %5298 = add nsw i64 %5234, -1
  %5299 = add i32 %5232, 1
  br i1 %5297, label %5231, label %5300, !llvm.loop !932

5300:                                             ; preds = %5290, %5227
  %5301 = phi i32 [ %5230, %5227 ], [ %5296, %5290 ]
  %5302 = icmp slt i32 %5301, %5
  br i1 %5302, label %5305, label %5303

5303:                                             ; preds = %5300
  %5304 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

5305:                                             ; preds = %5300
  %5306 = sext i32 %5301 to i64
  %5307 = getelementptr inbounds i64, ptr %5051, i64 %5306
  %5308 = load i64, ptr %5307, align 8, !tbaa !121
  %5309 = sitofp i64 %5308 to double
  %5310 = icmp slt i64 %5308, 0
  %5311 = fneg fast double %5309
  %5312 = select i1 %5310, double %5311, double %5309
  %5313 = fmul fast double %5309, %5309
  %5314 = fmul fast double %5313, %5312
  %5315 = fadd fast double %5314, %5228
  store double %5315, ptr %5053, align 8, !tbaa !19
  %5316 = add nuw nsw i32 %5229, 1
  br i1 %5072, label %5317, label %5367

5317:                                             ; preds = %5305
  %5318 = load i32, ptr %4, align 4, !tbaa !6
  %5319 = load i32, ptr %12, align 4, !tbaa !6
  %5320 = add nsw i32 %5319, -1
  %5321 = icmp slt i32 %5318, %5320
  br i1 %5321, label %5344, label %5322

5322:                                             ; preds = %5317
  %5323 = icmp eq i32 %5318, %5320
  br i1 %5323, label %5324, label %5360

5324:                                             ; preds = %5322
  store i32 0, ptr %4, align 4, !tbaa !6
  %5325 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5325, ptr %6, align 4, !tbaa !6
  br i1 %5077, label %5367, label %5326

5326:                                             ; preds = %5324, %5354
  %5327 = phi i64 [ %5358, %5354 ], [ 1, %5324 ]
  %5328 = getelementptr inbounds i32, ptr %4, i64 %5327
  %5329 = load i32, ptr %5328, align 4, !tbaa !6
  %5330 = getelementptr inbounds i32, ptr %12, i64 %5327
  %5331 = load i32, ptr %5330, align 4, !tbaa !6
  %5332 = add nsw i32 %5331, -1
  %5333 = icmp slt i32 %5329, %5332
  br i1 %5333, label %5334, label %5352

5334:                                             ; preds = %5326
  br i1 %5321, label %5344, label %5335

5335:                                             ; preds = %5334
  %5336 = shl i64 %5327, 32
  %5337 = add i64 %5336, -4294967296
  %5338 = ashr exact i64 %5337, 32
  %5339 = getelementptr inbounds i32, ptr %7, i64 %5338
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = getelementptr inbounds i32, ptr %6, i64 %5327
  %5342 = load i32, ptr %5341, align 4, !tbaa !6
  %5343 = add nsw i32 %5342, %5340
  store i32 %5343, ptr %5341, align 4, !tbaa !6
  br label %5362

5344:                                             ; preds = %5317, %5334
  %5345 = phi i32 [ %5329, %5334 ], [ %5318, %5317 ]
  %5346 = phi ptr [ %5328, %5334 ], [ %4, %5317 ]
  %5347 = phi i64 [ %5327, %5334 ], [ 0, %5317 ]
  %5348 = add nsw i32 %5345, 1
  store i32 %5348, ptr %5346, align 4, !tbaa !6
  %5349 = getelementptr inbounds i32, ptr %7, i64 %5347
  %5350 = load i32, ptr %5349, align 4, !tbaa !6
  %5351 = getelementptr inbounds i32, ptr %6, i64 %5347
  br label %5362

5352:                                             ; preds = %5326
  %5353 = icmp eq i32 %5329, %5332
  br i1 %5353, label %5354, label %5360

5354:                                             ; preds = %5352
  store i32 0, ptr %5328, align 4, !tbaa !6
  %5355 = getelementptr inbounds i32, ptr %8, i64 %5327
  %5356 = load i32, ptr %5355, align 4, !tbaa !6
  %5357 = getelementptr inbounds i32, ptr %6, i64 %5327
  store i32 %5356, ptr %5357, align 4, !tbaa !6
  %5358 = add nuw nsw i64 %5327, 1
  %5359 = icmp eq i64 %5358, %5075
  br i1 %5359, label %5367, label %5326, !llvm.loop !933

5360:                                             ; preds = %5322, %5352
  %5361 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

5362:                                             ; preds = %5335, %5344
  %5363 = phi ptr [ %5351, %5344 ], [ %5328, %5335 ]
  %5364 = phi i32 [ %5350, %5344 ], [ 1, %5335 ]
  %5365 = load i32, ptr %5363, align 4, !tbaa !6
  %5366 = add nsw i32 %5365, %5364
  store i32 %5366, ptr %5363, align 4, !tbaa !6
  br label %5367

5367:                                             ; preds = %5354, %5362, %5324, %5305
  %5368 = icmp eq i32 %5316, %5
  br i1 %5368, label %5679, label %5227, !llvm.loop !934

5369:                                             ; preds = %5063
  %5370 = getelementptr inbounds i32, ptr %3, i64 %19
  %5371 = load i32, ptr %5370, align 4, !tbaa !6
  %5372 = icmp eq i32 %5371, 0
  %5373 = icmp sgt i32 %5, 0
  br i1 %5372, label %5383, label %5374

5374:                                             ; preds = %5369
  br i1 %5373, label %5375, label %5679

5375:                                             ; preds = %5374
  %5376 = icmp sgt i32 %13, 1
  %5377 = icmp sgt i32 %13, 0
  %5378 = add i32 %13, -2
  %5379 = zext i32 %5378 to i64
  %5380 = zext i32 %13 to i64
  %5381 = add nuw i32 %5, 1
  %5382 = icmp eq i32 %13, 1
  br label %5529

5383:                                             ; preds = %5369
  br i1 %5373, label %5384, label %5679

5384:                                             ; preds = %5383
  %5385 = icmp sgt i32 %13, 1
  %5386 = icmp sgt i32 %13, 0
  %5387 = add i32 %13, -2
  %5388 = zext i32 %5387 to i64
  %5389 = zext i32 %13 to i64
  %5390 = add nuw i32 %5, 1
  %5391 = icmp eq i32 %13, 1
  br label %5392

5392:                                             ; preds = %5384, %5527
  %5393 = phi double [ 0.000000e+00, %5384 ], [ %5477, %5527 ]
  %5394 = phi i32 [ 0, %5384 ], [ %5479, %5527 ]
  %5395 = phi double [ 0.000000e+00, %5384 ], [ %5478, %5527 ]
  %5396 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5385, label %5397, label %5466

5397:                                             ; preds = %5392, %5456
  %5398 = phi i32 [ %5465, %5456 ], [ 0, %5392 ]
  %5399 = phi i64 [ %5407, %5456 ], [ %5389, %5392 ]
  %5400 = phi i64 [ %5464, %5456 ], [ %5388, %5392 ]
  %5401 = phi i32 [ %5462, %5456 ], [ %5396, %5392 ]
  %5402 = sub i32 %5387, %5398
  %5403 = tail call i32 @llvm.smin.i32(i32 %5402, i32 0)
  %5404 = sub i32 %5402, %5403
  %5405 = zext i32 %5404 to i64
  %5406 = add nuw nsw i64 %5405, 1
  %5407 = add nsw i64 %5399, -1
  %5408 = icmp ult i32 %5404, 31
  br i1 %5408, label %5444, label %5409

5409:                                             ; preds = %5397
  %5410 = and i64 %5406, 8589934560
  %5411 = sub i64 %5400, %5410
  br label %5412

5412:                                             ; preds = %5412, %5409
  %5413 = phi i64 [ 0, %5409 ], [ %5436, %5412 ]
  %5414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5432, %5412 ]
  %5415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5433, %5412 ]
  %5416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5434, %5412 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5409 ], [ %5435, %5412 ]
  %5418 = sub i64 %5400, %5413
  %5419 = getelementptr inbounds i32, ptr %9, i64 %5418
  %5420 = getelementptr inbounds i32, ptr %5419, i64 -7
  %5421 = load <8 x i32>, ptr %5420, align 4, !tbaa !6
  %5422 = shufflevector <8 x i32> %5421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5423 = getelementptr inbounds i32, ptr %5419, i64 -15
  %5424 = load <8 x i32>, ptr %5423, align 4, !tbaa !6
  %5425 = shufflevector <8 x i32> %5424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5426 = getelementptr inbounds i32, ptr %5419, i64 -23
  %5427 = load <8 x i32>, ptr %5426, align 4, !tbaa !6
  %5428 = shufflevector <8 x i32> %5427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5429 = getelementptr inbounds i32, ptr %5419, i64 -31
  %5430 = load <8 x i32>, ptr %5429, align 4, !tbaa !6
  %5431 = shufflevector <8 x i32> %5430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5432 = mul <8 x i32> %5422, %5414
  %5433 = mul <8 x i32> %5425, %5415
  %5434 = mul <8 x i32> %5428, %5416
  %5435 = mul <8 x i32> %5431, %5417
  %5436 = add nuw i64 %5413, 32
  %5437 = icmp eq i64 %5436, %5410
  br i1 %5437, label %5438, label %5412, !llvm.loop !935

5438:                                             ; preds = %5412
  %5439 = mul <8 x i32> %5433, %5432
  %5440 = mul <8 x i32> %5434, %5439
  %5441 = mul <8 x i32> %5435, %5440
  %5442 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5441)
  %5443 = icmp eq i64 %5406, %5410
  br i1 %5443, label %5456, label %5444

5444:                                             ; preds = %5397, %5438
  %5445 = phi i64 [ %5400, %5397 ], [ %5411, %5438 ]
  %5446 = phi i32 [ 1, %5397 ], [ %5442, %5438 ]
  br label %5447

5447:                                             ; preds = %5444, %5447
  %5448 = phi i64 [ %5453, %5447 ], [ %5445, %5444 ]
  %5449 = phi i32 [ %5452, %5447 ], [ %5446, %5444 ]
  %5450 = getelementptr inbounds i32, ptr %9, i64 %5448
  %5451 = load i32, ptr %5450, align 4, !tbaa !6
  %5452 = mul nsw i32 %5451, %5449
  %5453 = add nsw i64 %5448, -1
  %5454 = trunc i64 %5448 to i32
  %5455 = icmp sgt i32 %5454, 0
  br i1 %5455, label %5447, label %5456, !llvm.loop !936

5456:                                             ; preds = %5447, %5438
  %5457 = phi i32 [ %5442, %5438 ], [ %5452, %5447 ]
  %5458 = and i64 %5407, 4294967295
  %5459 = getelementptr inbounds i32, ptr %6, i64 %5458
  %5460 = load i32, ptr %5459, align 4, !tbaa !6
  %5461 = mul nsw i32 %5460, %5457
  %5462 = add nsw i32 %5461, %5401
  %5463 = icmp sgt i64 %5399, 2
  %5464 = add nsw i64 %5400, -1
  %5465 = add i32 %5398, 1
  br i1 %5463, label %5397, label %5466, !llvm.loop !937

5466:                                             ; preds = %5456, %5392
  %5467 = phi i32 [ %5396, %5392 ], [ %5462, %5456 ]
  %5468 = sext i32 %5467 to i64
  %5469 = getelementptr inbounds i64, ptr %5051, i64 %5468
  %5470 = load i64, ptr %5469, align 8, !tbaa !121
  %5471 = sitofp i64 %5470 to double
  %5472 = icmp slt i64 %5470, 0
  %5473 = fneg fast double %5471
  %5474 = select i1 %5472, double %5473, double %5471
  %5475 = fmul fast double %5471, %5471
  %5476 = fmul fast double %5475, %5474
  %5477 = fadd fast double %5476, %5393
  %5478 = fadd fast double %5395, 1.000000e+00
  %5479 = add nuw nsw i32 %5394, 1
  br i1 %5386, label %5480, label %5527

5480:                                             ; preds = %5466
  %5481 = load i32, ptr %4, align 4, !tbaa !6
  %5482 = load i32, ptr %12, align 4, !tbaa !6
  %5483 = add nsw i32 %5482, -1
  %5484 = icmp slt i32 %5481, %5483
  br i1 %5484, label %5504, label %5485

5485:                                             ; preds = %5480
  %5486 = icmp eq i32 %5481, %5483
  br i1 %5486, label %5487, label %5520

5487:                                             ; preds = %5485
  store i32 0, ptr %4, align 4, !tbaa !6
  %5488 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5488, ptr %6, align 4, !tbaa !6
  br i1 %5391, label %5527, label %5489

5489:                                             ; preds = %5487, %5514
  %5490 = phi i64 [ %5518, %5514 ], [ 1, %5487 ]
  %5491 = getelementptr inbounds i32, ptr %4, i64 %5490
  %5492 = load i32, ptr %5491, align 4, !tbaa !6
  %5493 = getelementptr inbounds i32, ptr %12, i64 %5490
  %5494 = load i32, ptr %5493, align 4, !tbaa !6
  %5495 = add nsw i32 %5494, -1
  %5496 = icmp slt i32 %5492, %5495
  br i1 %5496, label %5497, label %5512

5497:                                             ; preds = %5489
  br i1 %5484, label %5504, label %5498

5498:                                             ; preds = %5497
  %5499 = getelementptr inbounds i32, ptr %7, i64 %5490
  %5500 = load i32, ptr %5499, align 4, !tbaa !6
  %5501 = getelementptr inbounds i32, ptr %6, i64 %5490
  %5502 = load i32, ptr %5501, align 4, !tbaa !6
  %5503 = add nsw i32 %5502, %5500
  store i32 %5503, ptr %5501, align 4, !tbaa !6
  br label %5522

5504:                                             ; preds = %5480, %5497
  %5505 = phi i32 [ %5492, %5497 ], [ %5481, %5480 ]
  %5506 = phi ptr [ %5491, %5497 ], [ %4, %5480 ]
  %5507 = phi i64 [ %5490, %5497 ], [ 0, %5480 ]
  %5508 = add nsw i32 %5505, 1
  store i32 %5508, ptr %5506, align 4, !tbaa !6
  %5509 = getelementptr inbounds i32, ptr %7, i64 %5507
  %5510 = load i32, ptr %5509, align 4, !tbaa !6
  %5511 = getelementptr inbounds i32, ptr %6, i64 %5507
  br label %5522

5512:                                             ; preds = %5489
  %5513 = icmp eq i32 %5492, %5495
  br i1 %5513, label %5514, label %5520

5514:                                             ; preds = %5512
  store i32 0, ptr %5491, align 4, !tbaa !6
  %5515 = getelementptr inbounds i32, ptr %8, i64 %5490
  %5516 = load i32, ptr %5515, align 4, !tbaa !6
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5490
  store i32 %5516, ptr %5517, align 4, !tbaa !6
  %5518 = add nuw nsw i64 %5490, 1
  %5519 = icmp eq i64 %5518, %5389
  br i1 %5519, label %5527, label %5489, !llvm.loop !938

5520:                                             ; preds = %5485, %5512
  store double %5477, ptr %5053, align 8, !tbaa !19
  %5521 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

5522:                                             ; preds = %5498, %5504
  %5523 = phi ptr [ %5511, %5504 ], [ %5491, %5498 ]
  %5524 = phi i32 [ %5510, %5504 ], [ 1, %5498 ]
  %5525 = load i32, ptr %5523, align 4, !tbaa !6
  %5526 = add nsw i32 %5525, %5524
  store i32 %5526, ptr %5523, align 4, !tbaa !6
  br label %5527

5527:                                             ; preds = %5514, %5522, %5487, %5466
  %5528 = icmp eq i32 %5479, %5
  br i1 %5528, label %5678, label %5392, !llvm.loop !939

5529:                                             ; preds = %5375, %5669
  %5530 = phi double [ 0.000000e+00, %5375 ], [ %5617, %5669 ]
  %5531 = phi i32 [ 0, %5375 ], [ %5618, %5669 ]
  %5532 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5376, label %5533, label %5602

5533:                                             ; preds = %5529, %5592
  %5534 = phi i32 [ %5601, %5592 ], [ 0, %5529 ]
  %5535 = phi i64 [ %5543, %5592 ], [ %5380, %5529 ]
  %5536 = phi i64 [ %5600, %5592 ], [ %5379, %5529 ]
  %5537 = phi i32 [ %5598, %5592 ], [ %5532, %5529 ]
  %5538 = sub i32 %5378, %5534
  %5539 = tail call i32 @llvm.smin.i32(i32 %5538, i32 0)
  %5540 = sub i32 %5538, %5539
  %5541 = zext i32 %5540 to i64
  %5542 = add nuw nsw i64 %5541, 1
  %5543 = add nsw i64 %5535, -1
  %5544 = icmp ult i32 %5540, 31
  br i1 %5544, label %5580, label %5545

5545:                                             ; preds = %5533
  %5546 = and i64 %5542, 8589934560
  %5547 = sub i64 %5536, %5546
  br label %5548

5548:                                             ; preds = %5548, %5545
  %5549 = phi i64 [ 0, %5545 ], [ %5572, %5548 ]
  %5550 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5545 ], [ %5568, %5548 ]
  %5551 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5545 ], [ %5569, %5548 ]
  %5552 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5545 ], [ %5570, %5548 ]
  %5553 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5545 ], [ %5571, %5548 ]
  %5554 = sub i64 %5536, %5549
  %5555 = getelementptr inbounds i32, ptr %11, i64 %5554
  %5556 = getelementptr inbounds i32, ptr %5555, i64 -7
  %5557 = load <8 x i32>, ptr %5556, align 4, !tbaa !6
  %5558 = shufflevector <8 x i32> %5557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5559 = getelementptr inbounds i32, ptr %5555, i64 -15
  %5560 = load <8 x i32>, ptr %5559, align 4, !tbaa !6
  %5561 = shufflevector <8 x i32> %5560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5562 = getelementptr inbounds i32, ptr %5555, i64 -23
  %5563 = load <8 x i32>, ptr %5562, align 4, !tbaa !6
  %5564 = shufflevector <8 x i32> %5563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5565 = getelementptr inbounds i32, ptr %5555, i64 -31
  %5566 = load <8 x i32>, ptr %5565, align 4, !tbaa !6
  %5567 = shufflevector <8 x i32> %5566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5568 = mul <8 x i32> %5558, %5550
  %5569 = mul <8 x i32> %5561, %5551
  %5570 = mul <8 x i32> %5564, %5552
  %5571 = mul <8 x i32> %5567, %5553
  %5572 = add nuw i64 %5549, 32
  %5573 = icmp eq i64 %5572, %5546
  br i1 %5573, label %5574, label %5548, !llvm.loop !940

5574:                                             ; preds = %5548
  %5575 = mul <8 x i32> %5569, %5568
  %5576 = mul <8 x i32> %5570, %5575
  %5577 = mul <8 x i32> %5571, %5576
  %5578 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5577)
  %5579 = icmp eq i64 %5542, %5546
  br i1 %5579, label %5592, label %5580

5580:                                             ; preds = %5533, %5574
  %5581 = phi i64 [ %5536, %5533 ], [ %5547, %5574 ]
  %5582 = phi i32 [ 1, %5533 ], [ %5578, %5574 ]
  br label %5583

5583:                                             ; preds = %5580, %5583
  %5584 = phi i64 [ %5589, %5583 ], [ %5581, %5580 ]
  %5585 = phi i32 [ %5588, %5583 ], [ %5582, %5580 ]
  %5586 = getelementptr inbounds i32, ptr %11, i64 %5584
  %5587 = load i32, ptr %5586, align 4, !tbaa !6
  %5588 = mul nsw i32 %5587, %5585
  %5589 = add nsw i64 %5584, -1
  %5590 = trunc i64 %5584 to i32
  %5591 = icmp sgt i32 %5590, 0
  br i1 %5591, label %5583, label %5592, !llvm.loop !941

5592:                                             ; preds = %5583, %5574
  %5593 = phi i32 [ %5578, %5574 ], [ %5588, %5583 ]
  %5594 = and i64 %5543, 4294967295
  %5595 = getelementptr inbounds i32, ptr %6, i64 %5594
  %5596 = load i32, ptr %5595, align 4, !tbaa !6
  %5597 = mul nsw i32 %5596, %5593
  %5598 = add nsw i32 %5597, %5537
  %5599 = icmp sgt i64 %5535, 2
  %5600 = add nsw i64 %5536, -1
  %5601 = add i32 %5534, 1
  br i1 %5599, label %5533, label %5602, !llvm.loop !942

5602:                                             ; preds = %5592, %5529
  %5603 = phi i32 [ %5532, %5529 ], [ %5598, %5592 ]
  %5604 = icmp slt i32 %5603, %5
  br i1 %5604, label %5607, label %5605

5605:                                             ; preds = %5602
  %5606 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5684

5607:                                             ; preds = %5602
  %5608 = sext i32 %5603 to i64
  %5609 = getelementptr inbounds i64, ptr %5051, i64 %5608
  %5610 = load i64, ptr %5609, align 8, !tbaa !121
  %5611 = sitofp i64 %5610 to double
  %5612 = icmp slt i64 %5610, 0
  %5613 = fneg fast double %5611
  %5614 = select i1 %5612, double %5613, double %5611
  %5615 = fmul fast double %5611, %5611
  %5616 = fmul fast double %5615, %5614
  %5617 = fadd fast double %5616, %5530
  store double %5617, ptr %5053, align 8, !tbaa !19
  %5618 = add nuw nsw i32 %5531, 1
  br i1 %5377, label %5619, label %5669

5619:                                             ; preds = %5607
  %5620 = load i32, ptr %4, align 4, !tbaa !6
  %5621 = load i32, ptr %12, align 4, !tbaa !6
  %5622 = add nsw i32 %5621, -1
  %5623 = icmp slt i32 %5620, %5622
  br i1 %5623, label %5646, label %5624

5624:                                             ; preds = %5619
  %5625 = icmp eq i32 %5620, %5622
  br i1 %5625, label %5626, label %5662

5626:                                             ; preds = %5624
  store i32 0, ptr %4, align 4, !tbaa !6
  %5627 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5627, ptr %6, align 4, !tbaa !6
  br i1 %5382, label %5669, label %5628

5628:                                             ; preds = %5626, %5656
  %5629 = phi i64 [ %5660, %5656 ], [ 1, %5626 ]
  %5630 = getelementptr inbounds i32, ptr %4, i64 %5629
  %5631 = load i32, ptr %5630, align 4, !tbaa !6
  %5632 = getelementptr inbounds i32, ptr %12, i64 %5629
  %5633 = load i32, ptr %5632, align 4, !tbaa !6
  %5634 = add nsw i32 %5633, -1
  %5635 = icmp slt i32 %5631, %5634
  br i1 %5635, label %5636, label %5654

5636:                                             ; preds = %5628
  br i1 %5623, label %5646, label %5637

5637:                                             ; preds = %5636
  %5638 = shl i64 %5629, 32
  %5639 = add i64 %5638, -4294967296
  %5640 = ashr exact i64 %5639, 32
  %5641 = getelementptr inbounds i32, ptr %7, i64 %5640
  %5642 = load i32, ptr %5641, align 4, !tbaa !6
  %5643 = getelementptr inbounds i32, ptr %6, i64 %5629
  %5644 = load i32, ptr %5643, align 4, !tbaa !6
  %5645 = add nsw i32 %5644, %5642
  store i32 %5645, ptr %5643, align 4, !tbaa !6
  br label %5664

5646:                                             ; preds = %5619, %5636
  %5647 = phi i32 [ %5631, %5636 ], [ %5620, %5619 ]
  %5648 = phi ptr [ %5630, %5636 ], [ %4, %5619 ]
  %5649 = phi i64 [ %5629, %5636 ], [ 0, %5619 ]
  %5650 = add nsw i32 %5647, 1
  store i32 %5650, ptr %5648, align 4, !tbaa !6
  %5651 = getelementptr inbounds i32, ptr %7, i64 %5649
  %5652 = load i32, ptr %5651, align 4, !tbaa !6
  %5653 = getelementptr inbounds i32, ptr %6, i64 %5649
  br label %5664

5654:                                             ; preds = %5628
  %5655 = icmp eq i32 %5631, %5634
  br i1 %5655, label %5656, label %5662

5656:                                             ; preds = %5654
  store i32 0, ptr %5630, align 4, !tbaa !6
  %5657 = getelementptr inbounds i32, ptr %8, i64 %5629
  %5658 = load i32, ptr %5657, align 4, !tbaa !6
  %5659 = getelementptr inbounds i32, ptr %6, i64 %5629
  store i32 %5658, ptr %5659, align 4, !tbaa !6
  %5660 = add nuw nsw i64 %5629, 1
  %5661 = icmp eq i64 %5660, %5380
  br i1 %5661, label %5669, label %5628, !llvm.loop !943

5662:                                             ; preds = %5624, %5654
  %5663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5684

5664:                                             ; preds = %5637, %5646
  %5665 = phi ptr [ %5653, %5646 ], [ %5630, %5637 ]
  %5666 = phi i32 [ %5652, %5646 ], [ 1, %5637 ]
  %5667 = load i32, ptr %5665, align 4, !tbaa !6
  %5668 = add nsw i32 %5667, %5666
  store i32 %5668, ptr %5665, align 4, !tbaa !6
  br label %5669

5669:                                             ; preds = %5656, %5664, %5626, %5607
  %5670 = icmp eq i32 %5618, %5
  br i1 %5670, label %5679, label %5529, !llvm.loop !944

5671:                                             ; preds = %5063
  %5672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5679

5673:                                             ; preds = %2087
  store i16 %2037, ptr %1910, align 2, !tbaa !79
  br label %5679

5674:                                             ; preds = %2394
  store i16 %2344, ptr %1910, align 2, !tbaa !79
  br label %5679

5675:                                             ; preds = %4273
  store double %4223, ptr %3799, align 8, !tbaa !19
  br label %5679

5676:                                             ; preds = %4598
  store float %4548, ptr %4423, align 4, !tbaa !163
  br label %5679

5677:                                             ; preds = %4903
  store float %4853, ptr %4423, align 4, !tbaa !163
  br label %5679

5678:                                             ; preds = %5527
  store double %5477, ptr %5053, align 8, !tbaa !19
  br label %5679

5679:                                             ; preds = %5669, %5367, %5225, %5045, %4743, %4415, %4113, %3971, %3791, %3650, %3491, %3347, %3166, %3024, %2864, %2719, %2536, %2234, %1902, %1760, %1600, %1453, %1268, %1126, %966, %821, %638, %499, %342, %199, %5374, %5383, %5678, %5069, %5078, %4750, %4759, %5677, %4439, %4448, %5676, %4120, %4129, %5675, %3815, %3824, %3498, %3507, %3189, %3198, %2871, %2880, %2560, %2569, %2241, %2250, %5674, %1926, %1935, %5673, %1607, %1616, %1292, %1301, %973, %982, %662, %671, %349, %358, %39, %48, %5055, %5671, %4425, %5047, %3801, %4417, %3176, %3793, %2546, %3168, %1912, %2538, %1278, %1904, %648, %1270, %28, %640, %18
  %5680 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1270 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %1904 ], [ 0.000000e+00, %1278 ], [ 0.000000e+00, %2538 ], [ 0.000000e+00, %1912 ], [ 0.000000e+00, %3168 ], [ 0.000000e+00, %2546 ], [ 0.000000e+00, %3793 ], [ 0.000000e+00, %3176 ], [ 0.000000e+00, %4417 ], [ 0.000000e+00, %3801 ], [ 0.000000e+00, %5047 ], [ 0.000000e+00, %4425 ], [ 0.000000e+00, %5671 ], [ 0.000000e+00, %5055 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %358 ], [ 0.000000e+00, %349 ], [ 0.000000e+00, %671 ], [ 0.000000e+00, %662 ], [ 0.000000e+00, %982 ], [ 0.000000e+00, %973 ], [ 0.000000e+00, %1301 ], [ 0.000000e+00, %1292 ], [ 0.000000e+00, %1616 ], [ 0.000000e+00, %1607 ], [ %2038, %5673 ], [ 0.000000e+00, %1935 ], [ 0.000000e+00, %1926 ], [ %2345, %5674 ], [ 0.000000e+00, %2250 ], [ 0.000000e+00, %2241 ], [ 0.000000e+00, %2569 ], [ 0.000000e+00, %2560 ], [ 0.000000e+00, %2880 ], [ 0.000000e+00, %2871 ], [ 0.000000e+00, %3198 ], [ 0.000000e+00, %3189 ], [ 0.000000e+00, %3507 ], [ 0.000000e+00, %3498 ], [ 0.000000e+00, %3824 ], [ 0.000000e+00, %3815 ], [ %4224, %5675 ], [ 0.000000e+00, %4129 ], [ 0.000000e+00, %4120 ], [ %4549, %5676 ], [ 0.000000e+00, %4448 ], [ 0.000000e+00, %4439 ], [ %4854, %5677 ], [ 0.000000e+00, %4759 ], [ 0.000000e+00, %4750 ], [ 0.000000e+00, %5078 ], [ 0.000000e+00, %5069 ], [ %5478, %5678 ], [ 0.000000e+00, %5383 ], [ 0.000000e+00, %5374 ], [ %150, %199 ], [ 0.000000e+00, %342 ], [ %450, %499 ], [ 0.000000e+00, %638 ], [ %772, %821 ], [ 0.000000e+00, %966 ], [ %1077, %1126 ], [ 0.000000e+00, %1268 ], [ %1404, %1453 ], [ 0.000000e+00, %1600 ], [ %1711, %1760 ], [ 0.000000e+00, %1902 ], [ 0.000000e+00, %2234 ], [ 0.000000e+00, %2536 ], [ %2670, %2719 ], [ 0.000000e+00, %2864 ], [ %2975, %3024 ], [ 0.000000e+00, %3166 ], [ %3298, %3347 ], [ 0.000000e+00, %3491 ], [ %3601, %3650 ], [ 0.000000e+00, %3791 ], [ %3922, %3971 ], [ 0.000000e+00, %4113 ], [ 0.000000e+00, %4415 ], [ 0.000000e+00, %4743 ], [ 0.000000e+00, %5045 ], [ %5176, %5225 ], [ 0.000000e+00, %5367 ], [ 0.000000e+00, %5669 ]
  %5681 = phi i32 [ %10, %18 ], [ 1, %640 ], [ 1, %28 ], [ 1, %1270 ], [ 1, %648 ], [ 1, %1904 ], [ 1, %1278 ], [ 1, %2538 ], [ 1, %1912 ], [ 1, %3168 ], [ 1, %2546 ], [ 1, %3793 ], [ 1, %3176 ], [ 1, %4417 ], [ 1, %3801 ], [ 1, %5047 ], [ 1, %4425 ], [ 1, %5671 ], [ 1, %5055 ], [ 1, %48 ], [ 1, %39 ], [ 1, %358 ], [ 1, %349 ], [ 1, %671 ], [ 1, %662 ], [ 1, %982 ], [ 1, %973 ], [ 1, %1301 ], [ 1, %1292 ], [ 1, %1616 ], [ 1, %1607 ], [ %1942, %5673 ], [ 1, %1935 ], [ 1, %1926 ], [ %2257, %5674 ], [ 1, %2250 ], [ 1, %2241 ], [ 1, %2569 ], [ 1, %2560 ], [ 1, %2880 ], [ 1, %2871 ], [ 1, %3198 ], [ 1, %3189 ], [ 1, %3507 ], [ 1, %3498 ], [ 1, %3824 ], [ 1, %3815 ], [ %4136, %5675 ], [ 1, %4129 ], [ 1, %4120 ], [ %4455, %5676 ], [ 1, %4448 ], [ 1, %4439 ], [ %4766, %5677 ], [ 1, %4759 ], [ 1, %4750 ], [ 1, %5078 ], [ 1, %5069 ], [ %5390, %5678 ], [ 1, %5383 ], [ 1, %5374 ], [ %55, %199 ], [ %46, %342 ], [ %365, %499 ], [ %356, %638 ], [ %678, %821 ], [ %669, %966 ], [ %989, %1126 ], [ %980, %1268 ], [ %1308, %1453 ], [ %1299, %1600 ], [ %1623, %1760 ], [ %1614, %1902 ], [ %1933, %2234 ], [ %2248, %2536 ], [ %2576, %2719 ], [ %2567, %2864 ], [ %2887, %3024 ], [ %2878, %3166 ], [ %3205, %3347 ], [ %3196, %3491 ], [ %3514, %3650 ], [ %3505, %3791 ], [ %3831, %3971 ], [ %3822, %4113 ], [ %4127, %4415 ], [ %4446, %4743 ], [ %4757, %5045 ], [ %5085, %5225 ], [ %5076, %5367 ], [ %5381, %5669 ]
  %5682 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5681, ptr noundef nonnull @.str.5) #3
  %5683 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5680, ptr noundef nonnull @.str.6) #3
  br label %5684

5684:                                             ; preds = %5218, %5303, %5360, %5520, %5605, %5662, %4591, %4676, %4736, %4896, %4981, %5038, %3964, %4049, %4106, %4266, %4351, %4408, %3340, %3425, %3484, %3643, %3728, %3784, %2712, %2796, %2857, %3017, %3101, %3159, %2080, %2165, %2227, %2387, %2472, %2529, %1446, %1530, %1593, %1753, %1837, %1895, %814, %898, %959, %1119, %1203, %1261, %192, %276, %335, %492, %576, %631, %5679
  %5685 = phi i32 [ 0, %5679 ], [ -1, %631 ], [ -1, %576 ], [ -1, %492 ], [ -1, %335 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1261 ], [ -1, %1203 ], [ -1, %1119 ], [ -1, %959 ], [ -1, %898 ], [ -1, %814 ], [ -1, %1895 ], [ -1, %1837 ], [ -1, %1753 ], [ -1, %1593 ], [ -1, %1530 ], [ -1, %1446 ], [ -1, %2529 ], [ -1, %2472 ], [ -1, %2387 ], [ -1, %2227 ], [ -1, %2165 ], [ -1, %2080 ], [ -1, %3159 ], [ -1, %3101 ], [ -1, %3017 ], [ -1, %2857 ], [ -1, %2796 ], [ -1, %2712 ], [ -1, %3784 ], [ -1, %3728 ], [ -1, %3643 ], [ -1, %3484 ], [ -1, %3425 ], [ -1, %3340 ], [ -1, %4408 ], [ -1, %4351 ], [ -1, %4266 ], [ -1, %4106 ], [ -1, %4049 ], [ -1, %3964 ], [ -1, %5038 ], [ -1, %4981 ], [ -1, %4896 ], [ -1, %4736 ], [ -1, %4676 ], [ -1, %4591 ], [ -1, %5662 ], [ -1, %5605 ], [ -1, %5520 ], [ -1, %5360 ], [ -1, %5303 ], [ -1, %5218 ]
  ret i32 %5685
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5661 [
    i32 101, label %22
    i32 102, label %637
    i32 103, label %1267
    i32 104, label %1897
    i32 105, label %2527
    i32 106, label %3157
    i32 107, label %3787
    i32 108, label %4406
    i32 109, label %5036
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !19
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5661

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5661

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %5661

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !945

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !946

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !947

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds double, ptr %24, i64 %132
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = fptoui double %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %139
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !948

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %5661, label %57, !llvm.loop !949

200:                                              ; preds = %40, %337
  %201 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !950

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !951

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !952

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = sext i32 %273 to i64
  %280 = getelementptr inbounds double, ptr %24, i64 %279
  %281 = load double, ptr %280, align 8, !tbaa !19
  %282 = fptoui double %281 to i8
  %283 = mul i8 %282, %282
  %284 = mul i8 %283, %282
  %285 = add i8 %284, %278
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %201, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %277
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !953

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %277
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %5661, label %200, !llvm.loop !954

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %5661

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %5661

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !955

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !956

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !957

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = load i8, ptr %26, align 1, !tbaa !12
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds double, ptr %24, i64 %438
  %440 = load double, ptr %439, align 8, !tbaa !19
  %441 = fptoui double %440 to i8
  %442 = mul i8 %441, %441
  %443 = mul i8 %442, %441
  %444 = add i8 %443, %437
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !958

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %5661, label %362, !llvm.loop !959

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !960

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !961

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !962

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

573:                                              ; preds = %568
  %574 = load i8, ptr %26, align 1, !tbaa !12
  %575 = sext i32 %569 to i64
  %576 = getelementptr inbounds double, ptr %24, i64 %575
  %577 = load double, ptr %576, align 8, !tbaa !19
  %578 = fptoui double %577 to i8
  %579 = mul i8 %578, %578
  %580 = mul i8 %579, %578
  %581 = add i8 %580, %574
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !963

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %5661, label %496, !llvm.loop !964

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %651

643:                                              ; preds = %637
  %644 = load double, ptr %639, align 8, !tbaa !19
  %645 = fptosi double %644 to i32
  %646 = icmp slt i32 %645, 0
  %647 = mul nsw i32 %645, %645
  %648 = sub nsw i32 0, %647
  %649 = select i1 %646, i32 %648, i32 %647
  %650 = mul i32 %649, %645
  store i32 %650, ptr %641, align 4, !tbaa !6
  br label %5661

651:                                              ; preds = %637
  switch i32 %1, label %1265 [
    i32 1, label %652
    i32 0, label %963
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !6
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %5661

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %818

666:                                              ; preds = %652
  br i1 %656, label %667, label %5661

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %816
  %676 = phi i32 [ 0, %667 ], [ %768, %816 ]
  %677 = phi double [ 0.000000e+00, %667 ], [ %767, %816 ]
  %678 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %668, label %679, label %748

679:                                              ; preds = %675, %738
  %680 = phi i32 [ %747, %738 ], [ 0, %675 ]
  %681 = phi i64 [ %689, %738 ], [ %672, %675 ]
  %682 = phi i64 [ %746, %738 ], [ %671, %675 ]
  %683 = phi i32 [ %744, %738 ], [ %678, %675 ]
  %684 = sub i32 %670, %680
  %685 = tail call i32 @llvm.smin.i32(i32 %684, i32 0)
  %686 = sub i32 %684, %685
  %687 = zext i32 %686 to i64
  %688 = add nuw nsw i64 %687, 1
  %689 = add nsw i64 %681, -1
  %690 = icmp ult i32 %686, 31
  br i1 %690, label %726, label %691

691:                                              ; preds = %679
  %692 = and i64 %688, 8589934560
  %693 = sub i64 %682, %692
  br label %694

694:                                              ; preds = %694, %691
  %695 = phi i64 [ 0, %691 ], [ %718, %694 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %714, %694 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %715, %694 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %716, %694 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %717, %694 ]
  %700 = sub i64 %682, %695
  %701 = getelementptr inbounds i32, ptr %9, i64 %700
  %702 = getelementptr inbounds i32, ptr %701, i64 -7
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = getelementptr inbounds i32, ptr %701, i64 -15
  %706 = load <8 x i32>, ptr %705, align 4, !tbaa !6
  %707 = shufflevector <8 x i32> %706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %708 = getelementptr inbounds i32, ptr %701, i64 -23
  %709 = load <8 x i32>, ptr %708, align 4, !tbaa !6
  %710 = shufflevector <8 x i32> %709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %711 = getelementptr inbounds i32, ptr %701, i64 -31
  %712 = load <8 x i32>, ptr %711, align 4, !tbaa !6
  %713 = shufflevector <8 x i32> %712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %714 = mul <8 x i32> %704, %696
  %715 = mul <8 x i32> %707, %697
  %716 = mul <8 x i32> %710, %698
  %717 = mul <8 x i32> %713, %699
  %718 = add nuw i64 %695, 32
  %719 = icmp eq i64 %718, %692
  br i1 %719, label %720, label %694, !llvm.loop !965

720:                                              ; preds = %694
  %721 = mul <8 x i32> %715, %714
  %722 = mul <8 x i32> %716, %721
  %723 = mul <8 x i32> %717, %722
  %724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %723)
  %725 = icmp eq i64 %688, %692
  br i1 %725, label %738, label %726

726:                                              ; preds = %679, %720
  %727 = phi i64 [ %682, %679 ], [ %693, %720 ]
  %728 = phi i32 [ 1, %679 ], [ %724, %720 ]
  br label %729

729:                                              ; preds = %726, %729
  %730 = phi i64 [ %735, %729 ], [ %727, %726 ]
  %731 = phi i32 [ %734, %729 ], [ %728, %726 ]
  %732 = getelementptr inbounds i32, ptr %9, i64 %730
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %731
  %735 = add nsw i64 %730, -1
  %736 = trunc i64 %730 to i32
  %737 = icmp sgt i32 %736, 0
  br i1 %737, label %729, label %738, !llvm.loop !966

738:                                              ; preds = %729, %720
  %739 = phi i32 [ %724, %720 ], [ %734, %729 ]
  %740 = and i64 %689, 4294967295
  %741 = getelementptr inbounds i32, ptr %6, i64 %740
  %742 = load i32, ptr %741, align 4, !tbaa !6
  %743 = mul nsw i32 %742, %739
  %744 = add nsw i32 %743, %683
  %745 = icmp sgt i64 %681, 2
  %746 = add nsw i64 %682, -1
  %747 = add i32 %680, 1
  br i1 %745, label %679, label %748, !llvm.loop !967

748:                                              ; preds = %738, %675
  %749 = phi i32 [ %678, %675 ], [ %744, %738 ]
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds double, ptr %2, i64 %750
  %752 = load double, ptr %751, align 8, !tbaa !19
  %753 = getelementptr inbounds double, ptr %639, i64 %750
  %754 = load double, ptr %753, align 8, !tbaa !19
  %755 = fptosi double %754 to i32
  %756 = load i32, ptr %641, align 4, !tbaa !6
  %757 = sitofp i32 %756 to double
  %758 = sitofp i32 %755 to double
  %759 = fmul fast double %752, %758
  %760 = fcmp fast olt double %759, 0.000000e+00
  %761 = fneg fast double %759
  %762 = select nnan ninf i1 %760, double %761, double %759
  %763 = fmul fast double %759, %759
  %764 = fmul fast double %763, %762
  %765 = fadd fast double %764, %757
  %766 = fptosi double %765 to i32
  store i32 %766, ptr %641, align 4, !tbaa !6
  %767 = fadd fast double %752, %677
  %768 = add nuw nsw i32 %676, 1
  br i1 %669, label %769, label %816

769:                                              ; preds = %748
  %770 = load i32, ptr %4, align 4, !tbaa !6
  %771 = load i32, ptr %12, align 4, !tbaa !6
  %772 = add nsw i32 %771, -1
  %773 = icmp slt i32 %770, %772
  br i1 %773, label %793, label %774

774:                                              ; preds = %769
  %775 = icmp eq i32 %770, %772
  br i1 %775, label %776, label %809

776:                                              ; preds = %774
  store i32 0, ptr %4, align 4, !tbaa !6
  %777 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %777, ptr %6, align 4, !tbaa !6
  br i1 %674, label %816, label %778

778:                                              ; preds = %776, %803
  %779 = phi i64 [ %807, %803 ], [ 1, %776 ]
  %780 = getelementptr inbounds i32, ptr %4, i64 %779
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = getelementptr inbounds i32, ptr %12, i64 %779
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = add nsw i32 %783, -1
  %785 = icmp slt i32 %781, %784
  br i1 %785, label %786, label %801

786:                                              ; preds = %778
  br i1 %773, label %793, label %787

787:                                              ; preds = %786
  %788 = getelementptr inbounds i32, ptr %7, i64 %779
  %789 = load i32, ptr %788, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %6, i64 %779
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = add nsw i32 %791, %789
  store i32 %792, ptr %790, align 4, !tbaa !6
  br label %811

793:                                              ; preds = %769, %786
  %794 = phi i32 [ %781, %786 ], [ %770, %769 ]
  %795 = phi ptr [ %780, %786 ], [ %4, %769 ]
  %796 = phi i64 [ %779, %786 ], [ 0, %769 ]
  %797 = add nsw i32 %794, 1
  store i32 %797, ptr %795, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %7, i64 %796
  %799 = load i32, ptr %798, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %6, i64 %796
  br label %811

801:                                              ; preds = %778
  %802 = icmp eq i32 %781, %784
  br i1 %802, label %803, label %809

803:                                              ; preds = %801
  store i32 0, ptr %780, align 4, !tbaa !6
  %804 = getelementptr inbounds i32, ptr %8, i64 %779
  %805 = load i32, ptr %804, align 4, !tbaa !6
  %806 = getelementptr inbounds i32, ptr %6, i64 %779
  store i32 %805, ptr %806, align 4, !tbaa !6
  %807 = add nuw nsw i64 %779, 1
  %808 = icmp eq i64 %807, %672
  br i1 %808, label %816, label %778, !llvm.loop !968

809:                                              ; preds = %774, %801
  %810 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

811:                                              ; preds = %787, %793
  %812 = phi ptr [ %800, %793 ], [ %780, %787 ]
  %813 = phi i32 [ %799, %793 ], [ 1, %787 ]
  %814 = load i32, ptr %812, align 4, !tbaa !6
  %815 = add nsw i32 %814, %813
  store i32 %815, ptr %812, align 4, !tbaa !6
  br label %816

816:                                              ; preds = %803, %811, %776, %748
  %817 = icmp eq i32 %768, %5
  br i1 %817, label %5661, label %675, !llvm.loop !969

818:                                              ; preds = %658, %961
  %819 = phi i32 [ 0, %658 ], [ %910, %961 ]
  %820 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %821, label %890

821:                                              ; preds = %818, %880
  %822 = phi i32 [ %889, %880 ], [ 0, %818 ]
  %823 = phi i64 [ %831, %880 ], [ %663, %818 ]
  %824 = phi i64 [ %888, %880 ], [ %662, %818 ]
  %825 = phi i32 [ %886, %880 ], [ %820, %818 ]
  %826 = sub i32 %661, %822
  %827 = tail call i32 @llvm.smin.i32(i32 %826, i32 0)
  %828 = sub i32 %826, %827
  %829 = zext i32 %828 to i64
  %830 = add nuw nsw i64 %829, 1
  %831 = add nsw i64 %823, -1
  %832 = icmp ult i32 %828, 31
  br i1 %832, label %868, label %833

833:                                              ; preds = %821
  %834 = and i64 %830, 8589934560
  %835 = sub i64 %824, %834
  br label %836

836:                                              ; preds = %836, %833
  %837 = phi i64 [ 0, %833 ], [ %860, %836 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %856, %836 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %857, %836 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %858, %836 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %859, %836 ]
  %842 = sub i64 %824, %837
  %843 = getelementptr inbounds i32, ptr %11, i64 %842
  %844 = getelementptr inbounds i32, ptr %843, i64 -7
  %845 = load <8 x i32>, ptr %844, align 4, !tbaa !6
  %846 = shufflevector <8 x i32> %845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %847 = getelementptr inbounds i32, ptr %843, i64 -15
  %848 = load <8 x i32>, ptr %847, align 4, !tbaa !6
  %849 = shufflevector <8 x i32> %848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %850 = getelementptr inbounds i32, ptr %843, i64 -23
  %851 = load <8 x i32>, ptr %850, align 4, !tbaa !6
  %852 = shufflevector <8 x i32> %851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %853 = getelementptr inbounds i32, ptr %843, i64 -31
  %854 = load <8 x i32>, ptr %853, align 4, !tbaa !6
  %855 = shufflevector <8 x i32> %854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %856 = mul <8 x i32> %846, %838
  %857 = mul <8 x i32> %849, %839
  %858 = mul <8 x i32> %852, %840
  %859 = mul <8 x i32> %855, %841
  %860 = add nuw i64 %837, 32
  %861 = icmp eq i64 %860, %834
  br i1 %861, label %862, label %836, !llvm.loop !970

862:                                              ; preds = %836
  %863 = mul <8 x i32> %857, %856
  %864 = mul <8 x i32> %858, %863
  %865 = mul <8 x i32> %859, %864
  %866 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %865)
  %867 = icmp eq i64 %830, %834
  br i1 %867, label %880, label %868

868:                                              ; preds = %821, %862
  %869 = phi i64 [ %824, %821 ], [ %835, %862 ]
  %870 = phi i32 [ 1, %821 ], [ %866, %862 ]
  br label %871

871:                                              ; preds = %868, %871
  %872 = phi i64 [ %877, %871 ], [ %869, %868 ]
  %873 = phi i32 [ %876, %871 ], [ %870, %868 ]
  %874 = getelementptr inbounds i32, ptr %11, i64 %872
  %875 = load i32, ptr %874, align 4, !tbaa !6
  %876 = mul nsw i32 %875, %873
  %877 = add nsw i64 %872, -1
  %878 = trunc i64 %872 to i32
  %879 = icmp sgt i32 %878, 0
  br i1 %879, label %871, label %880, !llvm.loop !971

880:                                              ; preds = %871, %862
  %881 = phi i32 [ %866, %862 ], [ %876, %871 ]
  %882 = and i64 %831, 4294967295
  %883 = getelementptr inbounds i32, ptr %6, i64 %882
  %884 = load i32, ptr %883, align 4, !tbaa !6
  %885 = mul nsw i32 %884, %881
  %886 = add nsw i32 %885, %825
  %887 = icmp sgt i64 %823, 2
  %888 = add nsw i64 %824, -1
  %889 = add i32 %822, 1
  br i1 %887, label %821, label %890, !llvm.loop !972

890:                                              ; preds = %880, %818
  %891 = phi i32 [ %820, %818 ], [ %886, %880 ]
  %892 = icmp slt i32 %891, %5
  br i1 %892, label %895, label %893

893:                                              ; preds = %890
  %894 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

895:                                              ; preds = %890
  %896 = sext i32 %891 to i64
  %897 = getelementptr inbounds double, ptr %639, i64 %896
  %898 = load double, ptr %897, align 8, !tbaa !19
  %899 = fptosi double %898 to i32
  %900 = load i32, ptr %641, align 4, !tbaa !6
  %901 = sitofp i32 %900 to double
  %902 = sitofp i32 %899 to double
  %903 = icmp slt i32 %899, 0
  %904 = fneg fast double %902
  %905 = select i1 %903, double %904, double %902
  %906 = fmul fast double %902, %902
  %907 = fmul fast double %906, %905
  %908 = fadd fast double %907, %901
  %909 = fptosi double %908 to i32
  store i32 %909, ptr %641, align 4, !tbaa !6
  %910 = add nuw nsw i32 %819, 1
  br i1 %660, label %911, label %961

911:                                              ; preds = %895
  %912 = load i32, ptr %4, align 4, !tbaa !6
  %913 = load i32, ptr %12, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %912, %914
  br i1 %915, label %938, label %916

916:                                              ; preds = %911
  %917 = icmp eq i32 %912, %914
  br i1 %917, label %918, label %954

918:                                              ; preds = %916
  store i32 0, ptr %4, align 4, !tbaa !6
  %919 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %919, ptr %6, align 4, !tbaa !6
  br i1 %665, label %961, label %920

920:                                              ; preds = %918, %948
  %921 = phi i64 [ %952, %948 ], [ 1, %918 ]
  %922 = getelementptr inbounds i32, ptr %4, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %12, i64 %921
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, -1
  %927 = icmp slt i32 %923, %926
  br i1 %927, label %928, label %946

928:                                              ; preds = %920
  br i1 %915, label %938, label %929

929:                                              ; preds = %928
  %930 = shl i64 %921, 32
  %931 = add i64 %930, -4294967296
  %932 = ashr exact i64 %931, 32
  %933 = getelementptr inbounds i32, ptr %7, i64 %932
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %921
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = add nsw i32 %936, %934
  store i32 %937, ptr %935, align 4, !tbaa !6
  br label %956

938:                                              ; preds = %911, %928
  %939 = phi i32 [ %923, %928 ], [ %912, %911 ]
  %940 = phi ptr [ %922, %928 ], [ %4, %911 ]
  %941 = phi i64 [ %921, %928 ], [ 0, %911 ]
  %942 = add nsw i32 %939, 1
  store i32 %942, ptr %940, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %7, i64 %941
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %6, i64 %941
  br label %956

946:                                              ; preds = %920
  %947 = icmp eq i32 %923, %926
  br i1 %947, label %948, label %954

948:                                              ; preds = %946
  store i32 0, ptr %922, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %8, i64 %921
  %950 = load i32, ptr %949, align 4, !tbaa !6
  %951 = getelementptr inbounds i32, ptr %6, i64 %921
  store i32 %950, ptr %951, align 4, !tbaa !6
  %952 = add nuw nsw i64 %921, 1
  %953 = icmp eq i64 %952, %663
  br i1 %953, label %961, label %920, !llvm.loop !973

954:                                              ; preds = %916, %946
  %955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

956:                                              ; preds = %929, %938
  %957 = phi ptr [ %945, %938 ], [ %922, %929 ]
  %958 = phi i32 [ %944, %938 ], [ 1, %929 ]
  %959 = load i32, ptr %957, align 4, !tbaa !6
  %960 = add nsw i32 %959, %958
  store i32 %960, ptr %957, align 4, !tbaa !6
  br label %961

961:                                              ; preds = %948, %956, %918, %895
  %962 = icmp eq i32 %910, %5
  br i1 %962, label %5661, label %818, !llvm.loop !974

963:                                              ; preds = %651
  %964 = getelementptr inbounds i32, ptr %3, i64 %19
  %965 = load i32, ptr %964, align 4, !tbaa !6
  %966 = icmp eq i32 %965, 0
  %967 = icmp sgt i32 %5, 0
  br i1 %966, label %977, label %968

968:                                              ; preds = %963
  br i1 %967, label %969, label %5661

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %1123

977:                                              ; preds = %963
  br i1 %967, label %978, label %5661

978:                                              ; preds = %977
  %979 = icmp sgt i32 %13, 1
  %980 = icmp sgt i32 %13, 0
  %981 = add i32 %13, -2
  %982 = zext i32 %981 to i64
  %983 = zext i32 %13 to i64
  %984 = add nuw i32 %5, 1
  %985 = icmp eq i32 %13, 1
  br label %986

986:                                              ; preds = %978, %1121
  %987 = phi i32 [ 0, %978 ], [ %1073, %1121 ]
  %988 = phi double [ 0.000000e+00, %978 ], [ %1072, %1121 ]
  %989 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %979, label %990, label %1059

990:                                              ; preds = %986, %1049
  %991 = phi i32 [ %1058, %1049 ], [ 0, %986 ]
  %992 = phi i64 [ %1000, %1049 ], [ %983, %986 ]
  %993 = phi i64 [ %1057, %1049 ], [ %982, %986 ]
  %994 = phi i32 [ %1055, %1049 ], [ %989, %986 ]
  %995 = sub i32 %981, %991
  %996 = tail call i32 @llvm.smin.i32(i32 %995, i32 0)
  %997 = sub i32 %995, %996
  %998 = zext i32 %997 to i64
  %999 = add nuw nsw i64 %998, 1
  %1000 = add nsw i64 %992, -1
  %1001 = icmp ult i32 %997, 31
  br i1 %1001, label %1037, label %1002

1002:                                             ; preds = %990
  %1003 = and i64 %999, 8589934560
  %1004 = sub i64 %993, %1003
  br label %1005

1005:                                             ; preds = %1005, %1002
  %1006 = phi i64 [ 0, %1002 ], [ %1029, %1005 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1025, %1005 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1026, %1005 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1027, %1005 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1028, %1005 ]
  %1011 = sub i64 %993, %1006
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1013 = getelementptr inbounds i32, ptr %1012, i64 -7
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = getelementptr inbounds i32, ptr %1012, i64 -15
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !6
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1012, i64 -23
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !6
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1012, i64 -31
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !6
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = mul <8 x i32> %1015, %1007
  %1026 = mul <8 x i32> %1018, %1008
  %1027 = mul <8 x i32> %1021, %1009
  %1028 = mul <8 x i32> %1024, %1010
  %1029 = add nuw i64 %1006, 32
  %1030 = icmp eq i64 %1029, %1003
  br i1 %1030, label %1031, label %1005, !llvm.loop !975

1031:                                             ; preds = %1005
  %1032 = mul <8 x i32> %1026, %1025
  %1033 = mul <8 x i32> %1027, %1032
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1034)
  %1036 = icmp eq i64 %999, %1003
  br i1 %1036, label %1049, label %1037

1037:                                             ; preds = %990, %1031
  %1038 = phi i64 [ %993, %990 ], [ %1004, %1031 ]
  %1039 = phi i32 [ 1, %990 ], [ %1035, %1031 ]
  br label %1040

1040:                                             ; preds = %1037, %1040
  %1041 = phi i64 [ %1046, %1040 ], [ %1038, %1037 ]
  %1042 = phi i32 [ %1045, %1040 ], [ %1039, %1037 ]
  %1043 = getelementptr inbounds i32, ptr %9, i64 %1041
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1042
  %1046 = add nsw i64 %1041, -1
  %1047 = trunc i64 %1041 to i32
  %1048 = icmp sgt i32 %1047, 0
  br i1 %1048, label %1040, label %1049, !llvm.loop !976

1049:                                             ; preds = %1040, %1031
  %1050 = phi i32 [ %1035, %1031 ], [ %1045, %1040 ]
  %1051 = and i64 %1000, 4294967295
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !6
  %1054 = mul nsw i32 %1053, %1050
  %1055 = add nsw i32 %1054, %994
  %1056 = icmp sgt i64 %992, 2
  %1057 = add nsw i64 %993, -1
  %1058 = add i32 %991, 1
  br i1 %1056, label %990, label %1059, !llvm.loop !977

1059:                                             ; preds = %1049, %986
  %1060 = phi i32 [ %989, %986 ], [ %1055, %1049 ]
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds double, ptr %639, i64 %1061
  %1063 = load double, ptr %1062, align 8, !tbaa !19
  %1064 = fptosi double %1063 to i32
  %1065 = load i32, ptr %641, align 4, !tbaa !6
  %1066 = icmp slt i32 %1064, 0
  %1067 = mul nsw i32 %1064, %1064
  %1068 = sub nsw i32 0, %1067
  %1069 = select i1 %1066, i32 %1068, i32 %1067
  %1070 = mul i32 %1069, %1064
  %1071 = add nsw i32 %1070, %1065
  store i32 %1071, ptr %641, align 4, !tbaa !6
  %1072 = fadd fast double %988, 1.000000e+00
  %1073 = add nuw nsw i32 %987, 1
  br i1 %980, label %1074, label %1121

1074:                                             ; preds = %1059
  %1075 = load i32, ptr %4, align 4, !tbaa !6
  %1076 = load i32, ptr %12, align 4, !tbaa !6
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1075, %1077
  br i1 %1078, label %1098, label %1079

1079:                                             ; preds = %1074
  %1080 = icmp eq i32 %1075, %1077
  br i1 %1080, label %1081, label %1114

1081:                                             ; preds = %1079
  store i32 0, ptr %4, align 4, !tbaa !6
  %1082 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1082, ptr %6, align 4, !tbaa !6
  br i1 %985, label %1121, label %1083

1083:                                             ; preds = %1081, %1108
  %1084 = phi i64 [ %1112, %1108 ], [ 1, %1081 ]
  %1085 = getelementptr inbounds i32, ptr %4, i64 %1084
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %12, i64 %1084
  %1088 = load i32, ptr %1087, align 4, !tbaa !6
  %1089 = add nsw i32 %1088, -1
  %1090 = icmp slt i32 %1086, %1089
  br i1 %1090, label %1091, label %1106

1091:                                             ; preds = %1083
  br i1 %1078, label %1098, label %1092

1092:                                             ; preds = %1091
  %1093 = getelementptr inbounds i32, ptr %7, i64 %1084
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1084
  %1096 = load i32, ptr %1095, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1094
  store i32 %1097, ptr %1095, align 4, !tbaa !6
  br label %1116

1098:                                             ; preds = %1074, %1091
  %1099 = phi i32 [ %1086, %1091 ], [ %1075, %1074 ]
  %1100 = phi ptr [ %1085, %1091 ], [ %4, %1074 ]
  %1101 = phi i64 [ %1084, %1091 ], [ 0, %1074 ]
  %1102 = add nsw i32 %1099, 1
  store i32 %1102, ptr %1100, align 4, !tbaa !6
  %1103 = getelementptr inbounds i32, ptr %7, i64 %1101
  %1104 = load i32, ptr %1103, align 4, !tbaa !6
  %1105 = getelementptr inbounds i32, ptr %6, i64 %1101
  br label %1116

1106:                                             ; preds = %1083
  %1107 = icmp eq i32 %1086, %1089
  br i1 %1107, label %1108, label %1114

1108:                                             ; preds = %1106
  store i32 0, ptr %1085, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %8, i64 %1084
  %1110 = load i32, ptr %1109, align 4, !tbaa !6
  %1111 = getelementptr inbounds i32, ptr %6, i64 %1084
  store i32 %1110, ptr %1111, align 4, !tbaa !6
  %1112 = add nuw nsw i64 %1084, 1
  %1113 = icmp eq i64 %1112, %983
  br i1 %1113, label %1121, label %1083, !llvm.loop !978

1114:                                             ; preds = %1079, %1106
  %1115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1116:                                             ; preds = %1092, %1098
  %1117 = phi ptr [ %1105, %1098 ], [ %1085, %1092 ]
  %1118 = phi i32 [ %1104, %1098 ], [ 1, %1092 ]
  %1119 = load i32, ptr %1117, align 4, !tbaa !6
  %1120 = add nsw i32 %1119, %1118
  store i32 %1120, ptr %1117, align 4, !tbaa !6
  br label %1121

1121:                                             ; preds = %1108, %1116, %1081, %1059
  %1122 = icmp eq i32 %1073, %5
  br i1 %1122, label %5661, label %986, !llvm.loop !979

1123:                                             ; preds = %969, %1263
  %1124 = phi i32 [ 0, %969 ], [ %1212, %1263 ]
  %1125 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %1126, label %1195

1126:                                             ; preds = %1123, %1185
  %1127 = phi i32 [ %1194, %1185 ], [ 0, %1123 ]
  %1128 = phi i64 [ %1136, %1185 ], [ %974, %1123 ]
  %1129 = phi i64 [ %1193, %1185 ], [ %973, %1123 ]
  %1130 = phi i32 [ %1191, %1185 ], [ %1125, %1123 ]
  %1131 = sub i32 %972, %1127
  %1132 = tail call i32 @llvm.smin.i32(i32 %1131, i32 0)
  %1133 = sub i32 %1131, %1132
  %1134 = zext i32 %1133 to i64
  %1135 = add nuw nsw i64 %1134, 1
  %1136 = add nsw i64 %1128, -1
  %1137 = icmp ult i32 %1133, 31
  br i1 %1137, label %1173, label %1138

1138:                                             ; preds = %1126
  %1139 = and i64 %1135, 8589934560
  %1140 = sub i64 %1129, %1139
  br label %1141

1141:                                             ; preds = %1141, %1138
  %1142 = phi i64 [ 0, %1138 ], [ %1165, %1141 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1161, %1141 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1162, %1141 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1163, %1141 ]
  %1146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1164, %1141 ]
  %1147 = sub i64 %1129, %1142
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1147
  %1149 = getelementptr inbounds i32, ptr %1148, i64 -7
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !6
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = getelementptr inbounds i32, ptr %1148, i64 -15
  %1153 = load <8 x i32>, ptr %1152, align 4, !tbaa !6
  %1154 = shufflevector <8 x i32> %1153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1155 = getelementptr inbounds i32, ptr %1148, i64 -23
  %1156 = load <8 x i32>, ptr %1155, align 4, !tbaa !6
  %1157 = shufflevector <8 x i32> %1156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1158 = getelementptr inbounds i32, ptr %1148, i64 -31
  %1159 = load <8 x i32>, ptr %1158, align 4, !tbaa !6
  %1160 = shufflevector <8 x i32> %1159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1161 = mul <8 x i32> %1151, %1143
  %1162 = mul <8 x i32> %1154, %1144
  %1163 = mul <8 x i32> %1157, %1145
  %1164 = mul <8 x i32> %1160, %1146
  %1165 = add nuw i64 %1142, 32
  %1166 = icmp eq i64 %1165, %1139
  br i1 %1166, label %1167, label %1141, !llvm.loop !980

1167:                                             ; preds = %1141
  %1168 = mul <8 x i32> %1162, %1161
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = mul <8 x i32> %1164, %1169
  %1171 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1170)
  %1172 = icmp eq i64 %1135, %1139
  br i1 %1172, label %1185, label %1173

1173:                                             ; preds = %1126, %1167
  %1174 = phi i64 [ %1129, %1126 ], [ %1140, %1167 ]
  %1175 = phi i32 [ 1, %1126 ], [ %1171, %1167 ]
  br label %1176

1176:                                             ; preds = %1173, %1176
  %1177 = phi i64 [ %1182, %1176 ], [ %1174, %1173 ]
  %1178 = phi i32 [ %1181, %1176 ], [ %1175, %1173 ]
  %1179 = getelementptr inbounds i32, ptr %11, i64 %1177
  %1180 = load i32, ptr %1179, align 4, !tbaa !6
  %1181 = mul nsw i32 %1180, %1178
  %1182 = add nsw i64 %1177, -1
  %1183 = trunc i64 %1177 to i32
  %1184 = icmp sgt i32 %1183, 0
  br i1 %1184, label %1176, label %1185, !llvm.loop !981

1185:                                             ; preds = %1176, %1167
  %1186 = phi i32 [ %1171, %1167 ], [ %1181, %1176 ]
  %1187 = and i64 %1136, 4294967295
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !6
  %1190 = mul nsw i32 %1189, %1186
  %1191 = add nsw i32 %1190, %1130
  %1192 = icmp sgt i64 %1128, 2
  %1193 = add nsw i64 %1129, -1
  %1194 = add i32 %1127, 1
  br i1 %1192, label %1126, label %1195, !llvm.loop !982

1195:                                             ; preds = %1185, %1123
  %1196 = phi i32 [ %1125, %1123 ], [ %1191, %1185 ]
  %1197 = icmp slt i32 %1196, %5
  br i1 %1197, label %1200, label %1198

1198:                                             ; preds = %1195
  %1199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1200:                                             ; preds = %1195
  %1201 = sext i32 %1196 to i64
  %1202 = getelementptr inbounds double, ptr %639, i64 %1201
  %1203 = load double, ptr %1202, align 8, !tbaa !19
  %1204 = fptosi double %1203 to i32
  %1205 = load i32, ptr %641, align 4, !tbaa !6
  %1206 = icmp slt i32 %1204, 0
  %1207 = mul nsw i32 %1204, %1204
  %1208 = sub nsw i32 0, %1207
  %1209 = select i1 %1206, i32 %1208, i32 %1207
  %1210 = mul i32 %1209, %1204
  %1211 = add nsw i32 %1210, %1205
  store i32 %1211, ptr %641, align 4, !tbaa !6
  %1212 = add nuw nsw i32 %1124, 1
  br i1 %971, label %1213, label %1263

1213:                                             ; preds = %1200
  %1214 = load i32, ptr %4, align 4, !tbaa !6
  %1215 = load i32, ptr %12, align 4, !tbaa !6
  %1216 = add nsw i32 %1215, -1
  %1217 = icmp slt i32 %1214, %1216
  br i1 %1217, label %1240, label %1218

1218:                                             ; preds = %1213
  %1219 = icmp eq i32 %1214, %1216
  br i1 %1219, label %1220, label %1256

1220:                                             ; preds = %1218
  store i32 0, ptr %4, align 4, !tbaa !6
  %1221 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1221, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1263, label %1222

1222:                                             ; preds = %1220, %1250
  %1223 = phi i64 [ %1254, %1250 ], [ 1, %1220 ]
  %1224 = getelementptr inbounds i32, ptr %4, i64 %1223
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = getelementptr inbounds i32, ptr %12, i64 %1223
  %1227 = load i32, ptr %1226, align 4, !tbaa !6
  %1228 = add nsw i32 %1227, -1
  %1229 = icmp slt i32 %1225, %1228
  br i1 %1229, label %1230, label %1248

1230:                                             ; preds = %1222
  br i1 %1217, label %1240, label %1231

1231:                                             ; preds = %1230
  %1232 = shl i64 %1223, 32
  %1233 = add i64 %1232, -4294967296
  %1234 = ashr exact i64 %1233, 32
  %1235 = getelementptr inbounds i32, ptr %7, i64 %1234
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1223
  %1238 = load i32, ptr %1237, align 4, !tbaa !6
  %1239 = add nsw i32 %1238, %1236
  store i32 %1239, ptr %1237, align 4, !tbaa !6
  br label %1258

1240:                                             ; preds = %1213, %1230
  %1241 = phi i32 [ %1225, %1230 ], [ %1214, %1213 ]
  %1242 = phi ptr [ %1224, %1230 ], [ %4, %1213 ]
  %1243 = phi i64 [ %1223, %1230 ], [ 0, %1213 ]
  %1244 = add nsw i32 %1241, 1
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %7, i64 %1243
  %1246 = load i32, ptr %1245, align 4, !tbaa !6
  %1247 = getelementptr inbounds i32, ptr %6, i64 %1243
  br label %1258

1248:                                             ; preds = %1222
  %1249 = icmp eq i32 %1225, %1228
  br i1 %1249, label %1250, label %1256

1250:                                             ; preds = %1248
  store i32 0, ptr %1224, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %8, i64 %1223
  %1252 = load i32, ptr %1251, align 4, !tbaa !6
  %1253 = getelementptr inbounds i32, ptr %6, i64 %1223
  store i32 %1252, ptr %1253, align 4, !tbaa !6
  %1254 = add nuw nsw i64 %1223, 1
  %1255 = icmp eq i64 %1254, %974
  br i1 %1255, label %1263, label %1222, !llvm.loop !983

1256:                                             ; preds = %1218, %1248
  %1257 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1258:                                             ; preds = %1231, %1240
  %1259 = phi ptr [ %1247, %1240 ], [ %1224, %1231 ]
  %1260 = phi i32 [ %1246, %1240 ], [ 1, %1231 ]
  %1261 = load i32, ptr %1259, align 4, !tbaa !6
  %1262 = add nsw i32 %1261, %1260
  store i32 %1262, ptr %1259, align 4, !tbaa !6
  br label %1263

1263:                                             ; preds = %1250, %1258, %1220, %1200
  %1264 = icmp eq i32 %1212, %5
  br i1 %1264, label %5661, label %1123, !llvm.loop !984

1265:                                             ; preds = %651
  %1266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

1267:                                             ; preds = %18
  %1268 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  %1270 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1271 = load ptr, ptr %1270, align 8, !tbaa !10
  store i8 0, ptr %1271, align 1, !tbaa !12
  %1272 = icmp eq i32 %13, 0
  br i1 %1272, label %1273, label %1281

1273:                                             ; preds = %1267
  %1274 = load double, ptr %1269, align 8, !tbaa !19
  %1275 = fptosi double %1274 to i8
  %1276 = icmp slt i8 %1275, 0
  %1277 = mul i8 %1275, %1275
  %1278 = sub i8 0, %1277
  %1279 = select i1 %1276, i8 %1278, i8 %1277
  %1280 = mul i8 %1279, %1275
  store i8 %1280, ptr %1271, align 1, !tbaa !12
  br label %5661

1281:                                             ; preds = %1267
  switch i32 %1, label %1895 [
    i32 1, label %1282
    i32 0, label %1593
  ]

1282:                                             ; preds = %1281
  %1283 = getelementptr inbounds i32, ptr %3, i64 %19
  %1284 = load i32, ptr %1283, align 4, !tbaa !6
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp sgt i32 %5, 0
  br i1 %1285, label %1296, label %1287

1287:                                             ; preds = %1282
  br i1 %1286, label %1288, label %5661

1288:                                             ; preds = %1287
  %1289 = icmp sgt i32 %13, 1
  %1290 = icmp sgt i32 %13, 0
  %1291 = add i32 %13, -2
  %1292 = zext i32 %1291 to i64
  %1293 = zext i32 %13 to i64
  %1294 = add nuw i32 %5, 1
  %1295 = icmp eq i32 %13, 1
  br label %1448

1296:                                             ; preds = %1282
  br i1 %1286, label %1297, label %5661

1297:                                             ; preds = %1296
  %1298 = icmp sgt i32 %13, 1
  %1299 = icmp sgt i32 %13, 0
  %1300 = add i32 %13, -2
  %1301 = zext i32 %1300 to i64
  %1302 = zext i32 %13 to i64
  %1303 = add nuw i32 %5, 1
  %1304 = icmp eq i32 %13, 1
  br label %1305

1305:                                             ; preds = %1297, %1446
  %1306 = phi i32 [ 0, %1297 ], [ %1398, %1446 ]
  %1307 = phi double [ 0.000000e+00, %1297 ], [ %1397, %1446 ]
  %1308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1309, label %1378

1309:                                             ; preds = %1305, %1368
  %1310 = phi i32 [ %1377, %1368 ], [ 0, %1305 ]
  %1311 = phi i64 [ %1319, %1368 ], [ %1302, %1305 ]
  %1312 = phi i64 [ %1376, %1368 ], [ %1301, %1305 ]
  %1313 = phi i32 [ %1374, %1368 ], [ %1308, %1305 ]
  %1314 = sub i32 %1300, %1310
  %1315 = tail call i32 @llvm.smin.i32(i32 %1314, i32 0)
  %1316 = sub i32 %1314, %1315
  %1317 = zext i32 %1316 to i64
  %1318 = add nuw nsw i64 %1317, 1
  %1319 = add nsw i64 %1311, -1
  %1320 = icmp ult i32 %1316, 31
  br i1 %1320, label %1356, label %1321

1321:                                             ; preds = %1309
  %1322 = and i64 %1318, 8589934560
  %1323 = sub i64 %1312, %1322
  br label %1324

1324:                                             ; preds = %1324, %1321
  %1325 = phi i64 [ 0, %1321 ], [ %1348, %1324 ]
  %1326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1344, %1324 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1345, %1324 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1346, %1324 ]
  %1329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1347, %1324 ]
  %1330 = sub i64 %1312, %1325
  %1331 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1332 = getelementptr inbounds i32, ptr %1331, i64 -7
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !6
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = getelementptr inbounds i32, ptr %1331, i64 -15
  %1336 = load <8 x i32>, ptr %1335, align 4, !tbaa !6
  %1337 = shufflevector <8 x i32> %1336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1338 = getelementptr inbounds i32, ptr %1331, i64 -23
  %1339 = load <8 x i32>, ptr %1338, align 4, !tbaa !6
  %1340 = shufflevector <8 x i32> %1339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1341 = getelementptr inbounds i32, ptr %1331, i64 -31
  %1342 = load <8 x i32>, ptr %1341, align 4, !tbaa !6
  %1343 = shufflevector <8 x i32> %1342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1344 = mul <8 x i32> %1334, %1326
  %1345 = mul <8 x i32> %1337, %1327
  %1346 = mul <8 x i32> %1340, %1328
  %1347 = mul <8 x i32> %1343, %1329
  %1348 = add nuw i64 %1325, 32
  %1349 = icmp eq i64 %1348, %1322
  br i1 %1349, label %1350, label %1324, !llvm.loop !985

1350:                                             ; preds = %1324
  %1351 = mul <8 x i32> %1345, %1344
  %1352 = mul <8 x i32> %1346, %1351
  %1353 = mul <8 x i32> %1347, %1352
  %1354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1353)
  %1355 = icmp eq i64 %1318, %1322
  br i1 %1355, label %1368, label %1356

1356:                                             ; preds = %1309, %1350
  %1357 = phi i64 [ %1312, %1309 ], [ %1323, %1350 ]
  %1358 = phi i32 [ 1, %1309 ], [ %1354, %1350 ]
  br label %1359

1359:                                             ; preds = %1356, %1359
  %1360 = phi i64 [ %1365, %1359 ], [ %1357, %1356 ]
  %1361 = phi i32 [ %1364, %1359 ], [ %1358, %1356 ]
  %1362 = getelementptr inbounds i32, ptr %9, i64 %1360
  %1363 = load i32, ptr %1362, align 4, !tbaa !6
  %1364 = mul nsw i32 %1363, %1361
  %1365 = add nsw i64 %1360, -1
  %1366 = trunc i64 %1360 to i32
  %1367 = icmp sgt i32 %1366, 0
  br i1 %1367, label %1359, label %1368, !llvm.loop !986

1368:                                             ; preds = %1359, %1350
  %1369 = phi i32 [ %1354, %1350 ], [ %1364, %1359 ]
  %1370 = and i64 %1319, 4294967295
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1370
  %1372 = load i32, ptr %1371, align 4, !tbaa !6
  %1373 = mul nsw i32 %1372, %1369
  %1374 = add nsw i32 %1373, %1313
  %1375 = icmp sgt i64 %1311, 2
  %1376 = add nsw i64 %1312, -1
  %1377 = add i32 %1310, 1
  br i1 %1375, label %1309, label %1378, !llvm.loop !987

1378:                                             ; preds = %1368, %1305
  %1379 = phi i32 [ %1308, %1305 ], [ %1374, %1368 ]
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds double, ptr %2, i64 %1380
  %1382 = load double, ptr %1381, align 8, !tbaa !19
  %1383 = getelementptr inbounds double, ptr %1269, i64 %1380
  %1384 = load double, ptr %1383, align 8, !tbaa !19
  %1385 = fptosi double %1384 to i8
  %1386 = load i8, ptr %1271, align 1, !tbaa !12
  %1387 = sitofp i8 %1386 to double
  %1388 = sitofp i8 %1385 to double
  %1389 = fmul fast double %1382, %1388
  %1390 = fcmp fast olt double %1389, 0.000000e+00
  %1391 = fneg fast double %1389
  %1392 = select nnan ninf i1 %1390, double %1391, double %1389
  %1393 = fmul fast double %1389, %1389
  %1394 = fmul fast double %1393, %1392
  %1395 = fadd fast double %1394, %1387
  %1396 = fptosi double %1395 to i8
  store i8 %1396, ptr %1271, align 1, !tbaa !12
  %1397 = fadd fast double %1382, %1307
  %1398 = add nuw nsw i32 %1306, 1
  br i1 %1299, label %1399, label %1446

1399:                                             ; preds = %1378
  %1400 = load i32, ptr %4, align 4, !tbaa !6
  %1401 = load i32, ptr %12, align 4, !tbaa !6
  %1402 = add nsw i32 %1401, -1
  %1403 = icmp slt i32 %1400, %1402
  br i1 %1403, label %1423, label %1404

1404:                                             ; preds = %1399
  %1405 = icmp eq i32 %1400, %1402
  br i1 %1405, label %1406, label %1439

1406:                                             ; preds = %1404
  store i32 0, ptr %4, align 4, !tbaa !6
  %1407 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1407, ptr %6, align 4, !tbaa !6
  br i1 %1304, label %1446, label %1408

1408:                                             ; preds = %1406, %1433
  %1409 = phi i64 [ %1437, %1433 ], [ 1, %1406 ]
  %1410 = getelementptr inbounds i32, ptr %4, i64 %1409
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %12, i64 %1409
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = add nsw i32 %1413, -1
  %1415 = icmp slt i32 %1411, %1414
  br i1 %1415, label %1416, label %1431

1416:                                             ; preds = %1408
  br i1 %1403, label %1423, label %1417

1417:                                             ; preds = %1416
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1409
  %1419 = load i32, ptr %1418, align 4, !tbaa !6
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1409
  %1421 = load i32, ptr %1420, align 4, !tbaa !6
  %1422 = add nsw i32 %1421, %1419
  store i32 %1422, ptr %1420, align 4, !tbaa !6
  br label %1441

1423:                                             ; preds = %1399, %1416
  %1424 = phi i32 [ %1411, %1416 ], [ %1400, %1399 ]
  %1425 = phi ptr [ %1410, %1416 ], [ %4, %1399 ]
  %1426 = phi i64 [ %1409, %1416 ], [ 0, %1399 ]
  %1427 = add nsw i32 %1424, 1
  store i32 %1427, ptr %1425, align 4, !tbaa !6
  %1428 = getelementptr inbounds i32, ptr %7, i64 %1426
  %1429 = load i32, ptr %1428, align 4, !tbaa !6
  %1430 = getelementptr inbounds i32, ptr %6, i64 %1426
  br label %1441

1431:                                             ; preds = %1408
  %1432 = icmp eq i32 %1411, %1414
  br i1 %1432, label %1433, label %1439

1433:                                             ; preds = %1431
  store i32 0, ptr %1410, align 4, !tbaa !6
  %1434 = getelementptr inbounds i32, ptr %8, i64 %1409
  %1435 = load i32, ptr %1434, align 4, !tbaa !6
  %1436 = getelementptr inbounds i32, ptr %6, i64 %1409
  store i32 %1435, ptr %1436, align 4, !tbaa !6
  %1437 = add nuw nsw i64 %1409, 1
  %1438 = icmp eq i64 %1437, %1302
  br i1 %1438, label %1446, label %1408, !llvm.loop !988

1439:                                             ; preds = %1404, %1431
  %1440 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1441:                                             ; preds = %1417, %1423
  %1442 = phi ptr [ %1430, %1423 ], [ %1410, %1417 ]
  %1443 = phi i32 [ %1429, %1423 ], [ 1, %1417 ]
  %1444 = load i32, ptr %1442, align 4, !tbaa !6
  %1445 = add nsw i32 %1444, %1443
  store i32 %1445, ptr %1442, align 4, !tbaa !6
  br label %1446

1446:                                             ; preds = %1433, %1441, %1406, %1378
  %1447 = icmp eq i32 %1398, %5
  br i1 %1447, label %5661, label %1305, !llvm.loop !989

1448:                                             ; preds = %1288, %1591
  %1449 = phi i32 [ 0, %1288 ], [ %1540, %1591 ]
  %1450 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1289, label %1451, label %1520

1451:                                             ; preds = %1448, %1510
  %1452 = phi i32 [ %1519, %1510 ], [ 0, %1448 ]
  %1453 = phi i64 [ %1461, %1510 ], [ %1293, %1448 ]
  %1454 = phi i64 [ %1518, %1510 ], [ %1292, %1448 ]
  %1455 = phi i32 [ %1516, %1510 ], [ %1450, %1448 ]
  %1456 = sub i32 %1291, %1452
  %1457 = tail call i32 @llvm.smin.i32(i32 %1456, i32 0)
  %1458 = sub i32 %1456, %1457
  %1459 = zext i32 %1458 to i64
  %1460 = add nuw nsw i64 %1459, 1
  %1461 = add nsw i64 %1453, -1
  %1462 = icmp ult i32 %1458, 31
  br i1 %1462, label %1498, label %1463

1463:                                             ; preds = %1451
  %1464 = and i64 %1460, 8589934560
  %1465 = sub i64 %1454, %1464
  br label %1466

1466:                                             ; preds = %1466, %1463
  %1467 = phi i64 [ 0, %1463 ], [ %1490, %1466 ]
  %1468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1486, %1466 ]
  %1469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1487, %1466 ]
  %1470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1488, %1466 ]
  %1471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1489, %1466 ]
  %1472 = sub i64 %1454, %1467
  %1473 = getelementptr inbounds i32, ptr %11, i64 %1472
  %1474 = getelementptr inbounds i32, ptr %1473, i64 -7
  %1475 = load <8 x i32>, ptr %1474, align 4, !tbaa !6
  %1476 = shufflevector <8 x i32> %1475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1477 = getelementptr inbounds i32, ptr %1473, i64 -15
  %1478 = load <8 x i32>, ptr %1477, align 4, !tbaa !6
  %1479 = shufflevector <8 x i32> %1478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1480 = getelementptr inbounds i32, ptr %1473, i64 -23
  %1481 = load <8 x i32>, ptr %1480, align 4, !tbaa !6
  %1482 = shufflevector <8 x i32> %1481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1483 = getelementptr inbounds i32, ptr %1473, i64 -31
  %1484 = load <8 x i32>, ptr %1483, align 4, !tbaa !6
  %1485 = shufflevector <8 x i32> %1484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1486 = mul <8 x i32> %1476, %1468
  %1487 = mul <8 x i32> %1479, %1469
  %1488 = mul <8 x i32> %1482, %1470
  %1489 = mul <8 x i32> %1485, %1471
  %1490 = add nuw i64 %1467, 32
  %1491 = icmp eq i64 %1490, %1464
  br i1 %1491, label %1492, label %1466, !llvm.loop !990

1492:                                             ; preds = %1466
  %1493 = mul <8 x i32> %1487, %1486
  %1494 = mul <8 x i32> %1488, %1493
  %1495 = mul <8 x i32> %1489, %1494
  %1496 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1495)
  %1497 = icmp eq i64 %1460, %1464
  br i1 %1497, label %1510, label %1498

1498:                                             ; preds = %1451, %1492
  %1499 = phi i64 [ %1454, %1451 ], [ %1465, %1492 ]
  %1500 = phi i32 [ 1, %1451 ], [ %1496, %1492 ]
  br label %1501

1501:                                             ; preds = %1498, %1501
  %1502 = phi i64 [ %1507, %1501 ], [ %1499, %1498 ]
  %1503 = phi i32 [ %1506, %1501 ], [ %1500, %1498 ]
  %1504 = getelementptr inbounds i32, ptr %11, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !6
  %1506 = mul nsw i32 %1505, %1503
  %1507 = add nsw i64 %1502, -1
  %1508 = trunc i64 %1502 to i32
  %1509 = icmp sgt i32 %1508, 0
  br i1 %1509, label %1501, label %1510, !llvm.loop !991

1510:                                             ; preds = %1501, %1492
  %1511 = phi i32 [ %1496, %1492 ], [ %1506, %1501 ]
  %1512 = and i64 %1461, 4294967295
  %1513 = getelementptr inbounds i32, ptr %6, i64 %1512
  %1514 = load i32, ptr %1513, align 4, !tbaa !6
  %1515 = mul nsw i32 %1514, %1511
  %1516 = add nsw i32 %1515, %1455
  %1517 = icmp sgt i64 %1453, 2
  %1518 = add nsw i64 %1454, -1
  %1519 = add i32 %1452, 1
  br i1 %1517, label %1451, label %1520, !llvm.loop !992

1520:                                             ; preds = %1510, %1448
  %1521 = phi i32 [ %1450, %1448 ], [ %1516, %1510 ]
  %1522 = icmp slt i32 %1521, %5
  br i1 %1522, label %1525, label %1523

1523:                                             ; preds = %1520
  %1524 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1525:                                             ; preds = %1520
  %1526 = sext i32 %1521 to i64
  %1527 = getelementptr inbounds double, ptr %1269, i64 %1526
  %1528 = load double, ptr %1527, align 8, !tbaa !19
  %1529 = fptosi double %1528 to i8
  %1530 = load i8, ptr %1271, align 1, !tbaa !12
  %1531 = sitofp i8 %1530 to double
  %1532 = sitofp i8 %1529 to double
  %1533 = icmp slt i8 %1529, 0
  %1534 = fneg fast double %1532
  %1535 = select i1 %1533, double %1534, double %1532
  %1536 = fmul fast double %1532, %1532
  %1537 = fmul fast double %1536, %1535
  %1538 = fadd fast double %1537, %1531
  %1539 = fptosi double %1538 to i8
  store i8 %1539, ptr %1271, align 1, !tbaa !12
  %1540 = add nuw nsw i32 %1449, 1
  br i1 %1290, label %1541, label %1591

1541:                                             ; preds = %1525
  %1542 = load i32, ptr %4, align 4, !tbaa !6
  %1543 = load i32, ptr %12, align 4, !tbaa !6
  %1544 = add nsw i32 %1543, -1
  %1545 = icmp slt i32 %1542, %1544
  br i1 %1545, label %1568, label %1546

1546:                                             ; preds = %1541
  %1547 = icmp eq i32 %1542, %1544
  br i1 %1547, label %1548, label %1584

1548:                                             ; preds = %1546
  store i32 0, ptr %4, align 4, !tbaa !6
  %1549 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1549, ptr %6, align 4, !tbaa !6
  br i1 %1295, label %1591, label %1550

1550:                                             ; preds = %1548, %1578
  %1551 = phi i64 [ %1582, %1578 ], [ 1, %1548 ]
  %1552 = getelementptr inbounds i32, ptr %4, i64 %1551
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %12, i64 %1551
  %1555 = load i32, ptr %1554, align 4, !tbaa !6
  %1556 = add nsw i32 %1555, -1
  %1557 = icmp slt i32 %1553, %1556
  br i1 %1557, label %1558, label %1576

1558:                                             ; preds = %1550
  br i1 %1545, label %1568, label %1559

1559:                                             ; preds = %1558
  %1560 = shl i64 %1551, 32
  %1561 = add i64 %1560, -4294967296
  %1562 = ashr exact i64 %1561, 32
  %1563 = getelementptr inbounds i32, ptr %7, i64 %1562
  %1564 = load i32, ptr %1563, align 4, !tbaa !6
  %1565 = getelementptr inbounds i32, ptr %6, i64 %1551
  %1566 = load i32, ptr %1565, align 4, !tbaa !6
  %1567 = add nsw i32 %1566, %1564
  store i32 %1567, ptr %1565, align 4, !tbaa !6
  br label %1586

1568:                                             ; preds = %1541, %1558
  %1569 = phi i32 [ %1553, %1558 ], [ %1542, %1541 ]
  %1570 = phi ptr [ %1552, %1558 ], [ %4, %1541 ]
  %1571 = phi i64 [ %1551, %1558 ], [ 0, %1541 ]
  %1572 = add nsw i32 %1569, 1
  store i32 %1572, ptr %1570, align 4, !tbaa !6
  %1573 = getelementptr inbounds i32, ptr %7, i64 %1571
  %1574 = load i32, ptr %1573, align 4, !tbaa !6
  %1575 = getelementptr inbounds i32, ptr %6, i64 %1571
  br label %1586

1576:                                             ; preds = %1550
  %1577 = icmp eq i32 %1553, %1556
  br i1 %1577, label %1578, label %1584

1578:                                             ; preds = %1576
  store i32 0, ptr %1552, align 4, !tbaa !6
  %1579 = getelementptr inbounds i32, ptr %8, i64 %1551
  %1580 = load i32, ptr %1579, align 4, !tbaa !6
  %1581 = getelementptr inbounds i32, ptr %6, i64 %1551
  store i32 %1580, ptr %1581, align 4, !tbaa !6
  %1582 = add nuw nsw i64 %1551, 1
  %1583 = icmp eq i64 %1582, %1293
  br i1 %1583, label %1591, label %1550, !llvm.loop !993

1584:                                             ; preds = %1546, %1576
  %1585 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1586:                                             ; preds = %1559, %1568
  %1587 = phi ptr [ %1575, %1568 ], [ %1552, %1559 ]
  %1588 = phi i32 [ %1574, %1568 ], [ 1, %1559 ]
  %1589 = load i32, ptr %1587, align 4, !tbaa !6
  %1590 = add nsw i32 %1589, %1588
  store i32 %1590, ptr %1587, align 4, !tbaa !6
  br label %1591

1591:                                             ; preds = %1578, %1586, %1548, %1525
  %1592 = icmp eq i32 %1540, %5
  br i1 %1592, label %5661, label %1448, !llvm.loop !994

1593:                                             ; preds = %1281
  %1594 = getelementptr inbounds i32, ptr %3, i64 %19
  %1595 = load i32, ptr %1594, align 4, !tbaa !6
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp sgt i32 %5, 0
  br i1 %1596, label %1607, label %1598

1598:                                             ; preds = %1593
  br i1 %1597, label %1599, label %5661

1599:                                             ; preds = %1598
  %1600 = icmp sgt i32 %13, 1
  %1601 = icmp sgt i32 %13, 0
  %1602 = add i32 %13, -2
  %1603 = zext i32 %1602 to i64
  %1604 = zext i32 %13 to i64
  %1605 = add nuw i32 %5, 1
  %1606 = icmp eq i32 %13, 1
  br label %1753

1607:                                             ; preds = %1593
  br i1 %1597, label %1608, label %5661

1608:                                             ; preds = %1607
  %1609 = icmp sgt i32 %13, 1
  %1610 = icmp sgt i32 %13, 0
  %1611 = add i32 %13, -2
  %1612 = zext i32 %1611 to i64
  %1613 = zext i32 %13 to i64
  %1614 = add nuw i32 %5, 1
  %1615 = icmp eq i32 %13, 1
  br label %1616

1616:                                             ; preds = %1608, %1751
  %1617 = phi i32 [ 0, %1608 ], [ %1703, %1751 ]
  %1618 = phi double [ 0.000000e+00, %1608 ], [ %1702, %1751 ]
  %1619 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1620, label %1689

1620:                                             ; preds = %1616, %1679
  %1621 = phi i32 [ %1688, %1679 ], [ 0, %1616 ]
  %1622 = phi i64 [ %1630, %1679 ], [ %1613, %1616 ]
  %1623 = phi i64 [ %1687, %1679 ], [ %1612, %1616 ]
  %1624 = phi i32 [ %1685, %1679 ], [ %1619, %1616 ]
  %1625 = sub i32 %1611, %1621
  %1626 = tail call i32 @llvm.smin.i32(i32 %1625, i32 0)
  %1627 = sub i32 %1625, %1626
  %1628 = zext i32 %1627 to i64
  %1629 = add nuw nsw i64 %1628, 1
  %1630 = add nsw i64 %1622, -1
  %1631 = icmp ult i32 %1627, 31
  br i1 %1631, label %1667, label %1632

1632:                                             ; preds = %1620
  %1633 = and i64 %1629, 8589934560
  %1634 = sub i64 %1623, %1633
  br label %1635

1635:                                             ; preds = %1635, %1632
  %1636 = phi i64 [ 0, %1632 ], [ %1659, %1635 ]
  %1637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1655, %1635 ]
  %1638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1656, %1635 ]
  %1639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1657, %1635 ]
  %1640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1658, %1635 ]
  %1641 = sub i64 %1623, %1636
  %1642 = getelementptr inbounds i32, ptr %9, i64 %1641
  %1643 = getelementptr inbounds i32, ptr %1642, i64 -7
  %1644 = load <8 x i32>, ptr %1643, align 4, !tbaa !6
  %1645 = shufflevector <8 x i32> %1644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1646 = getelementptr inbounds i32, ptr %1642, i64 -15
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !6
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = getelementptr inbounds i32, ptr %1642, i64 -23
  %1650 = load <8 x i32>, ptr %1649, align 4, !tbaa !6
  %1651 = shufflevector <8 x i32> %1650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1652 = getelementptr inbounds i32, ptr %1642, i64 -31
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = mul <8 x i32> %1645, %1637
  %1656 = mul <8 x i32> %1648, %1638
  %1657 = mul <8 x i32> %1651, %1639
  %1658 = mul <8 x i32> %1654, %1640
  %1659 = add nuw i64 %1636, 32
  %1660 = icmp eq i64 %1659, %1633
  br i1 %1660, label %1661, label %1635, !llvm.loop !995

1661:                                             ; preds = %1635
  %1662 = mul <8 x i32> %1656, %1655
  %1663 = mul <8 x i32> %1657, %1662
  %1664 = mul <8 x i32> %1658, %1663
  %1665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1664)
  %1666 = icmp eq i64 %1629, %1633
  br i1 %1666, label %1679, label %1667

1667:                                             ; preds = %1620, %1661
  %1668 = phi i64 [ %1623, %1620 ], [ %1634, %1661 ]
  %1669 = phi i32 [ 1, %1620 ], [ %1665, %1661 ]
  br label %1670

1670:                                             ; preds = %1667, %1670
  %1671 = phi i64 [ %1676, %1670 ], [ %1668, %1667 ]
  %1672 = phi i32 [ %1675, %1670 ], [ %1669, %1667 ]
  %1673 = getelementptr inbounds i32, ptr %9, i64 %1671
  %1674 = load i32, ptr %1673, align 4, !tbaa !6
  %1675 = mul nsw i32 %1674, %1672
  %1676 = add nsw i64 %1671, -1
  %1677 = trunc i64 %1671 to i32
  %1678 = icmp sgt i32 %1677, 0
  br i1 %1678, label %1670, label %1679, !llvm.loop !996

1679:                                             ; preds = %1670, %1661
  %1680 = phi i32 [ %1665, %1661 ], [ %1675, %1670 ]
  %1681 = and i64 %1630, 4294967295
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = mul nsw i32 %1683, %1680
  %1685 = add nsw i32 %1684, %1624
  %1686 = icmp sgt i64 %1622, 2
  %1687 = add nsw i64 %1623, -1
  %1688 = add i32 %1621, 1
  br i1 %1686, label %1620, label %1689, !llvm.loop !997

1689:                                             ; preds = %1679, %1616
  %1690 = phi i32 [ %1619, %1616 ], [ %1685, %1679 ]
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds double, ptr %1269, i64 %1691
  %1693 = load double, ptr %1692, align 8, !tbaa !19
  %1694 = fptosi double %1693 to i8
  %1695 = load i8, ptr %1271, align 1, !tbaa !12
  %1696 = icmp slt i8 %1694, 0
  %1697 = mul i8 %1694, %1694
  %1698 = sub i8 0, %1697
  %1699 = select i1 %1696, i8 %1698, i8 %1697
  %1700 = mul i8 %1699, %1694
  %1701 = add i8 %1700, %1695
  store i8 %1701, ptr %1271, align 1, !tbaa !12
  %1702 = fadd fast double %1618, 1.000000e+00
  %1703 = add nuw nsw i32 %1617, 1
  br i1 %1610, label %1704, label %1751

1704:                                             ; preds = %1689
  %1705 = load i32, ptr %4, align 4, !tbaa !6
  %1706 = load i32, ptr %12, align 4, !tbaa !6
  %1707 = add nsw i32 %1706, -1
  %1708 = icmp slt i32 %1705, %1707
  br i1 %1708, label %1728, label %1709

1709:                                             ; preds = %1704
  %1710 = icmp eq i32 %1705, %1707
  br i1 %1710, label %1711, label %1744

1711:                                             ; preds = %1709
  store i32 0, ptr %4, align 4, !tbaa !6
  %1712 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1712, ptr %6, align 4, !tbaa !6
  br i1 %1615, label %1751, label %1713

1713:                                             ; preds = %1711, %1738
  %1714 = phi i64 [ %1742, %1738 ], [ 1, %1711 ]
  %1715 = getelementptr inbounds i32, ptr %4, i64 %1714
  %1716 = load i32, ptr %1715, align 4, !tbaa !6
  %1717 = getelementptr inbounds i32, ptr %12, i64 %1714
  %1718 = load i32, ptr %1717, align 4, !tbaa !6
  %1719 = add nsw i32 %1718, -1
  %1720 = icmp slt i32 %1716, %1719
  br i1 %1720, label %1721, label %1736

1721:                                             ; preds = %1713
  br i1 %1708, label %1728, label %1722

1722:                                             ; preds = %1721
  %1723 = getelementptr inbounds i32, ptr %7, i64 %1714
  %1724 = load i32, ptr %1723, align 4, !tbaa !6
  %1725 = getelementptr inbounds i32, ptr %6, i64 %1714
  %1726 = load i32, ptr %1725, align 4, !tbaa !6
  %1727 = add nsw i32 %1726, %1724
  store i32 %1727, ptr %1725, align 4, !tbaa !6
  br label %1746

1728:                                             ; preds = %1704, %1721
  %1729 = phi i32 [ %1716, %1721 ], [ %1705, %1704 ]
  %1730 = phi ptr [ %1715, %1721 ], [ %4, %1704 ]
  %1731 = phi i64 [ %1714, %1721 ], [ 0, %1704 ]
  %1732 = add nsw i32 %1729, 1
  store i32 %1732, ptr %1730, align 4, !tbaa !6
  %1733 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !6
  %1735 = getelementptr inbounds i32, ptr %6, i64 %1731
  br label %1746

1736:                                             ; preds = %1713
  %1737 = icmp eq i32 %1716, %1719
  br i1 %1737, label %1738, label %1744

1738:                                             ; preds = %1736
  store i32 0, ptr %1715, align 4, !tbaa !6
  %1739 = getelementptr inbounds i32, ptr %8, i64 %1714
  %1740 = load i32, ptr %1739, align 4, !tbaa !6
  %1741 = getelementptr inbounds i32, ptr %6, i64 %1714
  store i32 %1740, ptr %1741, align 4, !tbaa !6
  %1742 = add nuw nsw i64 %1714, 1
  %1743 = icmp eq i64 %1742, %1613
  br i1 %1743, label %1751, label %1713, !llvm.loop !998

1744:                                             ; preds = %1709, %1736
  %1745 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1746:                                             ; preds = %1722, %1728
  %1747 = phi ptr [ %1735, %1728 ], [ %1715, %1722 ]
  %1748 = phi i32 [ %1734, %1728 ], [ 1, %1722 ]
  %1749 = load i32, ptr %1747, align 4, !tbaa !6
  %1750 = add nsw i32 %1749, %1748
  store i32 %1750, ptr %1747, align 4, !tbaa !6
  br label %1751

1751:                                             ; preds = %1738, %1746, %1711, %1689
  %1752 = icmp eq i32 %1703, %5
  br i1 %1752, label %5661, label %1616, !llvm.loop !999

1753:                                             ; preds = %1599, %1893
  %1754 = phi i32 [ 0, %1599 ], [ %1842, %1893 ]
  %1755 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1600, label %1756, label %1825

1756:                                             ; preds = %1753, %1815
  %1757 = phi i32 [ %1824, %1815 ], [ 0, %1753 ]
  %1758 = phi i64 [ %1766, %1815 ], [ %1604, %1753 ]
  %1759 = phi i64 [ %1823, %1815 ], [ %1603, %1753 ]
  %1760 = phi i32 [ %1821, %1815 ], [ %1755, %1753 ]
  %1761 = sub i32 %1602, %1757
  %1762 = tail call i32 @llvm.smin.i32(i32 %1761, i32 0)
  %1763 = sub i32 %1761, %1762
  %1764 = zext i32 %1763 to i64
  %1765 = add nuw nsw i64 %1764, 1
  %1766 = add nsw i64 %1758, -1
  %1767 = icmp ult i32 %1763, 31
  br i1 %1767, label %1803, label %1768

1768:                                             ; preds = %1756
  %1769 = and i64 %1765, 8589934560
  %1770 = sub i64 %1759, %1769
  br label %1771

1771:                                             ; preds = %1771, %1768
  %1772 = phi i64 [ 0, %1768 ], [ %1795, %1771 ]
  %1773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1791, %1771 ]
  %1774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1792, %1771 ]
  %1775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1793, %1771 ]
  %1776 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1794, %1771 ]
  %1777 = sub i64 %1759, %1772
  %1778 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1779 = getelementptr inbounds i32, ptr %1778, i64 -7
  %1780 = load <8 x i32>, ptr %1779, align 4, !tbaa !6
  %1781 = shufflevector <8 x i32> %1780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1782 = getelementptr inbounds i32, ptr %1778, i64 -15
  %1783 = load <8 x i32>, ptr %1782, align 4, !tbaa !6
  %1784 = shufflevector <8 x i32> %1783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1785 = getelementptr inbounds i32, ptr %1778, i64 -23
  %1786 = load <8 x i32>, ptr %1785, align 4, !tbaa !6
  %1787 = shufflevector <8 x i32> %1786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1788 = getelementptr inbounds i32, ptr %1778, i64 -31
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = mul <8 x i32> %1781, %1773
  %1792 = mul <8 x i32> %1784, %1774
  %1793 = mul <8 x i32> %1787, %1775
  %1794 = mul <8 x i32> %1790, %1776
  %1795 = add nuw i64 %1772, 32
  %1796 = icmp eq i64 %1795, %1769
  br i1 %1796, label %1797, label %1771, !llvm.loop !1000

1797:                                             ; preds = %1771
  %1798 = mul <8 x i32> %1792, %1791
  %1799 = mul <8 x i32> %1793, %1798
  %1800 = mul <8 x i32> %1794, %1799
  %1801 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1800)
  %1802 = icmp eq i64 %1765, %1769
  br i1 %1802, label %1815, label %1803

1803:                                             ; preds = %1756, %1797
  %1804 = phi i64 [ %1759, %1756 ], [ %1770, %1797 ]
  %1805 = phi i32 [ 1, %1756 ], [ %1801, %1797 ]
  br label %1806

1806:                                             ; preds = %1803, %1806
  %1807 = phi i64 [ %1812, %1806 ], [ %1804, %1803 ]
  %1808 = phi i32 [ %1811, %1806 ], [ %1805, %1803 ]
  %1809 = getelementptr inbounds i32, ptr %11, i64 %1807
  %1810 = load i32, ptr %1809, align 4, !tbaa !6
  %1811 = mul nsw i32 %1810, %1808
  %1812 = add nsw i64 %1807, -1
  %1813 = trunc i64 %1807 to i32
  %1814 = icmp sgt i32 %1813, 0
  br i1 %1814, label %1806, label %1815, !llvm.loop !1001

1815:                                             ; preds = %1806, %1797
  %1816 = phi i32 [ %1801, %1797 ], [ %1811, %1806 ]
  %1817 = and i64 %1766, 4294967295
  %1818 = getelementptr inbounds i32, ptr %6, i64 %1817
  %1819 = load i32, ptr %1818, align 4, !tbaa !6
  %1820 = mul nsw i32 %1819, %1816
  %1821 = add nsw i32 %1820, %1760
  %1822 = icmp sgt i64 %1758, 2
  %1823 = add nsw i64 %1759, -1
  %1824 = add i32 %1757, 1
  br i1 %1822, label %1756, label %1825, !llvm.loop !1002

1825:                                             ; preds = %1815, %1753
  %1826 = phi i32 [ %1755, %1753 ], [ %1821, %1815 ]
  %1827 = icmp slt i32 %1826, %5
  br i1 %1827, label %1830, label %1828

1828:                                             ; preds = %1825
  %1829 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1830:                                             ; preds = %1825
  %1831 = sext i32 %1826 to i64
  %1832 = getelementptr inbounds double, ptr %1269, i64 %1831
  %1833 = load double, ptr %1832, align 8, !tbaa !19
  %1834 = fptosi double %1833 to i8
  %1835 = load i8, ptr %1271, align 1, !tbaa !12
  %1836 = icmp slt i8 %1834, 0
  %1837 = mul i8 %1834, %1834
  %1838 = sub i8 0, %1837
  %1839 = select i1 %1836, i8 %1838, i8 %1837
  %1840 = mul i8 %1839, %1834
  %1841 = add i8 %1840, %1835
  store i8 %1841, ptr %1271, align 1, !tbaa !12
  %1842 = add nuw nsw i32 %1754, 1
  br i1 %1601, label %1843, label %1893

1843:                                             ; preds = %1830
  %1844 = load i32, ptr %4, align 4, !tbaa !6
  %1845 = load i32, ptr %12, align 4, !tbaa !6
  %1846 = add nsw i32 %1845, -1
  %1847 = icmp slt i32 %1844, %1846
  br i1 %1847, label %1870, label %1848

1848:                                             ; preds = %1843
  %1849 = icmp eq i32 %1844, %1846
  br i1 %1849, label %1850, label %1886

1850:                                             ; preds = %1848
  store i32 0, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1851, ptr %6, align 4, !tbaa !6
  br i1 %1606, label %1893, label %1852

1852:                                             ; preds = %1850, %1880
  %1853 = phi i64 [ %1884, %1880 ], [ 1, %1850 ]
  %1854 = getelementptr inbounds i32, ptr %4, i64 %1853
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %12, i64 %1853
  %1857 = load i32, ptr %1856, align 4, !tbaa !6
  %1858 = add nsw i32 %1857, -1
  %1859 = icmp slt i32 %1855, %1858
  br i1 %1859, label %1860, label %1878

1860:                                             ; preds = %1852
  br i1 %1847, label %1870, label %1861

1861:                                             ; preds = %1860
  %1862 = shl i64 %1853, 32
  %1863 = add i64 %1862, -4294967296
  %1864 = ashr exact i64 %1863, 32
  %1865 = getelementptr inbounds i32, ptr %7, i64 %1864
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = getelementptr inbounds i32, ptr %6, i64 %1853
  %1868 = load i32, ptr %1867, align 4, !tbaa !6
  %1869 = add nsw i32 %1868, %1866
  store i32 %1869, ptr %1867, align 4, !tbaa !6
  br label %1888

1870:                                             ; preds = %1843, %1860
  %1871 = phi i32 [ %1855, %1860 ], [ %1844, %1843 ]
  %1872 = phi ptr [ %1854, %1860 ], [ %4, %1843 ]
  %1873 = phi i64 [ %1853, %1860 ], [ 0, %1843 ]
  %1874 = add nsw i32 %1871, 1
  store i32 %1874, ptr %1872, align 4, !tbaa !6
  %1875 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1876 = load i32, ptr %1875, align 4, !tbaa !6
  %1877 = getelementptr inbounds i32, ptr %6, i64 %1873
  br label %1888

1878:                                             ; preds = %1852
  %1879 = icmp eq i32 %1855, %1858
  br i1 %1879, label %1880, label %1886

1880:                                             ; preds = %1878
  store i32 0, ptr %1854, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %8, i64 %1853
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1853
  store i32 %1882, ptr %1883, align 4, !tbaa !6
  %1884 = add nuw nsw i64 %1853, 1
  %1885 = icmp eq i64 %1884, %1604
  br i1 %1885, label %1893, label %1852, !llvm.loop !1003

1886:                                             ; preds = %1848, %1878
  %1887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1888:                                             ; preds = %1861, %1870
  %1889 = phi ptr [ %1877, %1870 ], [ %1854, %1861 ]
  %1890 = phi i32 [ %1876, %1870 ], [ 1, %1861 ]
  %1891 = load i32, ptr %1889, align 4, !tbaa !6
  %1892 = add nsw i32 %1891, %1890
  store i32 %1892, ptr %1889, align 4, !tbaa !6
  br label %1893

1893:                                             ; preds = %1880, %1888, %1850, %1830
  %1894 = icmp eq i32 %1842, %5
  br i1 %1894, label %5661, label %1753, !llvm.loop !1004

1895:                                             ; preds = %1281
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

1897:                                             ; preds = %18
  %1898 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1899 = load ptr, ptr %1898, align 8, !tbaa !10
  %1900 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1901 = load ptr, ptr %1900, align 8, !tbaa !10
  store i16 0, ptr %1901, align 2, !tbaa !79
  %1902 = icmp eq i32 %13, 0
  br i1 %1902, label %1903, label %1911

1903:                                             ; preds = %1897
  %1904 = load double, ptr %1899, align 8, !tbaa !19
  %1905 = fptosi double %1904 to i16
  %1906 = icmp slt i16 %1905, 0
  %1907 = mul i16 %1905, %1905
  %1908 = sub i16 0, %1907
  %1909 = select i1 %1906, i16 %1908, i16 %1907
  %1910 = mul i16 %1909, %1905
  store i16 %1910, ptr %1901, align 2, !tbaa !79
  br label %5661

1911:                                             ; preds = %1897
  switch i32 %1, label %2525 [
    i32 1, label %1912
    i32 0, label %2223
  ]

1912:                                             ; preds = %1911
  %1913 = getelementptr inbounds i32, ptr %3, i64 %19
  %1914 = load i32, ptr %1913, align 4, !tbaa !6
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp sgt i32 %5, 0
  br i1 %1915, label %1926, label %1917

1917:                                             ; preds = %1912
  br i1 %1916, label %1918, label %5661

1918:                                             ; preds = %1917
  %1919 = icmp sgt i32 %13, 1
  %1920 = icmp sgt i32 %13, 0
  %1921 = add i32 %13, -2
  %1922 = zext i32 %1921 to i64
  %1923 = zext i32 %13 to i64
  %1924 = add nuw i32 %5, 1
  %1925 = icmp eq i32 %13, 1
  br label %2078

1926:                                             ; preds = %1912
  br i1 %1916, label %1927, label %5661

1927:                                             ; preds = %1926
  %1928 = icmp sgt i32 %13, 1
  %1929 = icmp sgt i32 %13, 0
  %1930 = add i32 %13, -2
  %1931 = zext i32 %1930 to i64
  %1932 = zext i32 %13 to i64
  %1933 = add nuw i32 %5, 1
  %1934 = icmp eq i32 %13, 1
  br label %1935

1935:                                             ; preds = %1927, %2076
  %1936 = phi i16 [ 0, %1927 ], [ %2026, %2076 ]
  %1937 = phi i32 [ 0, %1927 ], [ %2028, %2076 ]
  %1938 = phi double [ 0.000000e+00, %1927 ], [ %2027, %2076 ]
  %1939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1928, label %1940, label %2009

1940:                                             ; preds = %1935, %1999
  %1941 = phi i32 [ %2008, %1999 ], [ 0, %1935 ]
  %1942 = phi i64 [ %1950, %1999 ], [ %1932, %1935 ]
  %1943 = phi i64 [ %2007, %1999 ], [ %1931, %1935 ]
  %1944 = phi i32 [ %2005, %1999 ], [ %1939, %1935 ]
  %1945 = sub i32 %1930, %1941
  %1946 = tail call i32 @llvm.smin.i32(i32 %1945, i32 0)
  %1947 = sub i32 %1945, %1946
  %1948 = zext i32 %1947 to i64
  %1949 = add nuw nsw i64 %1948, 1
  %1950 = add nsw i64 %1942, -1
  %1951 = icmp ult i32 %1947, 31
  br i1 %1951, label %1987, label %1952

1952:                                             ; preds = %1940
  %1953 = and i64 %1949, 8589934560
  %1954 = sub i64 %1943, %1953
  br label %1955

1955:                                             ; preds = %1955, %1952
  %1956 = phi i64 [ 0, %1952 ], [ %1979, %1955 ]
  %1957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1975, %1955 ]
  %1958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1976, %1955 ]
  %1959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1977, %1955 ]
  %1960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1978, %1955 ]
  %1961 = sub i64 %1943, %1956
  %1962 = getelementptr inbounds i32, ptr %9, i64 %1961
  %1963 = getelementptr inbounds i32, ptr %1962, i64 -7
  %1964 = load <8 x i32>, ptr %1963, align 4, !tbaa !6
  %1965 = shufflevector <8 x i32> %1964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1966 = getelementptr inbounds i32, ptr %1962, i64 -15
  %1967 = load <8 x i32>, ptr %1966, align 4, !tbaa !6
  %1968 = shufflevector <8 x i32> %1967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1969 = getelementptr inbounds i32, ptr %1962, i64 -23
  %1970 = load <8 x i32>, ptr %1969, align 4, !tbaa !6
  %1971 = shufflevector <8 x i32> %1970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1972 = getelementptr inbounds i32, ptr %1962, i64 -31
  %1973 = load <8 x i32>, ptr %1972, align 4, !tbaa !6
  %1974 = shufflevector <8 x i32> %1973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1975 = mul <8 x i32> %1965, %1957
  %1976 = mul <8 x i32> %1968, %1958
  %1977 = mul <8 x i32> %1971, %1959
  %1978 = mul <8 x i32> %1974, %1960
  %1979 = add nuw i64 %1956, 32
  %1980 = icmp eq i64 %1979, %1953
  br i1 %1980, label %1981, label %1955, !llvm.loop !1005

1981:                                             ; preds = %1955
  %1982 = mul <8 x i32> %1976, %1975
  %1983 = mul <8 x i32> %1977, %1982
  %1984 = mul <8 x i32> %1978, %1983
  %1985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1984)
  %1986 = icmp eq i64 %1949, %1953
  br i1 %1986, label %1999, label %1987

1987:                                             ; preds = %1940, %1981
  %1988 = phi i64 [ %1943, %1940 ], [ %1954, %1981 ]
  %1989 = phi i32 [ 1, %1940 ], [ %1985, %1981 ]
  br label %1990

1990:                                             ; preds = %1987, %1990
  %1991 = phi i64 [ %1996, %1990 ], [ %1988, %1987 ]
  %1992 = phi i32 [ %1995, %1990 ], [ %1989, %1987 ]
  %1993 = getelementptr inbounds i32, ptr %9, i64 %1991
  %1994 = load i32, ptr %1993, align 4, !tbaa !6
  %1995 = mul nsw i32 %1994, %1992
  %1996 = add nsw i64 %1991, -1
  %1997 = trunc i64 %1991 to i32
  %1998 = icmp sgt i32 %1997, 0
  br i1 %1998, label %1990, label %1999, !llvm.loop !1006

1999:                                             ; preds = %1990, %1981
  %2000 = phi i32 [ %1985, %1981 ], [ %1995, %1990 ]
  %2001 = and i64 %1950, 4294967295
  %2002 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = mul nsw i32 %2003, %2000
  %2005 = add nsw i32 %2004, %1944
  %2006 = icmp sgt i64 %1942, 2
  %2007 = add nsw i64 %1943, -1
  %2008 = add i32 %1941, 1
  br i1 %2006, label %1940, label %2009, !llvm.loop !1007

2009:                                             ; preds = %1999, %1935
  %2010 = phi i32 [ %1939, %1935 ], [ %2005, %1999 ]
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds double, ptr %2, i64 %2011
  %2013 = load double, ptr %2012, align 8, !tbaa !19
  %2014 = getelementptr inbounds double, ptr %1899, i64 %2011
  %2015 = load double, ptr %2014, align 8, !tbaa !19
  %2016 = fptosi double %2015 to i16
  %2017 = sitofp i16 %1936 to double
  %2018 = sitofp i16 %2016 to double
  %2019 = fmul fast double %2013, %2018
  %2020 = fcmp fast olt double %2019, 0.000000e+00
  %2021 = fneg fast double %2019
  %2022 = select nnan ninf i1 %2020, double %2021, double %2019
  %2023 = fmul fast double %2019, %2019
  %2024 = fmul fast double %2023, %2022
  %2025 = fadd fast double %2024, %2017
  %2026 = fptosi double %2025 to i16
  %2027 = fadd fast double %2013, %1938
  %2028 = add nuw nsw i32 %1937, 1
  br i1 %1929, label %2029, label %2076

2029:                                             ; preds = %2009
  %2030 = load i32, ptr %4, align 4, !tbaa !6
  %2031 = load i32, ptr %12, align 4, !tbaa !6
  %2032 = add nsw i32 %2031, -1
  %2033 = icmp slt i32 %2030, %2032
  br i1 %2033, label %2053, label %2034

2034:                                             ; preds = %2029
  %2035 = icmp eq i32 %2030, %2032
  br i1 %2035, label %2036, label %2069

2036:                                             ; preds = %2034
  store i32 0, ptr %4, align 4, !tbaa !6
  %2037 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2037, ptr %6, align 4, !tbaa !6
  br i1 %1934, label %2076, label %2038

2038:                                             ; preds = %2036, %2063
  %2039 = phi i64 [ %2067, %2063 ], [ 1, %2036 ]
  %2040 = getelementptr inbounds i32, ptr %4, i64 %2039
  %2041 = load i32, ptr %2040, align 4, !tbaa !6
  %2042 = getelementptr inbounds i32, ptr %12, i64 %2039
  %2043 = load i32, ptr %2042, align 4, !tbaa !6
  %2044 = add nsw i32 %2043, -1
  %2045 = icmp slt i32 %2041, %2044
  br i1 %2045, label %2046, label %2061

2046:                                             ; preds = %2038
  br i1 %2033, label %2053, label %2047

2047:                                             ; preds = %2046
  %2048 = getelementptr inbounds i32, ptr %7, i64 %2039
  %2049 = load i32, ptr %2048, align 4, !tbaa !6
  %2050 = getelementptr inbounds i32, ptr %6, i64 %2039
  %2051 = load i32, ptr %2050, align 4, !tbaa !6
  %2052 = add nsw i32 %2051, %2049
  store i32 %2052, ptr %2050, align 4, !tbaa !6
  br label %2071

2053:                                             ; preds = %2029, %2046
  %2054 = phi i32 [ %2041, %2046 ], [ %2030, %2029 ]
  %2055 = phi ptr [ %2040, %2046 ], [ %4, %2029 ]
  %2056 = phi i64 [ %2039, %2046 ], [ 0, %2029 ]
  %2057 = add nsw i32 %2054, 1
  store i32 %2057, ptr %2055, align 4, !tbaa !6
  %2058 = getelementptr inbounds i32, ptr %7, i64 %2056
  %2059 = load i32, ptr %2058, align 4, !tbaa !6
  %2060 = getelementptr inbounds i32, ptr %6, i64 %2056
  br label %2071

2061:                                             ; preds = %2038
  %2062 = icmp eq i32 %2041, %2044
  br i1 %2062, label %2063, label %2069

2063:                                             ; preds = %2061
  store i32 0, ptr %2040, align 4, !tbaa !6
  %2064 = getelementptr inbounds i32, ptr %8, i64 %2039
  %2065 = load i32, ptr %2064, align 4, !tbaa !6
  %2066 = getelementptr inbounds i32, ptr %6, i64 %2039
  store i32 %2065, ptr %2066, align 4, !tbaa !6
  %2067 = add nuw nsw i64 %2039, 1
  %2068 = icmp eq i64 %2067, %1932
  br i1 %2068, label %2076, label %2038, !llvm.loop !1008

2069:                                             ; preds = %2034, %2061
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  %2070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2071:                                             ; preds = %2047, %2053
  %2072 = phi ptr [ %2060, %2053 ], [ %2040, %2047 ]
  %2073 = phi i32 [ %2059, %2053 ], [ 1, %2047 ]
  %2074 = load i32, ptr %2072, align 4, !tbaa !6
  %2075 = add nsw i32 %2074, %2073
  store i32 %2075, ptr %2072, align 4, !tbaa !6
  br label %2076

2076:                                             ; preds = %2063, %2071, %2036, %2009
  %2077 = icmp eq i32 %2028, %5
  br i1 %2077, label %5655, label %1935, !llvm.loop !1009

2078:                                             ; preds = %1918, %2221
  %2079 = phi i16 [ 0, %1918 ], [ %2169, %2221 ]
  %2080 = phi i32 [ 0, %1918 ], [ %2170, %2221 ]
  %2081 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1919, label %2082, label %2151

2082:                                             ; preds = %2078, %2141
  %2083 = phi i32 [ %2150, %2141 ], [ 0, %2078 ]
  %2084 = phi i64 [ %2092, %2141 ], [ %1923, %2078 ]
  %2085 = phi i64 [ %2149, %2141 ], [ %1922, %2078 ]
  %2086 = phi i32 [ %2147, %2141 ], [ %2081, %2078 ]
  %2087 = sub i32 %1921, %2083
  %2088 = tail call i32 @llvm.smin.i32(i32 %2087, i32 0)
  %2089 = sub i32 %2087, %2088
  %2090 = zext i32 %2089 to i64
  %2091 = add nuw nsw i64 %2090, 1
  %2092 = add nsw i64 %2084, -1
  %2093 = icmp ult i32 %2089, 31
  br i1 %2093, label %2129, label %2094

2094:                                             ; preds = %2082
  %2095 = and i64 %2091, 8589934560
  %2096 = sub i64 %2085, %2095
  br label %2097

2097:                                             ; preds = %2097, %2094
  %2098 = phi i64 [ 0, %2094 ], [ %2121, %2097 ]
  %2099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2117, %2097 ]
  %2100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2118, %2097 ]
  %2101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2119, %2097 ]
  %2102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2120, %2097 ]
  %2103 = sub i64 %2085, %2098
  %2104 = getelementptr inbounds i32, ptr %11, i64 %2103
  %2105 = getelementptr inbounds i32, ptr %2104, i64 -7
  %2106 = load <8 x i32>, ptr %2105, align 4, !tbaa !6
  %2107 = shufflevector <8 x i32> %2106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2108 = getelementptr inbounds i32, ptr %2104, i64 -15
  %2109 = load <8 x i32>, ptr %2108, align 4, !tbaa !6
  %2110 = shufflevector <8 x i32> %2109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2111 = getelementptr inbounds i32, ptr %2104, i64 -23
  %2112 = load <8 x i32>, ptr %2111, align 4, !tbaa !6
  %2113 = shufflevector <8 x i32> %2112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2114 = getelementptr inbounds i32, ptr %2104, i64 -31
  %2115 = load <8 x i32>, ptr %2114, align 4, !tbaa !6
  %2116 = shufflevector <8 x i32> %2115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2117 = mul <8 x i32> %2107, %2099
  %2118 = mul <8 x i32> %2110, %2100
  %2119 = mul <8 x i32> %2113, %2101
  %2120 = mul <8 x i32> %2116, %2102
  %2121 = add nuw i64 %2098, 32
  %2122 = icmp eq i64 %2121, %2095
  br i1 %2122, label %2123, label %2097, !llvm.loop !1010

2123:                                             ; preds = %2097
  %2124 = mul <8 x i32> %2118, %2117
  %2125 = mul <8 x i32> %2119, %2124
  %2126 = mul <8 x i32> %2120, %2125
  %2127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2126)
  %2128 = icmp eq i64 %2091, %2095
  br i1 %2128, label %2141, label %2129

2129:                                             ; preds = %2082, %2123
  %2130 = phi i64 [ %2085, %2082 ], [ %2096, %2123 ]
  %2131 = phi i32 [ 1, %2082 ], [ %2127, %2123 ]
  br label %2132

2132:                                             ; preds = %2129, %2132
  %2133 = phi i64 [ %2138, %2132 ], [ %2130, %2129 ]
  %2134 = phi i32 [ %2137, %2132 ], [ %2131, %2129 ]
  %2135 = getelementptr inbounds i32, ptr %11, i64 %2133
  %2136 = load i32, ptr %2135, align 4, !tbaa !6
  %2137 = mul nsw i32 %2136, %2134
  %2138 = add nsw i64 %2133, -1
  %2139 = trunc i64 %2133 to i32
  %2140 = icmp sgt i32 %2139, 0
  br i1 %2140, label %2132, label %2141, !llvm.loop !1011

2141:                                             ; preds = %2132, %2123
  %2142 = phi i32 [ %2127, %2123 ], [ %2137, %2132 ]
  %2143 = and i64 %2092, 4294967295
  %2144 = getelementptr inbounds i32, ptr %6, i64 %2143
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = mul nsw i32 %2145, %2142
  %2147 = add nsw i32 %2146, %2086
  %2148 = icmp sgt i64 %2084, 2
  %2149 = add nsw i64 %2085, -1
  %2150 = add i32 %2083, 1
  br i1 %2148, label %2082, label %2151, !llvm.loop !1012

2151:                                             ; preds = %2141, %2078
  %2152 = phi i32 [ %2081, %2078 ], [ %2147, %2141 ]
  %2153 = icmp slt i32 %2152, %5
  br i1 %2153, label %2156, label %2154

2154:                                             ; preds = %2151
  %2155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2156:                                             ; preds = %2151
  %2157 = sext i32 %2152 to i64
  %2158 = getelementptr inbounds double, ptr %1899, i64 %2157
  %2159 = load double, ptr %2158, align 8, !tbaa !19
  %2160 = fptosi double %2159 to i16
  %2161 = sitofp i16 %2079 to double
  %2162 = sitofp i16 %2160 to double
  %2163 = icmp slt i16 %2160, 0
  %2164 = fneg fast double %2162
  %2165 = select i1 %2163, double %2164, double %2162
  %2166 = fmul fast double %2162, %2162
  %2167 = fmul fast double %2166, %2165
  %2168 = fadd fast double %2167, %2161
  %2169 = fptosi double %2168 to i16
  store i16 %2169, ptr %1901, align 2, !tbaa !79
  %2170 = add nuw nsw i32 %2080, 1
  br i1 %1920, label %2171, label %2221

2171:                                             ; preds = %2156
  %2172 = load i32, ptr %4, align 4, !tbaa !6
  %2173 = load i32, ptr %12, align 4, !tbaa !6
  %2174 = add nsw i32 %2173, -1
  %2175 = icmp slt i32 %2172, %2174
  br i1 %2175, label %2198, label %2176

2176:                                             ; preds = %2171
  %2177 = icmp eq i32 %2172, %2174
  br i1 %2177, label %2178, label %2214

2178:                                             ; preds = %2176
  store i32 0, ptr %4, align 4, !tbaa !6
  %2179 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2179, ptr %6, align 4, !tbaa !6
  br i1 %1925, label %2221, label %2180

2180:                                             ; preds = %2178, %2208
  %2181 = phi i64 [ %2212, %2208 ], [ 1, %2178 ]
  %2182 = getelementptr inbounds i32, ptr %4, i64 %2181
  %2183 = load i32, ptr %2182, align 4, !tbaa !6
  %2184 = getelementptr inbounds i32, ptr %12, i64 %2181
  %2185 = load i32, ptr %2184, align 4, !tbaa !6
  %2186 = add nsw i32 %2185, -1
  %2187 = icmp slt i32 %2183, %2186
  br i1 %2187, label %2188, label %2206

2188:                                             ; preds = %2180
  br i1 %2175, label %2198, label %2189

2189:                                             ; preds = %2188
  %2190 = shl i64 %2181, 32
  %2191 = add i64 %2190, -4294967296
  %2192 = ashr exact i64 %2191, 32
  %2193 = getelementptr inbounds i32, ptr %7, i64 %2192
  %2194 = load i32, ptr %2193, align 4, !tbaa !6
  %2195 = getelementptr inbounds i32, ptr %6, i64 %2181
  %2196 = load i32, ptr %2195, align 4, !tbaa !6
  %2197 = add nsw i32 %2196, %2194
  store i32 %2197, ptr %2195, align 4, !tbaa !6
  br label %2216

2198:                                             ; preds = %2171, %2188
  %2199 = phi i32 [ %2183, %2188 ], [ %2172, %2171 ]
  %2200 = phi ptr [ %2182, %2188 ], [ %4, %2171 ]
  %2201 = phi i64 [ %2181, %2188 ], [ 0, %2171 ]
  %2202 = add nsw i32 %2199, 1
  store i32 %2202, ptr %2200, align 4, !tbaa !6
  %2203 = getelementptr inbounds i32, ptr %7, i64 %2201
  %2204 = load i32, ptr %2203, align 4, !tbaa !6
  %2205 = getelementptr inbounds i32, ptr %6, i64 %2201
  br label %2216

2206:                                             ; preds = %2180
  %2207 = icmp eq i32 %2183, %2186
  br i1 %2207, label %2208, label %2214

2208:                                             ; preds = %2206
  store i32 0, ptr %2182, align 4, !tbaa !6
  %2209 = getelementptr inbounds i32, ptr %8, i64 %2181
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = getelementptr inbounds i32, ptr %6, i64 %2181
  store i32 %2210, ptr %2211, align 4, !tbaa !6
  %2212 = add nuw nsw i64 %2181, 1
  %2213 = icmp eq i64 %2212, %1923
  br i1 %2213, label %2221, label %2180, !llvm.loop !1013

2214:                                             ; preds = %2176, %2206
  %2215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2216:                                             ; preds = %2189, %2198
  %2217 = phi ptr [ %2205, %2198 ], [ %2182, %2189 ]
  %2218 = phi i32 [ %2204, %2198 ], [ 1, %2189 ]
  %2219 = load i32, ptr %2217, align 4, !tbaa !6
  %2220 = add nsw i32 %2219, %2218
  store i32 %2220, ptr %2217, align 4, !tbaa !6
  br label %2221

2221:                                             ; preds = %2208, %2216, %2178, %2156
  %2222 = icmp eq i32 %2170, %5
  br i1 %2222, label %5661, label %2078, !llvm.loop !1014

2223:                                             ; preds = %1911
  %2224 = getelementptr inbounds i32, ptr %3, i64 %19
  %2225 = load i32, ptr %2224, align 4, !tbaa !6
  %2226 = icmp eq i32 %2225, 0
  %2227 = icmp sgt i32 %5, 0
  br i1 %2226, label %2237, label %2228

2228:                                             ; preds = %2223
  br i1 %2227, label %2229, label %5661

2229:                                             ; preds = %2228
  %2230 = icmp sgt i32 %13, 1
  %2231 = icmp sgt i32 %13, 0
  %2232 = add i32 %13, -2
  %2233 = zext i32 %2232 to i64
  %2234 = zext i32 %13 to i64
  %2235 = add nuw i32 %5, 1
  %2236 = icmp eq i32 %13, 1
  br label %2383

2237:                                             ; preds = %2223
  br i1 %2227, label %2238, label %5661

2238:                                             ; preds = %2237
  %2239 = icmp sgt i32 %13, 1
  %2240 = icmp sgt i32 %13, 0
  %2241 = add i32 %13, -2
  %2242 = zext i32 %2241 to i64
  %2243 = zext i32 %13 to i64
  %2244 = add nuw i32 %5, 1
  %2245 = icmp eq i32 %13, 1
  br label %2246

2246:                                             ; preds = %2238, %2381
  %2247 = phi i16 [ 0, %2238 ], [ %2331, %2381 ]
  %2248 = phi i32 [ 0, %2238 ], [ %2333, %2381 ]
  %2249 = phi double [ 0.000000e+00, %2238 ], [ %2332, %2381 ]
  %2250 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2239, label %2251, label %2320

2251:                                             ; preds = %2246, %2310
  %2252 = phi i32 [ %2319, %2310 ], [ 0, %2246 ]
  %2253 = phi i64 [ %2261, %2310 ], [ %2243, %2246 ]
  %2254 = phi i64 [ %2318, %2310 ], [ %2242, %2246 ]
  %2255 = phi i32 [ %2316, %2310 ], [ %2250, %2246 ]
  %2256 = sub i32 %2241, %2252
  %2257 = tail call i32 @llvm.smin.i32(i32 %2256, i32 0)
  %2258 = sub i32 %2256, %2257
  %2259 = zext i32 %2258 to i64
  %2260 = add nuw nsw i64 %2259, 1
  %2261 = add nsw i64 %2253, -1
  %2262 = icmp ult i32 %2258, 31
  br i1 %2262, label %2298, label %2263

2263:                                             ; preds = %2251
  %2264 = and i64 %2260, 8589934560
  %2265 = sub i64 %2254, %2264
  br label %2266

2266:                                             ; preds = %2266, %2263
  %2267 = phi i64 [ 0, %2263 ], [ %2290, %2266 ]
  %2268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2286, %2266 ]
  %2269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2287, %2266 ]
  %2270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2288, %2266 ]
  %2271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2289, %2266 ]
  %2272 = sub i64 %2254, %2267
  %2273 = getelementptr inbounds i32, ptr %9, i64 %2272
  %2274 = getelementptr inbounds i32, ptr %2273, i64 -7
  %2275 = load <8 x i32>, ptr %2274, align 4, !tbaa !6
  %2276 = shufflevector <8 x i32> %2275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2277 = getelementptr inbounds i32, ptr %2273, i64 -15
  %2278 = load <8 x i32>, ptr %2277, align 4, !tbaa !6
  %2279 = shufflevector <8 x i32> %2278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2280 = getelementptr inbounds i32, ptr %2273, i64 -23
  %2281 = load <8 x i32>, ptr %2280, align 4, !tbaa !6
  %2282 = shufflevector <8 x i32> %2281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2283 = getelementptr inbounds i32, ptr %2273, i64 -31
  %2284 = load <8 x i32>, ptr %2283, align 4, !tbaa !6
  %2285 = shufflevector <8 x i32> %2284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2286 = mul <8 x i32> %2276, %2268
  %2287 = mul <8 x i32> %2279, %2269
  %2288 = mul <8 x i32> %2282, %2270
  %2289 = mul <8 x i32> %2285, %2271
  %2290 = add nuw i64 %2267, 32
  %2291 = icmp eq i64 %2290, %2264
  br i1 %2291, label %2292, label %2266, !llvm.loop !1015

2292:                                             ; preds = %2266
  %2293 = mul <8 x i32> %2287, %2286
  %2294 = mul <8 x i32> %2288, %2293
  %2295 = mul <8 x i32> %2289, %2294
  %2296 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2295)
  %2297 = icmp eq i64 %2260, %2264
  br i1 %2297, label %2310, label %2298

2298:                                             ; preds = %2251, %2292
  %2299 = phi i64 [ %2254, %2251 ], [ %2265, %2292 ]
  %2300 = phi i32 [ 1, %2251 ], [ %2296, %2292 ]
  br label %2301

2301:                                             ; preds = %2298, %2301
  %2302 = phi i64 [ %2307, %2301 ], [ %2299, %2298 ]
  %2303 = phi i32 [ %2306, %2301 ], [ %2300, %2298 ]
  %2304 = getelementptr inbounds i32, ptr %9, i64 %2302
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = mul nsw i32 %2305, %2303
  %2307 = add nsw i64 %2302, -1
  %2308 = trunc i64 %2302 to i32
  %2309 = icmp sgt i32 %2308, 0
  br i1 %2309, label %2301, label %2310, !llvm.loop !1016

2310:                                             ; preds = %2301, %2292
  %2311 = phi i32 [ %2296, %2292 ], [ %2306, %2301 ]
  %2312 = and i64 %2261, 4294967295
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2312
  %2314 = load i32, ptr %2313, align 4, !tbaa !6
  %2315 = mul nsw i32 %2314, %2311
  %2316 = add nsw i32 %2315, %2255
  %2317 = icmp sgt i64 %2253, 2
  %2318 = add nsw i64 %2254, -1
  %2319 = add i32 %2252, 1
  br i1 %2317, label %2251, label %2320, !llvm.loop !1017

2320:                                             ; preds = %2310, %2246
  %2321 = phi i32 [ %2250, %2246 ], [ %2316, %2310 ]
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds double, ptr %1899, i64 %2322
  %2324 = load double, ptr %2323, align 8, !tbaa !19
  %2325 = fptosi double %2324 to i16
  %2326 = icmp slt i16 %2325, 0
  %2327 = mul i16 %2325, %2325
  %2328 = sub i16 0, %2327
  %2329 = select i1 %2326, i16 %2328, i16 %2327
  %2330 = mul i16 %2329, %2325
  %2331 = add i16 %2330, %2247
  %2332 = fadd fast double %2249, 1.000000e+00
  %2333 = add nuw nsw i32 %2248, 1
  br i1 %2240, label %2334, label %2381

2334:                                             ; preds = %2320
  %2335 = load i32, ptr %4, align 4, !tbaa !6
  %2336 = load i32, ptr %12, align 4, !tbaa !6
  %2337 = add nsw i32 %2336, -1
  %2338 = icmp slt i32 %2335, %2337
  br i1 %2338, label %2358, label %2339

2339:                                             ; preds = %2334
  %2340 = icmp eq i32 %2335, %2337
  br i1 %2340, label %2341, label %2374

2341:                                             ; preds = %2339
  store i32 0, ptr %4, align 4, !tbaa !6
  %2342 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2342, ptr %6, align 4, !tbaa !6
  br i1 %2245, label %2381, label %2343

2343:                                             ; preds = %2341, %2368
  %2344 = phi i64 [ %2372, %2368 ], [ 1, %2341 ]
  %2345 = getelementptr inbounds i32, ptr %4, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !6
  %2347 = getelementptr inbounds i32, ptr %12, i64 %2344
  %2348 = load i32, ptr %2347, align 4, !tbaa !6
  %2349 = add nsw i32 %2348, -1
  %2350 = icmp slt i32 %2346, %2349
  br i1 %2350, label %2351, label %2366

2351:                                             ; preds = %2343
  br i1 %2338, label %2358, label %2352

2352:                                             ; preds = %2351
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2344
  %2354 = load i32, ptr %2353, align 4, !tbaa !6
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2356 = load i32, ptr %2355, align 4, !tbaa !6
  %2357 = add nsw i32 %2356, %2354
  store i32 %2357, ptr %2355, align 4, !tbaa !6
  br label %2376

2358:                                             ; preds = %2334, %2351
  %2359 = phi i32 [ %2346, %2351 ], [ %2335, %2334 ]
  %2360 = phi ptr [ %2345, %2351 ], [ %4, %2334 ]
  %2361 = phi i64 [ %2344, %2351 ], [ 0, %2334 ]
  %2362 = add nsw i32 %2359, 1
  store i32 %2362, ptr %2360, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = getelementptr inbounds i32, ptr %6, i64 %2361
  br label %2376

2366:                                             ; preds = %2343
  %2367 = icmp eq i32 %2346, %2349
  br i1 %2367, label %2368, label %2374

2368:                                             ; preds = %2366
  store i32 0, ptr %2345, align 4, !tbaa !6
  %2369 = getelementptr inbounds i32, ptr %8, i64 %2344
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2344
  store i32 %2370, ptr %2371, align 4, !tbaa !6
  %2372 = add nuw nsw i64 %2344, 1
  %2373 = icmp eq i64 %2372, %2243
  br i1 %2373, label %2381, label %2343, !llvm.loop !1018

2374:                                             ; preds = %2339, %2366
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  %2375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2376:                                             ; preds = %2352, %2358
  %2377 = phi ptr [ %2365, %2358 ], [ %2345, %2352 ]
  %2378 = phi i32 [ %2364, %2358 ], [ 1, %2352 ]
  %2379 = load i32, ptr %2377, align 4, !tbaa !6
  %2380 = add nsw i32 %2379, %2378
  store i32 %2380, ptr %2377, align 4, !tbaa !6
  br label %2381

2381:                                             ; preds = %2368, %2376, %2341, %2320
  %2382 = icmp eq i32 %2333, %5
  br i1 %2382, label %5656, label %2246, !llvm.loop !1019

2383:                                             ; preds = %2229, %2523
  %2384 = phi i16 [ 0, %2229 ], [ %2471, %2523 ]
  %2385 = phi i32 [ 0, %2229 ], [ %2472, %2523 ]
  %2386 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2230, label %2387, label %2456

2387:                                             ; preds = %2383, %2446
  %2388 = phi i32 [ %2455, %2446 ], [ 0, %2383 ]
  %2389 = phi i64 [ %2397, %2446 ], [ %2234, %2383 ]
  %2390 = phi i64 [ %2454, %2446 ], [ %2233, %2383 ]
  %2391 = phi i32 [ %2452, %2446 ], [ %2386, %2383 ]
  %2392 = sub i32 %2232, %2388
  %2393 = tail call i32 @llvm.smin.i32(i32 %2392, i32 0)
  %2394 = sub i32 %2392, %2393
  %2395 = zext i32 %2394 to i64
  %2396 = add nuw nsw i64 %2395, 1
  %2397 = add nsw i64 %2389, -1
  %2398 = icmp ult i32 %2394, 31
  br i1 %2398, label %2434, label %2399

2399:                                             ; preds = %2387
  %2400 = and i64 %2396, 8589934560
  %2401 = sub i64 %2390, %2400
  br label %2402

2402:                                             ; preds = %2402, %2399
  %2403 = phi i64 [ 0, %2399 ], [ %2426, %2402 ]
  %2404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2422, %2402 ]
  %2405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2423, %2402 ]
  %2406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2424, %2402 ]
  %2407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2425, %2402 ]
  %2408 = sub i64 %2390, %2403
  %2409 = getelementptr inbounds i32, ptr %11, i64 %2408
  %2410 = getelementptr inbounds i32, ptr %2409, i64 -7
  %2411 = load <8 x i32>, ptr %2410, align 4, !tbaa !6
  %2412 = shufflevector <8 x i32> %2411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2413 = getelementptr inbounds i32, ptr %2409, i64 -15
  %2414 = load <8 x i32>, ptr %2413, align 4, !tbaa !6
  %2415 = shufflevector <8 x i32> %2414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2416 = getelementptr inbounds i32, ptr %2409, i64 -23
  %2417 = load <8 x i32>, ptr %2416, align 4, !tbaa !6
  %2418 = shufflevector <8 x i32> %2417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2419 = getelementptr inbounds i32, ptr %2409, i64 -31
  %2420 = load <8 x i32>, ptr %2419, align 4, !tbaa !6
  %2421 = shufflevector <8 x i32> %2420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2422 = mul <8 x i32> %2412, %2404
  %2423 = mul <8 x i32> %2415, %2405
  %2424 = mul <8 x i32> %2418, %2406
  %2425 = mul <8 x i32> %2421, %2407
  %2426 = add nuw i64 %2403, 32
  %2427 = icmp eq i64 %2426, %2400
  br i1 %2427, label %2428, label %2402, !llvm.loop !1020

2428:                                             ; preds = %2402
  %2429 = mul <8 x i32> %2423, %2422
  %2430 = mul <8 x i32> %2424, %2429
  %2431 = mul <8 x i32> %2425, %2430
  %2432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2431)
  %2433 = icmp eq i64 %2396, %2400
  br i1 %2433, label %2446, label %2434

2434:                                             ; preds = %2387, %2428
  %2435 = phi i64 [ %2390, %2387 ], [ %2401, %2428 ]
  %2436 = phi i32 [ 1, %2387 ], [ %2432, %2428 ]
  br label %2437

2437:                                             ; preds = %2434, %2437
  %2438 = phi i64 [ %2443, %2437 ], [ %2435, %2434 ]
  %2439 = phi i32 [ %2442, %2437 ], [ %2436, %2434 ]
  %2440 = getelementptr inbounds i32, ptr %11, i64 %2438
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = mul nsw i32 %2441, %2439
  %2443 = add nsw i64 %2438, -1
  %2444 = trunc i64 %2438 to i32
  %2445 = icmp sgt i32 %2444, 0
  br i1 %2445, label %2437, label %2446, !llvm.loop !1021

2446:                                             ; preds = %2437, %2428
  %2447 = phi i32 [ %2432, %2428 ], [ %2442, %2437 ]
  %2448 = and i64 %2397, 4294967295
  %2449 = getelementptr inbounds i32, ptr %6, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = mul nsw i32 %2450, %2447
  %2452 = add nsw i32 %2451, %2391
  %2453 = icmp sgt i64 %2389, 2
  %2454 = add nsw i64 %2390, -1
  %2455 = add i32 %2388, 1
  br i1 %2453, label %2387, label %2456, !llvm.loop !1022

2456:                                             ; preds = %2446, %2383
  %2457 = phi i32 [ %2386, %2383 ], [ %2452, %2446 ]
  %2458 = icmp slt i32 %2457, %5
  br i1 %2458, label %2461, label %2459

2459:                                             ; preds = %2456
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2461:                                             ; preds = %2456
  %2462 = sext i32 %2457 to i64
  %2463 = getelementptr inbounds double, ptr %1899, i64 %2462
  %2464 = load double, ptr %2463, align 8, !tbaa !19
  %2465 = fptosi double %2464 to i16
  %2466 = icmp slt i16 %2465, 0
  %2467 = mul i16 %2465, %2465
  %2468 = sub i16 0, %2467
  %2469 = select i1 %2466, i16 %2468, i16 %2467
  %2470 = mul i16 %2469, %2465
  %2471 = add i16 %2470, %2384
  store i16 %2471, ptr %1901, align 2, !tbaa !79
  %2472 = add nuw nsw i32 %2385, 1
  br i1 %2231, label %2473, label %2523

2473:                                             ; preds = %2461
  %2474 = load i32, ptr %4, align 4, !tbaa !6
  %2475 = load i32, ptr %12, align 4, !tbaa !6
  %2476 = add nsw i32 %2475, -1
  %2477 = icmp slt i32 %2474, %2476
  br i1 %2477, label %2500, label %2478

2478:                                             ; preds = %2473
  %2479 = icmp eq i32 %2474, %2476
  br i1 %2479, label %2480, label %2516

2480:                                             ; preds = %2478
  store i32 0, ptr %4, align 4, !tbaa !6
  %2481 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2481, ptr %6, align 4, !tbaa !6
  br i1 %2236, label %2523, label %2482

2482:                                             ; preds = %2480, %2510
  %2483 = phi i64 [ %2514, %2510 ], [ 1, %2480 ]
  %2484 = getelementptr inbounds i32, ptr %4, i64 %2483
  %2485 = load i32, ptr %2484, align 4, !tbaa !6
  %2486 = getelementptr inbounds i32, ptr %12, i64 %2483
  %2487 = load i32, ptr %2486, align 4, !tbaa !6
  %2488 = add nsw i32 %2487, -1
  %2489 = icmp slt i32 %2485, %2488
  br i1 %2489, label %2490, label %2508

2490:                                             ; preds = %2482
  br i1 %2477, label %2500, label %2491

2491:                                             ; preds = %2490
  %2492 = shl i64 %2483, 32
  %2493 = add i64 %2492, -4294967296
  %2494 = ashr exact i64 %2493, 32
  %2495 = getelementptr inbounds i32, ptr %7, i64 %2494
  %2496 = load i32, ptr %2495, align 4, !tbaa !6
  %2497 = getelementptr inbounds i32, ptr %6, i64 %2483
  %2498 = load i32, ptr %2497, align 4, !tbaa !6
  %2499 = add nsw i32 %2498, %2496
  store i32 %2499, ptr %2497, align 4, !tbaa !6
  br label %2518

2500:                                             ; preds = %2473, %2490
  %2501 = phi i32 [ %2485, %2490 ], [ %2474, %2473 ]
  %2502 = phi ptr [ %2484, %2490 ], [ %4, %2473 ]
  %2503 = phi i64 [ %2483, %2490 ], [ 0, %2473 ]
  %2504 = add nsw i32 %2501, 1
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  %2505 = getelementptr inbounds i32, ptr %7, i64 %2503
  %2506 = load i32, ptr %2505, align 4, !tbaa !6
  %2507 = getelementptr inbounds i32, ptr %6, i64 %2503
  br label %2518

2508:                                             ; preds = %2482
  %2509 = icmp eq i32 %2485, %2488
  br i1 %2509, label %2510, label %2516

2510:                                             ; preds = %2508
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2511 = getelementptr inbounds i32, ptr %8, i64 %2483
  %2512 = load i32, ptr %2511, align 4, !tbaa !6
  %2513 = getelementptr inbounds i32, ptr %6, i64 %2483
  store i32 %2512, ptr %2513, align 4, !tbaa !6
  %2514 = add nuw nsw i64 %2483, 1
  %2515 = icmp eq i64 %2514, %2234
  br i1 %2515, label %2523, label %2482, !llvm.loop !1023

2516:                                             ; preds = %2478, %2508
  %2517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2518:                                             ; preds = %2491, %2500
  %2519 = phi ptr [ %2507, %2500 ], [ %2484, %2491 ]
  %2520 = phi i32 [ %2506, %2500 ], [ 1, %2491 ]
  %2521 = load i32, ptr %2519, align 4, !tbaa !6
  %2522 = add nsw i32 %2521, %2520
  store i32 %2522, ptr %2519, align 4, !tbaa !6
  br label %2523

2523:                                             ; preds = %2510, %2518, %2480, %2461
  %2524 = icmp eq i32 %2472, %5
  br i1 %2524, label %5661, label %2383, !llvm.loop !1024

2525:                                             ; preds = %1911
  %2526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

2527:                                             ; preds = %18
  %2528 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2529 = load ptr, ptr %2528, align 8, !tbaa !10
  %2530 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2531 = load ptr, ptr %2530, align 8, !tbaa !10
  store i32 0, ptr %2531, align 4, !tbaa !6
  %2532 = icmp eq i32 %13, 0
  br i1 %2532, label %2533, label %2541

2533:                                             ; preds = %2527
  %2534 = load double, ptr %2529, align 8, !tbaa !19
  %2535 = fptosi double %2534 to i32
  %2536 = icmp slt i32 %2535, 0
  %2537 = mul nsw i32 %2535, %2535
  %2538 = sub nsw i32 0, %2537
  %2539 = select i1 %2536, i32 %2538, i32 %2537
  %2540 = mul i32 %2539, %2535
  store i32 %2540, ptr %2531, align 4, !tbaa !6
  br label %5661

2541:                                             ; preds = %2527
  switch i32 %1, label %3155 [
    i32 1, label %2542
    i32 0, label %2853
  ]

2542:                                             ; preds = %2541
  %2543 = getelementptr inbounds i32, ptr %3, i64 %19
  %2544 = load i32, ptr %2543, align 4, !tbaa !6
  %2545 = icmp eq i32 %2544, 0
  %2546 = icmp sgt i32 %5, 0
  br i1 %2545, label %2556, label %2547

2547:                                             ; preds = %2542
  br i1 %2546, label %2548, label %5661

2548:                                             ; preds = %2547
  %2549 = icmp sgt i32 %13, 1
  %2550 = icmp sgt i32 %13, 0
  %2551 = add i32 %13, -2
  %2552 = zext i32 %2551 to i64
  %2553 = zext i32 %13 to i64
  %2554 = add nuw i32 %5, 1
  %2555 = icmp eq i32 %13, 1
  br label %2708

2556:                                             ; preds = %2542
  br i1 %2546, label %2557, label %5661

2557:                                             ; preds = %2556
  %2558 = icmp sgt i32 %13, 1
  %2559 = icmp sgt i32 %13, 0
  %2560 = add i32 %13, -2
  %2561 = zext i32 %2560 to i64
  %2562 = zext i32 %13 to i64
  %2563 = add nuw i32 %5, 1
  %2564 = icmp eq i32 %13, 1
  br label %2565

2565:                                             ; preds = %2557, %2706
  %2566 = phi i32 [ 0, %2557 ], [ %2658, %2706 ]
  %2567 = phi double [ 0.000000e+00, %2557 ], [ %2657, %2706 ]
  %2568 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2558, label %2569, label %2638

2569:                                             ; preds = %2565, %2628
  %2570 = phi i32 [ %2637, %2628 ], [ 0, %2565 ]
  %2571 = phi i64 [ %2579, %2628 ], [ %2562, %2565 ]
  %2572 = phi i64 [ %2636, %2628 ], [ %2561, %2565 ]
  %2573 = phi i32 [ %2634, %2628 ], [ %2568, %2565 ]
  %2574 = sub i32 %2560, %2570
  %2575 = tail call i32 @llvm.smin.i32(i32 %2574, i32 0)
  %2576 = sub i32 %2574, %2575
  %2577 = zext i32 %2576 to i64
  %2578 = add nuw nsw i64 %2577, 1
  %2579 = add nsw i64 %2571, -1
  %2580 = icmp ult i32 %2576, 31
  br i1 %2580, label %2616, label %2581

2581:                                             ; preds = %2569
  %2582 = and i64 %2578, 8589934560
  %2583 = sub i64 %2572, %2582
  br label %2584

2584:                                             ; preds = %2584, %2581
  %2585 = phi i64 [ 0, %2581 ], [ %2608, %2584 ]
  %2586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2604, %2584 ]
  %2587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2605, %2584 ]
  %2588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2606, %2584 ]
  %2589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2607, %2584 ]
  %2590 = sub i64 %2572, %2585
  %2591 = getelementptr inbounds i32, ptr %9, i64 %2590
  %2592 = getelementptr inbounds i32, ptr %2591, i64 -7
  %2593 = load <8 x i32>, ptr %2592, align 4, !tbaa !6
  %2594 = shufflevector <8 x i32> %2593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2595 = getelementptr inbounds i32, ptr %2591, i64 -15
  %2596 = load <8 x i32>, ptr %2595, align 4, !tbaa !6
  %2597 = shufflevector <8 x i32> %2596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2598 = getelementptr inbounds i32, ptr %2591, i64 -23
  %2599 = load <8 x i32>, ptr %2598, align 4, !tbaa !6
  %2600 = shufflevector <8 x i32> %2599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2601 = getelementptr inbounds i32, ptr %2591, i64 -31
  %2602 = load <8 x i32>, ptr %2601, align 4, !tbaa !6
  %2603 = shufflevector <8 x i32> %2602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2604 = mul <8 x i32> %2594, %2586
  %2605 = mul <8 x i32> %2597, %2587
  %2606 = mul <8 x i32> %2600, %2588
  %2607 = mul <8 x i32> %2603, %2589
  %2608 = add nuw i64 %2585, 32
  %2609 = icmp eq i64 %2608, %2582
  br i1 %2609, label %2610, label %2584, !llvm.loop !1025

2610:                                             ; preds = %2584
  %2611 = mul <8 x i32> %2605, %2604
  %2612 = mul <8 x i32> %2606, %2611
  %2613 = mul <8 x i32> %2607, %2612
  %2614 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2613)
  %2615 = icmp eq i64 %2578, %2582
  br i1 %2615, label %2628, label %2616

2616:                                             ; preds = %2569, %2610
  %2617 = phi i64 [ %2572, %2569 ], [ %2583, %2610 ]
  %2618 = phi i32 [ 1, %2569 ], [ %2614, %2610 ]
  br label %2619

2619:                                             ; preds = %2616, %2619
  %2620 = phi i64 [ %2625, %2619 ], [ %2617, %2616 ]
  %2621 = phi i32 [ %2624, %2619 ], [ %2618, %2616 ]
  %2622 = getelementptr inbounds i32, ptr %9, i64 %2620
  %2623 = load i32, ptr %2622, align 4, !tbaa !6
  %2624 = mul nsw i32 %2623, %2621
  %2625 = add nsw i64 %2620, -1
  %2626 = trunc i64 %2620 to i32
  %2627 = icmp sgt i32 %2626, 0
  br i1 %2627, label %2619, label %2628, !llvm.loop !1026

2628:                                             ; preds = %2619, %2610
  %2629 = phi i32 [ %2614, %2610 ], [ %2624, %2619 ]
  %2630 = and i64 %2579, 4294967295
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2630
  %2632 = load i32, ptr %2631, align 4, !tbaa !6
  %2633 = mul nsw i32 %2632, %2629
  %2634 = add nsw i32 %2633, %2573
  %2635 = icmp sgt i64 %2571, 2
  %2636 = add nsw i64 %2572, -1
  %2637 = add i32 %2570, 1
  br i1 %2635, label %2569, label %2638, !llvm.loop !1027

2638:                                             ; preds = %2628, %2565
  %2639 = phi i32 [ %2568, %2565 ], [ %2634, %2628 ]
  %2640 = sext i32 %2639 to i64
  %2641 = getelementptr inbounds double, ptr %2, i64 %2640
  %2642 = load double, ptr %2641, align 8, !tbaa !19
  %2643 = getelementptr inbounds double, ptr %2529, i64 %2640
  %2644 = load double, ptr %2643, align 8, !tbaa !19
  %2645 = fptosi double %2644 to i32
  %2646 = load i32, ptr %2531, align 4, !tbaa !6
  %2647 = sitofp i32 %2646 to double
  %2648 = sitofp i32 %2645 to double
  %2649 = fmul fast double %2642, %2648
  %2650 = fcmp fast olt double %2649, 0.000000e+00
  %2651 = fneg fast double %2649
  %2652 = select nnan ninf i1 %2650, double %2651, double %2649
  %2653 = fmul fast double %2649, %2649
  %2654 = fmul fast double %2653, %2652
  %2655 = fadd fast double %2654, %2647
  %2656 = fptosi double %2655 to i32
  store i32 %2656, ptr %2531, align 4, !tbaa !6
  %2657 = fadd fast double %2642, %2567
  %2658 = add nuw nsw i32 %2566, 1
  br i1 %2559, label %2659, label %2706

2659:                                             ; preds = %2638
  %2660 = load i32, ptr %4, align 4, !tbaa !6
  %2661 = load i32, ptr %12, align 4, !tbaa !6
  %2662 = add nsw i32 %2661, -1
  %2663 = icmp slt i32 %2660, %2662
  br i1 %2663, label %2683, label %2664

2664:                                             ; preds = %2659
  %2665 = icmp eq i32 %2660, %2662
  br i1 %2665, label %2666, label %2699

2666:                                             ; preds = %2664
  store i32 0, ptr %4, align 4, !tbaa !6
  %2667 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2667, ptr %6, align 4, !tbaa !6
  br i1 %2564, label %2706, label %2668

2668:                                             ; preds = %2666, %2693
  %2669 = phi i64 [ %2697, %2693 ], [ 1, %2666 ]
  %2670 = getelementptr inbounds i32, ptr %4, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !6
  %2672 = getelementptr inbounds i32, ptr %12, i64 %2669
  %2673 = load i32, ptr %2672, align 4, !tbaa !6
  %2674 = add nsw i32 %2673, -1
  %2675 = icmp slt i32 %2671, %2674
  br i1 %2675, label %2676, label %2691

2676:                                             ; preds = %2668
  br i1 %2663, label %2683, label %2677

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds i32, ptr %7, i64 %2669
  %2679 = load i32, ptr %2678, align 4, !tbaa !6
  %2680 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2681 = load i32, ptr %2680, align 4, !tbaa !6
  %2682 = add nsw i32 %2681, %2679
  store i32 %2682, ptr %2680, align 4, !tbaa !6
  br label %2701

2683:                                             ; preds = %2659, %2676
  %2684 = phi i32 [ %2671, %2676 ], [ %2660, %2659 ]
  %2685 = phi ptr [ %2670, %2676 ], [ %4, %2659 ]
  %2686 = phi i64 [ %2669, %2676 ], [ 0, %2659 ]
  %2687 = add nsw i32 %2684, 1
  store i32 %2687, ptr %2685, align 4, !tbaa !6
  %2688 = getelementptr inbounds i32, ptr %7, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !6
  %2690 = getelementptr inbounds i32, ptr %6, i64 %2686
  br label %2701

2691:                                             ; preds = %2668
  %2692 = icmp eq i32 %2671, %2674
  br i1 %2692, label %2693, label %2699

2693:                                             ; preds = %2691
  store i32 0, ptr %2670, align 4, !tbaa !6
  %2694 = getelementptr inbounds i32, ptr %8, i64 %2669
  %2695 = load i32, ptr %2694, align 4, !tbaa !6
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2669
  store i32 %2695, ptr %2696, align 4, !tbaa !6
  %2697 = add nuw nsw i64 %2669, 1
  %2698 = icmp eq i64 %2697, %2562
  br i1 %2698, label %2706, label %2668, !llvm.loop !1028

2699:                                             ; preds = %2664, %2691
  %2700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2701:                                             ; preds = %2677, %2683
  %2702 = phi ptr [ %2690, %2683 ], [ %2670, %2677 ]
  %2703 = phi i32 [ %2689, %2683 ], [ 1, %2677 ]
  %2704 = load i32, ptr %2702, align 4, !tbaa !6
  %2705 = add nsw i32 %2704, %2703
  store i32 %2705, ptr %2702, align 4, !tbaa !6
  br label %2706

2706:                                             ; preds = %2693, %2701, %2666, %2638
  %2707 = icmp eq i32 %2658, %5
  br i1 %2707, label %5661, label %2565, !llvm.loop !1029

2708:                                             ; preds = %2548, %2851
  %2709 = phi i32 [ 0, %2548 ], [ %2800, %2851 ]
  %2710 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2549, label %2711, label %2780

2711:                                             ; preds = %2708, %2770
  %2712 = phi i32 [ %2779, %2770 ], [ 0, %2708 ]
  %2713 = phi i64 [ %2721, %2770 ], [ %2553, %2708 ]
  %2714 = phi i64 [ %2778, %2770 ], [ %2552, %2708 ]
  %2715 = phi i32 [ %2776, %2770 ], [ %2710, %2708 ]
  %2716 = sub i32 %2551, %2712
  %2717 = tail call i32 @llvm.smin.i32(i32 %2716, i32 0)
  %2718 = sub i32 %2716, %2717
  %2719 = zext i32 %2718 to i64
  %2720 = add nuw nsw i64 %2719, 1
  %2721 = add nsw i64 %2713, -1
  %2722 = icmp ult i32 %2718, 31
  br i1 %2722, label %2758, label %2723

2723:                                             ; preds = %2711
  %2724 = and i64 %2720, 8589934560
  %2725 = sub i64 %2714, %2724
  br label %2726

2726:                                             ; preds = %2726, %2723
  %2727 = phi i64 [ 0, %2723 ], [ %2750, %2726 ]
  %2728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2746, %2726 ]
  %2729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2747, %2726 ]
  %2730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2748, %2726 ]
  %2731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2749, %2726 ]
  %2732 = sub i64 %2714, %2727
  %2733 = getelementptr inbounds i32, ptr %11, i64 %2732
  %2734 = getelementptr inbounds i32, ptr %2733, i64 -7
  %2735 = load <8 x i32>, ptr %2734, align 4, !tbaa !6
  %2736 = shufflevector <8 x i32> %2735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2737 = getelementptr inbounds i32, ptr %2733, i64 -15
  %2738 = load <8 x i32>, ptr %2737, align 4, !tbaa !6
  %2739 = shufflevector <8 x i32> %2738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2740 = getelementptr inbounds i32, ptr %2733, i64 -23
  %2741 = load <8 x i32>, ptr %2740, align 4, !tbaa !6
  %2742 = shufflevector <8 x i32> %2741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2743 = getelementptr inbounds i32, ptr %2733, i64 -31
  %2744 = load <8 x i32>, ptr %2743, align 4, !tbaa !6
  %2745 = shufflevector <8 x i32> %2744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2746 = mul <8 x i32> %2736, %2728
  %2747 = mul <8 x i32> %2739, %2729
  %2748 = mul <8 x i32> %2742, %2730
  %2749 = mul <8 x i32> %2745, %2731
  %2750 = add nuw i64 %2727, 32
  %2751 = icmp eq i64 %2750, %2724
  br i1 %2751, label %2752, label %2726, !llvm.loop !1030

2752:                                             ; preds = %2726
  %2753 = mul <8 x i32> %2747, %2746
  %2754 = mul <8 x i32> %2748, %2753
  %2755 = mul <8 x i32> %2749, %2754
  %2756 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2755)
  %2757 = icmp eq i64 %2720, %2724
  br i1 %2757, label %2770, label %2758

2758:                                             ; preds = %2711, %2752
  %2759 = phi i64 [ %2714, %2711 ], [ %2725, %2752 ]
  %2760 = phi i32 [ 1, %2711 ], [ %2756, %2752 ]
  br label %2761

2761:                                             ; preds = %2758, %2761
  %2762 = phi i64 [ %2767, %2761 ], [ %2759, %2758 ]
  %2763 = phi i32 [ %2766, %2761 ], [ %2760, %2758 ]
  %2764 = getelementptr inbounds i32, ptr %11, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !6
  %2766 = mul nsw i32 %2765, %2763
  %2767 = add nsw i64 %2762, -1
  %2768 = trunc i64 %2762 to i32
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2761, label %2770, !llvm.loop !1031

2770:                                             ; preds = %2761, %2752
  %2771 = phi i32 [ %2756, %2752 ], [ %2766, %2761 ]
  %2772 = and i64 %2721, 4294967295
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2772
  %2774 = load i32, ptr %2773, align 4, !tbaa !6
  %2775 = mul nsw i32 %2774, %2771
  %2776 = add nsw i32 %2775, %2715
  %2777 = icmp sgt i64 %2713, 2
  %2778 = add nsw i64 %2714, -1
  %2779 = add i32 %2712, 1
  br i1 %2777, label %2711, label %2780, !llvm.loop !1032

2780:                                             ; preds = %2770, %2708
  %2781 = phi i32 [ %2710, %2708 ], [ %2776, %2770 ]
  %2782 = icmp slt i32 %2781, %5
  br i1 %2782, label %2785, label %2783

2783:                                             ; preds = %2780
  %2784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2785:                                             ; preds = %2780
  %2786 = sext i32 %2781 to i64
  %2787 = getelementptr inbounds double, ptr %2529, i64 %2786
  %2788 = load double, ptr %2787, align 8, !tbaa !19
  %2789 = fptosi double %2788 to i32
  %2790 = load i32, ptr %2531, align 4, !tbaa !6
  %2791 = sitofp i32 %2790 to double
  %2792 = sitofp i32 %2789 to double
  %2793 = icmp slt i32 %2789, 0
  %2794 = fneg fast double %2792
  %2795 = select i1 %2793, double %2794, double %2792
  %2796 = fmul fast double %2792, %2792
  %2797 = fmul fast double %2796, %2795
  %2798 = fadd fast double %2797, %2791
  %2799 = fptosi double %2798 to i32
  store i32 %2799, ptr %2531, align 4, !tbaa !6
  %2800 = add nuw nsw i32 %2709, 1
  br i1 %2550, label %2801, label %2851

2801:                                             ; preds = %2785
  %2802 = load i32, ptr %4, align 4, !tbaa !6
  %2803 = load i32, ptr %12, align 4, !tbaa !6
  %2804 = add nsw i32 %2803, -1
  %2805 = icmp slt i32 %2802, %2804
  br i1 %2805, label %2828, label %2806

2806:                                             ; preds = %2801
  %2807 = icmp eq i32 %2802, %2804
  br i1 %2807, label %2808, label %2844

2808:                                             ; preds = %2806
  store i32 0, ptr %4, align 4, !tbaa !6
  %2809 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2809, ptr %6, align 4, !tbaa !6
  br i1 %2555, label %2851, label %2810

2810:                                             ; preds = %2808, %2838
  %2811 = phi i64 [ %2842, %2838 ], [ 1, %2808 ]
  %2812 = getelementptr inbounds i32, ptr %4, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !6
  %2814 = getelementptr inbounds i32, ptr %12, i64 %2811
  %2815 = load i32, ptr %2814, align 4, !tbaa !6
  %2816 = add nsw i32 %2815, -1
  %2817 = icmp slt i32 %2813, %2816
  br i1 %2817, label %2818, label %2836

2818:                                             ; preds = %2810
  br i1 %2805, label %2828, label %2819

2819:                                             ; preds = %2818
  %2820 = shl i64 %2811, 32
  %2821 = add i64 %2820, -4294967296
  %2822 = ashr exact i64 %2821, 32
  %2823 = getelementptr inbounds i32, ptr %7, i64 %2822
  %2824 = load i32, ptr %2823, align 4, !tbaa !6
  %2825 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2826 = load i32, ptr %2825, align 4, !tbaa !6
  %2827 = add nsw i32 %2826, %2824
  store i32 %2827, ptr %2825, align 4, !tbaa !6
  br label %2846

2828:                                             ; preds = %2801, %2818
  %2829 = phi i32 [ %2813, %2818 ], [ %2802, %2801 ]
  %2830 = phi ptr [ %2812, %2818 ], [ %4, %2801 ]
  %2831 = phi i64 [ %2811, %2818 ], [ 0, %2801 ]
  %2832 = add nsw i32 %2829, 1
  store i32 %2832, ptr %2830, align 4, !tbaa !6
  %2833 = getelementptr inbounds i32, ptr %7, i64 %2831
  %2834 = load i32, ptr %2833, align 4, !tbaa !6
  %2835 = getelementptr inbounds i32, ptr %6, i64 %2831
  br label %2846

2836:                                             ; preds = %2810
  %2837 = icmp eq i32 %2813, %2816
  br i1 %2837, label %2838, label %2844

2838:                                             ; preds = %2836
  store i32 0, ptr %2812, align 4, !tbaa !6
  %2839 = getelementptr inbounds i32, ptr %8, i64 %2811
  %2840 = load i32, ptr %2839, align 4, !tbaa !6
  %2841 = getelementptr inbounds i32, ptr %6, i64 %2811
  store i32 %2840, ptr %2841, align 4, !tbaa !6
  %2842 = add nuw nsw i64 %2811, 1
  %2843 = icmp eq i64 %2842, %2553
  br i1 %2843, label %2851, label %2810, !llvm.loop !1033

2844:                                             ; preds = %2806, %2836
  %2845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2846:                                             ; preds = %2819, %2828
  %2847 = phi ptr [ %2835, %2828 ], [ %2812, %2819 ]
  %2848 = phi i32 [ %2834, %2828 ], [ 1, %2819 ]
  %2849 = load i32, ptr %2847, align 4, !tbaa !6
  %2850 = add nsw i32 %2849, %2848
  store i32 %2850, ptr %2847, align 4, !tbaa !6
  br label %2851

2851:                                             ; preds = %2838, %2846, %2808, %2785
  %2852 = icmp eq i32 %2800, %5
  br i1 %2852, label %5661, label %2708, !llvm.loop !1034

2853:                                             ; preds = %2541
  %2854 = getelementptr inbounds i32, ptr %3, i64 %19
  %2855 = load i32, ptr %2854, align 4, !tbaa !6
  %2856 = icmp eq i32 %2855, 0
  %2857 = icmp sgt i32 %5, 0
  br i1 %2856, label %2867, label %2858

2858:                                             ; preds = %2853
  br i1 %2857, label %2859, label %5661

2859:                                             ; preds = %2858
  %2860 = icmp sgt i32 %13, 1
  %2861 = icmp sgt i32 %13, 0
  %2862 = add i32 %13, -2
  %2863 = zext i32 %2862 to i64
  %2864 = zext i32 %13 to i64
  %2865 = add nuw i32 %5, 1
  %2866 = icmp eq i32 %13, 1
  br label %3013

2867:                                             ; preds = %2853
  br i1 %2857, label %2868, label %5661

2868:                                             ; preds = %2867
  %2869 = icmp sgt i32 %13, 1
  %2870 = icmp sgt i32 %13, 0
  %2871 = add i32 %13, -2
  %2872 = zext i32 %2871 to i64
  %2873 = zext i32 %13 to i64
  %2874 = add nuw i32 %5, 1
  %2875 = icmp eq i32 %13, 1
  br label %2876

2876:                                             ; preds = %2868, %3011
  %2877 = phi i32 [ 0, %2868 ], [ %2963, %3011 ]
  %2878 = phi double [ 0.000000e+00, %2868 ], [ %2962, %3011 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2869, label %2880, label %2949

2880:                                             ; preds = %2876, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2876 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2873, %2876 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2872, %2876 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2876 ]
  %2885 = sub i32 %2871, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %9, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !6
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !6
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !6
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !6
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1035

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %9, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !6
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1036

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !6
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1037

2949:                                             ; preds = %2939, %2876
  %2950 = phi i32 [ %2879, %2876 ], [ %2945, %2939 ]
  %2951 = sext i32 %2950 to i64
  %2952 = getelementptr inbounds double, ptr %2529, i64 %2951
  %2953 = load double, ptr %2952, align 8, !tbaa !19
  %2954 = fptosi double %2953 to i32
  %2955 = load i32, ptr %2531, align 4, !tbaa !6
  %2956 = icmp slt i32 %2954, 0
  %2957 = mul nsw i32 %2954, %2954
  %2958 = sub nsw i32 0, %2957
  %2959 = select i1 %2956, i32 %2958, i32 %2957
  %2960 = mul i32 %2959, %2954
  %2961 = add nsw i32 %2960, %2955
  store i32 %2961, ptr %2531, align 4, !tbaa !6
  %2962 = fadd fast double %2878, 1.000000e+00
  %2963 = add nuw nsw i32 %2877, 1
  br i1 %2870, label %2964, label %3011

2964:                                             ; preds = %2949
  %2965 = load i32, ptr %4, align 4, !tbaa !6
  %2966 = load i32, ptr %12, align 4, !tbaa !6
  %2967 = add nsw i32 %2966, -1
  %2968 = icmp slt i32 %2965, %2967
  br i1 %2968, label %2988, label %2969

2969:                                             ; preds = %2964
  %2970 = icmp eq i32 %2965, %2967
  br i1 %2970, label %2971, label %3004

2971:                                             ; preds = %2969
  store i32 0, ptr %4, align 4, !tbaa !6
  %2972 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2972, ptr %6, align 4, !tbaa !6
  br i1 %2875, label %3011, label %2973

2973:                                             ; preds = %2971, %2998
  %2974 = phi i64 [ %3002, %2998 ], [ 1, %2971 ]
  %2975 = getelementptr inbounds i32, ptr %4, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !6
  %2977 = getelementptr inbounds i32, ptr %12, i64 %2974
  %2978 = load i32, ptr %2977, align 4, !tbaa !6
  %2979 = add nsw i32 %2978, -1
  %2980 = icmp slt i32 %2976, %2979
  br i1 %2980, label %2981, label %2996

2981:                                             ; preds = %2973
  br i1 %2968, label %2988, label %2982

2982:                                             ; preds = %2981
  %2983 = getelementptr inbounds i32, ptr %7, i64 %2974
  %2984 = load i32, ptr %2983, align 4, !tbaa !6
  %2985 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2986 = load i32, ptr %2985, align 4, !tbaa !6
  %2987 = add nsw i32 %2986, %2984
  store i32 %2987, ptr %2985, align 4, !tbaa !6
  br label %3006

2988:                                             ; preds = %2964, %2981
  %2989 = phi i32 [ %2976, %2981 ], [ %2965, %2964 ]
  %2990 = phi ptr [ %2975, %2981 ], [ %4, %2964 ]
  %2991 = phi i64 [ %2974, %2981 ], [ 0, %2964 ]
  %2992 = add nsw i32 %2989, 1
  store i32 %2992, ptr %2990, align 4, !tbaa !6
  %2993 = getelementptr inbounds i32, ptr %7, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2991
  br label %3006

2996:                                             ; preds = %2973
  %2997 = icmp eq i32 %2976, %2979
  br i1 %2997, label %2998, label %3004

2998:                                             ; preds = %2996
  store i32 0, ptr %2975, align 4, !tbaa !6
  %2999 = getelementptr inbounds i32, ptr %8, i64 %2974
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2974
  store i32 %3000, ptr %3001, align 4, !tbaa !6
  %3002 = add nuw nsw i64 %2974, 1
  %3003 = icmp eq i64 %3002, %2873
  br i1 %3003, label %3011, label %2973, !llvm.loop !1038

3004:                                             ; preds = %2969, %2996
  %3005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3006:                                             ; preds = %2982, %2988
  %3007 = phi ptr [ %2995, %2988 ], [ %2975, %2982 ]
  %3008 = phi i32 [ %2994, %2988 ], [ 1, %2982 ]
  %3009 = load i32, ptr %3007, align 4, !tbaa !6
  %3010 = add nsw i32 %3009, %3008
  store i32 %3010, ptr %3007, align 4, !tbaa !6
  br label %3011

3011:                                             ; preds = %2998, %3006, %2971, %2949
  %3012 = icmp eq i32 %2963, %5
  br i1 %3012, label %5661, label %2876, !llvm.loop !1039

3013:                                             ; preds = %2859, %3153
  %3014 = phi i32 [ 0, %2859 ], [ %3102, %3153 ]
  %3015 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2860, label %3016, label %3085

3016:                                             ; preds = %3013, %3075
  %3017 = phi i32 [ %3084, %3075 ], [ 0, %3013 ]
  %3018 = phi i64 [ %3026, %3075 ], [ %2864, %3013 ]
  %3019 = phi i64 [ %3083, %3075 ], [ %2863, %3013 ]
  %3020 = phi i32 [ %3081, %3075 ], [ %3015, %3013 ]
  %3021 = sub i32 %2862, %3017
  %3022 = tail call i32 @llvm.smin.i32(i32 %3021, i32 0)
  %3023 = sub i32 %3021, %3022
  %3024 = zext i32 %3023 to i64
  %3025 = add nuw nsw i64 %3024, 1
  %3026 = add nsw i64 %3018, -1
  %3027 = icmp ult i32 %3023, 31
  br i1 %3027, label %3063, label %3028

3028:                                             ; preds = %3016
  %3029 = and i64 %3025, 8589934560
  %3030 = sub i64 %3019, %3029
  br label %3031

3031:                                             ; preds = %3031, %3028
  %3032 = phi i64 [ 0, %3028 ], [ %3055, %3031 ]
  %3033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3051, %3031 ]
  %3034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3052, %3031 ]
  %3035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3053, %3031 ]
  %3036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3054, %3031 ]
  %3037 = sub i64 %3019, %3032
  %3038 = getelementptr inbounds i32, ptr %11, i64 %3037
  %3039 = getelementptr inbounds i32, ptr %3038, i64 -7
  %3040 = load <8 x i32>, ptr %3039, align 4, !tbaa !6
  %3041 = shufflevector <8 x i32> %3040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3042 = getelementptr inbounds i32, ptr %3038, i64 -15
  %3043 = load <8 x i32>, ptr %3042, align 4, !tbaa !6
  %3044 = shufflevector <8 x i32> %3043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3045 = getelementptr inbounds i32, ptr %3038, i64 -23
  %3046 = load <8 x i32>, ptr %3045, align 4, !tbaa !6
  %3047 = shufflevector <8 x i32> %3046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3048 = getelementptr inbounds i32, ptr %3038, i64 -31
  %3049 = load <8 x i32>, ptr %3048, align 4, !tbaa !6
  %3050 = shufflevector <8 x i32> %3049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3051 = mul <8 x i32> %3041, %3033
  %3052 = mul <8 x i32> %3044, %3034
  %3053 = mul <8 x i32> %3047, %3035
  %3054 = mul <8 x i32> %3050, %3036
  %3055 = add nuw i64 %3032, 32
  %3056 = icmp eq i64 %3055, %3029
  br i1 %3056, label %3057, label %3031, !llvm.loop !1040

3057:                                             ; preds = %3031
  %3058 = mul <8 x i32> %3052, %3051
  %3059 = mul <8 x i32> %3053, %3058
  %3060 = mul <8 x i32> %3054, %3059
  %3061 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3060)
  %3062 = icmp eq i64 %3025, %3029
  br i1 %3062, label %3075, label %3063

3063:                                             ; preds = %3016, %3057
  %3064 = phi i64 [ %3019, %3016 ], [ %3030, %3057 ]
  %3065 = phi i32 [ 1, %3016 ], [ %3061, %3057 ]
  br label %3066

3066:                                             ; preds = %3063, %3066
  %3067 = phi i64 [ %3072, %3066 ], [ %3064, %3063 ]
  %3068 = phi i32 [ %3071, %3066 ], [ %3065, %3063 ]
  %3069 = getelementptr inbounds i32, ptr %11, i64 %3067
  %3070 = load i32, ptr %3069, align 4, !tbaa !6
  %3071 = mul nsw i32 %3070, %3068
  %3072 = add nsw i64 %3067, -1
  %3073 = trunc i64 %3067 to i32
  %3074 = icmp sgt i32 %3073, 0
  br i1 %3074, label %3066, label %3075, !llvm.loop !1041

3075:                                             ; preds = %3066, %3057
  %3076 = phi i32 [ %3061, %3057 ], [ %3071, %3066 ]
  %3077 = and i64 %3026, 4294967295
  %3078 = getelementptr inbounds i32, ptr %6, i64 %3077
  %3079 = load i32, ptr %3078, align 4, !tbaa !6
  %3080 = mul nsw i32 %3079, %3076
  %3081 = add nsw i32 %3080, %3020
  %3082 = icmp sgt i64 %3018, 2
  %3083 = add nsw i64 %3019, -1
  %3084 = add i32 %3017, 1
  br i1 %3082, label %3016, label %3085, !llvm.loop !1042

3085:                                             ; preds = %3075, %3013
  %3086 = phi i32 [ %3015, %3013 ], [ %3081, %3075 ]
  %3087 = icmp slt i32 %3086, %5
  br i1 %3087, label %3090, label %3088

3088:                                             ; preds = %3085
  %3089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3090:                                             ; preds = %3085
  %3091 = sext i32 %3086 to i64
  %3092 = getelementptr inbounds double, ptr %2529, i64 %3091
  %3093 = load double, ptr %3092, align 8, !tbaa !19
  %3094 = fptosi double %3093 to i32
  %3095 = load i32, ptr %2531, align 4, !tbaa !6
  %3096 = icmp slt i32 %3094, 0
  %3097 = mul nsw i32 %3094, %3094
  %3098 = sub nsw i32 0, %3097
  %3099 = select i1 %3096, i32 %3098, i32 %3097
  %3100 = mul i32 %3099, %3094
  %3101 = add nsw i32 %3100, %3095
  store i32 %3101, ptr %2531, align 4, !tbaa !6
  %3102 = add nuw nsw i32 %3014, 1
  br i1 %2861, label %3103, label %3153

3103:                                             ; preds = %3090
  %3104 = load i32, ptr %4, align 4, !tbaa !6
  %3105 = load i32, ptr %12, align 4, !tbaa !6
  %3106 = add nsw i32 %3105, -1
  %3107 = icmp slt i32 %3104, %3106
  br i1 %3107, label %3130, label %3108

3108:                                             ; preds = %3103
  %3109 = icmp eq i32 %3104, %3106
  br i1 %3109, label %3110, label %3146

3110:                                             ; preds = %3108
  store i32 0, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3111, ptr %6, align 4, !tbaa !6
  br i1 %2866, label %3153, label %3112

3112:                                             ; preds = %3110, %3140
  %3113 = phi i64 [ %3144, %3140 ], [ 1, %3110 ]
  %3114 = getelementptr inbounds i32, ptr %4, i64 %3113
  %3115 = load i32, ptr %3114, align 4, !tbaa !6
  %3116 = getelementptr inbounds i32, ptr %12, i64 %3113
  %3117 = load i32, ptr %3116, align 4, !tbaa !6
  %3118 = add nsw i32 %3117, -1
  %3119 = icmp slt i32 %3115, %3118
  br i1 %3119, label %3120, label %3138

3120:                                             ; preds = %3112
  br i1 %3107, label %3130, label %3121

3121:                                             ; preds = %3120
  %3122 = shl i64 %3113, 32
  %3123 = add i64 %3122, -4294967296
  %3124 = ashr exact i64 %3123, 32
  %3125 = getelementptr inbounds i32, ptr %7, i64 %3124
  %3126 = load i32, ptr %3125, align 4, !tbaa !6
  %3127 = getelementptr inbounds i32, ptr %6, i64 %3113
  %3128 = load i32, ptr %3127, align 4, !tbaa !6
  %3129 = add nsw i32 %3128, %3126
  store i32 %3129, ptr %3127, align 4, !tbaa !6
  br label %3148

3130:                                             ; preds = %3103, %3120
  %3131 = phi i32 [ %3115, %3120 ], [ %3104, %3103 ]
  %3132 = phi ptr [ %3114, %3120 ], [ %4, %3103 ]
  %3133 = phi i64 [ %3113, %3120 ], [ 0, %3103 ]
  %3134 = add nsw i32 %3131, 1
  store i32 %3134, ptr %3132, align 4, !tbaa !6
  %3135 = getelementptr inbounds i32, ptr %7, i64 %3133
  %3136 = load i32, ptr %3135, align 4, !tbaa !6
  %3137 = getelementptr inbounds i32, ptr %6, i64 %3133
  br label %3148

3138:                                             ; preds = %3112
  %3139 = icmp eq i32 %3115, %3118
  br i1 %3139, label %3140, label %3146

3140:                                             ; preds = %3138
  store i32 0, ptr %3114, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %8, i64 %3113
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3113
  store i32 %3142, ptr %3143, align 4, !tbaa !6
  %3144 = add nuw nsw i64 %3113, 1
  %3145 = icmp eq i64 %3144, %2864
  br i1 %3145, label %3153, label %3112, !llvm.loop !1043

3146:                                             ; preds = %3108, %3138
  %3147 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3148:                                             ; preds = %3121, %3130
  %3149 = phi ptr [ %3137, %3130 ], [ %3114, %3121 ]
  %3150 = phi i32 [ %3136, %3130 ], [ 1, %3121 ]
  %3151 = load i32, ptr %3149, align 4, !tbaa !6
  %3152 = add nsw i32 %3151, %3150
  store i32 %3152, ptr %3149, align 4, !tbaa !6
  br label %3153

3153:                                             ; preds = %3140, %3148, %3110, %3090
  %3154 = icmp eq i32 %3102, %5
  br i1 %3154, label %5661, label %3013, !llvm.loop !1044

3155:                                             ; preds = %2541
  %3156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

3157:                                             ; preds = %18
  %3158 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3159 = load ptr, ptr %3158, align 8, !tbaa !10
  %3160 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3161 = load ptr, ptr %3160, align 8, !tbaa !10
  store i64 0, ptr %3161, align 8, !tbaa !121
  %3162 = icmp eq i32 %13, 0
  br i1 %3162, label %3163, label %3171

3163:                                             ; preds = %3157
  %3164 = load double, ptr %3159, align 8, !tbaa !19
  %3165 = fptosi double %3164 to i64
  %3166 = icmp slt i64 %3165, 0
  %3167 = mul nsw i64 %3165, %3165
  %3168 = sub nsw i64 0, %3167
  %3169 = select i1 %3166, i64 %3168, i64 %3167
  %3170 = mul i64 %3169, %3165
  store i64 %3170, ptr %3161, align 8, !tbaa !121
  br label %5661

3171:                                             ; preds = %3157
  switch i32 %1, label %3785 [
    i32 1, label %3172
    i32 0, label %3483
  ]

3172:                                             ; preds = %3171
  %3173 = getelementptr inbounds i32, ptr %3, i64 %19
  %3174 = load i32, ptr %3173, align 4, !tbaa !6
  %3175 = icmp eq i32 %3174, 0
  %3176 = icmp sgt i32 %5, 0
  br i1 %3175, label %3186, label %3177

3177:                                             ; preds = %3172
  br i1 %3176, label %3178, label %5661

3178:                                             ; preds = %3177
  %3179 = icmp sgt i32 %13, 1
  %3180 = icmp sgt i32 %13, 0
  %3181 = add i32 %13, -2
  %3182 = zext i32 %3181 to i64
  %3183 = zext i32 %13 to i64
  %3184 = add nuw i32 %5, 1
  %3185 = icmp eq i32 %13, 1
  br label %3338

3186:                                             ; preds = %3172
  br i1 %3176, label %3187, label %5661

3187:                                             ; preds = %3186
  %3188 = icmp sgt i32 %13, 1
  %3189 = icmp sgt i32 %13, 0
  %3190 = add i32 %13, -2
  %3191 = zext i32 %3190 to i64
  %3192 = zext i32 %13 to i64
  %3193 = add nuw i32 %5, 1
  %3194 = icmp eq i32 %13, 1
  br label %3195

3195:                                             ; preds = %3187, %3336
  %3196 = phi i64 [ 0, %3187 ], [ %3286, %3336 ]
  %3197 = phi i32 [ 0, %3187 ], [ %3288, %3336 ]
  %3198 = phi double [ 0.000000e+00, %3187 ], [ %3287, %3336 ]
  %3199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3188, label %3200, label %3269

3200:                                             ; preds = %3195, %3259
  %3201 = phi i32 [ %3268, %3259 ], [ 0, %3195 ]
  %3202 = phi i64 [ %3210, %3259 ], [ %3192, %3195 ]
  %3203 = phi i64 [ %3267, %3259 ], [ %3191, %3195 ]
  %3204 = phi i32 [ %3265, %3259 ], [ %3199, %3195 ]
  %3205 = sub i32 %3190, %3201
  %3206 = tail call i32 @llvm.smin.i32(i32 %3205, i32 0)
  %3207 = sub i32 %3205, %3206
  %3208 = zext i32 %3207 to i64
  %3209 = add nuw nsw i64 %3208, 1
  %3210 = add nsw i64 %3202, -1
  %3211 = icmp ult i32 %3207, 31
  br i1 %3211, label %3247, label %3212

3212:                                             ; preds = %3200
  %3213 = and i64 %3209, 8589934560
  %3214 = sub i64 %3203, %3213
  br label %3215

3215:                                             ; preds = %3215, %3212
  %3216 = phi i64 [ 0, %3212 ], [ %3239, %3215 ]
  %3217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3235, %3215 ]
  %3218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3236, %3215 ]
  %3219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3237, %3215 ]
  %3220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3238, %3215 ]
  %3221 = sub i64 %3203, %3216
  %3222 = getelementptr inbounds i32, ptr %9, i64 %3221
  %3223 = getelementptr inbounds i32, ptr %3222, i64 -7
  %3224 = load <8 x i32>, ptr %3223, align 4, !tbaa !6
  %3225 = shufflevector <8 x i32> %3224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3226 = getelementptr inbounds i32, ptr %3222, i64 -15
  %3227 = load <8 x i32>, ptr %3226, align 4, !tbaa !6
  %3228 = shufflevector <8 x i32> %3227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3229 = getelementptr inbounds i32, ptr %3222, i64 -23
  %3230 = load <8 x i32>, ptr %3229, align 4, !tbaa !6
  %3231 = shufflevector <8 x i32> %3230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3232 = getelementptr inbounds i32, ptr %3222, i64 -31
  %3233 = load <8 x i32>, ptr %3232, align 4, !tbaa !6
  %3234 = shufflevector <8 x i32> %3233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3235 = mul <8 x i32> %3225, %3217
  %3236 = mul <8 x i32> %3228, %3218
  %3237 = mul <8 x i32> %3231, %3219
  %3238 = mul <8 x i32> %3234, %3220
  %3239 = add nuw i64 %3216, 32
  %3240 = icmp eq i64 %3239, %3213
  br i1 %3240, label %3241, label %3215, !llvm.loop !1045

3241:                                             ; preds = %3215
  %3242 = mul <8 x i32> %3236, %3235
  %3243 = mul <8 x i32> %3237, %3242
  %3244 = mul <8 x i32> %3238, %3243
  %3245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3244)
  %3246 = icmp eq i64 %3209, %3213
  br i1 %3246, label %3259, label %3247

3247:                                             ; preds = %3200, %3241
  %3248 = phi i64 [ %3203, %3200 ], [ %3214, %3241 ]
  %3249 = phi i32 [ 1, %3200 ], [ %3245, %3241 ]
  br label %3250

3250:                                             ; preds = %3247, %3250
  %3251 = phi i64 [ %3256, %3250 ], [ %3248, %3247 ]
  %3252 = phi i32 [ %3255, %3250 ], [ %3249, %3247 ]
  %3253 = getelementptr inbounds i32, ptr %9, i64 %3251
  %3254 = load i32, ptr %3253, align 4, !tbaa !6
  %3255 = mul nsw i32 %3254, %3252
  %3256 = add nsw i64 %3251, -1
  %3257 = trunc i64 %3251 to i32
  %3258 = icmp sgt i32 %3257, 0
  br i1 %3258, label %3250, label %3259, !llvm.loop !1046

3259:                                             ; preds = %3250, %3241
  %3260 = phi i32 [ %3245, %3241 ], [ %3255, %3250 ]
  %3261 = and i64 %3210, 4294967295
  %3262 = getelementptr inbounds i32, ptr %6, i64 %3261
  %3263 = load i32, ptr %3262, align 4, !tbaa !6
  %3264 = mul nsw i32 %3263, %3260
  %3265 = add nsw i32 %3264, %3204
  %3266 = icmp sgt i64 %3202, 2
  %3267 = add nsw i64 %3203, -1
  %3268 = add i32 %3201, 1
  br i1 %3266, label %3200, label %3269, !llvm.loop !1047

3269:                                             ; preds = %3259, %3195
  %3270 = phi i32 [ %3199, %3195 ], [ %3265, %3259 ]
  %3271 = sext i32 %3270 to i64
  %3272 = getelementptr inbounds double, ptr %2, i64 %3271
  %3273 = load double, ptr %3272, align 8, !tbaa !19
  %3274 = getelementptr inbounds double, ptr %3159, i64 %3271
  %3275 = load double, ptr %3274, align 8, !tbaa !19
  %3276 = fptosi double %3275 to i64
  %3277 = sitofp i64 %3196 to double
  %3278 = sitofp i64 %3276 to double
  %3279 = fmul fast double %3273, %3278
  %3280 = fcmp fast olt double %3279, 0.000000e+00
  %3281 = fneg fast double %3279
  %3282 = select nnan ninf i1 %3280, double %3281, double %3279
  %3283 = fmul fast double %3279, %3279
  %3284 = fmul fast double %3283, %3282
  %3285 = fadd fast double %3284, %3277
  %3286 = fptosi double %3285 to i64
  %3287 = fadd fast double %3273, %3198
  %3288 = add nuw nsw i32 %3197, 1
  br i1 %3189, label %3289, label %3336

3289:                                             ; preds = %3269
  %3290 = load i32, ptr %4, align 4, !tbaa !6
  %3291 = load i32, ptr %12, align 4, !tbaa !6
  %3292 = add nsw i32 %3291, -1
  %3293 = icmp slt i32 %3290, %3292
  br i1 %3293, label %3313, label %3294

3294:                                             ; preds = %3289
  %3295 = icmp eq i32 %3290, %3292
  br i1 %3295, label %3296, label %3329

3296:                                             ; preds = %3294
  store i32 0, ptr %4, align 4, !tbaa !6
  %3297 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3297, ptr %6, align 4, !tbaa !6
  br i1 %3194, label %3336, label %3298

3298:                                             ; preds = %3296, %3323
  %3299 = phi i64 [ %3327, %3323 ], [ 1, %3296 ]
  %3300 = getelementptr inbounds i32, ptr %4, i64 %3299
  %3301 = load i32, ptr %3300, align 4, !tbaa !6
  %3302 = getelementptr inbounds i32, ptr %12, i64 %3299
  %3303 = load i32, ptr %3302, align 4, !tbaa !6
  %3304 = add nsw i32 %3303, -1
  %3305 = icmp slt i32 %3301, %3304
  br i1 %3305, label %3306, label %3321

3306:                                             ; preds = %3298
  br i1 %3293, label %3313, label %3307

3307:                                             ; preds = %3306
  %3308 = getelementptr inbounds i32, ptr %7, i64 %3299
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = getelementptr inbounds i32, ptr %6, i64 %3299
  %3311 = load i32, ptr %3310, align 4, !tbaa !6
  %3312 = add nsw i32 %3311, %3309
  store i32 %3312, ptr %3310, align 4, !tbaa !6
  br label %3331

3313:                                             ; preds = %3289, %3306
  %3314 = phi i32 [ %3301, %3306 ], [ %3290, %3289 ]
  %3315 = phi ptr [ %3300, %3306 ], [ %4, %3289 ]
  %3316 = phi i64 [ %3299, %3306 ], [ 0, %3289 ]
  %3317 = add nsw i32 %3314, 1
  store i32 %3317, ptr %3315, align 4, !tbaa !6
  %3318 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3319 = load i32, ptr %3318, align 4, !tbaa !6
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3316
  br label %3331

3321:                                             ; preds = %3298
  %3322 = icmp eq i32 %3301, %3304
  br i1 %3322, label %3323, label %3329

3323:                                             ; preds = %3321
  store i32 0, ptr %3300, align 4, !tbaa !6
  %3324 = getelementptr inbounds i32, ptr %8, i64 %3299
  %3325 = load i32, ptr %3324, align 4, !tbaa !6
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3299
  store i32 %3325, ptr %3326, align 4, !tbaa !6
  %3327 = add nuw nsw i64 %3299, 1
  %3328 = icmp eq i64 %3327, %3192
  br i1 %3328, label %3336, label %3298, !llvm.loop !1048

3329:                                             ; preds = %3294, %3321
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3331:                                             ; preds = %3307, %3313
  %3332 = phi ptr [ %3320, %3313 ], [ %3300, %3307 ]
  %3333 = phi i32 [ %3319, %3313 ], [ 1, %3307 ]
  %3334 = load i32, ptr %3332, align 4, !tbaa !6
  %3335 = add nsw i32 %3334, %3333
  store i32 %3335, ptr %3332, align 4, !tbaa !6
  br label %3336

3336:                                             ; preds = %3323, %3331, %3296, %3269
  %3337 = icmp eq i32 %3288, %5
  br i1 %3337, label %5657, label %3195, !llvm.loop !1049

3338:                                             ; preds = %3178, %3481
  %3339 = phi i64 [ 0, %3178 ], [ %3429, %3481 ]
  %3340 = phi i32 [ 0, %3178 ], [ %3430, %3481 ]
  %3341 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3179, label %3342, label %3411

3342:                                             ; preds = %3338, %3401
  %3343 = phi i32 [ %3410, %3401 ], [ 0, %3338 ]
  %3344 = phi i64 [ %3352, %3401 ], [ %3183, %3338 ]
  %3345 = phi i64 [ %3409, %3401 ], [ %3182, %3338 ]
  %3346 = phi i32 [ %3407, %3401 ], [ %3341, %3338 ]
  %3347 = sub i32 %3181, %3343
  %3348 = tail call i32 @llvm.smin.i32(i32 %3347, i32 0)
  %3349 = sub i32 %3347, %3348
  %3350 = zext i32 %3349 to i64
  %3351 = add nuw nsw i64 %3350, 1
  %3352 = add nsw i64 %3344, -1
  %3353 = icmp ult i32 %3349, 31
  br i1 %3353, label %3389, label %3354

3354:                                             ; preds = %3342
  %3355 = and i64 %3351, 8589934560
  %3356 = sub i64 %3345, %3355
  br label %3357

3357:                                             ; preds = %3357, %3354
  %3358 = phi i64 [ 0, %3354 ], [ %3381, %3357 ]
  %3359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3377, %3357 ]
  %3360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3378, %3357 ]
  %3361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3379, %3357 ]
  %3362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3380, %3357 ]
  %3363 = sub i64 %3345, %3358
  %3364 = getelementptr inbounds i32, ptr %11, i64 %3363
  %3365 = getelementptr inbounds i32, ptr %3364, i64 -7
  %3366 = load <8 x i32>, ptr %3365, align 4, !tbaa !6
  %3367 = shufflevector <8 x i32> %3366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3368 = getelementptr inbounds i32, ptr %3364, i64 -15
  %3369 = load <8 x i32>, ptr %3368, align 4, !tbaa !6
  %3370 = shufflevector <8 x i32> %3369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3371 = getelementptr inbounds i32, ptr %3364, i64 -23
  %3372 = load <8 x i32>, ptr %3371, align 4, !tbaa !6
  %3373 = shufflevector <8 x i32> %3372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3374 = getelementptr inbounds i32, ptr %3364, i64 -31
  %3375 = load <8 x i32>, ptr %3374, align 4, !tbaa !6
  %3376 = shufflevector <8 x i32> %3375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3377 = mul <8 x i32> %3367, %3359
  %3378 = mul <8 x i32> %3370, %3360
  %3379 = mul <8 x i32> %3373, %3361
  %3380 = mul <8 x i32> %3376, %3362
  %3381 = add nuw i64 %3358, 32
  %3382 = icmp eq i64 %3381, %3355
  br i1 %3382, label %3383, label %3357, !llvm.loop !1050

3383:                                             ; preds = %3357
  %3384 = mul <8 x i32> %3378, %3377
  %3385 = mul <8 x i32> %3379, %3384
  %3386 = mul <8 x i32> %3380, %3385
  %3387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3386)
  %3388 = icmp eq i64 %3351, %3355
  br i1 %3388, label %3401, label %3389

3389:                                             ; preds = %3342, %3383
  %3390 = phi i64 [ %3345, %3342 ], [ %3356, %3383 ]
  %3391 = phi i32 [ 1, %3342 ], [ %3387, %3383 ]
  br label %3392

3392:                                             ; preds = %3389, %3392
  %3393 = phi i64 [ %3398, %3392 ], [ %3390, %3389 ]
  %3394 = phi i32 [ %3397, %3392 ], [ %3391, %3389 ]
  %3395 = getelementptr inbounds i32, ptr %11, i64 %3393
  %3396 = load i32, ptr %3395, align 4, !tbaa !6
  %3397 = mul nsw i32 %3396, %3394
  %3398 = add nsw i64 %3393, -1
  %3399 = trunc i64 %3393 to i32
  %3400 = icmp sgt i32 %3399, 0
  br i1 %3400, label %3392, label %3401, !llvm.loop !1051

3401:                                             ; preds = %3392, %3383
  %3402 = phi i32 [ %3387, %3383 ], [ %3397, %3392 ]
  %3403 = and i64 %3352, 4294967295
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3403
  %3405 = load i32, ptr %3404, align 4, !tbaa !6
  %3406 = mul nsw i32 %3405, %3402
  %3407 = add nsw i32 %3406, %3346
  %3408 = icmp sgt i64 %3344, 2
  %3409 = add nsw i64 %3345, -1
  %3410 = add i32 %3343, 1
  br i1 %3408, label %3342, label %3411, !llvm.loop !1052

3411:                                             ; preds = %3401, %3338
  %3412 = phi i32 [ %3341, %3338 ], [ %3407, %3401 ]
  %3413 = icmp slt i32 %3412, %5
  br i1 %3413, label %3416, label %3414

3414:                                             ; preds = %3411
  %3415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3416:                                             ; preds = %3411
  %3417 = sext i32 %3412 to i64
  %3418 = getelementptr inbounds double, ptr %3159, i64 %3417
  %3419 = load double, ptr %3418, align 8, !tbaa !19
  %3420 = fptosi double %3419 to i64
  %3421 = sitofp i64 %3339 to double
  %3422 = sitofp i64 %3420 to double
  %3423 = icmp slt i64 %3420, 0
  %3424 = fneg fast double %3422
  %3425 = select i1 %3423, double %3424, double %3422
  %3426 = fmul fast double %3422, %3422
  %3427 = fmul fast double %3426, %3425
  %3428 = fadd fast double %3427, %3421
  %3429 = fptosi double %3428 to i64
  store i64 %3429, ptr %3161, align 8, !tbaa !121
  %3430 = add nuw nsw i32 %3340, 1
  br i1 %3180, label %3431, label %3481

3431:                                             ; preds = %3416
  %3432 = load i32, ptr %4, align 4, !tbaa !6
  %3433 = load i32, ptr %12, align 4, !tbaa !6
  %3434 = add nsw i32 %3433, -1
  %3435 = icmp slt i32 %3432, %3434
  br i1 %3435, label %3458, label %3436

3436:                                             ; preds = %3431
  %3437 = icmp eq i32 %3432, %3434
  br i1 %3437, label %3438, label %3474

3438:                                             ; preds = %3436
  store i32 0, ptr %4, align 4, !tbaa !6
  %3439 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3439, ptr %6, align 4, !tbaa !6
  br i1 %3185, label %3481, label %3440

3440:                                             ; preds = %3438, %3468
  %3441 = phi i64 [ %3472, %3468 ], [ 1, %3438 ]
  %3442 = getelementptr inbounds i32, ptr %4, i64 %3441
  %3443 = load i32, ptr %3442, align 4, !tbaa !6
  %3444 = getelementptr inbounds i32, ptr %12, i64 %3441
  %3445 = load i32, ptr %3444, align 4, !tbaa !6
  %3446 = add nsw i32 %3445, -1
  %3447 = icmp slt i32 %3443, %3446
  br i1 %3447, label %3448, label %3466

3448:                                             ; preds = %3440
  br i1 %3435, label %3458, label %3449

3449:                                             ; preds = %3448
  %3450 = shl i64 %3441, 32
  %3451 = add i64 %3450, -4294967296
  %3452 = ashr exact i64 %3451, 32
  %3453 = getelementptr inbounds i32, ptr %7, i64 %3452
  %3454 = load i32, ptr %3453, align 4, !tbaa !6
  %3455 = getelementptr inbounds i32, ptr %6, i64 %3441
  %3456 = load i32, ptr %3455, align 4, !tbaa !6
  %3457 = add nsw i32 %3456, %3454
  store i32 %3457, ptr %3455, align 4, !tbaa !6
  br label %3476

3458:                                             ; preds = %3431, %3448
  %3459 = phi i32 [ %3443, %3448 ], [ %3432, %3431 ]
  %3460 = phi ptr [ %3442, %3448 ], [ %4, %3431 ]
  %3461 = phi i64 [ %3441, %3448 ], [ 0, %3431 ]
  %3462 = add nsw i32 %3459, 1
  store i32 %3462, ptr %3460, align 4, !tbaa !6
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3461
  br label %3476

3466:                                             ; preds = %3440
  %3467 = icmp eq i32 %3443, %3446
  br i1 %3467, label %3468, label %3474

3468:                                             ; preds = %3466
  store i32 0, ptr %3442, align 4, !tbaa !6
  %3469 = getelementptr inbounds i32, ptr %8, i64 %3441
  %3470 = load i32, ptr %3469, align 4, !tbaa !6
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3441
  store i32 %3470, ptr %3471, align 4, !tbaa !6
  %3472 = add nuw nsw i64 %3441, 1
  %3473 = icmp eq i64 %3472, %3183
  br i1 %3473, label %3481, label %3440, !llvm.loop !1053

3474:                                             ; preds = %3436, %3466
  %3475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3476:                                             ; preds = %3449, %3458
  %3477 = phi ptr [ %3465, %3458 ], [ %3442, %3449 ]
  %3478 = phi i32 [ %3464, %3458 ], [ 1, %3449 ]
  %3479 = load i32, ptr %3477, align 4, !tbaa !6
  %3480 = add nsw i32 %3479, %3478
  store i32 %3480, ptr %3477, align 4, !tbaa !6
  br label %3481

3481:                                             ; preds = %3468, %3476, %3438, %3416
  %3482 = icmp eq i32 %3430, %5
  br i1 %3482, label %5661, label %3338, !llvm.loop !1054

3483:                                             ; preds = %3171
  %3484 = getelementptr inbounds i32, ptr %3, i64 %19
  %3485 = load i32, ptr %3484, align 4, !tbaa !6
  %3486 = icmp eq i32 %3485, 0
  %3487 = icmp sgt i32 %5, 0
  br i1 %3486, label %3497, label %3488

3488:                                             ; preds = %3483
  br i1 %3487, label %3489, label %5661

3489:                                             ; preds = %3488
  %3490 = icmp sgt i32 %13, 1
  %3491 = icmp sgt i32 %13, 0
  %3492 = add i32 %13, -2
  %3493 = zext i32 %3492 to i64
  %3494 = zext i32 %13 to i64
  %3495 = add nuw i32 %5, 1
  %3496 = icmp eq i32 %13, 1
  br label %3643

3497:                                             ; preds = %3483
  br i1 %3487, label %3498, label %5661

3498:                                             ; preds = %3497
  %3499 = icmp sgt i32 %13, 1
  %3500 = icmp sgt i32 %13, 0
  %3501 = add i32 %13, -2
  %3502 = zext i32 %3501 to i64
  %3503 = zext i32 %13 to i64
  %3504 = add nuw i32 %5, 1
  %3505 = icmp eq i32 %13, 1
  br label %3506

3506:                                             ; preds = %3498, %3641
  %3507 = phi i64 [ 0, %3498 ], [ %3591, %3641 ]
  %3508 = phi i32 [ 0, %3498 ], [ %3593, %3641 ]
  %3509 = phi double [ 0.000000e+00, %3498 ], [ %3592, %3641 ]
  %3510 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3499, label %3511, label %3580

3511:                                             ; preds = %3506, %3570
  %3512 = phi i32 [ %3579, %3570 ], [ 0, %3506 ]
  %3513 = phi i64 [ %3521, %3570 ], [ %3503, %3506 ]
  %3514 = phi i64 [ %3578, %3570 ], [ %3502, %3506 ]
  %3515 = phi i32 [ %3576, %3570 ], [ %3510, %3506 ]
  %3516 = sub i32 %3501, %3512
  %3517 = tail call i32 @llvm.smin.i32(i32 %3516, i32 0)
  %3518 = sub i32 %3516, %3517
  %3519 = zext i32 %3518 to i64
  %3520 = add nuw nsw i64 %3519, 1
  %3521 = add nsw i64 %3513, -1
  %3522 = icmp ult i32 %3518, 31
  br i1 %3522, label %3558, label %3523

3523:                                             ; preds = %3511
  %3524 = and i64 %3520, 8589934560
  %3525 = sub i64 %3514, %3524
  br label %3526

3526:                                             ; preds = %3526, %3523
  %3527 = phi i64 [ 0, %3523 ], [ %3550, %3526 ]
  %3528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3546, %3526 ]
  %3529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3547, %3526 ]
  %3530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3548, %3526 ]
  %3531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3549, %3526 ]
  %3532 = sub i64 %3514, %3527
  %3533 = getelementptr inbounds i32, ptr %9, i64 %3532
  %3534 = getelementptr inbounds i32, ptr %3533, i64 -7
  %3535 = load <8 x i32>, ptr %3534, align 4, !tbaa !6
  %3536 = shufflevector <8 x i32> %3535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3537 = getelementptr inbounds i32, ptr %3533, i64 -15
  %3538 = load <8 x i32>, ptr %3537, align 4, !tbaa !6
  %3539 = shufflevector <8 x i32> %3538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3540 = getelementptr inbounds i32, ptr %3533, i64 -23
  %3541 = load <8 x i32>, ptr %3540, align 4, !tbaa !6
  %3542 = shufflevector <8 x i32> %3541, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3543 = getelementptr inbounds i32, ptr %3533, i64 -31
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !6
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = mul <8 x i32> %3536, %3528
  %3547 = mul <8 x i32> %3539, %3529
  %3548 = mul <8 x i32> %3542, %3530
  %3549 = mul <8 x i32> %3545, %3531
  %3550 = add nuw i64 %3527, 32
  %3551 = icmp eq i64 %3550, %3524
  br i1 %3551, label %3552, label %3526, !llvm.loop !1055

3552:                                             ; preds = %3526
  %3553 = mul <8 x i32> %3547, %3546
  %3554 = mul <8 x i32> %3548, %3553
  %3555 = mul <8 x i32> %3549, %3554
  %3556 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3555)
  %3557 = icmp eq i64 %3520, %3524
  br i1 %3557, label %3570, label %3558

3558:                                             ; preds = %3511, %3552
  %3559 = phi i64 [ %3514, %3511 ], [ %3525, %3552 ]
  %3560 = phi i32 [ 1, %3511 ], [ %3556, %3552 ]
  br label %3561

3561:                                             ; preds = %3558, %3561
  %3562 = phi i64 [ %3567, %3561 ], [ %3559, %3558 ]
  %3563 = phi i32 [ %3566, %3561 ], [ %3560, %3558 ]
  %3564 = getelementptr inbounds i32, ptr %9, i64 %3562
  %3565 = load i32, ptr %3564, align 4, !tbaa !6
  %3566 = mul nsw i32 %3565, %3563
  %3567 = add nsw i64 %3562, -1
  %3568 = trunc i64 %3562 to i32
  %3569 = icmp sgt i32 %3568, 0
  br i1 %3569, label %3561, label %3570, !llvm.loop !1056

3570:                                             ; preds = %3561, %3552
  %3571 = phi i32 [ %3556, %3552 ], [ %3566, %3561 ]
  %3572 = and i64 %3521, 4294967295
  %3573 = getelementptr inbounds i32, ptr %6, i64 %3572
  %3574 = load i32, ptr %3573, align 4, !tbaa !6
  %3575 = mul nsw i32 %3574, %3571
  %3576 = add nsw i32 %3575, %3515
  %3577 = icmp sgt i64 %3513, 2
  %3578 = add nsw i64 %3514, -1
  %3579 = add i32 %3512, 1
  br i1 %3577, label %3511, label %3580, !llvm.loop !1057

3580:                                             ; preds = %3570, %3506
  %3581 = phi i32 [ %3510, %3506 ], [ %3576, %3570 ]
  %3582 = sext i32 %3581 to i64
  %3583 = getelementptr inbounds double, ptr %3159, i64 %3582
  %3584 = load double, ptr %3583, align 8, !tbaa !19
  %3585 = fptosi double %3584 to i64
  %3586 = icmp slt i64 %3585, 0
  %3587 = mul nsw i64 %3585, %3585
  %3588 = sub nsw i64 0, %3587
  %3589 = select i1 %3586, i64 %3588, i64 %3587
  %3590 = mul i64 %3589, %3585
  %3591 = add nsw i64 %3590, %3507
  %3592 = fadd fast double %3509, 1.000000e+00
  %3593 = add nuw nsw i32 %3508, 1
  br i1 %3500, label %3594, label %3641

3594:                                             ; preds = %3580
  %3595 = load i32, ptr %4, align 4, !tbaa !6
  %3596 = load i32, ptr %12, align 4, !tbaa !6
  %3597 = add nsw i32 %3596, -1
  %3598 = icmp slt i32 %3595, %3597
  br i1 %3598, label %3618, label %3599

3599:                                             ; preds = %3594
  %3600 = icmp eq i32 %3595, %3597
  br i1 %3600, label %3601, label %3634

3601:                                             ; preds = %3599
  store i32 0, ptr %4, align 4, !tbaa !6
  %3602 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3602, ptr %6, align 4, !tbaa !6
  br i1 %3505, label %3641, label %3603

3603:                                             ; preds = %3601, %3628
  %3604 = phi i64 [ %3632, %3628 ], [ 1, %3601 ]
  %3605 = getelementptr inbounds i32, ptr %4, i64 %3604
  %3606 = load i32, ptr %3605, align 4, !tbaa !6
  %3607 = getelementptr inbounds i32, ptr %12, i64 %3604
  %3608 = load i32, ptr %3607, align 4, !tbaa !6
  %3609 = add nsw i32 %3608, -1
  %3610 = icmp slt i32 %3606, %3609
  br i1 %3610, label %3611, label %3626

3611:                                             ; preds = %3603
  br i1 %3598, label %3618, label %3612

3612:                                             ; preds = %3611
  %3613 = getelementptr inbounds i32, ptr %7, i64 %3604
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %6, i64 %3604
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, %3614
  store i32 %3617, ptr %3615, align 4, !tbaa !6
  br label %3636

3618:                                             ; preds = %3594, %3611
  %3619 = phi i32 [ %3606, %3611 ], [ %3595, %3594 ]
  %3620 = phi ptr [ %3605, %3611 ], [ %4, %3594 ]
  %3621 = phi i64 [ %3604, %3611 ], [ 0, %3594 ]
  %3622 = add nsw i32 %3619, 1
  store i32 %3622, ptr %3620, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %7, i64 %3621
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = getelementptr inbounds i32, ptr %6, i64 %3621
  br label %3636

3626:                                             ; preds = %3603
  %3627 = icmp eq i32 %3606, %3609
  br i1 %3627, label %3628, label %3634

3628:                                             ; preds = %3626
  store i32 0, ptr %3605, align 4, !tbaa !6
  %3629 = getelementptr inbounds i32, ptr %8, i64 %3604
  %3630 = load i32, ptr %3629, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %6, i64 %3604
  store i32 %3630, ptr %3631, align 4, !tbaa !6
  %3632 = add nuw nsw i64 %3604, 1
  %3633 = icmp eq i64 %3632, %3503
  br i1 %3633, label %3641, label %3603, !llvm.loop !1058

3634:                                             ; preds = %3599, %3626
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  %3635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3636:                                             ; preds = %3612, %3618
  %3637 = phi ptr [ %3625, %3618 ], [ %3605, %3612 ]
  %3638 = phi i32 [ %3624, %3618 ], [ 1, %3612 ]
  %3639 = load i32, ptr %3637, align 4, !tbaa !6
  %3640 = add nsw i32 %3639, %3638
  store i32 %3640, ptr %3637, align 4, !tbaa !6
  br label %3641

3641:                                             ; preds = %3628, %3636, %3601, %3580
  %3642 = icmp eq i32 %3593, %5
  br i1 %3642, label %5658, label %3506, !llvm.loop !1059

3643:                                             ; preds = %3489, %3783
  %3644 = phi i64 [ 0, %3489 ], [ %3731, %3783 ]
  %3645 = phi i32 [ 0, %3489 ], [ %3732, %3783 ]
  %3646 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3490, label %3647, label %3716

3647:                                             ; preds = %3643, %3706
  %3648 = phi i32 [ %3715, %3706 ], [ 0, %3643 ]
  %3649 = phi i64 [ %3657, %3706 ], [ %3494, %3643 ]
  %3650 = phi i64 [ %3714, %3706 ], [ %3493, %3643 ]
  %3651 = phi i32 [ %3712, %3706 ], [ %3646, %3643 ]
  %3652 = sub i32 %3492, %3648
  %3653 = tail call i32 @llvm.smin.i32(i32 %3652, i32 0)
  %3654 = sub i32 %3652, %3653
  %3655 = zext i32 %3654 to i64
  %3656 = add nuw nsw i64 %3655, 1
  %3657 = add nsw i64 %3649, -1
  %3658 = icmp ult i32 %3654, 31
  br i1 %3658, label %3694, label %3659

3659:                                             ; preds = %3647
  %3660 = and i64 %3656, 8589934560
  %3661 = sub i64 %3650, %3660
  br label %3662

3662:                                             ; preds = %3662, %3659
  %3663 = phi i64 [ 0, %3659 ], [ %3686, %3662 ]
  %3664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3682, %3662 ]
  %3665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3683, %3662 ]
  %3666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3684, %3662 ]
  %3667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3685, %3662 ]
  %3668 = sub i64 %3650, %3663
  %3669 = getelementptr inbounds i32, ptr %11, i64 %3668
  %3670 = getelementptr inbounds i32, ptr %3669, i64 -7
  %3671 = load <8 x i32>, ptr %3670, align 4, !tbaa !6
  %3672 = shufflevector <8 x i32> %3671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3673 = getelementptr inbounds i32, ptr %3669, i64 -15
  %3674 = load <8 x i32>, ptr %3673, align 4, !tbaa !6
  %3675 = shufflevector <8 x i32> %3674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3676 = getelementptr inbounds i32, ptr %3669, i64 -23
  %3677 = load <8 x i32>, ptr %3676, align 4, !tbaa !6
  %3678 = shufflevector <8 x i32> %3677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3679 = getelementptr inbounds i32, ptr %3669, i64 -31
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !6
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = mul <8 x i32> %3672, %3664
  %3683 = mul <8 x i32> %3675, %3665
  %3684 = mul <8 x i32> %3678, %3666
  %3685 = mul <8 x i32> %3681, %3667
  %3686 = add nuw i64 %3663, 32
  %3687 = icmp eq i64 %3686, %3660
  br i1 %3687, label %3688, label %3662, !llvm.loop !1060

3688:                                             ; preds = %3662
  %3689 = mul <8 x i32> %3683, %3682
  %3690 = mul <8 x i32> %3684, %3689
  %3691 = mul <8 x i32> %3685, %3690
  %3692 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3691)
  %3693 = icmp eq i64 %3656, %3660
  br i1 %3693, label %3706, label %3694

3694:                                             ; preds = %3647, %3688
  %3695 = phi i64 [ %3650, %3647 ], [ %3661, %3688 ]
  %3696 = phi i32 [ 1, %3647 ], [ %3692, %3688 ]
  br label %3697

3697:                                             ; preds = %3694, %3697
  %3698 = phi i64 [ %3703, %3697 ], [ %3695, %3694 ]
  %3699 = phi i32 [ %3702, %3697 ], [ %3696, %3694 ]
  %3700 = getelementptr inbounds i32, ptr %11, i64 %3698
  %3701 = load i32, ptr %3700, align 4, !tbaa !6
  %3702 = mul nsw i32 %3701, %3699
  %3703 = add nsw i64 %3698, -1
  %3704 = trunc i64 %3698 to i32
  %3705 = icmp sgt i32 %3704, 0
  br i1 %3705, label %3697, label %3706, !llvm.loop !1061

3706:                                             ; preds = %3697, %3688
  %3707 = phi i32 [ %3692, %3688 ], [ %3702, %3697 ]
  %3708 = and i64 %3657, 4294967295
  %3709 = getelementptr inbounds i32, ptr %6, i64 %3708
  %3710 = load i32, ptr %3709, align 4, !tbaa !6
  %3711 = mul nsw i32 %3710, %3707
  %3712 = add nsw i32 %3711, %3651
  %3713 = icmp sgt i64 %3649, 2
  %3714 = add nsw i64 %3650, -1
  %3715 = add i32 %3648, 1
  br i1 %3713, label %3647, label %3716, !llvm.loop !1062

3716:                                             ; preds = %3706, %3643
  %3717 = phi i32 [ %3646, %3643 ], [ %3712, %3706 ]
  %3718 = icmp slt i32 %3717, %5
  br i1 %3718, label %3721, label %3719

3719:                                             ; preds = %3716
  %3720 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3721:                                             ; preds = %3716
  %3722 = sext i32 %3717 to i64
  %3723 = getelementptr inbounds double, ptr %3159, i64 %3722
  %3724 = load double, ptr %3723, align 8, !tbaa !19
  %3725 = fptosi double %3724 to i64
  %3726 = icmp slt i64 %3725, 0
  %3727 = mul nsw i64 %3725, %3725
  %3728 = sub nsw i64 0, %3727
  %3729 = select i1 %3726, i64 %3728, i64 %3727
  %3730 = mul i64 %3729, %3725
  %3731 = add nsw i64 %3730, %3644
  store i64 %3731, ptr %3161, align 8, !tbaa !121
  %3732 = add nuw nsw i32 %3645, 1
  br i1 %3491, label %3733, label %3783

3733:                                             ; preds = %3721
  %3734 = load i32, ptr %4, align 4, !tbaa !6
  %3735 = load i32, ptr %12, align 4, !tbaa !6
  %3736 = add nsw i32 %3735, -1
  %3737 = icmp slt i32 %3734, %3736
  br i1 %3737, label %3760, label %3738

3738:                                             ; preds = %3733
  %3739 = icmp eq i32 %3734, %3736
  br i1 %3739, label %3740, label %3776

3740:                                             ; preds = %3738
  store i32 0, ptr %4, align 4, !tbaa !6
  %3741 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3741, ptr %6, align 4, !tbaa !6
  br i1 %3496, label %3783, label %3742

3742:                                             ; preds = %3740, %3770
  %3743 = phi i64 [ %3774, %3770 ], [ 1, %3740 ]
  %3744 = getelementptr inbounds i32, ptr %4, i64 %3743
  %3745 = load i32, ptr %3744, align 4, !tbaa !6
  %3746 = getelementptr inbounds i32, ptr %12, i64 %3743
  %3747 = load i32, ptr %3746, align 4, !tbaa !6
  %3748 = add nsw i32 %3747, -1
  %3749 = icmp slt i32 %3745, %3748
  br i1 %3749, label %3750, label %3768

3750:                                             ; preds = %3742
  br i1 %3737, label %3760, label %3751

3751:                                             ; preds = %3750
  %3752 = shl i64 %3743, 32
  %3753 = add i64 %3752, -4294967296
  %3754 = ashr exact i64 %3753, 32
  %3755 = getelementptr inbounds i32, ptr %7, i64 %3754
  %3756 = load i32, ptr %3755, align 4, !tbaa !6
  %3757 = getelementptr inbounds i32, ptr %6, i64 %3743
  %3758 = load i32, ptr %3757, align 4, !tbaa !6
  %3759 = add nsw i32 %3758, %3756
  store i32 %3759, ptr %3757, align 4, !tbaa !6
  br label %3778

3760:                                             ; preds = %3733, %3750
  %3761 = phi i32 [ %3745, %3750 ], [ %3734, %3733 ]
  %3762 = phi ptr [ %3744, %3750 ], [ %4, %3733 ]
  %3763 = phi i64 [ %3743, %3750 ], [ 0, %3733 ]
  %3764 = add nsw i32 %3761, 1
  store i32 %3764, ptr %3762, align 4, !tbaa !6
  %3765 = getelementptr inbounds i32, ptr %7, i64 %3763
  %3766 = load i32, ptr %3765, align 4, !tbaa !6
  %3767 = getelementptr inbounds i32, ptr %6, i64 %3763
  br label %3778

3768:                                             ; preds = %3742
  %3769 = icmp eq i32 %3745, %3748
  br i1 %3769, label %3770, label %3776

3770:                                             ; preds = %3768
  store i32 0, ptr %3744, align 4, !tbaa !6
  %3771 = getelementptr inbounds i32, ptr %8, i64 %3743
  %3772 = load i32, ptr %3771, align 4, !tbaa !6
  %3773 = getelementptr inbounds i32, ptr %6, i64 %3743
  store i32 %3772, ptr %3773, align 4, !tbaa !6
  %3774 = add nuw nsw i64 %3743, 1
  %3775 = icmp eq i64 %3774, %3494
  br i1 %3775, label %3783, label %3742, !llvm.loop !1063

3776:                                             ; preds = %3738, %3768
  %3777 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3778:                                             ; preds = %3751, %3760
  %3779 = phi ptr [ %3767, %3760 ], [ %3744, %3751 ]
  %3780 = phi i32 [ %3766, %3760 ], [ 1, %3751 ]
  %3781 = load i32, ptr %3779, align 4, !tbaa !6
  %3782 = add nsw i32 %3781, %3780
  store i32 %3782, ptr %3779, align 4, !tbaa !6
  br label %3783

3783:                                             ; preds = %3770, %3778, %3740, %3721
  %3784 = icmp eq i32 %3732, %5
  br i1 %3784, label %5661, label %3643, !llvm.loop !1064

3785:                                             ; preds = %3171
  %3786 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

3787:                                             ; preds = %18
  %3788 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3789 = load ptr, ptr %3788, align 8, !tbaa !10
  %3790 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3791 = load ptr, ptr %3790, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3791, align 8, !tbaa !19
  %3792 = icmp eq i32 %13, 0
  br i1 %3792, label %3793, label %3800

3793:                                             ; preds = %3787
  %3794 = load double, ptr %3789, align 8, !tbaa !19
  %3795 = fcmp fast olt double %3794, 0.000000e+00
  %3796 = fneg fast double %3794
  %3797 = select nnan ninf i1 %3795, double %3796, double %3794
  %3798 = fmul fast double %3794, %3794
  %3799 = fmul fast double %3798, %3797
  store double %3799, ptr %3791, align 8, !tbaa !19
  br label %5661

3800:                                             ; preds = %3787
  switch i32 %1, label %4404 [
    i32 1, label %3801
    i32 0, label %4104
  ]

3801:                                             ; preds = %3800
  %3802 = getelementptr inbounds i32, ptr %3, i64 %19
  %3803 = load i32, ptr %3802, align 4, !tbaa !6
  %3804 = icmp eq i32 %3803, 0
  %3805 = icmp sgt i32 %5, 0
  br i1 %3804, label %3815, label %3806

3806:                                             ; preds = %3801
  br i1 %3805, label %3807, label %5661

3807:                                             ; preds = %3806
  %3808 = icmp sgt i32 %13, 1
  %3809 = icmp sgt i32 %13, 0
  %3810 = add i32 %13, -2
  %3811 = zext i32 %3810 to i64
  %3812 = zext i32 %13 to i64
  %3813 = add nuw i32 %5, 1
  %3814 = icmp eq i32 %13, 1
  br label %3963

3815:                                             ; preds = %3801
  br i1 %3805, label %3816, label %5661

3816:                                             ; preds = %3815
  %3817 = icmp sgt i32 %13, 1
  %3818 = icmp sgt i32 %13, 0
  %3819 = add i32 %13, -2
  %3820 = zext i32 %3819 to i64
  %3821 = zext i32 %13 to i64
  %3822 = add nuw i32 %5, 1
  %3823 = icmp eq i32 %13, 1
  br label %3824

3824:                                             ; preds = %3816, %3961
  %3825 = phi double [ 0.000000e+00, %3816 ], [ %3911, %3961 ]
  %3826 = phi i32 [ 0, %3816 ], [ %3913, %3961 ]
  %3827 = phi double [ 0.000000e+00, %3816 ], [ %3912, %3961 ]
  %3828 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3817, label %3829, label %3898

3829:                                             ; preds = %3824, %3888
  %3830 = phi i32 [ %3897, %3888 ], [ 0, %3824 ]
  %3831 = phi i64 [ %3839, %3888 ], [ %3821, %3824 ]
  %3832 = phi i64 [ %3896, %3888 ], [ %3820, %3824 ]
  %3833 = phi i32 [ %3894, %3888 ], [ %3828, %3824 ]
  %3834 = sub i32 %3819, %3830
  %3835 = tail call i32 @llvm.smin.i32(i32 %3834, i32 0)
  %3836 = sub i32 %3834, %3835
  %3837 = zext i32 %3836 to i64
  %3838 = add nuw nsw i64 %3837, 1
  %3839 = add nsw i64 %3831, -1
  %3840 = icmp ult i32 %3836, 31
  br i1 %3840, label %3876, label %3841

3841:                                             ; preds = %3829
  %3842 = and i64 %3838, 8589934560
  %3843 = sub i64 %3832, %3842
  br label %3844

3844:                                             ; preds = %3844, %3841
  %3845 = phi i64 [ 0, %3841 ], [ %3868, %3844 ]
  %3846 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3864, %3844 ]
  %3847 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3865, %3844 ]
  %3848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3866, %3844 ]
  %3849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3867, %3844 ]
  %3850 = sub i64 %3832, %3845
  %3851 = getelementptr inbounds i32, ptr %9, i64 %3850
  %3852 = getelementptr inbounds i32, ptr %3851, i64 -7
  %3853 = load <8 x i32>, ptr %3852, align 4, !tbaa !6
  %3854 = shufflevector <8 x i32> %3853, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3855 = getelementptr inbounds i32, ptr %3851, i64 -15
  %3856 = load <8 x i32>, ptr %3855, align 4, !tbaa !6
  %3857 = shufflevector <8 x i32> %3856, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3858 = getelementptr inbounds i32, ptr %3851, i64 -23
  %3859 = load <8 x i32>, ptr %3858, align 4, !tbaa !6
  %3860 = shufflevector <8 x i32> %3859, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3861 = getelementptr inbounds i32, ptr %3851, i64 -31
  %3862 = load <8 x i32>, ptr %3861, align 4, !tbaa !6
  %3863 = shufflevector <8 x i32> %3862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3864 = mul <8 x i32> %3854, %3846
  %3865 = mul <8 x i32> %3857, %3847
  %3866 = mul <8 x i32> %3860, %3848
  %3867 = mul <8 x i32> %3863, %3849
  %3868 = add nuw i64 %3845, 32
  %3869 = icmp eq i64 %3868, %3842
  br i1 %3869, label %3870, label %3844, !llvm.loop !1065

3870:                                             ; preds = %3844
  %3871 = mul <8 x i32> %3865, %3864
  %3872 = mul <8 x i32> %3866, %3871
  %3873 = mul <8 x i32> %3867, %3872
  %3874 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3873)
  %3875 = icmp eq i64 %3838, %3842
  br i1 %3875, label %3888, label %3876

3876:                                             ; preds = %3829, %3870
  %3877 = phi i64 [ %3832, %3829 ], [ %3843, %3870 ]
  %3878 = phi i32 [ 1, %3829 ], [ %3874, %3870 ]
  br label %3879

3879:                                             ; preds = %3876, %3879
  %3880 = phi i64 [ %3885, %3879 ], [ %3877, %3876 ]
  %3881 = phi i32 [ %3884, %3879 ], [ %3878, %3876 ]
  %3882 = getelementptr inbounds i32, ptr %9, i64 %3880
  %3883 = load i32, ptr %3882, align 4, !tbaa !6
  %3884 = mul nsw i32 %3883, %3881
  %3885 = add nsw i64 %3880, -1
  %3886 = trunc i64 %3880 to i32
  %3887 = icmp sgt i32 %3886, 0
  br i1 %3887, label %3879, label %3888, !llvm.loop !1066

3888:                                             ; preds = %3879, %3870
  %3889 = phi i32 [ %3874, %3870 ], [ %3884, %3879 ]
  %3890 = and i64 %3839, 4294967295
  %3891 = getelementptr inbounds i32, ptr %6, i64 %3890
  %3892 = load i32, ptr %3891, align 4, !tbaa !6
  %3893 = mul nsw i32 %3892, %3889
  %3894 = add nsw i32 %3893, %3833
  %3895 = icmp sgt i64 %3831, 2
  %3896 = add nsw i64 %3832, -1
  %3897 = add i32 %3830, 1
  br i1 %3895, label %3829, label %3898, !llvm.loop !1067

3898:                                             ; preds = %3888, %3824
  %3899 = phi i32 [ %3828, %3824 ], [ %3894, %3888 ]
  %3900 = sext i32 %3899 to i64
  %3901 = getelementptr inbounds double, ptr %2, i64 %3900
  %3902 = load double, ptr %3901, align 8, !tbaa !19
  %3903 = getelementptr inbounds double, ptr %3789, i64 %3900
  %3904 = load double, ptr %3903, align 8, !tbaa !19
  %3905 = fmul fast double %3904, %3902
  %3906 = fcmp fast olt double %3905, 0.000000e+00
  %3907 = fneg fast double %3905
  %3908 = select nnan ninf i1 %3906, double %3907, double %3905
  %3909 = fmul fast double %3905, %3905
  %3910 = fmul fast double %3909, %3908
  %3911 = fadd fast double %3910, %3825
  store double %3911, ptr %3791, align 8, !tbaa !19
  %3912 = fadd fast double %3902, %3827
  %3913 = add nuw nsw i32 %3826, 1
  br i1 %3818, label %3914, label %3961

3914:                                             ; preds = %3898
  %3915 = load i32, ptr %4, align 4, !tbaa !6
  %3916 = load i32, ptr %12, align 4, !tbaa !6
  %3917 = add nsw i32 %3916, -1
  %3918 = icmp slt i32 %3915, %3917
  br i1 %3918, label %3938, label %3919

3919:                                             ; preds = %3914
  %3920 = icmp eq i32 %3915, %3917
  br i1 %3920, label %3921, label %3954

3921:                                             ; preds = %3919
  store i32 0, ptr %4, align 4, !tbaa !6
  %3922 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3922, ptr %6, align 4, !tbaa !6
  br i1 %3823, label %3961, label %3923

3923:                                             ; preds = %3921, %3948
  %3924 = phi i64 [ %3952, %3948 ], [ 1, %3921 ]
  %3925 = getelementptr inbounds i32, ptr %4, i64 %3924
  %3926 = load i32, ptr %3925, align 4, !tbaa !6
  %3927 = getelementptr inbounds i32, ptr %12, i64 %3924
  %3928 = load i32, ptr %3927, align 4, !tbaa !6
  %3929 = add nsw i32 %3928, -1
  %3930 = icmp slt i32 %3926, %3929
  br i1 %3930, label %3931, label %3946

3931:                                             ; preds = %3923
  br i1 %3918, label %3938, label %3932

3932:                                             ; preds = %3931
  %3933 = getelementptr inbounds i32, ptr %7, i64 %3924
  %3934 = load i32, ptr %3933, align 4, !tbaa !6
  %3935 = getelementptr inbounds i32, ptr %6, i64 %3924
  %3936 = load i32, ptr %3935, align 4, !tbaa !6
  %3937 = add nsw i32 %3936, %3934
  store i32 %3937, ptr %3935, align 4, !tbaa !6
  br label %3956

3938:                                             ; preds = %3914, %3931
  %3939 = phi i32 [ %3926, %3931 ], [ %3915, %3914 ]
  %3940 = phi ptr [ %3925, %3931 ], [ %4, %3914 ]
  %3941 = phi i64 [ %3924, %3931 ], [ 0, %3914 ]
  %3942 = add nsw i32 %3939, 1
  store i32 %3942, ptr %3940, align 4, !tbaa !6
  %3943 = getelementptr inbounds i32, ptr %7, i64 %3941
  %3944 = load i32, ptr %3943, align 4, !tbaa !6
  %3945 = getelementptr inbounds i32, ptr %6, i64 %3941
  br label %3956

3946:                                             ; preds = %3923
  %3947 = icmp eq i32 %3926, %3929
  br i1 %3947, label %3948, label %3954

3948:                                             ; preds = %3946
  store i32 0, ptr %3925, align 4, !tbaa !6
  %3949 = getelementptr inbounds i32, ptr %8, i64 %3924
  %3950 = load i32, ptr %3949, align 4, !tbaa !6
  %3951 = getelementptr inbounds i32, ptr %6, i64 %3924
  store i32 %3950, ptr %3951, align 4, !tbaa !6
  %3952 = add nuw nsw i64 %3924, 1
  %3953 = icmp eq i64 %3952, %3821
  br i1 %3953, label %3961, label %3923, !llvm.loop !1068

3954:                                             ; preds = %3919, %3946
  %3955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3956:                                             ; preds = %3932, %3938
  %3957 = phi ptr [ %3945, %3938 ], [ %3925, %3932 ]
  %3958 = phi i32 [ %3944, %3938 ], [ 1, %3932 ]
  %3959 = load i32, ptr %3957, align 4, !tbaa !6
  %3960 = add nsw i32 %3959, %3958
  store i32 %3960, ptr %3957, align 4, !tbaa !6
  br label %3961

3961:                                             ; preds = %3948, %3956, %3921, %3898
  %3962 = icmp eq i32 %3913, %5
  br i1 %3962, label %5661, label %3824, !llvm.loop !1069

3963:                                             ; preds = %3807, %4102
  %3964 = phi double [ 0.000000e+00, %3807 ], [ %4050, %4102 ]
  %3965 = phi i32 [ 0, %3807 ], [ %4051, %4102 ]
  %3966 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3808, label %3967, label %4036

3967:                                             ; preds = %3963, %4026
  %3968 = phi i32 [ %4035, %4026 ], [ 0, %3963 ]
  %3969 = phi i64 [ %3977, %4026 ], [ %3812, %3963 ]
  %3970 = phi i64 [ %4034, %4026 ], [ %3811, %3963 ]
  %3971 = phi i32 [ %4032, %4026 ], [ %3966, %3963 ]
  %3972 = sub i32 %3810, %3968
  %3973 = tail call i32 @llvm.smin.i32(i32 %3972, i32 0)
  %3974 = sub i32 %3972, %3973
  %3975 = zext i32 %3974 to i64
  %3976 = add nuw nsw i64 %3975, 1
  %3977 = add nsw i64 %3969, -1
  %3978 = icmp ult i32 %3974, 31
  br i1 %3978, label %4014, label %3979

3979:                                             ; preds = %3967
  %3980 = and i64 %3976, 8589934560
  %3981 = sub i64 %3970, %3980
  br label %3982

3982:                                             ; preds = %3982, %3979
  %3983 = phi i64 [ 0, %3979 ], [ %4006, %3982 ]
  %3984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4002, %3982 ]
  %3985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4003, %3982 ]
  %3986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4004, %3982 ]
  %3987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4005, %3982 ]
  %3988 = sub i64 %3970, %3983
  %3989 = getelementptr inbounds i32, ptr %11, i64 %3988
  %3990 = getelementptr inbounds i32, ptr %3989, i64 -7
  %3991 = load <8 x i32>, ptr %3990, align 4, !tbaa !6
  %3992 = shufflevector <8 x i32> %3991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3993 = getelementptr inbounds i32, ptr %3989, i64 -15
  %3994 = load <8 x i32>, ptr %3993, align 4, !tbaa !6
  %3995 = shufflevector <8 x i32> %3994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3996 = getelementptr inbounds i32, ptr %3989, i64 -23
  %3997 = load <8 x i32>, ptr %3996, align 4, !tbaa !6
  %3998 = shufflevector <8 x i32> %3997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3999 = getelementptr inbounds i32, ptr %3989, i64 -31
  %4000 = load <8 x i32>, ptr %3999, align 4, !tbaa !6
  %4001 = shufflevector <8 x i32> %4000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4002 = mul <8 x i32> %3992, %3984
  %4003 = mul <8 x i32> %3995, %3985
  %4004 = mul <8 x i32> %3998, %3986
  %4005 = mul <8 x i32> %4001, %3987
  %4006 = add nuw i64 %3983, 32
  %4007 = icmp eq i64 %4006, %3980
  br i1 %4007, label %4008, label %3982, !llvm.loop !1070

4008:                                             ; preds = %3982
  %4009 = mul <8 x i32> %4003, %4002
  %4010 = mul <8 x i32> %4004, %4009
  %4011 = mul <8 x i32> %4005, %4010
  %4012 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4011)
  %4013 = icmp eq i64 %3976, %3980
  br i1 %4013, label %4026, label %4014

4014:                                             ; preds = %3967, %4008
  %4015 = phi i64 [ %3970, %3967 ], [ %3981, %4008 ]
  %4016 = phi i32 [ 1, %3967 ], [ %4012, %4008 ]
  br label %4017

4017:                                             ; preds = %4014, %4017
  %4018 = phi i64 [ %4023, %4017 ], [ %4015, %4014 ]
  %4019 = phi i32 [ %4022, %4017 ], [ %4016, %4014 ]
  %4020 = getelementptr inbounds i32, ptr %11, i64 %4018
  %4021 = load i32, ptr %4020, align 4, !tbaa !6
  %4022 = mul nsw i32 %4021, %4019
  %4023 = add nsw i64 %4018, -1
  %4024 = trunc i64 %4018 to i32
  %4025 = icmp sgt i32 %4024, 0
  br i1 %4025, label %4017, label %4026, !llvm.loop !1071

4026:                                             ; preds = %4017, %4008
  %4027 = phi i32 [ %4012, %4008 ], [ %4022, %4017 ]
  %4028 = and i64 %3977, 4294967295
  %4029 = getelementptr inbounds i32, ptr %6, i64 %4028
  %4030 = load i32, ptr %4029, align 4, !tbaa !6
  %4031 = mul nsw i32 %4030, %4027
  %4032 = add nsw i32 %4031, %3971
  %4033 = icmp sgt i64 %3969, 2
  %4034 = add nsw i64 %3970, -1
  %4035 = add i32 %3968, 1
  br i1 %4033, label %3967, label %4036, !llvm.loop !1072

4036:                                             ; preds = %4026, %3963
  %4037 = phi i32 [ %3966, %3963 ], [ %4032, %4026 ]
  %4038 = icmp slt i32 %4037, %5
  br i1 %4038, label %4041, label %4039

4039:                                             ; preds = %4036
  %4040 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4041:                                             ; preds = %4036
  %4042 = sext i32 %4037 to i64
  %4043 = getelementptr inbounds double, ptr %3789, i64 %4042
  %4044 = load double, ptr %4043, align 8, !tbaa !19
  %4045 = fcmp fast olt double %4044, 0.000000e+00
  %4046 = fneg fast double %4044
  %4047 = select nnan ninf i1 %4045, double %4046, double %4044
  %4048 = fmul fast double %4044, %4044
  %4049 = fmul fast double %4048, %4047
  %4050 = fadd fast double %4049, %3964
  store double %4050, ptr %3791, align 8, !tbaa !19
  %4051 = add nuw nsw i32 %3965, 1
  br i1 %3809, label %4052, label %4102

4052:                                             ; preds = %4041
  %4053 = load i32, ptr %4, align 4, !tbaa !6
  %4054 = load i32, ptr %12, align 4, !tbaa !6
  %4055 = add nsw i32 %4054, -1
  %4056 = icmp slt i32 %4053, %4055
  br i1 %4056, label %4079, label %4057

4057:                                             ; preds = %4052
  %4058 = icmp eq i32 %4053, %4055
  br i1 %4058, label %4059, label %4095

4059:                                             ; preds = %4057
  store i32 0, ptr %4, align 4, !tbaa !6
  %4060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4060, ptr %6, align 4, !tbaa !6
  br i1 %3814, label %4102, label %4061

4061:                                             ; preds = %4059, %4089
  %4062 = phi i64 [ %4093, %4089 ], [ 1, %4059 ]
  %4063 = getelementptr inbounds i32, ptr %4, i64 %4062
  %4064 = load i32, ptr %4063, align 4, !tbaa !6
  %4065 = getelementptr inbounds i32, ptr %12, i64 %4062
  %4066 = load i32, ptr %4065, align 4, !tbaa !6
  %4067 = add nsw i32 %4066, -1
  %4068 = icmp slt i32 %4064, %4067
  br i1 %4068, label %4069, label %4087

4069:                                             ; preds = %4061
  br i1 %4056, label %4079, label %4070

4070:                                             ; preds = %4069
  %4071 = shl i64 %4062, 32
  %4072 = add i64 %4071, -4294967296
  %4073 = ashr exact i64 %4072, 32
  %4074 = getelementptr inbounds i32, ptr %7, i64 %4073
  %4075 = load i32, ptr %4074, align 4, !tbaa !6
  %4076 = getelementptr inbounds i32, ptr %6, i64 %4062
  %4077 = load i32, ptr %4076, align 4, !tbaa !6
  %4078 = add nsw i32 %4077, %4075
  store i32 %4078, ptr %4076, align 4, !tbaa !6
  br label %4097

4079:                                             ; preds = %4052, %4069
  %4080 = phi i32 [ %4064, %4069 ], [ %4053, %4052 ]
  %4081 = phi ptr [ %4063, %4069 ], [ %4, %4052 ]
  %4082 = phi i64 [ %4062, %4069 ], [ 0, %4052 ]
  %4083 = add nsw i32 %4080, 1
  store i32 %4083, ptr %4081, align 4, !tbaa !6
  %4084 = getelementptr inbounds i32, ptr %7, i64 %4082
  %4085 = load i32, ptr %4084, align 4, !tbaa !6
  %4086 = getelementptr inbounds i32, ptr %6, i64 %4082
  br label %4097

4087:                                             ; preds = %4061
  %4088 = icmp eq i32 %4064, %4067
  br i1 %4088, label %4089, label %4095

4089:                                             ; preds = %4087
  store i32 0, ptr %4063, align 4, !tbaa !6
  %4090 = getelementptr inbounds i32, ptr %8, i64 %4062
  %4091 = load i32, ptr %4090, align 4, !tbaa !6
  %4092 = getelementptr inbounds i32, ptr %6, i64 %4062
  store i32 %4091, ptr %4092, align 4, !tbaa !6
  %4093 = add nuw nsw i64 %4062, 1
  %4094 = icmp eq i64 %4093, %3812
  br i1 %4094, label %4102, label %4061, !llvm.loop !1073

4095:                                             ; preds = %4057, %4087
  %4096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4097:                                             ; preds = %4070, %4079
  %4098 = phi ptr [ %4086, %4079 ], [ %4063, %4070 ]
  %4099 = phi i32 [ %4085, %4079 ], [ 1, %4070 ]
  %4100 = load i32, ptr %4098, align 4, !tbaa !6
  %4101 = add nsw i32 %4100, %4099
  store i32 %4101, ptr %4098, align 4, !tbaa !6
  br label %4102

4102:                                             ; preds = %4089, %4097, %4059, %4041
  %4103 = icmp eq i32 %4051, %5
  br i1 %4103, label %5661, label %3963, !llvm.loop !1074

4104:                                             ; preds = %3800
  %4105 = getelementptr inbounds i32, ptr %3, i64 %19
  %4106 = load i32, ptr %4105, align 4, !tbaa !6
  %4107 = icmp eq i32 %4106, 0
  %4108 = icmp sgt i32 %5, 0
  br i1 %4107, label %4118, label %4109

4109:                                             ; preds = %4104
  br i1 %4108, label %4110, label %5661

4110:                                             ; preds = %4109
  %4111 = icmp sgt i32 %13, 1
  %4112 = icmp sgt i32 %13, 0
  %4113 = add i32 %13, -2
  %4114 = zext i32 %4113 to i64
  %4115 = zext i32 %13 to i64
  %4116 = add nuw i32 %5, 1
  %4117 = icmp eq i32 %13, 1
  br label %4263

4118:                                             ; preds = %4104
  br i1 %4108, label %4119, label %5661

4119:                                             ; preds = %4118
  %4120 = icmp sgt i32 %13, 1
  %4121 = icmp sgt i32 %13, 0
  %4122 = add i32 %13, -2
  %4123 = zext i32 %4122 to i64
  %4124 = zext i32 %13 to i64
  %4125 = add nuw i32 %5, 1
  %4126 = icmp eq i32 %13, 1
  br label %4127

4127:                                             ; preds = %4119, %4261
  %4128 = phi double [ 0.000000e+00, %4119 ], [ %4211, %4261 ]
  %4129 = phi i32 [ 0, %4119 ], [ %4213, %4261 ]
  %4130 = phi double [ 0.000000e+00, %4119 ], [ %4212, %4261 ]
  %4131 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4120, label %4132, label %4201

4132:                                             ; preds = %4127, %4191
  %4133 = phi i32 [ %4200, %4191 ], [ 0, %4127 ]
  %4134 = phi i64 [ %4142, %4191 ], [ %4124, %4127 ]
  %4135 = phi i64 [ %4199, %4191 ], [ %4123, %4127 ]
  %4136 = phi i32 [ %4197, %4191 ], [ %4131, %4127 ]
  %4137 = sub i32 %4122, %4133
  %4138 = tail call i32 @llvm.smin.i32(i32 %4137, i32 0)
  %4139 = sub i32 %4137, %4138
  %4140 = zext i32 %4139 to i64
  %4141 = add nuw nsw i64 %4140, 1
  %4142 = add nsw i64 %4134, -1
  %4143 = icmp ult i32 %4139, 31
  br i1 %4143, label %4179, label %4144

4144:                                             ; preds = %4132
  %4145 = and i64 %4141, 8589934560
  %4146 = sub i64 %4135, %4145
  br label %4147

4147:                                             ; preds = %4147, %4144
  %4148 = phi i64 [ 0, %4144 ], [ %4171, %4147 ]
  %4149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4167, %4147 ]
  %4150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4168, %4147 ]
  %4151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4169, %4147 ]
  %4152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4170, %4147 ]
  %4153 = sub i64 %4135, %4148
  %4154 = getelementptr inbounds i32, ptr %9, i64 %4153
  %4155 = getelementptr inbounds i32, ptr %4154, i64 -7
  %4156 = load <8 x i32>, ptr %4155, align 4, !tbaa !6
  %4157 = shufflevector <8 x i32> %4156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4158 = getelementptr inbounds i32, ptr %4154, i64 -15
  %4159 = load <8 x i32>, ptr %4158, align 4, !tbaa !6
  %4160 = shufflevector <8 x i32> %4159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4161 = getelementptr inbounds i32, ptr %4154, i64 -23
  %4162 = load <8 x i32>, ptr %4161, align 4, !tbaa !6
  %4163 = shufflevector <8 x i32> %4162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4164 = getelementptr inbounds i32, ptr %4154, i64 -31
  %4165 = load <8 x i32>, ptr %4164, align 4, !tbaa !6
  %4166 = shufflevector <8 x i32> %4165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4167 = mul <8 x i32> %4157, %4149
  %4168 = mul <8 x i32> %4160, %4150
  %4169 = mul <8 x i32> %4163, %4151
  %4170 = mul <8 x i32> %4166, %4152
  %4171 = add nuw i64 %4148, 32
  %4172 = icmp eq i64 %4171, %4145
  br i1 %4172, label %4173, label %4147, !llvm.loop !1075

4173:                                             ; preds = %4147
  %4174 = mul <8 x i32> %4168, %4167
  %4175 = mul <8 x i32> %4169, %4174
  %4176 = mul <8 x i32> %4170, %4175
  %4177 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4176)
  %4178 = icmp eq i64 %4141, %4145
  br i1 %4178, label %4191, label %4179

4179:                                             ; preds = %4132, %4173
  %4180 = phi i64 [ %4135, %4132 ], [ %4146, %4173 ]
  %4181 = phi i32 [ 1, %4132 ], [ %4177, %4173 ]
  br label %4182

4182:                                             ; preds = %4179, %4182
  %4183 = phi i64 [ %4188, %4182 ], [ %4180, %4179 ]
  %4184 = phi i32 [ %4187, %4182 ], [ %4181, %4179 ]
  %4185 = getelementptr inbounds i32, ptr %9, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !6
  %4187 = mul nsw i32 %4186, %4184
  %4188 = add nsw i64 %4183, -1
  %4189 = trunc i64 %4183 to i32
  %4190 = icmp sgt i32 %4189, 0
  br i1 %4190, label %4182, label %4191, !llvm.loop !1076

4191:                                             ; preds = %4182, %4173
  %4192 = phi i32 [ %4177, %4173 ], [ %4187, %4182 ]
  %4193 = and i64 %4142, 4294967295
  %4194 = getelementptr inbounds i32, ptr %6, i64 %4193
  %4195 = load i32, ptr %4194, align 4, !tbaa !6
  %4196 = mul nsw i32 %4195, %4192
  %4197 = add nsw i32 %4196, %4136
  %4198 = icmp sgt i64 %4134, 2
  %4199 = add nsw i64 %4135, -1
  %4200 = add i32 %4133, 1
  br i1 %4198, label %4132, label %4201, !llvm.loop !1077

4201:                                             ; preds = %4191, %4127
  %4202 = phi i32 [ %4131, %4127 ], [ %4197, %4191 ]
  %4203 = sext i32 %4202 to i64
  %4204 = getelementptr inbounds double, ptr %3789, i64 %4203
  %4205 = load double, ptr %4204, align 8, !tbaa !19
  %4206 = fcmp fast olt double %4205, 0.000000e+00
  %4207 = fneg fast double %4205
  %4208 = select nnan ninf i1 %4206, double %4207, double %4205
  %4209 = fmul fast double %4205, %4205
  %4210 = fmul fast double %4209, %4208
  %4211 = fadd fast double %4210, %4128
  store double %4211, ptr %3791, align 8, !tbaa !19
  %4212 = fadd fast double %4130, 1.000000e+00
  %4213 = add nuw nsw i32 %4129, 1
  br i1 %4121, label %4214, label %4261

4214:                                             ; preds = %4201
  %4215 = load i32, ptr %4, align 4, !tbaa !6
  %4216 = load i32, ptr %12, align 4, !tbaa !6
  %4217 = add nsw i32 %4216, -1
  %4218 = icmp slt i32 %4215, %4217
  br i1 %4218, label %4238, label %4219

4219:                                             ; preds = %4214
  %4220 = icmp eq i32 %4215, %4217
  br i1 %4220, label %4221, label %4254

4221:                                             ; preds = %4219
  store i32 0, ptr %4, align 4, !tbaa !6
  %4222 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4222, ptr %6, align 4, !tbaa !6
  br i1 %4126, label %4261, label %4223

4223:                                             ; preds = %4221, %4248
  %4224 = phi i64 [ %4252, %4248 ], [ 1, %4221 ]
  %4225 = getelementptr inbounds i32, ptr %4, i64 %4224
  %4226 = load i32, ptr %4225, align 4, !tbaa !6
  %4227 = getelementptr inbounds i32, ptr %12, i64 %4224
  %4228 = load i32, ptr %4227, align 4, !tbaa !6
  %4229 = add nsw i32 %4228, -1
  %4230 = icmp slt i32 %4226, %4229
  br i1 %4230, label %4231, label %4246

4231:                                             ; preds = %4223
  br i1 %4218, label %4238, label %4232

4232:                                             ; preds = %4231
  %4233 = getelementptr inbounds i32, ptr %7, i64 %4224
  %4234 = load i32, ptr %4233, align 4, !tbaa !6
  %4235 = getelementptr inbounds i32, ptr %6, i64 %4224
  %4236 = load i32, ptr %4235, align 4, !tbaa !6
  %4237 = add nsw i32 %4236, %4234
  store i32 %4237, ptr %4235, align 4, !tbaa !6
  br label %4256

4238:                                             ; preds = %4214, %4231
  %4239 = phi i32 [ %4226, %4231 ], [ %4215, %4214 ]
  %4240 = phi ptr [ %4225, %4231 ], [ %4, %4214 ]
  %4241 = phi i64 [ %4224, %4231 ], [ 0, %4214 ]
  %4242 = add nsw i32 %4239, 1
  store i32 %4242, ptr %4240, align 4, !tbaa !6
  %4243 = getelementptr inbounds i32, ptr %7, i64 %4241
  %4244 = load i32, ptr %4243, align 4, !tbaa !6
  %4245 = getelementptr inbounds i32, ptr %6, i64 %4241
  br label %4256

4246:                                             ; preds = %4223
  %4247 = icmp eq i32 %4226, %4229
  br i1 %4247, label %4248, label %4254

4248:                                             ; preds = %4246
  store i32 0, ptr %4225, align 4, !tbaa !6
  %4249 = getelementptr inbounds i32, ptr %8, i64 %4224
  %4250 = load i32, ptr %4249, align 4, !tbaa !6
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4224
  store i32 %4250, ptr %4251, align 4, !tbaa !6
  %4252 = add nuw nsw i64 %4224, 1
  %4253 = icmp eq i64 %4252, %4124
  br i1 %4253, label %4261, label %4223, !llvm.loop !1078

4254:                                             ; preds = %4219, %4246
  %4255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4256:                                             ; preds = %4232, %4238
  %4257 = phi ptr [ %4245, %4238 ], [ %4225, %4232 ]
  %4258 = phi i32 [ %4244, %4238 ], [ 1, %4232 ]
  %4259 = load i32, ptr %4257, align 4, !tbaa !6
  %4260 = add nsw i32 %4259, %4258
  store i32 %4260, ptr %4257, align 4, !tbaa !6
  br label %4261

4261:                                             ; preds = %4248, %4256, %4221, %4201
  %4262 = icmp eq i32 %4213, %5
  br i1 %4262, label %5661, label %4127, !llvm.loop !1079

4263:                                             ; preds = %4110, %4402
  %4264 = phi double [ 0.000000e+00, %4110 ], [ %4350, %4402 ]
  %4265 = phi i32 [ 0, %4110 ], [ %4351, %4402 ]
  %4266 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4111, label %4267, label %4336

4267:                                             ; preds = %4263, %4326
  %4268 = phi i32 [ %4335, %4326 ], [ 0, %4263 ]
  %4269 = phi i64 [ %4277, %4326 ], [ %4115, %4263 ]
  %4270 = phi i64 [ %4334, %4326 ], [ %4114, %4263 ]
  %4271 = phi i32 [ %4332, %4326 ], [ %4266, %4263 ]
  %4272 = sub i32 %4113, %4268
  %4273 = tail call i32 @llvm.smin.i32(i32 %4272, i32 0)
  %4274 = sub i32 %4272, %4273
  %4275 = zext i32 %4274 to i64
  %4276 = add nuw nsw i64 %4275, 1
  %4277 = add nsw i64 %4269, -1
  %4278 = icmp ult i32 %4274, 31
  br i1 %4278, label %4314, label %4279

4279:                                             ; preds = %4267
  %4280 = and i64 %4276, 8589934560
  %4281 = sub i64 %4270, %4280
  br label %4282

4282:                                             ; preds = %4282, %4279
  %4283 = phi i64 [ 0, %4279 ], [ %4306, %4282 ]
  %4284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4302, %4282 ]
  %4285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4303, %4282 ]
  %4286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4304, %4282 ]
  %4287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4305, %4282 ]
  %4288 = sub i64 %4270, %4283
  %4289 = getelementptr inbounds i32, ptr %11, i64 %4288
  %4290 = getelementptr inbounds i32, ptr %4289, i64 -7
  %4291 = load <8 x i32>, ptr %4290, align 4, !tbaa !6
  %4292 = shufflevector <8 x i32> %4291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4293 = getelementptr inbounds i32, ptr %4289, i64 -15
  %4294 = load <8 x i32>, ptr %4293, align 4, !tbaa !6
  %4295 = shufflevector <8 x i32> %4294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4296 = getelementptr inbounds i32, ptr %4289, i64 -23
  %4297 = load <8 x i32>, ptr %4296, align 4, !tbaa !6
  %4298 = shufflevector <8 x i32> %4297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4299 = getelementptr inbounds i32, ptr %4289, i64 -31
  %4300 = load <8 x i32>, ptr %4299, align 4, !tbaa !6
  %4301 = shufflevector <8 x i32> %4300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4302 = mul <8 x i32> %4292, %4284
  %4303 = mul <8 x i32> %4295, %4285
  %4304 = mul <8 x i32> %4298, %4286
  %4305 = mul <8 x i32> %4301, %4287
  %4306 = add nuw i64 %4283, 32
  %4307 = icmp eq i64 %4306, %4280
  br i1 %4307, label %4308, label %4282, !llvm.loop !1080

4308:                                             ; preds = %4282
  %4309 = mul <8 x i32> %4303, %4302
  %4310 = mul <8 x i32> %4304, %4309
  %4311 = mul <8 x i32> %4305, %4310
  %4312 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4311)
  %4313 = icmp eq i64 %4276, %4280
  br i1 %4313, label %4326, label %4314

4314:                                             ; preds = %4267, %4308
  %4315 = phi i64 [ %4270, %4267 ], [ %4281, %4308 ]
  %4316 = phi i32 [ 1, %4267 ], [ %4312, %4308 ]
  br label %4317

4317:                                             ; preds = %4314, %4317
  %4318 = phi i64 [ %4323, %4317 ], [ %4315, %4314 ]
  %4319 = phi i32 [ %4322, %4317 ], [ %4316, %4314 ]
  %4320 = getelementptr inbounds i32, ptr %11, i64 %4318
  %4321 = load i32, ptr %4320, align 4, !tbaa !6
  %4322 = mul nsw i32 %4321, %4319
  %4323 = add nsw i64 %4318, -1
  %4324 = trunc i64 %4318 to i32
  %4325 = icmp sgt i32 %4324, 0
  br i1 %4325, label %4317, label %4326, !llvm.loop !1081

4326:                                             ; preds = %4317, %4308
  %4327 = phi i32 [ %4312, %4308 ], [ %4322, %4317 ]
  %4328 = and i64 %4277, 4294967295
  %4329 = getelementptr inbounds i32, ptr %6, i64 %4328
  %4330 = load i32, ptr %4329, align 4, !tbaa !6
  %4331 = mul nsw i32 %4330, %4327
  %4332 = add nsw i32 %4331, %4271
  %4333 = icmp sgt i64 %4269, 2
  %4334 = add nsw i64 %4270, -1
  %4335 = add i32 %4268, 1
  br i1 %4333, label %4267, label %4336, !llvm.loop !1082

4336:                                             ; preds = %4326, %4263
  %4337 = phi i32 [ %4266, %4263 ], [ %4332, %4326 ]
  %4338 = icmp slt i32 %4337, %5
  br i1 %4338, label %4341, label %4339

4339:                                             ; preds = %4336
  %4340 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4341:                                             ; preds = %4336
  %4342 = sext i32 %4337 to i64
  %4343 = getelementptr inbounds double, ptr %3789, i64 %4342
  %4344 = load double, ptr %4343, align 8, !tbaa !19
  %4345 = fcmp fast olt double %4344, 0.000000e+00
  %4346 = fneg fast double %4344
  %4347 = select nnan ninf i1 %4345, double %4346, double %4344
  %4348 = fmul fast double %4344, %4344
  %4349 = fmul fast double %4348, %4347
  %4350 = fadd fast double %4349, %4264
  store double %4350, ptr %3791, align 8, !tbaa !19
  %4351 = add nuw nsw i32 %4265, 1
  br i1 %4112, label %4352, label %4402

4352:                                             ; preds = %4341
  %4353 = load i32, ptr %4, align 4, !tbaa !6
  %4354 = load i32, ptr %12, align 4, !tbaa !6
  %4355 = add nsw i32 %4354, -1
  %4356 = icmp slt i32 %4353, %4355
  br i1 %4356, label %4379, label %4357

4357:                                             ; preds = %4352
  %4358 = icmp eq i32 %4353, %4355
  br i1 %4358, label %4359, label %4395

4359:                                             ; preds = %4357
  store i32 0, ptr %4, align 4, !tbaa !6
  %4360 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4360, ptr %6, align 4, !tbaa !6
  br i1 %4117, label %4402, label %4361

4361:                                             ; preds = %4359, %4389
  %4362 = phi i64 [ %4393, %4389 ], [ 1, %4359 ]
  %4363 = getelementptr inbounds i32, ptr %4, i64 %4362
  %4364 = load i32, ptr %4363, align 4, !tbaa !6
  %4365 = getelementptr inbounds i32, ptr %12, i64 %4362
  %4366 = load i32, ptr %4365, align 4, !tbaa !6
  %4367 = add nsw i32 %4366, -1
  %4368 = icmp slt i32 %4364, %4367
  br i1 %4368, label %4369, label %4387

4369:                                             ; preds = %4361
  br i1 %4356, label %4379, label %4370

4370:                                             ; preds = %4369
  %4371 = shl i64 %4362, 32
  %4372 = add i64 %4371, -4294967296
  %4373 = ashr exact i64 %4372, 32
  %4374 = getelementptr inbounds i32, ptr %7, i64 %4373
  %4375 = load i32, ptr %4374, align 4, !tbaa !6
  %4376 = getelementptr inbounds i32, ptr %6, i64 %4362
  %4377 = load i32, ptr %4376, align 4, !tbaa !6
  %4378 = add nsw i32 %4377, %4375
  store i32 %4378, ptr %4376, align 4, !tbaa !6
  br label %4397

4379:                                             ; preds = %4352, %4369
  %4380 = phi i32 [ %4364, %4369 ], [ %4353, %4352 ]
  %4381 = phi ptr [ %4363, %4369 ], [ %4, %4352 ]
  %4382 = phi i64 [ %4362, %4369 ], [ 0, %4352 ]
  %4383 = add nsw i32 %4380, 1
  store i32 %4383, ptr %4381, align 4, !tbaa !6
  %4384 = getelementptr inbounds i32, ptr %7, i64 %4382
  %4385 = load i32, ptr %4384, align 4, !tbaa !6
  %4386 = getelementptr inbounds i32, ptr %6, i64 %4382
  br label %4397

4387:                                             ; preds = %4361
  %4388 = icmp eq i32 %4364, %4367
  br i1 %4388, label %4389, label %4395

4389:                                             ; preds = %4387
  store i32 0, ptr %4363, align 4, !tbaa !6
  %4390 = getelementptr inbounds i32, ptr %8, i64 %4362
  %4391 = load i32, ptr %4390, align 4, !tbaa !6
  %4392 = getelementptr inbounds i32, ptr %6, i64 %4362
  store i32 %4391, ptr %4392, align 4, !tbaa !6
  %4393 = add nuw nsw i64 %4362, 1
  %4394 = icmp eq i64 %4393, %4115
  br i1 %4394, label %4402, label %4361, !llvm.loop !1083

4395:                                             ; preds = %4357, %4387
  %4396 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4397:                                             ; preds = %4370, %4379
  %4398 = phi ptr [ %4386, %4379 ], [ %4363, %4370 ]
  %4399 = phi i32 [ %4385, %4379 ], [ 1, %4370 ]
  %4400 = load i32, ptr %4398, align 4, !tbaa !6
  %4401 = add nsw i32 %4400, %4399
  store i32 %4401, ptr %4398, align 4, !tbaa !6
  br label %4402

4402:                                             ; preds = %4389, %4397, %4359, %4341
  %4403 = icmp eq i32 %4351, %5
  br i1 %4403, label %5661, label %4263, !llvm.loop !1084

4404:                                             ; preds = %3800
  %4405 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

4406:                                             ; preds = %18
  %4407 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4408 = load ptr, ptr %4407, align 8, !tbaa !10
  %4409 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4410 = load ptr, ptr %4409, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4410, align 4, !tbaa !163
  %4411 = icmp eq i32 %13, 0
  br i1 %4411, label %4412, label %4420

4412:                                             ; preds = %4406
  %4413 = load double, ptr %4408, align 8, !tbaa !19
  %4414 = fptrunc double %4413 to float
  %4415 = fcmp fast olt float %4414, 0.000000e+00
  %4416 = fneg fast float %4414
  %4417 = select nnan ninf i1 %4415, float %4416, float %4414
  %4418 = fmul fast float %4414, %4414
  %4419 = fmul fast float %4418, %4417
  store float %4419, ptr %4410, align 4, !tbaa !163
  br label %5661

4420:                                             ; preds = %4406
  switch i32 %1, label %5034 [
    i32 1, label %4421
    i32 0, label %4732
  ]

4421:                                             ; preds = %4420
  %4422 = getelementptr inbounds i32, ptr %3, i64 %19
  %4423 = load i32, ptr %4422, align 4, !tbaa !6
  %4424 = icmp eq i32 %4423, 0
  %4425 = icmp sgt i32 %5, 0
  br i1 %4424, label %4435, label %4426

4426:                                             ; preds = %4421
  br i1 %4425, label %4427, label %5661

4427:                                             ; preds = %4426
  %4428 = icmp sgt i32 %13, 1
  %4429 = icmp sgt i32 %13, 0
  %4430 = add i32 %13, -2
  %4431 = zext i32 %4430 to i64
  %4432 = zext i32 %13 to i64
  %4433 = add nuw i32 %5, 1
  %4434 = icmp eq i32 %13, 1
  br label %4587

4435:                                             ; preds = %4421
  br i1 %4425, label %4436, label %5661

4436:                                             ; preds = %4435
  %4437 = icmp sgt i32 %13, 1
  %4438 = icmp sgt i32 %13, 0
  %4439 = add i32 %13, -2
  %4440 = zext i32 %4439 to i64
  %4441 = zext i32 %13 to i64
  %4442 = add nuw i32 %5, 1
  %4443 = icmp eq i32 %13, 1
  br label %4444

4444:                                             ; preds = %4436, %4585
  %4445 = phi float [ 0.000000e+00, %4436 ], [ %4535, %4585 ]
  %4446 = phi i32 [ 0, %4436 ], [ %4537, %4585 ]
  %4447 = phi double [ 0.000000e+00, %4436 ], [ %4536, %4585 ]
  %4448 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4437, label %4449, label %4518

4449:                                             ; preds = %4444, %4508
  %4450 = phi i32 [ %4517, %4508 ], [ 0, %4444 ]
  %4451 = phi i64 [ %4459, %4508 ], [ %4441, %4444 ]
  %4452 = phi i64 [ %4516, %4508 ], [ %4440, %4444 ]
  %4453 = phi i32 [ %4514, %4508 ], [ %4448, %4444 ]
  %4454 = sub i32 %4439, %4450
  %4455 = tail call i32 @llvm.smin.i32(i32 %4454, i32 0)
  %4456 = sub i32 %4454, %4455
  %4457 = zext i32 %4456 to i64
  %4458 = add nuw nsw i64 %4457, 1
  %4459 = add nsw i64 %4451, -1
  %4460 = icmp ult i32 %4456, 31
  br i1 %4460, label %4496, label %4461

4461:                                             ; preds = %4449
  %4462 = and i64 %4458, 8589934560
  %4463 = sub i64 %4452, %4462
  br label %4464

4464:                                             ; preds = %4464, %4461
  %4465 = phi i64 [ 0, %4461 ], [ %4488, %4464 ]
  %4466 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4484, %4464 ]
  %4467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4485, %4464 ]
  %4468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4486, %4464 ]
  %4469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4487, %4464 ]
  %4470 = sub i64 %4452, %4465
  %4471 = getelementptr inbounds i32, ptr %9, i64 %4470
  %4472 = getelementptr inbounds i32, ptr %4471, i64 -7
  %4473 = load <8 x i32>, ptr %4472, align 4, !tbaa !6
  %4474 = shufflevector <8 x i32> %4473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4475 = getelementptr inbounds i32, ptr %4471, i64 -15
  %4476 = load <8 x i32>, ptr %4475, align 4, !tbaa !6
  %4477 = shufflevector <8 x i32> %4476, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4478 = getelementptr inbounds i32, ptr %4471, i64 -23
  %4479 = load <8 x i32>, ptr %4478, align 4, !tbaa !6
  %4480 = shufflevector <8 x i32> %4479, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4481 = getelementptr inbounds i32, ptr %4471, i64 -31
  %4482 = load <8 x i32>, ptr %4481, align 4, !tbaa !6
  %4483 = shufflevector <8 x i32> %4482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4484 = mul <8 x i32> %4474, %4466
  %4485 = mul <8 x i32> %4477, %4467
  %4486 = mul <8 x i32> %4480, %4468
  %4487 = mul <8 x i32> %4483, %4469
  %4488 = add nuw i64 %4465, 32
  %4489 = icmp eq i64 %4488, %4462
  br i1 %4489, label %4490, label %4464, !llvm.loop !1085

4490:                                             ; preds = %4464
  %4491 = mul <8 x i32> %4485, %4484
  %4492 = mul <8 x i32> %4486, %4491
  %4493 = mul <8 x i32> %4487, %4492
  %4494 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4493)
  %4495 = icmp eq i64 %4458, %4462
  br i1 %4495, label %4508, label %4496

4496:                                             ; preds = %4449, %4490
  %4497 = phi i64 [ %4452, %4449 ], [ %4463, %4490 ]
  %4498 = phi i32 [ 1, %4449 ], [ %4494, %4490 ]
  br label %4499

4499:                                             ; preds = %4496, %4499
  %4500 = phi i64 [ %4505, %4499 ], [ %4497, %4496 ]
  %4501 = phi i32 [ %4504, %4499 ], [ %4498, %4496 ]
  %4502 = getelementptr inbounds i32, ptr %9, i64 %4500
  %4503 = load i32, ptr %4502, align 4, !tbaa !6
  %4504 = mul nsw i32 %4503, %4501
  %4505 = add nsw i64 %4500, -1
  %4506 = trunc i64 %4500 to i32
  %4507 = icmp sgt i32 %4506, 0
  br i1 %4507, label %4499, label %4508, !llvm.loop !1086

4508:                                             ; preds = %4499, %4490
  %4509 = phi i32 [ %4494, %4490 ], [ %4504, %4499 ]
  %4510 = and i64 %4459, 4294967295
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4510
  %4512 = load i32, ptr %4511, align 4, !tbaa !6
  %4513 = mul nsw i32 %4512, %4509
  %4514 = add nsw i32 %4513, %4453
  %4515 = icmp sgt i64 %4451, 2
  %4516 = add nsw i64 %4452, -1
  %4517 = add i32 %4450, 1
  br i1 %4515, label %4449, label %4518, !llvm.loop !1087

4518:                                             ; preds = %4508, %4444
  %4519 = phi i32 [ %4448, %4444 ], [ %4514, %4508 ]
  %4520 = sext i32 %4519 to i64
  %4521 = getelementptr inbounds double, ptr %2, i64 %4520
  %4522 = load double, ptr %4521, align 8, !tbaa !19
  %4523 = getelementptr inbounds double, ptr %4408, i64 %4520
  %4524 = load double, ptr %4523, align 8, !tbaa !19
  %4525 = fptrunc double %4524 to float
  %4526 = fpext float %4445 to double
  %4527 = fpext float %4525 to double
  %4528 = fmul fast double %4522, %4527
  %4529 = fcmp fast olt double %4528, 0.000000e+00
  %4530 = fneg fast double %4528
  %4531 = select nnan ninf i1 %4529, double %4530, double %4528
  %4532 = fmul fast double %4528, %4528
  %4533 = fmul fast double %4532, %4531
  %4534 = fadd fast double %4533, %4526
  %4535 = fptrunc double %4534 to float
  %4536 = fadd fast double %4522, %4447
  %4537 = add nuw nsw i32 %4446, 1
  br i1 %4438, label %4538, label %4585

4538:                                             ; preds = %4518
  %4539 = load i32, ptr %4, align 4, !tbaa !6
  %4540 = load i32, ptr %12, align 4, !tbaa !6
  %4541 = add nsw i32 %4540, -1
  %4542 = icmp slt i32 %4539, %4541
  br i1 %4542, label %4562, label %4543

4543:                                             ; preds = %4538
  %4544 = icmp eq i32 %4539, %4541
  br i1 %4544, label %4545, label %4578

4545:                                             ; preds = %4543
  store i32 0, ptr %4, align 4, !tbaa !6
  %4546 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4546, ptr %6, align 4, !tbaa !6
  br i1 %4443, label %4585, label %4547

4547:                                             ; preds = %4545, %4572
  %4548 = phi i64 [ %4576, %4572 ], [ 1, %4545 ]
  %4549 = getelementptr inbounds i32, ptr %4, i64 %4548
  %4550 = load i32, ptr %4549, align 4, !tbaa !6
  %4551 = getelementptr inbounds i32, ptr %12, i64 %4548
  %4552 = load i32, ptr %4551, align 4, !tbaa !6
  %4553 = add nsw i32 %4552, -1
  %4554 = icmp slt i32 %4550, %4553
  br i1 %4554, label %4555, label %4570

4555:                                             ; preds = %4547
  br i1 %4542, label %4562, label %4556

4556:                                             ; preds = %4555
  %4557 = getelementptr inbounds i32, ptr %7, i64 %4548
  %4558 = load i32, ptr %4557, align 4, !tbaa !6
  %4559 = getelementptr inbounds i32, ptr %6, i64 %4548
  %4560 = load i32, ptr %4559, align 4, !tbaa !6
  %4561 = add nsw i32 %4560, %4558
  store i32 %4561, ptr %4559, align 4, !tbaa !6
  br label %4580

4562:                                             ; preds = %4538, %4555
  %4563 = phi i32 [ %4550, %4555 ], [ %4539, %4538 ]
  %4564 = phi ptr [ %4549, %4555 ], [ %4, %4538 ]
  %4565 = phi i64 [ %4548, %4555 ], [ 0, %4538 ]
  %4566 = add nsw i32 %4563, 1
  store i32 %4566, ptr %4564, align 4, !tbaa !6
  %4567 = getelementptr inbounds i32, ptr %7, i64 %4565
  %4568 = load i32, ptr %4567, align 4, !tbaa !6
  %4569 = getelementptr inbounds i32, ptr %6, i64 %4565
  br label %4580

4570:                                             ; preds = %4547
  %4571 = icmp eq i32 %4550, %4553
  br i1 %4571, label %4572, label %4578

4572:                                             ; preds = %4570
  store i32 0, ptr %4549, align 4, !tbaa !6
  %4573 = getelementptr inbounds i32, ptr %8, i64 %4548
  %4574 = load i32, ptr %4573, align 4, !tbaa !6
  %4575 = getelementptr inbounds i32, ptr %6, i64 %4548
  store i32 %4574, ptr %4575, align 4, !tbaa !6
  %4576 = add nuw nsw i64 %4548, 1
  %4577 = icmp eq i64 %4576, %4441
  br i1 %4577, label %4585, label %4547, !llvm.loop !1088

4578:                                             ; preds = %4543, %4570
  store float %4535, ptr %4410, align 4, !tbaa !163
  %4579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4580:                                             ; preds = %4556, %4562
  %4581 = phi ptr [ %4569, %4562 ], [ %4549, %4556 ]
  %4582 = phi i32 [ %4568, %4562 ], [ 1, %4556 ]
  %4583 = load i32, ptr %4581, align 4, !tbaa !6
  %4584 = add nsw i32 %4583, %4582
  store i32 %4584, ptr %4581, align 4, !tbaa !6
  br label %4585

4585:                                             ; preds = %4572, %4580, %4545, %4518
  %4586 = icmp eq i32 %4537, %5
  br i1 %4586, label %5659, label %4444, !llvm.loop !1089

4587:                                             ; preds = %4427, %4730
  %4588 = phi float [ 0.000000e+00, %4427 ], [ %4678, %4730 ]
  %4589 = phi i32 [ 0, %4427 ], [ %4679, %4730 ]
  %4590 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4428, label %4591, label %4660

4591:                                             ; preds = %4587, %4650
  %4592 = phi i32 [ %4659, %4650 ], [ 0, %4587 ]
  %4593 = phi i64 [ %4601, %4650 ], [ %4432, %4587 ]
  %4594 = phi i64 [ %4658, %4650 ], [ %4431, %4587 ]
  %4595 = phi i32 [ %4656, %4650 ], [ %4590, %4587 ]
  %4596 = sub i32 %4430, %4592
  %4597 = tail call i32 @llvm.smin.i32(i32 %4596, i32 0)
  %4598 = sub i32 %4596, %4597
  %4599 = zext i32 %4598 to i64
  %4600 = add nuw nsw i64 %4599, 1
  %4601 = add nsw i64 %4593, -1
  %4602 = icmp ult i32 %4598, 31
  br i1 %4602, label %4638, label %4603

4603:                                             ; preds = %4591
  %4604 = and i64 %4600, 8589934560
  %4605 = sub i64 %4594, %4604
  br label %4606

4606:                                             ; preds = %4606, %4603
  %4607 = phi i64 [ 0, %4603 ], [ %4630, %4606 ]
  %4608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4626, %4606 ]
  %4609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4627, %4606 ]
  %4610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4628, %4606 ]
  %4611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4629, %4606 ]
  %4612 = sub i64 %4594, %4607
  %4613 = getelementptr inbounds i32, ptr %11, i64 %4612
  %4614 = getelementptr inbounds i32, ptr %4613, i64 -7
  %4615 = load <8 x i32>, ptr %4614, align 4, !tbaa !6
  %4616 = shufflevector <8 x i32> %4615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4617 = getelementptr inbounds i32, ptr %4613, i64 -15
  %4618 = load <8 x i32>, ptr %4617, align 4, !tbaa !6
  %4619 = shufflevector <8 x i32> %4618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4620 = getelementptr inbounds i32, ptr %4613, i64 -23
  %4621 = load <8 x i32>, ptr %4620, align 4, !tbaa !6
  %4622 = shufflevector <8 x i32> %4621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4623 = getelementptr inbounds i32, ptr %4613, i64 -31
  %4624 = load <8 x i32>, ptr %4623, align 4, !tbaa !6
  %4625 = shufflevector <8 x i32> %4624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4626 = mul <8 x i32> %4616, %4608
  %4627 = mul <8 x i32> %4619, %4609
  %4628 = mul <8 x i32> %4622, %4610
  %4629 = mul <8 x i32> %4625, %4611
  %4630 = add nuw i64 %4607, 32
  %4631 = icmp eq i64 %4630, %4604
  br i1 %4631, label %4632, label %4606, !llvm.loop !1090

4632:                                             ; preds = %4606
  %4633 = mul <8 x i32> %4627, %4626
  %4634 = mul <8 x i32> %4628, %4633
  %4635 = mul <8 x i32> %4629, %4634
  %4636 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4635)
  %4637 = icmp eq i64 %4600, %4604
  br i1 %4637, label %4650, label %4638

4638:                                             ; preds = %4591, %4632
  %4639 = phi i64 [ %4594, %4591 ], [ %4605, %4632 ]
  %4640 = phi i32 [ 1, %4591 ], [ %4636, %4632 ]
  br label %4641

4641:                                             ; preds = %4638, %4641
  %4642 = phi i64 [ %4647, %4641 ], [ %4639, %4638 ]
  %4643 = phi i32 [ %4646, %4641 ], [ %4640, %4638 ]
  %4644 = getelementptr inbounds i32, ptr %11, i64 %4642
  %4645 = load i32, ptr %4644, align 4, !tbaa !6
  %4646 = mul nsw i32 %4645, %4643
  %4647 = add nsw i64 %4642, -1
  %4648 = trunc i64 %4642 to i32
  %4649 = icmp sgt i32 %4648, 0
  br i1 %4649, label %4641, label %4650, !llvm.loop !1091

4650:                                             ; preds = %4641, %4632
  %4651 = phi i32 [ %4636, %4632 ], [ %4646, %4641 ]
  %4652 = and i64 %4601, 4294967295
  %4653 = getelementptr inbounds i32, ptr %6, i64 %4652
  %4654 = load i32, ptr %4653, align 4, !tbaa !6
  %4655 = mul nsw i32 %4654, %4651
  %4656 = add nsw i32 %4655, %4595
  %4657 = icmp sgt i64 %4593, 2
  %4658 = add nsw i64 %4594, -1
  %4659 = add i32 %4592, 1
  br i1 %4657, label %4591, label %4660, !llvm.loop !1092

4660:                                             ; preds = %4650, %4587
  %4661 = phi i32 [ %4590, %4587 ], [ %4656, %4650 ]
  %4662 = icmp slt i32 %4661, %5
  br i1 %4662, label %4665, label %4663

4663:                                             ; preds = %4660
  %4664 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4665:                                             ; preds = %4660
  %4666 = sext i32 %4661 to i64
  %4667 = getelementptr inbounds double, ptr %4408, i64 %4666
  %4668 = load double, ptr %4667, align 8, !tbaa !19
  %4669 = fptrunc double %4668 to float
  %4670 = fpext float %4588 to double
  %4671 = fpext float %4669 to double
  %4672 = fcmp fast olt float %4669, 0.000000e+00
  %4673 = fneg fast double %4671
  %4674 = select i1 %4672, double %4673, double %4671
  %4675 = fmul fast double %4671, %4671
  %4676 = fmul fast double %4675, %4674
  %4677 = fadd fast double %4676, %4670
  %4678 = fptrunc double %4677 to float
  store float %4678, ptr %4410, align 4, !tbaa !163
  %4679 = add nuw nsw i32 %4589, 1
  br i1 %4429, label %4680, label %4730

4680:                                             ; preds = %4665
  %4681 = load i32, ptr %4, align 4, !tbaa !6
  %4682 = load i32, ptr %12, align 4, !tbaa !6
  %4683 = add nsw i32 %4682, -1
  %4684 = icmp slt i32 %4681, %4683
  br i1 %4684, label %4707, label %4685

4685:                                             ; preds = %4680
  %4686 = icmp eq i32 %4681, %4683
  br i1 %4686, label %4687, label %4723

4687:                                             ; preds = %4685
  store i32 0, ptr %4, align 4, !tbaa !6
  %4688 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4688, ptr %6, align 4, !tbaa !6
  br i1 %4434, label %4730, label %4689

4689:                                             ; preds = %4687, %4717
  %4690 = phi i64 [ %4721, %4717 ], [ 1, %4687 ]
  %4691 = getelementptr inbounds i32, ptr %4, i64 %4690
  %4692 = load i32, ptr %4691, align 4, !tbaa !6
  %4693 = getelementptr inbounds i32, ptr %12, i64 %4690
  %4694 = load i32, ptr %4693, align 4, !tbaa !6
  %4695 = add nsw i32 %4694, -1
  %4696 = icmp slt i32 %4692, %4695
  br i1 %4696, label %4697, label %4715

4697:                                             ; preds = %4689
  br i1 %4684, label %4707, label %4698

4698:                                             ; preds = %4697
  %4699 = shl i64 %4690, 32
  %4700 = add i64 %4699, -4294967296
  %4701 = ashr exact i64 %4700, 32
  %4702 = getelementptr inbounds i32, ptr %7, i64 %4701
  %4703 = load i32, ptr %4702, align 4, !tbaa !6
  %4704 = getelementptr inbounds i32, ptr %6, i64 %4690
  %4705 = load i32, ptr %4704, align 4, !tbaa !6
  %4706 = add nsw i32 %4705, %4703
  store i32 %4706, ptr %4704, align 4, !tbaa !6
  br label %4725

4707:                                             ; preds = %4680, %4697
  %4708 = phi i32 [ %4692, %4697 ], [ %4681, %4680 ]
  %4709 = phi ptr [ %4691, %4697 ], [ %4, %4680 ]
  %4710 = phi i64 [ %4690, %4697 ], [ 0, %4680 ]
  %4711 = add nsw i32 %4708, 1
  store i32 %4711, ptr %4709, align 4, !tbaa !6
  %4712 = getelementptr inbounds i32, ptr %7, i64 %4710
  %4713 = load i32, ptr %4712, align 4, !tbaa !6
  %4714 = getelementptr inbounds i32, ptr %6, i64 %4710
  br label %4725

4715:                                             ; preds = %4689
  %4716 = icmp eq i32 %4692, %4695
  br i1 %4716, label %4717, label %4723

4717:                                             ; preds = %4715
  store i32 0, ptr %4691, align 4, !tbaa !6
  %4718 = getelementptr inbounds i32, ptr %8, i64 %4690
  %4719 = load i32, ptr %4718, align 4, !tbaa !6
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4690
  store i32 %4719, ptr %4720, align 4, !tbaa !6
  %4721 = add nuw nsw i64 %4690, 1
  %4722 = icmp eq i64 %4721, %4432
  br i1 %4722, label %4730, label %4689, !llvm.loop !1093

4723:                                             ; preds = %4685, %4715
  %4724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4725:                                             ; preds = %4698, %4707
  %4726 = phi ptr [ %4714, %4707 ], [ %4691, %4698 ]
  %4727 = phi i32 [ %4713, %4707 ], [ 1, %4698 ]
  %4728 = load i32, ptr %4726, align 4, !tbaa !6
  %4729 = add nsw i32 %4728, %4727
  store i32 %4729, ptr %4726, align 4, !tbaa !6
  br label %4730

4730:                                             ; preds = %4717, %4725, %4687, %4665
  %4731 = icmp eq i32 %4679, %5
  br i1 %4731, label %5661, label %4587, !llvm.loop !1094

4732:                                             ; preds = %4420
  %4733 = getelementptr inbounds i32, ptr %3, i64 %19
  %4734 = load i32, ptr %4733, align 4, !tbaa !6
  %4735 = icmp eq i32 %4734, 0
  %4736 = icmp sgt i32 %5, 0
  br i1 %4735, label %4746, label %4737

4737:                                             ; preds = %4732
  br i1 %4736, label %4738, label %5661

4738:                                             ; preds = %4737
  %4739 = icmp sgt i32 %13, 1
  %4740 = icmp sgt i32 %13, 0
  %4741 = add i32 %13, -2
  %4742 = zext i32 %4741 to i64
  %4743 = zext i32 %13 to i64
  %4744 = add nuw i32 %5, 1
  %4745 = icmp eq i32 %13, 1
  br label %4892

4746:                                             ; preds = %4732
  br i1 %4736, label %4747, label %5661

4747:                                             ; preds = %4746
  %4748 = icmp sgt i32 %13, 1
  %4749 = icmp sgt i32 %13, 0
  %4750 = add i32 %13, -2
  %4751 = zext i32 %4750 to i64
  %4752 = zext i32 %13 to i64
  %4753 = add nuw i32 %5, 1
  %4754 = icmp eq i32 %13, 1
  br label %4755

4755:                                             ; preds = %4747, %4890
  %4756 = phi float [ 0.000000e+00, %4747 ], [ %4840, %4890 ]
  %4757 = phi i32 [ 0, %4747 ], [ %4842, %4890 ]
  %4758 = phi double [ 0.000000e+00, %4747 ], [ %4841, %4890 ]
  %4759 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4748, label %4760, label %4829

4760:                                             ; preds = %4755, %4819
  %4761 = phi i32 [ %4828, %4819 ], [ 0, %4755 ]
  %4762 = phi i64 [ %4770, %4819 ], [ %4752, %4755 ]
  %4763 = phi i64 [ %4827, %4819 ], [ %4751, %4755 ]
  %4764 = phi i32 [ %4825, %4819 ], [ %4759, %4755 ]
  %4765 = sub i32 %4750, %4761
  %4766 = tail call i32 @llvm.smin.i32(i32 %4765, i32 0)
  %4767 = sub i32 %4765, %4766
  %4768 = zext i32 %4767 to i64
  %4769 = add nuw nsw i64 %4768, 1
  %4770 = add nsw i64 %4762, -1
  %4771 = icmp ult i32 %4767, 31
  br i1 %4771, label %4807, label %4772

4772:                                             ; preds = %4760
  %4773 = and i64 %4769, 8589934560
  %4774 = sub i64 %4763, %4773
  br label %4775

4775:                                             ; preds = %4775, %4772
  %4776 = phi i64 [ 0, %4772 ], [ %4799, %4775 ]
  %4777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4795, %4775 ]
  %4778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4796, %4775 ]
  %4779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4797, %4775 ]
  %4780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4798, %4775 ]
  %4781 = sub i64 %4763, %4776
  %4782 = getelementptr inbounds i32, ptr %9, i64 %4781
  %4783 = getelementptr inbounds i32, ptr %4782, i64 -7
  %4784 = load <8 x i32>, ptr %4783, align 4, !tbaa !6
  %4785 = shufflevector <8 x i32> %4784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4786 = getelementptr inbounds i32, ptr %4782, i64 -15
  %4787 = load <8 x i32>, ptr %4786, align 4, !tbaa !6
  %4788 = shufflevector <8 x i32> %4787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4789 = getelementptr inbounds i32, ptr %4782, i64 -23
  %4790 = load <8 x i32>, ptr %4789, align 4, !tbaa !6
  %4791 = shufflevector <8 x i32> %4790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4792 = getelementptr inbounds i32, ptr %4782, i64 -31
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !6
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = mul <8 x i32> %4785, %4777
  %4796 = mul <8 x i32> %4788, %4778
  %4797 = mul <8 x i32> %4791, %4779
  %4798 = mul <8 x i32> %4794, %4780
  %4799 = add nuw i64 %4776, 32
  %4800 = icmp eq i64 %4799, %4773
  br i1 %4800, label %4801, label %4775, !llvm.loop !1095

4801:                                             ; preds = %4775
  %4802 = mul <8 x i32> %4796, %4795
  %4803 = mul <8 x i32> %4797, %4802
  %4804 = mul <8 x i32> %4798, %4803
  %4805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4804)
  %4806 = icmp eq i64 %4769, %4773
  br i1 %4806, label %4819, label %4807

4807:                                             ; preds = %4760, %4801
  %4808 = phi i64 [ %4763, %4760 ], [ %4774, %4801 ]
  %4809 = phi i32 [ 1, %4760 ], [ %4805, %4801 ]
  br label %4810

4810:                                             ; preds = %4807, %4810
  %4811 = phi i64 [ %4816, %4810 ], [ %4808, %4807 ]
  %4812 = phi i32 [ %4815, %4810 ], [ %4809, %4807 ]
  %4813 = getelementptr inbounds i32, ptr %9, i64 %4811
  %4814 = load i32, ptr %4813, align 4, !tbaa !6
  %4815 = mul nsw i32 %4814, %4812
  %4816 = add nsw i64 %4811, -1
  %4817 = trunc i64 %4811 to i32
  %4818 = icmp sgt i32 %4817, 0
  br i1 %4818, label %4810, label %4819, !llvm.loop !1096

4819:                                             ; preds = %4810, %4801
  %4820 = phi i32 [ %4805, %4801 ], [ %4815, %4810 ]
  %4821 = and i64 %4770, 4294967295
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4821
  %4823 = load i32, ptr %4822, align 4, !tbaa !6
  %4824 = mul nsw i32 %4823, %4820
  %4825 = add nsw i32 %4824, %4764
  %4826 = icmp sgt i64 %4762, 2
  %4827 = add nsw i64 %4763, -1
  %4828 = add i32 %4761, 1
  br i1 %4826, label %4760, label %4829, !llvm.loop !1097

4829:                                             ; preds = %4819, %4755
  %4830 = phi i32 [ %4759, %4755 ], [ %4825, %4819 ]
  %4831 = sext i32 %4830 to i64
  %4832 = getelementptr inbounds double, ptr %4408, i64 %4831
  %4833 = load double, ptr %4832, align 8, !tbaa !19
  %4834 = fptrunc double %4833 to float
  %4835 = fcmp fast olt float %4834, 0.000000e+00
  %4836 = fneg fast float %4834
  %4837 = select nnan ninf i1 %4835, float %4836, float %4834
  %4838 = fmul fast float %4834, %4834
  %4839 = fmul fast float %4838, %4837
  %4840 = fadd fast float %4839, %4756
  %4841 = fadd fast double %4758, 1.000000e+00
  %4842 = add nuw nsw i32 %4757, 1
  br i1 %4749, label %4843, label %4890

4843:                                             ; preds = %4829
  %4844 = load i32, ptr %4, align 4, !tbaa !6
  %4845 = load i32, ptr %12, align 4, !tbaa !6
  %4846 = add nsw i32 %4845, -1
  %4847 = icmp slt i32 %4844, %4846
  br i1 %4847, label %4867, label %4848

4848:                                             ; preds = %4843
  %4849 = icmp eq i32 %4844, %4846
  br i1 %4849, label %4850, label %4883

4850:                                             ; preds = %4848
  store i32 0, ptr %4, align 4, !tbaa !6
  %4851 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4851, ptr %6, align 4, !tbaa !6
  br i1 %4754, label %4890, label %4852

4852:                                             ; preds = %4850, %4877
  %4853 = phi i64 [ %4881, %4877 ], [ 1, %4850 ]
  %4854 = getelementptr inbounds i32, ptr %4, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !6
  %4856 = getelementptr inbounds i32, ptr %12, i64 %4853
  %4857 = load i32, ptr %4856, align 4, !tbaa !6
  %4858 = add nsw i32 %4857, -1
  %4859 = icmp slt i32 %4855, %4858
  br i1 %4859, label %4860, label %4875

4860:                                             ; preds = %4852
  br i1 %4847, label %4867, label %4861

4861:                                             ; preds = %4860
  %4862 = getelementptr inbounds i32, ptr %7, i64 %4853
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = getelementptr inbounds i32, ptr %6, i64 %4853
  %4865 = load i32, ptr %4864, align 4, !tbaa !6
  %4866 = add nsw i32 %4865, %4863
  store i32 %4866, ptr %4864, align 4, !tbaa !6
  br label %4885

4867:                                             ; preds = %4843, %4860
  %4868 = phi i32 [ %4855, %4860 ], [ %4844, %4843 ]
  %4869 = phi ptr [ %4854, %4860 ], [ %4, %4843 ]
  %4870 = phi i64 [ %4853, %4860 ], [ 0, %4843 ]
  %4871 = add nsw i32 %4868, 1
  store i32 %4871, ptr %4869, align 4, !tbaa !6
  %4872 = getelementptr inbounds i32, ptr %7, i64 %4870
  %4873 = load i32, ptr %4872, align 4, !tbaa !6
  %4874 = getelementptr inbounds i32, ptr %6, i64 %4870
  br label %4885

4875:                                             ; preds = %4852
  %4876 = icmp eq i32 %4855, %4858
  br i1 %4876, label %4877, label %4883

4877:                                             ; preds = %4875
  store i32 0, ptr %4854, align 4, !tbaa !6
  %4878 = getelementptr inbounds i32, ptr %8, i64 %4853
  %4879 = load i32, ptr %4878, align 4, !tbaa !6
  %4880 = getelementptr inbounds i32, ptr %6, i64 %4853
  store i32 %4879, ptr %4880, align 4, !tbaa !6
  %4881 = add nuw nsw i64 %4853, 1
  %4882 = icmp eq i64 %4881, %4752
  br i1 %4882, label %4890, label %4852, !llvm.loop !1098

4883:                                             ; preds = %4848, %4875
  store float %4840, ptr %4410, align 4, !tbaa !163
  %4884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4885:                                             ; preds = %4861, %4867
  %4886 = phi ptr [ %4874, %4867 ], [ %4854, %4861 ]
  %4887 = phi i32 [ %4873, %4867 ], [ 1, %4861 ]
  %4888 = load i32, ptr %4886, align 4, !tbaa !6
  %4889 = add nsw i32 %4888, %4887
  store i32 %4889, ptr %4886, align 4, !tbaa !6
  br label %4890

4890:                                             ; preds = %4877, %4885, %4850, %4829
  %4891 = icmp eq i32 %4842, %5
  br i1 %4891, label %5660, label %4755, !llvm.loop !1099

4892:                                             ; preds = %4738, %5032
  %4893 = phi float [ 0.000000e+00, %4738 ], [ %4980, %5032 ]
  %4894 = phi i32 [ 0, %4738 ], [ %4981, %5032 ]
  %4895 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4739, label %4896, label %4965

4896:                                             ; preds = %4892, %4955
  %4897 = phi i32 [ %4964, %4955 ], [ 0, %4892 ]
  %4898 = phi i64 [ %4906, %4955 ], [ %4743, %4892 ]
  %4899 = phi i64 [ %4963, %4955 ], [ %4742, %4892 ]
  %4900 = phi i32 [ %4961, %4955 ], [ %4895, %4892 ]
  %4901 = sub i32 %4741, %4897
  %4902 = tail call i32 @llvm.smin.i32(i32 %4901, i32 0)
  %4903 = sub i32 %4901, %4902
  %4904 = zext i32 %4903 to i64
  %4905 = add nuw nsw i64 %4904, 1
  %4906 = add nsw i64 %4898, -1
  %4907 = icmp ult i32 %4903, 31
  br i1 %4907, label %4943, label %4908

4908:                                             ; preds = %4896
  %4909 = and i64 %4905, 8589934560
  %4910 = sub i64 %4899, %4909
  br label %4911

4911:                                             ; preds = %4911, %4908
  %4912 = phi i64 [ 0, %4908 ], [ %4935, %4911 ]
  %4913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4931, %4911 ]
  %4914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4932, %4911 ]
  %4915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4933, %4911 ]
  %4916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4934, %4911 ]
  %4917 = sub i64 %4899, %4912
  %4918 = getelementptr inbounds i32, ptr %11, i64 %4917
  %4919 = getelementptr inbounds i32, ptr %4918, i64 -7
  %4920 = load <8 x i32>, ptr %4919, align 4, !tbaa !6
  %4921 = shufflevector <8 x i32> %4920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4922 = getelementptr inbounds i32, ptr %4918, i64 -15
  %4923 = load <8 x i32>, ptr %4922, align 4, !tbaa !6
  %4924 = shufflevector <8 x i32> %4923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4925 = getelementptr inbounds i32, ptr %4918, i64 -23
  %4926 = load <8 x i32>, ptr %4925, align 4, !tbaa !6
  %4927 = shufflevector <8 x i32> %4926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4928 = getelementptr inbounds i32, ptr %4918, i64 -31
  %4929 = load <8 x i32>, ptr %4928, align 4, !tbaa !6
  %4930 = shufflevector <8 x i32> %4929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4931 = mul <8 x i32> %4921, %4913
  %4932 = mul <8 x i32> %4924, %4914
  %4933 = mul <8 x i32> %4927, %4915
  %4934 = mul <8 x i32> %4930, %4916
  %4935 = add nuw i64 %4912, 32
  %4936 = icmp eq i64 %4935, %4909
  br i1 %4936, label %4937, label %4911, !llvm.loop !1100

4937:                                             ; preds = %4911
  %4938 = mul <8 x i32> %4932, %4931
  %4939 = mul <8 x i32> %4933, %4938
  %4940 = mul <8 x i32> %4934, %4939
  %4941 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4940)
  %4942 = icmp eq i64 %4905, %4909
  br i1 %4942, label %4955, label %4943

4943:                                             ; preds = %4896, %4937
  %4944 = phi i64 [ %4899, %4896 ], [ %4910, %4937 ]
  %4945 = phi i32 [ 1, %4896 ], [ %4941, %4937 ]
  br label %4946

4946:                                             ; preds = %4943, %4946
  %4947 = phi i64 [ %4952, %4946 ], [ %4944, %4943 ]
  %4948 = phi i32 [ %4951, %4946 ], [ %4945, %4943 ]
  %4949 = getelementptr inbounds i32, ptr %11, i64 %4947
  %4950 = load i32, ptr %4949, align 4, !tbaa !6
  %4951 = mul nsw i32 %4950, %4948
  %4952 = add nsw i64 %4947, -1
  %4953 = trunc i64 %4947 to i32
  %4954 = icmp sgt i32 %4953, 0
  br i1 %4954, label %4946, label %4955, !llvm.loop !1101

4955:                                             ; preds = %4946, %4937
  %4956 = phi i32 [ %4941, %4937 ], [ %4951, %4946 ]
  %4957 = and i64 %4906, 4294967295
  %4958 = getelementptr inbounds i32, ptr %6, i64 %4957
  %4959 = load i32, ptr %4958, align 4, !tbaa !6
  %4960 = mul nsw i32 %4959, %4956
  %4961 = add nsw i32 %4960, %4900
  %4962 = icmp sgt i64 %4898, 2
  %4963 = add nsw i64 %4899, -1
  %4964 = add i32 %4897, 1
  br i1 %4962, label %4896, label %4965, !llvm.loop !1102

4965:                                             ; preds = %4955, %4892
  %4966 = phi i32 [ %4895, %4892 ], [ %4961, %4955 ]
  %4967 = icmp slt i32 %4966, %5
  br i1 %4967, label %4970, label %4968

4968:                                             ; preds = %4965
  %4969 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4970:                                             ; preds = %4965
  %4971 = sext i32 %4966 to i64
  %4972 = getelementptr inbounds double, ptr %4408, i64 %4971
  %4973 = load double, ptr %4972, align 8, !tbaa !19
  %4974 = fptrunc double %4973 to float
  %4975 = fcmp fast olt float %4974, 0.000000e+00
  %4976 = fneg fast float %4974
  %4977 = select nnan ninf i1 %4975, float %4976, float %4974
  %4978 = fmul fast float %4974, %4974
  %4979 = fmul fast float %4978, %4977
  %4980 = fadd fast float %4979, %4893
  store float %4980, ptr %4410, align 4, !tbaa !163
  %4981 = add nuw nsw i32 %4894, 1
  br i1 %4740, label %4982, label %5032

4982:                                             ; preds = %4970
  %4983 = load i32, ptr %4, align 4, !tbaa !6
  %4984 = load i32, ptr %12, align 4, !tbaa !6
  %4985 = add nsw i32 %4984, -1
  %4986 = icmp slt i32 %4983, %4985
  br i1 %4986, label %5009, label %4987

4987:                                             ; preds = %4982
  %4988 = icmp eq i32 %4983, %4985
  br i1 %4988, label %4989, label %5025

4989:                                             ; preds = %4987
  store i32 0, ptr %4, align 4, !tbaa !6
  %4990 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4990, ptr %6, align 4, !tbaa !6
  br i1 %4745, label %5032, label %4991

4991:                                             ; preds = %4989, %5019
  %4992 = phi i64 [ %5023, %5019 ], [ 1, %4989 ]
  %4993 = getelementptr inbounds i32, ptr %4, i64 %4992
  %4994 = load i32, ptr %4993, align 4, !tbaa !6
  %4995 = getelementptr inbounds i32, ptr %12, i64 %4992
  %4996 = load i32, ptr %4995, align 4, !tbaa !6
  %4997 = add nsw i32 %4996, -1
  %4998 = icmp slt i32 %4994, %4997
  br i1 %4998, label %4999, label %5017

4999:                                             ; preds = %4991
  br i1 %4986, label %5009, label %5000

5000:                                             ; preds = %4999
  %5001 = shl i64 %4992, 32
  %5002 = add i64 %5001, -4294967296
  %5003 = ashr exact i64 %5002, 32
  %5004 = getelementptr inbounds i32, ptr %7, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !6
  %5006 = getelementptr inbounds i32, ptr %6, i64 %4992
  %5007 = load i32, ptr %5006, align 4, !tbaa !6
  %5008 = add nsw i32 %5007, %5005
  store i32 %5008, ptr %5006, align 4, !tbaa !6
  br label %5027

5009:                                             ; preds = %4982, %4999
  %5010 = phi i32 [ %4994, %4999 ], [ %4983, %4982 ]
  %5011 = phi ptr [ %4993, %4999 ], [ %4, %4982 ]
  %5012 = phi i64 [ %4992, %4999 ], [ 0, %4982 ]
  %5013 = add nsw i32 %5010, 1
  store i32 %5013, ptr %5011, align 4, !tbaa !6
  %5014 = getelementptr inbounds i32, ptr %7, i64 %5012
  %5015 = load i32, ptr %5014, align 4, !tbaa !6
  %5016 = getelementptr inbounds i32, ptr %6, i64 %5012
  br label %5027

5017:                                             ; preds = %4991
  %5018 = icmp eq i32 %4994, %4997
  br i1 %5018, label %5019, label %5025

5019:                                             ; preds = %5017
  store i32 0, ptr %4993, align 4, !tbaa !6
  %5020 = getelementptr inbounds i32, ptr %8, i64 %4992
  %5021 = load i32, ptr %5020, align 4, !tbaa !6
  %5022 = getelementptr inbounds i32, ptr %6, i64 %4992
  store i32 %5021, ptr %5022, align 4, !tbaa !6
  %5023 = add nuw nsw i64 %4992, 1
  %5024 = icmp eq i64 %5023, %4743
  br i1 %5024, label %5032, label %4991, !llvm.loop !1103

5025:                                             ; preds = %4987, %5017
  %5026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5027:                                             ; preds = %5000, %5009
  %5028 = phi ptr [ %5016, %5009 ], [ %4993, %5000 ]
  %5029 = phi i32 [ %5015, %5009 ], [ 1, %5000 ]
  %5030 = load i32, ptr %5028, align 4, !tbaa !6
  %5031 = add nsw i32 %5030, %5029
  store i32 %5031, ptr %5028, align 4, !tbaa !6
  br label %5032

5032:                                             ; preds = %5019, %5027, %4989, %4970
  %5033 = icmp eq i32 %4981, %5
  br i1 %5033, label %5661, label %4892, !llvm.loop !1104

5034:                                             ; preds = %4420
  %5035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

5036:                                             ; preds = %18
  %5037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5038 = load ptr, ptr %5037, align 8, !tbaa !10
  %5039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5040 = load ptr, ptr %5039, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5040, align 8, !tbaa !19
  %5041 = icmp eq i32 %13, 0
  br i1 %5041, label %5042, label %5049

5042:                                             ; preds = %5036
  %5043 = load double, ptr %5038, align 8, !tbaa !19
  %5044 = fcmp fast olt double %5043, 0.000000e+00
  %5045 = fneg fast double %5043
  %5046 = select nnan ninf i1 %5044, double %5045, double %5043
  %5047 = fmul fast double %5043, %5043
  %5048 = fmul fast double %5047, %5046
  store double %5048, ptr %5040, align 8, !tbaa !19
  br label %5661

5049:                                             ; preds = %5036
  switch i32 %1, label %5653 [
    i32 1, label %5050
    i32 0, label %5353
  ]

5050:                                             ; preds = %5049
  %5051 = getelementptr inbounds i32, ptr %3, i64 %19
  %5052 = load i32, ptr %5051, align 4, !tbaa !6
  %5053 = icmp eq i32 %5052, 0
  %5054 = icmp sgt i32 %5, 0
  br i1 %5053, label %5064, label %5055

5055:                                             ; preds = %5050
  br i1 %5054, label %5056, label %5661

5056:                                             ; preds = %5055
  %5057 = icmp sgt i32 %13, 1
  %5058 = icmp sgt i32 %13, 0
  %5059 = add i32 %13, -2
  %5060 = zext i32 %5059 to i64
  %5061 = zext i32 %13 to i64
  %5062 = add nuw i32 %5, 1
  %5063 = icmp eq i32 %13, 1
  br label %5212

5064:                                             ; preds = %5050
  br i1 %5054, label %5065, label %5661

5065:                                             ; preds = %5064
  %5066 = icmp sgt i32 %13, 1
  %5067 = icmp sgt i32 %13, 0
  %5068 = add i32 %13, -2
  %5069 = zext i32 %5068 to i64
  %5070 = zext i32 %13 to i64
  %5071 = add nuw i32 %5, 1
  %5072 = icmp eq i32 %13, 1
  br label %5073

5073:                                             ; preds = %5065, %5210
  %5074 = phi double [ 0.000000e+00, %5065 ], [ %5160, %5210 ]
  %5075 = phi i32 [ 0, %5065 ], [ %5162, %5210 ]
  %5076 = phi double [ 0.000000e+00, %5065 ], [ %5161, %5210 ]
  %5077 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5066, label %5078, label %5147

5078:                                             ; preds = %5073, %5137
  %5079 = phi i32 [ %5146, %5137 ], [ 0, %5073 ]
  %5080 = phi i64 [ %5088, %5137 ], [ %5070, %5073 ]
  %5081 = phi i64 [ %5145, %5137 ], [ %5069, %5073 ]
  %5082 = phi i32 [ %5143, %5137 ], [ %5077, %5073 ]
  %5083 = sub i32 %5068, %5079
  %5084 = tail call i32 @llvm.smin.i32(i32 %5083, i32 0)
  %5085 = sub i32 %5083, %5084
  %5086 = zext i32 %5085 to i64
  %5087 = add nuw nsw i64 %5086, 1
  %5088 = add nsw i64 %5080, -1
  %5089 = icmp ult i32 %5085, 31
  br i1 %5089, label %5125, label %5090

5090:                                             ; preds = %5078
  %5091 = and i64 %5087, 8589934560
  %5092 = sub i64 %5081, %5091
  br label %5093

5093:                                             ; preds = %5093, %5090
  %5094 = phi i64 [ 0, %5090 ], [ %5117, %5093 ]
  %5095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5113, %5093 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5114, %5093 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5115, %5093 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5116, %5093 ]
  %5099 = sub i64 %5081, %5094
  %5100 = getelementptr inbounds i32, ptr %9, i64 %5099
  %5101 = getelementptr inbounds i32, ptr %5100, i64 -7
  %5102 = load <8 x i32>, ptr %5101, align 4, !tbaa !6
  %5103 = shufflevector <8 x i32> %5102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5104 = getelementptr inbounds i32, ptr %5100, i64 -15
  %5105 = load <8 x i32>, ptr %5104, align 4, !tbaa !6
  %5106 = shufflevector <8 x i32> %5105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5107 = getelementptr inbounds i32, ptr %5100, i64 -23
  %5108 = load <8 x i32>, ptr %5107, align 4, !tbaa !6
  %5109 = shufflevector <8 x i32> %5108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5110 = getelementptr inbounds i32, ptr %5100, i64 -31
  %5111 = load <8 x i32>, ptr %5110, align 4, !tbaa !6
  %5112 = shufflevector <8 x i32> %5111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5113 = mul <8 x i32> %5103, %5095
  %5114 = mul <8 x i32> %5106, %5096
  %5115 = mul <8 x i32> %5109, %5097
  %5116 = mul <8 x i32> %5112, %5098
  %5117 = add nuw i64 %5094, 32
  %5118 = icmp eq i64 %5117, %5091
  br i1 %5118, label %5119, label %5093, !llvm.loop !1105

5119:                                             ; preds = %5093
  %5120 = mul <8 x i32> %5114, %5113
  %5121 = mul <8 x i32> %5115, %5120
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5122)
  %5124 = icmp eq i64 %5087, %5091
  br i1 %5124, label %5137, label %5125

5125:                                             ; preds = %5078, %5119
  %5126 = phi i64 [ %5081, %5078 ], [ %5092, %5119 ]
  %5127 = phi i32 [ 1, %5078 ], [ %5123, %5119 ]
  br label %5128

5128:                                             ; preds = %5125, %5128
  %5129 = phi i64 [ %5134, %5128 ], [ %5126, %5125 ]
  %5130 = phi i32 [ %5133, %5128 ], [ %5127, %5125 ]
  %5131 = getelementptr inbounds i32, ptr %9, i64 %5129
  %5132 = load i32, ptr %5131, align 4, !tbaa !6
  %5133 = mul nsw i32 %5132, %5130
  %5134 = add nsw i64 %5129, -1
  %5135 = trunc i64 %5129 to i32
  %5136 = icmp sgt i32 %5135, 0
  br i1 %5136, label %5128, label %5137, !llvm.loop !1106

5137:                                             ; preds = %5128, %5119
  %5138 = phi i32 [ %5123, %5119 ], [ %5133, %5128 ]
  %5139 = and i64 %5088, 4294967295
  %5140 = getelementptr inbounds i32, ptr %6, i64 %5139
  %5141 = load i32, ptr %5140, align 4, !tbaa !6
  %5142 = mul nsw i32 %5141, %5138
  %5143 = add nsw i32 %5142, %5082
  %5144 = icmp sgt i64 %5080, 2
  %5145 = add nsw i64 %5081, -1
  %5146 = add i32 %5079, 1
  br i1 %5144, label %5078, label %5147, !llvm.loop !1107

5147:                                             ; preds = %5137, %5073
  %5148 = phi i32 [ %5077, %5073 ], [ %5143, %5137 ]
  %5149 = sext i32 %5148 to i64
  %5150 = getelementptr inbounds double, ptr %2, i64 %5149
  %5151 = load double, ptr %5150, align 8, !tbaa !19
  %5152 = getelementptr inbounds double, ptr %5038, i64 %5149
  %5153 = load double, ptr %5152, align 8, !tbaa !19
  %5154 = fmul fast double %5153, %5151
  %5155 = fcmp fast olt double %5154, 0.000000e+00
  %5156 = fneg fast double %5154
  %5157 = select nnan ninf i1 %5155, double %5156, double %5154
  %5158 = fmul fast double %5154, %5154
  %5159 = fmul fast double %5158, %5157
  %5160 = fadd fast double %5159, %5074
  store double %5160, ptr %5040, align 8, !tbaa !19
  %5161 = fadd fast double %5151, %5076
  %5162 = add nuw nsw i32 %5075, 1
  br i1 %5067, label %5163, label %5210

5163:                                             ; preds = %5147
  %5164 = load i32, ptr %4, align 4, !tbaa !6
  %5165 = load i32, ptr %12, align 4, !tbaa !6
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5187, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5203

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !6
  %5171 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5171, ptr %6, align 4, !tbaa !6
  br i1 %5072, label %5210, label %5172

5172:                                             ; preds = %5170, %5197
  %5173 = phi i64 [ %5201, %5197 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !6
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !6
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5195

5180:                                             ; preds = %5172
  br i1 %5167, label %5187, label %5181

5181:                                             ; preds = %5180
  %5182 = getelementptr inbounds i32, ptr %7, i64 %5173
  %5183 = load i32, ptr %5182, align 4, !tbaa !6
  %5184 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5185 = load i32, ptr %5184, align 4, !tbaa !6
  %5186 = add nsw i32 %5185, %5183
  store i32 %5186, ptr %5184, align 4, !tbaa !6
  br label %5205

5187:                                             ; preds = %5163, %5180
  %5188 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5189 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5190 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5191 = add nsw i32 %5188, 1
  store i32 %5191, ptr %5189, align 4, !tbaa !6
  %5192 = getelementptr inbounds i32, ptr %7, i64 %5190
  %5193 = load i32, ptr %5192, align 4, !tbaa !6
  %5194 = getelementptr inbounds i32, ptr %6, i64 %5190
  br label %5205

5195:                                             ; preds = %5172
  %5196 = icmp eq i32 %5175, %5178
  br i1 %5196, label %5197, label %5203

5197:                                             ; preds = %5195
  store i32 0, ptr %5174, align 4, !tbaa !6
  %5198 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5199, ptr %5200, align 4, !tbaa !6
  %5201 = add nuw nsw i64 %5173, 1
  %5202 = icmp eq i64 %5201, %5070
  br i1 %5202, label %5210, label %5172, !llvm.loop !1108

5203:                                             ; preds = %5168, %5195
  %5204 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5205:                                             ; preds = %5181, %5187
  %5206 = phi ptr [ %5194, %5187 ], [ %5174, %5181 ]
  %5207 = phi i32 [ %5193, %5187 ], [ 1, %5181 ]
  %5208 = load i32, ptr %5206, align 4, !tbaa !6
  %5209 = add nsw i32 %5208, %5207
  store i32 %5209, ptr %5206, align 4, !tbaa !6
  br label %5210

5210:                                             ; preds = %5197, %5205, %5170, %5147
  %5211 = icmp eq i32 %5162, %5
  br i1 %5211, label %5661, label %5073, !llvm.loop !1109

5212:                                             ; preds = %5056, %5351
  %5213 = phi double [ 0.000000e+00, %5056 ], [ %5299, %5351 ]
  %5214 = phi i32 [ 0, %5056 ], [ %5300, %5351 ]
  %5215 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5057, label %5216, label %5285

5216:                                             ; preds = %5212, %5275
  %5217 = phi i32 [ %5284, %5275 ], [ 0, %5212 ]
  %5218 = phi i64 [ %5226, %5275 ], [ %5061, %5212 ]
  %5219 = phi i64 [ %5283, %5275 ], [ %5060, %5212 ]
  %5220 = phi i32 [ %5281, %5275 ], [ %5215, %5212 ]
  %5221 = sub i32 %5059, %5217
  %5222 = tail call i32 @llvm.smin.i32(i32 %5221, i32 0)
  %5223 = sub i32 %5221, %5222
  %5224 = zext i32 %5223 to i64
  %5225 = add nuw nsw i64 %5224, 1
  %5226 = add nsw i64 %5218, -1
  %5227 = icmp ult i32 %5223, 31
  br i1 %5227, label %5263, label %5228

5228:                                             ; preds = %5216
  %5229 = and i64 %5225, 8589934560
  %5230 = sub i64 %5219, %5229
  br label %5231

5231:                                             ; preds = %5231, %5228
  %5232 = phi i64 [ 0, %5228 ], [ %5255, %5231 ]
  %5233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5251, %5231 ]
  %5234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5252, %5231 ]
  %5235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5253, %5231 ]
  %5236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5254, %5231 ]
  %5237 = sub i64 %5219, %5232
  %5238 = getelementptr inbounds i32, ptr %11, i64 %5237
  %5239 = getelementptr inbounds i32, ptr %5238, i64 -7
  %5240 = load <8 x i32>, ptr %5239, align 4, !tbaa !6
  %5241 = shufflevector <8 x i32> %5240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5242 = getelementptr inbounds i32, ptr %5238, i64 -15
  %5243 = load <8 x i32>, ptr %5242, align 4, !tbaa !6
  %5244 = shufflevector <8 x i32> %5243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5245 = getelementptr inbounds i32, ptr %5238, i64 -23
  %5246 = load <8 x i32>, ptr %5245, align 4, !tbaa !6
  %5247 = shufflevector <8 x i32> %5246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5248 = getelementptr inbounds i32, ptr %5238, i64 -31
  %5249 = load <8 x i32>, ptr %5248, align 4, !tbaa !6
  %5250 = shufflevector <8 x i32> %5249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5251 = mul <8 x i32> %5241, %5233
  %5252 = mul <8 x i32> %5244, %5234
  %5253 = mul <8 x i32> %5247, %5235
  %5254 = mul <8 x i32> %5250, %5236
  %5255 = add nuw i64 %5232, 32
  %5256 = icmp eq i64 %5255, %5229
  br i1 %5256, label %5257, label %5231, !llvm.loop !1110

5257:                                             ; preds = %5231
  %5258 = mul <8 x i32> %5252, %5251
  %5259 = mul <8 x i32> %5253, %5258
  %5260 = mul <8 x i32> %5254, %5259
  %5261 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5260)
  %5262 = icmp eq i64 %5225, %5229
  br i1 %5262, label %5275, label %5263

5263:                                             ; preds = %5216, %5257
  %5264 = phi i64 [ %5219, %5216 ], [ %5230, %5257 ]
  %5265 = phi i32 [ 1, %5216 ], [ %5261, %5257 ]
  br label %5266

5266:                                             ; preds = %5263, %5266
  %5267 = phi i64 [ %5272, %5266 ], [ %5264, %5263 ]
  %5268 = phi i32 [ %5271, %5266 ], [ %5265, %5263 ]
  %5269 = getelementptr inbounds i32, ptr %11, i64 %5267
  %5270 = load i32, ptr %5269, align 4, !tbaa !6
  %5271 = mul nsw i32 %5270, %5268
  %5272 = add nsw i64 %5267, -1
  %5273 = trunc i64 %5267 to i32
  %5274 = icmp sgt i32 %5273, 0
  br i1 %5274, label %5266, label %5275, !llvm.loop !1111

5275:                                             ; preds = %5266, %5257
  %5276 = phi i32 [ %5261, %5257 ], [ %5271, %5266 ]
  %5277 = and i64 %5226, 4294967295
  %5278 = getelementptr inbounds i32, ptr %6, i64 %5277
  %5279 = load i32, ptr %5278, align 4, !tbaa !6
  %5280 = mul nsw i32 %5279, %5276
  %5281 = add nsw i32 %5280, %5220
  %5282 = icmp sgt i64 %5218, 2
  %5283 = add nsw i64 %5219, -1
  %5284 = add i32 %5217, 1
  br i1 %5282, label %5216, label %5285, !llvm.loop !1112

5285:                                             ; preds = %5275, %5212
  %5286 = phi i32 [ %5215, %5212 ], [ %5281, %5275 ]
  %5287 = icmp slt i32 %5286, %5
  br i1 %5287, label %5290, label %5288

5288:                                             ; preds = %5285
  %5289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

5290:                                             ; preds = %5285
  %5291 = sext i32 %5286 to i64
  %5292 = getelementptr inbounds double, ptr %5038, i64 %5291
  %5293 = load double, ptr %5292, align 8, !tbaa !19
  %5294 = fcmp fast olt double %5293, 0.000000e+00
  %5295 = fneg fast double %5293
  %5296 = select nnan ninf i1 %5294, double %5295, double %5293
  %5297 = fmul fast double %5293, %5293
  %5298 = fmul fast double %5297, %5296
  %5299 = fadd fast double %5298, %5213
  store double %5299, ptr %5040, align 8, !tbaa !19
  %5300 = add nuw nsw i32 %5214, 1
  br i1 %5058, label %5301, label %5351

5301:                                             ; preds = %5290
  %5302 = load i32, ptr %4, align 4, !tbaa !6
  %5303 = load i32, ptr %12, align 4, !tbaa !6
  %5304 = add nsw i32 %5303, -1
  %5305 = icmp slt i32 %5302, %5304
  br i1 %5305, label %5328, label %5306

5306:                                             ; preds = %5301
  %5307 = icmp eq i32 %5302, %5304
  br i1 %5307, label %5308, label %5344

5308:                                             ; preds = %5306
  store i32 0, ptr %4, align 4, !tbaa !6
  %5309 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5309, ptr %6, align 4, !tbaa !6
  br i1 %5063, label %5351, label %5310

5310:                                             ; preds = %5308, %5338
  %5311 = phi i64 [ %5342, %5338 ], [ 1, %5308 ]
  %5312 = getelementptr inbounds i32, ptr %4, i64 %5311
  %5313 = load i32, ptr %5312, align 4, !tbaa !6
  %5314 = getelementptr inbounds i32, ptr %12, i64 %5311
  %5315 = load i32, ptr %5314, align 4, !tbaa !6
  %5316 = add nsw i32 %5315, -1
  %5317 = icmp slt i32 %5313, %5316
  br i1 %5317, label %5318, label %5336

5318:                                             ; preds = %5310
  br i1 %5305, label %5328, label %5319

5319:                                             ; preds = %5318
  %5320 = shl i64 %5311, 32
  %5321 = add i64 %5320, -4294967296
  %5322 = ashr exact i64 %5321, 32
  %5323 = getelementptr inbounds i32, ptr %7, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !6
  %5325 = getelementptr inbounds i32, ptr %6, i64 %5311
  %5326 = load i32, ptr %5325, align 4, !tbaa !6
  %5327 = add nsw i32 %5326, %5324
  store i32 %5327, ptr %5325, align 4, !tbaa !6
  br label %5346

5328:                                             ; preds = %5301, %5318
  %5329 = phi i32 [ %5313, %5318 ], [ %5302, %5301 ]
  %5330 = phi ptr [ %5312, %5318 ], [ %4, %5301 ]
  %5331 = phi i64 [ %5311, %5318 ], [ 0, %5301 ]
  %5332 = add nsw i32 %5329, 1
  store i32 %5332, ptr %5330, align 4, !tbaa !6
  %5333 = getelementptr inbounds i32, ptr %7, i64 %5331
  %5334 = load i32, ptr %5333, align 4, !tbaa !6
  %5335 = getelementptr inbounds i32, ptr %6, i64 %5331
  br label %5346

5336:                                             ; preds = %5310
  %5337 = icmp eq i32 %5313, %5316
  br i1 %5337, label %5338, label %5344

5338:                                             ; preds = %5336
  store i32 0, ptr %5312, align 4, !tbaa !6
  %5339 = getelementptr inbounds i32, ptr %8, i64 %5311
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = getelementptr inbounds i32, ptr %6, i64 %5311
  store i32 %5340, ptr %5341, align 4, !tbaa !6
  %5342 = add nuw nsw i64 %5311, 1
  %5343 = icmp eq i64 %5342, %5061
  br i1 %5343, label %5351, label %5310, !llvm.loop !1113

5344:                                             ; preds = %5306, %5336
  %5345 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5346:                                             ; preds = %5319, %5328
  %5347 = phi ptr [ %5335, %5328 ], [ %5312, %5319 ]
  %5348 = phi i32 [ %5334, %5328 ], [ 1, %5319 ]
  %5349 = load i32, ptr %5347, align 4, !tbaa !6
  %5350 = add nsw i32 %5349, %5348
  store i32 %5350, ptr %5347, align 4, !tbaa !6
  br label %5351

5351:                                             ; preds = %5338, %5346, %5308, %5290
  %5352 = icmp eq i32 %5300, %5
  br i1 %5352, label %5661, label %5212, !llvm.loop !1114

5353:                                             ; preds = %5049
  %5354 = getelementptr inbounds i32, ptr %3, i64 %19
  %5355 = load i32, ptr %5354, align 4, !tbaa !6
  %5356 = icmp eq i32 %5355, 0
  %5357 = icmp sgt i32 %5, 0
  br i1 %5356, label %5367, label %5358

5358:                                             ; preds = %5353
  br i1 %5357, label %5359, label %5661

5359:                                             ; preds = %5358
  %5360 = icmp sgt i32 %13, 1
  %5361 = icmp sgt i32 %13, 0
  %5362 = add i32 %13, -2
  %5363 = zext i32 %5362 to i64
  %5364 = zext i32 %13 to i64
  %5365 = add nuw i32 %5, 1
  %5366 = icmp eq i32 %13, 1
  br label %5512

5367:                                             ; preds = %5353
  br i1 %5357, label %5368, label %5661

5368:                                             ; preds = %5367
  %5369 = icmp sgt i32 %13, 1
  %5370 = icmp sgt i32 %13, 0
  %5371 = add i32 %13, -2
  %5372 = zext i32 %5371 to i64
  %5373 = zext i32 %13 to i64
  %5374 = add nuw i32 %5, 1
  %5375 = icmp eq i32 %13, 1
  br label %5376

5376:                                             ; preds = %5368, %5510
  %5377 = phi double [ 0.000000e+00, %5368 ], [ %5460, %5510 ]
  %5378 = phi i32 [ 0, %5368 ], [ %5462, %5510 ]
  %5379 = phi double [ 0.000000e+00, %5368 ], [ %5461, %5510 ]
  %5380 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5369, label %5381, label %5450

5381:                                             ; preds = %5376, %5440
  %5382 = phi i32 [ %5449, %5440 ], [ 0, %5376 ]
  %5383 = phi i64 [ %5391, %5440 ], [ %5373, %5376 ]
  %5384 = phi i64 [ %5448, %5440 ], [ %5372, %5376 ]
  %5385 = phi i32 [ %5446, %5440 ], [ %5380, %5376 ]
  %5386 = sub i32 %5371, %5382
  %5387 = tail call i32 @llvm.smin.i32(i32 %5386, i32 0)
  %5388 = sub i32 %5386, %5387
  %5389 = zext i32 %5388 to i64
  %5390 = add nuw nsw i64 %5389, 1
  %5391 = add nsw i64 %5383, -1
  %5392 = icmp ult i32 %5388, 31
  br i1 %5392, label %5428, label %5393

5393:                                             ; preds = %5381
  %5394 = and i64 %5390, 8589934560
  %5395 = sub i64 %5384, %5394
  br label %5396

5396:                                             ; preds = %5396, %5393
  %5397 = phi i64 [ 0, %5393 ], [ %5420, %5396 ]
  %5398 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5416, %5396 ]
  %5399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5417, %5396 ]
  %5400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5418, %5396 ]
  %5401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5419, %5396 ]
  %5402 = sub i64 %5384, %5397
  %5403 = getelementptr inbounds i32, ptr %9, i64 %5402
  %5404 = getelementptr inbounds i32, ptr %5403, i64 -7
  %5405 = load <8 x i32>, ptr %5404, align 4, !tbaa !6
  %5406 = shufflevector <8 x i32> %5405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5407 = getelementptr inbounds i32, ptr %5403, i64 -15
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !6
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = getelementptr inbounds i32, ptr %5403, i64 -23
  %5411 = load <8 x i32>, ptr %5410, align 4, !tbaa !6
  %5412 = shufflevector <8 x i32> %5411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5413 = getelementptr inbounds i32, ptr %5403, i64 -31
  %5414 = load <8 x i32>, ptr %5413, align 4, !tbaa !6
  %5415 = shufflevector <8 x i32> %5414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5416 = mul <8 x i32> %5406, %5398
  %5417 = mul <8 x i32> %5409, %5399
  %5418 = mul <8 x i32> %5412, %5400
  %5419 = mul <8 x i32> %5415, %5401
  %5420 = add nuw i64 %5397, 32
  %5421 = icmp eq i64 %5420, %5394
  br i1 %5421, label %5422, label %5396, !llvm.loop !1115

5422:                                             ; preds = %5396
  %5423 = mul <8 x i32> %5417, %5416
  %5424 = mul <8 x i32> %5418, %5423
  %5425 = mul <8 x i32> %5419, %5424
  %5426 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5425)
  %5427 = icmp eq i64 %5390, %5394
  br i1 %5427, label %5440, label %5428

5428:                                             ; preds = %5381, %5422
  %5429 = phi i64 [ %5384, %5381 ], [ %5395, %5422 ]
  %5430 = phi i32 [ 1, %5381 ], [ %5426, %5422 ]
  br label %5431

5431:                                             ; preds = %5428, %5431
  %5432 = phi i64 [ %5437, %5431 ], [ %5429, %5428 ]
  %5433 = phi i32 [ %5436, %5431 ], [ %5430, %5428 ]
  %5434 = getelementptr inbounds i32, ptr %9, i64 %5432
  %5435 = load i32, ptr %5434, align 4, !tbaa !6
  %5436 = mul nsw i32 %5435, %5433
  %5437 = add nsw i64 %5432, -1
  %5438 = trunc i64 %5432 to i32
  %5439 = icmp sgt i32 %5438, 0
  br i1 %5439, label %5431, label %5440, !llvm.loop !1116

5440:                                             ; preds = %5431, %5422
  %5441 = phi i32 [ %5426, %5422 ], [ %5436, %5431 ]
  %5442 = and i64 %5391, 4294967295
  %5443 = getelementptr inbounds i32, ptr %6, i64 %5442
  %5444 = load i32, ptr %5443, align 4, !tbaa !6
  %5445 = mul nsw i32 %5444, %5441
  %5446 = add nsw i32 %5445, %5385
  %5447 = icmp sgt i64 %5383, 2
  %5448 = add nsw i64 %5384, -1
  %5449 = add i32 %5382, 1
  br i1 %5447, label %5381, label %5450, !llvm.loop !1117

5450:                                             ; preds = %5440, %5376
  %5451 = phi i32 [ %5380, %5376 ], [ %5446, %5440 ]
  %5452 = sext i32 %5451 to i64
  %5453 = getelementptr inbounds double, ptr %5038, i64 %5452
  %5454 = load double, ptr %5453, align 8, !tbaa !19
  %5455 = fcmp fast olt double %5454, 0.000000e+00
  %5456 = fneg fast double %5454
  %5457 = select nnan ninf i1 %5455, double %5456, double %5454
  %5458 = fmul fast double %5454, %5454
  %5459 = fmul fast double %5458, %5457
  %5460 = fadd fast double %5459, %5377
  store double %5460, ptr %5040, align 8, !tbaa !19
  %5461 = fadd fast double %5379, 1.000000e+00
  %5462 = add nuw nsw i32 %5378, 1
  br i1 %5370, label %5463, label %5510

5463:                                             ; preds = %5450
  %5464 = load i32, ptr %4, align 4, !tbaa !6
  %5465 = load i32, ptr %12, align 4, !tbaa !6
  %5466 = add nsw i32 %5465, -1
  %5467 = icmp slt i32 %5464, %5466
  br i1 %5467, label %5487, label %5468

5468:                                             ; preds = %5463
  %5469 = icmp eq i32 %5464, %5466
  br i1 %5469, label %5470, label %5503

5470:                                             ; preds = %5468
  store i32 0, ptr %4, align 4, !tbaa !6
  %5471 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5471, ptr %6, align 4, !tbaa !6
  br i1 %5375, label %5510, label %5472

5472:                                             ; preds = %5470, %5497
  %5473 = phi i64 [ %5501, %5497 ], [ 1, %5470 ]
  %5474 = getelementptr inbounds i32, ptr %4, i64 %5473
  %5475 = load i32, ptr %5474, align 4, !tbaa !6
  %5476 = getelementptr inbounds i32, ptr %12, i64 %5473
  %5477 = load i32, ptr %5476, align 4, !tbaa !6
  %5478 = add nsw i32 %5477, -1
  %5479 = icmp slt i32 %5475, %5478
  br i1 %5479, label %5480, label %5495

5480:                                             ; preds = %5472
  br i1 %5467, label %5487, label %5481

5481:                                             ; preds = %5480
  %5482 = getelementptr inbounds i32, ptr %7, i64 %5473
  %5483 = load i32, ptr %5482, align 4, !tbaa !6
  %5484 = getelementptr inbounds i32, ptr %6, i64 %5473
  %5485 = load i32, ptr %5484, align 4, !tbaa !6
  %5486 = add nsw i32 %5485, %5483
  store i32 %5486, ptr %5484, align 4, !tbaa !6
  br label %5505

5487:                                             ; preds = %5463, %5480
  %5488 = phi i32 [ %5475, %5480 ], [ %5464, %5463 ]
  %5489 = phi ptr [ %5474, %5480 ], [ %4, %5463 ]
  %5490 = phi i64 [ %5473, %5480 ], [ 0, %5463 ]
  %5491 = add nsw i32 %5488, 1
  store i32 %5491, ptr %5489, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %7, i64 %5490
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = getelementptr inbounds i32, ptr %6, i64 %5490
  br label %5505

5495:                                             ; preds = %5472
  %5496 = icmp eq i32 %5475, %5478
  br i1 %5496, label %5497, label %5503

5497:                                             ; preds = %5495
  store i32 0, ptr %5474, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %8, i64 %5473
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5473
  store i32 %5499, ptr %5500, align 4, !tbaa !6
  %5501 = add nuw nsw i64 %5473, 1
  %5502 = icmp eq i64 %5501, %5373
  br i1 %5502, label %5510, label %5472, !llvm.loop !1118

5503:                                             ; preds = %5468, %5495
  %5504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5505:                                             ; preds = %5481, %5487
  %5506 = phi ptr [ %5494, %5487 ], [ %5474, %5481 ]
  %5507 = phi i32 [ %5493, %5487 ], [ 1, %5481 ]
  %5508 = load i32, ptr %5506, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, %5507
  store i32 %5509, ptr %5506, align 4, !tbaa !6
  br label %5510

5510:                                             ; preds = %5497, %5505, %5470, %5450
  %5511 = icmp eq i32 %5462, %5
  br i1 %5511, label %5661, label %5376, !llvm.loop !1119

5512:                                             ; preds = %5359, %5651
  %5513 = phi double [ 0.000000e+00, %5359 ], [ %5599, %5651 ]
  %5514 = phi i32 [ 0, %5359 ], [ %5600, %5651 ]
  %5515 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5360, label %5516, label %5585

5516:                                             ; preds = %5512, %5575
  %5517 = phi i32 [ %5584, %5575 ], [ 0, %5512 ]
  %5518 = phi i64 [ %5526, %5575 ], [ %5364, %5512 ]
  %5519 = phi i64 [ %5583, %5575 ], [ %5363, %5512 ]
  %5520 = phi i32 [ %5581, %5575 ], [ %5515, %5512 ]
  %5521 = sub i32 %5362, %5517
  %5522 = tail call i32 @llvm.smin.i32(i32 %5521, i32 0)
  %5523 = sub i32 %5521, %5522
  %5524 = zext i32 %5523 to i64
  %5525 = add nuw nsw i64 %5524, 1
  %5526 = add nsw i64 %5518, -1
  %5527 = icmp ult i32 %5523, 31
  br i1 %5527, label %5563, label %5528

5528:                                             ; preds = %5516
  %5529 = and i64 %5525, 8589934560
  %5530 = sub i64 %5519, %5529
  br label %5531

5531:                                             ; preds = %5531, %5528
  %5532 = phi i64 [ 0, %5528 ], [ %5555, %5531 ]
  %5533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5551, %5531 ]
  %5534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5552, %5531 ]
  %5535 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5553, %5531 ]
  %5536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5554, %5531 ]
  %5537 = sub i64 %5519, %5532
  %5538 = getelementptr inbounds i32, ptr %11, i64 %5537
  %5539 = getelementptr inbounds i32, ptr %5538, i64 -7
  %5540 = load <8 x i32>, ptr %5539, align 4, !tbaa !6
  %5541 = shufflevector <8 x i32> %5540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5542 = getelementptr inbounds i32, ptr %5538, i64 -15
  %5543 = load <8 x i32>, ptr %5542, align 4, !tbaa !6
  %5544 = shufflevector <8 x i32> %5543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5545 = getelementptr inbounds i32, ptr %5538, i64 -23
  %5546 = load <8 x i32>, ptr %5545, align 4, !tbaa !6
  %5547 = shufflevector <8 x i32> %5546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5548 = getelementptr inbounds i32, ptr %5538, i64 -31
  %5549 = load <8 x i32>, ptr %5548, align 4, !tbaa !6
  %5550 = shufflevector <8 x i32> %5549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5551 = mul <8 x i32> %5541, %5533
  %5552 = mul <8 x i32> %5544, %5534
  %5553 = mul <8 x i32> %5547, %5535
  %5554 = mul <8 x i32> %5550, %5536
  %5555 = add nuw i64 %5532, 32
  %5556 = icmp eq i64 %5555, %5529
  br i1 %5556, label %5557, label %5531, !llvm.loop !1120

5557:                                             ; preds = %5531
  %5558 = mul <8 x i32> %5552, %5551
  %5559 = mul <8 x i32> %5553, %5558
  %5560 = mul <8 x i32> %5554, %5559
  %5561 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5560)
  %5562 = icmp eq i64 %5525, %5529
  br i1 %5562, label %5575, label %5563

5563:                                             ; preds = %5516, %5557
  %5564 = phi i64 [ %5519, %5516 ], [ %5530, %5557 ]
  %5565 = phi i32 [ 1, %5516 ], [ %5561, %5557 ]
  br label %5566

5566:                                             ; preds = %5563, %5566
  %5567 = phi i64 [ %5572, %5566 ], [ %5564, %5563 ]
  %5568 = phi i32 [ %5571, %5566 ], [ %5565, %5563 ]
  %5569 = getelementptr inbounds i32, ptr %11, i64 %5567
  %5570 = load i32, ptr %5569, align 4, !tbaa !6
  %5571 = mul nsw i32 %5570, %5568
  %5572 = add nsw i64 %5567, -1
  %5573 = trunc i64 %5567 to i32
  %5574 = icmp sgt i32 %5573, 0
  br i1 %5574, label %5566, label %5575, !llvm.loop !1121

5575:                                             ; preds = %5566, %5557
  %5576 = phi i32 [ %5561, %5557 ], [ %5571, %5566 ]
  %5577 = and i64 %5526, 4294967295
  %5578 = getelementptr inbounds i32, ptr %6, i64 %5577
  %5579 = load i32, ptr %5578, align 4, !tbaa !6
  %5580 = mul nsw i32 %5579, %5576
  %5581 = add nsw i32 %5580, %5520
  %5582 = icmp sgt i64 %5518, 2
  %5583 = add nsw i64 %5519, -1
  %5584 = add i32 %5517, 1
  br i1 %5582, label %5516, label %5585, !llvm.loop !1122

5585:                                             ; preds = %5575, %5512
  %5586 = phi i32 [ %5515, %5512 ], [ %5581, %5575 ]
  %5587 = icmp slt i32 %5586, %5
  br i1 %5587, label %5590, label %5588

5588:                                             ; preds = %5585
  %5589 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

5590:                                             ; preds = %5585
  %5591 = sext i32 %5586 to i64
  %5592 = getelementptr inbounds double, ptr %5038, i64 %5591
  %5593 = load double, ptr %5592, align 8, !tbaa !19
  %5594 = fcmp fast olt double %5593, 0.000000e+00
  %5595 = fneg fast double %5593
  %5596 = select nnan ninf i1 %5594, double %5595, double %5593
  %5597 = fmul fast double %5593, %5593
  %5598 = fmul fast double %5597, %5596
  %5599 = fadd fast double %5598, %5513
  store double %5599, ptr %5040, align 8, !tbaa !19
  %5600 = add nuw nsw i32 %5514, 1
  br i1 %5361, label %5601, label %5651

5601:                                             ; preds = %5590
  %5602 = load i32, ptr %4, align 4, !tbaa !6
  %5603 = load i32, ptr %12, align 4, !tbaa !6
  %5604 = add nsw i32 %5603, -1
  %5605 = icmp slt i32 %5602, %5604
  br i1 %5605, label %5628, label %5606

5606:                                             ; preds = %5601
  %5607 = icmp eq i32 %5602, %5604
  br i1 %5607, label %5608, label %5644

5608:                                             ; preds = %5606
  store i32 0, ptr %4, align 4, !tbaa !6
  %5609 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5609, ptr %6, align 4, !tbaa !6
  br i1 %5366, label %5651, label %5610

5610:                                             ; preds = %5608, %5638
  %5611 = phi i64 [ %5642, %5638 ], [ 1, %5608 ]
  %5612 = getelementptr inbounds i32, ptr %4, i64 %5611
  %5613 = load i32, ptr %5612, align 4, !tbaa !6
  %5614 = getelementptr inbounds i32, ptr %12, i64 %5611
  %5615 = load i32, ptr %5614, align 4, !tbaa !6
  %5616 = add nsw i32 %5615, -1
  %5617 = icmp slt i32 %5613, %5616
  br i1 %5617, label %5618, label %5636

5618:                                             ; preds = %5610
  br i1 %5605, label %5628, label %5619

5619:                                             ; preds = %5618
  %5620 = shl i64 %5611, 32
  %5621 = add i64 %5620, -4294967296
  %5622 = ashr exact i64 %5621, 32
  %5623 = getelementptr inbounds i32, ptr %7, i64 %5622
  %5624 = load i32, ptr %5623, align 4, !tbaa !6
  %5625 = getelementptr inbounds i32, ptr %6, i64 %5611
  %5626 = load i32, ptr %5625, align 4, !tbaa !6
  %5627 = add nsw i32 %5626, %5624
  store i32 %5627, ptr %5625, align 4, !tbaa !6
  br label %5646

5628:                                             ; preds = %5601, %5618
  %5629 = phi i32 [ %5613, %5618 ], [ %5602, %5601 ]
  %5630 = phi ptr [ %5612, %5618 ], [ %4, %5601 ]
  %5631 = phi i64 [ %5611, %5618 ], [ 0, %5601 ]
  %5632 = add nsw i32 %5629, 1
  store i32 %5632, ptr %5630, align 4, !tbaa !6
  %5633 = getelementptr inbounds i32, ptr %7, i64 %5631
  %5634 = load i32, ptr %5633, align 4, !tbaa !6
  %5635 = getelementptr inbounds i32, ptr %6, i64 %5631
  br label %5646

5636:                                             ; preds = %5610
  %5637 = icmp eq i32 %5613, %5616
  br i1 %5637, label %5638, label %5644

5638:                                             ; preds = %5636
  store i32 0, ptr %5612, align 4, !tbaa !6
  %5639 = getelementptr inbounds i32, ptr %8, i64 %5611
  %5640 = load i32, ptr %5639, align 4, !tbaa !6
  %5641 = getelementptr inbounds i32, ptr %6, i64 %5611
  store i32 %5640, ptr %5641, align 4, !tbaa !6
  %5642 = add nuw nsw i64 %5611, 1
  %5643 = icmp eq i64 %5642, %5364
  br i1 %5643, label %5651, label %5610, !llvm.loop !1123

5644:                                             ; preds = %5606, %5636
  %5645 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5646:                                             ; preds = %5619, %5628
  %5647 = phi ptr [ %5635, %5628 ], [ %5612, %5619 ]
  %5648 = phi i32 [ %5634, %5628 ], [ 1, %5619 ]
  %5649 = load i32, ptr %5647, align 4, !tbaa !6
  %5650 = add nsw i32 %5649, %5648
  store i32 %5650, ptr %5647, align 4, !tbaa !6
  br label %5651

5651:                                             ; preds = %5638, %5646, %5608, %5590
  %5652 = icmp eq i32 %5600, %5
  br i1 %5652, label %5661, label %5512, !llvm.loop !1124

5653:                                             ; preds = %5049
  %5654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

5655:                                             ; preds = %2076
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  br label %5661

5656:                                             ; preds = %2381
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  br label %5661

5657:                                             ; preds = %3336
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  br label %5661

5658:                                             ; preds = %3641
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  br label %5661

5659:                                             ; preds = %4585
  store float %4535, ptr %4410, align 4, !tbaa !163
  br label %5661

5660:                                             ; preds = %4890
  store float %4840, ptr %4410, align 4, !tbaa !163
  br label %5661

5661:                                             ; preds = %5651, %5510, %5351, %5210, %5032, %4730, %4402, %4261, %4102, %3961, %3783, %3481, %3153, %3011, %2851, %2706, %2523, %2221, %1893, %1751, %1591, %1446, %1263, %1121, %961, %816, %633, %494, %337, %198, %5358, %5367, %5055, %5064, %4737, %4746, %5660, %4426, %4435, %5659, %4109, %4118, %3806, %3815, %3488, %3497, %5658, %3177, %3186, %5657, %2858, %2867, %2547, %2556, %2228, %2237, %5656, %1917, %1926, %5655, %1598, %1607, %1287, %1296, %968, %977, %657, %666, %344, %353, %39, %48, %5042, %5653, %4412, %5034, %3793, %4404, %3163, %3785, %2533, %3155, %1903, %2525, %1273, %1895, %643, %1265, %28, %635, %18
  %5662 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1265 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1895 ], [ 0.000000e+00, %1273 ], [ 0.000000e+00, %2525 ], [ 0.000000e+00, %1903 ], [ 0.000000e+00, %3155 ], [ 0.000000e+00, %2533 ], [ 0.000000e+00, %3785 ], [ 0.000000e+00, %3163 ], [ 0.000000e+00, %4404 ], [ 0.000000e+00, %3793 ], [ 0.000000e+00, %5034 ], [ 0.000000e+00, %4412 ], [ 0.000000e+00, %5653 ], [ 0.000000e+00, %5042 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %666 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %977 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %1296 ], [ 0.000000e+00, %1287 ], [ 0.000000e+00, %1607 ], [ 0.000000e+00, %1598 ], [ %2027, %5655 ], [ 0.000000e+00, %1926 ], [ 0.000000e+00, %1917 ], [ %2332, %5656 ], [ 0.000000e+00, %2237 ], [ 0.000000e+00, %2228 ], [ 0.000000e+00, %2556 ], [ 0.000000e+00, %2547 ], [ 0.000000e+00, %2867 ], [ 0.000000e+00, %2858 ], [ %3287, %5657 ], [ 0.000000e+00, %3186 ], [ 0.000000e+00, %3177 ], [ %3592, %5658 ], [ 0.000000e+00, %3497 ], [ 0.000000e+00, %3488 ], [ 0.000000e+00, %3815 ], [ 0.000000e+00, %3806 ], [ 0.000000e+00, %4118 ], [ 0.000000e+00, %4109 ], [ %4536, %5659 ], [ 0.000000e+00, %4435 ], [ 0.000000e+00, %4426 ], [ %4841, %5660 ], [ 0.000000e+00, %4746 ], [ 0.000000e+00, %4737 ], [ 0.000000e+00, %5064 ], [ 0.000000e+00, %5055 ], [ 0.000000e+00, %5367 ], [ 0.000000e+00, %5358 ], [ %149, %198 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %767, %816 ], [ 0.000000e+00, %961 ], [ %1072, %1121 ], [ 0.000000e+00, %1263 ], [ %1397, %1446 ], [ 0.000000e+00, %1591 ], [ %1702, %1751 ], [ 0.000000e+00, %1893 ], [ 0.000000e+00, %2221 ], [ 0.000000e+00, %2523 ], [ %2657, %2706 ], [ 0.000000e+00, %2851 ], [ %2962, %3011 ], [ 0.000000e+00, %3153 ], [ 0.000000e+00, %3481 ], [ 0.000000e+00, %3783 ], [ %3912, %3961 ], [ 0.000000e+00, %4102 ], [ %4212, %4261 ], [ 0.000000e+00, %4402 ], [ 0.000000e+00, %4730 ], [ 0.000000e+00, %5032 ], [ %5161, %5210 ], [ 0.000000e+00, %5351 ], [ %5461, %5510 ], [ 0.000000e+00, %5651 ]
  %5663 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1265 ], [ 1, %643 ], [ 1, %1895 ], [ 1, %1273 ], [ 1, %2525 ], [ 1, %1903 ], [ 1, %3155 ], [ 1, %2533 ], [ 1, %3785 ], [ 1, %3163 ], [ 1, %4404 ], [ 1, %3793 ], [ 1, %5034 ], [ 1, %4412 ], [ 1, %5653 ], [ 1, %5042 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %666 ], [ 1, %657 ], [ 1, %977 ], [ 1, %968 ], [ 1, %1296 ], [ 1, %1287 ], [ 1, %1607 ], [ 1, %1598 ], [ %1933, %5655 ], [ 1, %1926 ], [ 1, %1917 ], [ %2244, %5656 ], [ 1, %2237 ], [ 1, %2228 ], [ 1, %2556 ], [ 1, %2547 ], [ 1, %2867 ], [ 1, %2858 ], [ %3193, %5657 ], [ 1, %3186 ], [ 1, %3177 ], [ %3504, %5658 ], [ 1, %3497 ], [ 1, %3488 ], [ 1, %3815 ], [ 1, %3806 ], [ 1, %4118 ], [ 1, %4109 ], [ %4442, %5659 ], [ 1, %4435 ], [ 1, %4426 ], [ %4753, %5660 ], [ 1, %4746 ], [ 1, %4737 ], [ 1, %5064 ], [ 1, %5055 ], [ 1, %5367 ], [ 1, %5358 ], [ %55, %198 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %673, %816 ], [ %664, %961 ], [ %984, %1121 ], [ %975, %1263 ], [ %1303, %1446 ], [ %1294, %1591 ], [ %1614, %1751 ], [ %1605, %1893 ], [ %1924, %2221 ], [ %2235, %2523 ], [ %2563, %2706 ], [ %2554, %2851 ], [ %2874, %3011 ], [ %2865, %3153 ], [ %3184, %3481 ], [ %3495, %3783 ], [ %3822, %3961 ], [ %3813, %4102 ], [ %4125, %4261 ], [ %4116, %4402 ], [ %4433, %4730 ], [ %4744, %5032 ], [ %5071, %5210 ], [ %5062, %5351 ], [ %5374, %5510 ], [ %5365, %5651 ]
  %5664 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5663, ptr noundef nonnull @.str.5) #3
  %5665 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5662, ptr noundef nonnull @.str.6) #3
  br label %5666

5666:                                             ; preds = %5203, %5288, %5344, %5503, %5588, %5644, %4578, %4663, %4723, %4883, %4968, %5025, %3954, %4039, %4095, %4254, %4339, %4395, %3329, %3414, %3474, %3634, %3719, %3776, %2699, %2783, %2844, %3004, %3088, %3146, %2069, %2154, %2214, %2374, %2459, %2516, %1439, %1523, %1584, %1744, %1828, %1886, %809, %893, %954, %1114, %1198, %1256, %191, %275, %330, %487, %571, %626, %5661
  %5667 = phi i32 [ 0, %5661 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1256 ], [ -1, %1198 ], [ -1, %1114 ], [ -1, %954 ], [ -1, %893 ], [ -1, %809 ], [ -1, %1886 ], [ -1, %1828 ], [ -1, %1744 ], [ -1, %1584 ], [ -1, %1523 ], [ -1, %1439 ], [ -1, %2516 ], [ -1, %2459 ], [ -1, %2374 ], [ -1, %2214 ], [ -1, %2154 ], [ -1, %2069 ], [ -1, %3146 ], [ -1, %3088 ], [ -1, %3004 ], [ -1, %2844 ], [ -1, %2783 ], [ -1, %2699 ], [ -1, %3776 ], [ -1, %3719 ], [ -1, %3634 ], [ -1, %3474 ], [ -1, %3414 ], [ -1, %3329 ], [ -1, %4395 ], [ -1, %4339 ], [ -1, %4254 ], [ -1, %4095 ], [ -1, %4039 ], [ -1, %3954 ], [ -1, %5025 ], [ -1, %4968 ], [ -1, %4883 ], [ -1, %4723 ], [ -1, %4663 ], [ -1, %4578 ], [ -1, %5644 ], [ -1, %5588 ], [ -1, %5503 ], [ -1, %5344 ], [ -1, %5288 ], [ -1, %5203 ]
  ret i32 %5667
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5666 [
    i32 101, label %22
    i32 102, label %637
    i32 103, label %1267
    i32 104, label %1897
    i32 105, label %2527
    i32 106, label %3157
    i32 107, label %3787
    i32 108, label %4411
    i32 109, label %5036
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !163
  %30 = fptoui float %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5666

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5666

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %5666

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !1125

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !1126

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !1127

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds float, ptr %24, i64 %132
  %136 = load float, ptr %135, align 4, !tbaa !163
  %137 = fptoui float %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %139
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !1128

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %5666, label %57, !llvm.loop !1129

200:                                              ; preds = %40, %337
  %201 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !1130

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !1131

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !1132

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = sext i32 %273 to i64
  %280 = getelementptr inbounds float, ptr %24, i64 %279
  %281 = load float, ptr %280, align 4, !tbaa !163
  %282 = fptoui float %281 to i8
  %283 = mul i8 %282, %282
  %284 = mul i8 %283, %282
  %285 = add i8 %284, %278
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %201, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %277
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !1133

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %277
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %5666, label %200, !llvm.loop !1134

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %5666

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %5666

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !1135

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !1136

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !1137

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = load i8, ptr %26, align 1, !tbaa !12
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds float, ptr %24, i64 %438
  %440 = load float, ptr %439, align 4, !tbaa !163
  %441 = fptoui float %440 to i8
  %442 = mul i8 %441, %441
  %443 = mul i8 %442, %441
  %444 = add i8 %443, %437
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !1138

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %5666, label %362, !llvm.loop !1139

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !1140

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !1141

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !1142

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

573:                                              ; preds = %568
  %574 = load i8, ptr %26, align 1, !tbaa !12
  %575 = sext i32 %569 to i64
  %576 = getelementptr inbounds float, ptr %24, i64 %575
  %577 = load float, ptr %576, align 4, !tbaa !163
  %578 = fptoui float %577 to i8
  %579 = mul i8 %578, %578
  %580 = mul i8 %579, %578
  %581 = add i8 %580, %574
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !1143

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %5666, label %496, !llvm.loop !1144

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %651

643:                                              ; preds = %637
  %644 = load float, ptr %639, align 4, !tbaa !163
  %645 = fptosi float %644 to i32
  %646 = icmp slt i32 %645, 0
  %647 = mul nsw i32 %645, %645
  %648 = sub nsw i32 0, %647
  %649 = select i1 %646, i32 %648, i32 %647
  %650 = mul i32 %649, %645
  store i32 %650, ptr %641, align 4, !tbaa !6
  br label %5666

651:                                              ; preds = %637
  switch i32 %1, label %1265 [
    i32 1, label %652
    i32 0, label %963
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !6
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %5666

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %818

666:                                              ; preds = %652
  br i1 %656, label %667, label %5666

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %816
  %676 = phi i32 [ 0, %667 ], [ %768, %816 ]
  %677 = phi double [ 0.000000e+00, %667 ], [ %767, %816 ]
  %678 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %668, label %679, label %748

679:                                              ; preds = %675, %738
  %680 = phi i32 [ %747, %738 ], [ 0, %675 ]
  %681 = phi i64 [ %689, %738 ], [ %672, %675 ]
  %682 = phi i64 [ %746, %738 ], [ %671, %675 ]
  %683 = phi i32 [ %744, %738 ], [ %678, %675 ]
  %684 = sub i32 %670, %680
  %685 = tail call i32 @llvm.smin.i32(i32 %684, i32 0)
  %686 = sub i32 %684, %685
  %687 = zext i32 %686 to i64
  %688 = add nuw nsw i64 %687, 1
  %689 = add nsw i64 %681, -1
  %690 = icmp ult i32 %686, 31
  br i1 %690, label %726, label %691

691:                                              ; preds = %679
  %692 = and i64 %688, 8589934560
  %693 = sub i64 %682, %692
  br label %694

694:                                              ; preds = %694, %691
  %695 = phi i64 [ 0, %691 ], [ %718, %694 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %714, %694 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %715, %694 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %716, %694 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %717, %694 ]
  %700 = sub i64 %682, %695
  %701 = getelementptr inbounds i32, ptr %9, i64 %700
  %702 = getelementptr inbounds i32, ptr %701, i64 -7
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = getelementptr inbounds i32, ptr %701, i64 -15
  %706 = load <8 x i32>, ptr %705, align 4, !tbaa !6
  %707 = shufflevector <8 x i32> %706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %708 = getelementptr inbounds i32, ptr %701, i64 -23
  %709 = load <8 x i32>, ptr %708, align 4, !tbaa !6
  %710 = shufflevector <8 x i32> %709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %711 = getelementptr inbounds i32, ptr %701, i64 -31
  %712 = load <8 x i32>, ptr %711, align 4, !tbaa !6
  %713 = shufflevector <8 x i32> %712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %714 = mul <8 x i32> %704, %696
  %715 = mul <8 x i32> %707, %697
  %716 = mul <8 x i32> %710, %698
  %717 = mul <8 x i32> %713, %699
  %718 = add nuw i64 %695, 32
  %719 = icmp eq i64 %718, %692
  br i1 %719, label %720, label %694, !llvm.loop !1145

720:                                              ; preds = %694
  %721 = mul <8 x i32> %715, %714
  %722 = mul <8 x i32> %716, %721
  %723 = mul <8 x i32> %717, %722
  %724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %723)
  %725 = icmp eq i64 %688, %692
  br i1 %725, label %738, label %726

726:                                              ; preds = %679, %720
  %727 = phi i64 [ %682, %679 ], [ %693, %720 ]
  %728 = phi i32 [ 1, %679 ], [ %724, %720 ]
  br label %729

729:                                              ; preds = %726, %729
  %730 = phi i64 [ %735, %729 ], [ %727, %726 ]
  %731 = phi i32 [ %734, %729 ], [ %728, %726 ]
  %732 = getelementptr inbounds i32, ptr %9, i64 %730
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %731
  %735 = add nsw i64 %730, -1
  %736 = trunc i64 %730 to i32
  %737 = icmp sgt i32 %736, 0
  br i1 %737, label %729, label %738, !llvm.loop !1146

738:                                              ; preds = %729, %720
  %739 = phi i32 [ %724, %720 ], [ %734, %729 ]
  %740 = and i64 %689, 4294967295
  %741 = getelementptr inbounds i32, ptr %6, i64 %740
  %742 = load i32, ptr %741, align 4, !tbaa !6
  %743 = mul nsw i32 %742, %739
  %744 = add nsw i32 %743, %683
  %745 = icmp sgt i64 %681, 2
  %746 = add nsw i64 %682, -1
  %747 = add i32 %680, 1
  br i1 %745, label %679, label %748, !llvm.loop !1147

748:                                              ; preds = %738, %675
  %749 = phi i32 [ %678, %675 ], [ %744, %738 ]
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds double, ptr %2, i64 %750
  %752 = load double, ptr %751, align 8, !tbaa !19
  %753 = getelementptr inbounds float, ptr %639, i64 %750
  %754 = load float, ptr %753, align 4, !tbaa !163
  %755 = fptosi float %754 to i32
  %756 = load i32, ptr %641, align 4, !tbaa !6
  %757 = sitofp i32 %756 to double
  %758 = sitofp i32 %755 to double
  %759 = fmul fast double %752, %758
  %760 = fcmp fast olt double %759, 0.000000e+00
  %761 = fneg fast double %759
  %762 = select nnan ninf i1 %760, double %761, double %759
  %763 = fmul fast double %759, %759
  %764 = fmul fast double %763, %762
  %765 = fadd fast double %764, %757
  %766 = fptosi double %765 to i32
  store i32 %766, ptr %641, align 4, !tbaa !6
  %767 = fadd fast double %752, %677
  %768 = add nuw nsw i32 %676, 1
  br i1 %669, label %769, label %816

769:                                              ; preds = %748
  %770 = load i32, ptr %4, align 4, !tbaa !6
  %771 = load i32, ptr %12, align 4, !tbaa !6
  %772 = add nsw i32 %771, -1
  %773 = icmp slt i32 %770, %772
  br i1 %773, label %793, label %774

774:                                              ; preds = %769
  %775 = icmp eq i32 %770, %772
  br i1 %775, label %776, label %809

776:                                              ; preds = %774
  store i32 0, ptr %4, align 4, !tbaa !6
  %777 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %777, ptr %6, align 4, !tbaa !6
  br i1 %674, label %816, label %778

778:                                              ; preds = %776, %803
  %779 = phi i64 [ %807, %803 ], [ 1, %776 ]
  %780 = getelementptr inbounds i32, ptr %4, i64 %779
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = getelementptr inbounds i32, ptr %12, i64 %779
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = add nsw i32 %783, -1
  %785 = icmp slt i32 %781, %784
  br i1 %785, label %786, label %801

786:                                              ; preds = %778
  br i1 %773, label %793, label %787

787:                                              ; preds = %786
  %788 = getelementptr inbounds i32, ptr %7, i64 %779
  %789 = load i32, ptr %788, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %6, i64 %779
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = add nsw i32 %791, %789
  store i32 %792, ptr %790, align 4, !tbaa !6
  br label %811

793:                                              ; preds = %769, %786
  %794 = phi i32 [ %781, %786 ], [ %770, %769 ]
  %795 = phi ptr [ %780, %786 ], [ %4, %769 ]
  %796 = phi i64 [ %779, %786 ], [ 0, %769 ]
  %797 = add nsw i32 %794, 1
  store i32 %797, ptr %795, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %7, i64 %796
  %799 = load i32, ptr %798, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %6, i64 %796
  br label %811

801:                                              ; preds = %778
  %802 = icmp eq i32 %781, %784
  br i1 %802, label %803, label %809

803:                                              ; preds = %801
  store i32 0, ptr %780, align 4, !tbaa !6
  %804 = getelementptr inbounds i32, ptr %8, i64 %779
  %805 = load i32, ptr %804, align 4, !tbaa !6
  %806 = getelementptr inbounds i32, ptr %6, i64 %779
  store i32 %805, ptr %806, align 4, !tbaa !6
  %807 = add nuw nsw i64 %779, 1
  %808 = icmp eq i64 %807, %672
  br i1 %808, label %816, label %778, !llvm.loop !1148

809:                                              ; preds = %774, %801
  %810 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

811:                                              ; preds = %787, %793
  %812 = phi ptr [ %800, %793 ], [ %780, %787 ]
  %813 = phi i32 [ %799, %793 ], [ 1, %787 ]
  %814 = load i32, ptr %812, align 4, !tbaa !6
  %815 = add nsw i32 %814, %813
  store i32 %815, ptr %812, align 4, !tbaa !6
  br label %816

816:                                              ; preds = %803, %811, %776, %748
  %817 = icmp eq i32 %768, %5
  br i1 %817, label %5666, label %675, !llvm.loop !1149

818:                                              ; preds = %658, %961
  %819 = phi i32 [ 0, %658 ], [ %910, %961 ]
  %820 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %821, label %890

821:                                              ; preds = %818, %880
  %822 = phi i32 [ %889, %880 ], [ 0, %818 ]
  %823 = phi i64 [ %831, %880 ], [ %663, %818 ]
  %824 = phi i64 [ %888, %880 ], [ %662, %818 ]
  %825 = phi i32 [ %886, %880 ], [ %820, %818 ]
  %826 = sub i32 %661, %822
  %827 = tail call i32 @llvm.smin.i32(i32 %826, i32 0)
  %828 = sub i32 %826, %827
  %829 = zext i32 %828 to i64
  %830 = add nuw nsw i64 %829, 1
  %831 = add nsw i64 %823, -1
  %832 = icmp ult i32 %828, 31
  br i1 %832, label %868, label %833

833:                                              ; preds = %821
  %834 = and i64 %830, 8589934560
  %835 = sub i64 %824, %834
  br label %836

836:                                              ; preds = %836, %833
  %837 = phi i64 [ 0, %833 ], [ %860, %836 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %856, %836 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %857, %836 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %858, %836 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %859, %836 ]
  %842 = sub i64 %824, %837
  %843 = getelementptr inbounds i32, ptr %11, i64 %842
  %844 = getelementptr inbounds i32, ptr %843, i64 -7
  %845 = load <8 x i32>, ptr %844, align 4, !tbaa !6
  %846 = shufflevector <8 x i32> %845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %847 = getelementptr inbounds i32, ptr %843, i64 -15
  %848 = load <8 x i32>, ptr %847, align 4, !tbaa !6
  %849 = shufflevector <8 x i32> %848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %850 = getelementptr inbounds i32, ptr %843, i64 -23
  %851 = load <8 x i32>, ptr %850, align 4, !tbaa !6
  %852 = shufflevector <8 x i32> %851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %853 = getelementptr inbounds i32, ptr %843, i64 -31
  %854 = load <8 x i32>, ptr %853, align 4, !tbaa !6
  %855 = shufflevector <8 x i32> %854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %856 = mul <8 x i32> %846, %838
  %857 = mul <8 x i32> %849, %839
  %858 = mul <8 x i32> %852, %840
  %859 = mul <8 x i32> %855, %841
  %860 = add nuw i64 %837, 32
  %861 = icmp eq i64 %860, %834
  br i1 %861, label %862, label %836, !llvm.loop !1150

862:                                              ; preds = %836
  %863 = mul <8 x i32> %857, %856
  %864 = mul <8 x i32> %858, %863
  %865 = mul <8 x i32> %859, %864
  %866 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %865)
  %867 = icmp eq i64 %830, %834
  br i1 %867, label %880, label %868

868:                                              ; preds = %821, %862
  %869 = phi i64 [ %824, %821 ], [ %835, %862 ]
  %870 = phi i32 [ 1, %821 ], [ %866, %862 ]
  br label %871

871:                                              ; preds = %868, %871
  %872 = phi i64 [ %877, %871 ], [ %869, %868 ]
  %873 = phi i32 [ %876, %871 ], [ %870, %868 ]
  %874 = getelementptr inbounds i32, ptr %11, i64 %872
  %875 = load i32, ptr %874, align 4, !tbaa !6
  %876 = mul nsw i32 %875, %873
  %877 = add nsw i64 %872, -1
  %878 = trunc i64 %872 to i32
  %879 = icmp sgt i32 %878, 0
  br i1 %879, label %871, label %880, !llvm.loop !1151

880:                                              ; preds = %871, %862
  %881 = phi i32 [ %866, %862 ], [ %876, %871 ]
  %882 = and i64 %831, 4294967295
  %883 = getelementptr inbounds i32, ptr %6, i64 %882
  %884 = load i32, ptr %883, align 4, !tbaa !6
  %885 = mul nsw i32 %884, %881
  %886 = add nsw i32 %885, %825
  %887 = icmp sgt i64 %823, 2
  %888 = add nsw i64 %824, -1
  %889 = add i32 %822, 1
  br i1 %887, label %821, label %890, !llvm.loop !1152

890:                                              ; preds = %880, %818
  %891 = phi i32 [ %820, %818 ], [ %886, %880 ]
  %892 = icmp slt i32 %891, %5
  br i1 %892, label %895, label %893

893:                                              ; preds = %890
  %894 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

895:                                              ; preds = %890
  %896 = sext i32 %891 to i64
  %897 = getelementptr inbounds float, ptr %639, i64 %896
  %898 = load float, ptr %897, align 4, !tbaa !163
  %899 = fptosi float %898 to i32
  %900 = load i32, ptr %641, align 4, !tbaa !6
  %901 = sitofp i32 %900 to double
  %902 = sitofp i32 %899 to double
  %903 = icmp slt i32 %899, 0
  %904 = fneg fast double %902
  %905 = select i1 %903, double %904, double %902
  %906 = fmul fast double %902, %902
  %907 = fmul fast double %906, %905
  %908 = fadd fast double %907, %901
  %909 = fptosi double %908 to i32
  store i32 %909, ptr %641, align 4, !tbaa !6
  %910 = add nuw nsw i32 %819, 1
  br i1 %660, label %911, label %961

911:                                              ; preds = %895
  %912 = load i32, ptr %4, align 4, !tbaa !6
  %913 = load i32, ptr %12, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %912, %914
  br i1 %915, label %938, label %916

916:                                              ; preds = %911
  %917 = icmp eq i32 %912, %914
  br i1 %917, label %918, label %954

918:                                              ; preds = %916
  store i32 0, ptr %4, align 4, !tbaa !6
  %919 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %919, ptr %6, align 4, !tbaa !6
  br i1 %665, label %961, label %920

920:                                              ; preds = %918, %948
  %921 = phi i64 [ %952, %948 ], [ 1, %918 ]
  %922 = getelementptr inbounds i32, ptr %4, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %12, i64 %921
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, -1
  %927 = icmp slt i32 %923, %926
  br i1 %927, label %928, label %946

928:                                              ; preds = %920
  br i1 %915, label %938, label %929

929:                                              ; preds = %928
  %930 = shl i64 %921, 32
  %931 = add i64 %930, -4294967296
  %932 = ashr exact i64 %931, 32
  %933 = getelementptr inbounds i32, ptr %7, i64 %932
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %921
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = add nsw i32 %936, %934
  store i32 %937, ptr %935, align 4, !tbaa !6
  br label %956

938:                                              ; preds = %911, %928
  %939 = phi i32 [ %923, %928 ], [ %912, %911 ]
  %940 = phi ptr [ %922, %928 ], [ %4, %911 ]
  %941 = phi i64 [ %921, %928 ], [ 0, %911 ]
  %942 = add nsw i32 %939, 1
  store i32 %942, ptr %940, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %7, i64 %941
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %6, i64 %941
  br label %956

946:                                              ; preds = %920
  %947 = icmp eq i32 %923, %926
  br i1 %947, label %948, label %954

948:                                              ; preds = %946
  store i32 0, ptr %922, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %8, i64 %921
  %950 = load i32, ptr %949, align 4, !tbaa !6
  %951 = getelementptr inbounds i32, ptr %6, i64 %921
  store i32 %950, ptr %951, align 4, !tbaa !6
  %952 = add nuw nsw i64 %921, 1
  %953 = icmp eq i64 %952, %663
  br i1 %953, label %961, label %920, !llvm.loop !1153

954:                                              ; preds = %916, %946
  %955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

956:                                              ; preds = %929, %938
  %957 = phi ptr [ %945, %938 ], [ %922, %929 ]
  %958 = phi i32 [ %944, %938 ], [ 1, %929 ]
  %959 = load i32, ptr %957, align 4, !tbaa !6
  %960 = add nsw i32 %959, %958
  store i32 %960, ptr %957, align 4, !tbaa !6
  br label %961

961:                                              ; preds = %948, %956, %918, %895
  %962 = icmp eq i32 %910, %5
  br i1 %962, label %5666, label %818, !llvm.loop !1154

963:                                              ; preds = %651
  %964 = getelementptr inbounds i32, ptr %3, i64 %19
  %965 = load i32, ptr %964, align 4, !tbaa !6
  %966 = icmp eq i32 %965, 0
  %967 = icmp sgt i32 %5, 0
  br i1 %966, label %977, label %968

968:                                              ; preds = %963
  br i1 %967, label %969, label %5666

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %1123

977:                                              ; preds = %963
  br i1 %967, label %978, label %5666

978:                                              ; preds = %977
  %979 = icmp sgt i32 %13, 1
  %980 = icmp sgt i32 %13, 0
  %981 = add i32 %13, -2
  %982 = zext i32 %981 to i64
  %983 = zext i32 %13 to i64
  %984 = add nuw i32 %5, 1
  %985 = icmp eq i32 %13, 1
  br label %986

986:                                              ; preds = %978, %1121
  %987 = phi i32 [ 0, %978 ], [ %1073, %1121 ]
  %988 = phi double [ 0.000000e+00, %978 ], [ %1072, %1121 ]
  %989 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %979, label %990, label %1059

990:                                              ; preds = %986, %1049
  %991 = phi i32 [ %1058, %1049 ], [ 0, %986 ]
  %992 = phi i64 [ %1000, %1049 ], [ %983, %986 ]
  %993 = phi i64 [ %1057, %1049 ], [ %982, %986 ]
  %994 = phi i32 [ %1055, %1049 ], [ %989, %986 ]
  %995 = sub i32 %981, %991
  %996 = tail call i32 @llvm.smin.i32(i32 %995, i32 0)
  %997 = sub i32 %995, %996
  %998 = zext i32 %997 to i64
  %999 = add nuw nsw i64 %998, 1
  %1000 = add nsw i64 %992, -1
  %1001 = icmp ult i32 %997, 31
  br i1 %1001, label %1037, label %1002

1002:                                             ; preds = %990
  %1003 = and i64 %999, 8589934560
  %1004 = sub i64 %993, %1003
  br label %1005

1005:                                             ; preds = %1005, %1002
  %1006 = phi i64 [ 0, %1002 ], [ %1029, %1005 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1025, %1005 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1026, %1005 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1027, %1005 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1028, %1005 ]
  %1011 = sub i64 %993, %1006
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1013 = getelementptr inbounds i32, ptr %1012, i64 -7
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = getelementptr inbounds i32, ptr %1012, i64 -15
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !6
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1012, i64 -23
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !6
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1012, i64 -31
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !6
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = mul <8 x i32> %1015, %1007
  %1026 = mul <8 x i32> %1018, %1008
  %1027 = mul <8 x i32> %1021, %1009
  %1028 = mul <8 x i32> %1024, %1010
  %1029 = add nuw i64 %1006, 32
  %1030 = icmp eq i64 %1029, %1003
  br i1 %1030, label %1031, label %1005, !llvm.loop !1155

1031:                                             ; preds = %1005
  %1032 = mul <8 x i32> %1026, %1025
  %1033 = mul <8 x i32> %1027, %1032
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1034)
  %1036 = icmp eq i64 %999, %1003
  br i1 %1036, label %1049, label %1037

1037:                                             ; preds = %990, %1031
  %1038 = phi i64 [ %993, %990 ], [ %1004, %1031 ]
  %1039 = phi i32 [ 1, %990 ], [ %1035, %1031 ]
  br label %1040

1040:                                             ; preds = %1037, %1040
  %1041 = phi i64 [ %1046, %1040 ], [ %1038, %1037 ]
  %1042 = phi i32 [ %1045, %1040 ], [ %1039, %1037 ]
  %1043 = getelementptr inbounds i32, ptr %9, i64 %1041
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1042
  %1046 = add nsw i64 %1041, -1
  %1047 = trunc i64 %1041 to i32
  %1048 = icmp sgt i32 %1047, 0
  br i1 %1048, label %1040, label %1049, !llvm.loop !1156

1049:                                             ; preds = %1040, %1031
  %1050 = phi i32 [ %1035, %1031 ], [ %1045, %1040 ]
  %1051 = and i64 %1000, 4294967295
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !6
  %1054 = mul nsw i32 %1053, %1050
  %1055 = add nsw i32 %1054, %994
  %1056 = icmp sgt i64 %992, 2
  %1057 = add nsw i64 %993, -1
  %1058 = add i32 %991, 1
  br i1 %1056, label %990, label %1059, !llvm.loop !1157

1059:                                             ; preds = %1049, %986
  %1060 = phi i32 [ %989, %986 ], [ %1055, %1049 ]
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds float, ptr %639, i64 %1061
  %1063 = load float, ptr %1062, align 4, !tbaa !163
  %1064 = fptosi float %1063 to i32
  %1065 = load i32, ptr %641, align 4, !tbaa !6
  %1066 = icmp slt i32 %1064, 0
  %1067 = mul nsw i32 %1064, %1064
  %1068 = sub nsw i32 0, %1067
  %1069 = select i1 %1066, i32 %1068, i32 %1067
  %1070 = mul i32 %1069, %1064
  %1071 = add nsw i32 %1070, %1065
  store i32 %1071, ptr %641, align 4, !tbaa !6
  %1072 = fadd fast double %988, 1.000000e+00
  %1073 = add nuw nsw i32 %987, 1
  br i1 %980, label %1074, label %1121

1074:                                             ; preds = %1059
  %1075 = load i32, ptr %4, align 4, !tbaa !6
  %1076 = load i32, ptr %12, align 4, !tbaa !6
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1075, %1077
  br i1 %1078, label %1098, label %1079

1079:                                             ; preds = %1074
  %1080 = icmp eq i32 %1075, %1077
  br i1 %1080, label %1081, label %1114

1081:                                             ; preds = %1079
  store i32 0, ptr %4, align 4, !tbaa !6
  %1082 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1082, ptr %6, align 4, !tbaa !6
  br i1 %985, label %1121, label %1083

1083:                                             ; preds = %1081, %1108
  %1084 = phi i64 [ %1112, %1108 ], [ 1, %1081 ]
  %1085 = getelementptr inbounds i32, ptr %4, i64 %1084
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %12, i64 %1084
  %1088 = load i32, ptr %1087, align 4, !tbaa !6
  %1089 = add nsw i32 %1088, -1
  %1090 = icmp slt i32 %1086, %1089
  br i1 %1090, label %1091, label %1106

1091:                                             ; preds = %1083
  br i1 %1078, label %1098, label %1092

1092:                                             ; preds = %1091
  %1093 = getelementptr inbounds i32, ptr %7, i64 %1084
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1084
  %1096 = load i32, ptr %1095, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1094
  store i32 %1097, ptr %1095, align 4, !tbaa !6
  br label %1116

1098:                                             ; preds = %1074, %1091
  %1099 = phi i32 [ %1086, %1091 ], [ %1075, %1074 ]
  %1100 = phi ptr [ %1085, %1091 ], [ %4, %1074 ]
  %1101 = phi i64 [ %1084, %1091 ], [ 0, %1074 ]
  %1102 = add nsw i32 %1099, 1
  store i32 %1102, ptr %1100, align 4, !tbaa !6
  %1103 = getelementptr inbounds i32, ptr %7, i64 %1101
  %1104 = load i32, ptr %1103, align 4, !tbaa !6
  %1105 = getelementptr inbounds i32, ptr %6, i64 %1101
  br label %1116

1106:                                             ; preds = %1083
  %1107 = icmp eq i32 %1086, %1089
  br i1 %1107, label %1108, label %1114

1108:                                             ; preds = %1106
  store i32 0, ptr %1085, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %8, i64 %1084
  %1110 = load i32, ptr %1109, align 4, !tbaa !6
  %1111 = getelementptr inbounds i32, ptr %6, i64 %1084
  store i32 %1110, ptr %1111, align 4, !tbaa !6
  %1112 = add nuw nsw i64 %1084, 1
  %1113 = icmp eq i64 %1112, %983
  br i1 %1113, label %1121, label %1083, !llvm.loop !1158

1114:                                             ; preds = %1079, %1106
  %1115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1116:                                             ; preds = %1092, %1098
  %1117 = phi ptr [ %1105, %1098 ], [ %1085, %1092 ]
  %1118 = phi i32 [ %1104, %1098 ], [ 1, %1092 ]
  %1119 = load i32, ptr %1117, align 4, !tbaa !6
  %1120 = add nsw i32 %1119, %1118
  store i32 %1120, ptr %1117, align 4, !tbaa !6
  br label %1121

1121:                                             ; preds = %1108, %1116, %1081, %1059
  %1122 = icmp eq i32 %1073, %5
  br i1 %1122, label %5666, label %986, !llvm.loop !1159

1123:                                             ; preds = %969, %1263
  %1124 = phi i32 [ 0, %969 ], [ %1212, %1263 ]
  %1125 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %1126, label %1195

1126:                                             ; preds = %1123, %1185
  %1127 = phi i32 [ %1194, %1185 ], [ 0, %1123 ]
  %1128 = phi i64 [ %1136, %1185 ], [ %974, %1123 ]
  %1129 = phi i64 [ %1193, %1185 ], [ %973, %1123 ]
  %1130 = phi i32 [ %1191, %1185 ], [ %1125, %1123 ]
  %1131 = sub i32 %972, %1127
  %1132 = tail call i32 @llvm.smin.i32(i32 %1131, i32 0)
  %1133 = sub i32 %1131, %1132
  %1134 = zext i32 %1133 to i64
  %1135 = add nuw nsw i64 %1134, 1
  %1136 = add nsw i64 %1128, -1
  %1137 = icmp ult i32 %1133, 31
  br i1 %1137, label %1173, label %1138

1138:                                             ; preds = %1126
  %1139 = and i64 %1135, 8589934560
  %1140 = sub i64 %1129, %1139
  br label %1141

1141:                                             ; preds = %1141, %1138
  %1142 = phi i64 [ 0, %1138 ], [ %1165, %1141 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1161, %1141 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1162, %1141 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1163, %1141 ]
  %1146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1164, %1141 ]
  %1147 = sub i64 %1129, %1142
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1147
  %1149 = getelementptr inbounds i32, ptr %1148, i64 -7
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !6
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = getelementptr inbounds i32, ptr %1148, i64 -15
  %1153 = load <8 x i32>, ptr %1152, align 4, !tbaa !6
  %1154 = shufflevector <8 x i32> %1153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1155 = getelementptr inbounds i32, ptr %1148, i64 -23
  %1156 = load <8 x i32>, ptr %1155, align 4, !tbaa !6
  %1157 = shufflevector <8 x i32> %1156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1158 = getelementptr inbounds i32, ptr %1148, i64 -31
  %1159 = load <8 x i32>, ptr %1158, align 4, !tbaa !6
  %1160 = shufflevector <8 x i32> %1159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1161 = mul <8 x i32> %1151, %1143
  %1162 = mul <8 x i32> %1154, %1144
  %1163 = mul <8 x i32> %1157, %1145
  %1164 = mul <8 x i32> %1160, %1146
  %1165 = add nuw i64 %1142, 32
  %1166 = icmp eq i64 %1165, %1139
  br i1 %1166, label %1167, label %1141, !llvm.loop !1160

1167:                                             ; preds = %1141
  %1168 = mul <8 x i32> %1162, %1161
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = mul <8 x i32> %1164, %1169
  %1171 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1170)
  %1172 = icmp eq i64 %1135, %1139
  br i1 %1172, label %1185, label %1173

1173:                                             ; preds = %1126, %1167
  %1174 = phi i64 [ %1129, %1126 ], [ %1140, %1167 ]
  %1175 = phi i32 [ 1, %1126 ], [ %1171, %1167 ]
  br label %1176

1176:                                             ; preds = %1173, %1176
  %1177 = phi i64 [ %1182, %1176 ], [ %1174, %1173 ]
  %1178 = phi i32 [ %1181, %1176 ], [ %1175, %1173 ]
  %1179 = getelementptr inbounds i32, ptr %11, i64 %1177
  %1180 = load i32, ptr %1179, align 4, !tbaa !6
  %1181 = mul nsw i32 %1180, %1178
  %1182 = add nsw i64 %1177, -1
  %1183 = trunc i64 %1177 to i32
  %1184 = icmp sgt i32 %1183, 0
  br i1 %1184, label %1176, label %1185, !llvm.loop !1161

1185:                                             ; preds = %1176, %1167
  %1186 = phi i32 [ %1171, %1167 ], [ %1181, %1176 ]
  %1187 = and i64 %1136, 4294967295
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !6
  %1190 = mul nsw i32 %1189, %1186
  %1191 = add nsw i32 %1190, %1130
  %1192 = icmp sgt i64 %1128, 2
  %1193 = add nsw i64 %1129, -1
  %1194 = add i32 %1127, 1
  br i1 %1192, label %1126, label %1195, !llvm.loop !1162

1195:                                             ; preds = %1185, %1123
  %1196 = phi i32 [ %1125, %1123 ], [ %1191, %1185 ]
  %1197 = icmp slt i32 %1196, %5
  br i1 %1197, label %1200, label %1198

1198:                                             ; preds = %1195
  %1199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

1200:                                             ; preds = %1195
  %1201 = sext i32 %1196 to i64
  %1202 = getelementptr inbounds float, ptr %639, i64 %1201
  %1203 = load float, ptr %1202, align 4, !tbaa !163
  %1204 = fptosi float %1203 to i32
  %1205 = load i32, ptr %641, align 4, !tbaa !6
  %1206 = icmp slt i32 %1204, 0
  %1207 = mul nsw i32 %1204, %1204
  %1208 = sub nsw i32 0, %1207
  %1209 = select i1 %1206, i32 %1208, i32 %1207
  %1210 = mul i32 %1209, %1204
  %1211 = add nsw i32 %1210, %1205
  store i32 %1211, ptr %641, align 4, !tbaa !6
  %1212 = add nuw nsw i32 %1124, 1
  br i1 %971, label %1213, label %1263

1213:                                             ; preds = %1200
  %1214 = load i32, ptr %4, align 4, !tbaa !6
  %1215 = load i32, ptr %12, align 4, !tbaa !6
  %1216 = add nsw i32 %1215, -1
  %1217 = icmp slt i32 %1214, %1216
  br i1 %1217, label %1240, label %1218

1218:                                             ; preds = %1213
  %1219 = icmp eq i32 %1214, %1216
  br i1 %1219, label %1220, label %1256

1220:                                             ; preds = %1218
  store i32 0, ptr %4, align 4, !tbaa !6
  %1221 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1221, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1263, label %1222

1222:                                             ; preds = %1220, %1250
  %1223 = phi i64 [ %1254, %1250 ], [ 1, %1220 ]
  %1224 = getelementptr inbounds i32, ptr %4, i64 %1223
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = getelementptr inbounds i32, ptr %12, i64 %1223
  %1227 = load i32, ptr %1226, align 4, !tbaa !6
  %1228 = add nsw i32 %1227, -1
  %1229 = icmp slt i32 %1225, %1228
  br i1 %1229, label %1230, label %1248

1230:                                             ; preds = %1222
  br i1 %1217, label %1240, label %1231

1231:                                             ; preds = %1230
  %1232 = shl i64 %1223, 32
  %1233 = add i64 %1232, -4294967296
  %1234 = ashr exact i64 %1233, 32
  %1235 = getelementptr inbounds i32, ptr %7, i64 %1234
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1223
  %1238 = load i32, ptr %1237, align 4, !tbaa !6
  %1239 = add nsw i32 %1238, %1236
  store i32 %1239, ptr %1237, align 4, !tbaa !6
  br label %1258

1240:                                             ; preds = %1213, %1230
  %1241 = phi i32 [ %1225, %1230 ], [ %1214, %1213 ]
  %1242 = phi ptr [ %1224, %1230 ], [ %4, %1213 ]
  %1243 = phi i64 [ %1223, %1230 ], [ 0, %1213 ]
  %1244 = add nsw i32 %1241, 1
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %7, i64 %1243
  %1246 = load i32, ptr %1245, align 4, !tbaa !6
  %1247 = getelementptr inbounds i32, ptr %6, i64 %1243
  br label %1258

1248:                                             ; preds = %1222
  %1249 = icmp eq i32 %1225, %1228
  br i1 %1249, label %1250, label %1256

1250:                                             ; preds = %1248
  store i32 0, ptr %1224, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %8, i64 %1223
  %1252 = load i32, ptr %1251, align 4, !tbaa !6
  %1253 = getelementptr inbounds i32, ptr %6, i64 %1223
  store i32 %1252, ptr %1253, align 4, !tbaa !6
  %1254 = add nuw nsw i64 %1223, 1
  %1255 = icmp eq i64 %1254, %974
  br i1 %1255, label %1263, label %1222, !llvm.loop !1163

1256:                                             ; preds = %1218, %1248
  %1257 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1258:                                             ; preds = %1231, %1240
  %1259 = phi ptr [ %1247, %1240 ], [ %1224, %1231 ]
  %1260 = phi i32 [ %1246, %1240 ], [ 1, %1231 ]
  %1261 = load i32, ptr %1259, align 4, !tbaa !6
  %1262 = add nsw i32 %1261, %1260
  store i32 %1262, ptr %1259, align 4, !tbaa !6
  br label %1263

1263:                                             ; preds = %1250, %1258, %1220, %1200
  %1264 = icmp eq i32 %1212, %5
  br i1 %1264, label %5666, label %1123, !llvm.loop !1164

1265:                                             ; preds = %651
  %1266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1998, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

1267:                                             ; preds = %18
  %1268 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  %1270 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1271 = load ptr, ptr %1270, align 8, !tbaa !10
  store i8 0, ptr %1271, align 1, !tbaa !12
  %1272 = icmp eq i32 %13, 0
  br i1 %1272, label %1273, label %1281

1273:                                             ; preds = %1267
  %1274 = load float, ptr %1269, align 4, !tbaa !163
  %1275 = fptosi float %1274 to i8
  %1276 = icmp slt i8 %1275, 0
  %1277 = mul i8 %1275, %1275
  %1278 = sub i8 0, %1277
  %1279 = select i1 %1276, i8 %1278, i8 %1277
  %1280 = mul i8 %1279, %1275
  store i8 %1280, ptr %1271, align 1, !tbaa !12
  br label %5666

1281:                                             ; preds = %1267
  switch i32 %1, label %1895 [
    i32 1, label %1282
    i32 0, label %1593
  ]

1282:                                             ; preds = %1281
  %1283 = getelementptr inbounds i32, ptr %3, i64 %19
  %1284 = load i32, ptr %1283, align 4, !tbaa !6
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp sgt i32 %5, 0
  br i1 %1285, label %1296, label %1287

1287:                                             ; preds = %1282
  br i1 %1286, label %1288, label %5666

1288:                                             ; preds = %1287
  %1289 = icmp sgt i32 %13, 1
  %1290 = icmp sgt i32 %13, 0
  %1291 = add i32 %13, -2
  %1292 = zext i32 %1291 to i64
  %1293 = zext i32 %13 to i64
  %1294 = add nuw i32 %5, 1
  %1295 = icmp eq i32 %13, 1
  br label %1448

1296:                                             ; preds = %1282
  br i1 %1286, label %1297, label %5666

1297:                                             ; preds = %1296
  %1298 = icmp sgt i32 %13, 1
  %1299 = icmp sgt i32 %13, 0
  %1300 = add i32 %13, -2
  %1301 = zext i32 %1300 to i64
  %1302 = zext i32 %13 to i64
  %1303 = add nuw i32 %5, 1
  %1304 = icmp eq i32 %13, 1
  br label %1305

1305:                                             ; preds = %1297, %1446
  %1306 = phi i32 [ 0, %1297 ], [ %1398, %1446 ]
  %1307 = phi double [ 0.000000e+00, %1297 ], [ %1397, %1446 ]
  %1308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1309, label %1378

1309:                                             ; preds = %1305, %1368
  %1310 = phi i32 [ %1377, %1368 ], [ 0, %1305 ]
  %1311 = phi i64 [ %1319, %1368 ], [ %1302, %1305 ]
  %1312 = phi i64 [ %1376, %1368 ], [ %1301, %1305 ]
  %1313 = phi i32 [ %1374, %1368 ], [ %1308, %1305 ]
  %1314 = sub i32 %1300, %1310
  %1315 = tail call i32 @llvm.smin.i32(i32 %1314, i32 0)
  %1316 = sub i32 %1314, %1315
  %1317 = zext i32 %1316 to i64
  %1318 = add nuw nsw i64 %1317, 1
  %1319 = add nsw i64 %1311, -1
  %1320 = icmp ult i32 %1316, 31
  br i1 %1320, label %1356, label %1321

1321:                                             ; preds = %1309
  %1322 = and i64 %1318, 8589934560
  %1323 = sub i64 %1312, %1322
  br label %1324

1324:                                             ; preds = %1324, %1321
  %1325 = phi i64 [ 0, %1321 ], [ %1348, %1324 ]
  %1326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1344, %1324 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1345, %1324 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1346, %1324 ]
  %1329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1347, %1324 ]
  %1330 = sub i64 %1312, %1325
  %1331 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1332 = getelementptr inbounds i32, ptr %1331, i64 -7
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !6
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = getelementptr inbounds i32, ptr %1331, i64 -15
  %1336 = load <8 x i32>, ptr %1335, align 4, !tbaa !6
  %1337 = shufflevector <8 x i32> %1336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1338 = getelementptr inbounds i32, ptr %1331, i64 -23
  %1339 = load <8 x i32>, ptr %1338, align 4, !tbaa !6
  %1340 = shufflevector <8 x i32> %1339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1341 = getelementptr inbounds i32, ptr %1331, i64 -31
  %1342 = load <8 x i32>, ptr %1341, align 4, !tbaa !6
  %1343 = shufflevector <8 x i32> %1342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1344 = mul <8 x i32> %1334, %1326
  %1345 = mul <8 x i32> %1337, %1327
  %1346 = mul <8 x i32> %1340, %1328
  %1347 = mul <8 x i32> %1343, %1329
  %1348 = add nuw i64 %1325, 32
  %1349 = icmp eq i64 %1348, %1322
  br i1 %1349, label %1350, label %1324, !llvm.loop !1165

1350:                                             ; preds = %1324
  %1351 = mul <8 x i32> %1345, %1344
  %1352 = mul <8 x i32> %1346, %1351
  %1353 = mul <8 x i32> %1347, %1352
  %1354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1353)
  %1355 = icmp eq i64 %1318, %1322
  br i1 %1355, label %1368, label %1356

1356:                                             ; preds = %1309, %1350
  %1357 = phi i64 [ %1312, %1309 ], [ %1323, %1350 ]
  %1358 = phi i32 [ 1, %1309 ], [ %1354, %1350 ]
  br label %1359

1359:                                             ; preds = %1356, %1359
  %1360 = phi i64 [ %1365, %1359 ], [ %1357, %1356 ]
  %1361 = phi i32 [ %1364, %1359 ], [ %1358, %1356 ]
  %1362 = getelementptr inbounds i32, ptr %9, i64 %1360
  %1363 = load i32, ptr %1362, align 4, !tbaa !6
  %1364 = mul nsw i32 %1363, %1361
  %1365 = add nsw i64 %1360, -1
  %1366 = trunc i64 %1360 to i32
  %1367 = icmp sgt i32 %1366, 0
  br i1 %1367, label %1359, label %1368, !llvm.loop !1166

1368:                                             ; preds = %1359, %1350
  %1369 = phi i32 [ %1354, %1350 ], [ %1364, %1359 ]
  %1370 = and i64 %1319, 4294967295
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1370
  %1372 = load i32, ptr %1371, align 4, !tbaa !6
  %1373 = mul nsw i32 %1372, %1369
  %1374 = add nsw i32 %1373, %1313
  %1375 = icmp sgt i64 %1311, 2
  %1376 = add nsw i64 %1312, -1
  %1377 = add i32 %1310, 1
  br i1 %1375, label %1309, label %1378, !llvm.loop !1167

1378:                                             ; preds = %1368, %1305
  %1379 = phi i32 [ %1308, %1305 ], [ %1374, %1368 ]
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds double, ptr %2, i64 %1380
  %1382 = load double, ptr %1381, align 8, !tbaa !19
  %1383 = getelementptr inbounds float, ptr %1269, i64 %1380
  %1384 = load float, ptr %1383, align 4, !tbaa !163
  %1385 = fptosi float %1384 to i8
  %1386 = load i8, ptr %1271, align 1, !tbaa !12
  %1387 = sitofp i8 %1386 to double
  %1388 = sitofp i8 %1385 to double
  %1389 = fmul fast double %1382, %1388
  %1390 = fcmp fast olt double %1389, 0.000000e+00
  %1391 = fneg fast double %1389
  %1392 = select nnan ninf i1 %1390, double %1391, double %1389
  %1393 = fmul fast double %1389, %1389
  %1394 = fmul fast double %1393, %1392
  %1395 = fadd fast double %1394, %1387
  %1396 = fptosi double %1395 to i8
  store i8 %1396, ptr %1271, align 1, !tbaa !12
  %1397 = fadd fast double %1382, %1307
  %1398 = add nuw nsw i32 %1306, 1
  br i1 %1299, label %1399, label %1446

1399:                                             ; preds = %1378
  %1400 = load i32, ptr %4, align 4, !tbaa !6
  %1401 = load i32, ptr %12, align 4, !tbaa !6
  %1402 = add nsw i32 %1401, -1
  %1403 = icmp slt i32 %1400, %1402
  br i1 %1403, label %1423, label %1404

1404:                                             ; preds = %1399
  %1405 = icmp eq i32 %1400, %1402
  br i1 %1405, label %1406, label %1439

1406:                                             ; preds = %1404
  store i32 0, ptr %4, align 4, !tbaa !6
  %1407 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1407, ptr %6, align 4, !tbaa !6
  br i1 %1304, label %1446, label %1408

1408:                                             ; preds = %1406, %1433
  %1409 = phi i64 [ %1437, %1433 ], [ 1, %1406 ]
  %1410 = getelementptr inbounds i32, ptr %4, i64 %1409
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %12, i64 %1409
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = add nsw i32 %1413, -1
  %1415 = icmp slt i32 %1411, %1414
  br i1 %1415, label %1416, label %1431

1416:                                             ; preds = %1408
  br i1 %1403, label %1423, label %1417

1417:                                             ; preds = %1416
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1409
  %1419 = load i32, ptr %1418, align 4, !tbaa !6
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1409
  %1421 = load i32, ptr %1420, align 4, !tbaa !6
  %1422 = add nsw i32 %1421, %1419
  store i32 %1422, ptr %1420, align 4, !tbaa !6
  br label %1441

1423:                                             ; preds = %1399, %1416
  %1424 = phi i32 [ %1411, %1416 ], [ %1400, %1399 ]
  %1425 = phi ptr [ %1410, %1416 ], [ %4, %1399 ]
  %1426 = phi i64 [ %1409, %1416 ], [ 0, %1399 ]
  %1427 = add nsw i32 %1424, 1
  store i32 %1427, ptr %1425, align 4, !tbaa !6
  %1428 = getelementptr inbounds i32, ptr %7, i64 %1426
  %1429 = load i32, ptr %1428, align 4, !tbaa !6
  %1430 = getelementptr inbounds i32, ptr %6, i64 %1426
  br label %1441

1431:                                             ; preds = %1408
  %1432 = icmp eq i32 %1411, %1414
  br i1 %1432, label %1433, label %1439

1433:                                             ; preds = %1431
  store i32 0, ptr %1410, align 4, !tbaa !6
  %1434 = getelementptr inbounds i32, ptr %8, i64 %1409
  %1435 = load i32, ptr %1434, align 4, !tbaa !6
  %1436 = getelementptr inbounds i32, ptr %6, i64 %1409
  store i32 %1435, ptr %1436, align 4, !tbaa !6
  %1437 = add nuw nsw i64 %1409, 1
  %1438 = icmp eq i64 %1437, %1302
  br i1 %1438, label %1446, label %1408, !llvm.loop !1168

1439:                                             ; preds = %1404, %1431
  %1440 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1441:                                             ; preds = %1417, %1423
  %1442 = phi ptr [ %1430, %1423 ], [ %1410, %1417 ]
  %1443 = phi i32 [ %1429, %1423 ], [ 1, %1417 ]
  %1444 = load i32, ptr %1442, align 4, !tbaa !6
  %1445 = add nsw i32 %1444, %1443
  store i32 %1445, ptr %1442, align 4, !tbaa !6
  br label %1446

1446:                                             ; preds = %1433, %1441, %1406, %1378
  %1447 = icmp eq i32 %1398, %5
  br i1 %1447, label %5666, label %1305, !llvm.loop !1169

1448:                                             ; preds = %1288, %1591
  %1449 = phi i32 [ 0, %1288 ], [ %1540, %1591 ]
  %1450 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1289, label %1451, label %1520

1451:                                             ; preds = %1448, %1510
  %1452 = phi i32 [ %1519, %1510 ], [ 0, %1448 ]
  %1453 = phi i64 [ %1461, %1510 ], [ %1293, %1448 ]
  %1454 = phi i64 [ %1518, %1510 ], [ %1292, %1448 ]
  %1455 = phi i32 [ %1516, %1510 ], [ %1450, %1448 ]
  %1456 = sub i32 %1291, %1452
  %1457 = tail call i32 @llvm.smin.i32(i32 %1456, i32 0)
  %1458 = sub i32 %1456, %1457
  %1459 = zext i32 %1458 to i64
  %1460 = add nuw nsw i64 %1459, 1
  %1461 = add nsw i64 %1453, -1
  %1462 = icmp ult i32 %1458, 31
  br i1 %1462, label %1498, label %1463

1463:                                             ; preds = %1451
  %1464 = and i64 %1460, 8589934560
  %1465 = sub i64 %1454, %1464
  br label %1466

1466:                                             ; preds = %1466, %1463
  %1467 = phi i64 [ 0, %1463 ], [ %1490, %1466 ]
  %1468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1486, %1466 ]
  %1469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1487, %1466 ]
  %1470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1488, %1466 ]
  %1471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1489, %1466 ]
  %1472 = sub i64 %1454, %1467
  %1473 = getelementptr inbounds i32, ptr %11, i64 %1472
  %1474 = getelementptr inbounds i32, ptr %1473, i64 -7
  %1475 = load <8 x i32>, ptr %1474, align 4, !tbaa !6
  %1476 = shufflevector <8 x i32> %1475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1477 = getelementptr inbounds i32, ptr %1473, i64 -15
  %1478 = load <8 x i32>, ptr %1477, align 4, !tbaa !6
  %1479 = shufflevector <8 x i32> %1478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1480 = getelementptr inbounds i32, ptr %1473, i64 -23
  %1481 = load <8 x i32>, ptr %1480, align 4, !tbaa !6
  %1482 = shufflevector <8 x i32> %1481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1483 = getelementptr inbounds i32, ptr %1473, i64 -31
  %1484 = load <8 x i32>, ptr %1483, align 4, !tbaa !6
  %1485 = shufflevector <8 x i32> %1484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1486 = mul <8 x i32> %1476, %1468
  %1487 = mul <8 x i32> %1479, %1469
  %1488 = mul <8 x i32> %1482, %1470
  %1489 = mul <8 x i32> %1485, %1471
  %1490 = add nuw i64 %1467, 32
  %1491 = icmp eq i64 %1490, %1464
  br i1 %1491, label %1492, label %1466, !llvm.loop !1170

1492:                                             ; preds = %1466
  %1493 = mul <8 x i32> %1487, %1486
  %1494 = mul <8 x i32> %1488, %1493
  %1495 = mul <8 x i32> %1489, %1494
  %1496 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1495)
  %1497 = icmp eq i64 %1460, %1464
  br i1 %1497, label %1510, label %1498

1498:                                             ; preds = %1451, %1492
  %1499 = phi i64 [ %1454, %1451 ], [ %1465, %1492 ]
  %1500 = phi i32 [ 1, %1451 ], [ %1496, %1492 ]
  br label %1501

1501:                                             ; preds = %1498, %1501
  %1502 = phi i64 [ %1507, %1501 ], [ %1499, %1498 ]
  %1503 = phi i32 [ %1506, %1501 ], [ %1500, %1498 ]
  %1504 = getelementptr inbounds i32, ptr %11, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !6
  %1506 = mul nsw i32 %1505, %1503
  %1507 = add nsw i64 %1502, -1
  %1508 = trunc i64 %1502 to i32
  %1509 = icmp sgt i32 %1508, 0
  br i1 %1509, label %1501, label %1510, !llvm.loop !1171

1510:                                             ; preds = %1501, %1492
  %1511 = phi i32 [ %1496, %1492 ], [ %1506, %1501 ]
  %1512 = and i64 %1461, 4294967295
  %1513 = getelementptr inbounds i32, ptr %6, i64 %1512
  %1514 = load i32, ptr %1513, align 4, !tbaa !6
  %1515 = mul nsw i32 %1514, %1511
  %1516 = add nsw i32 %1515, %1455
  %1517 = icmp sgt i64 %1453, 2
  %1518 = add nsw i64 %1454, -1
  %1519 = add i32 %1452, 1
  br i1 %1517, label %1451, label %1520, !llvm.loop !1172

1520:                                             ; preds = %1510, %1448
  %1521 = phi i32 [ %1450, %1448 ], [ %1516, %1510 ]
  %1522 = icmp slt i32 %1521, %5
  br i1 %1522, label %1525, label %1523

1523:                                             ; preds = %1520
  %1524 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

1525:                                             ; preds = %1520
  %1526 = sext i32 %1521 to i64
  %1527 = getelementptr inbounds float, ptr %1269, i64 %1526
  %1528 = load float, ptr %1527, align 4, !tbaa !163
  %1529 = fptosi float %1528 to i8
  %1530 = load i8, ptr %1271, align 1, !tbaa !12
  %1531 = sitofp i8 %1530 to double
  %1532 = sitofp i8 %1529 to double
  %1533 = icmp slt i8 %1529, 0
  %1534 = fneg fast double %1532
  %1535 = select i1 %1533, double %1534, double %1532
  %1536 = fmul fast double %1532, %1532
  %1537 = fmul fast double %1536, %1535
  %1538 = fadd fast double %1537, %1531
  %1539 = fptosi double %1538 to i8
  store i8 %1539, ptr %1271, align 1, !tbaa !12
  %1540 = add nuw nsw i32 %1449, 1
  br i1 %1290, label %1541, label %1591

1541:                                             ; preds = %1525
  %1542 = load i32, ptr %4, align 4, !tbaa !6
  %1543 = load i32, ptr %12, align 4, !tbaa !6
  %1544 = add nsw i32 %1543, -1
  %1545 = icmp slt i32 %1542, %1544
  br i1 %1545, label %1568, label %1546

1546:                                             ; preds = %1541
  %1547 = icmp eq i32 %1542, %1544
  br i1 %1547, label %1548, label %1584

1548:                                             ; preds = %1546
  store i32 0, ptr %4, align 4, !tbaa !6
  %1549 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1549, ptr %6, align 4, !tbaa !6
  br i1 %1295, label %1591, label %1550

1550:                                             ; preds = %1548, %1578
  %1551 = phi i64 [ %1582, %1578 ], [ 1, %1548 ]
  %1552 = getelementptr inbounds i32, ptr %4, i64 %1551
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %12, i64 %1551
  %1555 = load i32, ptr %1554, align 4, !tbaa !6
  %1556 = add nsw i32 %1555, -1
  %1557 = icmp slt i32 %1553, %1556
  br i1 %1557, label %1558, label %1576

1558:                                             ; preds = %1550
  br i1 %1545, label %1568, label %1559

1559:                                             ; preds = %1558
  %1560 = shl i64 %1551, 32
  %1561 = add i64 %1560, -4294967296
  %1562 = ashr exact i64 %1561, 32
  %1563 = getelementptr inbounds i32, ptr %7, i64 %1562
  %1564 = load i32, ptr %1563, align 4, !tbaa !6
  %1565 = getelementptr inbounds i32, ptr %6, i64 %1551
  %1566 = load i32, ptr %1565, align 4, !tbaa !6
  %1567 = add nsw i32 %1566, %1564
  store i32 %1567, ptr %1565, align 4, !tbaa !6
  br label %1586

1568:                                             ; preds = %1541, %1558
  %1569 = phi i32 [ %1553, %1558 ], [ %1542, %1541 ]
  %1570 = phi ptr [ %1552, %1558 ], [ %4, %1541 ]
  %1571 = phi i64 [ %1551, %1558 ], [ 0, %1541 ]
  %1572 = add nsw i32 %1569, 1
  store i32 %1572, ptr %1570, align 4, !tbaa !6
  %1573 = getelementptr inbounds i32, ptr %7, i64 %1571
  %1574 = load i32, ptr %1573, align 4, !tbaa !6
  %1575 = getelementptr inbounds i32, ptr %6, i64 %1571
  br label %1586

1576:                                             ; preds = %1550
  %1577 = icmp eq i32 %1553, %1556
  br i1 %1577, label %1578, label %1584

1578:                                             ; preds = %1576
  store i32 0, ptr %1552, align 4, !tbaa !6
  %1579 = getelementptr inbounds i32, ptr %8, i64 %1551
  %1580 = load i32, ptr %1579, align 4, !tbaa !6
  %1581 = getelementptr inbounds i32, ptr %6, i64 %1551
  store i32 %1580, ptr %1581, align 4, !tbaa !6
  %1582 = add nuw nsw i64 %1551, 1
  %1583 = icmp eq i64 %1582, %1293
  br i1 %1583, label %1591, label %1550, !llvm.loop !1173

1584:                                             ; preds = %1546, %1576
  %1585 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1586:                                             ; preds = %1559, %1568
  %1587 = phi ptr [ %1575, %1568 ], [ %1552, %1559 ]
  %1588 = phi i32 [ %1574, %1568 ], [ 1, %1559 ]
  %1589 = load i32, ptr %1587, align 4, !tbaa !6
  %1590 = add nsw i32 %1589, %1588
  store i32 %1590, ptr %1587, align 4, !tbaa !6
  br label %1591

1591:                                             ; preds = %1578, %1586, %1548, %1525
  %1592 = icmp eq i32 %1540, %5
  br i1 %1592, label %5666, label %1448, !llvm.loop !1174

1593:                                             ; preds = %1281
  %1594 = getelementptr inbounds i32, ptr %3, i64 %19
  %1595 = load i32, ptr %1594, align 4, !tbaa !6
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp sgt i32 %5, 0
  br i1 %1596, label %1607, label %1598

1598:                                             ; preds = %1593
  br i1 %1597, label %1599, label %5666

1599:                                             ; preds = %1598
  %1600 = icmp sgt i32 %13, 1
  %1601 = icmp sgt i32 %13, 0
  %1602 = add i32 %13, -2
  %1603 = zext i32 %1602 to i64
  %1604 = zext i32 %13 to i64
  %1605 = add nuw i32 %5, 1
  %1606 = icmp eq i32 %13, 1
  br label %1753

1607:                                             ; preds = %1593
  br i1 %1597, label %1608, label %5666

1608:                                             ; preds = %1607
  %1609 = icmp sgt i32 %13, 1
  %1610 = icmp sgt i32 %13, 0
  %1611 = add i32 %13, -2
  %1612 = zext i32 %1611 to i64
  %1613 = zext i32 %13 to i64
  %1614 = add nuw i32 %5, 1
  %1615 = icmp eq i32 %13, 1
  br label %1616

1616:                                             ; preds = %1608, %1751
  %1617 = phi i32 [ 0, %1608 ], [ %1703, %1751 ]
  %1618 = phi double [ 0.000000e+00, %1608 ], [ %1702, %1751 ]
  %1619 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1620, label %1689

1620:                                             ; preds = %1616, %1679
  %1621 = phi i32 [ %1688, %1679 ], [ 0, %1616 ]
  %1622 = phi i64 [ %1630, %1679 ], [ %1613, %1616 ]
  %1623 = phi i64 [ %1687, %1679 ], [ %1612, %1616 ]
  %1624 = phi i32 [ %1685, %1679 ], [ %1619, %1616 ]
  %1625 = sub i32 %1611, %1621
  %1626 = tail call i32 @llvm.smin.i32(i32 %1625, i32 0)
  %1627 = sub i32 %1625, %1626
  %1628 = zext i32 %1627 to i64
  %1629 = add nuw nsw i64 %1628, 1
  %1630 = add nsw i64 %1622, -1
  %1631 = icmp ult i32 %1627, 31
  br i1 %1631, label %1667, label %1632

1632:                                             ; preds = %1620
  %1633 = and i64 %1629, 8589934560
  %1634 = sub i64 %1623, %1633
  br label %1635

1635:                                             ; preds = %1635, %1632
  %1636 = phi i64 [ 0, %1632 ], [ %1659, %1635 ]
  %1637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1655, %1635 ]
  %1638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1656, %1635 ]
  %1639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1657, %1635 ]
  %1640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1658, %1635 ]
  %1641 = sub i64 %1623, %1636
  %1642 = getelementptr inbounds i32, ptr %9, i64 %1641
  %1643 = getelementptr inbounds i32, ptr %1642, i64 -7
  %1644 = load <8 x i32>, ptr %1643, align 4, !tbaa !6
  %1645 = shufflevector <8 x i32> %1644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1646 = getelementptr inbounds i32, ptr %1642, i64 -15
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !6
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = getelementptr inbounds i32, ptr %1642, i64 -23
  %1650 = load <8 x i32>, ptr %1649, align 4, !tbaa !6
  %1651 = shufflevector <8 x i32> %1650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1652 = getelementptr inbounds i32, ptr %1642, i64 -31
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = mul <8 x i32> %1645, %1637
  %1656 = mul <8 x i32> %1648, %1638
  %1657 = mul <8 x i32> %1651, %1639
  %1658 = mul <8 x i32> %1654, %1640
  %1659 = add nuw i64 %1636, 32
  %1660 = icmp eq i64 %1659, %1633
  br i1 %1660, label %1661, label %1635, !llvm.loop !1175

1661:                                             ; preds = %1635
  %1662 = mul <8 x i32> %1656, %1655
  %1663 = mul <8 x i32> %1657, %1662
  %1664 = mul <8 x i32> %1658, %1663
  %1665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1664)
  %1666 = icmp eq i64 %1629, %1633
  br i1 %1666, label %1679, label %1667

1667:                                             ; preds = %1620, %1661
  %1668 = phi i64 [ %1623, %1620 ], [ %1634, %1661 ]
  %1669 = phi i32 [ 1, %1620 ], [ %1665, %1661 ]
  br label %1670

1670:                                             ; preds = %1667, %1670
  %1671 = phi i64 [ %1676, %1670 ], [ %1668, %1667 ]
  %1672 = phi i32 [ %1675, %1670 ], [ %1669, %1667 ]
  %1673 = getelementptr inbounds i32, ptr %9, i64 %1671
  %1674 = load i32, ptr %1673, align 4, !tbaa !6
  %1675 = mul nsw i32 %1674, %1672
  %1676 = add nsw i64 %1671, -1
  %1677 = trunc i64 %1671 to i32
  %1678 = icmp sgt i32 %1677, 0
  br i1 %1678, label %1670, label %1679, !llvm.loop !1176

1679:                                             ; preds = %1670, %1661
  %1680 = phi i32 [ %1665, %1661 ], [ %1675, %1670 ]
  %1681 = and i64 %1630, 4294967295
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = mul nsw i32 %1683, %1680
  %1685 = add nsw i32 %1684, %1624
  %1686 = icmp sgt i64 %1622, 2
  %1687 = add nsw i64 %1623, -1
  %1688 = add i32 %1621, 1
  br i1 %1686, label %1620, label %1689, !llvm.loop !1177

1689:                                             ; preds = %1679, %1616
  %1690 = phi i32 [ %1619, %1616 ], [ %1685, %1679 ]
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds float, ptr %1269, i64 %1691
  %1693 = load float, ptr %1692, align 4, !tbaa !163
  %1694 = fptosi float %1693 to i8
  %1695 = load i8, ptr %1271, align 1, !tbaa !12
  %1696 = icmp slt i8 %1694, 0
  %1697 = mul i8 %1694, %1694
  %1698 = sub i8 0, %1697
  %1699 = select i1 %1696, i8 %1698, i8 %1697
  %1700 = mul i8 %1699, %1694
  %1701 = add i8 %1700, %1695
  store i8 %1701, ptr %1271, align 1, !tbaa !12
  %1702 = fadd fast double %1618, 1.000000e+00
  %1703 = add nuw nsw i32 %1617, 1
  br i1 %1610, label %1704, label %1751

1704:                                             ; preds = %1689
  %1705 = load i32, ptr %4, align 4, !tbaa !6
  %1706 = load i32, ptr %12, align 4, !tbaa !6
  %1707 = add nsw i32 %1706, -1
  %1708 = icmp slt i32 %1705, %1707
  br i1 %1708, label %1728, label %1709

1709:                                             ; preds = %1704
  %1710 = icmp eq i32 %1705, %1707
  br i1 %1710, label %1711, label %1744

1711:                                             ; preds = %1709
  store i32 0, ptr %4, align 4, !tbaa !6
  %1712 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1712, ptr %6, align 4, !tbaa !6
  br i1 %1615, label %1751, label %1713

1713:                                             ; preds = %1711, %1738
  %1714 = phi i64 [ %1742, %1738 ], [ 1, %1711 ]
  %1715 = getelementptr inbounds i32, ptr %4, i64 %1714
  %1716 = load i32, ptr %1715, align 4, !tbaa !6
  %1717 = getelementptr inbounds i32, ptr %12, i64 %1714
  %1718 = load i32, ptr %1717, align 4, !tbaa !6
  %1719 = add nsw i32 %1718, -1
  %1720 = icmp slt i32 %1716, %1719
  br i1 %1720, label %1721, label %1736

1721:                                             ; preds = %1713
  br i1 %1708, label %1728, label %1722

1722:                                             ; preds = %1721
  %1723 = getelementptr inbounds i32, ptr %7, i64 %1714
  %1724 = load i32, ptr %1723, align 4, !tbaa !6
  %1725 = getelementptr inbounds i32, ptr %6, i64 %1714
  %1726 = load i32, ptr %1725, align 4, !tbaa !6
  %1727 = add nsw i32 %1726, %1724
  store i32 %1727, ptr %1725, align 4, !tbaa !6
  br label %1746

1728:                                             ; preds = %1704, %1721
  %1729 = phi i32 [ %1716, %1721 ], [ %1705, %1704 ]
  %1730 = phi ptr [ %1715, %1721 ], [ %4, %1704 ]
  %1731 = phi i64 [ %1714, %1721 ], [ 0, %1704 ]
  %1732 = add nsw i32 %1729, 1
  store i32 %1732, ptr %1730, align 4, !tbaa !6
  %1733 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !6
  %1735 = getelementptr inbounds i32, ptr %6, i64 %1731
  br label %1746

1736:                                             ; preds = %1713
  %1737 = icmp eq i32 %1716, %1719
  br i1 %1737, label %1738, label %1744

1738:                                             ; preds = %1736
  store i32 0, ptr %1715, align 4, !tbaa !6
  %1739 = getelementptr inbounds i32, ptr %8, i64 %1714
  %1740 = load i32, ptr %1739, align 4, !tbaa !6
  %1741 = getelementptr inbounds i32, ptr %6, i64 %1714
  store i32 %1740, ptr %1741, align 4, !tbaa !6
  %1742 = add nuw nsw i64 %1714, 1
  %1743 = icmp eq i64 %1742, %1613
  br i1 %1743, label %1751, label %1713, !llvm.loop !1178

1744:                                             ; preds = %1709, %1736
  %1745 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1746:                                             ; preds = %1722, %1728
  %1747 = phi ptr [ %1735, %1728 ], [ %1715, %1722 ]
  %1748 = phi i32 [ %1734, %1728 ], [ 1, %1722 ]
  %1749 = load i32, ptr %1747, align 4, !tbaa !6
  %1750 = add nsw i32 %1749, %1748
  store i32 %1750, ptr %1747, align 4, !tbaa !6
  br label %1751

1751:                                             ; preds = %1738, %1746, %1711, %1689
  %1752 = icmp eq i32 %1703, %5
  br i1 %1752, label %5666, label %1616, !llvm.loop !1179

1753:                                             ; preds = %1599, %1893
  %1754 = phi i32 [ 0, %1599 ], [ %1842, %1893 ]
  %1755 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1600, label %1756, label %1825

1756:                                             ; preds = %1753, %1815
  %1757 = phi i32 [ %1824, %1815 ], [ 0, %1753 ]
  %1758 = phi i64 [ %1766, %1815 ], [ %1604, %1753 ]
  %1759 = phi i64 [ %1823, %1815 ], [ %1603, %1753 ]
  %1760 = phi i32 [ %1821, %1815 ], [ %1755, %1753 ]
  %1761 = sub i32 %1602, %1757
  %1762 = tail call i32 @llvm.smin.i32(i32 %1761, i32 0)
  %1763 = sub i32 %1761, %1762
  %1764 = zext i32 %1763 to i64
  %1765 = add nuw nsw i64 %1764, 1
  %1766 = add nsw i64 %1758, -1
  %1767 = icmp ult i32 %1763, 31
  br i1 %1767, label %1803, label %1768

1768:                                             ; preds = %1756
  %1769 = and i64 %1765, 8589934560
  %1770 = sub i64 %1759, %1769
  br label %1771

1771:                                             ; preds = %1771, %1768
  %1772 = phi i64 [ 0, %1768 ], [ %1795, %1771 ]
  %1773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1791, %1771 ]
  %1774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1792, %1771 ]
  %1775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1793, %1771 ]
  %1776 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1794, %1771 ]
  %1777 = sub i64 %1759, %1772
  %1778 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1779 = getelementptr inbounds i32, ptr %1778, i64 -7
  %1780 = load <8 x i32>, ptr %1779, align 4, !tbaa !6
  %1781 = shufflevector <8 x i32> %1780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1782 = getelementptr inbounds i32, ptr %1778, i64 -15
  %1783 = load <8 x i32>, ptr %1782, align 4, !tbaa !6
  %1784 = shufflevector <8 x i32> %1783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1785 = getelementptr inbounds i32, ptr %1778, i64 -23
  %1786 = load <8 x i32>, ptr %1785, align 4, !tbaa !6
  %1787 = shufflevector <8 x i32> %1786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1788 = getelementptr inbounds i32, ptr %1778, i64 -31
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = mul <8 x i32> %1781, %1773
  %1792 = mul <8 x i32> %1784, %1774
  %1793 = mul <8 x i32> %1787, %1775
  %1794 = mul <8 x i32> %1790, %1776
  %1795 = add nuw i64 %1772, 32
  %1796 = icmp eq i64 %1795, %1769
  br i1 %1796, label %1797, label %1771, !llvm.loop !1180

1797:                                             ; preds = %1771
  %1798 = mul <8 x i32> %1792, %1791
  %1799 = mul <8 x i32> %1793, %1798
  %1800 = mul <8 x i32> %1794, %1799
  %1801 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1800)
  %1802 = icmp eq i64 %1765, %1769
  br i1 %1802, label %1815, label %1803

1803:                                             ; preds = %1756, %1797
  %1804 = phi i64 [ %1759, %1756 ], [ %1770, %1797 ]
  %1805 = phi i32 [ 1, %1756 ], [ %1801, %1797 ]
  br label %1806

1806:                                             ; preds = %1803, %1806
  %1807 = phi i64 [ %1812, %1806 ], [ %1804, %1803 ]
  %1808 = phi i32 [ %1811, %1806 ], [ %1805, %1803 ]
  %1809 = getelementptr inbounds i32, ptr %11, i64 %1807
  %1810 = load i32, ptr %1809, align 4, !tbaa !6
  %1811 = mul nsw i32 %1810, %1808
  %1812 = add nsw i64 %1807, -1
  %1813 = trunc i64 %1807 to i32
  %1814 = icmp sgt i32 %1813, 0
  br i1 %1814, label %1806, label %1815, !llvm.loop !1181

1815:                                             ; preds = %1806, %1797
  %1816 = phi i32 [ %1801, %1797 ], [ %1811, %1806 ]
  %1817 = and i64 %1766, 4294967295
  %1818 = getelementptr inbounds i32, ptr %6, i64 %1817
  %1819 = load i32, ptr %1818, align 4, !tbaa !6
  %1820 = mul nsw i32 %1819, %1816
  %1821 = add nsw i32 %1820, %1760
  %1822 = icmp sgt i64 %1758, 2
  %1823 = add nsw i64 %1759, -1
  %1824 = add i32 %1757, 1
  br i1 %1822, label %1756, label %1825, !llvm.loop !1182

1825:                                             ; preds = %1815, %1753
  %1826 = phi i32 [ %1755, %1753 ], [ %1821, %1815 ]
  %1827 = icmp slt i32 %1826, %5
  br i1 %1827, label %1830, label %1828

1828:                                             ; preds = %1825
  %1829 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

1830:                                             ; preds = %1825
  %1831 = sext i32 %1826 to i64
  %1832 = getelementptr inbounds float, ptr %1269, i64 %1831
  %1833 = load float, ptr %1832, align 4, !tbaa !163
  %1834 = fptosi float %1833 to i8
  %1835 = load i8, ptr %1271, align 1, !tbaa !12
  %1836 = icmp slt i8 %1834, 0
  %1837 = mul i8 %1834, %1834
  %1838 = sub i8 0, %1837
  %1839 = select i1 %1836, i8 %1838, i8 %1837
  %1840 = mul i8 %1839, %1834
  %1841 = add i8 %1840, %1835
  store i8 %1841, ptr %1271, align 1, !tbaa !12
  %1842 = add nuw nsw i32 %1754, 1
  br i1 %1601, label %1843, label %1893

1843:                                             ; preds = %1830
  %1844 = load i32, ptr %4, align 4, !tbaa !6
  %1845 = load i32, ptr %12, align 4, !tbaa !6
  %1846 = add nsw i32 %1845, -1
  %1847 = icmp slt i32 %1844, %1846
  br i1 %1847, label %1870, label %1848

1848:                                             ; preds = %1843
  %1849 = icmp eq i32 %1844, %1846
  br i1 %1849, label %1850, label %1886

1850:                                             ; preds = %1848
  store i32 0, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1851, ptr %6, align 4, !tbaa !6
  br i1 %1606, label %1893, label %1852

1852:                                             ; preds = %1850, %1880
  %1853 = phi i64 [ %1884, %1880 ], [ 1, %1850 ]
  %1854 = getelementptr inbounds i32, ptr %4, i64 %1853
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %12, i64 %1853
  %1857 = load i32, ptr %1856, align 4, !tbaa !6
  %1858 = add nsw i32 %1857, -1
  %1859 = icmp slt i32 %1855, %1858
  br i1 %1859, label %1860, label %1878

1860:                                             ; preds = %1852
  br i1 %1847, label %1870, label %1861

1861:                                             ; preds = %1860
  %1862 = shl i64 %1853, 32
  %1863 = add i64 %1862, -4294967296
  %1864 = ashr exact i64 %1863, 32
  %1865 = getelementptr inbounds i32, ptr %7, i64 %1864
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = getelementptr inbounds i32, ptr %6, i64 %1853
  %1868 = load i32, ptr %1867, align 4, !tbaa !6
  %1869 = add nsw i32 %1868, %1866
  store i32 %1869, ptr %1867, align 4, !tbaa !6
  br label %1888

1870:                                             ; preds = %1843, %1860
  %1871 = phi i32 [ %1855, %1860 ], [ %1844, %1843 ]
  %1872 = phi ptr [ %1854, %1860 ], [ %4, %1843 ]
  %1873 = phi i64 [ %1853, %1860 ], [ 0, %1843 ]
  %1874 = add nsw i32 %1871, 1
  store i32 %1874, ptr %1872, align 4, !tbaa !6
  %1875 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1876 = load i32, ptr %1875, align 4, !tbaa !6
  %1877 = getelementptr inbounds i32, ptr %6, i64 %1873
  br label %1888

1878:                                             ; preds = %1852
  %1879 = icmp eq i32 %1855, %1858
  br i1 %1879, label %1880, label %1886

1880:                                             ; preds = %1878
  store i32 0, ptr %1854, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %8, i64 %1853
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1853
  store i32 %1882, ptr %1883, align 4, !tbaa !6
  %1884 = add nuw nsw i64 %1853, 1
  %1885 = icmp eq i64 %1884, %1604
  br i1 %1885, label %1893, label %1852, !llvm.loop !1183

1886:                                             ; preds = %1848, %1878
  %1887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

1888:                                             ; preds = %1861, %1870
  %1889 = phi ptr [ %1877, %1870 ], [ %1854, %1861 ]
  %1890 = phi i32 [ %1876, %1870 ], [ 1, %1861 ]
  %1891 = load i32, ptr %1889, align 4, !tbaa !6
  %1892 = add nsw i32 %1891, %1890
  store i32 %1892, ptr %1889, align 4, !tbaa !6
  br label %1893

1893:                                             ; preds = %1880, %1888, %1850, %1830
  %1894 = icmp eq i32 %1842, %5
  br i1 %1894, label %5666, label %1753, !llvm.loop !1184

1895:                                             ; preds = %1281
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2002, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

1897:                                             ; preds = %18
  %1898 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1899 = load ptr, ptr %1898, align 8, !tbaa !10
  %1900 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1901 = load ptr, ptr %1900, align 8, !tbaa !10
  store i16 0, ptr %1901, align 2, !tbaa !79
  %1902 = icmp eq i32 %13, 0
  br i1 %1902, label %1903, label %1911

1903:                                             ; preds = %1897
  %1904 = load float, ptr %1899, align 4, !tbaa !163
  %1905 = fptosi float %1904 to i16
  %1906 = icmp slt i16 %1905, 0
  %1907 = mul i16 %1905, %1905
  %1908 = sub i16 0, %1907
  %1909 = select i1 %1906, i16 %1908, i16 %1907
  %1910 = mul i16 %1909, %1905
  store i16 %1910, ptr %1901, align 2, !tbaa !79
  br label %5666

1911:                                             ; preds = %1897
  switch i32 %1, label %2525 [
    i32 1, label %1912
    i32 0, label %2223
  ]

1912:                                             ; preds = %1911
  %1913 = getelementptr inbounds i32, ptr %3, i64 %19
  %1914 = load i32, ptr %1913, align 4, !tbaa !6
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp sgt i32 %5, 0
  br i1 %1915, label %1926, label %1917

1917:                                             ; preds = %1912
  br i1 %1916, label %1918, label %5666

1918:                                             ; preds = %1917
  %1919 = icmp sgt i32 %13, 1
  %1920 = icmp sgt i32 %13, 0
  %1921 = add i32 %13, -2
  %1922 = zext i32 %1921 to i64
  %1923 = zext i32 %13 to i64
  %1924 = add nuw i32 %5, 1
  %1925 = icmp eq i32 %13, 1
  br label %2078

1926:                                             ; preds = %1912
  br i1 %1916, label %1927, label %5666

1927:                                             ; preds = %1926
  %1928 = icmp sgt i32 %13, 1
  %1929 = icmp sgt i32 %13, 0
  %1930 = add i32 %13, -2
  %1931 = zext i32 %1930 to i64
  %1932 = zext i32 %13 to i64
  %1933 = add nuw i32 %5, 1
  %1934 = icmp eq i32 %13, 1
  br label %1935

1935:                                             ; preds = %1927, %2076
  %1936 = phi i16 [ 0, %1927 ], [ %2026, %2076 ]
  %1937 = phi i32 [ 0, %1927 ], [ %2028, %2076 ]
  %1938 = phi double [ 0.000000e+00, %1927 ], [ %2027, %2076 ]
  %1939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1928, label %1940, label %2009

1940:                                             ; preds = %1935, %1999
  %1941 = phi i32 [ %2008, %1999 ], [ 0, %1935 ]
  %1942 = phi i64 [ %1950, %1999 ], [ %1932, %1935 ]
  %1943 = phi i64 [ %2007, %1999 ], [ %1931, %1935 ]
  %1944 = phi i32 [ %2005, %1999 ], [ %1939, %1935 ]
  %1945 = sub i32 %1930, %1941
  %1946 = tail call i32 @llvm.smin.i32(i32 %1945, i32 0)
  %1947 = sub i32 %1945, %1946
  %1948 = zext i32 %1947 to i64
  %1949 = add nuw nsw i64 %1948, 1
  %1950 = add nsw i64 %1942, -1
  %1951 = icmp ult i32 %1947, 31
  br i1 %1951, label %1987, label %1952

1952:                                             ; preds = %1940
  %1953 = and i64 %1949, 8589934560
  %1954 = sub i64 %1943, %1953
  br label %1955

1955:                                             ; preds = %1955, %1952
  %1956 = phi i64 [ 0, %1952 ], [ %1979, %1955 ]
  %1957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1975, %1955 ]
  %1958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1976, %1955 ]
  %1959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1977, %1955 ]
  %1960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1978, %1955 ]
  %1961 = sub i64 %1943, %1956
  %1962 = getelementptr inbounds i32, ptr %9, i64 %1961
  %1963 = getelementptr inbounds i32, ptr %1962, i64 -7
  %1964 = load <8 x i32>, ptr %1963, align 4, !tbaa !6
  %1965 = shufflevector <8 x i32> %1964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1966 = getelementptr inbounds i32, ptr %1962, i64 -15
  %1967 = load <8 x i32>, ptr %1966, align 4, !tbaa !6
  %1968 = shufflevector <8 x i32> %1967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1969 = getelementptr inbounds i32, ptr %1962, i64 -23
  %1970 = load <8 x i32>, ptr %1969, align 4, !tbaa !6
  %1971 = shufflevector <8 x i32> %1970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1972 = getelementptr inbounds i32, ptr %1962, i64 -31
  %1973 = load <8 x i32>, ptr %1972, align 4, !tbaa !6
  %1974 = shufflevector <8 x i32> %1973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1975 = mul <8 x i32> %1965, %1957
  %1976 = mul <8 x i32> %1968, %1958
  %1977 = mul <8 x i32> %1971, %1959
  %1978 = mul <8 x i32> %1974, %1960
  %1979 = add nuw i64 %1956, 32
  %1980 = icmp eq i64 %1979, %1953
  br i1 %1980, label %1981, label %1955, !llvm.loop !1185

1981:                                             ; preds = %1955
  %1982 = mul <8 x i32> %1976, %1975
  %1983 = mul <8 x i32> %1977, %1982
  %1984 = mul <8 x i32> %1978, %1983
  %1985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1984)
  %1986 = icmp eq i64 %1949, %1953
  br i1 %1986, label %1999, label %1987

1987:                                             ; preds = %1940, %1981
  %1988 = phi i64 [ %1943, %1940 ], [ %1954, %1981 ]
  %1989 = phi i32 [ 1, %1940 ], [ %1985, %1981 ]
  br label %1990

1990:                                             ; preds = %1987, %1990
  %1991 = phi i64 [ %1996, %1990 ], [ %1988, %1987 ]
  %1992 = phi i32 [ %1995, %1990 ], [ %1989, %1987 ]
  %1993 = getelementptr inbounds i32, ptr %9, i64 %1991
  %1994 = load i32, ptr %1993, align 4, !tbaa !6
  %1995 = mul nsw i32 %1994, %1992
  %1996 = add nsw i64 %1991, -1
  %1997 = trunc i64 %1991 to i32
  %1998 = icmp sgt i32 %1997, 0
  br i1 %1998, label %1990, label %1999, !llvm.loop !1186

1999:                                             ; preds = %1990, %1981
  %2000 = phi i32 [ %1985, %1981 ], [ %1995, %1990 ]
  %2001 = and i64 %1950, 4294967295
  %2002 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = mul nsw i32 %2003, %2000
  %2005 = add nsw i32 %2004, %1944
  %2006 = icmp sgt i64 %1942, 2
  %2007 = add nsw i64 %1943, -1
  %2008 = add i32 %1941, 1
  br i1 %2006, label %1940, label %2009, !llvm.loop !1187

2009:                                             ; preds = %1999, %1935
  %2010 = phi i32 [ %1939, %1935 ], [ %2005, %1999 ]
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds double, ptr %2, i64 %2011
  %2013 = load double, ptr %2012, align 8, !tbaa !19
  %2014 = getelementptr inbounds float, ptr %1899, i64 %2011
  %2015 = load float, ptr %2014, align 4, !tbaa !163
  %2016 = fptosi float %2015 to i16
  %2017 = sitofp i16 %1936 to double
  %2018 = sitofp i16 %2016 to double
  %2019 = fmul fast double %2013, %2018
  %2020 = fcmp fast olt double %2019, 0.000000e+00
  %2021 = fneg fast double %2019
  %2022 = select nnan ninf i1 %2020, double %2021, double %2019
  %2023 = fmul fast double %2019, %2019
  %2024 = fmul fast double %2023, %2022
  %2025 = fadd fast double %2024, %2017
  %2026 = fptosi double %2025 to i16
  %2027 = fadd fast double %2013, %1938
  %2028 = add nuw nsw i32 %1937, 1
  br i1 %1929, label %2029, label %2076

2029:                                             ; preds = %2009
  %2030 = load i32, ptr %4, align 4, !tbaa !6
  %2031 = load i32, ptr %12, align 4, !tbaa !6
  %2032 = add nsw i32 %2031, -1
  %2033 = icmp slt i32 %2030, %2032
  br i1 %2033, label %2053, label %2034

2034:                                             ; preds = %2029
  %2035 = icmp eq i32 %2030, %2032
  br i1 %2035, label %2036, label %2069

2036:                                             ; preds = %2034
  store i32 0, ptr %4, align 4, !tbaa !6
  %2037 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2037, ptr %6, align 4, !tbaa !6
  br i1 %1934, label %2076, label %2038

2038:                                             ; preds = %2036, %2063
  %2039 = phi i64 [ %2067, %2063 ], [ 1, %2036 ]
  %2040 = getelementptr inbounds i32, ptr %4, i64 %2039
  %2041 = load i32, ptr %2040, align 4, !tbaa !6
  %2042 = getelementptr inbounds i32, ptr %12, i64 %2039
  %2043 = load i32, ptr %2042, align 4, !tbaa !6
  %2044 = add nsw i32 %2043, -1
  %2045 = icmp slt i32 %2041, %2044
  br i1 %2045, label %2046, label %2061

2046:                                             ; preds = %2038
  br i1 %2033, label %2053, label %2047

2047:                                             ; preds = %2046
  %2048 = getelementptr inbounds i32, ptr %7, i64 %2039
  %2049 = load i32, ptr %2048, align 4, !tbaa !6
  %2050 = getelementptr inbounds i32, ptr %6, i64 %2039
  %2051 = load i32, ptr %2050, align 4, !tbaa !6
  %2052 = add nsw i32 %2051, %2049
  store i32 %2052, ptr %2050, align 4, !tbaa !6
  br label %2071

2053:                                             ; preds = %2029, %2046
  %2054 = phi i32 [ %2041, %2046 ], [ %2030, %2029 ]
  %2055 = phi ptr [ %2040, %2046 ], [ %4, %2029 ]
  %2056 = phi i64 [ %2039, %2046 ], [ 0, %2029 ]
  %2057 = add nsw i32 %2054, 1
  store i32 %2057, ptr %2055, align 4, !tbaa !6
  %2058 = getelementptr inbounds i32, ptr %7, i64 %2056
  %2059 = load i32, ptr %2058, align 4, !tbaa !6
  %2060 = getelementptr inbounds i32, ptr %6, i64 %2056
  br label %2071

2061:                                             ; preds = %2038
  %2062 = icmp eq i32 %2041, %2044
  br i1 %2062, label %2063, label %2069

2063:                                             ; preds = %2061
  store i32 0, ptr %2040, align 4, !tbaa !6
  %2064 = getelementptr inbounds i32, ptr %8, i64 %2039
  %2065 = load i32, ptr %2064, align 4, !tbaa !6
  %2066 = getelementptr inbounds i32, ptr %6, i64 %2039
  store i32 %2065, ptr %2066, align 4, !tbaa !6
  %2067 = add nuw nsw i64 %2039, 1
  %2068 = icmp eq i64 %2067, %1932
  br i1 %2068, label %2076, label %2038, !llvm.loop !1188

2069:                                             ; preds = %2034, %2061
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  %2070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2071:                                             ; preds = %2047, %2053
  %2072 = phi ptr [ %2060, %2053 ], [ %2040, %2047 ]
  %2073 = phi i32 [ %2059, %2053 ], [ 1, %2047 ]
  %2074 = load i32, ptr %2072, align 4, !tbaa !6
  %2075 = add nsw i32 %2074, %2073
  store i32 %2075, ptr %2072, align 4, !tbaa !6
  br label %2076

2076:                                             ; preds = %2063, %2071, %2036, %2009
  %2077 = icmp eq i32 %2028, %5
  br i1 %2077, label %5660, label %1935, !llvm.loop !1189

2078:                                             ; preds = %1918, %2221
  %2079 = phi i16 [ 0, %1918 ], [ %2169, %2221 ]
  %2080 = phi i32 [ 0, %1918 ], [ %2170, %2221 ]
  %2081 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1919, label %2082, label %2151

2082:                                             ; preds = %2078, %2141
  %2083 = phi i32 [ %2150, %2141 ], [ 0, %2078 ]
  %2084 = phi i64 [ %2092, %2141 ], [ %1923, %2078 ]
  %2085 = phi i64 [ %2149, %2141 ], [ %1922, %2078 ]
  %2086 = phi i32 [ %2147, %2141 ], [ %2081, %2078 ]
  %2087 = sub i32 %1921, %2083
  %2088 = tail call i32 @llvm.smin.i32(i32 %2087, i32 0)
  %2089 = sub i32 %2087, %2088
  %2090 = zext i32 %2089 to i64
  %2091 = add nuw nsw i64 %2090, 1
  %2092 = add nsw i64 %2084, -1
  %2093 = icmp ult i32 %2089, 31
  br i1 %2093, label %2129, label %2094

2094:                                             ; preds = %2082
  %2095 = and i64 %2091, 8589934560
  %2096 = sub i64 %2085, %2095
  br label %2097

2097:                                             ; preds = %2097, %2094
  %2098 = phi i64 [ 0, %2094 ], [ %2121, %2097 ]
  %2099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2117, %2097 ]
  %2100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2118, %2097 ]
  %2101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2119, %2097 ]
  %2102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2120, %2097 ]
  %2103 = sub i64 %2085, %2098
  %2104 = getelementptr inbounds i32, ptr %11, i64 %2103
  %2105 = getelementptr inbounds i32, ptr %2104, i64 -7
  %2106 = load <8 x i32>, ptr %2105, align 4, !tbaa !6
  %2107 = shufflevector <8 x i32> %2106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2108 = getelementptr inbounds i32, ptr %2104, i64 -15
  %2109 = load <8 x i32>, ptr %2108, align 4, !tbaa !6
  %2110 = shufflevector <8 x i32> %2109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2111 = getelementptr inbounds i32, ptr %2104, i64 -23
  %2112 = load <8 x i32>, ptr %2111, align 4, !tbaa !6
  %2113 = shufflevector <8 x i32> %2112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2114 = getelementptr inbounds i32, ptr %2104, i64 -31
  %2115 = load <8 x i32>, ptr %2114, align 4, !tbaa !6
  %2116 = shufflevector <8 x i32> %2115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2117 = mul <8 x i32> %2107, %2099
  %2118 = mul <8 x i32> %2110, %2100
  %2119 = mul <8 x i32> %2113, %2101
  %2120 = mul <8 x i32> %2116, %2102
  %2121 = add nuw i64 %2098, 32
  %2122 = icmp eq i64 %2121, %2095
  br i1 %2122, label %2123, label %2097, !llvm.loop !1190

2123:                                             ; preds = %2097
  %2124 = mul <8 x i32> %2118, %2117
  %2125 = mul <8 x i32> %2119, %2124
  %2126 = mul <8 x i32> %2120, %2125
  %2127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2126)
  %2128 = icmp eq i64 %2091, %2095
  br i1 %2128, label %2141, label %2129

2129:                                             ; preds = %2082, %2123
  %2130 = phi i64 [ %2085, %2082 ], [ %2096, %2123 ]
  %2131 = phi i32 [ 1, %2082 ], [ %2127, %2123 ]
  br label %2132

2132:                                             ; preds = %2129, %2132
  %2133 = phi i64 [ %2138, %2132 ], [ %2130, %2129 ]
  %2134 = phi i32 [ %2137, %2132 ], [ %2131, %2129 ]
  %2135 = getelementptr inbounds i32, ptr %11, i64 %2133
  %2136 = load i32, ptr %2135, align 4, !tbaa !6
  %2137 = mul nsw i32 %2136, %2134
  %2138 = add nsw i64 %2133, -1
  %2139 = trunc i64 %2133 to i32
  %2140 = icmp sgt i32 %2139, 0
  br i1 %2140, label %2132, label %2141, !llvm.loop !1191

2141:                                             ; preds = %2132, %2123
  %2142 = phi i32 [ %2127, %2123 ], [ %2137, %2132 ]
  %2143 = and i64 %2092, 4294967295
  %2144 = getelementptr inbounds i32, ptr %6, i64 %2143
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = mul nsw i32 %2145, %2142
  %2147 = add nsw i32 %2146, %2086
  %2148 = icmp sgt i64 %2084, 2
  %2149 = add nsw i64 %2085, -1
  %2150 = add i32 %2083, 1
  br i1 %2148, label %2082, label %2151, !llvm.loop !1192

2151:                                             ; preds = %2141, %2078
  %2152 = phi i32 [ %2081, %2078 ], [ %2147, %2141 ]
  %2153 = icmp slt i32 %2152, %5
  br i1 %2153, label %2156, label %2154

2154:                                             ; preds = %2151
  %2155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

2156:                                             ; preds = %2151
  %2157 = sext i32 %2152 to i64
  %2158 = getelementptr inbounds float, ptr %1899, i64 %2157
  %2159 = load float, ptr %2158, align 4, !tbaa !163
  %2160 = fptosi float %2159 to i16
  %2161 = sitofp i16 %2079 to double
  %2162 = sitofp i16 %2160 to double
  %2163 = icmp slt i16 %2160, 0
  %2164 = fneg fast double %2162
  %2165 = select i1 %2163, double %2164, double %2162
  %2166 = fmul fast double %2162, %2162
  %2167 = fmul fast double %2166, %2165
  %2168 = fadd fast double %2167, %2161
  %2169 = fptosi double %2168 to i16
  store i16 %2169, ptr %1901, align 2, !tbaa !79
  %2170 = add nuw nsw i32 %2080, 1
  br i1 %1920, label %2171, label %2221

2171:                                             ; preds = %2156
  %2172 = load i32, ptr %4, align 4, !tbaa !6
  %2173 = load i32, ptr %12, align 4, !tbaa !6
  %2174 = add nsw i32 %2173, -1
  %2175 = icmp slt i32 %2172, %2174
  br i1 %2175, label %2198, label %2176

2176:                                             ; preds = %2171
  %2177 = icmp eq i32 %2172, %2174
  br i1 %2177, label %2178, label %2214

2178:                                             ; preds = %2176
  store i32 0, ptr %4, align 4, !tbaa !6
  %2179 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2179, ptr %6, align 4, !tbaa !6
  br i1 %1925, label %2221, label %2180

2180:                                             ; preds = %2178, %2208
  %2181 = phi i64 [ %2212, %2208 ], [ 1, %2178 ]
  %2182 = getelementptr inbounds i32, ptr %4, i64 %2181
  %2183 = load i32, ptr %2182, align 4, !tbaa !6
  %2184 = getelementptr inbounds i32, ptr %12, i64 %2181
  %2185 = load i32, ptr %2184, align 4, !tbaa !6
  %2186 = add nsw i32 %2185, -1
  %2187 = icmp slt i32 %2183, %2186
  br i1 %2187, label %2188, label %2206

2188:                                             ; preds = %2180
  br i1 %2175, label %2198, label %2189

2189:                                             ; preds = %2188
  %2190 = shl i64 %2181, 32
  %2191 = add i64 %2190, -4294967296
  %2192 = ashr exact i64 %2191, 32
  %2193 = getelementptr inbounds i32, ptr %7, i64 %2192
  %2194 = load i32, ptr %2193, align 4, !tbaa !6
  %2195 = getelementptr inbounds i32, ptr %6, i64 %2181
  %2196 = load i32, ptr %2195, align 4, !tbaa !6
  %2197 = add nsw i32 %2196, %2194
  store i32 %2197, ptr %2195, align 4, !tbaa !6
  br label %2216

2198:                                             ; preds = %2171, %2188
  %2199 = phi i32 [ %2183, %2188 ], [ %2172, %2171 ]
  %2200 = phi ptr [ %2182, %2188 ], [ %4, %2171 ]
  %2201 = phi i64 [ %2181, %2188 ], [ 0, %2171 ]
  %2202 = add nsw i32 %2199, 1
  store i32 %2202, ptr %2200, align 4, !tbaa !6
  %2203 = getelementptr inbounds i32, ptr %7, i64 %2201
  %2204 = load i32, ptr %2203, align 4, !tbaa !6
  %2205 = getelementptr inbounds i32, ptr %6, i64 %2201
  br label %2216

2206:                                             ; preds = %2180
  %2207 = icmp eq i32 %2183, %2186
  br i1 %2207, label %2208, label %2214

2208:                                             ; preds = %2206
  store i32 0, ptr %2182, align 4, !tbaa !6
  %2209 = getelementptr inbounds i32, ptr %8, i64 %2181
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = getelementptr inbounds i32, ptr %6, i64 %2181
  store i32 %2210, ptr %2211, align 4, !tbaa !6
  %2212 = add nuw nsw i64 %2181, 1
  %2213 = icmp eq i64 %2212, %1923
  br i1 %2213, label %2221, label %2180, !llvm.loop !1193

2214:                                             ; preds = %2176, %2206
  %2215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2216:                                             ; preds = %2189, %2198
  %2217 = phi ptr [ %2205, %2198 ], [ %2182, %2189 ]
  %2218 = phi i32 [ %2204, %2198 ], [ 1, %2189 ]
  %2219 = load i32, ptr %2217, align 4, !tbaa !6
  %2220 = add nsw i32 %2219, %2218
  store i32 %2220, ptr %2217, align 4, !tbaa !6
  br label %2221

2221:                                             ; preds = %2208, %2216, %2178, %2156
  %2222 = icmp eq i32 %2170, %5
  br i1 %2222, label %5666, label %2078, !llvm.loop !1194

2223:                                             ; preds = %1911
  %2224 = getelementptr inbounds i32, ptr %3, i64 %19
  %2225 = load i32, ptr %2224, align 4, !tbaa !6
  %2226 = icmp eq i32 %2225, 0
  %2227 = icmp sgt i32 %5, 0
  br i1 %2226, label %2237, label %2228

2228:                                             ; preds = %2223
  br i1 %2227, label %2229, label %5666

2229:                                             ; preds = %2228
  %2230 = icmp sgt i32 %13, 1
  %2231 = icmp sgt i32 %13, 0
  %2232 = add i32 %13, -2
  %2233 = zext i32 %2232 to i64
  %2234 = zext i32 %13 to i64
  %2235 = add nuw i32 %5, 1
  %2236 = icmp eq i32 %13, 1
  br label %2383

2237:                                             ; preds = %2223
  br i1 %2227, label %2238, label %5666

2238:                                             ; preds = %2237
  %2239 = icmp sgt i32 %13, 1
  %2240 = icmp sgt i32 %13, 0
  %2241 = add i32 %13, -2
  %2242 = zext i32 %2241 to i64
  %2243 = zext i32 %13 to i64
  %2244 = add nuw i32 %5, 1
  %2245 = icmp eq i32 %13, 1
  br label %2246

2246:                                             ; preds = %2238, %2381
  %2247 = phi i16 [ 0, %2238 ], [ %2331, %2381 ]
  %2248 = phi i32 [ 0, %2238 ], [ %2333, %2381 ]
  %2249 = phi double [ 0.000000e+00, %2238 ], [ %2332, %2381 ]
  %2250 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2239, label %2251, label %2320

2251:                                             ; preds = %2246, %2310
  %2252 = phi i32 [ %2319, %2310 ], [ 0, %2246 ]
  %2253 = phi i64 [ %2261, %2310 ], [ %2243, %2246 ]
  %2254 = phi i64 [ %2318, %2310 ], [ %2242, %2246 ]
  %2255 = phi i32 [ %2316, %2310 ], [ %2250, %2246 ]
  %2256 = sub i32 %2241, %2252
  %2257 = tail call i32 @llvm.smin.i32(i32 %2256, i32 0)
  %2258 = sub i32 %2256, %2257
  %2259 = zext i32 %2258 to i64
  %2260 = add nuw nsw i64 %2259, 1
  %2261 = add nsw i64 %2253, -1
  %2262 = icmp ult i32 %2258, 31
  br i1 %2262, label %2298, label %2263

2263:                                             ; preds = %2251
  %2264 = and i64 %2260, 8589934560
  %2265 = sub i64 %2254, %2264
  br label %2266

2266:                                             ; preds = %2266, %2263
  %2267 = phi i64 [ 0, %2263 ], [ %2290, %2266 ]
  %2268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2286, %2266 ]
  %2269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2287, %2266 ]
  %2270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2288, %2266 ]
  %2271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2289, %2266 ]
  %2272 = sub i64 %2254, %2267
  %2273 = getelementptr inbounds i32, ptr %9, i64 %2272
  %2274 = getelementptr inbounds i32, ptr %2273, i64 -7
  %2275 = load <8 x i32>, ptr %2274, align 4, !tbaa !6
  %2276 = shufflevector <8 x i32> %2275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2277 = getelementptr inbounds i32, ptr %2273, i64 -15
  %2278 = load <8 x i32>, ptr %2277, align 4, !tbaa !6
  %2279 = shufflevector <8 x i32> %2278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2280 = getelementptr inbounds i32, ptr %2273, i64 -23
  %2281 = load <8 x i32>, ptr %2280, align 4, !tbaa !6
  %2282 = shufflevector <8 x i32> %2281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2283 = getelementptr inbounds i32, ptr %2273, i64 -31
  %2284 = load <8 x i32>, ptr %2283, align 4, !tbaa !6
  %2285 = shufflevector <8 x i32> %2284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2286 = mul <8 x i32> %2276, %2268
  %2287 = mul <8 x i32> %2279, %2269
  %2288 = mul <8 x i32> %2282, %2270
  %2289 = mul <8 x i32> %2285, %2271
  %2290 = add nuw i64 %2267, 32
  %2291 = icmp eq i64 %2290, %2264
  br i1 %2291, label %2292, label %2266, !llvm.loop !1195

2292:                                             ; preds = %2266
  %2293 = mul <8 x i32> %2287, %2286
  %2294 = mul <8 x i32> %2288, %2293
  %2295 = mul <8 x i32> %2289, %2294
  %2296 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2295)
  %2297 = icmp eq i64 %2260, %2264
  br i1 %2297, label %2310, label %2298

2298:                                             ; preds = %2251, %2292
  %2299 = phi i64 [ %2254, %2251 ], [ %2265, %2292 ]
  %2300 = phi i32 [ 1, %2251 ], [ %2296, %2292 ]
  br label %2301

2301:                                             ; preds = %2298, %2301
  %2302 = phi i64 [ %2307, %2301 ], [ %2299, %2298 ]
  %2303 = phi i32 [ %2306, %2301 ], [ %2300, %2298 ]
  %2304 = getelementptr inbounds i32, ptr %9, i64 %2302
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = mul nsw i32 %2305, %2303
  %2307 = add nsw i64 %2302, -1
  %2308 = trunc i64 %2302 to i32
  %2309 = icmp sgt i32 %2308, 0
  br i1 %2309, label %2301, label %2310, !llvm.loop !1196

2310:                                             ; preds = %2301, %2292
  %2311 = phi i32 [ %2296, %2292 ], [ %2306, %2301 ]
  %2312 = and i64 %2261, 4294967295
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2312
  %2314 = load i32, ptr %2313, align 4, !tbaa !6
  %2315 = mul nsw i32 %2314, %2311
  %2316 = add nsw i32 %2315, %2255
  %2317 = icmp sgt i64 %2253, 2
  %2318 = add nsw i64 %2254, -1
  %2319 = add i32 %2252, 1
  br i1 %2317, label %2251, label %2320, !llvm.loop !1197

2320:                                             ; preds = %2310, %2246
  %2321 = phi i32 [ %2250, %2246 ], [ %2316, %2310 ]
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds float, ptr %1899, i64 %2322
  %2324 = load float, ptr %2323, align 4, !tbaa !163
  %2325 = fptosi float %2324 to i16
  %2326 = icmp slt i16 %2325, 0
  %2327 = mul i16 %2325, %2325
  %2328 = sub i16 0, %2327
  %2329 = select i1 %2326, i16 %2328, i16 %2327
  %2330 = mul i16 %2329, %2325
  %2331 = add i16 %2330, %2247
  %2332 = fadd fast double %2249, 1.000000e+00
  %2333 = add nuw nsw i32 %2248, 1
  br i1 %2240, label %2334, label %2381

2334:                                             ; preds = %2320
  %2335 = load i32, ptr %4, align 4, !tbaa !6
  %2336 = load i32, ptr %12, align 4, !tbaa !6
  %2337 = add nsw i32 %2336, -1
  %2338 = icmp slt i32 %2335, %2337
  br i1 %2338, label %2358, label %2339

2339:                                             ; preds = %2334
  %2340 = icmp eq i32 %2335, %2337
  br i1 %2340, label %2341, label %2374

2341:                                             ; preds = %2339
  store i32 0, ptr %4, align 4, !tbaa !6
  %2342 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2342, ptr %6, align 4, !tbaa !6
  br i1 %2245, label %2381, label %2343

2343:                                             ; preds = %2341, %2368
  %2344 = phi i64 [ %2372, %2368 ], [ 1, %2341 ]
  %2345 = getelementptr inbounds i32, ptr %4, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !6
  %2347 = getelementptr inbounds i32, ptr %12, i64 %2344
  %2348 = load i32, ptr %2347, align 4, !tbaa !6
  %2349 = add nsw i32 %2348, -1
  %2350 = icmp slt i32 %2346, %2349
  br i1 %2350, label %2351, label %2366

2351:                                             ; preds = %2343
  br i1 %2338, label %2358, label %2352

2352:                                             ; preds = %2351
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2344
  %2354 = load i32, ptr %2353, align 4, !tbaa !6
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2356 = load i32, ptr %2355, align 4, !tbaa !6
  %2357 = add nsw i32 %2356, %2354
  store i32 %2357, ptr %2355, align 4, !tbaa !6
  br label %2376

2358:                                             ; preds = %2334, %2351
  %2359 = phi i32 [ %2346, %2351 ], [ %2335, %2334 ]
  %2360 = phi ptr [ %2345, %2351 ], [ %4, %2334 ]
  %2361 = phi i64 [ %2344, %2351 ], [ 0, %2334 ]
  %2362 = add nsw i32 %2359, 1
  store i32 %2362, ptr %2360, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = getelementptr inbounds i32, ptr %6, i64 %2361
  br label %2376

2366:                                             ; preds = %2343
  %2367 = icmp eq i32 %2346, %2349
  br i1 %2367, label %2368, label %2374

2368:                                             ; preds = %2366
  store i32 0, ptr %2345, align 4, !tbaa !6
  %2369 = getelementptr inbounds i32, ptr %8, i64 %2344
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2344
  store i32 %2370, ptr %2371, align 4, !tbaa !6
  %2372 = add nuw nsw i64 %2344, 1
  %2373 = icmp eq i64 %2372, %2243
  br i1 %2373, label %2381, label %2343, !llvm.loop !1198

2374:                                             ; preds = %2339, %2366
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  %2375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2376:                                             ; preds = %2352, %2358
  %2377 = phi ptr [ %2365, %2358 ], [ %2345, %2352 ]
  %2378 = phi i32 [ %2364, %2358 ], [ 1, %2352 ]
  %2379 = load i32, ptr %2377, align 4, !tbaa !6
  %2380 = add nsw i32 %2379, %2378
  store i32 %2380, ptr %2377, align 4, !tbaa !6
  br label %2381

2381:                                             ; preds = %2368, %2376, %2341, %2320
  %2382 = icmp eq i32 %2333, %5
  br i1 %2382, label %5661, label %2246, !llvm.loop !1199

2383:                                             ; preds = %2229, %2523
  %2384 = phi i16 [ 0, %2229 ], [ %2471, %2523 ]
  %2385 = phi i32 [ 0, %2229 ], [ %2472, %2523 ]
  %2386 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2230, label %2387, label %2456

2387:                                             ; preds = %2383, %2446
  %2388 = phi i32 [ %2455, %2446 ], [ 0, %2383 ]
  %2389 = phi i64 [ %2397, %2446 ], [ %2234, %2383 ]
  %2390 = phi i64 [ %2454, %2446 ], [ %2233, %2383 ]
  %2391 = phi i32 [ %2452, %2446 ], [ %2386, %2383 ]
  %2392 = sub i32 %2232, %2388
  %2393 = tail call i32 @llvm.smin.i32(i32 %2392, i32 0)
  %2394 = sub i32 %2392, %2393
  %2395 = zext i32 %2394 to i64
  %2396 = add nuw nsw i64 %2395, 1
  %2397 = add nsw i64 %2389, -1
  %2398 = icmp ult i32 %2394, 31
  br i1 %2398, label %2434, label %2399

2399:                                             ; preds = %2387
  %2400 = and i64 %2396, 8589934560
  %2401 = sub i64 %2390, %2400
  br label %2402

2402:                                             ; preds = %2402, %2399
  %2403 = phi i64 [ 0, %2399 ], [ %2426, %2402 ]
  %2404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2422, %2402 ]
  %2405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2423, %2402 ]
  %2406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2424, %2402 ]
  %2407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2425, %2402 ]
  %2408 = sub i64 %2390, %2403
  %2409 = getelementptr inbounds i32, ptr %11, i64 %2408
  %2410 = getelementptr inbounds i32, ptr %2409, i64 -7
  %2411 = load <8 x i32>, ptr %2410, align 4, !tbaa !6
  %2412 = shufflevector <8 x i32> %2411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2413 = getelementptr inbounds i32, ptr %2409, i64 -15
  %2414 = load <8 x i32>, ptr %2413, align 4, !tbaa !6
  %2415 = shufflevector <8 x i32> %2414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2416 = getelementptr inbounds i32, ptr %2409, i64 -23
  %2417 = load <8 x i32>, ptr %2416, align 4, !tbaa !6
  %2418 = shufflevector <8 x i32> %2417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2419 = getelementptr inbounds i32, ptr %2409, i64 -31
  %2420 = load <8 x i32>, ptr %2419, align 4, !tbaa !6
  %2421 = shufflevector <8 x i32> %2420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2422 = mul <8 x i32> %2412, %2404
  %2423 = mul <8 x i32> %2415, %2405
  %2424 = mul <8 x i32> %2418, %2406
  %2425 = mul <8 x i32> %2421, %2407
  %2426 = add nuw i64 %2403, 32
  %2427 = icmp eq i64 %2426, %2400
  br i1 %2427, label %2428, label %2402, !llvm.loop !1200

2428:                                             ; preds = %2402
  %2429 = mul <8 x i32> %2423, %2422
  %2430 = mul <8 x i32> %2424, %2429
  %2431 = mul <8 x i32> %2425, %2430
  %2432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2431)
  %2433 = icmp eq i64 %2396, %2400
  br i1 %2433, label %2446, label %2434

2434:                                             ; preds = %2387, %2428
  %2435 = phi i64 [ %2390, %2387 ], [ %2401, %2428 ]
  %2436 = phi i32 [ 1, %2387 ], [ %2432, %2428 ]
  br label %2437

2437:                                             ; preds = %2434, %2437
  %2438 = phi i64 [ %2443, %2437 ], [ %2435, %2434 ]
  %2439 = phi i32 [ %2442, %2437 ], [ %2436, %2434 ]
  %2440 = getelementptr inbounds i32, ptr %11, i64 %2438
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = mul nsw i32 %2441, %2439
  %2443 = add nsw i64 %2438, -1
  %2444 = trunc i64 %2438 to i32
  %2445 = icmp sgt i32 %2444, 0
  br i1 %2445, label %2437, label %2446, !llvm.loop !1201

2446:                                             ; preds = %2437, %2428
  %2447 = phi i32 [ %2432, %2428 ], [ %2442, %2437 ]
  %2448 = and i64 %2397, 4294967295
  %2449 = getelementptr inbounds i32, ptr %6, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = mul nsw i32 %2450, %2447
  %2452 = add nsw i32 %2451, %2391
  %2453 = icmp sgt i64 %2389, 2
  %2454 = add nsw i64 %2390, -1
  %2455 = add i32 %2388, 1
  br i1 %2453, label %2387, label %2456, !llvm.loop !1202

2456:                                             ; preds = %2446, %2383
  %2457 = phi i32 [ %2386, %2383 ], [ %2452, %2446 ]
  %2458 = icmp slt i32 %2457, %5
  br i1 %2458, label %2461, label %2459

2459:                                             ; preds = %2456
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

2461:                                             ; preds = %2456
  %2462 = sext i32 %2457 to i64
  %2463 = getelementptr inbounds float, ptr %1899, i64 %2462
  %2464 = load float, ptr %2463, align 4, !tbaa !163
  %2465 = fptosi float %2464 to i16
  %2466 = icmp slt i16 %2465, 0
  %2467 = mul i16 %2465, %2465
  %2468 = sub i16 0, %2467
  %2469 = select i1 %2466, i16 %2468, i16 %2467
  %2470 = mul i16 %2469, %2465
  %2471 = add i16 %2470, %2384
  store i16 %2471, ptr %1901, align 2, !tbaa !79
  %2472 = add nuw nsw i32 %2385, 1
  br i1 %2231, label %2473, label %2523

2473:                                             ; preds = %2461
  %2474 = load i32, ptr %4, align 4, !tbaa !6
  %2475 = load i32, ptr %12, align 4, !tbaa !6
  %2476 = add nsw i32 %2475, -1
  %2477 = icmp slt i32 %2474, %2476
  br i1 %2477, label %2500, label %2478

2478:                                             ; preds = %2473
  %2479 = icmp eq i32 %2474, %2476
  br i1 %2479, label %2480, label %2516

2480:                                             ; preds = %2478
  store i32 0, ptr %4, align 4, !tbaa !6
  %2481 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2481, ptr %6, align 4, !tbaa !6
  br i1 %2236, label %2523, label %2482

2482:                                             ; preds = %2480, %2510
  %2483 = phi i64 [ %2514, %2510 ], [ 1, %2480 ]
  %2484 = getelementptr inbounds i32, ptr %4, i64 %2483
  %2485 = load i32, ptr %2484, align 4, !tbaa !6
  %2486 = getelementptr inbounds i32, ptr %12, i64 %2483
  %2487 = load i32, ptr %2486, align 4, !tbaa !6
  %2488 = add nsw i32 %2487, -1
  %2489 = icmp slt i32 %2485, %2488
  br i1 %2489, label %2490, label %2508

2490:                                             ; preds = %2482
  br i1 %2477, label %2500, label %2491

2491:                                             ; preds = %2490
  %2492 = shl i64 %2483, 32
  %2493 = add i64 %2492, -4294967296
  %2494 = ashr exact i64 %2493, 32
  %2495 = getelementptr inbounds i32, ptr %7, i64 %2494
  %2496 = load i32, ptr %2495, align 4, !tbaa !6
  %2497 = getelementptr inbounds i32, ptr %6, i64 %2483
  %2498 = load i32, ptr %2497, align 4, !tbaa !6
  %2499 = add nsw i32 %2498, %2496
  store i32 %2499, ptr %2497, align 4, !tbaa !6
  br label %2518

2500:                                             ; preds = %2473, %2490
  %2501 = phi i32 [ %2485, %2490 ], [ %2474, %2473 ]
  %2502 = phi ptr [ %2484, %2490 ], [ %4, %2473 ]
  %2503 = phi i64 [ %2483, %2490 ], [ 0, %2473 ]
  %2504 = add nsw i32 %2501, 1
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  %2505 = getelementptr inbounds i32, ptr %7, i64 %2503
  %2506 = load i32, ptr %2505, align 4, !tbaa !6
  %2507 = getelementptr inbounds i32, ptr %6, i64 %2503
  br label %2518

2508:                                             ; preds = %2482
  %2509 = icmp eq i32 %2485, %2488
  br i1 %2509, label %2510, label %2516

2510:                                             ; preds = %2508
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2511 = getelementptr inbounds i32, ptr %8, i64 %2483
  %2512 = load i32, ptr %2511, align 4, !tbaa !6
  %2513 = getelementptr inbounds i32, ptr %6, i64 %2483
  store i32 %2512, ptr %2513, align 4, !tbaa !6
  %2514 = add nuw nsw i64 %2483, 1
  %2515 = icmp eq i64 %2514, %2234
  br i1 %2515, label %2523, label %2482, !llvm.loop !1203

2516:                                             ; preds = %2478, %2508
  %2517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2518:                                             ; preds = %2491, %2500
  %2519 = phi ptr [ %2507, %2500 ], [ %2484, %2491 ]
  %2520 = phi i32 [ %2506, %2500 ], [ 1, %2491 ]
  %2521 = load i32, ptr %2519, align 4, !tbaa !6
  %2522 = add nsw i32 %2521, %2520
  store i32 %2522, ptr %2519, align 4, !tbaa !6
  br label %2523

2523:                                             ; preds = %2510, %2518, %2480, %2461
  %2524 = icmp eq i32 %2472, %5
  br i1 %2524, label %5666, label %2383, !llvm.loop !1204

2525:                                             ; preds = %1911
  %2526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

2527:                                             ; preds = %18
  %2528 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2529 = load ptr, ptr %2528, align 8, !tbaa !10
  %2530 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2531 = load ptr, ptr %2530, align 8, !tbaa !10
  store i32 0, ptr %2531, align 4, !tbaa !6
  %2532 = icmp eq i32 %13, 0
  br i1 %2532, label %2533, label %2541

2533:                                             ; preds = %2527
  %2534 = load float, ptr %2529, align 4, !tbaa !163
  %2535 = fptosi float %2534 to i32
  %2536 = icmp slt i32 %2535, 0
  %2537 = mul nsw i32 %2535, %2535
  %2538 = sub nsw i32 0, %2537
  %2539 = select i1 %2536, i32 %2538, i32 %2537
  %2540 = mul i32 %2539, %2535
  store i32 %2540, ptr %2531, align 4, !tbaa !6
  br label %5666

2541:                                             ; preds = %2527
  switch i32 %1, label %3155 [
    i32 1, label %2542
    i32 0, label %2853
  ]

2542:                                             ; preds = %2541
  %2543 = getelementptr inbounds i32, ptr %3, i64 %19
  %2544 = load i32, ptr %2543, align 4, !tbaa !6
  %2545 = icmp eq i32 %2544, 0
  %2546 = icmp sgt i32 %5, 0
  br i1 %2545, label %2556, label %2547

2547:                                             ; preds = %2542
  br i1 %2546, label %2548, label %5666

2548:                                             ; preds = %2547
  %2549 = icmp sgt i32 %13, 1
  %2550 = icmp sgt i32 %13, 0
  %2551 = add i32 %13, -2
  %2552 = zext i32 %2551 to i64
  %2553 = zext i32 %13 to i64
  %2554 = add nuw i32 %5, 1
  %2555 = icmp eq i32 %13, 1
  br label %2708

2556:                                             ; preds = %2542
  br i1 %2546, label %2557, label %5666

2557:                                             ; preds = %2556
  %2558 = icmp sgt i32 %13, 1
  %2559 = icmp sgt i32 %13, 0
  %2560 = add i32 %13, -2
  %2561 = zext i32 %2560 to i64
  %2562 = zext i32 %13 to i64
  %2563 = add nuw i32 %5, 1
  %2564 = icmp eq i32 %13, 1
  br label %2565

2565:                                             ; preds = %2557, %2706
  %2566 = phi i32 [ 0, %2557 ], [ %2658, %2706 ]
  %2567 = phi double [ 0.000000e+00, %2557 ], [ %2657, %2706 ]
  %2568 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2558, label %2569, label %2638

2569:                                             ; preds = %2565, %2628
  %2570 = phi i32 [ %2637, %2628 ], [ 0, %2565 ]
  %2571 = phi i64 [ %2579, %2628 ], [ %2562, %2565 ]
  %2572 = phi i64 [ %2636, %2628 ], [ %2561, %2565 ]
  %2573 = phi i32 [ %2634, %2628 ], [ %2568, %2565 ]
  %2574 = sub i32 %2560, %2570
  %2575 = tail call i32 @llvm.smin.i32(i32 %2574, i32 0)
  %2576 = sub i32 %2574, %2575
  %2577 = zext i32 %2576 to i64
  %2578 = add nuw nsw i64 %2577, 1
  %2579 = add nsw i64 %2571, -1
  %2580 = icmp ult i32 %2576, 31
  br i1 %2580, label %2616, label %2581

2581:                                             ; preds = %2569
  %2582 = and i64 %2578, 8589934560
  %2583 = sub i64 %2572, %2582
  br label %2584

2584:                                             ; preds = %2584, %2581
  %2585 = phi i64 [ 0, %2581 ], [ %2608, %2584 ]
  %2586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2604, %2584 ]
  %2587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2605, %2584 ]
  %2588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2606, %2584 ]
  %2589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2607, %2584 ]
  %2590 = sub i64 %2572, %2585
  %2591 = getelementptr inbounds i32, ptr %9, i64 %2590
  %2592 = getelementptr inbounds i32, ptr %2591, i64 -7
  %2593 = load <8 x i32>, ptr %2592, align 4, !tbaa !6
  %2594 = shufflevector <8 x i32> %2593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2595 = getelementptr inbounds i32, ptr %2591, i64 -15
  %2596 = load <8 x i32>, ptr %2595, align 4, !tbaa !6
  %2597 = shufflevector <8 x i32> %2596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2598 = getelementptr inbounds i32, ptr %2591, i64 -23
  %2599 = load <8 x i32>, ptr %2598, align 4, !tbaa !6
  %2600 = shufflevector <8 x i32> %2599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2601 = getelementptr inbounds i32, ptr %2591, i64 -31
  %2602 = load <8 x i32>, ptr %2601, align 4, !tbaa !6
  %2603 = shufflevector <8 x i32> %2602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2604 = mul <8 x i32> %2594, %2586
  %2605 = mul <8 x i32> %2597, %2587
  %2606 = mul <8 x i32> %2600, %2588
  %2607 = mul <8 x i32> %2603, %2589
  %2608 = add nuw i64 %2585, 32
  %2609 = icmp eq i64 %2608, %2582
  br i1 %2609, label %2610, label %2584, !llvm.loop !1205

2610:                                             ; preds = %2584
  %2611 = mul <8 x i32> %2605, %2604
  %2612 = mul <8 x i32> %2606, %2611
  %2613 = mul <8 x i32> %2607, %2612
  %2614 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2613)
  %2615 = icmp eq i64 %2578, %2582
  br i1 %2615, label %2628, label %2616

2616:                                             ; preds = %2569, %2610
  %2617 = phi i64 [ %2572, %2569 ], [ %2583, %2610 ]
  %2618 = phi i32 [ 1, %2569 ], [ %2614, %2610 ]
  br label %2619

2619:                                             ; preds = %2616, %2619
  %2620 = phi i64 [ %2625, %2619 ], [ %2617, %2616 ]
  %2621 = phi i32 [ %2624, %2619 ], [ %2618, %2616 ]
  %2622 = getelementptr inbounds i32, ptr %9, i64 %2620
  %2623 = load i32, ptr %2622, align 4, !tbaa !6
  %2624 = mul nsw i32 %2623, %2621
  %2625 = add nsw i64 %2620, -1
  %2626 = trunc i64 %2620 to i32
  %2627 = icmp sgt i32 %2626, 0
  br i1 %2627, label %2619, label %2628, !llvm.loop !1206

2628:                                             ; preds = %2619, %2610
  %2629 = phi i32 [ %2614, %2610 ], [ %2624, %2619 ]
  %2630 = and i64 %2579, 4294967295
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2630
  %2632 = load i32, ptr %2631, align 4, !tbaa !6
  %2633 = mul nsw i32 %2632, %2629
  %2634 = add nsw i32 %2633, %2573
  %2635 = icmp sgt i64 %2571, 2
  %2636 = add nsw i64 %2572, -1
  %2637 = add i32 %2570, 1
  br i1 %2635, label %2569, label %2638, !llvm.loop !1207

2638:                                             ; preds = %2628, %2565
  %2639 = phi i32 [ %2568, %2565 ], [ %2634, %2628 ]
  %2640 = sext i32 %2639 to i64
  %2641 = getelementptr inbounds double, ptr %2, i64 %2640
  %2642 = load double, ptr %2641, align 8, !tbaa !19
  %2643 = getelementptr inbounds float, ptr %2529, i64 %2640
  %2644 = load float, ptr %2643, align 4, !tbaa !163
  %2645 = fptosi float %2644 to i32
  %2646 = load i32, ptr %2531, align 4, !tbaa !6
  %2647 = sitofp i32 %2646 to double
  %2648 = sitofp i32 %2645 to double
  %2649 = fmul fast double %2642, %2648
  %2650 = fcmp fast olt double %2649, 0.000000e+00
  %2651 = fneg fast double %2649
  %2652 = select nnan ninf i1 %2650, double %2651, double %2649
  %2653 = fmul fast double %2649, %2649
  %2654 = fmul fast double %2653, %2652
  %2655 = fadd fast double %2654, %2647
  %2656 = fptosi double %2655 to i32
  store i32 %2656, ptr %2531, align 4, !tbaa !6
  %2657 = fadd fast double %2642, %2567
  %2658 = add nuw nsw i32 %2566, 1
  br i1 %2559, label %2659, label %2706

2659:                                             ; preds = %2638
  %2660 = load i32, ptr %4, align 4, !tbaa !6
  %2661 = load i32, ptr %12, align 4, !tbaa !6
  %2662 = add nsw i32 %2661, -1
  %2663 = icmp slt i32 %2660, %2662
  br i1 %2663, label %2683, label %2664

2664:                                             ; preds = %2659
  %2665 = icmp eq i32 %2660, %2662
  br i1 %2665, label %2666, label %2699

2666:                                             ; preds = %2664
  store i32 0, ptr %4, align 4, !tbaa !6
  %2667 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2667, ptr %6, align 4, !tbaa !6
  br i1 %2564, label %2706, label %2668

2668:                                             ; preds = %2666, %2693
  %2669 = phi i64 [ %2697, %2693 ], [ 1, %2666 ]
  %2670 = getelementptr inbounds i32, ptr %4, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !6
  %2672 = getelementptr inbounds i32, ptr %12, i64 %2669
  %2673 = load i32, ptr %2672, align 4, !tbaa !6
  %2674 = add nsw i32 %2673, -1
  %2675 = icmp slt i32 %2671, %2674
  br i1 %2675, label %2676, label %2691

2676:                                             ; preds = %2668
  br i1 %2663, label %2683, label %2677

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds i32, ptr %7, i64 %2669
  %2679 = load i32, ptr %2678, align 4, !tbaa !6
  %2680 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2681 = load i32, ptr %2680, align 4, !tbaa !6
  %2682 = add nsw i32 %2681, %2679
  store i32 %2682, ptr %2680, align 4, !tbaa !6
  br label %2701

2683:                                             ; preds = %2659, %2676
  %2684 = phi i32 [ %2671, %2676 ], [ %2660, %2659 ]
  %2685 = phi ptr [ %2670, %2676 ], [ %4, %2659 ]
  %2686 = phi i64 [ %2669, %2676 ], [ 0, %2659 ]
  %2687 = add nsw i32 %2684, 1
  store i32 %2687, ptr %2685, align 4, !tbaa !6
  %2688 = getelementptr inbounds i32, ptr %7, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !6
  %2690 = getelementptr inbounds i32, ptr %6, i64 %2686
  br label %2701

2691:                                             ; preds = %2668
  %2692 = icmp eq i32 %2671, %2674
  br i1 %2692, label %2693, label %2699

2693:                                             ; preds = %2691
  store i32 0, ptr %2670, align 4, !tbaa !6
  %2694 = getelementptr inbounds i32, ptr %8, i64 %2669
  %2695 = load i32, ptr %2694, align 4, !tbaa !6
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2669
  store i32 %2695, ptr %2696, align 4, !tbaa !6
  %2697 = add nuw nsw i64 %2669, 1
  %2698 = icmp eq i64 %2697, %2562
  br i1 %2698, label %2706, label %2668, !llvm.loop !1208

2699:                                             ; preds = %2664, %2691
  %2700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2701:                                             ; preds = %2677, %2683
  %2702 = phi ptr [ %2690, %2683 ], [ %2670, %2677 ]
  %2703 = phi i32 [ %2689, %2683 ], [ 1, %2677 ]
  %2704 = load i32, ptr %2702, align 4, !tbaa !6
  %2705 = add nsw i32 %2704, %2703
  store i32 %2705, ptr %2702, align 4, !tbaa !6
  br label %2706

2706:                                             ; preds = %2693, %2701, %2666, %2638
  %2707 = icmp eq i32 %2658, %5
  br i1 %2707, label %5666, label %2565, !llvm.loop !1209

2708:                                             ; preds = %2548, %2851
  %2709 = phi i32 [ 0, %2548 ], [ %2800, %2851 ]
  %2710 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2549, label %2711, label %2780

2711:                                             ; preds = %2708, %2770
  %2712 = phi i32 [ %2779, %2770 ], [ 0, %2708 ]
  %2713 = phi i64 [ %2721, %2770 ], [ %2553, %2708 ]
  %2714 = phi i64 [ %2778, %2770 ], [ %2552, %2708 ]
  %2715 = phi i32 [ %2776, %2770 ], [ %2710, %2708 ]
  %2716 = sub i32 %2551, %2712
  %2717 = tail call i32 @llvm.smin.i32(i32 %2716, i32 0)
  %2718 = sub i32 %2716, %2717
  %2719 = zext i32 %2718 to i64
  %2720 = add nuw nsw i64 %2719, 1
  %2721 = add nsw i64 %2713, -1
  %2722 = icmp ult i32 %2718, 31
  br i1 %2722, label %2758, label %2723

2723:                                             ; preds = %2711
  %2724 = and i64 %2720, 8589934560
  %2725 = sub i64 %2714, %2724
  br label %2726

2726:                                             ; preds = %2726, %2723
  %2727 = phi i64 [ 0, %2723 ], [ %2750, %2726 ]
  %2728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2746, %2726 ]
  %2729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2747, %2726 ]
  %2730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2748, %2726 ]
  %2731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2749, %2726 ]
  %2732 = sub i64 %2714, %2727
  %2733 = getelementptr inbounds i32, ptr %11, i64 %2732
  %2734 = getelementptr inbounds i32, ptr %2733, i64 -7
  %2735 = load <8 x i32>, ptr %2734, align 4, !tbaa !6
  %2736 = shufflevector <8 x i32> %2735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2737 = getelementptr inbounds i32, ptr %2733, i64 -15
  %2738 = load <8 x i32>, ptr %2737, align 4, !tbaa !6
  %2739 = shufflevector <8 x i32> %2738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2740 = getelementptr inbounds i32, ptr %2733, i64 -23
  %2741 = load <8 x i32>, ptr %2740, align 4, !tbaa !6
  %2742 = shufflevector <8 x i32> %2741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2743 = getelementptr inbounds i32, ptr %2733, i64 -31
  %2744 = load <8 x i32>, ptr %2743, align 4, !tbaa !6
  %2745 = shufflevector <8 x i32> %2744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2746 = mul <8 x i32> %2736, %2728
  %2747 = mul <8 x i32> %2739, %2729
  %2748 = mul <8 x i32> %2742, %2730
  %2749 = mul <8 x i32> %2745, %2731
  %2750 = add nuw i64 %2727, 32
  %2751 = icmp eq i64 %2750, %2724
  br i1 %2751, label %2752, label %2726, !llvm.loop !1210

2752:                                             ; preds = %2726
  %2753 = mul <8 x i32> %2747, %2746
  %2754 = mul <8 x i32> %2748, %2753
  %2755 = mul <8 x i32> %2749, %2754
  %2756 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2755)
  %2757 = icmp eq i64 %2720, %2724
  br i1 %2757, label %2770, label %2758

2758:                                             ; preds = %2711, %2752
  %2759 = phi i64 [ %2714, %2711 ], [ %2725, %2752 ]
  %2760 = phi i32 [ 1, %2711 ], [ %2756, %2752 ]
  br label %2761

2761:                                             ; preds = %2758, %2761
  %2762 = phi i64 [ %2767, %2761 ], [ %2759, %2758 ]
  %2763 = phi i32 [ %2766, %2761 ], [ %2760, %2758 ]
  %2764 = getelementptr inbounds i32, ptr %11, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !6
  %2766 = mul nsw i32 %2765, %2763
  %2767 = add nsw i64 %2762, -1
  %2768 = trunc i64 %2762 to i32
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2761, label %2770, !llvm.loop !1211

2770:                                             ; preds = %2761, %2752
  %2771 = phi i32 [ %2756, %2752 ], [ %2766, %2761 ]
  %2772 = and i64 %2721, 4294967295
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2772
  %2774 = load i32, ptr %2773, align 4, !tbaa !6
  %2775 = mul nsw i32 %2774, %2771
  %2776 = add nsw i32 %2775, %2715
  %2777 = icmp sgt i64 %2713, 2
  %2778 = add nsw i64 %2714, -1
  %2779 = add i32 %2712, 1
  br i1 %2777, label %2711, label %2780, !llvm.loop !1212

2780:                                             ; preds = %2770, %2708
  %2781 = phi i32 [ %2710, %2708 ], [ %2776, %2770 ]
  %2782 = icmp slt i32 %2781, %5
  br i1 %2782, label %2785, label %2783

2783:                                             ; preds = %2780
  %2784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

2785:                                             ; preds = %2780
  %2786 = sext i32 %2781 to i64
  %2787 = getelementptr inbounds float, ptr %2529, i64 %2786
  %2788 = load float, ptr %2787, align 4, !tbaa !163
  %2789 = fptosi float %2788 to i32
  %2790 = load i32, ptr %2531, align 4, !tbaa !6
  %2791 = sitofp i32 %2790 to double
  %2792 = sitofp i32 %2789 to double
  %2793 = icmp slt i32 %2789, 0
  %2794 = fneg fast double %2792
  %2795 = select i1 %2793, double %2794, double %2792
  %2796 = fmul fast double %2792, %2792
  %2797 = fmul fast double %2796, %2795
  %2798 = fadd fast double %2797, %2791
  %2799 = fptosi double %2798 to i32
  store i32 %2799, ptr %2531, align 4, !tbaa !6
  %2800 = add nuw nsw i32 %2709, 1
  br i1 %2550, label %2801, label %2851

2801:                                             ; preds = %2785
  %2802 = load i32, ptr %4, align 4, !tbaa !6
  %2803 = load i32, ptr %12, align 4, !tbaa !6
  %2804 = add nsw i32 %2803, -1
  %2805 = icmp slt i32 %2802, %2804
  br i1 %2805, label %2828, label %2806

2806:                                             ; preds = %2801
  %2807 = icmp eq i32 %2802, %2804
  br i1 %2807, label %2808, label %2844

2808:                                             ; preds = %2806
  store i32 0, ptr %4, align 4, !tbaa !6
  %2809 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2809, ptr %6, align 4, !tbaa !6
  br i1 %2555, label %2851, label %2810

2810:                                             ; preds = %2808, %2838
  %2811 = phi i64 [ %2842, %2838 ], [ 1, %2808 ]
  %2812 = getelementptr inbounds i32, ptr %4, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !6
  %2814 = getelementptr inbounds i32, ptr %12, i64 %2811
  %2815 = load i32, ptr %2814, align 4, !tbaa !6
  %2816 = add nsw i32 %2815, -1
  %2817 = icmp slt i32 %2813, %2816
  br i1 %2817, label %2818, label %2836

2818:                                             ; preds = %2810
  br i1 %2805, label %2828, label %2819

2819:                                             ; preds = %2818
  %2820 = shl i64 %2811, 32
  %2821 = add i64 %2820, -4294967296
  %2822 = ashr exact i64 %2821, 32
  %2823 = getelementptr inbounds i32, ptr %7, i64 %2822
  %2824 = load i32, ptr %2823, align 4, !tbaa !6
  %2825 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2826 = load i32, ptr %2825, align 4, !tbaa !6
  %2827 = add nsw i32 %2826, %2824
  store i32 %2827, ptr %2825, align 4, !tbaa !6
  br label %2846

2828:                                             ; preds = %2801, %2818
  %2829 = phi i32 [ %2813, %2818 ], [ %2802, %2801 ]
  %2830 = phi ptr [ %2812, %2818 ], [ %4, %2801 ]
  %2831 = phi i64 [ %2811, %2818 ], [ 0, %2801 ]
  %2832 = add nsw i32 %2829, 1
  store i32 %2832, ptr %2830, align 4, !tbaa !6
  %2833 = getelementptr inbounds i32, ptr %7, i64 %2831
  %2834 = load i32, ptr %2833, align 4, !tbaa !6
  %2835 = getelementptr inbounds i32, ptr %6, i64 %2831
  br label %2846

2836:                                             ; preds = %2810
  %2837 = icmp eq i32 %2813, %2816
  br i1 %2837, label %2838, label %2844

2838:                                             ; preds = %2836
  store i32 0, ptr %2812, align 4, !tbaa !6
  %2839 = getelementptr inbounds i32, ptr %8, i64 %2811
  %2840 = load i32, ptr %2839, align 4, !tbaa !6
  %2841 = getelementptr inbounds i32, ptr %6, i64 %2811
  store i32 %2840, ptr %2841, align 4, !tbaa !6
  %2842 = add nuw nsw i64 %2811, 1
  %2843 = icmp eq i64 %2842, %2553
  br i1 %2843, label %2851, label %2810, !llvm.loop !1213

2844:                                             ; preds = %2806, %2836
  %2845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

2846:                                             ; preds = %2819, %2828
  %2847 = phi ptr [ %2835, %2828 ], [ %2812, %2819 ]
  %2848 = phi i32 [ %2834, %2828 ], [ 1, %2819 ]
  %2849 = load i32, ptr %2847, align 4, !tbaa !6
  %2850 = add nsw i32 %2849, %2848
  store i32 %2850, ptr %2847, align 4, !tbaa !6
  br label %2851

2851:                                             ; preds = %2838, %2846, %2808, %2785
  %2852 = icmp eq i32 %2800, %5
  br i1 %2852, label %5666, label %2708, !llvm.loop !1214

2853:                                             ; preds = %2541
  %2854 = getelementptr inbounds i32, ptr %3, i64 %19
  %2855 = load i32, ptr %2854, align 4, !tbaa !6
  %2856 = icmp eq i32 %2855, 0
  %2857 = icmp sgt i32 %5, 0
  br i1 %2856, label %2867, label %2858

2858:                                             ; preds = %2853
  br i1 %2857, label %2859, label %5666

2859:                                             ; preds = %2858
  %2860 = icmp sgt i32 %13, 1
  %2861 = icmp sgt i32 %13, 0
  %2862 = add i32 %13, -2
  %2863 = zext i32 %2862 to i64
  %2864 = zext i32 %13 to i64
  %2865 = add nuw i32 %5, 1
  %2866 = icmp eq i32 %13, 1
  br label %3013

2867:                                             ; preds = %2853
  br i1 %2857, label %2868, label %5666

2868:                                             ; preds = %2867
  %2869 = icmp sgt i32 %13, 1
  %2870 = icmp sgt i32 %13, 0
  %2871 = add i32 %13, -2
  %2872 = zext i32 %2871 to i64
  %2873 = zext i32 %13 to i64
  %2874 = add nuw i32 %5, 1
  %2875 = icmp eq i32 %13, 1
  br label %2876

2876:                                             ; preds = %2868, %3011
  %2877 = phi i32 [ 0, %2868 ], [ %2963, %3011 ]
  %2878 = phi double [ 0.000000e+00, %2868 ], [ %2962, %3011 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2869, label %2880, label %2949

2880:                                             ; preds = %2876, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2876 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2873, %2876 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2872, %2876 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2876 ]
  %2885 = sub i32 %2871, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %9, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !6
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !6
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !6
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !6
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1215

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %9, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !6
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1216

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !6
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1217

2949:                                             ; preds = %2939, %2876
  %2950 = phi i32 [ %2879, %2876 ], [ %2945, %2939 ]
  %2951 = sext i32 %2950 to i64
  %2952 = getelementptr inbounds float, ptr %2529, i64 %2951
  %2953 = load float, ptr %2952, align 4, !tbaa !163
  %2954 = fptosi float %2953 to i32
  %2955 = load i32, ptr %2531, align 4, !tbaa !6
  %2956 = icmp slt i32 %2954, 0
  %2957 = mul nsw i32 %2954, %2954
  %2958 = sub nsw i32 0, %2957
  %2959 = select i1 %2956, i32 %2958, i32 %2957
  %2960 = mul i32 %2959, %2954
  %2961 = add nsw i32 %2960, %2955
  store i32 %2961, ptr %2531, align 4, !tbaa !6
  %2962 = fadd fast double %2878, 1.000000e+00
  %2963 = add nuw nsw i32 %2877, 1
  br i1 %2870, label %2964, label %3011

2964:                                             ; preds = %2949
  %2965 = load i32, ptr %4, align 4, !tbaa !6
  %2966 = load i32, ptr %12, align 4, !tbaa !6
  %2967 = add nsw i32 %2966, -1
  %2968 = icmp slt i32 %2965, %2967
  br i1 %2968, label %2988, label %2969

2969:                                             ; preds = %2964
  %2970 = icmp eq i32 %2965, %2967
  br i1 %2970, label %2971, label %3004

2971:                                             ; preds = %2969
  store i32 0, ptr %4, align 4, !tbaa !6
  %2972 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2972, ptr %6, align 4, !tbaa !6
  br i1 %2875, label %3011, label %2973

2973:                                             ; preds = %2971, %2998
  %2974 = phi i64 [ %3002, %2998 ], [ 1, %2971 ]
  %2975 = getelementptr inbounds i32, ptr %4, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !6
  %2977 = getelementptr inbounds i32, ptr %12, i64 %2974
  %2978 = load i32, ptr %2977, align 4, !tbaa !6
  %2979 = add nsw i32 %2978, -1
  %2980 = icmp slt i32 %2976, %2979
  br i1 %2980, label %2981, label %2996

2981:                                             ; preds = %2973
  br i1 %2968, label %2988, label %2982

2982:                                             ; preds = %2981
  %2983 = getelementptr inbounds i32, ptr %7, i64 %2974
  %2984 = load i32, ptr %2983, align 4, !tbaa !6
  %2985 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2986 = load i32, ptr %2985, align 4, !tbaa !6
  %2987 = add nsw i32 %2986, %2984
  store i32 %2987, ptr %2985, align 4, !tbaa !6
  br label %3006

2988:                                             ; preds = %2964, %2981
  %2989 = phi i32 [ %2976, %2981 ], [ %2965, %2964 ]
  %2990 = phi ptr [ %2975, %2981 ], [ %4, %2964 ]
  %2991 = phi i64 [ %2974, %2981 ], [ 0, %2964 ]
  %2992 = add nsw i32 %2989, 1
  store i32 %2992, ptr %2990, align 4, !tbaa !6
  %2993 = getelementptr inbounds i32, ptr %7, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2991
  br label %3006

2996:                                             ; preds = %2973
  %2997 = icmp eq i32 %2976, %2979
  br i1 %2997, label %2998, label %3004

2998:                                             ; preds = %2996
  store i32 0, ptr %2975, align 4, !tbaa !6
  %2999 = getelementptr inbounds i32, ptr %8, i64 %2974
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2974
  store i32 %3000, ptr %3001, align 4, !tbaa !6
  %3002 = add nuw nsw i64 %2974, 1
  %3003 = icmp eq i64 %3002, %2873
  br i1 %3003, label %3011, label %2973, !llvm.loop !1218

3004:                                             ; preds = %2969, %2996
  %3005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3006:                                             ; preds = %2982, %2988
  %3007 = phi ptr [ %2995, %2988 ], [ %2975, %2982 ]
  %3008 = phi i32 [ %2994, %2988 ], [ 1, %2982 ]
  %3009 = load i32, ptr %3007, align 4, !tbaa !6
  %3010 = add nsw i32 %3009, %3008
  store i32 %3010, ptr %3007, align 4, !tbaa !6
  br label %3011

3011:                                             ; preds = %2998, %3006, %2971, %2949
  %3012 = icmp eq i32 %2963, %5
  br i1 %3012, label %5666, label %2876, !llvm.loop !1219

3013:                                             ; preds = %2859, %3153
  %3014 = phi i32 [ 0, %2859 ], [ %3102, %3153 ]
  %3015 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2860, label %3016, label %3085

3016:                                             ; preds = %3013, %3075
  %3017 = phi i32 [ %3084, %3075 ], [ 0, %3013 ]
  %3018 = phi i64 [ %3026, %3075 ], [ %2864, %3013 ]
  %3019 = phi i64 [ %3083, %3075 ], [ %2863, %3013 ]
  %3020 = phi i32 [ %3081, %3075 ], [ %3015, %3013 ]
  %3021 = sub i32 %2862, %3017
  %3022 = tail call i32 @llvm.smin.i32(i32 %3021, i32 0)
  %3023 = sub i32 %3021, %3022
  %3024 = zext i32 %3023 to i64
  %3025 = add nuw nsw i64 %3024, 1
  %3026 = add nsw i64 %3018, -1
  %3027 = icmp ult i32 %3023, 31
  br i1 %3027, label %3063, label %3028

3028:                                             ; preds = %3016
  %3029 = and i64 %3025, 8589934560
  %3030 = sub i64 %3019, %3029
  br label %3031

3031:                                             ; preds = %3031, %3028
  %3032 = phi i64 [ 0, %3028 ], [ %3055, %3031 ]
  %3033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3051, %3031 ]
  %3034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3052, %3031 ]
  %3035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3053, %3031 ]
  %3036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3054, %3031 ]
  %3037 = sub i64 %3019, %3032
  %3038 = getelementptr inbounds i32, ptr %11, i64 %3037
  %3039 = getelementptr inbounds i32, ptr %3038, i64 -7
  %3040 = load <8 x i32>, ptr %3039, align 4, !tbaa !6
  %3041 = shufflevector <8 x i32> %3040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3042 = getelementptr inbounds i32, ptr %3038, i64 -15
  %3043 = load <8 x i32>, ptr %3042, align 4, !tbaa !6
  %3044 = shufflevector <8 x i32> %3043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3045 = getelementptr inbounds i32, ptr %3038, i64 -23
  %3046 = load <8 x i32>, ptr %3045, align 4, !tbaa !6
  %3047 = shufflevector <8 x i32> %3046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3048 = getelementptr inbounds i32, ptr %3038, i64 -31
  %3049 = load <8 x i32>, ptr %3048, align 4, !tbaa !6
  %3050 = shufflevector <8 x i32> %3049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3051 = mul <8 x i32> %3041, %3033
  %3052 = mul <8 x i32> %3044, %3034
  %3053 = mul <8 x i32> %3047, %3035
  %3054 = mul <8 x i32> %3050, %3036
  %3055 = add nuw i64 %3032, 32
  %3056 = icmp eq i64 %3055, %3029
  br i1 %3056, label %3057, label %3031, !llvm.loop !1220

3057:                                             ; preds = %3031
  %3058 = mul <8 x i32> %3052, %3051
  %3059 = mul <8 x i32> %3053, %3058
  %3060 = mul <8 x i32> %3054, %3059
  %3061 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3060)
  %3062 = icmp eq i64 %3025, %3029
  br i1 %3062, label %3075, label %3063

3063:                                             ; preds = %3016, %3057
  %3064 = phi i64 [ %3019, %3016 ], [ %3030, %3057 ]
  %3065 = phi i32 [ 1, %3016 ], [ %3061, %3057 ]
  br label %3066

3066:                                             ; preds = %3063, %3066
  %3067 = phi i64 [ %3072, %3066 ], [ %3064, %3063 ]
  %3068 = phi i32 [ %3071, %3066 ], [ %3065, %3063 ]
  %3069 = getelementptr inbounds i32, ptr %11, i64 %3067
  %3070 = load i32, ptr %3069, align 4, !tbaa !6
  %3071 = mul nsw i32 %3070, %3068
  %3072 = add nsw i64 %3067, -1
  %3073 = trunc i64 %3067 to i32
  %3074 = icmp sgt i32 %3073, 0
  br i1 %3074, label %3066, label %3075, !llvm.loop !1221

3075:                                             ; preds = %3066, %3057
  %3076 = phi i32 [ %3061, %3057 ], [ %3071, %3066 ]
  %3077 = and i64 %3026, 4294967295
  %3078 = getelementptr inbounds i32, ptr %6, i64 %3077
  %3079 = load i32, ptr %3078, align 4, !tbaa !6
  %3080 = mul nsw i32 %3079, %3076
  %3081 = add nsw i32 %3080, %3020
  %3082 = icmp sgt i64 %3018, 2
  %3083 = add nsw i64 %3019, -1
  %3084 = add i32 %3017, 1
  br i1 %3082, label %3016, label %3085, !llvm.loop !1222

3085:                                             ; preds = %3075, %3013
  %3086 = phi i32 [ %3015, %3013 ], [ %3081, %3075 ]
  %3087 = icmp slt i32 %3086, %5
  br i1 %3087, label %3090, label %3088

3088:                                             ; preds = %3085
  %3089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

3090:                                             ; preds = %3085
  %3091 = sext i32 %3086 to i64
  %3092 = getelementptr inbounds float, ptr %2529, i64 %3091
  %3093 = load float, ptr %3092, align 4, !tbaa !163
  %3094 = fptosi float %3093 to i32
  %3095 = load i32, ptr %2531, align 4, !tbaa !6
  %3096 = icmp slt i32 %3094, 0
  %3097 = mul nsw i32 %3094, %3094
  %3098 = sub nsw i32 0, %3097
  %3099 = select i1 %3096, i32 %3098, i32 %3097
  %3100 = mul i32 %3099, %3094
  %3101 = add nsw i32 %3100, %3095
  store i32 %3101, ptr %2531, align 4, !tbaa !6
  %3102 = add nuw nsw i32 %3014, 1
  br i1 %2861, label %3103, label %3153

3103:                                             ; preds = %3090
  %3104 = load i32, ptr %4, align 4, !tbaa !6
  %3105 = load i32, ptr %12, align 4, !tbaa !6
  %3106 = add nsw i32 %3105, -1
  %3107 = icmp slt i32 %3104, %3106
  br i1 %3107, label %3130, label %3108

3108:                                             ; preds = %3103
  %3109 = icmp eq i32 %3104, %3106
  br i1 %3109, label %3110, label %3146

3110:                                             ; preds = %3108
  store i32 0, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3111, ptr %6, align 4, !tbaa !6
  br i1 %2866, label %3153, label %3112

3112:                                             ; preds = %3110, %3140
  %3113 = phi i64 [ %3144, %3140 ], [ 1, %3110 ]
  %3114 = getelementptr inbounds i32, ptr %4, i64 %3113
  %3115 = load i32, ptr %3114, align 4, !tbaa !6
  %3116 = getelementptr inbounds i32, ptr %12, i64 %3113
  %3117 = load i32, ptr %3116, align 4, !tbaa !6
  %3118 = add nsw i32 %3117, -1
  %3119 = icmp slt i32 %3115, %3118
  br i1 %3119, label %3120, label %3138

3120:                                             ; preds = %3112
  br i1 %3107, label %3130, label %3121

3121:                                             ; preds = %3120
  %3122 = shl i64 %3113, 32
  %3123 = add i64 %3122, -4294967296
  %3124 = ashr exact i64 %3123, 32
  %3125 = getelementptr inbounds i32, ptr %7, i64 %3124
  %3126 = load i32, ptr %3125, align 4, !tbaa !6
  %3127 = getelementptr inbounds i32, ptr %6, i64 %3113
  %3128 = load i32, ptr %3127, align 4, !tbaa !6
  %3129 = add nsw i32 %3128, %3126
  store i32 %3129, ptr %3127, align 4, !tbaa !6
  br label %3148

3130:                                             ; preds = %3103, %3120
  %3131 = phi i32 [ %3115, %3120 ], [ %3104, %3103 ]
  %3132 = phi ptr [ %3114, %3120 ], [ %4, %3103 ]
  %3133 = phi i64 [ %3113, %3120 ], [ 0, %3103 ]
  %3134 = add nsw i32 %3131, 1
  store i32 %3134, ptr %3132, align 4, !tbaa !6
  %3135 = getelementptr inbounds i32, ptr %7, i64 %3133
  %3136 = load i32, ptr %3135, align 4, !tbaa !6
  %3137 = getelementptr inbounds i32, ptr %6, i64 %3133
  br label %3148

3138:                                             ; preds = %3112
  %3139 = icmp eq i32 %3115, %3118
  br i1 %3139, label %3140, label %3146

3140:                                             ; preds = %3138
  store i32 0, ptr %3114, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %8, i64 %3113
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3113
  store i32 %3142, ptr %3143, align 4, !tbaa !6
  %3144 = add nuw nsw i64 %3113, 1
  %3145 = icmp eq i64 %3144, %2864
  br i1 %3145, label %3153, label %3112, !llvm.loop !1223

3146:                                             ; preds = %3108, %3138
  %3147 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3148:                                             ; preds = %3121, %3130
  %3149 = phi ptr [ %3137, %3130 ], [ %3114, %3121 ]
  %3150 = phi i32 [ %3136, %3130 ], [ 1, %3121 ]
  %3151 = load i32, ptr %3149, align 4, !tbaa !6
  %3152 = add nsw i32 %3151, %3150
  store i32 %3152, ptr %3149, align 4, !tbaa !6
  br label %3153

3153:                                             ; preds = %3140, %3148, %3110, %3090
  %3154 = icmp eq i32 %3102, %5
  br i1 %3154, label %5666, label %3013, !llvm.loop !1224

3155:                                             ; preds = %2541
  %3156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

3157:                                             ; preds = %18
  %3158 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3159 = load ptr, ptr %3158, align 8, !tbaa !10
  %3160 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3161 = load ptr, ptr %3160, align 8, !tbaa !10
  store i64 0, ptr %3161, align 8, !tbaa !121
  %3162 = icmp eq i32 %13, 0
  br i1 %3162, label %3163, label %3171

3163:                                             ; preds = %3157
  %3164 = load float, ptr %3159, align 4, !tbaa !163
  %3165 = fptosi float %3164 to i64
  %3166 = icmp slt i64 %3165, 0
  %3167 = mul nsw i64 %3165, %3165
  %3168 = sub nsw i64 0, %3167
  %3169 = select i1 %3166, i64 %3168, i64 %3167
  %3170 = mul i64 %3169, %3165
  store i64 %3170, ptr %3161, align 8, !tbaa !121
  br label %5666

3171:                                             ; preds = %3157
  switch i32 %1, label %3785 [
    i32 1, label %3172
    i32 0, label %3483
  ]

3172:                                             ; preds = %3171
  %3173 = getelementptr inbounds i32, ptr %3, i64 %19
  %3174 = load i32, ptr %3173, align 4, !tbaa !6
  %3175 = icmp eq i32 %3174, 0
  %3176 = icmp sgt i32 %5, 0
  br i1 %3175, label %3186, label %3177

3177:                                             ; preds = %3172
  br i1 %3176, label %3178, label %5666

3178:                                             ; preds = %3177
  %3179 = icmp sgt i32 %13, 1
  %3180 = icmp sgt i32 %13, 0
  %3181 = add i32 %13, -2
  %3182 = zext i32 %3181 to i64
  %3183 = zext i32 %13 to i64
  %3184 = add nuw i32 %5, 1
  %3185 = icmp eq i32 %13, 1
  br label %3338

3186:                                             ; preds = %3172
  br i1 %3176, label %3187, label %5666

3187:                                             ; preds = %3186
  %3188 = icmp sgt i32 %13, 1
  %3189 = icmp sgt i32 %13, 0
  %3190 = add i32 %13, -2
  %3191 = zext i32 %3190 to i64
  %3192 = zext i32 %13 to i64
  %3193 = add nuw i32 %5, 1
  %3194 = icmp eq i32 %13, 1
  br label %3195

3195:                                             ; preds = %3187, %3336
  %3196 = phi i64 [ 0, %3187 ], [ %3286, %3336 ]
  %3197 = phi i32 [ 0, %3187 ], [ %3288, %3336 ]
  %3198 = phi double [ 0.000000e+00, %3187 ], [ %3287, %3336 ]
  %3199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3188, label %3200, label %3269

3200:                                             ; preds = %3195, %3259
  %3201 = phi i32 [ %3268, %3259 ], [ 0, %3195 ]
  %3202 = phi i64 [ %3210, %3259 ], [ %3192, %3195 ]
  %3203 = phi i64 [ %3267, %3259 ], [ %3191, %3195 ]
  %3204 = phi i32 [ %3265, %3259 ], [ %3199, %3195 ]
  %3205 = sub i32 %3190, %3201
  %3206 = tail call i32 @llvm.smin.i32(i32 %3205, i32 0)
  %3207 = sub i32 %3205, %3206
  %3208 = zext i32 %3207 to i64
  %3209 = add nuw nsw i64 %3208, 1
  %3210 = add nsw i64 %3202, -1
  %3211 = icmp ult i32 %3207, 31
  br i1 %3211, label %3247, label %3212

3212:                                             ; preds = %3200
  %3213 = and i64 %3209, 8589934560
  %3214 = sub i64 %3203, %3213
  br label %3215

3215:                                             ; preds = %3215, %3212
  %3216 = phi i64 [ 0, %3212 ], [ %3239, %3215 ]
  %3217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3235, %3215 ]
  %3218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3236, %3215 ]
  %3219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3237, %3215 ]
  %3220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3238, %3215 ]
  %3221 = sub i64 %3203, %3216
  %3222 = getelementptr inbounds i32, ptr %9, i64 %3221
  %3223 = getelementptr inbounds i32, ptr %3222, i64 -7
  %3224 = load <8 x i32>, ptr %3223, align 4, !tbaa !6
  %3225 = shufflevector <8 x i32> %3224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3226 = getelementptr inbounds i32, ptr %3222, i64 -15
  %3227 = load <8 x i32>, ptr %3226, align 4, !tbaa !6
  %3228 = shufflevector <8 x i32> %3227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3229 = getelementptr inbounds i32, ptr %3222, i64 -23
  %3230 = load <8 x i32>, ptr %3229, align 4, !tbaa !6
  %3231 = shufflevector <8 x i32> %3230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3232 = getelementptr inbounds i32, ptr %3222, i64 -31
  %3233 = load <8 x i32>, ptr %3232, align 4, !tbaa !6
  %3234 = shufflevector <8 x i32> %3233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3235 = mul <8 x i32> %3225, %3217
  %3236 = mul <8 x i32> %3228, %3218
  %3237 = mul <8 x i32> %3231, %3219
  %3238 = mul <8 x i32> %3234, %3220
  %3239 = add nuw i64 %3216, 32
  %3240 = icmp eq i64 %3239, %3213
  br i1 %3240, label %3241, label %3215, !llvm.loop !1225

3241:                                             ; preds = %3215
  %3242 = mul <8 x i32> %3236, %3235
  %3243 = mul <8 x i32> %3237, %3242
  %3244 = mul <8 x i32> %3238, %3243
  %3245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3244)
  %3246 = icmp eq i64 %3209, %3213
  br i1 %3246, label %3259, label %3247

3247:                                             ; preds = %3200, %3241
  %3248 = phi i64 [ %3203, %3200 ], [ %3214, %3241 ]
  %3249 = phi i32 [ 1, %3200 ], [ %3245, %3241 ]
  br label %3250

3250:                                             ; preds = %3247, %3250
  %3251 = phi i64 [ %3256, %3250 ], [ %3248, %3247 ]
  %3252 = phi i32 [ %3255, %3250 ], [ %3249, %3247 ]
  %3253 = getelementptr inbounds i32, ptr %9, i64 %3251
  %3254 = load i32, ptr %3253, align 4, !tbaa !6
  %3255 = mul nsw i32 %3254, %3252
  %3256 = add nsw i64 %3251, -1
  %3257 = trunc i64 %3251 to i32
  %3258 = icmp sgt i32 %3257, 0
  br i1 %3258, label %3250, label %3259, !llvm.loop !1226

3259:                                             ; preds = %3250, %3241
  %3260 = phi i32 [ %3245, %3241 ], [ %3255, %3250 ]
  %3261 = and i64 %3210, 4294967295
  %3262 = getelementptr inbounds i32, ptr %6, i64 %3261
  %3263 = load i32, ptr %3262, align 4, !tbaa !6
  %3264 = mul nsw i32 %3263, %3260
  %3265 = add nsw i32 %3264, %3204
  %3266 = icmp sgt i64 %3202, 2
  %3267 = add nsw i64 %3203, -1
  %3268 = add i32 %3201, 1
  br i1 %3266, label %3200, label %3269, !llvm.loop !1227

3269:                                             ; preds = %3259, %3195
  %3270 = phi i32 [ %3199, %3195 ], [ %3265, %3259 ]
  %3271 = sext i32 %3270 to i64
  %3272 = getelementptr inbounds double, ptr %2, i64 %3271
  %3273 = load double, ptr %3272, align 8, !tbaa !19
  %3274 = getelementptr inbounds float, ptr %3159, i64 %3271
  %3275 = load float, ptr %3274, align 4, !tbaa !163
  %3276 = fptosi float %3275 to i64
  %3277 = sitofp i64 %3196 to double
  %3278 = sitofp i64 %3276 to double
  %3279 = fmul fast double %3273, %3278
  %3280 = fcmp fast olt double %3279, 0.000000e+00
  %3281 = fneg fast double %3279
  %3282 = select nnan ninf i1 %3280, double %3281, double %3279
  %3283 = fmul fast double %3279, %3279
  %3284 = fmul fast double %3283, %3282
  %3285 = fadd fast double %3284, %3277
  %3286 = fptosi double %3285 to i64
  %3287 = fadd fast double %3273, %3198
  %3288 = add nuw nsw i32 %3197, 1
  br i1 %3189, label %3289, label %3336

3289:                                             ; preds = %3269
  %3290 = load i32, ptr %4, align 4, !tbaa !6
  %3291 = load i32, ptr %12, align 4, !tbaa !6
  %3292 = add nsw i32 %3291, -1
  %3293 = icmp slt i32 %3290, %3292
  br i1 %3293, label %3313, label %3294

3294:                                             ; preds = %3289
  %3295 = icmp eq i32 %3290, %3292
  br i1 %3295, label %3296, label %3329

3296:                                             ; preds = %3294
  store i32 0, ptr %4, align 4, !tbaa !6
  %3297 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3297, ptr %6, align 4, !tbaa !6
  br i1 %3194, label %3336, label %3298

3298:                                             ; preds = %3296, %3323
  %3299 = phi i64 [ %3327, %3323 ], [ 1, %3296 ]
  %3300 = getelementptr inbounds i32, ptr %4, i64 %3299
  %3301 = load i32, ptr %3300, align 4, !tbaa !6
  %3302 = getelementptr inbounds i32, ptr %12, i64 %3299
  %3303 = load i32, ptr %3302, align 4, !tbaa !6
  %3304 = add nsw i32 %3303, -1
  %3305 = icmp slt i32 %3301, %3304
  br i1 %3305, label %3306, label %3321

3306:                                             ; preds = %3298
  br i1 %3293, label %3313, label %3307

3307:                                             ; preds = %3306
  %3308 = getelementptr inbounds i32, ptr %7, i64 %3299
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = getelementptr inbounds i32, ptr %6, i64 %3299
  %3311 = load i32, ptr %3310, align 4, !tbaa !6
  %3312 = add nsw i32 %3311, %3309
  store i32 %3312, ptr %3310, align 4, !tbaa !6
  br label %3331

3313:                                             ; preds = %3289, %3306
  %3314 = phi i32 [ %3301, %3306 ], [ %3290, %3289 ]
  %3315 = phi ptr [ %3300, %3306 ], [ %4, %3289 ]
  %3316 = phi i64 [ %3299, %3306 ], [ 0, %3289 ]
  %3317 = add nsw i32 %3314, 1
  store i32 %3317, ptr %3315, align 4, !tbaa !6
  %3318 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3319 = load i32, ptr %3318, align 4, !tbaa !6
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3316
  br label %3331

3321:                                             ; preds = %3298
  %3322 = icmp eq i32 %3301, %3304
  br i1 %3322, label %3323, label %3329

3323:                                             ; preds = %3321
  store i32 0, ptr %3300, align 4, !tbaa !6
  %3324 = getelementptr inbounds i32, ptr %8, i64 %3299
  %3325 = load i32, ptr %3324, align 4, !tbaa !6
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3299
  store i32 %3325, ptr %3326, align 4, !tbaa !6
  %3327 = add nuw nsw i64 %3299, 1
  %3328 = icmp eq i64 %3327, %3192
  br i1 %3328, label %3336, label %3298, !llvm.loop !1228

3329:                                             ; preds = %3294, %3321
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3331:                                             ; preds = %3307, %3313
  %3332 = phi ptr [ %3320, %3313 ], [ %3300, %3307 ]
  %3333 = phi i32 [ %3319, %3313 ], [ 1, %3307 ]
  %3334 = load i32, ptr %3332, align 4, !tbaa !6
  %3335 = add nsw i32 %3334, %3333
  store i32 %3335, ptr %3332, align 4, !tbaa !6
  br label %3336

3336:                                             ; preds = %3323, %3331, %3296, %3269
  %3337 = icmp eq i32 %3288, %5
  br i1 %3337, label %5662, label %3195, !llvm.loop !1229

3338:                                             ; preds = %3178, %3481
  %3339 = phi i64 [ 0, %3178 ], [ %3429, %3481 ]
  %3340 = phi i32 [ 0, %3178 ], [ %3430, %3481 ]
  %3341 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3179, label %3342, label %3411

3342:                                             ; preds = %3338, %3401
  %3343 = phi i32 [ %3410, %3401 ], [ 0, %3338 ]
  %3344 = phi i64 [ %3352, %3401 ], [ %3183, %3338 ]
  %3345 = phi i64 [ %3409, %3401 ], [ %3182, %3338 ]
  %3346 = phi i32 [ %3407, %3401 ], [ %3341, %3338 ]
  %3347 = sub i32 %3181, %3343
  %3348 = tail call i32 @llvm.smin.i32(i32 %3347, i32 0)
  %3349 = sub i32 %3347, %3348
  %3350 = zext i32 %3349 to i64
  %3351 = add nuw nsw i64 %3350, 1
  %3352 = add nsw i64 %3344, -1
  %3353 = icmp ult i32 %3349, 31
  br i1 %3353, label %3389, label %3354

3354:                                             ; preds = %3342
  %3355 = and i64 %3351, 8589934560
  %3356 = sub i64 %3345, %3355
  br label %3357

3357:                                             ; preds = %3357, %3354
  %3358 = phi i64 [ 0, %3354 ], [ %3381, %3357 ]
  %3359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3377, %3357 ]
  %3360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3378, %3357 ]
  %3361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3379, %3357 ]
  %3362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3380, %3357 ]
  %3363 = sub i64 %3345, %3358
  %3364 = getelementptr inbounds i32, ptr %11, i64 %3363
  %3365 = getelementptr inbounds i32, ptr %3364, i64 -7
  %3366 = load <8 x i32>, ptr %3365, align 4, !tbaa !6
  %3367 = shufflevector <8 x i32> %3366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3368 = getelementptr inbounds i32, ptr %3364, i64 -15
  %3369 = load <8 x i32>, ptr %3368, align 4, !tbaa !6
  %3370 = shufflevector <8 x i32> %3369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3371 = getelementptr inbounds i32, ptr %3364, i64 -23
  %3372 = load <8 x i32>, ptr %3371, align 4, !tbaa !6
  %3373 = shufflevector <8 x i32> %3372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3374 = getelementptr inbounds i32, ptr %3364, i64 -31
  %3375 = load <8 x i32>, ptr %3374, align 4, !tbaa !6
  %3376 = shufflevector <8 x i32> %3375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3377 = mul <8 x i32> %3367, %3359
  %3378 = mul <8 x i32> %3370, %3360
  %3379 = mul <8 x i32> %3373, %3361
  %3380 = mul <8 x i32> %3376, %3362
  %3381 = add nuw i64 %3358, 32
  %3382 = icmp eq i64 %3381, %3355
  br i1 %3382, label %3383, label %3357, !llvm.loop !1230

3383:                                             ; preds = %3357
  %3384 = mul <8 x i32> %3378, %3377
  %3385 = mul <8 x i32> %3379, %3384
  %3386 = mul <8 x i32> %3380, %3385
  %3387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3386)
  %3388 = icmp eq i64 %3351, %3355
  br i1 %3388, label %3401, label %3389

3389:                                             ; preds = %3342, %3383
  %3390 = phi i64 [ %3345, %3342 ], [ %3356, %3383 ]
  %3391 = phi i32 [ 1, %3342 ], [ %3387, %3383 ]
  br label %3392

3392:                                             ; preds = %3389, %3392
  %3393 = phi i64 [ %3398, %3392 ], [ %3390, %3389 ]
  %3394 = phi i32 [ %3397, %3392 ], [ %3391, %3389 ]
  %3395 = getelementptr inbounds i32, ptr %11, i64 %3393
  %3396 = load i32, ptr %3395, align 4, !tbaa !6
  %3397 = mul nsw i32 %3396, %3394
  %3398 = add nsw i64 %3393, -1
  %3399 = trunc i64 %3393 to i32
  %3400 = icmp sgt i32 %3399, 0
  br i1 %3400, label %3392, label %3401, !llvm.loop !1231

3401:                                             ; preds = %3392, %3383
  %3402 = phi i32 [ %3387, %3383 ], [ %3397, %3392 ]
  %3403 = and i64 %3352, 4294967295
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3403
  %3405 = load i32, ptr %3404, align 4, !tbaa !6
  %3406 = mul nsw i32 %3405, %3402
  %3407 = add nsw i32 %3406, %3346
  %3408 = icmp sgt i64 %3344, 2
  %3409 = add nsw i64 %3345, -1
  %3410 = add i32 %3343, 1
  br i1 %3408, label %3342, label %3411, !llvm.loop !1232

3411:                                             ; preds = %3401, %3338
  %3412 = phi i32 [ %3341, %3338 ], [ %3407, %3401 ]
  %3413 = icmp slt i32 %3412, %5
  br i1 %3413, label %3416, label %3414

3414:                                             ; preds = %3411
  %3415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

3416:                                             ; preds = %3411
  %3417 = sext i32 %3412 to i64
  %3418 = getelementptr inbounds float, ptr %3159, i64 %3417
  %3419 = load float, ptr %3418, align 4, !tbaa !163
  %3420 = fptosi float %3419 to i64
  %3421 = sitofp i64 %3339 to double
  %3422 = sitofp i64 %3420 to double
  %3423 = icmp slt i64 %3420, 0
  %3424 = fneg fast double %3422
  %3425 = select i1 %3423, double %3424, double %3422
  %3426 = fmul fast double %3422, %3422
  %3427 = fmul fast double %3426, %3425
  %3428 = fadd fast double %3427, %3421
  %3429 = fptosi double %3428 to i64
  store i64 %3429, ptr %3161, align 8, !tbaa !121
  %3430 = add nuw nsw i32 %3340, 1
  br i1 %3180, label %3431, label %3481

3431:                                             ; preds = %3416
  %3432 = load i32, ptr %4, align 4, !tbaa !6
  %3433 = load i32, ptr %12, align 4, !tbaa !6
  %3434 = add nsw i32 %3433, -1
  %3435 = icmp slt i32 %3432, %3434
  br i1 %3435, label %3458, label %3436

3436:                                             ; preds = %3431
  %3437 = icmp eq i32 %3432, %3434
  br i1 %3437, label %3438, label %3474

3438:                                             ; preds = %3436
  store i32 0, ptr %4, align 4, !tbaa !6
  %3439 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3439, ptr %6, align 4, !tbaa !6
  br i1 %3185, label %3481, label %3440

3440:                                             ; preds = %3438, %3468
  %3441 = phi i64 [ %3472, %3468 ], [ 1, %3438 ]
  %3442 = getelementptr inbounds i32, ptr %4, i64 %3441
  %3443 = load i32, ptr %3442, align 4, !tbaa !6
  %3444 = getelementptr inbounds i32, ptr %12, i64 %3441
  %3445 = load i32, ptr %3444, align 4, !tbaa !6
  %3446 = add nsw i32 %3445, -1
  %3447 = icmp slt i32 %3443, %3446
  br i1 %3447, label %3448, label %3466

3448:                                             ; preds = %3440
  br i1 %3435, label %3458, label %3449

3449:                                             ; preds = %3448
  %3450 = shl i64 %3441, 32
  %3451 = add i64 %3450, -4294967296
  %3452 = ashr exact i64 %3451, 32
  %3453 = getelementptr inbounds i32, ptr %7, i64 %3452
  %3454 = load i32, ptr %3453, align 4, !tbaa !6
  %3455 = getelementptr inbounds i32, ptr %6, i64 %3441
  %3456 = load i32, ptr %3455, align 4, !tbaa !6
  %3457 = add nsw i32 %3456, %3454
  store i32 %3457, ptr %3455, align 4, !tbaa !6
  br label %3476

3458:                                             ; preds = %3431, %3448
  %3459 = phi i32 [ %3443, %3448 ], [ %3432, %3431 ]
  %3460 = phi ptr [ %3442, %3448 ], [ %4, %3431 ]
  %3461 = phi i64 [ %3441, %3448 ], [ 0, %3431 ]
  %3462 = add nsw i32 %3459, 1
  store i32 %3462, ptr %3460, align 4, !tbaa !6
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3461
  br label %3476

3466:                                             ; preds = %3440
  %3467 = icmp eq i32 %3443, %3446
  br i1 %3467, label %3468, label %3474

3468:                                             ; preds = %3466
  store i32 0, ptr %3442, align 4, !tbaa !6
  %3469 = getelementptr inbounds i32, ptr %8, i64 %3441
  %3470 = load i32, ptr %3469, align 4, !tbaa !6
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3441
  store i32 %3470, ptr %3471, align 4, !tbaa !6
  %3472 = add nuw nsw i64 %3441, 1
  %3473 = icmp eq i64 %3472, %3183
  br i1 %3473, label %3481, label %3440, !llvm.loop !1233

3474:                                             ; preds = %3436, %3466
  %3475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3476:                                             ; preds = %3449, %3458
  %3477 = phi ptr [ %3465, %3458 ], [ %3442, %3449 ]
  %3478 = phi i32 [ %3464, %3458 ], [ 1, %3449 ]
  %3479 = load i32, ptr %3477, align 4, !tbaa !6
  %3480 = add nsw i32 %3479, %3478
  store i32 %3480, ptr %3477, align 4, !tbaa !6
  br label %3481

3481:                                             ; preds = %3468, %3476, %3438, %3416
  %3482 = icmp eq i32 %3430, %5
  br i1 %3482, label %5666, label %3338, !llvm.loop !1234

3483:                                             ; preds = %3171
  %3484 = getelementptr inbounds i32, ptr %3, i64 %19
  %3485 = load i32, ptr %3484, align 4, !tbaa !6
  %3486 = icmp eq i32 %3485, 0
  %3487 = icmp sgt i32 %5, 0
  br i1 %3486, label %3497, label %3488

3488:                                             ; preds = %3483
  br i1 %3487, label %3489, label %5666

3489:                                             ; preds = %3488
  %3490 = icmp sgt i32 %13, 1
  %3491 = icmp sgt i32 %13, 0
  %3492 = add i32 %13, -2
  %3493 = zext i32 %3492 to i64
  %3494 = zext i32 %13 to i64
  %3495 = add nuw i32 %5, 1
  %3496 = icmp eq i32 %13, 1
  br label %3643

3497:                                             ; preds = %3483
  br i1 %3487, label %3498, label %5666

3498:                                             ; preds = %3497
  %3499 = icmp sgt i32 %13, 1
  %3500 = icmp sgt i32 %13, 0
  %3501 = add i32 %13, -2
  %3502 = zext i32 %3501 to i64
  %3503 = zext i32 %13 to i64
  %3504 = add nuw i32 %5, 1
  %3505 = icmp eq i32 %13, 1
  br label %3506

3506:                                             ; preds = %3498, %3641
  %3507 = phi i64 [ 0, %3498 ], [ %3591, %3641 ]
  %3508 = phi i32 [ 0, %3498 ], [ %3593, %3641 ]
  %3509 = phi double [ 0.000000e+00, %3498 ], [ %3592, %3641 ]
  %3510 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3499, label %3511, label %3580

3511:                                             ; preds = %3506, %3570
  %3512 = phi i32 [ %3579, %3570 ], [ 0, %3506 ]
  %3513 = phi i64 [ %3521, %3570 ], [ %3503, %3506 ]
  %3514 = phi i64 [ %3578, %3570 ], [ %3502, %3506 ]
  %3515 = phi i32 [ %3576, %3570 ], [ %3510, %3506 ]
  %3516 = sub i32 %3501, %3512
  %3517 = tail call i32 @llvm.smin.i32(i32 %3516, i32 0)
  %3518 = sub i32 %3516, %3517
  %3519 = zext i32 %3518 to i64
  %3520 = add nuw nsw i64 %3519, 1
  %3521 = add nsw i64 %3513, -1
  %3522 = icmp ult i32 %3518, 31
  br i1 %3522, label %3558, label %3523

3523:                                             ; preds = %3511
  %3524 = and i64 %3520, 8589934560
  %3525 = sub i64 %3514, %3524
  br label %3526

3526:                                             ; preds = %3526, %3523
  %3527 = phi i64 [ 0, %3523 ], [ %3550, %3526 ]
  %3528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3546, %3526 ]
  %3529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3547, %3526 ]
  %3530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3548, %3526 ]
  %3531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3549, %3526 ]
  %3532 = sub i64 %3514, %3527
  %3533 = getelementptr inbounds i32, ptr %9, i64 %3532
  %3534 = getelementptr inbounds i32, ptr %3533, i64 -7
  %3535 = load <8 x i32>, ptr %3534, align 4, !tbaa !6
  %3536 = shufflevector <8 x i32> %3535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3537 = getelementptr inbounds i32, ptr %3533, i64 -15
  %3538 = load <8 x i32>, ptr %3537, align 4, !tbaa !6
  %3539 = shufflevector <8 x i32> %3538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3540 = getelementptr inbounds i32, ptr %3533, i64 -23
  %3541 = load <8 x i32>, ptr %3540, align 4, !tbaa !6
  %3542 = shufflevector <8 x i32> %3541, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3543 = getelementptr inbounds i32, ptr %3533, i64 -31
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !6
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = mul <8 x i32> %3536, %3528
  %3547 = mul <8 x i32> %3539, %3529
  %3548 = mul <8 x i32> %3542, %3530
  %3549 = mul <8 x i32> %3545, %3531
  %3550 = add nuw i64 %3527, 32
  %3551 = icmp eq i64 %3550, %3524
  br i1 %3551, label %3552, label %3526, !llvm.loop !1235

3552:                                             ; preds = %3526
  %3553 = mul <8 x i32> %3547, %3546
  %3554 = mul <8 x i32> %3548, %3553
  %3555 = mul <8 x i32> %3549, %3554
  %3556 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3555)
  %3557 = icmp eq i64 %3520, %3524
  br i1 %3557, label %3570, label %3558

3558:                                             ; preds = %3511, %3552
  %3559 = phi i64 [ %3514, %3511 ], [ %3525, %3552 ]
  %3560 = phi i32 [ 1, %3511 ], [ %3556, %3552 ]
  br label %3561

3561:                                             ; preds = %3558, %3561
  %3562 = phi i64 [ %3567, %3561 ], [ %3559, %3558 ]
  %3563 = phi i32 [ %3566, %3561 ], [ %3560, %3558 ]
  %3564 = getelementptr inbounds i32, ptr %9, i64 %3562
  %3565 = load i32, ptr %3564, align 4, !tbaa !6
  %3566 = mul nsw i32 %3565, %3563
  %3567 = add nsw i64 %3562, -1
  %3568 = trunc i64 %3562 to i32
  %3569 = icmp sgt i32 %3568, 0
  br i1 %3569, label %3561, label %3570, !llvm.loop !1236

3570:                                             ; preds = %3561, %3552
  %3571 = phi i32 [ %3556, %3552 ], [ %3566, %3561 ]
  %3572 = and i64 %3521, 4294967295
  %3573 = getelementptr inbounds i32, ptr %6, i64 %3572
  %3574 = load i32, ptr %3573, align 4, !tbaa !6
  %3575 = mul nsw i32 %3574, %3571
  %3576 = add nsw i32 %3575, %3515
  %3577 = icmp sgt i64 %3513, 2
  %3578 = add nsw i64 %3514, -1
  %3579 = add i32 %3512, 1
  br i1 %3577, label %3511, label %3580, !llvm.loop !1237

3580:                                             ; preds = %3570, %3506
  %3581 = phi i32 [ %3510, %3506 ], [ %3576, %3570 ]
  %3582 = sext i32 %3581 to i64
  %3583 = getelementptr inbounds float, ptr %3159, i64 %3582
  %3584 = load float, ptr %3583, align 4, !tbaa !163
  %3585 = fptosi float %3584 to i64
  %3586 = icmp slt i64 %3585, 0
  %3587 = mul nsw i64 %3585, %3585
  %3588 = sub nsw i64 0, %3587
  %3589 = select i1 %3586, i64 %3588, i64 %3587
  %3590 = mul i64 %3589, %3585
  %3591 = add nsw i64 %3590, %3507
  %3592 = fadd fast double %3509, 1.000000e+00
  %3593 = add nuw nsw i32 %3508, 1
  br i1 %3500, label %3594, label %3641

3594:                                             ; preds = %3580
  %3595 = load i32, ptr %4, align 4, !tbaa !6
  %3596 = load i32, ptr %12, align 4, !tbaa !6
  %3597 = add nsw i32 %3596, -1
  %3598 = icmp slt i32 %3595, %3597
  br i1 %3598, label %3618, label %3599

3599:                                             ; preds = %3594
  %3600 = icmp eq i32 %3595, %3597
  br i1 %3600, label %3601, label %3634

3601:                                             ; preds = %3599
  store i32 0, ptr %4, align 4, !tbaa !6
  %3602 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3602, ptr %6, align 4, !tbaa !6
  br i1 %3505, label %3641, label %3603

3603:                                             ; preds = %3601, %3628
  %3604 = phi i64 [ %3632, %3628 ], [ 1, %3601 ]
  %3605 = getelementptr inbounds i32, ptr %4, i64 %3604
  %3606 = load i32, ptr %3605, align 4, !tbaa !6
  %3607 = getelementptr inbounds i32, ptr %12, i64 %3604
  %3608 = load i32, ptr %3607, align 4, !tbaa !6
  %3609 = add nsw i32 %3608, -1
  %3610 = icmp slt i32 %3606, %3609
  br i1 %3610, label %3611, label %3626

3611:                                             ; preds = %3603
  br i1 %3598, label %3618, label %3612

3612:                                             ; preds = %3611
  %3613 = getelementptr inbounds i32, ptr %7, i64 %3604
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %6, i64 %3604
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, %3614
  store i32 %3617, ptr %3615, align 4, !tbaa !6
  br label %3636

3618:                                             ; preds = %3594, %3611
  %3619 = phi i32 [ %3606, %3611 ], [ %3595, %3594 ]
  %3620 = phi ptr [ %3605, %3611 ], [ %4, %3594 ]
  %3621 = phi i64 [ %3604, %3611 ], [ 0, %3594 ]
  %3622 = add nsw i32 %3619, 1
  store i32 %3622, ptr %3620, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %7, i64 %3621
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = getelementptr inbounds i32, ptr %6, i64 %3621
  br label %3636

3626:                                             ; preds = %3603
  %3627 = icmp eq i32 %3606, %3609
  br i1 %3627, label %3628, label %3634

3628:                                             ; preds = %3626
  store i32 0, ptr %3605, align 4, !tbaa !6
  %3629 = getelementptr inbounds i32, ptr %8, i64 %3604
  %3630 = load i32, ptr %3629, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %6, i64 %3604
  store i32 %3630, ptr %3631, align 4, !tbaa !6
  %3632 = add nuw nsw i64 %3604, 1
  %3633 = icmp eq i64 %3632, %3503
  br i1 %3633, label %3641, label %3603, !llvm.loop !1238

3634:                                             ; preds = %3599, %3626
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  %3635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3636:                                             ; preds = %3612, %3618
  %3637 = phi ptr [ %3625, %3618 ], [ %3605, %3612 ]
  %3638 = phi i32 [ %3624, %3618 ], [ 1, %3612 ]
  %3639 = load i32, ptr %3637, align 4, !tbaa !6
  %3640 = add nsw i32 %3639, %3638
  store i32 %3640, ptr %3637, align 4, !tbaa !6
  br label %3641

3641:                                             ; preds = %3628, %3636, %3601, %3580
  %3642 = icmp eq i32 %3593, %5
  br i1 %3642, label %5663, label %3506, !llvm.loop !1239

3643:                                             ; preds = %3489, %3783
  %3644 = phi i64 [ 0, %3489 ], [ %3731, %3783 ]
  %3645 = phi i32 [ 0, %3489 ], [ %3732, %3783 ]
  %3646 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3490, label %3647, label %3716

3647:                                             ; preds = %3643, %3706
  %3648 = phi i32 [ %3715, %3706 ], [ 0, %3643 ]
  %3649 = phi i64 [ %3657, %3706 ], [ %3494, %3643 ]
  %3650 = phi i64 [ %3714, %3706 ], [ %3493, %3643 ]
  %3651 = phi i32 [ %3712, %3706 ], [ %3646, %3643 ]
  %3652 = sub i32 %3492, %3648
  %3653 = tail call i32 @llvm.smin.i32(i32 %3652, i32 0)
  %3654 = sub i32 %3652, %3653
  %3655 = zext i32 %3654 to i64
  %3656 = add nuw nsw i64 %3655, 1
  %3657 = add nsw i64 %3649, -1
  %3658 = icmp ult i32 %3654, 31
  br i1 %3658, label %3694, label %3659

3659:                                             ; preds = %3647
  %3660 = and i64 %3656, 8589934560
  %3661 = sub i64 %3650, %3660
  br label %3662

3662:                                             ; preds = %3662, %3659
  %3663 = phi i64 [ 0, %3659 ], [ %3686, %3662 ]
  %3664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3682, %3662 ]
  %3665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3683, %3662 ]
  %3666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3684, %3662 ]
  %3667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3685, %3662 ]
  %3668 = sub i64 %3650, %3663
  %3669 = getelementptr inbounds i32, ptr %11, i64 %3668
  %3670 = getelementptr inbounds i32, ptr %3669, i64 -7
  %3671 = load <8 x i32>, ptr %3670, align 4, !tbaa !6
  %3672 = shufflevector <8 x i32> %3671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3673 = getelementptr inbounds i32, ptr %3669, i64 -15
  %3674 = load <8 x i32>, ptr %3673, align 4, !tbaa !6
  %3675 = shufflevector <8 x i32> %3674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3676 = getelementptr inbounds i32, ptr %3669, i64 -23
  %3677 = load <8 x i32>, ptr %3676, align 4, !tbaa !6
  %3678 = shufflevector <8 x i32> %3677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3679 = getelementptr inbounds i32, ptr %3669, i64 -31
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !6
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = mul <8 x i32> %3672, %3664
  %3683 = mul <8 x i32> %3675, %3665
  %3684 = mul <8 x i32> %3678, %3666
  %3685 = mul <8 x i32> %3681, %3667
  %3686 = add nuw i64 %3663, 32
  %3687 = icmp eq i64 %3686, %3660
  br i1 %3687, label %3688, label %3662, !llvm.loop !1240

3688:                                             ; preds = %3662
  %3689 = mul <8 x i32> %3683, %3682
  %3690 = mul <8 x i32> %3684, %3689
  %3691 = mul <8 x i32> %3685, %3690
  %3692 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3691)
  %3693 = icmp eq i64 %3656, %3660
  br i1 %3693, label %3706, label %3694

3694:                                             ; preds = %3647, %3688
  %3695 = phi i64 [ %3650, %3647 ], [ %3661, %3688 ]
  %3696 = phi i32 [ 1, %3647 ], [ %3692, %3688 ]
  br label %3697

3697:                                             ; preds = %3694, %3697
  %3698 = phi i64 [ %3703, %3697 ], [ %3695, %3694 ]
  %3699 = phi i32 [ %3702, %3697 ], [ %3696, %3694 ]
  %3700 = getelementptr inbounds i32, ptr %11, i64 %3698
  %3701 = load i32, ptr %3700, align 4, !tbaa !6
  %3702 = mul nsw i32 %3701, %3699
  %3703 = add nsw i64 %3698, -1
  %3704 = trunc i64 %3698 to i32
  %3705 = icmp sgt i32 %3704, 0
  br i1 %3705, label %3697, label %3706, !llvm.loop !1241

3706:                                             ; preds = %3697, %3688
  %3707 = phi i32 [ %3692, %3688 ], [ %3702, %3697 ]
  %3708 = and i64 %3657, 4294967295
  %3709 = getelementptr inbounds i32, ptr %6, i64 %3708
  %3710 = load i32, ptr %3709, align 4, !tbaa !6
  %3711 = mul nsw i32 %3710, %3707
  %3712 = add nsw i32 %3711, %3651
  %3713 = icmp sgt i64 %3649, 2
  %3714 = add nsw i64 %3650, -1
  %3715 = add i32 %3648, 1
  br i1 %3713, label %3647, label %3716, !llvm.loop !1242

3716:                                             ; preds = %3706, %3643
  %3717 = phi i32 [ %3646, %3643 ], [ %3712, %3706 ]
  %3718 = icmp slt i32 %3717, %5
  br i1 %3718, label %3721, label %3719

3719:                                             ; preds = %3716
  %3720 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

3721:                                             ; preds = %3716
  %3722 = sext i32 %3717 to i64
  %3723 = getelementptr inbounds float, ptr %3159, i64 %3722
  %3724 = load float, ptr %3723, align 4, !tbaa !163
  %3725 = fptosi float %3724 to i64
  %3726 = icmp slt i64 %3725, 0
  %3727 = mul nsw i64 %3725, %3725
  %3728 = sub nsw i64 0, %3727
  %3729 = select i1 %3726, i64 %3728, i64 %3727
  %3730 = mul i64 %3729, %3725
  %3731 = add nsw i64 %3730, %3644
  store i64 %3731, ptr %3161, align 8, !tbaa !121
  %3732 = add nuw nsw i32 %3645, 1
  br i1 %3491, label %3733, label %3783

3733:                                             ; preds = %3721
  %3734 = load i32, ptr %4, align 4, !tbaa !6
  %3735 = load i32, ptr %12, align 4, !tbaa !6
  %3736 = add nsw i32 %3735, -1
  %3737 = icmp slt i32 %3734, %3736
  br i1 %3737, label %3760, label %3738

3738:                                             ; preds = %3733
  %3739 = icmp eq i32 %3734, %3736
  br i1 %3739, label %3740, label %3776

3740:                                             ; preds = %3738
  store i32 0, ptr %4, align 4, !tbaa !6
  %3741 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3741, ptr %6, align 4, !tbaa !6
  br i1 %3496, label %3783, label %3742

3742:                                             ; preds = %3740, %3770
  %3743 = phi i64 [ %3774, %3770 ], [ 1, %3740 ]
  %3744 = getelementptr inbounds i32, ptr %4, i64 %3743
  %3745 = load i32, ptr %3744, align 4, !tbaa !6
  %3746 = getelementptr inbounds i32, ptr %12, i64 %3743
  %3747 = load i32, ptr %3746, align 4, !tbaa !6
  %3748 = add nsw i32 %3747, -1
  %3749 = icmp slt i32 %3745, %3748
  br i1 %3749, label %3750, label %3768

3750:                                             ; preds = %3742
  br i1 %3737, label %3760, label %3751

3751:                                             ; preds = %3750
  %3752 = shl i64 %3743, 32
  %3753 = add i64 %3752, -4294967296
  %3754 = ashr exact i64 %3753, 32
  %3755 = getelementptr inbounds i32, ptr %7, i64 %3754
  %3756 = load i32, ptr %3755, align 4, !tbaa !6
  %3757 = getelementptr inbounds i32, ptr %6, i64 %3743
  %3758 = load i32, ptr %3757, align 4, !tbaa !6
  %3759 = add nsw i32 %3758, %3756
  store i32 %3759, ptr %3757, align 4, !tbaa !6
  br label %3778

3760:                                             ; preds = %3733, %3750
  %3761 = phi i32 [ %3745, %3750 ], [ %3734, %3733 ]
  %3762 = phi ptr [ %3744, %3750 ], [ %4, %3733 ]
  %3763 = phi i64 [ %3743, %3750 ], [ 0, %3733 ]
  %3764 = add nsw i32 %3761, 1
  store i32 %3764, ptr %3762, align 4, !tbaa !6
  %3765 = getelementptr inbounds i32, ptr %7, i64 %3763
  %3766 = load i32, ptr %3765, align 4, !tbaa !6
  %3767 = getelementptr inbounds i32, ptr %6, i64 %3763
  br label %3778

3768:                                             ; preds = %3742
  %3769 = icmp eq i32 %3745, %3748
  br i1 %3769, label %3770, label %3776

3770:                                             ; preds = %3768
  store i32 0, ptr %3744, align 4, !tbaa !6
  %3771 = getelementptr inbounds i32, ptr %8, i64 %3743
  %3772 = load i32, ptr %3771, align 4, !tbaa !6
  %3773 = getelementptr inbounds i32, ptr %6, i64 %3743
  store i32 %3772, ptr %3773, align 4, !tbaa !6
  %3774 = add nuw nsw i64 %3743, 1
  %3775 = icmp eq i64 %3774, %3494
  br i1 %3775, label %3783, label %3742, !llvm.loop !1243

3776:                                             ; preds = %3738, %3768
  %3777 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3778:                                             ; preds = %3751, %3760
  %3779 = phi ptr [ %3767, %3760 ], [ %3744, %3751 ]
  %3780 = phi i32 [ %3766, %3760 ], [ 1, %3751 ]
  %3781 = load i32, ptr %3779, align 4, !tbaa !6
  %3782 = add nsw i32 %3781, %3780
  store i32 %3782, ptr %3779, align 4, !tbaa !6
  br label %3783

3783:                                             ; preds = %3770, %3778, %3740, %3721
  %3784 = icmp eq i32 %3732, %5
  br i1 %3784, label %5666, label %3643, !llvm.loop !1244

3785:                                             ; preds = %3171
  %3786 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

3787:                                             ; preds = %18
  %3788 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3789 = load ptr, ptr %3788, align 8, !tbaa !10
  %3790 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3791 = load ptr, ptr %3790, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3791, align 8, !tbaa !19
  %3792 = icmp eq i32 %13, 0
  br i1 %3792, label %3793, label %3801

3793:                                             ; preds = %3787
  %3794 = load float, ptr %3789, align 4, !tbaa !163
  %3795 = fpext float %3794 to double
  %3796 = fcmp fast olt float %3794, 0.000000e+00
  %3797 = fneg fast double %3795
  %3798 = select i1 %3796, double %3797, double %3795
  %3799 = fmul fast double %3795, %3795
  %3800 = fmul fast double %3799, %3798
  store double %3800, ptr %3791, align 8, !tbaa !19
  br label %5666

3801:                                             ; preds = %3787
  switch i32 %1, label %4409 [
    i32 1, label %3802
    i32 0, label %4107
  ]

3802:                                             ; preds = %3801
  %3803 = getelementptr inbounds i32, ptr %3, i64 %19
  %3804 = load i32, ptr %3803, align 4, !tbaa !6
  %3805 = icmp eq i32 %3804, 0
  %3806 = icmp sgt i32 %5, 0
  br i1 %3805, label %3816, label %3807

3807:                                             ; preds = %3802
  br i1 %3806, label %3808, label %5666

3808:                                             ; preds = %3807
  %3809 = icmp sgt i32 %13, 1
  %3810 = icmp sgt i32 %13, 0
  %3811 = add i32 %13, -2
  %3812 = zext i32 %3811 to i64
  %3813 = zext i32 %13 to i64
  %3814 = add nuw i32 %5, 1
  %3815 = icmp eq i32 %13, 1
  br label %3965

3816:                                             ; preds = %3802
  br i1 %3806, label %3817, label %5666

3817:                                             ; preds = %3816
  %3818 = icmp sgt i32 %13, 1
  %3819 = icmp sgt i32 %13, 0
  %3820 = add i32 %13, -2
  %3821 = zext i32 %3820 to i64
  %3822 = zext i32 %13 to i64
  %3823 = add nuw i32 %5, 1
  %3824 = icmp eq i32 %13, 1
  br label %3825

3825:                                             ; preds = %3817, %3963
  %3826 = phi double [ 0.000000e+00, %3817 ], [ %3913, %3963 ]
  %3827 = phi i32 [ 0, %3817 ], [ %3915, %3963 ]
  %3828 = phi double [ 0.000000e+00, %3817 ], [ %3914, %3963 ]
  %3829 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3818, label %3830, label %3899

3830:                                             ; preds = %3825, %3889
  %3831 = phi i32 [ %3898, %3889 ], [ 0, %3825 ]
  %3832 = phi i64 [ %3840, %3889 ], [ %3822, %3825 ]
  %3833 = phi i64 [ %3897, %3889 ], [ %3821, %3825 ]
  %3834 = phi i32 [ %3895, %3889 ], [ %3829, %3825 ]
  %3835 = sub i32 %3820, %3831
  %3836 = tail call i32 @llvm.smin.i32(i32 %3835, i32 0)
  %3837 = sub i32 %3835, %3836
  %3838 = zext i32 %3837 to i64
  %3839 = add nuw nsw i64 %3838, 1
  %3840 = add nsw i64 %3832, -1
  %3841 = icmp ult i32 %3837, 31
  br i1 %3841, label %3877, label %3842

3842:                                             ; preds = %3830
  %3843 = and i64 %3839, 8589934560
  %3844 = sub i64 %3833, %3843
  br label %3845

3845:                                             ; preds = %3845, %3842
  %3846 = phi i64 [ 0, %3842 ], [ %3869, %3845 ]
  %3847 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3842 ], [ %3865, %3845 ]
  %3848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3842 ], [ %3866, %3845 ]
  %3849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3842 ], [ %3867, %3845 ]
  %3850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3842 ], [ %3868, %3845 ]
  %3851 = sub i64 %3833, %3846
  %3852 = getelementptr inbounds i32, ptr %9, i64 %3851
  %3853 = getelementptr inbounds i32, ptr %3852, i64 -7
  %3854 = load <8 x i32>, ptr %3853, align 4, !tbaa !6
  %3855 = shufflevector <8 x i32> %3854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3856 = getelementptr inbounds i32, ptr %3852, i64 -15
  %3857 = load <8 x i32>, ptr %3856, align 4, !tbaa !6
  %3858 = shufflevector <8 x i32> %3857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3859 = getelementptr inbounds i32, ptr %3852, i64 -23
  %3860 = load <8 x i32>, ptr %3859, align 4, !tbaa !6
  %3861 = shufflevector <8 x i32> %3860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3862 = getelementptr inbounds i32, ptr %3852, i64 -31
  %3863 = load <8 x i32>, ptr %3862, align 4, !tbaa !6
  %3864 = shufflevector <8 x i32> %3863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3865 = mul <8 x i32> %3855, %3847
  %3866 = mul <8 x i32> %3858, %3848
  %3867 = mul <8 x i32> %3861, %3849
  %3868 = mul <8 x i32> %3864, %3850
  %3869 = add nuw i64 %3846, 32
  %3870 = icmp eq i64 %3869, %3843
  br i1 %3870, label %3871, label %3845, !llvm.loop !1245

3871:                                             ; preds = %3845
  %3872 = mul <8 x i32> %3866, %3865
  %3873 = mul <8 x i32> %3867, %3872
  %3874 = mul <8 x i32> %3868, %3873
  %3875 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3874)
  %3876 = icmp eq i64 %3839, %3843
  br i1 %3876, label %3889, label %3877

3877:                                             ; preds = %3830, %3871
  %3878 = phi i64 [ %3833, %3830 ], [ %3844, %3871 ]
  %3879 = phi i32 [ 1, %3830 ], [ %3875, %3871 ]
  br label %3880

3880:                                             ; preds = %3877, %3880
  %3881 = phi i64 [ %3886, %3880 ], [ %3878, %3877 ]
  %3882 = phi i32 [ %3885, %3880 ], [ %3879, %3877 ]
  %3883 = getelementptr inbounds i32, ptr %9, i64 %3881
  %3884 = load i32, ptr %3883, align 4, !tbaa !6
  %3885 = mul nsw i32 %3884, %3882
  %3886 = add nsw i64 %3881, -1
  %3887 = trunc i64 %3881 to i32
  %3888 = icmp sgt i32 %3887, 0
  br i1 %3888, label %3880, label %3889, !llvm.loop !1246

3889:                                             ; preds = %3880, %3871
  %3890 = phi i32 [ %3875, %3871 ], [ %3885, %3880 ]
  %3891 = and i64 %3840, 4294967295
  %3892 = getelementptr inbounds i32, ptr %6, i64 %3891
  %3893 = load i32, ptr %3892, align 4, !tbaa !6
  %3894 = mul nsw i32 %3893, %3890
  %3895 = add nsw i32 %3894, %3834
  %3896 = icmp sgt i64 %3832, 2
  %3897 = add nsw i64 %3833, -1
  %3898 = add i32 %3831, 1
  br i1 %3896, label %3830, label %3899, !llvm.loop !1247

3899:                                             ; preds = %3889, %3825
  %3900 = phi i32 [ %3829, %3825 ], [ %3895, %3889 ]
  %3901 = sext i32 %3900 to i64
  %3902 = getelementptr inbounds double, ptr %2, i64 %3901
  %3903 = load double, ptr %3902, align 8, !tbaa !19
  %3904 = getelementptr inbounds float, ptr %3789, i64 %3901
  %3905 = load float, ptr %3904, align 4, !tbaa !163
  %3906 = fpext float %3905 to double
  %3907 = fmul fast double %3903, %3906
  %3908 = fcmp fast olt double %3907, 0.000000e+00
  %3909 = fneg fast double %3907
  %3910 = select nnan ninf i1 %3908, double %3909, double %3907
  %3911 = fmul fast double %3907, %3907
  %3912 = fmul fast double %3911, %3910
  %3913 = fadd fast double %3912, %3826
  store double %3913, ptr %3791, align 8, !tbaa !19
  %3914 = fadd fast double %3903, %3828
  %3915 = add nuw nsw i32 %3827, 1
  br i1 %3819, label %3916, label %3963

3916:                                             ; preds = %3899
  %3917 = load i32, ptr %4, align 4, !tbaa !6
  %3918 = load i32, ptr %12, align 4, !tbaa !6
  %3919 = add nsw i32 %3918, -1
  %3920 = icmp slt i32 %3917, %3919
  br i1 %3920, label %3940, label %3921

3921:                                             ; preds = %3916
  %3922 = icmp eq i32 %3917, %3919
  br i1 %3922, label %3923, label %3956

3923:                                             ; preds = %3921
  store i32 0, ptr %4, align 4, !tbaa !6
  %3924 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3924, ptr %6, align 4, !tbaa !6
  br i1 %3824, label %3963, label %3925

3925:                                             ; preds = %3923, %3950
  %3926 = phi i64 [ %3954, %3950 ], [ 1, %3923 ]
  %3927 = getelementptr inbounds i32, ptr %4, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !6
  %3929 = getelementptr inbounds i32, ptr %12, i64 %3926
  %3930 = load i32, ptr %3929, align 4, !tbaa !6
  %3931 = add nsw i32 %3930, -1
  %3932 = icmp slt i32 %3928, %3931
  br i1 %3932, label %3933, label %3948

3933:                                             ; preds = %3925
  br i1 %3920, label %3940, label %3934

3934:                                             ; preds = %3933
  %3935 = getelementptr inbounds i32, ptr %7, i64 %3926
  %3936 = load i32, ptr %3935, align 4, !tbaa !6
  %3937 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3938 = load i32, ptr %3937, align 4, !tbaa !6
  %3939 = add nsw i32 %3938, %3936
  store i32 %3939, ptr %3937, align 4, !tbaa !6
  br label %3958

3940:                                             ; preds = %3916, %3933
  %3941 = phi i32 [ %3928, %3933 ], [ %3917, %3916 ]
  %3942 = phi ptr [ %3927, %3933 ], [ %4, %3916 ]
  %3943 = phi i64 [ %3926, %3933 ], [ 0, %3916 ]
  %3944 = add nsw i32 %3941, 1
  store i32 %3944, ptr %3942, align 4, !tbaa !6
  %3945 = getelementptr inbounds i32, ptr %7, i64 %3943
  %3946 = load i32, ptr %3945, align 4, !tbaa !6
  %3947 = getelementptr inbounds i32, ptr %6, i64 %3943
  br label %3958

3948:                                             ; preds = %3925
  %3949 = icmp eq i32 %3928, %3931
  br i1 %3949, label %3950, label %3956

3950:                                             ; preds = %3948
  store i32 0, ptr %3927, align 4, !tbaa !6
  %3951 = getelementptr inbounds i32, ptr %8, i64 %3926
  %3952 = load i32, ptr %3951, align 4, !tbaa !6
  %3953 = getelementptr inbounds i32, ptr %6, i64 %3926
  store i32 %3952, ptr %3953, align 4, !tbaa !6
  %3954 = add nuw nsw i64 %3926, 1
  %3955 = icmp eq i64 %3954, %3822
  br i1 %3955, label %3963, label %3925, !llvm.loop !1248

3956:                                             ; preds = %3921, %3948
  %3957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

3958:                                             ; preds = %3934, %3940
  %3959 = phi ptr [ %3947, %3940 ], [ %3927, %3934 ]
  %3960 = phi i32 [ %3946, %3940 ], [ 1, %3934 ]
  %3961 = load i32, ptr %3959, align 4, !tbaa !6
  %3962 = add nsw i32 %3961, %3960
  store i32 %3962, ptr %3959, align 4, !tbaa !6
  br label %3963

3963:                                             ; preds = %3950, %3958, %3923, %3899
  %3964 = icmp eq i32 %3915, %5
  br i1 %3964, label %5666, label %3825, !llvm.loop !1249

3965:                                             ; preds = %3808, %4105
  %3966 = phi double [ 0.000000e+00, %3808 ], [ %4053, %4105 ]
  %3967 = phi i32 [ 0, %3808 ], [ %4054, %4105 ]
  %3968 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3809, label %3969, label %4038

3969:                                             ; preds = %3965, %4028
  %3970 = phi i32 [ %4037, %4028 ], [ 0, %3965 ]
  %3971 = phi i64 [ %3979, %4028 ], [ %3813, %3965 ]
  %3972 = phi i64 [ %4036, %4028 ], [ %3812, %3965 ]
  %3973 = phi i32 [ %4034, %4028 ], [ %3968, %3965 ]
  %3974 = sub i32 %3811, %3970
  %3975 = tail call i32 @llvm.smin.i32(i32 %3974, i32 0)
  %3976 = sub i32 %3974, %3975
  %3977 = zext i32 %3976 to i64
  %3978 = add nuw nsw i64 %3977, 1
  %3979 = add nsw i64 %3971, -1
  %3980 = icmp ult i32 %3976, 31
  br i1 %3980, label %4016, label %3981

3981:                                             ; preds = %3969
  %3982 = and i64 %3978, 8589934560
  %3983 = sub i64 %3972, %3982
  br label %3984

3984:                                             ; preds = %3984, %3981
  %3985 = phi i64 [ 0, %3981 ], [ %4008, %3984 ]
  %3986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3981 ], [ %4004, %3984 ]
  %3987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3981 ], [ %4005, %3984 ]
  %3988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3981 ], [ %4006, %3984 ]
  %3989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3981 ], [ %4007, %3984 ]
  %3990 = sub i64 %3972, %3985
  %3991 = getelementptr inbounds i32, ptr %11, i64 %3990
  %3992 = getelementptr inbounds i32, ptr %3991, i64 -7
  %3993 = load <8 x i32>, ptr %3992, align 4, !tbaa !6
  %3994 = shufflevector <8 x i32> %3993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3995 = getelementptr inbounds i32, ptr %3991, i64 -15
  %3996 = load <8 x i32>, ptr %3995, align 4, !tbaa !6
  %3997 = shufflevector <8 x i32> %3996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3998 = getelementptr inbounds i32, ptr %3991, i64 -23
  %3999 = load <8 x i32>, ptr %3998, align 4, !tbaa !6
  %4000 = shufflevector <8 x i32> %3999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4001 = getelementptr inbounds i32, ptr %3991, i64 -31
  %4002 = load <8 x i32>, ptr %4001, align 4, !tbaa !6
  %4003 = shufflevector <8 x i32> %4002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4004 = mul <8 x i32> %3994, %3986
  %4005 = mul <8 x i32> %3997, %3987
  %4006 = mul <8 x i32> %4000, %3988
  %4007 = mul <8 x i32> %4003, %3989
  %4008 = add nuw i64 %3985, 32
  %4009 = icmp eq i64 %4008, %3982
  br i1 %4009, label %4010, label %3984, !llvm.loop !1250

4010:                                             ; preds = %3984
  %4011 = mul <8 x i32> %4005, %4004
  %4012 = mul <8 x i32> %4006, %4011
  %4013 = mul <8 x i32> %4007, %4012
  %4014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4013)
  %4015 = icmp eq i64 %3978, %3982
  br i1 %4015, label %4028, label %4016

4016:                                             ; preds = %3969, %4010
  %4017 = phi i64 [ %3972, %3969 ], [ %3983, %4010 ]
  %4018 = phi i32 [ 1, %3969 ], [ %4014, %4010 ]
  br label %4019

4019:                                             ; preds = %4016, %4019
  %4020 = phi i64 [ %4025, %4019 ], [ %4017, %4016 ]
  %4021 = phi i32 [ %4024, %4019 ], [ %4018, %4016 ]
  %4022 = getelementptr inbounds i32, ptr %11, i64 %4020
  %4023 = load i32, ptr %4022, align 4, !tbaa !6
  %4024 = mul nsw i32 %4023, %4021
  %4025 = add nsw i64 %4020, -1
  %4026 = trunc i64 %4020 to i32
  %4027 = icmp sgt i32 %4026, 0
  br i1 %4027, label %4019, label %4028, !llvm.loop !1251

4028:                                             ; preds = %4019, %4010
  %4029 = phi i32 [ %4014, %4010 ], [ %4024, %4019 ]
  %4030 = and i64 %3979, 4294967295
  %4031 = getelementptr inbounds i32, ptr %6, i64 %4030
  %4032 = load i32, ptr %4031, align 4, !tbaa !6
  %4033 = mul nsw i32 %4032, %4029
  %4034 = add nsw i32 %4033, %3973
  %4035 = icmp sgt i64 %3971, 2
  %4036 = add nsw i64 %3972, -1
  %4037 = add i32 %3970, 1
  br i1 %4035, label %3969, label %4038, !llvm.loop !1252

4038:                                             ; preds = %4028, %3965
  %4039 = phi i32 [ %3968, %3965 ], [ %4034, %4028 ]
  %4040 = icmp slt i32 %4039, %5
  br i1 %4040, label %4043, label %4041

4041:                                             ; preds = %4038
  %4042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

4043:                                             ; preds = %4038
  %4044 = sext i32 %4039 to i64
  %4045 = getelementptr inbounds float, ptr %3789, i64 %4044
  %4046 = load float, ptr %4045, align 4, !tbaa !163
  %4047 = fpext float %4046 to double
  %4048 = fcmp fast olt float %4046, 0.000000e+00
  %4049 = fneg fast double %4047
  %4050 = select i1 %4048, double %4049, double %4047
  %4051 = fmul fast double %4047, %4047
  %4052 = fmul fast double %4051, %4050
  %4053 = fadd fast double %4052, %3966
  store double %4053, ptr %3791, align 8, !tbaa !19
  %4054 = add nuw nsw i32 %3967, 1
  br i1 %3810, label %4055, label %4105

4055:                                             ; preds = %4043
  %4056 = load i32, ptr %4, align 4, !tbaa !6
  %4057 = load i32, ptr %12, align 4, !tbaa !6
  %4058 = add nsw i32 %4057, -1
  %4059 = icmp slt i32 %4056, %4058
  br i1 %4059, label %4082, label %4060

4060:                                             ; preds = %4055
  %4061 = icmp eq i32 %4056, %4058
  br i1 %4061, label %4062, label %4098

4062:                                             ; preds = %4060
  store i32 0, ptr %4, align 4, !tbaa !6
  %4063 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4063, ptr %6, align 4, !tbaa !6
  br i1 %3815, label %4105, label %4064

4064:                                             ; preds = %4062, %4092
  %4065 = phi i64 [ %4096, %4092 ], [ 1, %4062 ]
  %4066 = getelementptr inbounds i32, ptr %4, i64 %4065
  %4067 = load i32, ptr %4066, align 4, !tbaa !6
  %4068 = getelementptr inbounds i32, ptr %12, i64 %4065
  %4069 = load i32, ptr %4068, align 4, !tbaa !6
  %4070 = add nsw i32 %4069, -1
  %4071 = icmp slt i32 %4067, %4070
  br i1 %4071, label %4072, label %4090

4072:                                             ; preds = %4064
  br i1 %4059, label %4082, label %4073

4073:                                             ; preds = %4072
  %4074 = shl i64 %4065, 32
  %4075 = add i64 %4074, -4294967296
  %4076 = ashr exact i64 %4075, 32
  %4077 = getelementptr inbounds i32, ptr %7, i64 %4076
  %4078 = load i32, ptr %4077, align 4, !tbaa !6
  %4079 = getelementptr inbounds i32, ptr %6, i64 %4065
  %4080 = load i32, ptr %4079, align 4, !tbaa !6
  %4081 = add nsw i32 %4080, %4078
  store i32 %4081, ptr %4079, align 4, !tbaa !6
  br label %4100

4082:                                             ; preds = %4055, %4072
  %4083 = phi i32 [ %4067, %4072 ], [ %4056, %4055 ]
  %4084 = phi ptr [ %4066, %4072 ], [ %4, %4055 ]
  %4085 = phi i64 [ %4065, %4072 ], [ 0, %4055 ]
  %4086 = add nsw i32 %4083, 1
  store i32 %4086, ptr %4084, align 4, !tbaa !6
  %4087 = getelementptr inbounds i32, ptr %7, i64 %4085
  %4088 = load i32, ptr %4087, align 4, !tbaa !6
  %4089 = getelementptr inbounds i32, ptr %6, i64 %4085
  br label %4100

4090:                                             ; preds = %4064
  %4091 = icmp eq i32 %4067, %4070
  br i1 %4091, label %4092, label %4098

4092:                                             ; preds = %4090
  store i32 0, ptr %4066, align 4, !tbaa !6
  %4093 = getelementptr inbounds i32, ptr %8, i64 %4065
  %4094 = load i32, ptr %4093, align 4, !tbaa !6
  %4095 = getelementptr inbounds i32, ptr %6, i64 %4065
  store i32 %4094, ptr %4095, align 4, !tbaa !6
  %4096 = add nuw nsw i64 %4065, 1
  %4097 = icmp eq i64 %4096, %3813
  br i1 %4097, label %4105, label %4064, !llvm.loop !1253

4098:                                             ; preds = %4060, %4090
  %4099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4100:                                             ; preds = %4073, %4082
  %4101 = phi ptr [ %4089, %4082 ], [ %4066, %4073 ]
  %4102 = phi i32 [ %4088, %4082 ], [ 1, %4073 ]
  %4103 = load i32, ptr %4101, align 4, !tbaa !6
  %4104 = add nsw i32 %4103, %4102
  store i32 %4104, ptr %4101, align 4, !tbaa !6
  br label %4105

4105:                                             ; preds = %4092, %4100, %4062, %4043
  %4106 = icmp eq i32 %4054, %5
  br i1 %4106, label %5666, label %3965, !llvm.loop !1254

4107:                                             ; preds = %3801
  %4108 = getelementptr inbounds i32, ptr %3, i64 %19
  %4109 = load i32, ptr %4108, align 4, !tbaa !6
  %4110 = icmp eq i32 %4109, 0
  %4111 = icmp sgt i32 %5, 0
  br i1 %4110, label %4121, label %4112

4112:                                             ; preds = %4107
  br i1 %4111, label %4113, label %5666

4113:                                             ; preds = %4112
  %4114 = icmp sgt i32 %13, 1
  %4115 = icmp sgt i32 %13, 0
  %4116 = add i32 %13, -2
  %4117 = zext i32 %4116 to i64
  %4118 = zext i32 %13 to i64
  %4119 = add nuw i32 %5, 1
  %4120 = icmp eq i32 %13, 1
  br label %4267

4121:                                             ; preds = %4107
  br i1 %4111, label %4122, label %5666

4122:                                             ; preds = %4121
  %4123 = icmp sgt i32 %13, 1
  %4124 = icmp sgt i32 %13, 0
  %4125 = add i32 %13, -2
  %4126 = zext i32 %4125 to i64
  %4127 = zext i32 %13 to i64
  %4128 = add nuw i32 %5, 1
  %4129 = icmp eq i32 %13, 1
  br label %4130

4130:                                             ; preds = %4122, %4265
  %4131 = phi double [ 0.000000e+00, %4122 ], [ %4215, %4265 ]
  %4132 = phi i32 [ 0, %4122 ], [ %4217, %4265 ]
  %4133 = phi double [ 0.000000e+00, %4122 ], [ %4216, %4265 ]
  %4134 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4123, label %4135, label %4204

4135:                                             ; preds = %4130, %4194
  %4136 = phi i32 [ %4203, %4194 ], [ 0, %4130 ]
  %4137 = phi i64 [ %4145, %4194 ], [ %4127, %4130 ]
  %4138 = phi i64 [ %4202, %4194 ], [ %4126, %4130 ]
  %4139 = phi i32 [ %4200, %4194 ], [ %4134, %4130 ]
  %4140 = sub i32 %4125, %4136
  %4141 = tail call i32 @llvm.smin.i32(i32 %4140, i32 0)
  %4142 = sub i32 %4140, %4141
  %4143 = zext i32 %4142 to i64
  %4144 = add nuw nsw i64 %4143, 1
  %4145 = add nsw i64 %4137, -1
  %4146 = icmp ult i32 %4142, 31
  br i1 %4146, label %4182, label %4147

4147:                                             ; preds = %4135
  %4148 = and i64 %4144, 8589934560
  %4149 = sub i64 %4138, %4148
  br label %4150

4150:                                             ; preds = %4150, %4147
  %4151 = phi i64 [ 0, %4147 ], [ %4174, %4150 ]
  %4152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4147 ], [ %4170, %4150 ]
  %4153 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4147 ], [ %4171, %4150 ]
  %4154 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4147 ], [ %4172, %4150 ]
  %4155 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4147 ], [ %4173, %4150 ]
  %4156 = sub i64 %4138, %4151
  %4157 = getelementptr inbounds i32, ptr %9, i64 %4156
  %4158 = getelementptr inbounds i32, ptr %4157, i64 -7
  %4159 = load <8 x i32>, ptr %4158, align 4, !tbaa !6
  %4160 = shufflevector <8 x i32> %4159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4161 = getelementptr inbounds i32, ptr %4157, i64 -15
  %4162 = load <8 x i32>, ptr %4161, align 4, !tbaa !6
  %4163 = shufflevector <8 x i32> %4162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4164 = getelementptr inbounds i32, ptr %4157, i64 -23
  %4165 = load <8 x i32>, ptr %4164, align 4, !tbaa !6
  %4166 = shufflevector <8 x i32> %4165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4167 = getelementptr inbounds i32, ptr %4157, i64 -31
  %4168 = load <8 x i32>, ptr %4167, align 4, !tbaa !6
  %4169 = shufflevector <8 x i32> %4168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4170 = mul <8 x i32> %4160, %4152
  %4171 = mul <8 x i32> %4163, %4153
  %4172 = mul <8 x i32> %4166, %4154
  %4173 = mul <8 x i32> %4169, %4155
  %4174 = add nuw i64 %4151, 32
  %4175 = icmp eq i64 %4174, %4148
  br i1 %4175, label %4176, label %4150, !llvm.loop !1255

4176:                                             ; preds = %4150
  %4177 = mul <8 x i32> %4171, %4170
  %4178 = mul <8 x i32> %4172, %4177
  %4179 = mul <8 x i32> %4173, %4178
  %4180 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4179)
  %4181 = icmp eq i64 %4144, %4148
  br i1 %4181, label %4194, label %4182

4182:                                             ; preds = %4135, %4176
  %4183 = phi i64 [ %4138, %4135 ], [ %4149, %4176 ]
  %4184 = phi i32 [ 1, %4135 ], [ %4180, %4176 ]
  br label %4185

4185:                                             ; preds = %4182, %4185
  %4186 = phi i64 [ %4191, %4185 ], [ %4183, %4182 ]
  %4187 = phi i32 [ %4190, %4185 ], [ %4184, %4182 ]
  %4188 = getelementptr inbounds i32, ptr %9, i64 %4186
  %4189 = load i32, ptr %4188, align 4, !tbaa !6
  %4190 = mul nsw i32 %4189, %4187
  %4191 = add nsw i64 %4186, -1
  %4192 = trunc i64 %4186 to i32
  %4193 = icmp sgt i32 %4192, 0
  br i1 %4193, label %4185, label %4194, !llvm.loop !1256

4194:                                             ; preds = %4185, %4176
  %4195 = phi i32 [ %4180, %4176 ], [ %4190, %4185 ]
  %4196 = and i64 %4145, 4294967295
  %4197 = getelementptr inbounds i32, ptr %6, i64 %4196
  %4198 = load i32, ptr %4197, align 4, !tbaa !6
  %4199 = mul nsw i32 %4198, %4195
  %4200 = add nsw i32 %4199, %4139
  %4201 = icmp sgt i64 %4137, 2
  %4202 = add nsw i64 %4138, -1
  %4203 = add i32 %4136, 1
  br i1 %4201, label %4135, label %4204, !llvm.loop !1257

4204:                                             ; preds = %4194, %4130
  %4205 = phi i32 [ %4134, %4130 ], [ %4200, %4194 ]
  %4206 = sext i32 %4205 to i64
  %4207 = getelementptr inbounds float, ptr %3789, i64 %4206
  %4208 = load float, ptr %4207, align 4, !tbaa !163
  %4209 = fpext float %4208 to double
  %4210 = fcmp fast olt float %4208, 0.000000e+00
  %4211 = fneg fast double %4209
  %4212 = select i1 %4210, double %4211, double %4209
  %4213 = fmul fast double %4209, %4209
  %4214 = fmul fast double %4213, %4212
  %4215 = fadd fast double %4214, %4131
  %4216 = fadd fast double %4133, 1.000000e+00
  %4217 = add nuw nsw i32 %4132, 1
  br i1 %4124, label %4218, label %4265

4218:                                             ; preds = %4204
  %4219 = load i32, ptr %4, align 4, !tbaa !6
  %4220 = load i32, ptr %12, align 4, !tbaa !6
  %4221 = add nsw i32 %4220, -1
  %4222 = icmp slt i32 %4219, %4221
  br i1 %4222, label %4242, label %4223

4223:                                             ; preds = %4218
  %4224 = icmp eq i32 %4219, %4221
  br i1 %4224, label %4225, label %4258

4225:                                             ; preds = %4223
  store i32 0, ptr %4, align 4, !tbaa !6
  %4226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4226, ptr %6, align 4, !tbaa !6
  br i1 %4129, label %4265, label %4227

4227:                                             ; preds = %4225, %4252
  %4228 = phi i64 [ %4256, %4252 ], [ 1, %4225 ]
  %4229 = getelementptr inbounds i32, ptr %4, i64 %4228
  %4230 = load i32, ptr %4229, align 4, !tbaa !6
  %4231 = getelementptr inbounds i32, ptr %12, i64 %4228
  %4232 = load i32, ptr %4231, align 4, !tbaa !6
  %4233 = add nsw i32 %4232, -1
  %4234 = icmp slt i32 %4230, %4233
  br i1 %4234, label %4235, label %4250

4235:                                             ; preds = %4227
  br i1 %4222, label %4242, label %4236

4236:                                             ; preds = %4235
  %4237 = getelementptr inbounds i32, ptr %7, i64 %4228
  %4238 = load i32, ptr %4237, align 4, !tbaa !6
  %4239 = getelementptr inbounds i32, ptr %6, i64 %4228
  %4240 = load i32, ptr %4239, align 4, !tbaa !6
  %4241 = add nsw i32 %4240, %4238
  store i32 %4241, ptr %4239, align 4, !tbaa !6
  br label %4260

4242:                                             ; preds = %4218, %4235
  %4243 = phi i32 [ %4230, %4235 ], [ %4219, %4218 ]
  %4244 = phi ptr [ %4229, %4235 ], [ %4, %4218 ]
  %4245 = phi i64 [ %4228, %4235 ], [ 0, %4218 ]
  %4246 = add nsw i32 %4243, 1
  store i32 %4246, ptr %4244, align 4, !tbaa !6
  %4247 = getelementptr inbounds i32, ptr %7, i64 %4245
  %4248 = load i32, ptr %4247, align 4, !tbaa !6
  %4249 = getelementptr inbounds i32, ptr %6, i64 %4245
  br label %4260

4250:                                             ; preds = %4227
  %4251 = icmp eq i32 %4230, %4233
  br i1 %4251, label %4252, label %4258

4252:                                             ; preds = %4250
  store i32 0, ptr %4229, align 4, !tbaa !6
  %4253 = getelementptr inbounds i32, ptr %8, i64 %4228
  %4254 = load i32, ptr %4253, align 4, !tbaa !6
  %4255 = getelementptr inbounds i32, ptr %6, i64 %4228
  store i32 %4254, ptr %4255, align 4, !tbaa !6
  %4256 = add nuw nsw i64 %4228, 1
  %4257 = icmp eq i64 %4256, %4127
  br i1 %4257, label %4265, label %4227, !llvm.loop !1258

4258:                                             ; preds = %4223, %4250
  store double %4215, ptr %3791, align 8, !tbaa !19
  %4259 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4260:                                             ; preds = %4236, %4242
  %4261 = phi ptr [ %4249, %4242 ], [ %4229, %4236 ]
  %4262 = phi i32 [ %4248, %4242 ], [ 1, %4236 ]
  %4263 = load i32, ptr %4261, align 4, !tbaa !6
  %4264 = add nsw i32 %4263, %4262
  store i32 %4264, ptr %4261, align 4, !tbaa !6
  br label %4265

4265:                                             ; preds = %4252, %4260, %4225, %4204
  %4266 = icmp eq i32 %4217, %5
  br i1 %4266, label %5664, label %4130, !llvm.loop !1259

4267:                                             ; preds = %4113, %4407
  %4268 = phi double [ 0.000000e+00, %4113 ], [ %4355, %4407 ]
  %4269 = phi i32 [ 0, %4113 ], [ %4356, %4407 ]
  %4270 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4114, label %4271, label %4340

4271:                                             ; preds = %4267, %4330
  %4272 = phi i32 [ %4339, %4330 ], [ 0, %4267 ]
  %4273 = phi i64 [ %4281, %4330 ], [ %4118, %4267 ]
  %4274 = phi i64 [ %4338, %4330 ], [ %4117, %4267 ]
  %4275 = phi i32 [ %4336, %4330 ], [ %4270, %4267 ]
  %4276 = sub i32 %4116, %4272
  %4277 = tail call i32 @llvm.smin.i32(i32 %4276, i32 0)
  %4278 = sub i32 %4276, %4277
  %4279 = zext i32 %4278 to i64
  %4280 = add nuw nsw i64 %4279, 1
  %4281 = add nsw i64 %4273, -1
  %4282 = icmp ult i32 %4278, 31
  br i1 %4282, label %4318, label %4283

4283:                                             ; preds = %4271
  %4284 = and i64 %4280, 8589934560
  %4285 = sub i64 %4274, %4284
  br label %4286

4286:                                             ; preds = %4286, %4283
  %4287 = phi i64 [ 0, %4283 ], [ %4310, %4286 ]
  %4288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4283 ], [ %4306, %4286 ]
  %4289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4283 ], [ %4307, %4286 ]
  %4290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4283 ], [ %4308, %4286 ]
  %4291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4283 ], [ %4309, %4286 ]
  %4292 = sub i64 %4274, %4287
  %4293 = getelementptr inbounds i32, ptr %11, i64 %4292
  %4294 = getelementptr inbounds i32, ptr %4293, i64 -7
  %4295 = load <8 x i32>, ptr %4294, align 4, !tbaa !6
  %4296 = shufflevector <8 x i32> %4295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4297 = getelementptr inbounds i32, ptr %4293, i64 -15
  %4298 = load <8 x i32>, ptr %4297, align 4, !tbaa !6
  %4299 = shufflevector <8 x i32> %4298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4300 = getelementptr inbounds i32, ptr %4293, i64 -23
  %4301 = load <8 x i32>, ptr %4300, align 4, !tbaa !6
  %4302 = shufflevector <8 x i32> %4301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4303 = getelementptr inbounds i32, ptr %4293, i64 -31
  %4304 = load <8 x i32>, ptr %4303, align 4, !tbaa !6
  %4305 = shufflevector <8 x i32> %4304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4306 = mul <8 x i32> %4296, %4288
  %4307 = mul <8 x i32> %4299, %4289
  %4308 = mul <8 x i32> %4302, %4290
  %4309 = mul <8 x i32> %4305, %4291
  %4310 = add nuw i64 %4287, 32
  %4311 = icmp eq i64 %4310, %4284
  br i1 %4311, label %4312, label %4286, !llvm.loop !1260

4312:                                             ; preds = %4286
  %4313 = mul <8 x i32> %4307, %4306
  %4314 = mul <8 x i32> %4308, %4313
  %4315 = mul <8 x i32> %4309, %4314
  %4316 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4315)
  %4317 = icmp eq i64 %4280, %4284
  br i1 %4317, label %4330, label %4318

4318:                                             ; preds = %4271, %4312
  %4319 = phi i64 [ %4274, %4271 ], [ %4285, %4312 ]
  %4320 = phi i32 [ 1, %4271 ], [ %4316, %4312 ]
  br label %4321

4321:                                             ; preds = %4318, %4321
  %4322 = phi i64 [ %4327, %4321 ], [ %4319, %4318 ]
  %4323 = phi i32 [ %4326, %4321 ], [ %4320, %4318 ]
  %4324 = getelementptr inbounds i32, ptr %11, i64 %4322
  %4325 = load i32, ptr %4324, align 4, !tbaa !6
  %4326 = mul nsw i32 %4325, %4323
  %4327 = add nsw i64 %4322, -1
  %4328 = trunc i64 %4322 to i32
  %4329 = icmp sgt i32 %4328, 0
  br i1 %4329, label %4321, label %4330, !llvm.loop !1261

4330:                                             ; preds = %4321, %4312
  %4331 = phi i32 [ %4316, %4312 ], [ %4326, %4321 ]
  %4332 = and i64 %4281, 4294967295
  %4333 = getelementptr inbounds i32, ptr %6, i64 %4332
  %4334 = load i32, ptr %4333, align 4, !tbaa !6
  %4335 = mul nsw i32 %4334, %4331
  %4336 = add nsw i32 %4335, %4275
  %4337 = icmp sgt i64 %4273, 2
  %4338 = add nsw i64 %4274, -1
  %4339 = add i32 %4272, 1
  br i1 %4337, label %4271, label %4340, !llvm.loop !1262

4340:                                             ; preds = %4330, %4267
  %4341 = phi i32 [ %4270, %4267 ], [ %4336, %4330 ]
  %4342 = icmp slt i32 %4341, %5
  br i1 %4342, label %4345, label %4343

4343:                                             ; preds = %4340
  %4344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

4345:                                             ; preds = %4340
  %4346 = sext i32 %4341 to i64
  %4347 = getelementptr inbounds float, ptr %3789, i64 %4346
  %4348 = load float, ptr %4347, align 4, !tbaa !163
  %4349 = fpext float %4348 to double
  %4350 = fcmp fast olt float %4348, 0.000000e+00
  %4351 = fneg fast double %4349
  %4352 = select i1 %4350, double %4351, double %4349
  %4353 = fmul fast double %4349, %4349
  %4354 = fmul fast double %4353, %4352
  %4355 = fadd fast double %4354, %4268
  store double %4355, ptr %3791, align 8, !tbaa !19
  %4356 = add nuw nsw i32 %4269, 1
  br i1 %4115, label %4357, label %4407

4357:                                             ; preds = %4345
  %4358 = load i32, ptr %4, align 4, !tbaa !6
  %4359 = load i32, ptr %12, align 4, !tbaa !6
  %4360 = add nsw i32 %4359, -1
  %4361 = icmp slt i32 %4358, %4360
  br i1 %4361, label %4384, label %4362

4362:                                             ; preds = %4357
  %4363 = icmp eq i32 %4358, %4360
  br i1 %4363, label %4364, label %4400

4364:                                             ; preds = %4362
  store i32 0, ptr %4, align 4, !tbaa !6
  %4365 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4365, ptr %6, align 4, !tbaa !6
  br i1 %4120, label %4407, label %4366

4366:                                             ; preds = %4364, %4394
  %4367 = phi i64 [ %4398, %4394 ], [ 1, %4364 ]
  %4368 = getelementptr inbounds i32, ptr %4, i64 %4367
  %4369 = load i32, ptr %4368, align 4, !tbaa !6
  %4370 = getelementptr inbounds i32, ptr %12, i64 %4367
  %4371 = load i32, ptr %4370, align 4, !tbaa !6
  %4372 = add nsw i32 %4371, -1
  %4373 = icmp slt i32 %4369, %4372
  br i1 %4373, label %4374, label %4392

4374:                                             ; preds = %4366
  br i1 %4361, label %4384, label %4375

4375:                                             ; preds = %4374
  %4376 = shl i64 %4367, 32
  %4377 = add i64 %4376, -4294967296
  %4378 = ashr exact i64 %4377, 32
  %4379 = getelementptr inbounds i32, ptr %7, i64 %4378
  %4380 = load i32, ptr %4379, align 4, !tbaa !6
  %4381 = getelementptr inbounds i32, ptr %6, i64 %4367
  %4382 = load i32, ptr %4381, align 4, !tbaa !6
  %4383 = add nsw i32 %4382, %4380
  store i32 %4383, ptr %4381, align 4, !tbaa !6
  br label %4402

4384:                                             ; preds = %4357, %4374
  %4385 = phi i32 [ %4369, %4374 ], [ %4358, %4357 ]
  %4386 = phi ptr [ %4368, %4374 ], [ %4, %4357 ]
  %4387 = phi i64 [ %4367, %4374 ], [ 0, %4357 ]
  %4388 = add nsw i32 %4385, 1
  store i32 %4388, ptr %4386, align 4, !tbaa !6
  %4389 = getelementptr inbounds i32, ptr %7, i64 %4387
  %4390 = load i32, ptr %4389, align 4, !tbaa !6
  %4391 = getelementptr inbounds i32, ptr %6, i64 %4387
  br label %4402

4392:                                             ; preds = %4366
  %4393 = icmp eq i32 %4369, %4372
  br i1 %4393, label %4394, label %4400

4394:                                             ; preds = %4392
  store i32 0, ptr %4368, align 4, !tbaa !6
  %4395 = getelementptr inbounds i32, ptr %8, i64 %4367
  %4396 = load i32, ptr %4395, align 4, !tbaa !6
  %4397 = getelementptr inbounds i32, ptr %6, i64 %4367
  store i32 %4396, ptr %4397, align 4, !tbaa !6
  %4398 = add nuw nsw i64 %4367, 1
  %4399 = icmp eq i64 %4398, %4118
  br i1 %4399, label %4407, label %4366, !llvm.loop !1263

4400:                                             ; preds = %4362, %4392
  %4401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4402:                                             ; preds = %4375, %4384
  %4403 = phi ptr [ %4391, %4384 ], [ %4368, %4375 ]
  %4404 = phi i32 [ %4390, %4384 ], [ 1, %4375 ]
  %4405 = load i32, ptr %4403, align 4, !tbaa !6
  %4406 = add nsw i32 %4405, %4404
  store i32 %4406, ptr %4403, align 4, !tbaa !6
  br label %4407

4407:                                             ; preds = %4394, %4402, %4364, %4345
  %4408 = icmp eq i32 %4356, %5
  br i1 %4408, label %5666, label %4267, !llvm.loop !1264

4409:                                             ; preds = %3801
  %4410 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

4411:                                             ; preds = %18
  %4412 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4413 = load ptr, ptr %4412, align 8, !tbaa !10
  %4414 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4415 = load ptr, ptr %4414, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4415, align 4, !tbaa !163
  %4416 = icmp eq i32 %13, 0
  br i1 %4416, label %4417, label %4424

4417:                                             ; preds = %4411
  %4418 = load float, ptr %4413, align 4, !tbaa !163
  %4419 = fcmp fast olt float %4418, 0.000000e+00
  %4420 = fneg fast float %4418
  %4421 = select nnan ninf i1 %4419, float %4420, float %4418
  %4422 = fmul fast float %4418, %4418
  %4423 = fmul fast float %4422, %4421
  store float %4423, ptr %4415, align 4, !tbaa !163
  br label %5666

4424:                                             ; preds = %4411
  switch i32 %1, label %5034 [
    i32 1, label %4425
    i32 0, label %4734
  ]

4425:                                             ; preds = %4424
  %4426 = getelementptr inbounds i32, ptr %3, i64 %19
  %4427 = load i32, ptr %4426, align 4, !tbaa !6
  %4428 = icmp eq i32 %4427, 0
  %4429 = icmp sgt i32 %5, 0
  br i1 %4428, label %4439, label %4430

4430:                                             ; preds = %4425
  br i1 %4429, label %4431, label %5666

4431:                                             ; preds = %4430
  %4432 = icmp sgt i32 %13, 1
  %4433 = icmp sgt i32 %13, 0
  %4434 = add i32 %13, -2
  %4435 = zext i32 %4434 to i64
  %4436 = zext i32 %13 to i64
  %4437 = add nuw i32 %5, 1
  %4438 = icmp eq i32 %13, 1
  br label %4590

4439:                                             ; preds = %4425
  br i1 %4429, label %4440, label %5666

4440:                                             ; preds = %4439
  %4441 = icmp sgt i32 %13, 1
  %4442 = icmp sgt i32 %13, 0
  %4443 = add i32 %13, -2
  %4444 = zext i32 %4443 to i64
  %4445 = zext i32 %13 to i64
  %4446 = add nuw i32 %5, 1
  %4447 = icmp eq i32 %13, 1
  br label %4448

4448:                                             ; preds = %4440, %4588
  %4449 = phi float [ 0.000000e+00, %4440 ], [ %4538, %4588 ]
  %4450 = phi i32 [ 0, %4440 ], [ %4540, %4588 ]
  %4451 = phi double [ 0.000000e+00, %4440 ], [ %4539, %4588 ]
  %4452 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4441, label %4453, label %4522

4453:                                             ; preds = %4448, %4512
  %4454 = phi i32 [ %4521, %4512 ], [ 0, %4448 ]
  %4455 = phi i64 [ %4463, %4512 ], [ %4445, %4448 ]
  %4456 = phi i64 [ %4520, %4512 ], [ %4444, %4448 ]
  %4457 = phi i32 [ %4518, %4512 ], [ %4452, %4448 ]
  %4458 = sub i32 %4443, %4454
  %4459 = tail call i32 @llvm.smin.i32(i32 %4458, i32 0)
  %4460 = sub i32 %4458, %4459
  %4461 = zext i32 %4460 to i64
  %4462 = add nuw nsw i64 %4461, 1
  %4463 = add nsw i64 %4455, -1
  %4464 = icmp ult i32 %4460, 31
  br i1 %4464, label %4500, label %4465

4465:                                             ; preds = %4453
  %4466 = and i64 %4462, 8589934560
  %4467 = sub i64 %4456, %4466
  br label %4468

4468:                                             ; preds = %4468, %4465
  %4469 = phi i64 [ 0, %4465 ], [ %4492, %4468 ]
  %4470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4488, %4468 ]
  %4471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4489, %4468 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4490, %4468 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4491, %4468 ]
  %4474 = sub i64 %4456, %4469
  %4475 = getelementptr inbounds i32, ptr %9, i64 %4474
  %4476 = getelementptr inbounds i32, ptr %4475, i64 -7
  %4477 = load <8 x i32>, ptr %4476, align 4, !tbaa !6
  %4478 = shufflevector <8 x i32> %4477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4479 = getelementptr inbounds i32, ptr %4475, i64 -15
  %4480 = load <8 x i32>, ptr %4479, align 4, !tbaa !6
  %4481 = shufflevector <8 x i32> %4480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4482 = getelementptr inbounds i32, ptr %4475, i64 -23
  %4483 = load <8 x i32>, ptr %4482, align 4, !tbaa !6
  %4484 = shufflevector <8 x i32> %4483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4485 = getelementptr inbounds i32, ptr %4475, i64 -31
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !6
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = mul <8 x i32> %4478, %4470
  %4489 = mul <8 x i32> %4481, %4471
  %4490 = mul <8 x i32> %4484, %4472
  %4491 = mul <8 x i32> %4487, %4473
  %4492 = add nuw i64 %4469, 32
  %4493 = icmp eq i64 %4492, %4466
  br i1 %4493, label %4494, label %4468, !llvm.loop !1265

4494:                                             ; preds = %4468
  %4495 = mul <8 x i32> %4489, %4488
  %4496 = mul <8 x i32> %4490, %4495
  %4497 = mul <8 x i32> %4491, %4496
  %4498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4497)
  %4499 = icmp eq i64 %4462, %4466
  br i1 %4499, label %4512, label %4500

4500:                                             ; preds = %4453, %4494
  %4501 = phi i64 [ %4456, %4453 ], [ %4467, %4494 ]
  %4502 = phi i32 [ 1, %4453 ], [ %4498, %4494 ]
  br label %4503

4503:                                             ; preds = %4500, %4503
  %4504 = phi i64 [ %4509, %4503 ], [ %4501, %4500 ]
  %4505 = phi i32 [ %4508, %4503 ], [ %4502, %4500 ]
  %4506 = getelementptr inbounds i32, ptr %9, i64 %4504
  %4507 = load i32, ptr %4506, align 4, !tbaa !6
  %4508 = mul nsw i32 %4507, %4505
  %4509 = add nsw i64 %4504, -1
  %4510 = trunc i64 %4504 to i32
  %4511 = icmp sgt i32 %4510, 0
  br i1 %4511, label %4503, label %4512, !llvm.loop !1266

4512:                                             ; preds = %4503, %4494
  %4513 = phi i32 [ %4498, %4494 ], [ %4508, %4503 ]
  %4514 = and i64 %4463, 4294967295
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4514
  %4516 = load i32, ptr %4515, align 4, !tbaa !6
  %4517 = mul nsw i32 %4516, %4513
  %4518 = add nsw i32 %4517, %4457
  %4519 = icmp sgt i64 %4455, 2
  %4520 = add nsw i64 %4456, -1
  %4521 = add i32 %4454, 1
  br i1 %4519, label %4453, label %4522, !llvm.loop !1267

4522:                                             ; preds = %4512, %4448
  %4523 = phi i32 [ %4452, %4448 ], [ %4518, %4512 ]
  %4524 = sext i32 %4523 to i64
  %4525 = getelementptr inbounds double, ptr %2, i64 %4524
  %4526 = load double, ptr %4525, align 8, !tbaa !19
  %4527 = getelementptr inbounds float, ptr %4413, i64 %4524
  %4528 = load float, ptr %4527, align 4, !tbaa !163
  %4529 = fpext float %4449 to double
  %4530 = fpext float %4528 to double
  %4531 = fmul fast double %4526, %4530
  %4532 = fcmp fast olt double %4531, 0.000000e+00
  %4533 = fneg fast double %4531
  %4534 = select nnan ninf i1 %4532, double %4533, double %4531
  %4535 = fmul fast double %4531, %4531
  %4536 = fmul fast double %4535, %4534
  %4537 = fadd fast double %4536, %4529
  %4538 = fptrunc double %4537 to float
  store float %4538, ptr %4415, align 4, !tbaa !163
  %4539 = fadd fast double %4526, %4451
  %4540 = add nuw nsw i32 %4450, 1
  br i1 %4442, label %4541, label %4588

4541:                                             ; preds = %4522
  %4542 = load i32, ptr %4, align 4, !tbaa !6
  %4543 = load i32, ptr %12, align 4, !tbaa !6
  %4544 = add nsw i32 %4543, -1
  %4545 = icmp slt i32 %4542, %4544
  br i1 %4545, label %4565, label %4546

4546:                                             ; preds = %4541
  %4547 = icmp eq i32 %4542, %4544
  br i1 %4547, label %4548, label %4581

4548:                                             ; preds = %4546
  store i32 0, ptr %4, align 4, !tbaa !6
  %4549 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4549, ptr %6, align 4, !tbaa !6
  br i1 %4447, label %4588, label %4550

4550:                                             ; preds = %4548, %4575
  %4551 = phi i64 [ %4579, %4575 ], [ 1, %4548 ]
  %4552 = getelementptr inbounds i32, ptr %4, i64 %4551
  %4553 = load i32, ptr %4552, align 4, !tbaa !6
  %4554 = getelementptr inbounds i32, ptr %12, i64 %4551
  %4555 = load i32, ptr %4554, align 4, !tbaa !6
  %4556 = add nsw i32 %4555, -1
  %4557 = icmp slt i32 %4553, %4556
  br i1 %4557, label %4558, label %4573

4558:                                             ; preds = %4550
  br i1 %4545, label %4565, label %4559

4559:                                             ; preds = %4558
  %4560 = getelementptr inbounds i32, ptr %7, i64 %4551
  %4561 = load i32, ptr %4560, align 4, !tbaa !6
  %4562 = getelementptr inbounds i32, ptr %6, i64 %4551
  %4563 = load i32, ptr %4562, align 4, !tbaa !6
  %4564 = add nsw i32 %4563, %4561
  store i32 %4564, ptr %4562, align 4, !tbaa !6
  br label %4583

4565:                                             ; preds = %4541, %4558
  %4566 = phi i32 [ %4553, %4558 ], [ %4542, %4541 ]
  %4567 = phi ptr [ %4552, %4558 ], [ %4, %4541 ]
  %4568 = phi i64 [ %4551, %4558 ], [ 0, %4541 ]
  %4569 = add nsw i32 %4566, 1
  store i32 %4569, ptr %4567, align 4, !tbaa !6
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4568
  %4571 = load i32, ptr %4570, align 4, !tbaa !6
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4568
  br label %4583

4573:                                             ; preds = %4550
  %4574 = icmp eq i32 %4553, %4556
  br i1 %4574, label %4575, label %4581

4575:                                             ; preds = %4573
  store i32 0, ptr %4552, align 4, !tbaa !6
  %4576 = getelementptr inbounds i32, ptr %8, i64 %4551
  %4577 = load i32, ptr %4576, align 4, !tbaa !6
  %4578 = getelementptr inbounds i32, ptr %6, i64 %4551
  store i32 %4577, ptr %4578, align 4, !tbaa !6
  %4579 = add nuw nsw i64 %4551, 1
  %4580 = icmp eq i64 %4579, %4445
  br i1 %4580, label %4588, label %4550, !llvm.loop !1268

4581:                                             ; preds = %4546, %4573
  %4582 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4583:                                             ; preds = %4559, %4565
  %4584 = phi ptr [ %4572, %4565 ], [ %4552, %4559 ]
  %4585 = phi i32 [ %4571, %4565 ], [ 1, %4559 ]
  %4586 = load i32, ptr %4584, align 4, !tbaa !6
  %4587 = add nsw i32 %4586, %4585
  store i32 %4587, ptr %4584, align 4, !tbaa !6
  br label %4588

4588:                                             ; preds = %4575, %4583, %4548, %4522
  %4589 = icmp eq i32 %4540, %5
  br i1 %4589, label %5666, label %4448, !llvm.loop !1269

4590:                                             ; preds = %4431, %4732
  %4591 = phi float [ 0.000000e+00, %4431 ], [ %4680, %4732 ]
  %4592 = phi i32 [ 0, %4431 ], [ %4681, %4732 ]
  %4593 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4432, label %4594, label %4663

4594:                                             ; preds = %4590, %4653
  %4595 = phi i32 [ %4662, %4653 ], [ 0, %4590 ]
  %4596 = phi i64 [ %4604, %4653 ], [ %4436, %4590 ]
  %4597 = phi i64 [ %4661, %4653 ], [ %4435, %4590 ]
  %4598 = phi i32 [ %4659, %4653 ], [ %4593, %4590 ]
  %4599 = sub i32 %4434, %4595
  %4600 = tail call i32 @llvm.smin.i32(i32 %4599, i32 0)
  %4601 = sub i32 %4599, %4600
  %4602 = zext i32 %4601 to i64
  %4603 = add nuw nsw i64 %4602, 1
  %4604 = add nsw i64 %4596, -1
  %4605 = icmp ult i32 %4601, 31
  br i1 %4605, label %4641, label %4606

4606:                                             ; preds = %4594
  %4607 = and i64 %4603, 8589934560
  %4608 = sub i64 %4597, %4607
  br label %4609

4609:                                             ; preds = %4609, %4606
  %4610 = phi i64 [ 0, %4606 ], [ %4633, %4609 ]
  %4611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4606 ], [ %4629, %4609 ]
  %4612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4606 ], [ %4630, %4609 ]
  %4613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4606 ], [ %4631, %4609 ]
  %4614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4606 ], [ %4632, %4609 ]
  %4615 = sub i64 %4597, %4610
  %4616 = getelementptr inbounds i32, ptr %11, i64 %4615
  %4617 = getelementptr inbounds i32, ptr %4616, i64 -7
  %4618 = load <8 x i32>, ptr %4617, align 4, !tbaa !6
  %4619 = shufflevector <8 x i32> %4618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4620 = getelementptr inbounds i32, ptr %4616, i64 -15
  %4621 = load <8 x i32>, ptr %4620, align 4, !tbaa !6
  %4622 = shufflevector <8 x i32> %4621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4623 = getelementptr inbounds i32, ptr %4616, i64 -23
  %4624 = load <8 x i32>, ptr %4623, align 4, !tbaa !6
  %4625 = shufflevector <8 x i32> %4624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4626 = getelementptr inbounds i32, ptr %4616, i64 -31
  %4627 = load <8 x i32>, ptr %4626, align 4, !tbaa !6
  %4628 = shufflevector <8 x i32> %4627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4629 = mul <8 x i32> %4619, %4611
  %4630 = mul <8 x i32> %4622, %4612
  %4631 = mul <8 x i32> %4625, %4613
  %4632 = mul <8 x i32> %4628, %4614
  %4633 = add nuw i64 %4610, 32
  %4634 = icmp eq i64 %4633, %4607
  br i1 %4634, label %4635, label %4609, !llvm.loop !1270

4635:                                             ; preds = %4609
  %4636 = mul <8 x i32> %4630, %4629
  %4637 = mul <8 x i32> %4631, %4636
  %4638 = mul <8 x i32> %4632, %4637
  %4639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4638)
  %4640 = icmp eq i64 %4603, %4607
  br i1 %4640, label %4653, label %4641

4641:                                             ; preds = %4594, %4635
  %4642 = phi i64 [ %4597, %4594 ], [ %4608, %4635 ]
  %4643 = phi i32 [ 1, %4594 ], [ %4639, %4635 ]
  br label %4644

4644:                                             ; preds = %4641, %4644
  %4645 = phi i64 [ %4650, %4644 ], [ %4642, %4641 ]
  %4646 = phi i32 [ %4649, %4644 ], [ %4643, %4641 ]
  %4647 = getelementptr inbounds i32, ptr %11, i64 %4645
  %4648 = load i32, ptr %4647, align 4, !tbaa !6
  %4649 = mul nsw i32 %4648, %4646
  %4650 = add nsw i64 %4645, -1
  %4651 = trunc i64 %4645 to i32
  %4652 = icmp sgt i32 %4651, 0
  br i1 %4652, label %4644, label %4653, !llvm.loop !1271

4653:                                             ; preds = %4644, %4635
  %4654 = phi i32 [ %4639, %4635 ], [ %4649, %4644 ]
  %4655 = and i64 %4604, 4294967295
  %4656 = getelementptr inbounds i32, ptr %6, i64 %4655
  %4657 = load i32, ptr %4656, align 4, !tbaa !6
  %4658 = mul nsw i32 %4657, %4654
  %4659 = add nsw i32 %4658, %4598
  %4660 = icmp sgt i64 %4596, 2
  %4661 = add nsw i64 %4597, -1
  %4662 = add i32 %4595, 1
  br i1 %4660, label %4594, label %4663, !llvm.loop !1272

4663:                                             ; preds = %4653, %4590
  %4664 = phi i32 [ %4593, %4590 ], [ %4659, %4653 ]
  %4665 = icmp slt i32 %4664, %5
  br i1 %4665, label %4668, label %4666

4666:                                             ; preds = %4663
  %4667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

4668:                                             ; preds = %4663
  %4669 = sext i32 %4664 to i64
  %4670 = getelementptr inbounds float, ptr %4413, i64 %4669
  %4671 = load float, ptr %4670, align 4, !tbaa !163
  %4672 = fpext float %4591 to double
  %4673 = fpext float %4671 to double
  %4674 = fcmp fast olt float %4671, 0.000000e+00
  %4675 = fneg fast double %4673
  %4676 = select i1 %4674, double %4675, double %4673
  %4677 = fmul fast double %4673, %4673
  %4678 = fmul fast double %4677, %4676
  %4679 = fadd fast double %4678, %4672
  %4680 = fptrunc double %4679 to float
  store float %4680, ptr %4415, align 4, !tbaa !163
  %4681 = add nuw nsw i32 %4592, 1
  br i1 %4433, label %4682, label %4732

4682:                                             ; preds = %4668
  %4683 = load i32, ptr %4, align 4, !tbaa !6
  %4684 = load i32, ptr %12, align 4, !tbaa !6
  %4685 = add nsw i32 %4684, -1
  %4686 = icmp slt i32 %4683, %4685
  br i1 %4686, label %4709, label %4687

4687:                                             ; preds = %4682
  %4688 = icmp eq i32 %4683, %4685
  br i1 %4688, label %4689, label %4725

4689:                                             ; preds = %4687
  store i32 0, ptr %4, align 4, !tbaa !6
  %4690 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4690, ptr %6, align 4, !tbaa !6
  br i1 %4438, label %4732, label %4691

4691:                                             ; preds = %4689, %4719
  %4692 = phi i64 [ %4723, %4719 ], [ 1, %4689 ]
  %4693 = getelementptr inbounds i32, ptr %4, i64 %4692
  %4694 = load i32, ptr %4693, align 4, !tbaa !6
  %4695 = getelementptr inbounds i32, ptr %12, i64 %4692
  %4696 = load i32, ptr %4695, align 4, !tbaa !6
  %4697 = add nsw i32 %4696, -1
  %4698 = icmp slt i32 %4694, %4697
  br i1 %4698, label %4699, label %4717

4699:                                             ; preds = %4691
  br i1 %4686, label %4709, label %4700

4700:                                             ; preds = %4699
  %4701 = shl i64 %4692, 32
  %4702 = add i64 %4701, -4294967296
  %4703 = ashr exact i64 %4702, 32
  %4704 = getelementptr inbounds i32, ptr %7, i64 %4703
  %4705 = load i32, ptr %4704, align 4, !tbaa !6
  %4706 = getelementptr inbounds i32, ptr %6, i64 %4692
  %4707 = load i32, ptr %4706, align 4, !tbaa !6
  %4708 = add nsw i32 %4707, %4705
  store i32 %4708, ptr %4706, align 4, !tbaa !6
  br label %4727

4709:                                             ; preds = %4682, %4699
  %4710 = phi i32 [ %4694, %4699 ], [ %4683, %4682 ]
  %4711 = phi ptr [ %4693, %4699 ], [ %4, %4682 ]
  %4712 = phi i64 [ %4692, %4699 ], [ 0, %4682 ]
  %4713 = add nsw i32 %4710, 1
  store i32 %4713, ptr %4711, align 4, !tbaa !6
  %4714 = getelementptr inbounds i32, ptr %7, i64 %4712
  %4715 = load i32, ptr %4714, align 4, !tbaa !6
  %4716 = getelementptr inbounds i32, ptr %6, i64 %4712
  br label %4727

4717:                                             ; preds = %4691
  %4718 = icmp eq i32 %4694, %4697
  br i1 %4718, label %4719, label %4725

4719:                                             ; preds = %4717
  store i32 0, ptr %4693, align 4, !tbaa !6
  %4720 = getelementptr inbounds i32, ptr %8, i64 %4692
  %4721 = load i32, ptr %4720, align 4, !tbaa !6
  %4722 = getelementptr inbounds i32, ptr %6, i64 %4692
  store i32 %4721, ptr %4722, align 4, !tbaa !6
  %4723 = add nuw nsw i64 %4692, 1
  %4724 = icmp eq i64 %4723, %4436
  br i1 %4724, label %4732, label %4691, !llvm.loop !1273

4725:                                             ; preds = %4687, %4717
  %4726 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4727:                                             ; preds = %4700, %4709
  %4728 = phi ptr [ %4716, %4709 ], [ %4693, %4700 ]
  %4729 = phi i32 [ %4715, %4709 ], [ 1, %4700 ]
  %4730 = load i32, ptr %4728, align 4, !tbaa !6
  %4731 = add nsw i32 %4730, %4729
  store i32 %4731, ptr %4728, align 4, !tbaa !6
  br label %4732

4732:                                             ; preds = %4719, %4727, %4689, %4668
  %4733 = icmp eq i32 %4681, %5
  br i1 %4733, label %5666, label %4590, !llvm.loop !1274

4734:                                             ; preds = %4424
  %4735 = getelementptr inbounds i32, ptr %3, i64 %19
  %4736 = load i32, ptr %4735, align 4, !tbaa !6
  %4737 = icmp eq i32 %4736, 0
  %4738 = icmp sgt i32 %5, 0
  br i1 %4737, label %4748, label %4739

4739:                                             ; preds = %4734
  br i1 %4738, label %4740, label %5666

4740:                                             ; preds = %4739
  %4741 = icmp sgt i32 %13, 1
  %4742 = icmp sgt i32 %13, 0
  %4743 = add i32 %13, -2
  %4744 = zext i32 %4743 to i64
  %4745 = zext i32 %13 to i64
  %4746 = add nuw i32 %5, 1
  %4747 = icmp eq i32 %13, 1
  br label %4893

4748:                                             ; preds = %4734
  br i1 %4738, label %4749, label %5666

4749:                                             ; preds = %4748
  %4750 = icmp sgt i32 %13, 1
  %4751 = icmp sgt i32 %13, 0
  %4752 = add i32 %13, -2
  %4753 = zext i32 %4752 to i64
  %4754 = zext i32 %13 to i64
  %4755 = add nuw i32 %5, 1
  %4756 = icmp eq i32 %13, 1
  br label %4757

4757:                                             ; preds = %4749, %4891
  %4758 = phi float [ 0.000000e+00, %4749 ], [ %4841, %4891 ]
  %4759 = phi i32 [ 0, %4749 ], [ %4843, %4891 ]
  %4760 = phi double [ 0.000000e+00, %4749 ], [ %4842, %4891 ]
  %4761 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4750, label %4762, label %4831

4762:                                             ; preds = %4757, %4821
  %4763 = phi i32 [ %4830, %4821 ], [ 0, %4757 ]
  %4764 = phi i64 [ %4772, %4821 ], [ %4754, %4757 ]
  %4765 = phi i64 [ %4829, %4821 ], [ %4753, %4757 ]
  %4766 = phi i32 [ %4827, %4821 ], [ %4761, %4757 ]
  %4767 = sub i32 %4752, %4763
  %4768 = tail call i32 @llvm.smin.i32(i32 %4767, i32 0)
  %4769 = sub i32 %4767, %4768
  %4770 = zext i32 %4769 to i64
  %4771 = add nuw nsw i64 %4770, 1
  %4772 = add nsw i64 %4764, -1
  %4773 = icmp ult i32 %4769, 31
  br i1 %4773, label %4809, label %4774

4774:                                             ; preds = %4762
  %4775 = and i64 %4771, 8589934560
  %4776 = sub i64 %4765, %4775
  br label %4777

4777:                                             ; preds = %4777, %4774
  %4778 = phi i64 [ 0, %4774 ], [ %4801, %4777 ]
  %4779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4774 ], [ %4797, %4777 ]
  %4780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4774 ], [ %4798, %4777 ]
  %4781 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4774 ], [ %4799, %4777 ]
  %4782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4774 ], [ %4800, %4777 ]
  %4783 = sub i64 %4765, %4778
  %4784 = getelementptr inbounds i32, ptr %9, i64 %4783
  %4785 = getelementptr inbounds i32, ptr %4784, i64 -7
  %4786 = load <8 x i32>, ptr %4785, align 4, !tbaa !6
  %4787 = shufflevector <8 x i32> %4786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4788 = getelementptr inbounds i32, ptr %4784, i64 -15
  %4789 = load <8 x i32>, ptr %4788, align 4, !tbaa !6
  %4790 = shufflevector <8 x i32> %4789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4791 = getelementptr inbounds i32, ptr %4784, i64 -23
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !6
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4784, i64 -31
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !6
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = mul <8 x i32> %4787, %4779
  %4798 = mul <8 x i32> %4790, %4780
  %4799 = mul <8 x i32> %4793, %4781
  %4800 = mul <8 x i32> %4796, %4782
  %4801 = add nuw i64 %4778, 32
  %4802 = icmp eq i64 %4801, %4775
  br i1 %4802, label %4803, label %4777, !llvm.loop !1275

4803:                                             ; preds = %4777
  %4804 = mul <8 x i32> %4798, %4797
  %4805 = mul <8 x i32> %4799, %4804
  %4806 = mul <8 x i32> %4800, %4805
  %4807 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4806)
  %4808 = icmp eq i64 %4771, %4775
  br i1 %4808, label %4821, label %4809

4809:                                             ; preds = %4762, %4803
  %4810 = phi i64 [ %4765, %4762 ], [ %4776, %4803 ]
  %4811 = phi i32 [ 1, %4762 ], [ %4807, %4803 ]
  br label %4812

4812:                                             ; preds = %4809, %4812
  %4813 = phi i64 [ %4818, %4812 ], [ %4810, %4809 ]
  %4814 = phi i32 [ %4817, %4812 ], [ %4811, %4809 ]
  %4815 = getelementptr inbounds i32, ptr %9, i64 %4813
  %4816 = load i32, ptr %4815, align 4, !tbaa !6
  %4817 = mul nsw i32 %4816, %4814
  %4818 = add nsw i64 %4813, -1
  %4819 = trunc i64 %4813 to i32
  %4820 = icmp sgt i32 %4819, 0
  br i1 %4820, label %4812, label %4821, !llvm.loop !1276

4821:                                             ; preds = %4812, %4803
  %4822 = phi i32 [ %4807, %4803 ], [ %4817, %4812 ]
  %4823 = and i64 %4772, 4294967295
  %4824 = getelementptr inbounds i32, ptr %6, i64 %4823
  %4825 = load i32, ptr %4824, align 4, !tbaa !6
  %4826 = mul nsw i32 %4825, %4822
  %4827 = add nsw i32 %4826, %4766
  %4828 = icmp sgt i64 %4764, 2
  %4829 = add nsw i64 %4765, -1
  %4830 = add i32 %4763, 1
  br i1 %4828, label %4762, label %4831, !llvm.loop !1277

4831:                                             ; preds = %4821, %4757
  %4832 = phi i32 [ %4761, %4757 ], [ %4827, %4821 ]
  %4833 = sext i32 %4832 to i64
  %4834 = getelementptr inbounds float, ptr %4413, i64 %4833
  %4835 = load float, ptr %4834, align 4, !tbaa !163
  %4836 = fcmp fast olt float %4835, 0.000000e+00
  %4837 = fneg fast float %4835
  %4838 = select nnan ninf i1 %4836, float %4837, float %4835
  %4839 = fmul fast float %4835, %4835
  %4840 = fmul fast float %4839, %4838
  %4841 = fadd fast float %4840, %4758
  store float %4841, ptr %4415, align 4, !tbaa !163
  %4842 = fadd fast double %4760, 1.000000e+00
  %4843 = add nuw nsw i32 %4759, 1
  br i1 %4751, label %4844, label %4891

4844:                                             ; preds = %4831
  %4845 = load i32, ptr %4, align 4, !tbaa !6
  %4846 = load i32, ptr %12, align 4, !tbaa !6
  %4847 = add nsw i32 %4846, -1
  %4848 = icmp slt i32 %4845, %4847
  br i1 %4848, label %4868, label %4849

4849:                                             ; preds = %4844
  %4850 = icmp eq i32 %4845, %4847
  br i1 %4850, label %4851, label %4884

4851:                                             ; preds = %4849
  store i32 0, ptr %4, align 4, !tbaa !6
  %4852 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4852, ptr %6, align 4, !tbaa !6
  br i1 %4756, label %4891, label %4853

4853:                                             ; preds = %4851, %4878
  %4854 = phi i64 [ %4882, %4878 ], [ 1, %4851 ]
  %4855 = getelementptr inbounds i32, ptr %4, i64 %4854
  %4856 = load i32, ptr %4855, align 4, !tbaa !6
  %4857 = getelementptr inbounds i32, ptr %12, i64 %4854
  %4858 = load i32, ptr %4857, align 4, !tbaa !6
  %4859 = add nsw i32 %4858, -1
  %4860 = icmp slt i32 %4856, %4859
  br i1 %4860, label %4861, label %4876

4861:                                             ; preds = %4853
  br i1 %4848, label %4868, label %4862

4862:                                             ; preds = %4861
  %4863 = getelementptr inbounds i32, ptr %7, i64 %4854
  %4864 = load i32, ptr %4863, align 4, !tbaa !6
  %4865 = getelementptr inbounds i32, ptr %6, i64 %4854
  %4866 = load i32, ptr %4865, align 4, !tbaa !6
  %4867 = add nsw i32 %4866, %4864
  store i32 %4867, ptr %4865, align 4, !tbaa !6
  br label %4886

4868:                                             ; preds = %4844, %4861
  %4869 = phi i32 [ %4856, %4861 ], [ %4845, %4844 ]
  %4870 = phi ptr [ %4855, %4861 ], [ %4, %4844 ]
  %4871 = phi i64 [ %4854, %4861 ], [ 0, %4844 ]
  %4872 = add nsw i32 %4869, 1
  store i32 %4872, ptr %4870, align 4, !tbaa !6
  %4873 = getelementptr inbounds i32, ptr %7, i64 %4871
  %4874 = load i32, ptr %4873, align 4, !tbaa !6
  %4875 = getelementptr inbounds i32, ptr %6, i64 %4871
  br label %4886

4876:                                             ; preds = %4853
  %4877 = icmp eq i32 %4856, %4859
  br i1 %4877, label %4878, label %4884

4878:                                             ; preds = %4876
  store i32 0, ptr %4855, align 4, !tbaa !6
  %4879 = getelementptr inbounds i32, ptr %8, i64 %4854
  %4880 = load i32, ptr %4879, align 4, !tbaa !6
  %4881 = getelementptr inbounds i32, ptr %6, i64 %4854
  store i32 %4880, ptr %4881, align 4, !tbaa !6
  %4882 = add nuw nsw i64 %4854, 1
  %4883 = icmp eq i64 %4882, %4754
  br i1 %4883, label %4891, label %4853, !llvm.loop !1278

4884:                                             ; preds = %4849, %4876
  %4885 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

4886:                                             ; preds = %4862, %4868
  %4887 = phi ptr [ %4875, %4868 ], [ %4855, %4862 ]
  %4888 = phi i32 [ %4874, %4868 ], [ 1, %4862 ]
  %4889 = load i32, ptr %4887, align 4, !tbaa !6
  %4890 = add nsw i32 %4889, %4888
  store i32 %4890, ptr %4887, align 4, !tbaa !6
  br label %4891

4891:                                             ; preds = %4878, %4886, %4851, %4831
  %4892 = icmp eq i32 %4843, %5
  br i1 %4892, label %5666, label %4757, !llvm.loop !1279

4893:                                             ; preds = %4740, %5032
  %4894 = phi float [ 0.000000e+00, %4740 ], [ %4980, %5032 ]
  %4895 = phi i32 [ 0, %4740 ], [ %4981, %5032 ]
  %4896 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4741, label %4897, label %4966

4897:                                             ; preds = %4893, %4956
  %4898 = phi i32 [ %4965, %4956 ], [ 0, %4893 ]
  %4899 = phi i64 [ %4907, %4956 ], [ %4745, %4893 ]
  %4900 = phi i64 [ %4964, %4956 ], [ %4744, %4893 ]
  %4901 = phi i32 [ %4962, %4956 ], [ %4896, %4893 ]
  %4902 = sub i32 %4743, %4898
  %4903 = tail call i32 @llvm.smin.i32(i32 %4902, i32 0)
  %4904 = sub i32 %4902, %4903
  %4905 = zext i32 %4904 to i64
  %4906 = add nuw nsw i64 %4905, 1
  %4907 = add nsw i64 %4899, -1
  %4908 = icmp ult i32 %4904, 31
  br i1 %4908, label %4944, label %4909

4909:                                             ; preds = %4897
  %4910 = and i64 %4906, 8589934560
  %4911 = sub i64 %4900, %4910
  br label %4912

4912:                                             ; preds = %4912, %4909
  %4913 = phi i64 [ 0, %4909 ], [ %4936, %4912 ]
  %4914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4909 ], [ %4932, %4912 ]
  %4915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4909 ], [ %4933, %4912 ]
  %4916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4909 ], [ %4934, %4912 ]
  %4917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4909 ], [ %4935, %4912 ]
  %4918 = sub i64 %4900, %4913
  %4919 = getelementptr inbounds i32, ptr %11, i64 %4918
  %4920 = getelementptr inbounds i32, ptr %4919, i64 -7
  %4921 = load <8 x i32>, ptr %4920, align 4, !tbaa !6
  %4922 = shufflevector <8 x i32> %4921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4923 = getelementptr inbounds i32, ptr %4919, i64 -15
  %4924 = load <8 x i32>, ptr %4923, align 4, !tbaa !6
  %4925 = shufflevector <8 x i32> %4924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4926 = getelementptr inbounds i32, ptr %4919, i64 -23
  %4927 = load <8 x i32>, ptr %4926, align 4, !tbaa !6
  %4928 = shufflevector <8 x i32> %4927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4929 = getelementptr inbounds i32, ptr %4919, i64 -31
  %4930 = load <8 x i32>, ptr %4929, align 4, !tbaa !6
  %4931 = shufflevector <8 x i32> %4930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4932 = mul <8 x i32> %4922, %4914
  %4933 = mul <8 x i32> %4925, %4915
  %4934 = mul <8 x i32> %4928, %4916
  %4935 = mul <8 x i32> %4931, %4917
  %4936 = add nuw i64 %4913, 32
  %4937 = icmp eq i64 %4936, %4910
  br i1 %4937, label %4938, label %4912, !llvm.loop !1280

4938:                                             ; preds = %4912
  %4939 = mul <8 x i32> %4933, %4932
  %4940 = mul <8 x i32> %4934, %4939
  %4941 = mul <8 x i32> %4935, %4940
  %4942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4941)
  %4943 = icmp eq i64 %4906, %4910
  br i1 %4943, label %4956, label %4944

4944:                                             ; preds = %4897, %4938
  %4945 = phi i64 [ %4900, %4897 ], [ %4911, %4938 ]
  %4946 = phi i32 [ 1, %4897 ], [ %4942, %4938 ]
  br label %4947

4947:                                             ; preds = %4944, %4947
  %4948 = phi i64 [ %4953, %4947 ], [ %4945, %4944 ]
  %4949 = phi i32 [ %4952, %4947 ], [ %4946, %4944 ]
  %4950 = getelementptr inbounds i32, ptr %11, i64 %4948
  %4951 = load i32, ptr %4950, align 4, !tbaa !6
  %4952 = mul nsw i32 %4951, %4949
  %4953 = add nsw i64 %4948, -1
  %4954 = trunc i64 %4948 to i32
  %4955 = icmp sgt i32 %4954, 0
  br i1 %4955, label %4947, label %4956, !llvm.loop !1281

4956:                                             ; preds = %4947, %4938
  %4957 = phi i32 [ %4942, %4938 ], [ %4952, %4947 ]
  %4958 = and i64 %4907, 4294967295
  %4959 = getelementptr inbounds i32, ptr %6, i64 %4958
  %4960 = load i32, ptr %4959, align 4, !tbaa !6
  %4961 = mul nsw i32 %4960, %4957
  %4962 = add nsw i32 %4961, %4901
  %4963 = icmp sgt i64 %4899, 2
  %4964 = add nsw i64 %4900, -1
  %4965 = add i32 %4898, 1
  br i1 %4963, label %4897, label %4966, !llvm.loop !1282

4966:                                             ; preds = %4956, %4893
  %4967 = phi i32 [ %4896, %4893 ], [ %4962, %4956 ]
  %4968 = icmp slt i32 %4967, %5
  br i1 %4968, label %4971, label %4969

4969:                                             ; preds = %4966
  %4970 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

4971:                                             ; preds = %4966
  %4972 = sext i32 %4967 to i64
  %4973 = getelementptr inbounds float, ptr %4413, i64 %4972
  %4974 = load float, ptr %4973, align 4, !tbaa !163
  %4975 = fcmp fast olt float %4974, 0.000000e+00
  %4976 = fneg fast float %4974
  %4977 = select nnan ninf i1 %4975, float %4976, float %4974
  %4978 = fmul fast float %4974, %4974
  %4979 = fmul fast float %4978, %4977
  %4980 = fadd fast float %4979, %4894
  store float %4980, ptr %4415, align 4, !tbaa !163
  %4981 = add nuw nsw i32 %4895, 1
  br i1 %4742, label %4982, label %5032

4982:                                             ; preds = %4971
  %4983 = load i32, ptr %4, align 4, !tbaa !6
  %4984 = load i32, ptr %12, align 4, !tbaa !6
  %4985 = add nsw i32 %4984, -1
  %4986 = icmp slt i32 %4983, %4985
  br i1 %4986, label %5009, label %4987

4987:                                             ; preds = %4982
  %4988 = icmp eq i32 %4983, %4985
  br i1 %4988, label %4989, label %5025

4989:                                             ; preds = %4987
  store i32 0, ptr %4, align 4, !tbaa !6
  %4990 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4990, ptr %6, align 4, !tbaa !6
  br i1 %4747, label %5032, label %4991

4991:                                             ; preds = %4989, %5019
  %4992 = phi i64 [ %5023, %5019 ], [ 1, %4989 ]
  %4993 = getelementptr inbounds i32, ptr %4, i64 %4992
  %4994 = load i32, ptr %4993, align 4, !tbaa !6
  %4995 = getelementptr inbounds i32, ptr %12, i64 %4992
  %4996 = load i32, ptr %4995, align 4, !tbaa !6
  %4997 = add nsw i32 %4996, -1
  %4998 = icmp slt i32 %4994, %4997
  br i1 %4998, label %4999, label %5017

4999:                                             ; preds = %4991
  br i1 %4986, label %5009, label %5000

5000:                                             ; preds = %4999
  %5001 = shl i64 %4992, 32
  %5002 = add i64 %5001, -4294967296
  %5003 = ashr exact i64 %5002, 32
  %5004 = getelementptr inbounds i32, ptr %7, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !6
  %5006 = getelementptr inbounds i32, ptr %6, i64 %4992
  %5007 = load i32, ptr %5006, align 4, !tbaa !6
  %5008 = add nsw i32 %5007, %5005
  store i32 %5008, ptr %5006, align 4, !tbaa !6
  br label %5027

5009:                                             ; preds = %4982, %4999
  %5010 = phi i32 [ %4994, %4999 ], [ %4983, %4982 ]
  %5011 = phi ptr [ %4993, %4999 ], [ %4, %4982 ]
  %5012 = phi i64 [ %4992, %4999 ], [ 0, %4982 ]
  %5013 = add nsw i32 %5010, 1
  store i32 %5013, ptr %5011, align 4, !tbaa !6
  %5014 = getelementptr inbounds i32, ptr %7, i64 %5012
  %5015 = load i32, ptr %5014, align 4, !tbaa !6
  %5016 = getelementptr inbounds i32, ptr %6, i64 %5012
  br label %5027

5017:                                             ; preds = %4991
  %5018 = icmp eq i32 %4994, %4997
  br i1 %5018, label %5019, label %5025

5019:                                             ; preds = %5017
  store i32 0, ptr %4993, align 4, !tbaa !6
  %5020 = getelementptr inbounds i32, ptr %8, i64 %4992
  %5021 = load i32, ptr %5020, align 4, !tbaa !6
  %5022 = getelementptr inbounds i32, ptr %6, i64 %4992
  store i32 %5021, ptr %5022, align 4, !tbaa !6
  %5023 = add nuw nsw i64 %4992, 1
  %5024 = icmp eq i64 %5023, %4745
  br i1 %5024, label %5032, label %4991, !llvm.loop !1283

5025:                                             ; preds = %4987, %5017
  %5026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

5027:                                             ; preds = %5000, %5009
  %5028 = phi ptr [ %5016, %5009 ], [ %4993, %5000 ]
  %5029 = phi i32 [ %5015, %5009 ], [ 1, %5000 ]
  %5030 = load i32, ptr %5028, align 4, !tbaa !6
  %5031 = add nsw i32 %5030, %5029
  store i32 %5031, ptr %5028, align 4, !tbaa !6
  br label %5032

5032:                                             ; preds = %5019, %5027, %4989, %4971
  %5033 = icmp eq i32 %4981, %5
  br i1 %5033, label %5666, label %4893, !llvm.loop !1284

5034:                                             ; preds = %4424
  %5035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2025, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

5036:                                             ; preds = %18
  %5037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5038 = load ptr, ptr %5037, align 8, !tbaa !10
  %5039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5040 = load ptr, ptr %5039, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5040, align 8, !tbaa !19
  %5041 = icmp eq i32 %13, 0
  br i1 %5041, label %5042, label %5050

5042:                                             ; preds = %5036
  %5043 = load float, ptr %5038, align 4, !tbaa !163
  %5044 = fpext float %5043 to double
  %5045 = fcmp fast olt float %5043, 0.000000e+00
  %5046 = fneg fast double %5044
  %5047 = select i1 %5045, double %5046, double %5044
  %5048 = fmul fast double %5044, %5044
  %5049 = fmul fast double %5048, %5047
  store double %5049, ptr %5040, align 8, !tbaa !19
  br label %5666

5050:                                             ; preds = %5036
  switch i32 %1, label %5658 [
    i32 1, label %5051
    i32 0, label %5356
  ]

5051:                                             ; preds = %5050
  %5052 = getelementptr inbounds i32, ptr %3, i64 %19
  %5053 = load i32, ptr %5052, align 4, !tbaa !6
  %5054 = icmp eq i32 %5053, 0
  %5055 = icmp sgt i32 %5, 0
  br i1 %5054, label %5065, label %5056

5056:                                             ; preds = %5051
  br i1 %5055, label %5057, label %5666

5057:                                             ; preds = %5056
  %5058 = icmp sgt i32 %13, 1
  %5059 = icmp sgt i32 %13, 0
  %5060 = add i32 %13, -2
  %5061 = zext i32 %5060 to i64
  %5062 = zext i32 %13 to i64
  %5063 = add nuw i32 %5, 1
  %5064 = icmp eq i32 %13, 1
  br label %5214

5065:                                             ; preds = %5051
  br i1 %5055, label %5066, label %5666

5066:                                             ; preds = %5065
  %5067 = icmp sgt i32 %13, 1
  %5068 = icmp sgt i32 %13, 0
  %5069 = add i32 %13, -2
  %5070 = zext i32 %5069 to i64
  %5071 = zext i32 %13 to i64
  %5072 = add nuw i32 %5, 1
  %5073 = icmp eq i32 %13, 1
  br label %5074

5074:                                             ; preds = %5066, %5212
  %5075 = phi double [ 0.000000e+00, %5066 ], [ %5162, %5212 ]
  %5076 = phi i32 [ 0, %5066 ], [ %5164, %5212 ]
  %5077 = phi double [ 0.000000e+00, %5066 ], [ %5163, %5212 ]
  %5078 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5067, label %5079, label %5148

5079:                                             ; preds = %5074, %5138
  %5080 = phi i32 [ %5147, %5138 ], [ 0, %5074 ]
  %5081 = phi i64 [ %5089, %5138 ], [ %5071, %5074 ]
  %5082 = phi i64 [ %5146, %5138 ], [ %5070, %5074 ]
  %5083 = phi i32 [ %5144, %5138 ], [ %5078, %5074 ]
  %5084 = sub i32 %5069, %5080
  %5085 = tail call i32 @llvm.smin.i32(i32 %5084, i32 0)
  %5086 = sub i32 %5084, %5085
  %5087 = zext i32 %5086 to i64
  %5088 = add nuw nsw i64 %5087, 1
  %5089 = add nsw i64 %5081, -1
  %5090 = icmp ult i32 %5086, 31
  br i1 %5090, label %5126, label %5091

5091:                                             ; preds = %5079
  %5092 = and i64 %5088, 8589934560
  %5093 = sub i64 %5082, %5092
  br label %5094

5094:                                             ; preds = %5094, %5091
  %5095 = phi i64 [ 0, %5091 ], [ %5118, %5094 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5114, %5094 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5115, %5094 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5116, %5094 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5117, %5094 ]
  %5100 = sub i64 %5082, %5095
  %5101 = getelementptr inbounds i32, ptr %9, i64 %5100
  %5102 = getelementptr inbounds i32, ptr %5101, i64 -7
  %5103 = load <8 x i32>, ptr %5102, align 4, !tbaa !6
  %5104 = shufflevector <8 x i32> %5103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5105 = getelementptr inbounds i32, ptr %5101, i64 -15
  %5106 = load <8 x i32>, ptr %5105, align 4, !tbaa !6
  %5107 = shufflevector <8 x i32> %5106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5108 = getelementptr inbounds i32, ptr %5101, i64 -23
  %5109 = load <8 x i32>, ptr %5108, align 4, !tbaa !6
  %5110 = shufflevector <8 x i32> %5109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5111 = getelementptr inbounds i32, ptr %5101, i64 -31
  %5112 = load <8 x i32>, ptr %5111, align 4, !tbaa !6
  %5113 = shufflevector <8 x i32> %5112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5114 = mul <8 x i32> %5104, %5096
  %5115 = mul <8 x i32> %5107, %5097
  %5116 = mul <8 x i32> %5110, %5098
  %5117 = mul <8 x i32> %5113, %5099
  %5118 = add nuw i64 %5095, 32
  %5119 = icmp eq i64 %5118, %5092
  br i1 %5119, label %5120, label %5094, !llvm.loop !1285

5120:                                             ; preds = %5094
  %5121 = mul <8 x i32> %5115, %5114
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5123)
  %5125 = icmp eq i64 %5088, %5092
  br i1 %5125, label %5138, label %5126

5126:                                             ; preds = %5079, %5120
  %5127 = phi i64 [ %5082, %5079 ], [ %5093, %5120 ]
  %5128 = phi i32 [ 1, %5079 ], [ %5124, %5120 ]
  br label %5129

5129:                                             ; preds = %5126, %5129
  %5130 = phi i64 [ %5135, %5129 ], [ %5127, %5126 ]
  %5131 = phi i32 [ %5134, %5129 ], [ %5128, %5126 ]
  %5132 = getelementptr inbounds i32, ptr %9, i64 %5130
  %5133 = load i32, ptr %5132, align 4, !tbaa !6
  %5134 = mul nsw i32 %5133, %5131
  %5135 = add nsw i64 %5130, -1
  %5136 = trunc i64 %5130 to i32
  %5137 = icmp sgt i32 %5136, 0
  br i1 %5137, label %5129, label %5138, !llvm.loop !1286

5138:                                             ; preds = %5129, %5120
  %5139 = phi i32 [ %5124, %5120 ], [ %5134, %5129 ]
  %5140 = and i64 %5089, 4294967295
  %5141 = getelementptr inbounds i32, ptr %6, i64 %5140
  %5142 = load i32, ptr %5141, align 4, !tbaa !6
  %5143 = mul nsw i32 %5142, %5139
  %5144 = add nsw i32 %5143, %5083
  %5145 = icmp sgt i64 %5081, 2
  %5146 = add nsw i64 %5082, -1
  %5147 = add i32 %5080, 1
  br i1 %5145, label %5079, label %5148, !llvm.loop !1287

5148:                                             ; preds = %5138, %5074
  %5149 = phi i32 [ %5078, %5074 ], [ %5144, %5138 ]
  %5150 = sext i32 %5149 to i64
  %5151 = getelementptr inbounds double, ptr %2, i64 %5150
  %5152 = load double, ptr %5151, align 8, !tbaa !19
  %5153 = getelementptr inbounds float, ptr %5038, i64 %5150
  %5154 = load float, ptr %5153, align 4, !tbaa !163
  %5155 = fpext float %5154 to double
  %5156 = fmul fast double %5152, %5155
  %5157 = fcmp fast olt double %5156, 0.000000e+00
  %5158 = fneg fast double %5156
  %5159 = select nnan ninf i1 %5157, double %5158, double %5156
  %5160 = fmul fast double %5156, %5156
  %5161 = fmul fast double %5160, %5159
  %5162 = fadd fast double %5161, %5075
  store double %5162, ptr %5040, align 8, !tbaa !19
  %5163 = fadd fast double %5152, %5077
  %5164 = add nuw nsw i32 %5076, 1
  br i1 %5068, label %5165, label %5212

5165:                                             ; preds = %5148
  %5166 = load i32, ptr %4, align 4, !tbaa !6
  %5167 = load i32, ptr %12, align 4, !tbaa !6
  %5168 = add nsw i32 %5167, -1
  %5169 = icmp slt i32 %5166, %5168
  br i1 %5169, label %5189, label %5170

5170:                                             ; preds = %5165
  %5171 = icmp eq i32 %5166, %5168
  br i1 %5171, label %5172, label %5205

5172:                                             ; preds = %5170
  store i32 0, ptr %4, align 4, !tbaa !6
  %5173 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5173, ptr %6, align 4, !tbaa !6
  br i1 %5073, label %5212, label %5174

5174:                                             ; preds = %5172, %5199
  %5175 = phi i64 [ %5203, %5199 ], [ 1, %5172 ]
  %5176 = getelementptr inbounds i32, ptr %4, i64 %5175
  %5177 = load i32, ptr %5176, align 4, !tbaa !6
  %5178 = getelementptr inbounds i32, ptr %12, i64 %5175
  %5179 = load i32, ptr %5178, align 4, !tbaa !6
  %5180 = add nsw i32 %5179, -1
  %5181 = icmp slt i32 %5177, %5180
  br i1 %5181, label %5182, label %5197

5182:                                             ; preds = %5174
  br i1 %5169, label %5189, label %5183

5183:                                             ; preds = %5182
  %5184 = getelementptr inbounds i32, ptr %7, i64 %5175
  %5185 = load i32, ptr %5184, align 4, !tbaa !6
  %5186 = getelementptr inbounds i32, ptr %6, i64 %5175
  %5187 = load i32, ptr %5186, align 4, !tbaa !6
  %5188 = add nsw i32 %5187, %5185
  store i32 %5188, ptr %5186, align 4, !tbaa !6
  br label %5207

5189:                                             ; preds = %5165, %5182
  %5190 = phi i32 [ %5177, %5182 ], [ %5166, %5165 ]
  %5191 = phi ptr [ %5176, %5182 ], [ %4, %5165 ]
  %5192 = phi i64 [ %5175, %5182 ], [ 0, %5165 ]
  %5193 = add nsw i32 %5190, 1
  store i32 %5193, ptr %5191, align 4, !tbaa !6
  %5194 = getelementptr inbounds i32, ptr %7, i64 %5192
  %5195 = load i32, ptr %5194, align 4, !tbaa !6
  %5196 = getelementptr inbounds i32, ptr %6, i64 %5192
  br label %5207

5197:                                             ; preds = %5174
  %5198 = icmp eq i32 %5177, %5180
  br i1 %5198, label %5199, label %5205

5199:                                             ; preds = %5197
  store i32 0, ptr %5176, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %8, i64 %5175
  %5201 = load i32, ptr %5200, align 4, !tbaa !6
  %5202 = getelementptr inbounds i32, ptr %6, i64 %5175
  store i32 %5201, ptr %5202, align 4, !tbaa !6
  %5203 = add nuw nsw i64 %5175, 1
  %5204 = icmp eq i64 %5203, %5071
  br i1 %5204, label %5212, label %5174, !llvm.loop !1288

5205:                                             ; preds = %5170, %5197
  %5206 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

5207:                                             ; preds = %5183, %5189
  %5208 = phi ptr [ %5196, %5189 ], [ %5176, %5183 ]
  %5209 = phi i32 [ %5195, %5189 ], [ 1, %5183 ]
  %5210 = load i32, ptr %5208, align 4, !tbaa !6
  %5211 = add nsw i32 %5210, %5209
  store i32 %5211, ptr %5208, align 4, !tbaa !6
  br label %5212

5212:                                             ; preds = %5199, %5207, %5172, %5148
  %5213 = icmp eq i32 %5164, %5
  br i1 %5213, label %5666, label %5074, !llvm.loop !1289

5214:                                             ; preds = %5057, %5354
  %5215 = phi double [ 0.000000e+00, %5057 ], [ %5302, %5354 ]
  %5216 = phi i32 [ 0, %5057 ], [ %5303, %5354 ]
  %5217 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5058, label %5218, label %5287

5218:                                             ; preds = %5214, %5277
  %5219 = phi i32 [ %5286, %5277 ], [ 0, %5214 ]
  %5220 = phi i64 [ %5228, %5277 ], [ %5062, %5214 ]
  %5221 = phi i64 [ %5285, %5277 ], [ %5061, %5214 ]
  %5222 = phi i32 [ %5283, %5277 ], [ %5217, %5214 ]
  %5223 = sub i32 %5060, %5219
  %5224 = tail call i32 @llvm.smin.i32(i32 %5223, i32 0)
  %5225 = sub i32 %5223, %5224
  %5226 = zext i32 %5225 to i64
  %5227 = add nuw nsw i64 %5226, 1
  %5228 = add nsw i64 %5220, -1
  %5229 = icmp ult i32 %5225, 31
  br i1 %5229, label %5265, label %5230

5230:                                             ; preds = %5218
  %5231 = and i64 %5227, 8589934560
  %5232 = sub i64 %5221, %5231
  br label %5233

5233:                                             ; preds = %5233, %5230
  %5234 = phi i64 [ 0, %5230 ], [ %5257, %5233 ]
  %5235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5230 ], [ %5253, %5233 ]
  %5236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5230 ], [ %5254, %5233 ]
  %5237 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5230 ], [ %5255, %5233 ]
  %5238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5230 ], [ %5256, %5233 ]
  %5239 = sub i64 %5221, %5234
  %5240 = getelementptr inbounds i32, ptr %11, i64 %5239
  %5241 = getelementptr inbounds i32, ptr %5240, i64 -7
  %5242 = load <8 x i32>, ptr %5241, align 4, !tbaa !6
  %5243 = shufflevector <8 x i32> %5242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5244 = getelementptr inbounds i32, ptr %5240, i64 -15
  %5245 = load <8 x i32>, ptr %5244, align 4, !tbaa !6
  %5246 = shufflevector <8 x i32> %5245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5247 = getelementptr inbounds i32, ptr %5240, i64 -23
  %5248 = load <8 x i32>, ptr %5247, align 4, !tbaa !6
  %5249 = shufflevector <8 x i32> %5248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5250 = getelementptr inbounds i32, ptr %5240, i64 -31
  %5251 = load <8 x i32>, ptr %5250, align 4, !tbaa !6
  %5252 = shufflevector <8 x i32> %5251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5253 = mul <8 x i32> %5243, %5235
  %5254 = mul <8 x i32> %5246, %5236
  %5255 = mul <8 x i32> %5249, %5237
  %5256 = mul <8 x i32> %5252, %5238
  %5257 = add nuw i64 %5234, 32
  %5258 = icmp eq i64 %5257, %5231
  br i1 %5258, label %5259, label %5233, !llvm.loop !1290

5259:                                             ; preds = %5233
  %5260 = mul <8 x i32> %5254, %5253
  %5261 = mul <8 x i32> %5255, %5260
  %5262 = mul <8 x i32> %5256, %5261
  %5263 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5262)
  %5264 = icmp eq i64 %5227, %5231
  br i1 %5264, label %5277, label %5265

5265:                                             ; preds = %5218, %5259
  %5266 = phi i64 [ %5221, %5218 ], [ %5232, %5259 ]
  %5267 = phi i32 [ 1, %5218 ], [ %5263, %5259 ]
  br label %5268

5268:                                             ; preds = %5265, %5268
  %5269 = phi i64 [ %5274, %5268 ], [ %5266, %5265 ]
  %5270 = phi i32 [ %5273, %5268 ], [ %5267, %5265 ]
  %5271 = getelementptr inbounds i32, ptr %11, i64 %5269
  %5272 = load i32, ptr %5271, align 4, !tbaa !6
  %5273 = mul nsw i32 %5272, %5270
  %5274 = add nsw i64 %5269, -1
  %5275 = trunc i64 %5269 to i32
  %5276 = icmp sgt i32 %5275, 0
  br i1 %5276, label %5268, label %5277, !llvm.loop !1291

5277:                                             ; preds = %5268, %5259
  %5278 = phi i32 [ %5263, %5259 ], [ %5273, %5268 ]
  %5279 = and i64 %5228, 4294967295
  %5280 = getelementptr inbounds i32, ptr %6, i64 %5279
  %5281 = load i32, ptr %5280, align 4, !tbaa !6
  %5282 = mul nsw i32 %5281, %5278
  %5283 = add nsw i32 %5282, %5222
  %5284 = icmp sgt i64 %5220, 2
  %5285 = add nsw i64 %5221, -1
  %5286 = add i32 %5219, 1
  br i1 %5284, label %5218, label %5287, !llvm.loop !1292

5287:                                             ; preds = %5277, %5214
  %5288 = phi i32 [ %5217, %5214 ], [ %5283, %5277 ]
  %5289 = icmp slt i32 %5288, %5
  br i1 %5289, label %5292, label %5290

5290:                                             ; preds = %5287
  %5291 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

5292:                                             ; preds = %5287
  %5293 = sext i32 %5288 to i64
  %5294 = getelementptr inbounds float, ptr %5038, i64 %5293
  %5295 = load float, ptr %5294, align 4, !tbaa !163
  %5296 = fpext float %5295 to double
  %5297 = fcmp fast olt float %5295, 0.000000e+00
  %5298 = fneg fast double %5296
  %5299 = select i1 %5297, double %5298, double %5296
  %5300 = fmul fast double %5296, %5296
  %5301 = fmul fast double %5300, %5299
  %5302 = fadd fast double %5301, %5215
  store double %5302, ptr %5040, align 8, !tbaa !19
  %5303 = add nuw nsw i32 %5216, 1
  br i1 %5059, label %5304, label %5354

5304:                                             ; preds = %5292
  %5305 = load i32, ptr %4, align 4, !tbaa !6
  %5306 = load i32, ptr %12, align 4, !tbaa !6
  %5307 = add nsw i32 %5306, -1
  %5308 = icmp slt i32 %5305, %5307
  br i1 %5308, label %5331, label %5309

5309:                                             ; preds = %5304
  %5310 = icmp eq i32 %5305, %5307
  br i1 %5310, label %5311, label %5347

5311:                                             ; preds = %5309
  store i32 0, ptr %4, align 4, !tbaa !6
  %5312 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5312, ptr %6, align 4, !tbaa !6
  br i1 %5064, label %5354, label %5313

5313:                                             ; preds = %5311, %5341
  %5314 = phi i64 [ %5345, %5341 ], [ 1, %5311 ]
  %5315 = getelementptr inbounds i32, ptr %4, i64 %5314
  %5316 = load i32, ptr %5315, align 4, !tbaa !6
  %5317 = getelementptr inbounds i32, ptr %12, i64 %5314
  %5318 = load i32, ptr %5317, align 4, !tbaa !6
  %5319 = add nsw i32 %5318, -1
  %5320 = icmp slt i32 %5316, %5319
  br i1 %5320, label %5321, label %5339

5321:                                             ; preds = %5313
  br i1 %5308, label %5331, label %5322

5322:                                             ; preds = %5321
  %5323 = shl i64 %5314, 32
  %5324 = add i64 %5323, -4294967296
  %5325 = ashr exact i64 %5324, 32
  %5326 = getelementptr inbounds i32, ptr %7, i64 %5325
  %5327 = load i32, ptr %5326, align 4, !tbaa !6
  %5328 = getelementptr inbounds i32, ptr %6, i64 %5314
  %5329 = load i32, ptr %5328, align 4, !tbaa !6
  %5330 = add nsw i32 %5329, %5327
  store i32 %5330, ptr %5328, align 4, !tbaa !6
  br label %5349

5331:                                             ; preds = %5304, %5321
  %5332 = phi i32 [ %5316, %5321 ], [ %5305, %5304 ]
  %5333 = phi ptr [ %5315, %5321 ], [ %4, %5304 ]
  %5334 = phi i64 [ %5314, %5321 ], [ 0, %5304 ]
  %5335 = add nsw i32 %5332, 1
  store i32 %5335, ptr %5333, align 4, !tbaa !6
  %5336 = getelementptr inbounds i32, ptr %7, i64 %5334
  %5337 = load i32, ptr %5336, align 4, !tbaa !6
  %5338 = getelementptr inbounds i32, ptr %6, i64 %5334
  br label %5349

5339:                                             ; preds = %5313
  %5340 = icmp eq i32 %5316, %5319
  br i1 %5340, label %5341, label %5347

5341:                                             ; preds = %5339
  store i32 0, ptr %5315, align 4, !tbaa !6
  %5342 = getelementptr inbounds i32, ptr %8, i64 %5314
  %5343 = load i32, ptr %5342, align 4, !tbaa !6
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5314
  store i32 %5343, ptr %5344, align 4, !tbaa !6
  %5345 = add nuw nsw i64 %5314, 1
  %5346 = icmp eq i64 %5345, %5062
  br i1 %5346, label %5354, label %5313, !llvm.loop !1293

5347:                                             ; preds = %5309, %5339
  %5348 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

5349:                                             ; preds = %5322, %5331
  %5350 = phi ptr [ %5338, %5331 ], [ %5315, %5322 ]
  %5351 = phi i32 [ %5337, %5331 ], [ 1, %5322 ]
  %5352 = load i32, ptr %5350, align 4, !tbaa !6
  %5353 = add nsw i32 %5352, %5351
  store i32 %5353, ptr %5350, align 4, !tbaa !6
  br label %5354

5354:                                             ; preds = %5341, %5349, %5311, %5292
  %5355 = icmp eq i32 %5303, %5
  br i1 %5355, label %5666, label %5214, !llvm.loop !1294

5356:                                             ; preds = %5050
  %5357 = getelementptr inbounds i32, ptr %3, i64 %19
  %5358 = load i32, ptr %5357, align 4, !tbaa !6
  %5359 = icmp eq i32 %5358, 0
  %5360 = icmp sgt i32 %5, 0
  br i1 %5359, label %5370, label %5361

5361:                                             ; preds = %5356
  br i1 %5360, label %5362, label %5666

5362:                                             ; preds = %5361
  %5363 = icmp sgt i32 %13, 1
  %5364 = icmp sgt i32 %13, 0
  %5365 = add i32 %13, -2
  %5366 = zext i32 %5365 to i64
  %5367 = zext i32 %13 to i64
  %5368 = add nuw i32 %5, 1
  %5369 = icmp eq i32 %13, 1
  br label %5516

5370:                                             ; preds = %5356
  br i1 %5360, label %5371, label %5666

5371:                                             ; preds = %5370
  %5372 = icmp sgt i32 %13, 1
  %5373 = icmp sgt i32 %13, 0
  %5374 = add i32 %13, -2
  %5375 = zext i32 %5374 to i64
  %5376 = zext i32 %13 to i64
  %5377 = add nuw i32 %5, 1
  %5378 = icmp eq i32 %13, 1
  br label %5379

5379:                                             ; preds = %5371, %5514
  %5380 = phi double [ 0.000000e+00, %5371 ], [ %5464, %5514 ]
  %5381 = phi i32 [ 0, %5371 ], [ %5466, %5514 ]
  %5382 = phi double [ 0.000000e+00, %5371 ], [ %5465, %5514 ]
  %5383 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5372, label %5384, label %5453

5384:                                             ; preds = %5379, %5443
  %5385 = phi i32 [ %5452, %5443 ], [ 0, %5379 ]
  %5386 = phi i64 [ %5394, %5443 ], [ %5376, %5379 ]
  %5387 = phi i64 [ %5451, %5443 ], [ %5375, %5379 ]
  %5388 = phi i32 [ %5449, %5443 ], [ %5383, %5379 ]
  %5389 = sub i32 %5374, %5385
  %5390 = tail call i32 @llvm.smin.i32(i32 %5389, i32 0)
  %5391 = sub i32 %5389, %5390
  %5392 = zext i32 %5391 to i64
  %5393 = add nuw nsw i64 %5392, 1
  %5394 = add nsw i64 %5386, -1
  %5395 = icmp ult i32 %5391, 31
  br i1 %5395, label %5431, label %5396

5396:                                             ; preds = %5384
  %5397 = and i64 %5393, 8589934560
  %5398 = sub i64 %5387, %5397
  br label %5399

5399:                                             ; preds = %5399, %5396
  %5400 = phi i64 [ 0, %5396 ], [ %5423, %5399 ]
  %5401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5396 ], [ %5419, %5399 ]
  %5402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5396 ], [ %5420, %5399 ]
  %5403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5396 ], [ %5421, %5399 ]
  %5404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5396 ], [ %5422, %5399 ]
  %5405 = sub i64 %5387, %5400
  %5406 = getelementptr inbounds i32, ptr %9, i64 %5405
  %5407 = getelementptr inbounds i32, ptr %5406, i64 -7
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !6
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = getelementptr inbounds i32, ptr %5406, i64 -15
  %5411 = load <8 x i32>, ptr %5410, align 4, !tbaa !6
  %5412 = shufflevector <8 x i32> %5411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5413 = getelementptr inbounds i32, ptr %5406, i64 -23
  %5414 = load <8 x i32>, ptr %5413, align 4, !tbaa !6
  %5415 = shufflevector <8 x i32> %5414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5416 = getelementptr inbounds i32, ptr %5406, i64 -31
  %5417 = load <8 x i32>, ptr %5416, align 4, !tbaa !6
  %5418 = shufflevector <8 x i32> %5417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5419 = mul <8 x i32> %5409, %5401
  %5420 = mul <8 x i32> %5412, %5402
  %5421 = mul <8 x i32> %5415, %5403
  %5422 = mul <8 x i32> %5418, %5404
  %5423 = add nuw i64 %5400, 32
  %5424 = icmp eq i64 %5423, %5397
  br i1 %5424, label %5425, label %5399, !llvm.loop !1295

5425:                                             ; preds = %5399
  %5426 = mul <8 x i32> %5420, %5419
  %5427 = mul <8 x i32> %5421, %5426
  %5428 = mul <8 x i32> %5422, %5427
  %5429 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5428)
  %5430 = icmp eq i64 %5393, %5397
  br i1 %5430, label %5443, label %5431

5431:                                             ; preds = %5384, %5425
  %5432 = phi i64 [ %5387, %5384 ], [ %5398, %5425 ]
  %5433 = phi i32 [ 1, %5384 ], [ %5429, %5425 ]
  br label %5434

5434:                                             ; preds = %5431, %5434
  %5435 = phi i64 [ %5440, %5434 ], [ %5432, %5431 ]
  %5436 = phi i32 [ %5439, %5434 ], [ %5433, %5431 ]
  %5437 = getelementptr inbounds i32, ptr %9, i64 %5435
  %5438 = load i32, ptr %5437, align 4, !tbaa !6
  %5439 = mul nsw i32 %5438, %5436
  %5440 = add nsw i64 %5435, -1
  %5441 = trunc i64 %5435 to i32
  %5442 = icmp sgt i32 %5441, 0
  br i1 %5442, label %5434, label %5443, !llvm.loop !1296

5443:                                             ; preds = %5434, %5425
  %5444 = phi i32 [ %5429, %5425 ], [ %5439, %5434 ]
  %5445 = and i64 %5394, 4294967295
  %5446 = getelementptr inbounds i32, ptr %6, i64 %5445
  %5447 = load i32, ptr %5446, align 4, !tbaa !6
  %5448 = mul nsw i32 %5447, %5444
  %5449 = add nsw i32 %5448, %5388
  %5450 = icmp sgt i64 %5386, 2
  %5451 = add nsw i64 %5387, -1
  %5452 = add i32 %5385, 1
  br i1 %5450, label %5384, label %5453, !llvm.loop !1297

5453:                                             ; preds = %5443, %5379
  %5454 = phi i32 [ %5383, %5379 ], [ %5449, %5443 ]
  %5455 = sext i32 %5454 to i64
  %5456 = getelementptr inbounds float, ptr %5038, i64 %5455
  %5457 = load float, ptr %5456, align 4, !tbaa !163
  %5458 = fpext float %5457 to double
  %5459 = fcmp fast olt float %5457, 0.000000e+00
  %5460 = fneg fast double %5458
  %5461 = select i1 %5459, double %5460, double %5458
  %5462 = fmul fast double %5458, %5458
  %5463 = fmul fast double %5462, %5461
  %5464 = fadd fast double %5463, %5380
  %5465 = fadd fast double %5382, 1.000000e+00
  %5466 = add nuw nsw i32 %5381, 1
  br i1 %5373, label %5467, label %5514

5467:                                             ; preds = %5453
  %5468 = load i32, ptr %4, align 4, !tbaa !6
  %5469 = load i32, ptr %12, align 4, !tbaa !6
  %5470 = add nsw i32 %5469, -1
  %5471 = icmp slt i32 %5468, %5470
  br i1 %5471, label %5491, label %5472

5472:                                             ; preds = %5467
  %5473 = icmp eq i32 %5468, %5470
  br i1 %5473, label %5474, label %5507

5474:                                             ; preds = %5472
  store i32 0, ptr %4, align 4, !tbaa !6
  %5475 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5475, ptr %6, align 4, !tbaa !6
  br i1 %5378, label %5514, label %5476

5476:                                             ; preds = %5474, %5501
  %5477 = phi i64 [ %5505, %5501 ], [ 1, %5474 ]
  %5478 = getelementptr inbounds i32, ptr %4, i64 %5477
  %5479 = load i32, ptr %5478, align 4, !tbaa !6
  %5480 = getelementptr inbounds i32, ptr %12, i64 %5477
  %5481 = load i32, ptr %5480, align 4, !tbaa !6
  %5482 = add nsw i32 %5481, -1
  %5483 = icmp slt i32 %5479, %5482
  br i1 %5483, label %5484, label %5499

5484:                                             ; preds = %5476
  br i1 %5471, label %5491, label %5485

5485:                                             ; preds = %5484
  %5486 = getelementptr inbounds i32, ptr %7, i64 %5477
  %5487 = load i32, ptr %5486, align 4, !tbaa !6
  %5488 = getelementptr inbounds i32, ptr %6, i64 %5477
  %5489 = load i32, ptr %5488, align 4, !tbaa !6
  %5490 = add nsw i32 %5489, %5487
  store i32 %5490, ptr %5488, align 4, !tbaa !6
  br label %5509

5491:                                             ; preds = %5467, %5484
  %5492 = phi i32 [ %5479, %5484 ], [ %5468, %5467 ]
  %5493 = phi ptr [ %5478, %5484 ], [ %4, %5467 ]
  %5494 = phi i64 [ %5477, %5484 ], [ 0, %5467 ]
  %5495 = add nsw i32 %5492, 1
  store i32 %5495, ptr %5493, align 4, !tbaa !6
  %5496 = getelementptr inbounds i32, ptr %7, i64 %5494
  %5497 = load i32, ptr %5496, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %6, i64 %5494
  br label %5509

5499:                                             ; preds = %5476
  %5500 = icmp eq i32 %5479, %5482
  br i1 %5500, label %5501, label %5507

5501:                                             ; preds = %5499
  store i32 0, ptr %5478, align 4, !tbaa !6
  %5502 = getelementptr inbounds i32, ptr %8, i64 %5477
  %5503 = load i32, ptr %5502, align 4, !tbaa !6
  %5504 = getelementptr inbounds i32, ptr %6, i64 %5477
  store i32 %5503, ptr %5504, align 4, !tbaa !6
  %5505 = add nuw nsw i64 %5477, 1
  %5506 = icmp eq i64 %5505, %5376
  br i1 %5506, label %5514, label %5476, !llvm.loop !1298

5507:                                             ; preds = %5472, %5499
  store double %5464, ptr %5040, align 8, !tbaa !19
  %5508 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

5509:                                             ; preds = %5485, %5491
  %5510 = phi ptr [ %5498, %5491 ], [ %5478, %5485 ]
  %5511 = phi i32 [ %5497, %5491 ], [ 1, %5485 ]
  %5512 = load i32, ptr %5510, align 4, !tbaa !6
  %5513 = add nsw i32 %5512, %5511
  store i32 %5513, ptr %5510, align 4, !tbaa !6
  br label %5514

5514:                                             ; preds = %5501, %5509, %5474, %5453
  %5515 = icmp eq i32 %5466, %5
  br i1 %5515, label %5665, label %5379, !llvm.loop !1299

5516:                                             ; preds = %5362, %5656
  %5517 = phi double [ 0.000000e+00, %5362 ], [ %5604, %5656 ]
  %5518 = phi i32 [ 0, %5362 ], [ %5605, %5656 ]
  %5519 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5363, label %5520, label %5589

5520:                                             ; preds = %5516, %5579
  %5521 = phi i32 [ %5588, %5579 ], [ 0, %5516 ]
  %5522 = phi i64 [ %5530, %5579 ], [ %5367, %5516 ]
  %5523 = phi i64 [ %5587, %5579 ], [ %5366, %5516 ]
  %5524 = phi i32 [ %5585, %5579 ], [ %5519, %5516 ]
  %5525 = sub i32 %5365, %5521
  %5526 = tail call i32 @llvm.smin.i32(i32 %5525, i32 0)
  %5527 = sub i32 %5525, %5526
  %5528 = zext i32 %5527 to i64
  %5529 = add nuw nsw i64 %5528, 1
  %5530 = add nsw i64 %5522, -1
  %5531 = icmp ult i32 %5527, 31
  br i1 %5531, label %5567, label %5532

5532:                                             ; preds = %5520
  %5533 = and i64 %5529, 8589934560
  %5534 = sub i64 %5523, %5533
  br label %5535

5535:                                             ; preds = %5535, %5532
  %5536 = phi i64 [ 0, %5532 ], [ %5559, %5535 ]
  %5537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5532 ], [ %5555, %5535 ]
  %5538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5532 ], [ %5556, %5535 ]
  %5539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5532 ], [ %5557, %5535 ]
  %5540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5532 ], [ %5558, %5535 ]
  %5541 = sub i64 %5523, %5536
  %5542 = getelementptr inbounds i32, ptr %11, i64 %5541
  %5543 = getelementptr inbounds i32, ptr %5542, i64 -7
  %5544 = load <8 x i32>, ptr %5543, align 4, !tbaa !6
  %5545 = shufflevector <8 x i32> %5544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5546 = getelementptr inbounds i32, ptr %5542, i64 -15
  %5547 = load <8 x i32>, ptr %5546, align 4, !tbaa !6
  %5548 = shufflevector <8 x i32> %5547, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5549 = getelementptr inbounds i32, ptr %5542, i64 -23
  %5550 = load <8 x i32>, ptr %5549, align 4, !tbaa !6
  %5551 = shufflevector <8 x i32> %5550, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5552 = getelementptr inbounds i32, ptr %5542, i64 -31
  %5553 = load <8 x i32>, ptr %5552, align 4, !tbaa !6
  %5554 = shufflevector <8 x i32> %5553, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5555 = mul <8 x i32> %5545, %5537
  %5556 = mul <8 x i32> %5548, %5538
  %5557 = mul <8 x i32> %5551, %5539
  %5558 = mul <8 x i32> %5554, %5540
  %5559 = add nuw i64 %5536, 32
  %5560 = icmp eq i64 %5559, %5533
  br i1 %5560, label %5561, label %5535, !llvm.loop !1300

5561:                                             ; preds = %5535
  %5562 = mul <8 x i32> %5556, %5555
  %5563 = mul <8 x i32> %5557, %5562
  %5564 = mul <8 x i32> %5558, %5563
  %5565 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5564)
  %5566 = icmp eq i64 %5529, %5533
  br i1 %5566, label %5579, label %5567

5567:                                             ; preds = %5520, %5561
  %5568 = phi i64 [ %5523, %5520 ], [ %5534, %5561 ]
  %5569 = phi i32 [ 1, %5520 ], [ %5565, %5561 ]
  br label %5570

5570:                                             ; preds = %5567, %5570
  %5571 = phi i64 [ %5576, %5570 ], [ %5568, %5567 ]
  %5572 = phi i32 [ %5575, %5570 ], [ %5569, %5567 ]
  %5573 = getelementptr inbounds i32, ptr %11, i64 %5571
  %5574 = load i32, ptr %5573, align 4, !tbaa !6
  %5575 = mul nsw i32 %5574, %5572
  %5576 = add nsw i64 %5571, -1
  %5577 = trunc i64 %5571 to i32
  %5578 = icmp sgt i32 %5577, 0
  br i1 %5578, label %5570, label %5579, !llvm.loop !1301

5579:                                             ; preds = %5570, %5561
  %5580 = phi i32 [ %5565, %5561 ], [ %5575, %5570 ]
  %5581 = and i64 %5530, 4294967295
  %5582 = getelementptr inbounds i32, ptr %6, i64 %5581
  %5583 = load i32, ptr %5582, align 4, !tbaa !6
  %5584 = mul nsw i32 %5583, %5580
  %5585 = add nsw i32 %5584, %5524
  %5586 = icmp sgt i64 %5522, 2
  %5587 = add nsw i64 %5523, -1
  %5588 = add i32 %5521, 1
  br i1 %5586, label %5520, label %5589, !llvm.loop !1302

5589:                                             ; preds = %5579, %5516
  %5590 = phi i32 [ %5519, %5516 ], [ %5585, %5579 ]
  %5591 = icmp slt i32 %5590, %5
  br i1 %5591, label %5594, label %5592

5592:                                             ; preds = %5589
  %5593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5671

5594:                                             ; preds = %5589
  %5595 = sext i32 %5590 to i64
  %5596 = getelementptr inbounds float, ptr %5038, i64 %5595
  %5597 = load float, ptr %5596, align 4, !tbaa !163
  %5598 = fpext float %5597 to double
  %5599 = fcmp fast olt float %5597, 0.000000e+00
  %5600 = fneg fast double %5598
  %5601 = select i1 %5599, double %5600, double %5598
  %5602 = fmul fast double %5598, %5598
  %5603 = fmul fast double %5602, %5601
  %5604 = fadd fast double %5603, %5517
  store double %5604, ptr %5040, align 8, !tbaa !19
  %5605 = add nuw nsw i32 %5518, 1
  br i1 %5364, label %5606, label %5656

5606:                                             ; preds = %5594
  %5607 = load i32, ptr %4, align 4, !tbaa !6
  %5608 = load i32, ptr %12, align 4, !tbaa !6
  %5609 = add nsw i32 %5608, -1
  %5610 = icmp slt i32 %5607, %5609
  br i1 %5610, label %5633, label %5611

5611:                                             ; preds = %5606
  %5612 = icmp eq i32 %5607, %5609
  br i1 %5612, label %5613, label %5649

5613:                                             ; preds = %5611
  store i32 0, ptr %4, align 4, !tbaa !6
  %5614 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5614, ptr %6, align 4, !tbaa !6
  br i1 %5369, label %5656, label %5615

5615:                                             ; preds = %5613, %5643
  %5616 = phi i64 [ %5647, %5643 ], [ 1, %5613 ]
  %5617 = getelementptr inbounds i32, ptr %4, i64 %5616
  %5618 = load i32, ptr %5617, align 4, !tbaa !6
  %5619 = getelementptr inbounds i32, ptr %12, i64 %5616
  %5620 = load i32, ptr %5619, align 4, !tbaa !6
  %5621 = add nsw i32 %5620, -1
  %5622 = icmp slt i32 %5618, %5621
  br i1 %5622, label %5623, label %5641

5623:                                             ; preds = %5615
  br i1 %5610, label %5633, label %5624

5624:                                             ; preds = %5623
  %5625 = shl i64 %5616, 32
  %5626 = add i64 %5625, -4294967296
  %5627 = ashr exact i64 %5626, 32
  %5628 = getelementptr inbounds i32, ptr %7, i64 %5627
  %5629 = load i32, ptr %5628, align 4, !tbaa !6
  %5630 = getelementptr inbounds i32, ptr %6, i64 %5616
  %5631 = load i32, ptr %5630, align 4, !tbaa !6
  %5632 = add nsw i32 %5631, %5629
  store i32 %5632, ptr %5630, align 4, !tbaa !6
  br label %5651

5633:                                             ; preds = %5606, %5623
  %5634 = phi i32 [ %5618, %5623 ], [ %5607, %5606 ]
  %5635 = phi ptr [ %5617, %5623 ], [ %4, %5606 ]
  %5636 = phi i64 [ %5616, %5623 ], [ 0, %5606 ]
  %5637 = add nsw i32 %5634, 1
  store i32 %5637, ptr %5635, align 4, !tbaa !6
  %5638 = getelementptr inbounds i32, ptr %7, i64 %5636
  %5639 = load i32, ptr %5638, align 4, !tbaa !6
  %5640 = getelementptr inbounds i32, ptr %6, i64 %5636
  br label %5651

5641:                                             ; preds = %5615
  %5642 = icmp eq i32 %5618, %5621
  br i1 %5642, label %5643, label %5649

5643:                                             ; preds = %5641
  store i32 0, ptr %5617, align 4, !tbaa !6
  %5644 = getelementptr inbounds i32, ptr %8, i64 %5616
  %5645 = load i32, ptr %5644, align 4, !tbaa !6
  %5646 = getelementptr inbounds i32, ptr %6, i64 %5616
  store i32 %5645, ptr %5646, align 4, !tbaa !6
  %5647 = add nuw nsw i64 %5616, 1
  %5648 = icmp eq i64 %5647, %5367
  br i1 %5648, label %5656, label %5615, !llvm.loop !1303

5649:                                             ; preds = %5611, %5641
  %5650 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5671

5651:                                             ; preds = %5624, %5633
  %5652 = phi ptr [ %5640, %5633 ], [ %5617, %5624 ]
  %5653 = phi i32 [ %5639, %5633 ], [ 1, %5624 ]
  %5654 = load i32, ptr %5652, align 4, !tbaa !6
  %5655 = add nsw i32 %5654, %5653
  store i32 %5655, ptr %5652, align 4, !tbaa !6
  br label %5656

5656:                                             ; preds = %5643, %5651, %5613, %5594
  %5657 = icmp eq i32 %5605, %5
  br i1 %5657, label %5666, label %5516, !llvm.loop !1304

5658:                                             ; preds = %5050
  %5659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5666

5660:                                             ; preds = %2076
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  br label %5666

5661:                                             ; preds = %2381
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  br label %5666

5662:                                             ; preds = %3336
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  br label %5666

5663:                                             ; preds = %3641
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  br label %5666

5664:                                             ; preds = %4265
  store double %4215, ptr %3791, align 8, !tbaa !19
  br label %5666

5665:                                             ; preds = %5514
  store double %5464, ptr %5040, align 8, !tbaa !19
  br label %5666

5666:                                             ; preds = %5656, %5354, %5212, %5032, %4891, %4732, %4588, %4407, %4105, %3963, %3783, %3481, %3153, %3011, %2851, %2706, %2523, %2221, %1893, %1751, %1591, %1446, %1263, %1121, %961, %816, %633, %494, %337, %198, %5361, %5370, %5665, %5056, %5065, %4739, %4748, %4430, %4439, %4112, %4121, %5664, %3807, %3816, %3488, %3497, %5663, %3177, %3186, %5662, %2858, %2867, %2547, %2556, %2228, %2237, %5661, %1917, %1926, %5660, %1598, %1607, %1287, %1296, %968, %977, %657, %666, %344, %353, %39, %48, %5042, %5658, %4417, %5034, %3793, %4409, %3163, %3785, %2533, %3155, %1903, %2525, %1273, %1895, %643, %1265, %28, %635, %18
  %5667 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1265 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1895 ], [ 0.000000e+00, %1273 ], [ 0.000000e+00, %2525 ], [ 0.000000e+00, %1903 ], [ 0.000000e+00, %3155 ], [ 0.000000e+00, %2533 ], [ 0.000000e+00, %3785 ], [ 0.000000e+00, %3163 ], [ 0.000000e+00, %4409 ], [ 0.000000e+00, %3793 ], [ 0.000000e+00, %5034 ], [ 0.000000e+00, %4417 ], [ 0.000000e+00, %5658 ], [ 0.000000e+00, %5042 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %666 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %977 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %1296 ], [ 0.000000e+00, %1287 ], [ 0.000000e+00, %1607 ], [ 0.000000e+00, %1598 ], [ %2027, %5660 ], [ 0.000000e+00, %1926 ], [ 0.000000e+00, %1917 ], [ %2332, %5661 ], [ 0.000000e+00, %2237 ], [ 0.000000e+00, %2228 ], [ 0.000000e+00, %2556 ], [ 0.000000e+00, %2547 ], [ 0.000000e+00, %2867 ], [ 0.000000e+00, %2858 ], [ %3287, %5662 ], [ 0.000000e+00, %3186 ], [ 0.000000e+00, %3177 ], [ %3592, %5663 ], [ 0.000000e+00, %3497 ], [ 0.000000e+00, %3488 ], [ 0.000000e+00, %3816 ], [ 0.000000e+00, %3807 ], [ %4216, %5664 ], [ 0.000000e+00, %4121 ], [ 0.000000e+00, %4112 ], [ 0.000000e+00, %4439 ], [ 0.000000e+00, %4430 ], [ 0.000000e+00, %4748 ], [ 0.000000e+00, %4739 ], [ 0.000000e+00, %5065 ], [ 0.000000e+00, %5056 ], [ %5465, %5665 ], [ 0.000000e+00, %5370 ], [ 0.000000e+00, %5361 ], [ %149, %198 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %767, %816 ], [ 0.000000e+00, %961 ], [ %1072, %1121 ], [ 0.000000e+00, %1263 ], [ %1397, %1446 ], [ 0.000000e+00, %1591 ], [ %1702, %1751 ], [ 0.000000e+00, %1893 ], [ 0.000000e+00, %2221 ], [ 0.000000e+00, %2523 ], [ %2657, %2706 ], [ 0.000000e+00, %2851 ], [ %2962, %3011 ], [ 0.000000e+00, %3153 ], [ 0.000000e+00, %3481 ], [ 0.000000e+00, %3783 ], [ %3914, %3963 ], [ 0.000000e+00, %4105 ], [ 0.000000e+00, %4407 ], [ %4539, %4588 ], [ 0.000000e+00, %4732 ], [ %4842, %4891 ], [ 0.000000e+00, %5032 ], [ %5163, %5212 ], [ 0.000000e+00, %5354 ], [ 0.000000e+00, %5656 ]
  %5668 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1265 ], [ 1, %643 ], [ 1, %1895 ], [ 1, %1273 ], [ 1, %2525 ], [ 1, %1903 ], [ 1, %3155 ], [ 1, %2533 ], [ 1, %3785 ], [ 1, %3163 ], [ 1, %4409 ], [ 1, %3793 ], [ 1, %5034 ], [ 1, %4417 ], [ 1, %5658 ], [ 1, %5042 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %666 ], [ 1, %657 ], [ 1, %977 ], [ 1, %968 ], [ 1, %1296 ], [ 1, %1287 ], [ 1, %1607 ], [ 1, %1598 ], [ %1933, %5660 ], [ 1, %1926 ], [ 1, %1917 ], [ %2244, %5661 ], [ 1, %2237 ], [ 1, %2228 ], [ 1, %2556 ], [ 1, %2547 ], [ 1, %2867 ], [ 1, %2858 ], [ %3193, %5662 ], [ 1, %3186 ], [ 1, %3177 ], [ %3504, %5663 ], [ 1, %3497 ], [ 1, %3488 ], [ 1, %3816 ], [ 1, %3807 ], [ %4128, %5664 ], [ 1, %4121 ], [ 1, %4112 ], [ 1, %4439 ], [ 1, %4430 ], [ 1, %4748 ], [ 1, %4739 ], [ 1, %5065 ], [ 1, %5056 ], [ %5377, %5665 ], [ 1, %5370 ], [ 1, %5361 ], [ %55, %198 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %673, %816 ], [ %664, %961 ], [ %984, %1121 ], [ %975, %1263 ], [ %1303, %1446 ], [ %1294, %1591 ], [ %1614, %1751 ], [ %1605, %1893 ], [ %1924, %2221 ], [ %2235, %2523 ], [ %2563, %2706 ], [ %2554, %2851 ], [ %2874, %3011 ], [ %2865, %3153 ], [ %3184, %3481 ], [ %3495, %3783 ], [ %3823, %3963 ], [ %3814, %4105 ], [ %4119, %4407 ], [ %4446, %4588 ], [ %4437, %4732 ], [ %4755, %4891 ], [ %4746, %5032 ], [ %5072, %5212 ], [ %5063, %5354 ], [ %5368, %5656 ]
  %5669 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5668, ptr noundef nonnull @.str.5) #3
  %5670 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5667, ptr noundef nonnull @.str.6) #3
  br label %5671

5671:                                             ; preds = %5205, %5290, %5347, %5507, %5592, %5649, %4581, %4666, %4725, %4884, %4969, %5025, %3956, %4041, %4098, %4258, %4343, %4400, %3329, %3414, %3474, %3634, %3719, %3776, %2699, %2783, %2844, %3004, %3088, %3146, %2069, %2154, %2214, %2374, %2459, %2516, %1439, %1523, %1584, %1744, %1828, %1886, %809, %893, %954, %1114, %1198, %1256, %191, %275, %330, %487, %571, %626, %5666
  %5672 = phi i32 [ 0, %5666 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1256 ], [ -1, %1198 ], [ -1, %1114 ], [ -1, %954 ], [ -1, %893 ], [ -1, %809 ], [ -1, %1886 ], [ -1, %1828 ], [ -1, %1744 ], [ -1, %1584 ], [ -1, %1523 ], [ -1, %1439 ], [ -1, %2516 ], [ -1, %2459 ], [ -1, %2374 ], [ -1, %2214 ], [ -1, %2154 ], [ -1, %2069 ], [ -1, %3146 ], [ -1, %3088 ], [ -1, %3004 ], [ -1, %2844 ], [ -1, %2783 ], [ -1, %2699 ], [ -1, %3776 ], [ -1, %3719 ], [ -1, %3634 ], [ -1, %3474 ], [ -1, %3414 ], [ -1, %3329 ], [ -1, %4400 ], [ -1, %4343 ], [ -1, %4258 ], [ -1, %4098 ], [ -1, %4041 ], [ -1, %3956 ], [ -1, %5025 ], [ -1, %4969 ], [ -1, %4884 ], [ -1, %4725 ], [ -1, %4666 ], [ -1, %4581 ], [ -1, %5649 ], [ -1, %5592 ], [ -1, %5507 ], [ -1, %5347 ], [ -1, %5290 ], [ -1, %5205 ]
  ret i32 %5672
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm3_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5661 [
    i32 101, label %22
    i32 102, label %637
    i32 103, label %1267
    i32 104, label %1897
    i32 105, label %2527
    i32 106, label %3157
    i32 107, label %3787
    i32 108, label %4406
    i32 109, label %5036
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  store i8 0, ptr %26, align 1, !tbaa !12
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !19
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  %32 = mul i8 %31, %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5661

33:                                               ; preds = %22
  switch i32 %1, label %635 [
    i32 1, label %34
    i32 0, label %339
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5661

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %200

48:                                               ; preds = %34
  br i1 %38, label %49, label %5661

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %198
  %58 = phi i32 [ 0, %49 ], [ %150, %198 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %149, %198 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !1305

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !1306

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !1307

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds double, ptr %24, i64 %132
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = fptoui double %136 to i8
  %138 = load i8, ptr %26, align 1, !tbaa !12
  %139 = uitofp i8 %138 to double
  %140 = uitofp i8 %137 to double
  %141 = fmul fast double %134, %140
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = fneg fast double %141
  %144 = select nnan ninf i1 %142, double %143, double %141
  %145 = fmul fast double %141, %141
  %146 = fmul fast double %145, %144
  %147 = fadd fast double %146, %139
  %148 = fptoui double %147 to i8
  store i8 %148, ptr %26, align 1, !tbaa !12
  %149 = fadd fast double %134, %59
  %150 = add nuw nsw i32 %58, 1
  br i1 %51, label %151, label %198

151:                                              ; preds = %130
  %152 = load i32, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %12, align 4, !tbaa !6
  %154 = add nsw i32 %153, -1
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %175, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %152, %154
  br i1 %157, label %158, label %191

158:                                              ; preds = %156
  store i32 0, ptr %4, align 4, !tbaa !6
  %159 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %159, ptr %6, align 4, !tbaa !6
  br i1 %56, label %198, label %160

160:                                              ; preds = %158, %185
  %161 = phi i64 [ %189, %185 ], [ 1, %158 ]
  %162 = getelementptr inbounds i32, ptr %4, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !6
  %164 = getelementptr inbounds i32, ptr %12, i64 %161
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = add nsw i32 %165, -1
  %167 = icmp slt i32 %163, %166
  br i1 %167, label %168, label %183

168:                                              ; preds = %160
  br i1 %155, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds i32, ptr %7, i64 %161
  %171 = load i32, ptr %170, align 4, !tbaa !6
  %172 = getelementptr inbounds i32, ptr %6, i64 %161
  %173 = load i32, ptr %172, align 4, !tbaa !6
  %174 = add nsw i32 %173, %171
  store i32 %174, ptr %172, align 4, !tbaa !6
  br label %193

175:                                              ; preds = %151, %168
  %176 = phi i32 [ %163, %168 ], [ %152, %151 ]
  %177 = phi ptr [ %162, %168 ], [ %4, %151 ]
  %178 = phi i64 [ %161, %168 ], [ 0, %151 ]
  %179 = add nsw i32 %176, 1
  store i32 %179, ptr %177, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %7, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %178
  br label %193

183:                                              ; preds = %160
  %184 = icmp eq i32 %163, %166
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  store i32 0, ptr %162, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %8, i64 %161
  %187 = load i32, ptr %186, align 4, !tbaa !6
  %188 = getelementptr inbounds i32, ptr %6, i64 %161
  store i32 %187, ptr %188, align 4, !tbaa !6
  %189 = add nuw nsw i64 %161, 1
  %190 = icmp eq i64 %189, %54
  br i1 %190, label %198, label %160, !llvm.loop !1308

191:                                              ; preds = %156, %183
  %192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

193:                                              ; preds = %169, %175
  %194 = phi ptr [ %182, %175 ], [ %162, %169 ]
  %195 = phi i32 [ %181, %175 ], [ 1, %169 ]
  %196 = load i32, ptr %194, align 4, !tbaa !6
  %197 = add nsw i32 %196, %195
  store i32 %197, ptr %194, align 4, !tbaa !6
  br label %198

198:                                              ; preds = %185, %193, %158, %130
  %199 = icmp eq i32 %150, %5
  br i1 %199, label %5661, label %57, !llvm.loop !1309

200:                                              ; preds = %40, %337
  %201 = phi i32 [ 0, %40 ], [ %286, %337 ]
  %202 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %203, label %272

203:                                              ; preds = %200, %262
  %204 = phi i32 [ %271, %262 ], [ 0, %200 ]
  %205 = phi i64 [ %213, %262 ], [ %45, %200 ]
  %206 = phi i64 [ %270, %262 ], [ %44, %200 ]
  %207 = phi i32 [ %268, %262 ], [ %202, %200 ]
  %208 = sub i32 %43, %204
  %209 = tail call i32 @llvm.smin.i32(i32 %208, i32 0)
  %210 = sub i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = add nuw nsw i64 %211, 1
  %213 = add nsw i64 %205, -1
  %214 = icmp ult i32 %210, 31
  br i1 %214, label %250, label %215

215:                                              ; preds = %203
  %216 = and i64 %212, 8589934560
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %218, %215
  %219 = phi i64 [ 0, %215 ], [ %242, %218 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %238, %218 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %239, %218 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %240, %218 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %215 ], [ %241, %218 ]
  %224 = sub i64 %206, %219
  %225 = getelementptr inbounds i32, ptr %11, i64 %224
  %226 = getelementptr inbounds i32, ptr %225, i64 -7
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %225, i64 -15
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %225, i64 -23
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, ptr %225, i64 -31
  %236 = load <8 x i32>, ptr %235, align 4, !tbaa !6
  %237 = shufflevector <8 x i32> %236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %238 = mul <8 x i32> %228, %220
  %239 = mul <8 x i32> %231, %221
  %240 = mul <8 x i32> %234, %222
  %241 = mul <8 x i32> %237, %223
  %242 = add nuw i64 %219, 32
  %243 = icmp eq i64 %242, %216
  br i1 %243, label %244, label %218, !llvm.loop !1310

244:                                              ; preds = %218
  %245 = mul <8 x i32> %239, %238
  %246 = mul <8 x i32> %240, %245
  %247 = mul <8 x i32> %241, %246
  %248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %247)
  %249 = icmp eq i64 %212, %216
  br i1 %249, label %262, label %250

250:                                              ; preds = %203, %244
  %251 = phi i64 [ %206, %203 ], [ %217, %244 ]
  %252 = phi i32 [ 1, %203 ], [ %248, %244 ]
  br label %253

253:                                              ; preds = %250, %253
  %254 = phi i64 [ %259, %253 ], [ %251, %250 ]
  %255 = phi i32 [ %258, %253 ], [ %252, %250 ]
  %256 = getelementptr inbounds i32, ptr %11, i64 %254
  %257 = load i32, ptr %256, align 4, !tbaa !6
  %258 = mul nsw i32 %257, %255
  %259 = add nsw i64 %254, -1
  %260 = trunc i64 %254 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %253, label %262, !llvm.loop !1311

262:                                              ; preds = %253, %244
  %263 = phi i32 [ %248, %244 ], [ %258, %253 ]
  %264 = and i64 %213, 4294967295
  %265 = getelementptr inbounds i32, ptr %6, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !6
  %267 = mul nsw i32 %266, %263
  %268 = add nsw i32 %267, %207
  %269 = icmp sgt i64 %205, 2
  %270 = add nsw i64 %206, -1
  %271 = add i32 %204, 1
  br i1 %269, label %203, label %272, !llvm.loop !1312

272:                                              ; preds = %262, %200
  %273 = phi i32 [ %202, %200 ], [ %268, %262 ]
  %274 = icmp slt i32 %273, %5
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

277:                                              ; preds = %272
  %278 = load i8, ptr %26, align 1, !tbaa !12
  %279 = sext i32 %273 to i64
  %280 = getelementptr inbounds double, ptr %24, i64 %279
  %281 = load double, ptr %280, align 8, !tbaa !19
  %282 = fptoui double %281 to i8
  %283 = mul i8 %282, %282
  %284 = mul i8 %283, %282
  %285 = add i8 %284, %278
  store i8 %285, ptr %26, align 1, !tbaa !12
  %286 = add nuw nsw i32 %201, 1
  br i1 %42, label %287, label %337

287:                                              ; preds = %277
  %288 = load i32, ptr %4, align 4, !tbaa !6
  %289 = load i32, ptr %12, align 4, !tbaa !6
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %288, %290
  br i1 %291, label %314, label %292

292:                                              ; preds = %287
  %293 = icmp eq i32 %288, %290
  br i1 %293, label %294, label %330

294:                                              ; preds = %292
  store i32 0, ptr %4, align 4, !tbaa !6
  %295 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %295, ptr %6, align 4, !tbaa !6
  br i1 %47, label %337, label %296

296:                                              ; preds = %294, %324
  %297 = phi i64 [ %328, %324 ], [ 1, %294 ]
  %298 = getelementptr inbounds i32, ptr %4, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !6
  %300 = getelementptr inbounds i32, ptr %12, i64 %297
  %301 = load i32, ptr %300, align 4, !tbaa !6
  %302 = add nsw i32 %301, -1
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %304, label %322

304:                                              ; preds = %296
  br i1 %291, label %314, label %305

305:                                              ; preds = %304
  %306 = shl i64 %297, 32
  %307 = add i64 %306, -4294967296
  %308 = ashr exact i64 %307, 32
  %309 = getelementptr inbounds i32, ptr %7, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !6
  %311 = getelementptr inbounds i32, ptr %6, i64 %297
  %312 = load i32, ptr %311, align 4, !tbaa !6
  %313 = add nsw i32 %312, %310
  store i32 %313, ptr %311, align 4, !tbaa !6
  br label %332

314:                                              ; preds = %287, %304
  %315 = phi i32 [ %299, %304 ], [ %288, %287 ]
  %316 = phi ptr [ %298, %304 ], [ %4, %287 ]
  %317 = phi i64 [ %297, %304 ], [ 0, %287 ]
  %318 = add nsw i32 %315, 1
  store i32 %318, ptr %316, align 4, !tbaa !6
  %319 = getelementptr inbounds i32, ptr %7, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !6
  %321 = getelementptr inbounds i32, ptr %6, i64 %317
  br label %332

322:                                              ; preds = %296
  %323 = icmp eq i32 %299, %302
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  store i32 0, ptr %298, align 4, !tbaa !6
  %325 = getelementptr inbounds i32, ptr %8, i64 %297
  %326 = load i32, ptr %325, align 4, !tbaa !6
  %327 = getelementptr inbounds i32, ptr %6, i64 %297
  store i32 %326, ptr %327, align 4, !tbaa !6
  %328 = add nuw nsw i64 %297, 1
  %329 = icmp eq i64 %328, %45
  br i1 %329, label %337, label %296, !llvm.loop !1313

330:                                              ; preds = %292, %322
  %331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

332:                                              ; preds = %305, %314
  %333 = phi ptr [ %321, %314 ], [ %298, %305 ]
  %334 = phi i32 [ %320, %314 ], [ 1, %305 ]
  %335 = load i32, ptr %333, align 4, !tbaa !6
  %336 = add nsw i32 %335, %334
  store i32 %336, ptr %333, align 4, !tbaa !6
  br label %337

337:                                              ; preds = %324, %332, %294, %277
  %338 = icmp eq i32 %286, %5
  br i1 %338, label %5661, label %200, !llvm.loop !1314

339:                                              ; preds = %33
  %340 = getelementptr inbounds i32, ptr %3, i64 %19
  %341 = load i32, ptr %340, align 4, !tbaa !6
  %342 = icmp eq i32 %341, 0
  %343 = icmp sgt i32 %5, 0
  br i1 %342, label %353, label %344

344:                                              ; preds = %339
  br i1 %343, label %345, label %5661

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %496

353:                                              ; preds = %339
  br i1 %343, label %354, label %5661

354:                                              ; preds = %353
  %355 = icmp sgt i32 %13, 1
  %356 = icmp sgt i32 %13, 0
  %357 = add i32 %13, -2
  %358 = zext i32 %357 to i64
  %359 = zext i32 %13 to i64
  %360 = add nuw i32 %5, 1
  %361 = icmp eq i32 %13, 1
  br label %362

362:                                              ; preds = %354, %494
  %363 = phi i32 [ 0, %354 ], [ %446, %494 ]
  %364 = phi double [ 0.000000e+00, %354 ], [ %445, %494 ]
  %365 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %355, label %366, label %435

366:                                              ; preds = %362, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %362 ]
  %368 = phi i64 [ %376, %425 ], [ %359, %362 ]
  %369 = phi i64 [ %433, %425 ], [ %358, %362 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %362 ]
  %371 = sub i32 %357, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !1315

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !6
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !1316

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !6
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !1317

435:                                              ; preds = %425, %362
  %436 = phi i32 [ %365, %362 ], [ %431, %425 ]
  %437 = load i8, ptr %26, align 1, !tbaa !12
  %438 = sext i32 %436 to i64
  %439 = getelementptr inbounds double, ptr %24, i64 %438
  %440 = load double, ptr %439, align 8, !tbaa !19
  %441 = fptoui double %440 to i8
  %442 = mul i8 %441, %441
  %443 = mul i8 %442, %441
  %444 = add i8 %443, %437
  store i8 %444, ptr %26, align 1, !tbaa !12
  %445 = fadd fast double %364, 1.000000e+00
  %446 = add nuw nsw i32 %363, 1
  br i1 %356, label %447, label %494

447:                                              ; preds = %435
  %448 = load i32, ptr %4, align 4, !tbaa !6
  %449 = load i32, ptr %12, align 4, !tbaa !6
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %448, %450
  br i1 %451, label %471, label %452

452:                                              ; preds = %447
  %453 = icmp eq i32 %448, %450
  br i1 %453, label %454, label %487

454:                                              ; preds = %452
  store i32 0, ptr %4, align 4, !tbaa !6
  %455 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %455, ptr %6, align 4, !tbaa !6
  br i1 %361, label %494, label %456

456:                                              ; preds = %454, %481
  %457 = phi i64 [ %485, %481 ], [ 1, %454 ]
  %458 = getelementptr inbounds i32, ptr %4, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %12, i64 %457
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, -1
  %463 = icmp slt i32 %459, %462
  br i1 %463, label %464, label %479

464:                                              ; preds = %456
  br i1 %451, label %471, label %465

465:                                              ; preds = %464
  %466 = getelementptr inbounds i32, ptr %7, i64 %457
  %467 = load i32, ptr %466, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %6, i64 %457
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = add nsw i32 %469, %467
  store i32 %470, ptr %468, align 4, !tbaa !6
  br label %489

471:                                              ; preds = %447, %464
  %472 = phi i32 [ %459, %464 ], [ %448, %447 ]
  %473 = phi ptr [ %458, %464 ], [ %4, %447 ]
  %474 = phi i64 [ %457, %464 ], [ 0, %447 ]
  %475 = add nsw i32 %472, 1
  store i32 %475, ptr %473, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %7, i64 %474
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %474
  br label %489

479:                                              ; preds = %456
  %480 = icmp eq i32 %459, %462
  br i1 %480, label %481, label %487

481:                                              ; preds = %479
  store i32 0, ptr %458, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %8, i64 %457
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = getelementptr inbounds i32, ptr %6, i64 %457
  store i32 %483, ptr %484, align 4, !tbaa !6
  %485 = add nuw nsw i64 %457, 1
  %486 = icmp eq i64 %485, %359
  br i1 %486, label %494, label %456, !llvm.loop !1318

487:                                              ; preds = %452, %479
  %488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

489:                                              ; preds = %465, %471
  %490 = phi ptr [ %478, %471 ], [ %458, %465 ]
  %491 = phi i32 [ %477, %471 ], [ 1, %465 ]
  %492 = load i32, ptr %490, align 4, !tbaa !6
  %493 = add nsw i32 %492, %491
  store i32 %493, ptr %490, align 4, !tbaa !6
  br label %494

494:                                              ; preds = %481, %489, %454, %435
  %495 = icmp eq i32 %446, %5
  br i1 %495, label %5661, label %362, !llvm.loop !1319

496:                                              ; preds = %345, %633
  %497 = phi i32 [ 0, %345 ], [ %582, %633 ]
  %498 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %346, label %499, label %568

499:                                              ; preds = %496, %558
  %500 = phi i32 [ %567, %558 ], [ 0, %496 ]
  %501 = phi i64 [ %509, %558 ], [ %350, %496 ]
  %502 = phi i64 [ %566, %558 ], [ %349, %496 ]
  %503 = phi i32 [ %564, %558 ], [ %498, %496 ]
  %504 = sub i32 %348, %500
  %505 = tail call i32 @llvm.smin.i32(i32 %504, i32 0)
  %506 = sub i32 %504, %505
  %507 = zext i32 %506 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = add nsw i64 %501, -1
  %510 = icmp ult i32 %506, 31
  br i1 %510, label %546, label %511

511:                                              ; preds = %499
  %512 = and i64 %508, 8589934560
  %513 = sub i64 %502, %512
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i64 [ 0, %511 ], [ %538, %514 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %534, %514 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %535, %514 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %536, %514 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %511 ], [ %537, %514 ]
  %520 = sub i64 %502, %515
  %521 = getelementptr inbounds i32, ptr %11, i64 %520
  %522 = getelementptr inbounds i32, ptr %521, i64 -7
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %521, i64 -15
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %521, i64 -23
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %521, i64 -31
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !6
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = mul <8 x i32> %524, %516
  %535 = mul <8 x i32> %527, %517
  %536 = mul <8 x i32> %530, %518
  %537 = mul <8 x i32> %533, %519
  %538 = add nuw i64 %515, 32
  %539 = icmp eq i64 %538, %512
  br i1 %539, label %540, label %514, !llvm.loop !1320

540:                                              ; preds = %514
  %541 = mul <8 x i32> %535, %534
  %542 = mul <8 x i32> %536, %541
  %543 = mul <8 x i32> %537, %542
  %544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %543)
  %545 = icmp eq i64 %508, %512
  br i1 %545, label %558, label %546

546:                                              ; preds = %499, %540
  %547 = phi i64 [ %502, %499 ], [ %513, %540 ]
  %548 = phi i32 [ 1, %499 ], [ %544, %540 ]
  br label %549

549:                                              ; preds = %546, %549
  %550 = phi i64 [ %555, %549 ], [ %547, %546 ]
  %551 = phi i32 [ %554, %549 ], [ %548, %546 ]
  %552 = getelementptr inbounds i32, ptr %11, i64 %550
  %553 = load i32, ptr %552, align 4, !tbaa !6
  %554 = mul nsw i32 %553, %551
  %555 = add nsw i64 %550, -1
  %556 = trunc i64 %550 to i32
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %549, label %558, !llvm.loop !1321

558:                                              ; preds = %549, %540
  %559 = phi i32 [ %544, %540 ], [ %554, %549 ]
  %560 = and i64 %509, 4294967295
  %561 = getelementptr inbounds i32, ptr %6, i64 %560
  %562 = load i32, ptr %561, align 4, !tbaa !6
  %563 = mul nsw i32 %562, %559
  %564 = add nsw i32 %563, %503
  %565 = icmp sgt i64 %501, 2
  %566 = add nsw i64 %502, -1
  %567 = add i32 %500, 1
  br i1 %565, label %499, label %568, !llvm.loop !1322

568:                                              ; preds = %558, %496
  %569 = phi i32 [ %498, %496 ], [ %564, %558 ]
  %570 = icmp slt i32 %569, %5
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

573:                                              ; preds = %568
  %574 = load i8, ptr %26, align 1, !tbaa !12
  %575 = sext i32 %569 to i64
  %576 = getelementptr inbounds double, ptr %24, i64 %575
  %577 = load double, ptr %576, align 8, !tbaa !19
  %578 = fptoui double %577 to i8
  %579 = mul i8 %578, %578
  %580 = mul i8 %579, %578
  %581 = add i8 %580, %574
  store i8 %581, ptr %26, align 1, !tbaa !12
  %582 = add nuw nsw i32 %497, 1
  br i1 %347, label %583, label %633

583:                                              ; preds = %573
  %584 = load i32, ptr %4, align 4, !tbaa !6
  %585 = load i32, ptr %12, align 4, !tbaa !6
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %584, %586
  br i1 %587, label %610, label %588

588:                                              ; preds = %583
  %589 = icmp eq i32 %584, %586
  br i1 %589, label %590, label %626

590:                                              ; preds = %588
  store i32 0, ptr %4, align 4, !tbaa !6
  %591 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %591, ptr %6, align 4, !tbaa !6
  br i1 %352, label %633, label %592

592:                                              ; preds = %590, %620
  %593 = phi i64 [ %624, %620 ], [ 1, %590 ]
  %594 = getelementptr inbounds i32, ptr %4, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !6
  %596 = getelementptr inbounds i32, ptr %12, i64 %593
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = add nsw i32 %597, -1
  %599 = icmp slt i32 %595, %598
  br i1 %599, label %600, label %618

600:                                              ; preds = %592
  br i1 %587, label %610, label %601

601:                                              ; preds = %600
  %602 = shl i64 %593, 32
  %603 = add i64 %602, -4294967296
  %604 = ashr exact i64 %603, 32
  %605 = getelementptr inbounds i32, ptr %7, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !6
  %607 = getelementptr inbounds i32, ptr %6, i64 %593
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = add nsw i32 %608, %606
  store i32 %609, ptr %607, align 4, !tbaa !6
  br label %628

610:                                              ; preds = %583, %600
  %611 = phi i32 [ %595, %600 ], [ %584, %583 ]
  %612 = phi ptr [ %594, %600 ], [ %4, %583 ]
  %613 = phi i64 [ %593, %600 ], [ 0, %583 ]
  %614 = add nsw i32 %611, 1
  store i32 %614, ptr %612, align 4, !tbaa !6
  %615 = getelementptr inbounds i32, ptr %7, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !6
  %617 = getelementptr inbounds i32, ptr %6, i64 %613
  br label %628

618:                                              ; preds = %592
  %619 = icmp eq i32 %595, %598
  br i1 %619, label %620, label %626

620:                                              ; preds = %618
  store i32 0, ptr %594, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %8, i64 %593
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = getelementptr inbounds i32, ptr %6, i64 %593
  store i32 %622, ptr %623, align 4, !tbaa !6
  %624 = add nuw nsw i64 %593, 1
  %625 = icmp eq i64 %624, %350
  br i1 %625, label %633, label %592, !llvm.loop !1323

626:                                              ; preds = %588, %618
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

628:                                              ; preds = %601, %610
  %629 = phi ptr [ %617, %610 ], [ %594, %601 ]
  %630 = phi i32 [ %616, %610 ], [ 1, %601 ]
  %631 = load i32, ptr %629, align 4, !tbaa !6
  %632 = add nsw i32 %631, %630
  store i32 %632, ptr %629, align 4, !tbaa !6
  br label %633

633:                                              ; preds = %620, %628, %590, %573
  %634 = icmp eq i32 %582, %5
  br i1 %634, label %5661, label %496, !llvm.loop !1324

635:                                              ; preds = %33
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

637:                                              ; preds = %18
  %638 = getelementptr inbounds ptr, ptr %14, i64 %19
  %639 = load ptr, ptr %638, align 8, !tbaa !10
  %640 = getelementptr inbounds ptr, ptr %16, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !10
  store i32 0, ptr %641, align 4, !tbaa !6
  %642 = icmp eq i32 %13, 0
  br i1 %642, label %643, label %651

643:                                              ; preds = %637
  %644 = load double, ptr %639, align 8, !tbaa !19
  %645 = fptosi double %644 to i32
  %646 = icmp slt i32 %645, 0
  %647 = mul nsw i32 %645, %645
  %648 = sub nsw i32 0, %647
  %649 = select i1 %646, i32 %648, i32 %647
  %650 = mul i32 %649, %645
  store i32 %650, ptr %641, align 4, !tbaa !6
  br label %5661

651:                                              ; preds = %637
  switch i32 %1, label %1265 [
    i32 1, label %652
    i32 0, label %963
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !6
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %5661

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %818

666:                                              ; preds = %652
  br i1 %656, label %667, label %5661

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %816
  %676 = phi i32 [ 0, %667 ], [ %768, %816 ]
  %677 = phi double [ 0.000000e+00, %667 ], [ %767, %816 ]
  %678 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %668, label %679, label %748

679:                                              ; preds = %675, %738
  %680 = phi i32 [ %747, %738 ], [ 0, %675 ]
  %681 = phi i64 [ %689, %738 ], [ %672, %675 ]
  %682 = phi i64 [ %746, %738 ], [ %671, %675 ]
  %683 = phi i32 [ %744, %738 ], [ %678, %675 ]
  %684 = sub i32 %670, %680
  %685 = tail call i32 @llvm.smin.i32(i32 %684, i32 0)
  %686 = sub i32 %684, %685
  %687 = zext i32 %686 to i64
  %688 = add nuw nsw i64 %687, 1
  %689 = add nsw i64 %681, -1
  %690 = icmp ult i32 %686, 31
  br i1 %690, label %726, label %691

691:                                              ; preds = %679
  %692 = and i64 %688, 8589934560
  %693 = sub i64 %682, %692
  br label %694

694:                                              ; preds = %694, %691
  %695 = phi i64 [ 0, %691 ], [ %718, %694 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %714, %694 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %715, %694 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %716, %694 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %691 ], [ %717, %694 ]
  %700 = sub i64 %682, %695
  %701 = getelementptr inbounds i32, ptr %9, i64 %700
  %702 = getelementptr inbounds i32, ptr %701, i64 -7
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = getelementptr inbounds i32, ptr %701, i64 -15
  %706 = load <8 x i32>, ptr %705, align 4, !tbaa !6
  %707 = shufflevector <8 x i32> %706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %708 = getelementptr inbounds i32, ptr %701, i64 -23
  %709 = load <8 x i32>, ptr %708, align 4, !tbaa !6
  %710 = shufflevector <8 x i32> %709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %711 = getelementptr inbounds i32, ptr %701, i64 -31
  %712 = load <8 x i32>, ptr %711, align 4, !tbaa !6
  %713 = shufflevector <8 x i32> %712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %714 = mul <8 x i32> %704, %696
  %715 = mul <8 x i32> %707, %697
  %716 = mul <8 x i32> %710, %698
  %717 = mul <8 x i32> %713, %699
  %718 = add nuw i64 %695, 32
  %719 = icmp eq i64 %718, %692
  br i1 %719, label %720, label %694, !llvm.loop !1325

720:                                              ; preds = %694
  %721 = mul <8 x i32> %715, %714
  %722 = mul <8 x i32> %716, %721
  %723 = mul <8 x i32> %717, %722
  %724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %723)
  %725 = icmp eq i64 %688, %692
  br i1 %725, label %738, label %726

726:                                              ; preds = %679, %720
  %727 = phi i64 [ %682, %679 ], [ %693, %720 ]
  %728 = phi i32 [ 1, %679 ], [ %724, %720 ]
  br label %729

729:                                              ; preds = %726, %729
  %730 = phi i64 [ %735, %729 ], [ %727, %726 ]
  %731 = phi i32 [ %734, %729 ], [ %728, %726 ]
  %732 = getelementptr inbounds i32, ptr %9, i64 %730
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %731
  %735 = add nsw i64 %730, -1
  %736 = trunc i64 %730 to i32
  %737 = icmp sgt i32 %736, 0
  br i1 %737, label %729, label %738, !llvm.loop !1326

738:                                              ; preds = %729, %720
  %739 = phi i32 [ %724, %720 ], [ %734, %729 ]
  %740 = and i64 %689, 4294967295
  %741 = getelementptr inbounds i32, ptr %6, i64 %740
  %742 = load i32, ptr %741, align 4, !tbaa !6
  %743 = mul nsw i32 %742, %739
  %744 = add nsw i32 %743, %683
  %745 = icmp sgt i64 %681, 2
  %746 = add nsw i64 %682, -1
  %747 = add i32 %680, 1
  br i1 %745, label %679, label %748, !llvm.loop !1327

748:                                              ; preds = %738, %675
  %749 = phi i32 [ %678, %675 ], [ %744, %738 ]
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds double, ptr %2, i64 %750
  %752 = load double, ptr %751, align 8, !tbaa !19
  %753 = getelementptr inbounds double, ptr %639, i64 %750
  %754 = load double, ptr %753, align 8, !tbaa !19
  %755 = fptosi double %754 to i32
  %756 = load i32, ptr %641, align 4, !tbaa !6
  %757 = sitofp i32 %756 to double
  %758 = sitofp i32 %755 to double
  %759 = fmul fast double %752, %758
  %760 = fcmp fast olt double %759, 0.000000e+00
  %761 = fneg fast double %759
  %762 = select nnan ninf i1 %760, double %761, double %759
  %763 = fmul fast double %759, %759
  %764 = fmul fast double %763, %762
  %765 = fadd fast double %764, %757
  %766 = fptosi double %765 to i32
  store i32 %766, ptr %641, align 4, !tbaa !6
  %767 = fadd fast double %752, %677
  %768 = add nuw nsw i32 %676, 1
  br i1 %669, label %769, label %816

769:                                              ; preds = %748
  %770 = load i32, ptr %4, align 4, !tbaa !6
  %771 = load i32, ptr %12, align 4, !tbaa !6
  %772 = add nsw i32 %771, -1
  %773 = icmp slt i32 %770, %772
  br i1 %773, label %793, label %774

774:                                              ; preds = %769
  %775 = icmp eq i32 %770, %772
  br i1 %775, label %776, label %809

776:                                              ; preds = %774
  store i32 0, ptr %4, align 4, !tbaa !6
  %777 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %777, ptr %6, align 4, !tbaa !6
  br i1 %674, label %816, label %778

778:                                              ; preds = %776, %803
  %779 = phi i64 [ %807, %803 ], [ 1, %776 ]
  %780 = getelementptr inbounds i32, ptr %4, i64 %779
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = getelementptr inbounds i32, ptr %12, i64 %779
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = add nsw i32 %783, -1
  %785 = icmp slt i32 %781, %784
  br i1 %785, label %786, label %801

786:                                              ; preds = %778
  br i1 %773, label %793, label %787

787:                                              ; preds = %786
  %788 = getelementptr inbounds i32, ptr %7, i64 %779
  %789 = load i32, ptr %788, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %6, i64 %779
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = add nsw i32 %791, %789
  store i32 %792, ptr %790, align 4, !tbaa !6
  br label %811

793:                                              ; preds = %769, %786
  %794 = phi i32 [ %781, %786 ], [ %770, %769 ]
  %795 = phi ptr [ %780, %786 ], [ %4, %769 ]
  %796 = phi i64 [ %779, %786 ], [ 0, %769 ]
  %797 = add nsw i32 %794, 1
  store i32 %797, ptr %795, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %7, i64 %796
  %799 = load i32, ptr %798, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %6, i64 %796
  br label %811

801:                                              ; preds = %778
  %802 = icmp eq i32 %781, %784
  br i1 %802, label %803, label %809

803:                                              ; preds = %801
  store i32 0, ptr %780, align 4, !tbaa !6
  %804 = getelementptr inbounds i32, ptr %8, i64 %779
  %805 = load i32, ptr %804, align 4, !tbaa !6
  %806 = getelementptr inbounds i32, ptr %6, i64 %779
  store i32 %805, ptr %806, align 4, !tbaa !6
  %807 = add nuw nsw i64 %779, 1
  %808 = icmp eq i64 %807, %672
  br i1 %808, label %816, label %778, !llvm.loop !1328

809:                                              ; preds = %774, %801
  %810 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

811:                                              ; preds = %787, %793
  %812 = phi ptr [ %800, %793 ], [ %780, %787 ]
  %813 = phi i32 [ %799, %793 ], [ 1, %787 ]
  %814 = load i32, ptr %812, align 4, !tbaa !6
  %815 = add nsw i32 %814, %813
  store i32 %815, ptr %812, align 4, !tbaa !6
  br label %816

816:                                              ; preds = %803, %811, %776, %748
  %817 = icmp eq i32 %768, %5
  br i1 %817, label %5661, label %675, !llvm.loop !1329

818:                                              ; preds = %658, %961
  %819 = phi i32 [ 0, %658 ], [ %910, %961 ]
  %820 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %821, label %890

821:                                              ; preds = %818, %880
  %822 = phi i32 [ %889, %880 ], [ 0, %818 ]
  %823 = phi i64 [ %831, %880 ], [ %663, %818 ]
  %824 = phi i64 [ %888, %880 ], [ %662, %818 ]
  %825 = phi i32 [ %886, %880 ], [ %820, %818 ]
  %826 = sub i32 %661, %822
  %827 = tail call i32 @llvm.smin.i32(i32 %826, i32 0)
  %828 = sub i32 %826, %827
  %829 = zext i32 %828 to i64
  %830 = add nuw nsw i64 %829, 1
  %831 = add nsw i64 %823, -1
  %832 = icmp ult i32 %828, 31
  br i1 %832, label %868, label %833

833:                                              ; preds = %821
  %834 = and i64 %830, 8589934560
  %835 = sub i64 %824, %834
  br label %836

836:                                              ; preds = %836, %833
  %837 = phi i64 [ 0, %833 ], [ %860, %836 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %856, %836 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %857, %836 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %858, %836 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %833 ], [ %859, %836 ]
  %842 = sub i64 %824, %837
  %843 = getelementptr inbounds i32, ptr %11, i64 %842
  %844 = getelementptr inbounds i32, ptr %843, i64 -7
  %845 = load <8 x i32>, ptr %844, align 4, !tbaa !6
  %846 = shufflevector <8 x i32> %845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %847 = getelementptr inbounds i32, ptr %843, i64 -15
  %848 = load <8 x i32>, ptr %847, align 4, !tbaa !6
  %849 = shufflevector <8 x i32> %848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %850 = getelementptr inbounds i32, ptr %843, i64 -23
  %851 = load <8 x i32>, ptr %850, align 4, !tbaa !6
  %852 = shufflevector <8 x i32> %851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %853 = getelementptr inbounds i32, ptr %843, i64 -31
  %854 = load <8 x i32>, ptr %853, align 4, !tbaa !6
  %855 = shufflevector <8 x i32> %854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %856 = mul <8 x i32> %846, %838
  %857 = mul <8 x i32> %849, %839
  %858 = mul <8 x i32> %852, %840
  %859 = mul <8 x i32> %855, %841
  %860 = add nuw i64 %837, 32
  %861 = icmp eq i64 %860, %834
  br i1 %861, label %862, label %836, !llvm.loop !1330

862:                                              ; preds = %836
  %863 = mul <8 x i32> %857, %856
  %864 = mul <8 x i32> %858, %863
  %865 = mul <8 x i32> %859, %864
  %866 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %865)
  %867 = icmp eq i64 %830, %834
  br i1 %867, label %880, label %868

868:                                              ; preds = %821, %862
  %869 = phi i64 [ %824, %821 ], [ %835, %862 ]
  %870 = phi i32 [ 1, %821 ], [ %866, %862 ]
  br label %871

871:                                              ; preds = %868, %871
  %872 = phi i64 [ %877, %871 ], [ %869, %868 ]
  %873 = phi i32 [ %876, %871 ], [ %870, %868 ]
  %874 = getelementptr inbounds i32, ptr %11, i64 %872
  %875 = load i32, ptr %874, align 4, !tbaa !6
  %876 = mul nsw i32 %875, %873
  %877 = add nsw i64 %872, -1
  %878 = trunc i64 %872 to i32
  %879 = icmp sgt i32 %878, 0
  br i1 %879, label %871, label %880, !llvm.loop !1331

880:                                              ; preds = %871, %862
  %881 = phi i32 [ %866, %862 ], [ %876, %871 ]
  %882 = and i64 %831, 4294967295
  %883 = getelementptr inbounds i32, ptr %6, i64 %882
  %884 = load i32, ptr %883, align 4, !tbaa !6
  %885 = mul nsw i32 %884, %881
  %886 = add nsw i32 %885, %825
  %887 = icmp sgt i64 %823, 2
  %888 = add nsw i64 %824, -1
  %889 = add i32 %822, 1
  br i1 %887, label %821, label %890, !llvm.loop !1332

890:                                              ; preds = %880, %818
  %891 = phi i32 [ %820, %818 ], [ %886, %880 ]
  %892 = icmp slt i32 %891, %5
  br i1 %892, label %895, label %893

893:                                              ; preds = %890
  %894 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

895:                                              ; preds = %890
  %896 = sext i32 %891 to i64
  %897 = getelementptr inbounds double, ptr %639, i64 %896
  %898 = load double, ptr %897, align 8, !tbaa !19
  %899 = fptosi double %898 to i32
  %900 = load i32, ptr %641, align 4, !tbaa !6
  %901 = sitofp i32 %900 to double
  %902 = sitofp i32 %899 to double
  %903 = icmp slt i32 %899, 0
  %904 = fneg fast double %902
  %905 = select i1 %903, double %904, double %902
  %906 = fmul fast double %902, %902
  %907 = fmul fast double %906, %905
  %908 = fadd fast double %907, %901
  %909 = fptosi double %908 to i32
  store i32 %909, ptr %641, align 4, !tbaa !6
  %910 = add nuw nsw i32 %819, 1
  br i1 %660, label %911, label %961

911:                                              ; preds = %895
  %912 = load i32, ptr %4, align 4, !tbaa !6
  %913 = load i32, ptr %12, align 4, !tbaa !6
  %914 = add nsw i32 %913, -1
  %915 = icmp slt i32 %912, %914
  br i1 %915, label %938, label %916

916:                                              ; preds = %911
  %917 = icmp eq i32 %912, %914
  br i1 %917, label %918, label %954

918:                                              ; preds = %916
  store i32 0, ptr %4, align 4, !tbaa !6
  %919 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %919, ptr %6, align 4, !tbaa !6
  br i1 %665, label %961, label %920

920:                                              ; preds = %918, %948
  %921 = phi i64 [ %952, %948 ], [ 1, %918 ]
  %922 = getelementptr inbounds i32, ptr %4, i64 %921
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %12, i64 %921
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = add nsw i32 %925, -1
  %927 = icmp slt i32 %923, %926
  br i1 %927, label %928, label %946

928:                                              ; preds = %920
  br i1 %915, label %938, label %929

929:                                              ; preds = %928
  %930 = shl i64 %921, 32
  %931 = add i64 %930, -4294967296
  %932 = ashr exact i64 %931, 32
  %933 = getelementptr inbounds i32, ptr %7, i64 %932
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %921
  %936 = load i32, ptr %935, align 4, !tbaa !6
  %937 = add nsw i32 %936, %934
  store i32 %937, ptr %935, align 4, !tbaa !6
  br label %956

938:                                              ; preds = %911, %928
  %939 = phi i32 [ %923, %928 ], [ %912, %911 ]
  %940 = phi ptr [ %922, %928 ], [ %4, %911 ]
  %941 = phi i64 [ %921, %928 ], [ 0, %911 ]
  %942 = add nsw i32 %939, 1
  store i32 %942, ptr %940, align 4, !tbaa !6
  %943 = getelementptr inbounds i32, ptr %7, i64 %941
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %6, i64 %941
  br label %956

946:                                              ; preds = %920
  %947 = icmp eq i32 %923, %926
  br i1 %947, label %948, label %954

948:                                              ; preds = %946
  store i32 0, ptr %922, align 4, !tbaa !6
  %949 = getelementptr inbounds i32, ptr %8, i64 %921
  %950 = load i32, ptr %949, align 4, !tbaa !6
  %951 = getelementptr inbounds i32, ptr %6, i64 %921
  store i32 %950, ptr %951, align 4, !tbaa !6
  %952 = add nuw nsw i64 %921, 1
  %953 = icmp eq i64 %952, %663
  br i1 %953, label %961, label %920, !llvm.loop !1333

954:                                              ; preds = %916, %946
  %955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

956:                                              ; preds = %929, %938
  %957 = phi ptr [ %945, %938 ], [ %922, %929 ]
  %958 = phi i32 [ %944, %938 ], [ 1, %929 ]
  %959 = load i32, ptr %957, align 4, !tbaa !6
  %960 = add nsw i32 %959, %958
  store i32 %960, ptr %957, align 4, !tbaa !6
  br label %961

961:                                              ; preds = %948, %956, %918, %895
  %962 = icmp eq i32 %910, %5
  br i1 %962, label %5661, label %818, !llvm.loop !1334

963:                                              ; preds = %651
  %964 = getelementptr inbounds i32, ptr %3, i64 %19
  %965 = load i32, ptr %964, align 4, !tbaa !6
  %966 = icmp eq i32 %965, 0
  %967 = icmp sgt i32 %5, 0
  br i1 %966, label %977, label %968

968:                                              ; preds = %963
  br i1 %967, label %969, label %5661

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %1123

977:                                              ; preds = %963
  br i1 %967, label %978, label %5661

978:                                              ; preds = %977
  %979 = icmp sgt i32 %13, 1
  %980 = icmp sgt i32 %13, 0
  %981 = add i32 %13, -2
  %982 = zext i32 %981 to i64
  %983 = zext i32 %13 to i64
  %984 = add nuw i32 %5, 1
  %985 = icmp eq i32 %13, 1
  br label %986

986:                                              ; preds = %978, %1121
  %987 = phi i32 [ 0, %978 ], [ %1073, %1121 ]
  %988 = phi double [ 0.000000e+00, %978 ], [ %1072, %1121 ]
  %989 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %979, label %990, label %1059

990:                                              ; preds = %986, %1049
  %991 = phi i32 [ %1058, %1049 ], [ 0, %986 ]
  %992 = phi i64 [ %1000, %1049 ], [ %983, %986 ]
  %993 = phi i64 [ %1057, %1049 ], [ %982, %986 ]
  %994 = phi i32 [ %1055, %1049 ], [ %989, %986 ]
  %995 = sub i32 %981, %991
  %996 = tail call i32 @llvm.smin.i32(i32 %995, i32 0)
  %997 = sub i32 %995, %996
  %998 = zext i32 %997 to i64
  %999 = add nuw nsw i64 %998, 1
  %1000 = add nsw i64 %992, -1
  %1001 = icmp ult i32 %997, 31
  br i1 %1001, label %1037, label %1002

1002:                                             ; preds = %990
  %1003 = and i64 %999, 8589934560
  %1004 = sub i64 %993, %1003
  br label %1005

1005:                                             ; preds = %1005, %1002
  %1006 = phi i64 [ 0, %1002 ], [ %1029, %1005 ]
  %1007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1025, %1005 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1026, %1005 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1027, %1005 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1002 ], [ %1028, %1005 ]
  %1011 = sub i64 %993, %1006
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1013 = getelementptr inbounds i32, ptr %1012, i64 -7
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = getelementptr inbounds i32, ptr %1012, i64 -15
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !6
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1012, i64 -23
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !6
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1012, i64 -31
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !6
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = mul <8 x i32> %1015, %1007
  %1026 = mul <8 x i32> %1018, %1008
  %1027 = mul <8 x i32> %1021, %1009
  %1028 = mul <8 x i32> %1024, %1010
  %1029 = add nuw i64 %1006, 32
  %1030 = icmp eq i64 %1029, %1003
  br i1 %1030, label %1031, label %1005, !llvm.loop !1335

1031:                                             ; preds = %1005
  %1032 = mul <8 x i32> %1026, %1025
  %1033 = mul <8 x i32> %1027, %1032
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1034)
  %1036 = icmp eq i64 %999, %1003
  br i1 %1036, label %1049, label %1037

1037:                                             ; preds = %990, %1031
  %1038 = phi i64 [ %993, %990 ], [ %1004, %1031 ]
  %1039 = phi i32 [ 1, %990 ], [ %1035, %1031 ]
  br label %1040

1040:                                             ; preds = %1037, %1040
  %1041 = phi i64 [ %1046, %1040 ], [ %1038, %1037 ]
  %1042 = phi i32 [ %1045, %1040 ], [ %1039, %1037 ]
  %1043 = getelementptr inbounds i32, ptr %9, i64 %1041
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1042
  %1046 = add nsw i64 %1041, -1
  %1047 = trunc i64 %1041 to i32
  %1048 = icmp sgt i32 %1047, 0
  br i1 %1048, label %1040, label %1049, !llvm.loop !1336

1049:                                             ; preds = %1040, %1031
  %1050 = phi i32 [ %1035, %1031 ], [ %1045, %1040 ]
  %1051 = and i64 %1000, 4294967295
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !6
  %1054 = mul nsw i32 %1053, %1050
  %1055 = add nsw i32 %1054, %994
  %1056 = icmp sgt i64 %992, 2
  %1057 = add nsw i64 %993, -1
  %1058 = add i32 %991, 1
  br i1 %1056, label %990, label %1059, !llvm.loop !1337

1059:                                             ; preds = %1049, %986
  %1060 = phi i32 [ %989, %986 ], [ %1055, %1049 ]
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds double, ptr %639, i64 %1061
  %1063 = load double, ptr %1062, align 8, !tbaa !19
  %1064 = fptosi double %1063 to i32
  %1065 = load i32, ptr %641, align 4, !tbaa !6
  %1066 = icmp slt i32 %1064, 0
  %1067 = mul nsw i32 %1064, %1064
  %1068 = sub nsw i32 0, %1067
  %1069 = select i1 %1066, i32 %1068, i32 %1067
  %1070 = mul i32 %1069, %1064
  %1071 = add nsw i32 %1070, %1065
  store i32 %1071, ptr %641, align 4, !tbaa !6
  %1072 = fadd fast double %988, 1.000000e+00
  %1073 = add nuw nsw i32 %987, 1
  br i1 %980, label %1074, label %1121

1074:                                             ; preds = %1059
  %1075 = load i32, ptr %4, align 4, !tbaa !6
  %1076 = load i32, ptr %12, align 4, !tbaa !6
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1075, %1077
  br i1 %1078, label %1098, label %1079

1079:                                             ; preds = %1074
  %1080 = icmp eq i32 %1075, %1077
  br i1 %1080, label %1081, label %1114

1081:                                             ; preds = %1079
  store i32 0, ptr %4, align 4, !tbaa !6
  %1082 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1082, ptr %6, align 4, !tbaa !6
  br i1 %985, label %1121, label %1083

1083:                                             ; preds = %1081, %1108
  %1084 = phi i64 [ %1112, %1108 ], [ 1, %1081 ]
  %1085 = getelementptr inbounds i32, ptr %4, i64 %1084
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %12, i64 %1084
  %1088 = load i32, ptr %1087, align 4, !tbaa !6
  %1089 = add nsw i32 %1088, -1
  %1090 = icmp slt i32 %1086, %1089
  br i1 %1090, label %1091, label %1106

1091:                                             ; preds = %1083
  br i1 %1078, label %1098, label %1092

1092:                                             ; preds = %1091
  %1093 = getelementptr inbounds i32, ptr %7, i64 %1084
  %1094 = load i32, ptr %1093, align 4, !tbaa !6
  %1095 = getelementptr inbounds i32, ptr %6, i64 %1084
  %1096 = load i32, ptr %1095, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1094
  store i32 %1097, ptr %1095, align 4, !tbaa !6
  br label %1116

1098:                                             ; preds = %1074, %1091
  %1099 = phi i32 [ %1086, %1091 ], [ %1075, %1074 ]
  %1100 = phi ptr [ %1085, %1091 ], [ %4, %1074 ]
  %1101 = phi i64 [ %1084, %1091 ], [ 0, %1074 ]
  %1102 = add nsw i32 %1099, 1
  store i32 %1102, ptr %1100, align 4, !tbaa !6
  %1103 = getelementptr inbounds i32, ptr %7, i64 %1101
  %1104 = load i32, ptr %1103, align 4, !tbaa !6
  %1105 = getelementptr inbounds i32, ptr %6, i64 %1101
  br label %1116

1106:                                             ; preds = %1083
  %1107 = icmp eq i32 %1086, %1089
  br i1 %1107, label %1108, label %1114

1108:                                             ; preds = %1106
  store i32 0, ptr %1085, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %8, i64 %1084
  %1110 = load i32, ptr %1109, align 4, !tbaa !6
  %1111 = getelementptr inbounds i32, ptr %6, i64 %1084
  store i32 %1110, ptr %1111, align 4, !tbaa !6
  %1112 = add nuw nsw i64 %1084, 1
  %1113 = icmp eq i64 %1112, %983
  br i1 %1113, label %1121, label %1083, !llvm.loop !1338

1114:                                             ; preds = %1079, %1106
  %1115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1116:                                             ; preds = %1092, %1098
  %1117 = phi ptr [ %1105, %1098 ], [ %1085, %1092 ]
  %1118 = phi i32 [ %1104, %1098 ], [ 1, %1092 ]
  %1119 = load i32, ptr %1117, align 4, !tbaa !6
  %1120 = add nsw i32 %1119, %1118
  store i32 %1120, ptr %1117, align 4, !tbaa !6
  br label %1121

1121:                                             ; preds = %1108, %1116, %1081, %1059
  %1122 = icmp eq i32 %1073, %5
  br i1 %1122, label %5661, label %986, !llvm.loop !1339

1123:                                             ; preds = %969, %1263
  %1124 = phi i32 [ 0, %969 ], [ %1212, %1263 ]
  %1125 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %1126, label %1195

1126:                                             ; preds = %1123, %1185
  %1127 = phi i32 [ %1194, %1185 ], [ 0, %1123 ]
  %1128 = phi i64 [ %1136, %1185 ], [ %974, %1123 ]
  %1129 = phi i64 [ %1193, %1185 ], [ %973, %1123 ]
  %1130 = phi i32 [ %1191, %1185 ], [ %1125, %1123 ]
  %1131 = sub i32 %972, %1127
  %1132 = tail call i32 @llvm.smin.i32(i32 %1131, i32 0)
  %1133 = sub i32 %1131, %1132
  %1134 = zext i32 %1133 to i64
  %1135 = add nuw nsw i64 %1134, 1
  %1136 = add nsw i64 %1128, -1
  %1137 = icmp ult i32 %1133, 31
  br i1 %1137, label %1173, label %1138

1138:                                             ; preds = %1126
  %1139 = and i64 %1135, 8589934560
  %1140 = sub i64 %1129, %1139
  br label %1141

1141:                                             ; preds = %1141, %1138
  %1142 = phi i64 [ 0, %1138 ], [ %1165, %1141 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1161, %1141 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1162, %1141 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1163, %1141 ]
  %1146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1138 ], [ %1164, %1141 ]
  %1147 = sub i64 %1129, %1142
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1147
  %1149 = getelementptr inbounds i32, ptr %1148, i64 -7
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !6
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = getelementptr inbounds i32, ptr %1148, i64 -15
  %1153 = load <8 x i32>, ptr %1152, align 4, !tbaa !6
  %1154 = shufflevector <8 x i32> %1153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1155 = getelementptr inbounds i32, ptr %1148, i64 -23
  %1156 = load <8 x i32>, ptr %1155, align 4, !tbaa !6
  %1157 = shufflevector <8 x i32> %1156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1158 = getelementptr inbounds i32, ptr %1148, i64 -31
  %1159 = load <8 x i32>, ptr %1158, align 4, !tbaa !6
  %1160 = shufflevector <8 x i32> %1159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1161 = mul <8 x i32> %1151, %1143
  %1162 = mul <8 x i32> %1154, %1144
  %1163 = mul <8 x i32> %1157, %1145
  %1164 = mul <8 x i32> %1160, %1146
  %1165 = add nuw i64 %1142, 32
  %1166 = icmp eq i64 %1165, %1139
  br i1 %1166, label %1167, label %1141, !llvm.loop !1340

1167:                                             ; preds = %1141
  %1168 = mul <8 x i32> %1162, %1161
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = mul <8 x i32> %1164, %1169
  %1171 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1170)
  %1172 = icmp eq i64 %1135, %1139
  br i1 %1172, label %1185, label %1173

1173:                                             ; preds = %1126, %1167
  %1174 = phi i64 [ %1129, %1126 ], [ %1140, %1167 ]
  %1175 = phi i32 [ 1, %1126 ], [ %1171, %1167 ]
  br label %1176

1176:                                             ; preds = %1173, %1176
  %1177 = phi i64 [ %1182, %1176 ], [ %1174, %1173 ]
  %1178 = phi i32 [ %1181, %1176 ], [ %1175, %1173 ]
  %1179 = getelementptr inbounds i32, ptr %11, i64 %1177
  %1180 = load i32, ptr %1179, align 4, !tbaa !6
  %1181 = mul nsw i32 %1180, %1178
  %1182 = add nsw i64 %1177, -1
  %1183 = trunc i64 %1177 to i32
  %1184 = icmp sgt i32 %1183, 0
  br i1 %1184, label %1176, label %1185, !llvm.loop !1341

1185:                                             ; preds = %1176, %1167
  %1186 = phi i32 [ %1171, %1167 ], [ %1181, %1176 ]
  %1187 = and i64 %1136, 4294967295
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !6
  %1190 = mul nsw i32 %1189, %1186
  %1191 = add nsw i32 %1190, %1130
  %1192 = icmp sgt i64 %1128, 2
  %1193 = add nsw i64 %1129, -1
  %1194 = add i32 %1127, 1
  br i1 %1192, label %1126, label %1195, !llvm.loop !1342

1195:                                             ; preds = %1185, %1123
  %1196 = phi i32 [ %1125, %1123 ], [ %1191, %1185 ]
  %1197 = icmp slt i32 %1196, %5
  br i1 %1197, label %1200, label %1198

1198:                                             ; preds = %1195
  %1199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1200:                                             ; preds = %1195
  %1201 = sext i32 %1196 to i64
  %1202 = getelementptr inbounds double, ptr %639, i64 %1201
  %1203 = load double, ptr %1202, align 8, !tbaa !19
  %1204 = fptosi double %1203 to i32
  %1205 = load i32, ptr %641, align 4, !tbaa !6
  %1206 = icmp slt i32 %1204, 0
  %1207 = mul nsw i32 %1204, %1204
  %1208 = sub nsw i32 0, %1207
  %1209 = select i1 %1206, i32 %1208, i32 %1207
  %1210 = mul i32 %1209, %1204
  %1211 = add nsw i32 %1210, %1205
  store i32 %1211, ptr %641, align 4, !tbaa !6
  %1212 = add nuw nsw i32 %1124, 1
  br i1 %971, label %1213, label %1263

1213:                                             ; preds = %1200
  %1214 = load i32, ptr %4, align 4, !tbaa !6
  %1215 = load i32, ptr %12, align 4, !tbaa !6
  %1216 = add nsw i32 %1215, -1
  %1217 = icmp slt i32 %1214, %1216
  br i1 %1217, label %1240, label %1218

1218:                                             ; preds = %1213
  %1219 = icmp eq i32 %1214, %1216
  br i1 %1219, label %1220, label %1256

1220:                                             ; preds = %1218
  store i32 0, ptr %4, align 4, !tbaa !6
  %1221 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1221, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1263, label %1222

1222:                                             ; preds = %1220, %1250
  %1223 = phi i64 [ %1254, %1250 ], [ 1, %1220 ]
  %1224 = getelementptr inbounds i32, ptr %4, i64 %1223
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = getelementptr inbounds i32, ptr %12, i64 %1223
  %1227 = load i32, ptr %1226, align 4, !tbaa !6
  %1228 = add nsw i32 %1227, -1
  %1229 = icmp slt i32 %1225, %1228
  br i1 %1229, label %1230, label %1248

1230:                                             ; preds = %1222
  br i1 %1217, label %1240, label %1231

1231:                                             ; preds = %1230
  %1232 = shl i64 %1223, 32
  %1233 = add i64 %1232, -4294967296
  %1234 = ashr exact i64 %1233, 32
  %1235 = getelementptr inbounds i32, ptr %7, i64 %1234
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1223
  %1238 = load i32, ptr %1237, align 4, !tbaa !6
  %1239 = add nsw i32 %1238, %1236
  store i32 %1239, ptr %1237, align 4, !tbaa !6
  br label %1258

1240:                                             ; preds = %1213, %1230
  %1241 = phi i32 [ %1225, %1230 ], [ %1214, %1213 ]
  %1242 = phi ptr [ %1224, %1230 ], [ %4, %1213 ]
  %1243 = phi i64 [ %1223, %1230 ], [ 0, %1213 ]
  %1244 = add nsw i32 %1241, 1
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  %1245 = getelementptr inbounds i32, ptr %7, i64 %1243
  %1246 = load i32, ptr %1245, align 4, !tbaa !6
  %1247 = getelementptr inbounds i32, ptr %6, i64 %1243
  br label %1258

1248:                                             ; preds = %1222
  %1249 = icmp eq i32 %1225, %1228
  br i1 %1249, label %1250, label %1256

1250:                                             ; preds = %1248
  store i32 0, ptr %1224, align 4, !tbaa !6
  %1251 = getelementptr inbounds i32, ptr %8, i64 %1223
  %1252 = load i32, ptr %1251, align 4, !tbaa !6
  %1253 = getelementptr inbounds i32, ptr %6, i64 %1223
  store i32 %1252, ptr %1253, align 4, !tbaa !6
  %1254 = add nuw nsw i64 %1223, 1
  %1255 = icmp eq i64 %1254, %974
  br i1 %1255, label %1263, label %1222, !llvm.loop !1343

1256:                                             ; preds = %1218, %1248
  %1257 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1258:                                             ; preds = %1231, %1240
  %1259 = phi ptr [ %1247, %1240 ], [ %1224, %1231 ]
  %1260 = phi i32 [ %1246, %1240 ], [ 1, %1231 ]
  %1261 = load i32, ptr %1259, align 4, !tbaa !6
  %1262 = add nsw i32 %1261, %1260
  store i32 %1262, ptr %1259, align 4, !tbaa !6
  br label %1263

1263:                                             ; preds = %1250, %1258, %1220, %1200
  %1264 = icmp eq i32 %1212, %5
  br i1 %1264, label %5661, label %1123, !llvm.loop !1344

1265:                                             ; preds = %651
  %1266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

1267:                                             ; preds = %18
  %1268 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1269 = load ptr, ptr %1268, align 8, !tbaa !10
  %1270 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1271 = load ptr, ptr %1270, align 8, !tbaa !10
  store i8 0, ptr %1271, align 1, !tbaa !12
  %1272 = icmp eq i32 %13, 0
  br i1 %1272, label %1273, label %1281

1273:                                             ; preds = %1267
  %1274 = load double, ptr %1269, align 8, !tbaa !19
  %1275 = fptosi double %1274 to i8
  %1276 = icmp slt i8 %1275, 0
  %1277 = mul i8 %1275, %1275
  %1278 = sub i8 0, %1277
  %1279 = select i1 %1276, i8 %1278, i8 %1277
  %1280 = mul i8 %1279, %1275
  store i8 %1280, ptr %1271, align 1, !tbaa !12
  br label %5661

1281:                                             ; preds = %1267
  switch i32 %1, label %1895 [
    i32 1, label %1282
    i32 0, label %1593
  ]

1282:                                             ; preds = %1281
  %1283 = getelementptr inbounds i32, ptr %3, i64 %19
  %1284 = load i32, ptr %1283, align 4, !tbaa !6
  %1285 = icmp eq i32 %1284, 0
  %1286 = icmp sgt i32 %5, 0
  br i1 %1285, label %1296, label %1287

1287:                                             ; preds = %1282
  br i1 %1286, label %1288, label %5661

1288:                                             ; preds = %1287
  %1289 = icmp sgt i32 %13, 1
  %1290 = icmp sgt i32 %13, 0
  %1291 = add i32 %13, -2
  %1292 = zext i32 %1291 to i64
  %1293 = zext i32 %13 to i64
  %1294 = add nuw i32 %5, 1
  %1295 = icmp eq i32 %13, 1
  br label %1448

1296:                                             ; preds = %1282
  br i1 %1286, label %1297, label %5661

1297:                                             ; preds = %1296
  %1298 = icmp sgt i32 %13, 1
  %1299 = icmp sgt i32 %13, 0
  %1300 = add i32 %13, -2
  %1301 = zext i32 %1300 to i64
  %1302 = zext i32 %13 to i64
  %1303 = add nuw i32 %5, 1
  %1304 = icmp eq i32 %13, 1
  br label %1305

1305:                                             ; preds = %1297, %1446
  %1306 = phi i32 [ 0, %1297 ], [ %1398, %1446 ]
  %1307 = phi double [ 0.000000e+00, %1297 ], [ %1397, %1446 ]
  %1308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1309, label %1378

1309:                                             ; preds = %1305, %1368
  %1310 = phi i32 [ %1377, %1368 ], [ 0, %1305 ]
  %1311 = phi i64 [ %1319, %1368 ], [ %1302, %1305 ]
  %1312 = phi i64 [ %1376, %1368 ], [ %1301, %1305 ]
  %1313 = phi i32 [ %1374, %1368 ], [ %1308, %1305 ]
  %1314 = sub i32 %1300, %1310
  %1315 = tail call i32 @llvm.smin.i32(i32 %1314, i32 0)
  %1316 = sub i32 %1314, %1315
  %1317 = zext i32 %1316 to i64
  %1318 = add nuw nsw i64 %1317, 1
  %1319 = add nsw i64 %1311, -1
  %1320 = icmp ult i32 %1316, 31
  br i1 %1320, label %1356, label %1321

1321:                                             ; preds = %1309
  %1322 = and i64 %1318, 8589934560
  %1323 = sub i64 %1312, %1322
  br label %1324

1324:                                             ; preds = %1324, %1321
  %1325 = phi i64 [ 0, %1321 ], [ %1348, %1324 ]
  %1326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1344, %1324 ]
  %1327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1345, %1324 ]
  %1328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1346, %1324 ]
  %1329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1321 ], [ %1347, %1324 ]
  %1330 = sub i64 %1312, %1325
  %1331 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1332 = getelementptr inbounds i32, ptr %1331, i64 -7
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !6
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = getelementptr inbounds i32, ptr %1331, i64 -15
  %1336 = load <8 x i32>, ptr %1335, align 4, !tbaa !6
  %1337 = shufflevector <8 x i32> %1336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1338 = getelementptr inbounds i32, ptr %1331, i64 -23
  %1339 = load <8 x i32>, ptr %1338, align 4, !tbaa !6
  %1340 = shufflevector <8 x i32> %1339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1341 = getelementptr inbounds i32, ptr %1331, i64 -31
  %1342 = load <8 x i32>, ptr %1341, align 4, !tbaa !6
  %1343 = shufflevector <8 x i32> %1342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1344 = mul <8 x i32> %1334, %1326
  %1345 = mul <8 x i32> %1337, %1327
  %1346 = mul <8 x i32> %1340, %1328
  %1347 = mul <8 x i32> %1343, %1329
  %1348 = add nuw i64 %1325, 32
  %1349 = icmp eq i64 %1348, %1322
  br i1 %1349, label %1350, label %1324, !llvm.loop !1345

1350:                                             ; preds = %1324
  %1351 = mul <8 x i32> %1345, %1344
  %1352 = mul <8 x i32> %1346, %1351
  %1353 = mul <8 x i32> %1347, %1352
  %1354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1353)
  %1355 = icmp eq i64 %1318, %1322
  br i1 %1355, label %1368, label %1356

1356:                                             ; preds = %1309, %1350
  %1357 = phi i64 [ %1312, %1309 ], [ %1323, %1350 ]
  %1358 = phi i32 [ 1, %1309 ], [ %1354, %1350 ]
  br label %1359

1359:                                             ; preds = %1356, %1359
  %1360 = phi i64 [ %1365, %1359 ], [ %1357, %1356 ]
  %1361 = phi i32 [ %1364, %1359 ], [ %1358, %1356 ]
  %1362 = getelementptr inbounds i32, ptr %9, i64 %1360
  %1363 = load i32, ptr %1362, align 4, !tbaa !6
  %1364 = mul nsw i32 %1363, %1361
  %1365 = add nsw i64 %1360, -1
  %1366 = trunc i64 %1360 to i32
  %1367 = icmp sgt i32 %1366, 0
  br i1 %1367, label %1359, label %1368, !llvm.loop !1346

1368:                                             ; preds = %1359, %1350
  %1369 = phi i32 [ %1354, %1350 ], [ %1364, %1359 ]
  %1370 = and i64 %1319, 4294967295
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1370
  %1372 = load i32, ptr %1371, align 4, !tbaa !6
  %1373 = mul nsw i32 %1372, %1369
  %1374 = add nsw i32 %1373, %1313
  %1375 = icmp sgt i64 %1311, 2
  %1376 = add nsw i64 %1312, -1
  %1377 = add i32 %1310, 1
  br i1 %1375, label %1309, label %1378, !llvm.loop !1347

1378:                                             ; preds = %1368, %1305
  %1379 = phi i32 [ %1308, %1305 ], [ %1374, %1368 ]
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds double, ptr %2, i64 %1380
  %1382 = load double, ptr %1381, align 8, !tbaa !19
  %1383 = getelementptr inbounds double, ptr %1269, i64 %1380
  %1384 = load double, ptr %1383, align 8, !tbaa !19
  %1385 = fptosi double %1384 to i8
  %1386 = load i8, ptr %1271, align 1, !tbaa !12
  %1387 = sitofp i8 %1386 to double
  %1388 = sitofp i8 %1385 to double
  %1389 = fmul fast double %1382, %1388
  %1390 = fcmp fast olt double %1389, 0.000000e+00
  %1391 = fneg fast double %1389
  %1392 = select nnan ninf i1 %1390, double %1391, double %1389
  %1393 = fmul fast double %1389, %1389
  %1394 = fmul fast double %1393, %1392
  %1395 = fadd fast double %1394, %1387
  %1396 = fptosi double %1395 to i8
  store i8 %1396, ptr %1271, align 1, !tbaa !12
  %1397 = fadd fast double %1382, %1307
  %1398 = add nuw nsw i32 %1306, 1
  br i1 %1299, label %1399, label %1446

1399:                                             ; preds = %1378
  %1400 = load i32, ptr %4, align 4, !tbaa !6
  %1401 = load i32, ptr %12, align 4, !tbaa !6
  %1402 = add nsw i32 %1401, -1
  %1403 = icmp slt i32 %1400, %1402
  br i1 %1403, label %1423, label %1404

1404:                                             ; preds = %1399
  %1405 = icmp eq i32 %1400, %1402
  br i1 %1405, label %1406, label %1439

1406:                                             ; preds = %1404
  store i32 0, ptr %4, align 4, !tbaa !6
  %1407 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1407, ptr %6, align 4, !tbaa !6
  br i1 %1304, label %1446, label %1408

1408:                                             ; preds = %1406, %1433
  %1409 = phi i64 [ %1437, %1433 ], [ 1, %1406 ]
  %1410 = getelementptr inbounds i32, ptr %4, i64 %1409
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %12, i64 %1409
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = add nsw i32 %1413, -1
  %1415 = icmp slt i32 %1411, %1414
  br i1 %1415, label %1416, label %1431

1416:                                             ; preds = %1408
  br i1 %1403, label %1423, label %1417

1417:                                             ; preds = %1416
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1409
  %1419 = load i32, ptr %1418, align 4, !tbaa !6
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1409
  %1421 = load i32, ptr %1420, align 4, !tbaa !6
  %1422 = add nsw i32 %1421, %1419
  store i32 %1422, ptr %1420, align 4, !tbaa !6
  br label %1441

1423:                                             ; preds = %1399, %1416
  %1424 = phi i32 [ %1411, %1416 ], [ %1400, %1399 ]
  %1425 = phi ptr [ %1410, %1416 ], [ %4, %1399 ]
  %1426 = phi i64 [ %1409, %1416 ], [ 0, %1399 ]
  %1427 = add nsw i32 %1424, 1
  store i32 %1427, ptr %1425, align 4, !tbaa !6
  %1428 = getelementptr inbounds i32, ptr %7, i64 %1426
  %1429 = load i32, ptr %1428, align 4, !tbaa !6
  %1430 = getelementptr inbounds i32, ptr %6, i64 %1426
  br label %1441

1431:                                             ; preds = %1408
  %1432 = icmp eq i32 %1411, %1414
  br i1 %1432, label %1433, label %1439

1433:                                             ; preds = %1431
  store i32 0, ptr %1410, align 4, !tbaa !6
  %1434 = getelementptr inbounds i32, ptr %8, i64 %1409
  %1435 = load i32, ptr %1434, align 4, !tbaa !6
  %1436 = getelementptr inbounds i32, ptr %6, i64 %1409
  store i32 %1435, ptr %1436, align 4, !tbaa !6
  %1437 = add nuw nsw i64 %1409, 1
  %1438 = icmp eq i64 %1437, %1302
  br i1 %1438, label %1446, label %1408, !llvm.loop !1348

1439:                                             ; preds = %1404, %1431
  %1440 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1441:                                             ; preds = %1417, %1423
  %1442 = phi ptr [ %1430, %1423 ], [ %1410, %1417 ]
  %1443 = phi i32 [ %1429, %1423 ], [ 1, %1417 ]
  %1444 = load i32, ptr %1442, align 4, !tbaa !6
  %1445 = add nsw i32 %1444, %1443
  store i32 %1445, ptr %1442, align 4, !tbaa !6
  br label %1446

1446:                                             ; preds = %1433, %1441, %1406, %1378
  %1447 = icmp eq i32 %1398, %5
  br i1 %1447, label %5661, label %1305, !llvm.loop !1349

1448:                                             ; preds = %1288, %1591
  %1449 = phi i32 [ 0, %1288 ], [ %1540, %1591 ]
  %1450 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1289, label %1451, label %1520

1451:                                             ; preds = %1448, %1510
  %1452 = phi i32 [ %1519, %1510 ], [ 0, %1448 ]
  %1453 = phi i64 [ %1461, %1510 ], [ %1293, %1448 ]
  %1454 = phi i64 [ %1518, %1510 ], [ %1292, %1448 ]
  %1455 = phi i32 [ %1516, %1510 ], [ %1450, %1448 ]
  %1456 = sub i32 %1291, %1452
  %1457 = tail call i32 @llvm.smin.i32(i32 %1456, i32 0)
  %1458 = sub i32 %1456, %1457
  %1459 = zext i32 %1458 to i64
  %1460 = add nuw nsw i64 %1459, 1
  %1461 = add nsw i64 %1453, -1
  %1462 = icmp ult i32 %1458, 31
  br i1 %1462, label %1498, label %1463

1463:                                             ; preds = %1451
  %1464 = and i64 %1460, 8589934560
  %1465 = sub i64 %1454, %1464
  br label %1466

1466:                                             ; preds = %1466, %1463
  %1467 = phi i64 [ 0, %1463 ], [ %1490, %1466 ]
  %1468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1486, %1466 ]
  %1469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1487, %1466 ]
  %1470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1488, %1466 ]
  %1471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1463 ], [ %1489, %1466 ]
  %1472 = sub i64 %1454, %1467
  %1473 = getelementptr inbounds i32, ptr %11, i64 %1472
  %1474 = getelementptr inbounds i32, ptr %1473, i64 -7
  %1475 = load <8 x i32>, ptr %1474, align 4, !tbaa !6
  %1476 = shufflevector <8 x i32> %1475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1477 = getelementptr inbounds i32, ptr %1473, i64 -15
  %1478 = load <8 x i32>, ptr %1477, align 4, !tbaa !6
  %1479 = shufflevector <8 x i32> %1478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1480 = getelementptr inbounds i32, ptr %1473, i64 -23
  %1481 = load <8 x i32>, ptr %1480, align 4, !tbaa !6
  %1482 = shufflevector <8 x i32> %1481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1483 = getelementptr inbounds i32, ptr %1473, i64 -31
  %1484 = load <8 x i32>, ptr %1483, align 4, !tbaa !6
  %1485 = shufflevector <8 x i32> %1484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1486 = mul <8 x i32> %1476, %1468
  %1487 = mul <8 x i32> %1479, %1469
  %1488 = mul <8 x i32> %1482, %1470
  %1489 = mul <8 x i32> %1485, %1471
  %1490 = add nuw i64 %1467, 32
  %1491 = icmp eq i64 %1490, %1464
  br i1 %1491, label %1492, label %1466, !llvm.loop !1350

1492:                                             ; preds = %1466
  %1493 = mul <8 x i32> %1487, %1486
  %1494 = mul <8 x i32> %1488, %1493
  %1495 = mul <8 x i32> %1489, %1494
  %1496 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1495)
  %1497 = icmp eq i64 %1460, %1464
  br i1 %1497, label %1510, label %1498

1498:                                             ; preds = %1451, %1492
  %1499 = phi i64 [ %1454, %1451 ], [ %1465, %1492 ]
  %1500 = phi i32 [ 1, %1451 ], [ %1496, %1492 ]
  br label %1501

1501:                                             ; preds = %1498, %1501
  %1502 = phi i64 [ %1507, %1501 ], [ %1499, %1498 ]
  %1503 = phi i32 [ %1506, %1501 ], [ %1500, %1498 ]
  %1504 = getelementptr inbounds i32, ptr %11, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !6
  %1506 = mul nsw i32 %1505, %1503
  %1507 = add nsw i64 %1502, -1
  %1508 = trunc i64 %1502 to i32
  %1509 = icmp sgt i32 %1508, 0
  br i1 %1509, label %1501, label %1510, !llvm.loop !1351

1510:                                             ; preds = %1501, %1492
  %1511 = phi i32 [ %1496, %1492 ], [ %1506, %1501 ]
  %1512 = and i64 %1461, 4294967295
  %1513 = getelementptr inbounds i32, ptr %6, i64 %1512
  %1514 = load i32, ptr %1513, align 4, !tbaa !6
  %1515 = mul nsw i32 %1514, %1511
  %1516 = add nsw i32 %1515, %1455
  %1517 = icmp sgt i64 %1453, 2
  %1518 = add nsw i64 %1454, -1
  %1519 = add i32 %1452, 1
  br i1 %1517, label %1451, label %1520, !llvm.loop !1352

1520:                                             ; preds = %1510, %1448
  %1521 = phi i32 [ %1450, %1448 ], [ %1516, %1510 ]
  %1522 = icmp slt i32 %1521, %5
  br i1 %1522, label %1525, label %1523

1523:                                             ; preds = %1520
  %1524 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1525:                                             ; preds = %1520
  %1526 = sext i32 %1521 to i64
  %1527 = getelementptr inbounds double, ptr %1269, i64 %1526
  %1528 = load double, ptr %1527, align 8, !tbaa !19
  %1529 = fptosi double %1528 to i8
  %1530 = load i8, ptr %1271, align 1, !tbaa !12
  %1531 = sitofp i8 %1530 to double
  %1532 = sitofp i8 %1529 to double
  %1533 = icmp slt i8 %1529, 0
  %1534 = fneg fast double %1532
  %1535 = select i1 %1533, double %1534, double %1532
  %1536 = fmul fast double %1532, %1532
  %1537 = fmul fast double %1536, %1535
  %1538 = fadd fast double %1537, %1531
  %1539 = fptosi double %1538 to i8
  store i8 %1539, ptr %1271, align 1, !tbaa !12
  %1540 = add nuw nsw i32 %1449, 1
  br i1 %1290, label %1541, label %1591

1541:                                             ; preds = %1525
  %1542 = load i32, ptr %4, align 4, !tbaa !6
  %1543 = load i32, ptr %12, align 4, !tbaa !6
  %1544 = add nsw i32 %1543, -1
  %1545 = icmp slt i32 %1542, %1544
  br i1 %1545, label %1568, label %1546

1546:                                             ; preds = %1541
  %1547 = icmp eq i32 %1542, %1544
  br i1 %1547, label %1548, label %1584

1548:                                             ; preds = %1546
  store i32 0, ptr %4, align 4, !tbaa !6
  %1549 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1549, ptr %6, align 4, !tbaa !6
  br i1 %1295, label %1591, label %1550

1550:                                             ; preds = %1548, %1578
  %1551 = phi i64 [ %1582, %1578 ], [ 1, %1548 ]
  %1552 = getelementptr inbounds i32, ptr %4, i64 %1551
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %12, i64 %1551
  %1555 = load i32, ptr %1554, align 4, !tbaa !6
  %1556 = add nsw i32 %1555, -1
  %1557 = icmp slt i32 %1553, %1556
  br i1 %1557, label %1558, label %1576

1558:                                             ; preds = %1550
  br i1 %1545, label %1568, label %1559

1559:                                             ; preds = %1558
  %1560 = shl i64 %1551, 32
  %1561 = add i64 %1560, -4294967296
  %1562 = ashr exact i64 %1561, 32
  %1563 = getelementptr inbounds i32, ptr %7, i64 %1562
  %1564 = load i32, ptr %1563, align 4, !tbaa !6
  %1565 = getelementptr inbounds i32, ptr %6, i64 %1551
  %1566 = load i32, ptr %1565, align 4, !tbaa !6
  %1567 = add nsw i32 %1566, %1564
  store i32 %1567, ptr %1565, align 4, !tbaa !6
  br label %1586

1568:                                             ; preds = %1541, %1558
  %1569 = phi i32 [ %1553, %1558 ], [ %1542, %1541 ]
  %1570 = phi ptr [ %1552, %1558 ], [ %4, %1541 ]
  %1571 = phi i64 [ %1551, %1558 ], [ 0, %1541 ]
  %1572 = add nsw i32 %1569, 1
  store i32 %1572, ptr %1570, align 4, !tbaa !6
  %1573 = getelementptr inbounds i32, ptr %7, i64 %1571
  %1574 = load i32, ptr %1573, align 4, !tbaa !6
  %1575 = getelementptr inbounds i32, ptr %6, i64 %1571
  br label %1586

1576:                                             ; preds = %1550
  %1577 = icmp eq i32 %1553, %1556
  br i1 %1577, label %1578, label %1584

1578:                                             ; preds = %1576
  store i32 0, ptr %1552, align 4, !tbaa !6
  %1579 = getelementptr inbounds i32, ptr %8, i64 %1551
  %1580 = load i32, ptr %1579, align 4, !tbaa !6
  %1581 = getelementptr inbounds i32, ptr %6, i64 %1551
  store i32 %1580, ptr %1581, align 4, !tbaa !6
  %1582 = add nuw nsw i64 %1551, 1
  %1583 = icmp eq i64 %1582, %1293
  br i1 %1583, label %1591, label %1550, !llvm.loop !1353

1584:                                             ; preds = %1546, %1576
  %1585 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1586:                                             ; preds = %1559, %1568
  %1587 = phi ptr [ %1575, %1568 ], [ %1552, %1559 ]
  %1588 = phi i32 [ %1574, %1568 ], [ 1, %1559 ]
  %1589 = load i32, ptr %1587, align 4, !tbaa !6
  %1590 = add nsw i32 %1589, %1588
  store i32 %1590, ptr %1587, align 4, !tbaa !6
  br label %1591

1591:                                             ; preds = %1578, %1586, %1548, %1525
  %1592 = icmp eq i32 %1540, %5
  br i1 %1592, label %5661, label %1448, !llvm.loop !1354

1593:                                             ; preds = %1281
  %1594 = getelementptr inbounds i32, ptr %3, i64 %19
  %1595 = load i32, ptr %1594, align 4, !tbaa !6
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp sgt i32 %5, 0
  br i1 %1596, label %1607, label %1598

1598:                                             ; preds = %1593
  br i1 %1597, label %1599, label %5661

1599:                                             ; preds = %1598
  %1600 = icmp sgt i32 %13, 1
  %1601 = icmp sgt i32 %13, 0
  %1602 = add i32 %13, -2
  %1603 = zext i32 %1602 to i64
  %1604 = zext i32 %13 to i64
  %1605 = add nuw i32 %5, 1
  %1606 = icmp eq i32 %13, 1
  br label %1753

1607:                                             ; preds = %1593
  br i1 %1597, label %1608, label %5661

1608:                                             ; preds = %1607
  %1609 = icmp sgt i32 %13, 1
  %1610 = icmp sgt i32 %13, 0
  %1611 = add i32 %13, -2
  %1612 = zext i32 %1611 to i64
  %1613 = zext i32 %13 to i64
  %1614 = add nuw i32 %5, 1
  %1615 = icmp eq i32 %13, 1
  br label %1616

1616:                                             ; preds = %1608, %1751
  %1617 = phi i32 [ 0, %1608 ], [ %1703, %1751 ]
  %1618 = phi double [ 0.000000e+00, %1608 ], [ %1702, %1751 ]
  %1619 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1609, label %1620, label %1689

1620:                                             ; preds = %1616, %1679
  %1621 = phi i32 [ %1688, %1679 ], [ 0, %1616 ]
  %1622 = phi i64 [ %1630, %1679 ], [ %1613, %1616 ]
  %1623 = phi i64 [ %1687, %1679 ], [ %1612, %1616 ]
  %1624 = phi i32 [ %1685, %1679 ], [ %1619, %1616 ]
  %1625 = sub i32 %1611, %1621
  %1626 = tail call i32 @llvm.smin.i32(i32 %1625, i32 0)
  %1627 = sub i32 %1625, %1626
  %1628 = zext i32 %1627 to i64
  %1629 = add nuw nsw i64 %1628, 1
  %1630 = add nsw i64 %1622, -1
  %1631 = icmp ult i32 %1627, 31
  br i1 %1631, label %1667, label %1632

1632:                                             ; preds = %1620
  %1633 = and i64 %1629, 8589934560
  %1634 = sub i64 %1623, %1633
  br label %1635

1635:                                             ; preds = %1635, %1632
  %1636 = phi i64 [ 0, %1632 ], [ %1659, %1635 ]
  %1637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1655, %1635 ]
  %1638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1656, %1635 ]
  %1639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1657, %1635 ]
  %1640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1632 ], [ %1658, %1635 ]
  %1641 = sub i64 %1623, %1636
  %1642 = getelementptr inbounds i32, ptr %9, i64 %1641
  %1643 = getelementptr inbounds i32, ptr %1642, i64 -7
  %1644 = load <8 x i32>, ptr %1643, align 4, !tbaa !6
  %1645 = shufflevector <8 x i32> %1644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1646 = getelementptr inbounds i32, ptr %1642, i64 -15
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !6
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = getelementptr inbounds i32, ptr %1642, i64 -23
  %1650 = load <8 x i32>, ptr %1649, align 4, !tbaa !6
  %1651 = shufflevector <8 x i32> %1650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1652 = getelementptr inbounds i32, ptr %1642, i64 -31
  %1653 = load <8 x i32>, ptr %1652, align 4, !tbaa !6
  %1654 = shufflevector <8 x i32> %1653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1655 = mul <8 x i32> %1645, %1637
  %1656 = mul <8 x i32> %1648, %1638
  %1657 = mul <8 x i32> %1651, %1639
  %1658 = mul <8 x i32> %1654, %1640
  %1659 = add nuw i64 %1636, 32
  %1660 = icmp eq i64 %1659, %1633
  br i1 %1660, label %1661, label %1635, !llvm.loop !1355

1661:                                             ; preds = %1635
  %1662 = mul <8 x i32> %1656, %1655
  %1663 = mul <8 x i32> %1657, %1662
  %1664 = mul <8 x i32> %1658, %1663
  %1665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1664)
  %1666 = icmp eq i64 %1629, %1633
  br i1 %1666, label %1679, label %1667

1667:                                             ; preds = %1620, %1661
  %1668 = phi i64 [ %1623, %1620 ], [ %1634, %1661 ]
  %1669 = phi i32 [ 1, %1620 ], [ %1665, %1661 ]
  br label %1670

1670:                                             ; preds = %1667, %1670
  %1671 = phi i64 [ %1676, %1670 ], [ %1668, %1667 ]
  %1672 = phi i32 [ %1675, %1670 ], [ %1669, %1667 ]
  %1673 = getelementptr inbounds i32, ptr %9, i64 %1671
  %1674 = load i32, ptr %1673, align 4, !tbaa !6
  %1675 = mul nsw i32 %1674, %1672
  %1676 = add nsw i64 %1671, -1
  %1677 = trunc i64 %1671 to i32
  %1678 = icmp sgt i32 %1677, 0
  br i1 %1678, label %1670, label %1679, !llvm.loop !1356

1679:                                             ; preds = %1670, %1661
  %1680 = phi i32 [ %1665, %1661 ], [ %1675, %1670 ]
  %1681 = and i64 %1630, 4294967295
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = mul nsw i32 %1683, %1680
  %1685 = add nsw i32 %1684, %1624
  %1686 = icmp sgt i64 %1622, 2
  %1687 = add nsw i64 %1623, -1
  %1688 = add i32 %1621, 1
  br i1 %1686, label %1620, label %1689, !llvm.loop !1357

1689:                                             ; preds = %1679, %1616
  %1690 = phi i32 [ %1619, %1616 ], [ %1685, %1679 ]
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds double, ptr %1269, i64 %1691
  %1693 = load double, ptr %1692, align 8, !tbaa !19
  %1694 = fptosi double %1693 to i8
  %1695 = load i8, ptr %1271, align 1, !tbaa !12
  %1696 = icmp slt i8 %1694, 0
  %1697 = mul i8 %1694, %1694
  %1698 = sub i8 0, %1697
  %1699 = select i1 %1696, i8 %1698, i8 %1697
  %1700 = mul i8 %1699, %1694
  %1701 = add i8 %1700, %1695
  store i8 %1701, ptr %1271, align 1, !tbaa !12
  %1702 = fadd fast double %1618, 1.000000e+00
  %1703 = add nuw nsw i32 %1617, 1
  br i1 %1610, label %1704, label %1751

1704:                                             ; preds = %1689
  %1705 = load i32, ptr %4, align 4, !tbaa !6
  %1706 = load i32, ptr %12, align 4, !tbaa !6
  %1707 = add nsw i32 %1706, -1
  %1708 = icmp slt i32 %1705, %1707
  br i1 %1708, label %1728, label %1709

1709:                                             ; preds = %1704
  %1710 = icmp eq i32 %1705, %1707
  br i1 %1710, label %1711, label %1744

1711:                                             ; preds = %1709
  store i32 0, ptr %4, align 4, !tbaa !6
  %1712 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1712, ptr %6, align 4, !tbaa !6
  br i1 %1615, label %1751, label %1713

1713:                                             ; preds = %1711, %1738
  %1714 = phi i64 [ %1742, %1738 ], [ 1, %1711 ]
  %1715 = getelementptr inbounds i32, ptr %4, i64 %1714
  %1716 = load i32, ptr %1715, align 4, !tbaa !6
  %1717 = getelementptr inbounds i32, ptr %12, i64 %1714
  %1718 = load i32, ptr %1717, align 4, !tbaa !6
  %1719 = add nsw i32 %1718, -1
  %1720 = icmp slt i32 %1716, %1719
  br i1 %1720, label %1721, label %1736

1721:                                             ; preds = %1713
  br i1 %1708, label %1728, label %1722

1722:                                             ; preds = %1721
  %1723 = getelementptr inbounds i32, ptr %7, i64 %1714
  %1724 = load i32, ptr %1723, align 4, !tbaa !6
  %1725 = getelementptr inbounds i32, ptr %6, i64 %1714
  %1726 = load i32, ptr %1725, align 4, !tbaa !6
  %1727 = add nsw i32 %1726, %1724
  store i32 %1727, ptr %1725, align 4, !tbaa !6
  br label %1746

1728:                                             ; preds = %1704, %1721
  %1729 = phi i32 [ %1716, %1721 ], [ %1705, %1704 ]
  %1730 = phi ptr [ %1715, %1721 ], [ %4, %1704 ]
  %1731 = phi i64 [ %1714, %1721 ], [ 0, %1704 ]
  %1732 = add nsw i32 %1729, 1
  store i32 %1732, ptr %1730, align 4, !tbaa !6
  %1733 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !6
  %1735 = getelementptr inbounds i32, ptr %6, i64 %1731
  br label %1746

1736:                                             ; preds = %1713
  %1737 = icmp eq i32 %1716, %1719
  br i1 %1737, label %1738, label %1744

1738:                                             ; preds = %1736
  store i32 0, ptr %1715, align 4, !tbaa !6
  %1739 = getelementptr inbounds i32, ptr %8, i64 %1714
  %1740 = load i32, ptr %1739, align 4, !tbaa !6
  %1741 = getelementptr inbounds i32, ptr %6, i64 %1714
  store i32 %1740, ptr %1741, align 4, !tbaa !6
  %1742 = add nuw nsw i64 %1714, 1
  %1743 = icmp eq i64 %1742, %1613
  br i1 %1743, label %1751, label %1713, !llvm.loop !1358

1744:                                             ; preds = %1709, %1736
  %1745 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1746:                                             ; preds = %1722, %1728
  %1747 = phi ptr [ %1735, %1728 ], [ %1715, %1722 ]
  %1748 = phi i32 [ %1734, %1728 ], [ 1, %1722 ]
  %1749 = load i32, ptr %1747, align 4, !tbaa !6
  %1750 = add nsw i32 %1749, %1748
  store i32 %1750, ptr %1747, align 4, !tbaa !6
  br label %1751

1751:                                             ; preds = %1738, %1746, %1711, %1689
  %1752 = icmp eq i32 %1703, %5
  br i1 %1752, label %5661, label %1616, !llvm.loop !1359

1753:                                             ; preds = %1599, %1893
  %1754 = phi i32 [ 0, %1599 ], [ %1842, %1893 ]
  %1755 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1600, label %1756, label %1825

1756:                                             ; preds = %1753, %1815
  %1757 = phi i32 [ %1824, %1815 ], [ 0, %1753 ]
  %1758 = phi i64 [ %1766, %1815 ], [ %1604, %1753 ]
  %1759 = phi i64 [ %1823, %1815 ], [ %1603, %1753 ]
  %1760 = phi i32 [ %1821, %1815 ], [ %1755, %1753 ]
  %1761 = sub i32 %1602, %1757
  %1762 = tail call i32 @llvm.smin.i32(i32 %1761, i32 0)
  %1763 = sub i32 %1761, %1762
  %1764 = zext i32 %1763 to i64
  %1765 = add nuw nsw i64 %1764, 1
  %1766 = add nsw i64 %1758, -1
  %1767 = icmp ult i32 %1763, 31
  br i1 %1767, label %1803, label %1768

1768:                                             ; preds = %1756
  %1769 = and i64 %1765, 8589934560
  %1770 = sub i64 %1759, %1769
  br label %1771

1771:                                             ; preds = %1771, %1768
  %1772 = phi i64 [ 0, %1768 ], [ %1795, %1771 ]
  %1773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1791, %1771 ]
  %1774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1792, %1771 ]
  %1775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1793, %1771 ]
  %1776 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1768 ], [ %1794, %1771 ]
  %1777 = sub i64 %1759, %1772
  %1778 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1779 = getelementptr inbounds i32, ptr %1778, i64 -7
  %1780 = load <8 x i32>, ptr %1779, align 4, !tbaa !6
  %1781 = shufflevector <8 x i32> %1780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1782 = getelementptr inbounds i32, ptr %1778, i64 -15
  %1783 = load <8 x i32>, ptr %1782, align 4, !tbaa !6
  %1784 = shufflevector <8 x i32> %1783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1785 = getelementptr inbounds i32, ptr %1778, i64 -23
  %1786 = load <8 x i32>, ptr %1785, align 4, !tbaa !6
  %1787 = shufflevector <8 x i32> %1786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1788 = getelementptr inbounds i32, ptr %1778, i64 -31
  %1789 = load <8 x i32>, ptr %1788, align 4, !tbaa !6
  %1790 = shufflevector <8 x i32> %1789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1791 = mul <8 x i32> %1781, %1773
  %1792 = mul <8 x i32> %1784, %1774
  %1793 = mul <8 x i32> %1787, %1775
  %1794 = mul <8 x i32> %1790, %1776
  %1795 = add nuw i64 %1772, 32
  %1796 = icmp eq i64 %1795, %1769
  br i1 %1796, label %1797, label %1771, !llvm.loop !1360

1797:                                             ; preds = %1771
  %1798 = mul <8 x i32> %1792, %1791
  %1799 = mul <8 x i32> %1793, %1798
  %1800 = mul <8 x i32> %1794, %1799
  %1801 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1800)
  %1802 = icmp eq i64 %1765, %1769
  br i1 %1802, label %1815, label %1803

1803:                                             ; preds = %1756, %1797
  %1804 = phi i64 [ %1759, %1756 ], [ %1770, %1797 ]
  %1805 = phi i32 [ 1, %1756 ], [ %1801, %1797 ]
  br label %1806

1806:                                             ; preds = %1803, %1806
  %1807 = phi i64 [ %1812, %1806 ], [ %1804, %1803 ]
  %1808 = phi i32 [ %1811, %1806 ], [ %1805, %1803 ]
  %1809 = getelementptr inbounds i32, ptr %11, i64 %1807
  %1810 = load i32, ptr %1809, align 4, !tbaa !6
  %1811 = mul nsw i32 %1810, %1808
  %1812 = add nsw i64 %1807, -1
  %1813 = trunc i64 %1807 to i32
  %1814 = icmp sgt i32 %1813, 0
  br i1 %1814, label %1806, label %1815, !llvm.loop !1361

1815:                                             ; preds = %1806, %1797
  %1816 = phi i32 [ %1801, %1797 ], [ %1811, %1806 ]
  %1817 = and i64 %1766, 4294967295
  %1818 = getelementptr inbounds i32, ptr %6, i64 %1817
  %1819 = load i32, ptr %1818, align 4, !tbaa !6
  %1820 = mul nsw i32 %1819, %1816
  %1821 = add nsw i32 %1820, %1760
  %1822 = icmp sgt i64 %1758, 2
  %1823 = add nsw i64 %1759, -1
  %1824 = add i32 %1757, 1
  br i1 %1822, label %1756, label %1825, !llvm.loop !1362

1825:                                             ; preds = %1815, %1753
  %1826 = phi i32 [ %1755, %1753 ], [ %1821, %1815 ]
  %1827 = icmp slt i32 %1826, %5
  br i1 %1827, label %1830, label %1828

1828:                                             ; preds = %1825
  %1829 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

1830:                                             ; preds = %1825
  %1831 = sext i32 %1826 to i64
  %1832 = getelementptr inbounds double, ptr %1269, i64 %1831
  %1833 = load double, ptr %1832, align 8, !tbaa !19
  %1834 = fptosi double %1833 to i8
  %1835 = load i8, ptr %1271, align 1, !tbaa !12
  %1836 = icmp slt i8 %1834, 0
  %1837 = mul i8 %1834, %1834
  %1838 = sub i8 0, %1837
  %1839 = select i1 %1836, i8 %1838, i8 %1837
  %1840 = mul i8 %1839, %1834
  %1841 = add i8 %1840, %1835
  store i8 %1841, ptr %1271, align 1, !tbaa !12
  %1842 = add nuw nsw i32 %1754, 1
  br i1 %1601, label %1843, label %1893

1843:                                             ; preds = %1830
  %1844 = load i32, ptr %4, align 4, !tbaa !6
  %1845 = load i32, ptr %12, align 4, !tbaa !6
  %1846 = add nsw i32 %1845, -1
  %1847 = icmp slt i32 %1844, %1846
  br i1 %1847, label %1870, label %1848

1848:                                             ; preds = %1843
  %1849 = icmp eq i32 %1844, %1846
  br i1 %1849, label %1850, label %1886

1850:                                             ; preds = %1848
  store i32 0, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1851, ptr %6, align 4, !tbaa !6
  br i1 %1606, label %1893, label %1852

1852:                                             ; preds = %1850, %1880
  %1853 = phi i64 [ %1884, %1880 ], [ 1, %1850 ]
  %1854 = getelementptr inbounds i32, ptr %4, i64 %1853
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %12, i64 %1853
  %1857 = load i32, ptr %1856, align 4, !tbaa !6
  %1858 = add nsw i32 %1857, -1
  %1859 = icmp slt i32 %1855, %1858
  br i1 %1859, label %1860, label %1878

1860:                                             ; preds = %1852
  br i1 %1847, label %1870, label %1861

1861:                                             ; preds = %1860
  %1862 = shl i64 %1853, 32
  %1863 = add i64 %1862, -4294967296
  %1864 = ashr exact i64 %1863, 32
  %1865 = getelementptr inbounds i32, ptr %7, i64 %1864
  %1866 = load i32, ptr %1865, align 4, !tbaa !6
  %1867 = getelementptr inbounds i32, ptr %6, i64 %1853
  %1868 = load i32, ptr %1867, align 4, !tbaa !6
  %1869 = add nsw i32 %1868, %1866
  store i32 %1869, ptr %1867, align 4, !tbaa !6
  br label %1888

1870:                                             ; preds = %1843, %1860
  %1871 = phi i32 [ %1855, %1860 ], [ %1844, %1843 ]
  %1872 = phi ptr [ %1854, %1860 ], [ %4, %1843 ]
  %1873 = phi i64 [ %1853, %1860 ], [ 0, %1843 ]
  %1874 = add nsw i32 %1871, 1
  store i32 %1874, ptr %1872, align 4, !tbaa !6
  %1875 = getelementptr inbounds i32, ptr %7, i64 %1873
  %1876 = load i32, ptr %1875, align 4, !tbaa !6
  %1877 = getelementptr inbounds i32, ptr %6, i64 %1873
  br label %1888

1878:                                             ; preds = %1852
  %1879 = icmp eq i32 %1855, %1858
  br i1 %1879, label %1880, label %1886

1880:                                             ; preds = %1878
  store i32 0, ptr %1854, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %8, i64 %1853
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1853
  store i32 %1882, ptr %1883, align 4, !tbaa !6
  %1884 = add nuw nsw i64 %1853, 1
  %1885 = icmp eq i64 %1884, %1604
  br i1 %1885, label %1893, label %1852, !llvm.loop !1363

1886:                                             ; preds = %1848, %1878
  %1887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

1888:                                             ; preds = %1861, %1870
  %1889 = phi ptr [ %1877, %1870 ], [ %1854, %1861 ]
  %1890 = phi i32 [ %1876, %1870 ], [ 1, %1861 ]
  %1891 = load i32, ptr %1889, align 4, !tbaa !6
  %1892 = add nsw i32 %1891, %1890
  store i32 %1892, ptr %1889, align 4, !tbaa !6
  br label %1893

1893:                                             ; preds = %1880, %1888, %1850, %1830
  %1894 = icmp eq i32 %1842, %5
  br i1 %1894, label %5661, label %1753, !llvm.loop !1364

1895:                                             ; preds = %1281
  %1896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

1897:                                             ; preds = %18
  %1898 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1899 = load ptr, ptr %1898, align 8, !tbaa !10
  %1900 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1901 = load ptr, ptr %1900, align 8, !tbaa !10
  store i16 0, ptr %1901, align 2, !tbaa !79
  %1902 = icmp eq i32 %13, 0
  br i1 %1902, label %1903, label %1911

1903:                                             ; preds = %1897
  %1904 = load double, ptr %1899, align 8, !tbaa !19
  %1905 = fptosi double %1904 to i16
  %1906 = icmp slt i16 %1905, 0
  %1907 = mul i16 %1905, %1905
  %1908 = sub i16 0, %1907
  %1909 = select i1 %1906, i16 %1908, i16 %1907
  %1910 = mul i16 %1909, %1905
  store i16 %1910, ptr %1901, align 2, !tbaa !79
  br label %5661

1911:                                             ; preds = %1897
  switch i32 %1, label %2525 [
    i32 1, label %1912
    i32 0, label %2223
  ]

1912:                                             ; preds = %1911
  %1913 = getelementptr inbounds i32, ptr %3, i64 %19
  %1914 = load i32, ptr %1913, align 4, !tbaa !6
  %1915 = icmp eq i32 %1914, 0
  %1916 = icmp sgt i32 %5, 0
  br i1 %1915, label %1926, label %1917

1917:                                             ; preds = %1912
  br i1 %1916, label %1918, label %5661

1918:                                             ; preds = %1917
  %1919 = icmp sgt i32 %13, 1
  %1920 = icmp sgt i32 %13, 0
  %1921 = add i32 %13, -2
  %1922 = zext i32 %1921 to i64
  %1923 = zext i32 %13 to i64
  %1924 = add nuw i32 %5, 1
  %1925 = icmp eq i32 %13, 1
  br label %2078

1926:                                             ; preds = %1912
  br i1 %1916, label %1927, label %5661

1927:                                             ; preds = %1926
  %1928 = icmp sgt i32 %13, 1
  %1929 = icmp sgt i32 %13, 0
  %1930 = add i32 %13, -2
  %1931 = zext i32 %1930 to i64
  %1932 = zext i32 %13 to i64
  %1933 = add nuw i32 %5, 1
  %1934 = icmp eq i32 %13, 1
  br label %1935

1935:                                             ; preds = %1927, %2076
  %1936 = phi i16 [ 0, %1927 ], [ %2026, %2076 ]
  %1937 = phi i32 [ 0, %1927 ], [ %2028, %2076 ]
  %1938 = phi double [ 0.000000e+00, %1927 ], [ %2027, %2076 ]
  %1939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1928, label %1940, label %2009

1940:                                             ; preds = %1935, %1999
  %1941 = phi i32 [ %2008, %1999 ], [ 0, %1935 ]
  %1942 = phi i64 [ %1950, %1999 ], [ %1932, %1935 ]
  %1943 = phi i64 [ %2007, %1999 ], [ %1931, %1935 ]
  %1944 = phi i32 [ %2005, %1999 ], [ %1939, %1935 ]
  %1945 = sub i32 %1930, %1941
  %1946 = tail call i32 @llvm.smin.i32(i32 %1945, i32 0)
  %1947 = sub i32 %1945, %1946
  %1948 = zext i32 %1947 to i64
  %1949 = add nuw nsw i64 %1948, 1
  %1950 = add nsw i64 %1942, -1
  %1951 = icmp ult i32 %1947, 31
  br i1 %1951, label %1987, label %1952

1952:                                             ; preds = %1940
  %1953 = and i64 %1949, 8589934560
  %1954 = sub i64 %1943, %1953
  br label %1955

1955:                                             ; preds = %1955, %1952
  %1956 = phi i64 [ 0, %1952 ], [ %1979, %1955 ]
  %1957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1975, %1955 ]
  %1958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1976, %1955 ]
  %1959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1977, %1955 ]
  %1960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1952 ], [ %1978, %1955 ]
  %1961 = sub i64 %1943, %1956
  %1962 = getelementptr inbounds i32, ptr %9, i64 %1961
  %1963 = getelementptr inbounds i32, ptr %1962, i64 -7
  %1964 = load <8 x i32>, ptr %1963, align 4, !tbaa !6
  %1965 = shufflevector <8 x i32> %1964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1966 = getelementptr inbounds i32, ptr %1962, i64 -15
  %1967 = load <8 x i32>, ptr %1966, align 4, !tbaa !6
  %1968 = shufflevector <8 x i32> %1967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1969 = getelementptr inbounds i32, ptr %1962, i64 -23
  %1970 = load <8 x i32>, ptr %1969, align 4, !tbaa !6
  %1971 = shufflevector <8 x i32> %1970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1972 = getelementptr inbounds i32, ptr %1962, i64 -31
  %1973 = load <8 x i32>, ptr %1972, align 4, !tbaa !6
  %1974 = shufflevector <8 x i32> %1973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1975 = mul <8 x i32> %1965, %1957
  %1976 = mul <8 x i32> %1968, %1958
  %1977 = mul <8 x i32> %1971, %1959
  %1978 = mul <8 x i32> %1974, %1960
  %1979 = add nuw i64 %1956, 32
  %1980 = icmp eq i64 %1979, %1953
  br i1 %1980, label %1981, label %1955, !llvm.loop !1365

1981:                                             ; preds = %1955
  %1982 = mul <8 x i32> %1976, %1975
  %1983 = mul <8 x i32> %1977, %1982
  %1984 = mul <8 x i32> %1978, %1983
  %1985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1984)
  %1986 = icmp eq i64 %1949, %1953
  br i1 %1986, label %1999, label %1987

1987:                                             ; preds = %1940, %1981
  %1988 = phi i64 [ %1943, %1940 ], [ %1954, %1981 ]
  %1989 = phi i32 [ 1, %1940 ], [ %1985, %1981 ]
  br label %1990

1990:                                             ; preds = %1987, %1990
  %1991 = phi i64 [ %1996, %1990 ], [ %1988, %1987 ]
  %1992 = phi i32 [ %1995, %1990 ], [ %1989, %1987 ]
  %1993 = getelementptr inbounds i32, ptr %9, i64 %1991
  %1994 = load i32, ptr %1993, align 4, !tbaa !6
  %1995 = mul nsw i32 %1994, %1992
  %1996 = add nsw i64 %1991, -1
  %1997 = trunc i64 %1991 to i32
  %1998 = icmp sgt i32 %1997, 0
  br i1 %1998, label %1990, label %1999, !llvm.loop !1366

1999:                                             ; preds = %1990, %1981
  %2000 = phi i32 [ %1985, %1981 ], [ %1995, %1990 ]
  %2001 = and i64 %1950, 4294967295
  %2002 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = mul nsw i32 %2003, %2000
  %2005 = add nsw i32 %2004, %1944
  %2006 = icmp sgt i64 %1942, 2
  %2007 = add nsw i64 %1943, -1
  %2008 = add i32 %1941, 1
  br i1 %2006, label %1940, label %2009, !llvm.loop !1367

2009:                                             ; preds = %1999, %1935
  %2010 = phi i32 [ %1939, %1935 ], [ %2005, %1999 ]
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds double, ptr %2, i64 %2011
  %2013 = load double, ptr %2012, align 8, !tbaa !19
  %2014 = getelementptr inbounds double, ptr %1899, i64 %2011
  %2015 = load double, ptr %2014, align 8, !tbaa !19
  %2016 = fptosi double %2015 to i16
  %2017 = sitofp i16 %1936 to double
  %2018 = sitofp i16 %2016 to double
  %2019 = fmul fast double %2013, %2018
  %2020 = fcmp fast olt double %2019, 0.000000e+00
  %2021 = fneg fast double %2019
  %2022 = select nnan ninf i1 %2020, double %2021, double %2019
  %2023 = fmul fast double %2019, %2019
  %2024 = fmul fast double %2023, %2022
  %2025 = fadd fast double %2024, %2017
  %2026 = fptosi double %2025 to i16
  %2027 = fadd fast double %2013, %1938
  %2028 = add nuw nsw i32 %1937, 1
  br i1 %1929, label %2029, label %2076

2029:                                             ; preds = %2009
  %2030 = load i32, ptr %4, align 4, !tbaa !6
  %2031 = load i32, ptr %12, align 4, !tbaa !6
  %2032 = add nsw i32 %2031, -1
  %2033 = icmp slt i32 %2030, %2032
  br i1 %2033, label %2053, label %2034

2034:                                             ; preds = %2029
  %2035 = icmp eq i32 %2030, %2032
  br i1 %2035, label %2036, label %2069

2036:                                             ; preds = %2034
  store i32 0, ptr %4, align 4, !tbaa !6
  %2037 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2037, ptr %6, align 4, !tbaa !6
  br i1 %1934, label %2076, label %2038

2038:                                             ; preds = %2036, %2063
  %2039 = phi i64 [ %2067, %2063 ], [ 1, %2036 ]
  %2040 = getelementptr inbounds i32, ptr %4, i64 %2039
  %2041 = load i32, ptr %2040, align 4, !tbaa !6
  %2042 = getelementptr inbounds i32, ptr %12, i64 %2039
  %2043 = load i32, ptr %2042, align 4, !tbaa !6
  %2044 = add nsw i32 %2043, -1
  %2045 = icmp slt i32 %2041, %2044
  br i1 %2045, label %2046, label %2061

2046:                                             ; preds = %2038
  br i1 %2033, label %2053, label %2047

2047:                                             ; preds = %2046
  %2048 = getelementptr inbounds i32, ptr %7, i64 %2039
  %2049 = load i32, ptr %2048, align 4, !tbaa !6
  %2050 = getelementptr inbounds i32, ptr %6, i64 %2039
  %2051 = load i32, ptr %2050, align 4, !tbaa !6
  %2052 = add nsw i32 %2051, %2049
  store i32 %2052, ptr %2050, align 4, !tbaa !6
  br label %2071

2053:                                             ; preds = %2029, %2046
  %2054 = phi i32 [ %2041, %2046 ], [ %2030, %2029 ]
  %2055 = phi ptr [ %2040, %2046 ], [ %4, %2029 ]
  %2056 = phi i64 [ %2039, %2046 ], [ 0, %2029 ]
  %2057 = add nsw i32 %2054, 1
  store i32 %2057, ptr %2055, align 4, !tbaa !6
  %2058 = getelementptr inbounds i32, ptr %7, i64 %2056
  %2059 = load i32, ptr %2058, align 4, !tbaa !6
  %2060 = getelementptr inbounds i32, ptr %6, i64 %2056
  br label %2071

2061:                                             ; preds = %2038
  %2062 = icmp eq i32 %2041, %2044
  br i1 %2062, label %2063, label %2069

2063:                                             ; preds = %2061
  store i32 0, ptr %2040, align 4, !tbaa !6
  %2064 = getelementptr inbounds i32, ptr %8, i64 %2039
  %2065 = load i32, ptr %2064, align 4, !tbaa !6
  %2066 = getelementptr inbounds i32, ptr %6, i64 %2039
  store i32 %2065, ptr %2066, align 4, !tbaa !6
  %2067 = add nuw nsw i64 %2039, 1
  %2068 = icmp eq i64 %2067, %1932
  br i1 %2068, label %2076, label %2038, !llvm.loop !1368

2069:                                             ; preds = %2034, %2061
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  %2070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2071:                                             ; preds = %2047, %2053
  %2072 = phi ptr [ %2060, %2053 ], [ %2040, %2047 ]
  %2073 = phi i32 [ %2059, %2053 ], [ 1, %2047 ]
  %2074 = load i32, ptr %2072, align 4, !tbaa !6
  %2075 = add nsw i32 %2074, %2073
  store i32 %2075, ptr %2072, align 4, !tbaa !6
  br label %2076

2076:                                             ; preds = %2063, %2071, %2036, %2009
  %2077 = icmp eq i32 %2028, %5
  br i1 %2077, label %5655, label %1935, !llvm.loop !1369

2078:                                             ; preds = %1918, %2221
  %2079 = phi i16 [ 0, %1918 ], [ %2169, %2221 ]
  %2080 = phi i32 [ 0, %1918 ], [ %2170, %2221 ]
  %2081 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1919, label %2082, label %2151

2082:                                             ; preds = %2078, %2141
  %2083 = phi i32 [ %2150, %2141 ], [ 0, %2078 ]
  %2084 = phi i64 [ %2092, %2141 ], [ %1923, %2078 ]
  %2085 = phi i64 [ %2149, %2141 ], [ %1922, %2078 ]
  %2086 = phi i32 [ %2147, %2141 ], [ %2081, %2078 ]
  %2087 = sub i32 %1921, %2083
  %2088 = tail call i32 @llvm.smin.i32(i32 %2087, i32 0)
  %2089 = sub i32 %2087, %2088
  %2090 = zext i32 %2089 to i64
  %2091 = add nuw nsw i64 %2090, 1
  %2092 = add nsw i64 %2084, -1
  %2093 = icmp ult i32 %2089, 31
  br i1 %2093, label %2129, label %2094

2094:                                             ; preds = %2082
  %2095 = and i64 %2091, 8589934560
  %2096 = sub i64 %2085, %2095
  br label %2097

2097:                                             ; preds = %2097, %2094
  %2098 = phi i64 [ 0, %2094 ], [ %2121, %2097 ]
  %2099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2117, %2097 ]
  %2100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2118, %2097 ]
  %2101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2119, %2097 ]
  %2102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2094 ], [ %2120, %2097 ]
  %2103 = sub i64 %2085, %2098
  %2104 = getelementptr inbounds i32, ptr %11, i64 %2103
  %2105 = getelementptr inbounds i32, ptr %2104, i64 -7
  %2106 = load <8 x i32>, ptr %2105, align 4, !tbaa !6
  %2107 = shufflevector <8 x i32> %2106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2108 = getelementptr inbounds i32, ptr %2104, i64 -15
  %2109 = load <8 x i32>, ptr %2108, align 4, !tbaa !6
  %2110 = shufflevector <8 x i32> %2109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2111 = getelementptr inbounds i32, ptr %2104, i64 -23
  %2112 = load <8 x i32>, ptr %2111, align 4, !tbaa !6
  %2113 = shufflevector <8 x i32> %2112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2114 = getelementptr inbounds i32, ptr %2104, i64 -31
  %2115 = load <8 x i32>, ptr %2114, align 4, !tbaa !6
  %2116 = shufflevector <8 x i32> %2115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2117 = mul <8 x i32> %2107, %2099
  %2118 = mul <8 x i32> %2110, %2100
  %2119 = mul <8 x i32> %2113, %2101
  %2120 = mul <8 x i32> %2116, %2102
  %2121 = add nuw i64 %2098, 32
  %2122 = icmp eq i64 %2121, %2095
  br i1 %2122, label %2123, label %2097, !llvm.loop !1370

2123:                                             ; preds = %2097
  %2124 = mul <8 x i32> %2118, %2117
  %2125 = mul <8 x i32> %2119, %2124
  %2126 = mul <8 x i32> %2120, %2125
  %2127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2126)
  %2128 = icmp eq i64 %2091, %2095
  br i1 %2128, label %2141, label %2129

2129:                                             ; preds = %2082, %2123
  %2130 = phi i64 [ %2085, %2082 ], [ %2096, %2123 ]
  %2131 = phi i32 [ 1, %2082 ], [ %2127, %2123 ]
  br label %2132

2132:                                             ; preds = %2129, %2132
  %2133 = phi i64 [ %2138, %2132 ], [ %2130, %2129 ]
  %2134 = phi i32 [ %2137, %2132 ], [ %2131, %2129 ]
  %2135 = getelementptr inbounds i32, ptr %11, i64 %2133
  %2136 = load i32, ptr %2135, align 4, !tbaa !6
  %2137 = mul nsw i32 %2136, %2134
  %2138 = add nsw i64 %2133, -1
  %2139 = trunc i64 %2133 to i32
  %2140 = icmp sgt i32 %2139, 0
  br i1 %2140, label %2132, label %2141, !llvm.loop !1371

2141:                                             ; preds = %2132, %2123
  %2142 = phi i32 [ %2127, %2123 ], [ %2137, %2132 ]
  %2143 = and i64 %2092, 4294967295
  %2144 = getelementptr inbounds i32, ptr %6, i64 %2143
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = mul nsw i32 %2145, %2142
  %2147 = add nsw i32 %2146, %2086
  %2148 = icmp sgt i64 %2084, 2
  %2149 = add nsw i64 %2085, -1
  %2150 = add i32 %2083, 1
  br i1 %2148, label %2082, label %2151, !llvm.loop !1372

2151:                                             ; preds = %2141, %2078
  %2152 = phi i32 [ %2081, %2078 ], [ %2147, %2141 ]
  %2153 = icmp slt i32 %2152, %5
  br i1 %2153, label %2156, label %2154

2154:                                             ; preds = %2151
  %2155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2156:                                             ; preds = %2151
  %2157 = sext i32 %2152 to i64
  %2158 = getelementptr inbounds double, ptr %1899, i64 %2157
  %2159 = load double, ptr %2158, align 8, !tbaa !19
  %2160 = fptosi double %2159 to i16
  %2161 = sitofp i16 %2079 to double
  %2162 = sitofp i16 %2160 to double
  %2163 = icmp slt i16 %2160, 0
  %2164 = fneg fast double %2162
  %2165 = select i1 %2163, double %2164, double %2162
  %2166 = fmul fast double %2162, %2162
  %2167 = fmul fast double %2166, %2165
  %2168 = fadd fast double %2167, %2161
  %2169 = fptosi double %2168 to i16
  store i16 %2169, ptr %1901, align 2, !tbaa !79
  %2170 = add nuw nsw i32 %2080, 1
  br i1 %1920, label %2171, label %2221

2171:                                             ; preds = %2156
  %2172 = load i32, ptr %4, align 4, !tbaa !6
  %2173 = load i32, ptr %12, align 4, !tbaa !6
  %2174 = add nsw i32 %2173, -1
  %2175 = icmp slt i32 %2172, %2174
  br i1 %2175, label %2198, label %2176

2176:                                             ; preds = %2171
  %2177 = icmp eq i32 %2172, %2174
  br i1 %2177, label %2178, label %2214

2178:                                             ; preds = %2176
  store i32 0, ptr %4, align 4, !tbaa !6
  %2179 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2179, ptr %6, align 4, !tbaa !6
  br i1 %1925, label %2221, label %2180

2180:                                             ; preds = %2178, %2208
  %2181 = phi i64 [ %2212, %2208 ], [ 1, %2178 ]
  %2182 = getelementptr inbounds i32, ptr %4, i64 %2181
  %2183 = load i32, ptr %2182, align 4, !tbaa !6
  %2184 = getelementptr inbounds i32, ptr %12, i64 %2181
  %2185 = load i32, ptr %2184, align 4, !tbaa !6
  %2186 = add nsw i32 %2185, -1
  %2187 = icmp slt i32 %2183, %2186
  br i1 %2187, label %2188, label %2206

2188:                                             ; preds = %2180
  br i1 %2175, label %2198, label %2189

2189:                                             ; preds = %2188
  %2190 = shl i64 %2181, 32
  %2191 = add i64 %2190, -4294967296
  %2192 = ashr exact i64 %2191, 32
  %2193 = getelementptr inbounds i32, ptr %7, i64 %2192
  %2194 = load i32, ptr %2193, align 4, !tbaa !6
  %2195 = getelementptr inbounds i32, ptr %6, i64 %2181
  %2196 = load i32, ptr %2195, align 4, !tbaa !6
  %2197 = add nsw i32 %2196, %2194
  store i32 %2197, ptr %2195, align 4, !tbaa !6
  br label %2216

2198:                                             ; preds = %2171, %2188
  %2199 = phi i32 [ %2183, %2188 ], [ %2172, %2171 ]
  %2200 = phi ptr [ %2182, %2188 ], [ %4, %2171 ]
  %2201 = phi i64 [ %2181, %2188 ], [ 0, %2171 ]
  %2202 = add nsw i32 %2199, 1
  store i32 %2202, ptr %2200, align 4, !tbaa !6
  %2203 = getelementptr inbounds i32, ptr %7, i64 %2201
  %2204 = load i32, ptr %2203, align 4, !tbaa !6
  %2205 = getelementptr inbounds i32, ptr %6, i64 %2201
  br label %2216

2206:                                             ; preds = %2180
  %2207 = icmp eq i32 %2183, %2186
  br i1 %2207, label %2208, label %2214

2208:                                             ; preds = %2206
  store i32 0, ptr %2182, align 4, !tbaa !6
  %2209 = getelementptr inbounds i32, ptr %8, i64 %2181
  %2210 = load i32, ptr %2209, align 4, !tbaa !6
  %2211 = getelementptr inbounds i32, ptr %6, i64 %2181
  store i32 %2210, ptr %2211, align 4, !tbaa !6
  %2212 = add nuw nsw i64 %2181, 1
  %2213 = icmp eq i64 %2212, %1923
  br i1 %2213, label %2221, label %2180, !llvm.loop !1373

2214:                                             ; preds = %2176, %2206
  %2215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2216:                                             ; preds = %2189, %2198
  %2217 = phi ptr [ %2205, %2198 ], [ %2182, %2189 ]
  %2218 = phi i32 [ %2204, %2198 ], [ 1, %2189 ]
  %2219 = load i32, ptr %2217, align 4, !tbaa !6
  %2220 = add nsw i32 %2219, %2218
  store i32 %2220, ptr %2217, align 4, !tbaa !6
  br label %2221

2221:                                             ; preds = %2208, %2216, %2178, %2156
  %2222 = icmp eq i32 %2170, %5
  br i1 %2222, label %5661, label %2078, !llvm.loop !1374

2223:                                             ; preds = %1911
  %2224 = getelementptr inbounds i32, ptr %3, i64 %19
  %2225 = load i32, ptr %2224, align 4, !tbaa !6
  %2226 = icmp eq i32 %2225, 0
  %2227 = icmp sgt i32 %5, 0
  br i1 %2226, label %2237, label %2228

2228:                                             ; preds = %2223
  br i1 %2227, label %2229, label %5661

2229:                                             ; preds = %2228
  %2230 = icmp sgt i32 %13, 1
  %2231 = icmp sgt i32 %13, 0
  %2232 = add i32 %13, -2
  %2233 = zext i32 %2232 to i64
  %2234 = zext i32 %13 to i64
  %2235 = add nuw i32 %5, 1
  %2236 = icmp eq i32 %13, 1
  br label %2383

2237:                                             ; preds = %2223
  br i1 %2227, label %2238, label %5661

2238:                                             ; preds = %2237
  %2239 = icmp sgt i32 %13, 1
  %2240 = icmp sgt i32 %13, 0
  %2241 = add i32 %13, -2
  %2242 = zext i32 %2241 to i64
  %2243 = zext i32 %13 to i64
  %2244 = add nuw i32 %5, 1
  %2245 = icmp eq i32 %13, 1
  br label %2246

2246:                                             ; preds = %2238, %2381
  %2247 = phi i16 [ 0, %2238 ], [ %2331, %2381 ]
  %2248 = phi i32 [ 0, %2238 ], [ %2333, %2381 ]
  %2249 = phi double [ 0.000000e+00, %2238 ], [ %2332, %2381 ]
  %2250 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2239, label %2251, label %2320

2251:                                             ; preds = %2246, %2310
  %2252 = phi i32 [ %2319, %2310 ], [ 0, %2246 ]
  %2253 = phi i64 [ %2261, %2310 ], [ %2243, %2246 ]
  %2254 = phi i64 [ %2318, %2310 ], [ %2242, %2246 ]
  %2255 = phi i32 [ %2316, %2310 ], [ %2250, %2246 ]
  %2256 = sub i32 %2241, %2252
  %2257 = tail call i32 @llvm.smin.i32(i32 %2256, i32 0)
  %2258 = sub i32 %2256, %2257
  %2259 = zext i32 %2258 to i64
  %2260 = add nuw nsw i64 %2259, 1
  %2261 = add nsw i64 %2253, -1
  %2262 = icmp ult i32 %2258, 31
  br i1 %2262, label %2298, label %2263

2263:                                             ; preds = %2251
  %2264 = and i64 %2260, 8589934560
  %2265 = sub i64 %2254, %2264
  br label %2266

2266:                                             ; preds = %2266, %2263
  %2267 = phi i64 [ 0, %2263 ], [ %2290, %2266 ]
  %2268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2286, %2266 ]
  %2269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2287, %2266 ]
  %2270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2288, %2266 ]
  %2271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2263 ], [ %2289, %2266 ]
  %2272 = sub i64 %2254, %2267
  %2273 = getelementptr inbounds i32, ptr %9, i64 %2272
  %2274 = getelementptr inbounds i32, ptr %2273, i64 -7
  %2275 = load <8 x i32>, ptr %2274, align 4, !tbaa !6
  %2276 = shufflevector <8 x i32> %2275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2277 = getelementptr inbounds i32, ptr %2273, i64 -15
  %2278 = load <8 x i32>, ptr %2277, align 4, !tbaa !6
  %2279 = shufflevector <8 x i32> %2278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2280 = getelementptr inbounds i32, ptr %2273, i64 -23
  %2281 = load <8 x i32>, ptr %2280, align 4, !tbaa !6
  %2282 = shufflevector <8 x i32> %2281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2283 = getelementptr inbounds i32, ptr %2273, i64 -31
  %2284 = load <8 x i32>, ptr %2283, align 4, !tbaa !6
  %2285 = shufflevector <8 x i32> %2284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2286 = mul <8 x i32> %2276, %2268
  %2287 = mul <8 x i32> %2279, %2269
  %2288 = mul <8 x i32> %2282, %2270
  %2289 = mul <8 x i32> %2285, %2271
  %2290 = add nuw i64 %2267, 32
  %2291 = icmp eq i64 %2290, %2264
  br i1 %2291, label %2292, label %2266, !llvm.loop !1375

2292:                                             ; preds = %2266
  %2293 = mul <8 x i32> %2287, %2286
  %2294 = mul <8 x i32> %2288, %2293
  %2295 = mul <8 x i32> %2289, %2294
  %2296 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2295)
  %2297 = icmp eq i64 %2260, %2264
  br i1 %2297, label %2310, label %2298

2298:                                             ; preds = %2251, %2292
  %2299 = phi i64 [ %2254, %2251 ], [ %2265, %2292 ]
  %2300 = phi i32 [ 1, %2251 ], [ %2296, %2292 ]
  br label %2301

2301:                                             ; preds = %2298, %2301
  %2302 = phi i64 [ %2307, %2301 ], [ %2299, %2298 ]
  %2303 = phi i32 [ %2306, %2301 ], [ %2300, %2298 ]
  %2304 = getelementptr inbounds i32, ptr %9, i64 %2302
  %2305 = load i32, ptr %2304, align 4, !tbaa !6
  %2306 = mul nsw i32 %2305, %2303
  %2307 = add nsw i64 %2302, -1
  %2308 = trunc i64 %2302 to i32
  %2309 = icmp sgt i32 %2308, 0
  br i1 %2309, label %2301, label %2310, !llvm.loop !1376

2310:                                             ; preds = %2301, %2292
  %2311 = phi i32 [ %2296, %2292 ], [ %2306, %2301 ]
  %2312 = and i64 %2261, 4294967295
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2312
  %2314 = load i32, ptr %2313, align 4, !tbaa !6
  %2315 = mul nsw i32 %2314, %2311
  %2316 = add nsw i32 %2315, %2255
  %2317 = icmp sgt i64 %2253, 2
  %2318 = add nsw i64 %2254, -1
  %2319 = add i32 %2252, 1
  br i1 %2317, label %2251, label %2320, !llvm.loop !1377

2320:                                             ; preds = %2310, %2246
  %2321 = phi i32 [ %2250, %2246 ], [ %2316, %2310 ]
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds double, ptr %1899, i64 %2322
  %2324 = load double, ptr %2323, align 8, !tbaa !19
  %2325 = fptosi double %2324 to i16
  %2326 = icmp slt i16 %2325, 0
  %2327 = mul i16 %2325, %2325
  %2328 = sub i16 0, %2327
  %2329 = select i1 %2326, i16 %2328, i16 %2327
  %2330 = mul i16 %2329, %2325
  %2331 = add i16 %2330, %2247
  %2332 = fadd fast double %2249, 1.000000e+00
  %2333 = add nuw nsw i32 %2248, 1
  br i1 %2240, label %2334, label %2381

2334:                                             ; preds = %2320
  %2335 = load i32, ptr %4, align 4, !tbaa !6
  %2336 = load i32, ptr %12, align 4, !tbaa !6
  %2337 = add nsw i32 %2336, -1
  %2338 = icmp slt i32 %2335, %2337
  br i1 %2338, label %2358, label %2339

2339:                                             ; preds = %2334
  %2340 = icmp eq i32 %2335, %2337
  br i1 %2340, label %2341, label %2374

2341:                                             ; preds = %2339
  store i32 0, ptr %4, align 4, !tbaa !6
  %2342 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2342, ptr %6, align 4, !tbaa !6
  br i1 %2245, label %2381, label %2343

2343:                                             ; preds = %2341, %2368
  %2344 = phi i64 [ %2372, %2368 ], [ 1, %2341 ]
  %2345 = getelementptr inbounds i32, ptr %4, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !6
  %2347 = getelementptr inbounds i32, ptr %12, i64 %2344
  %2348 = load i32, ptr %2347, align 4, !tbaa !6
  %2349 = add nsw i32 %2348, -1
  %2350 = icmp slt i32 %2346, %2349
  br i1 %2350, label %2351, label %2366

2351:                                             ; preds = %2343
  br i1 %2338, label %2358, label %2352

2352:                                             ; preds = %2351
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2344
  %2354 = load i32, ptr %2353, align 4, !tbaa !6
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2356 = load i32, ptr %2355, align 4, !tbaa !6
  %2357 = add nsw i32 %2356, %2354
  store i32 %2357, ptr %2355, align 4, !tbaa !6
  br label %2376

2358:                                             ; preds = %2334, %2351
  %2359 = phi i32 [ %2346, %2351 ], [ %2335, %2334 ]
  %2360 = phi ptr [ %2345, %2351 ], [ %4, %2334 ]
  %2361 = phi i64 [ %2344, %2351 ], [ 0, %2334 ]
  %2362 = add nsw i32 %2359, 1
  store i32 %2362, ptr %2360, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = getelementptr inbounds i32, ptr %6, i64 %2361
  br label %2376

2366:                                             ; preds = %2343
  %2367 = icmp eq i32 %2346, %2349
  br i1 %2367, label %2368, label %2374

2368:                                             ; preds = %2366
  store i32 0, ptr %2345, align 4, !tbaa !6
  %2369 = getelementptr inbounds i32, ptr %8, i64 %2344
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2344
  store i32 %2370, ptr %2371, align 4, !tbaa !6
  %2372 = add nuw nsw i64 %2344, 1
  %2373 = icmp eq i64 %2372, %2243
  br i1 %2373, label %2381, label %2343, !llvm.loop !1378

2374:                                             ; preds = %2339, %2366
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  %2375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2376:                                             ; preds = %2352, %2358
  %2377 = phi ptr [ %2365, %2358 ], [ %2345, %2352 ]
  %2378 = phi i32 [ %2364, %2358 ], [ 1, %2352 ]
  %2379 = load i32, ptr %2377, align 4, !tbaa !6
  %2380 = add nsw i32 %2379, %2378
  store i32 %2380, ptr %2377, align 4, !tbaa !6
  br label %2381

2381:                                             ; preds = %2368, %2376, %2341, %2320
  %2382 = icmp eq i32 %2333, %5
  br i1 %2382, label %5656, label %2246, !llvm.loop !1379

2383:                                             ; preds = %2229, %2523
  %2384 = phi i16 [ 0, %2229 ], [ %2471, %2523 ]
  %2385 = phi i32 [ 0, %2229 ], [ %2472, %2523 ]
  %2386 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2230, label %2387, label %2456

2387:                                             ; preds = %2383, %2446
  %2388 = phi i32 [ %2455, %2446 ], [ 0, %2383 ]
  %2389 = phi i64 [ %2397, %2446 ], [ %2234, %2383 ]
  %2390 = phi i64 [ %2454, %2446 ], [ %2233, %2383 ]
  %2391 = phi i32 [ %2452, %2446 ], [ %2386, %2383 ]
  %2392 = sub i32 %2232, %2388
  %2393 = tail call i32 @llvm.smin.i32(i32 %2392, i32 0)
  %2394 = sub i32 %2392, %2393
  %2395 = zext i32 %2394 to i64
  %2396 = add nuw nsw i64 %2395, 1
  %2397 = add nsw i64 %2389, -1
  %2398 = icmp ult i32 %2394, 31
  br i1 %2398, label %2434, label %2399

2399:                                             ; preds = %2387
  %2400 = and i64 %2396, 8589934560
  %2401 = sub i64 %2390, %2400
  br label %2402

2402:                                             ; preds = %2402, %2399
  %2403 = phi i64 [ 0, %2399 ], [ %2426, %2402 ]
  %2404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2422, %2402 ]
  %2405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2423, %2402 ]
  %2406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2424, %2402 ]
  %2407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2399 ], [ %2425, %2402 ]
  %2408 = sub i64 %2390, %2403
  %2409 = getelementptr inbounds i32, ptr %11, i64 %2408
  %2410 = getelementptr inbounds i32, ptr %2409, i64 -7
  %2411 = load <8 x i32>, ptr %2410, align 4, !tbaa !6
  %2412 = shufflevector <8 x i32> %2411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2413 = getelementptr inbounds i32, ptr %2409, i64 -15
  %2414 = load <8 x i32>, ptr %2413, align 4, !tbaa !6
  %2415 = shufflevector <8 x i32> %2414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2416 = getelementptr inbounds i32, ptr %2409, i64 -23
  %2417 = load <8 x i32>, ptr %2416, align 4, !tbaa !6
  %2418 = shufflevector <8 x i32> %2417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2419 = getelementptr inbounds i32, ptr %2409, i64 -31
  %2420 = load <8 x i32>, ptr %2419, align 4, !tbaa !6
  %2421 = shufflevector <8 x i32> %2420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2422 = mul <8 x i32> %2412, %2404
  %2423 = mul <8 x i32> %2415, %2405
  %2424 = mul <8 x i32> %2418, %2406
  %2425 = mul <8 x i32> %2421, %2407
  %2426 = add nuw i64 %2403, 32
  %2427 = icmp eq i64 %2426, %2400
  br i1 %2427, label %2428, label %2402, !llvm.loop !1380

2428:                                             ; preds = %2402
  %2429 = mul <8 x i32> %2423, %2422
  %2430 = mul <8 x i32> %2424, %2429
  %2431 = mul <8 x i32> %2425, %2430
  %2432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2431)
  %2433 = icmp eq i64 %2396, %2400
  br i1 %2433, label %2446, label %2434

2434:                                             ; preds = %2387, %2428
  %2435 = phi i64 [ %2390, %2387 ], [ %2401, %2428 ]
  %2436 = phi i32 [ 1, %2387 ], [ %2432, %2428 ]
  br label %2437

2437:                                             ; preds = %2434, %2437
  %2438 = phi i64 [ %2443, %2437 ], [ %2435, %2434 ]
  %2439 = phi i32 [ %2442, %2437 ], [ %2436, %2434 ]
  %2440 = getelementptr inbounds i32, ptr %11, i64 %2438
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = mul nsw i32 %2441, %2439
  %2443 = add nsw i64 %2438, -1
  %2444 = trunc i64 %2438 to i32
  %2445 = icmp sgt i32 %2444, 0
  br i1 %2445, label %2437, label %2446, !llvm.loop !1381

2446:                                             ; preds = %2437, %2428
  %2447 = phi i32 [ %2432, %2428 ], [ %2442, %2437 ]
  %2448 = and i64 %2397, 4294967295
  %2449 = getelementptr inbounds i32, ptr %6, i64 %2448
  %2450 = load i32, ptr %2449, align 4, !tbaa !6
  %2451 = mul nsw i32 %2450, %2447
  %2452 = add nsw i32 %2451, %2391
  %2453 = icmp sgt i64 %2389, 2
  %2454 = add nsw i64 %2390, -1
  %2455 = add i32 %2388, 1
  br i1 %2453, label %2387, label %2456, !llvm.loop !1382

2456:                                             ; preds = %2446, %2383
  %2457 = phi i32 [ %2386, %2383 ], [ %2452, %2446 ]
  %2458 = icmp slt i32 %2457, %5
  br i1 %2458, label %2461, label %2459

2459:                                             ; preds = %2456
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2461:                                             ; preds = %2456
  %2462 = sext i32 %2457 to i64
  %2463 = getelementptr inbounds double, ptr %1899, i64 %2462
  %2464 = load double, ptr %2463, align 8, !tbaa !19
  %2465 = fptosi double %2464 to i16
  %2466 = icmp slt i16 %2465, 0
  %2467 = mul i16 %2465, %2465
  %2468 = sub i16 0, %2467
  %2469 = select i1 %2466, i16 %2468, i16 %2467
  %2470 = mul i16 %2469, %2465
  %2471 = add i16 %2470, %2384
  store i16 %2471, ptr %1901, align 2, !tbaa !79
  %2472 = add nuw nsw i32 %2385, 1
  br i1 %2231, label %2473, label %2523

2473:                                             ; preds = %2461
  %2474 = load i32, ptr %4, align 4, !tbaa !6
  %2475 = load i32, ptr %12, align 4, !tbaa !6
  %2476 = add nsw i32 %2475, -1
  %2477 = icmp slt i32 %2474, %2476
  br i1 %2477, label %2500, label %2478

2478:                                             ; preds = %2473
  %2479 = icmp eq i32 %2474, %2476
  br i1 %2479, label %2480, label %2516

2480:                                             ; preds = %2478
  store i32 0, ptr %4, align 4, !tbaa !6
  %2481 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2481, ptr %6, align 4, !tbaa !6
  br i1 %2236, label %2523, label %2482

2482:                                             ; preds = %2480, %2510
  %2483 = phi i64 [ %2514, %2510 ], [ 1, %2480 ]
  %2484 = getelementptr inbounds i32, ptr %4, i64 %2483
  %2485 = load i32, ptr %2484, align 4, !tbaa !6
  %2486 = getelementptr inbounds i32, ptr %12, i64 %2483
  %2487 = load i32, ptr %2486, align 4, !tbaa !6
  %2488 = add nsw i32 %2487, -1
  %2489 = icmp slt i32 %2485, %2488
  br i1 %2489, label %2490, label %2508

2490:                                             ; preds = %2482
  br i1 %2477, label %2500, label %2491

2491:                                             ; preds = %2490
  %2492 = shl i64 %2483, 32
  %2493 = add i64 %2492, -4294967296
  %2494 = ashr exact i64 %2493, 32
  %2495 = getelementptr inbounds i32, ptr %7, i64 %2494
  %2496 = load i32, ptr %2495, align 4, !tbaa !6
  %2497 = getelementptr inbounds i32, ptr %6, i64 %2483
  %2498 = load i32, ptr %2497, align 4, !tbaa !6
  %2499 = add nsw i32 %2498, %2496
  store i32 %2499, ptr %2497, align 4, !tbaa !6
  br label %2518

2500:                                             ; preds = %2473, %2490
  %2501 = phi i32 [ %2485, %2490 ], [ %2474, %2473 ]
  %2502 = phi ptr [ %2484, %2490 ], [ %4, %2473 ]
  %2503 = phi i64 [ %2483, %2490 ], [ 0, %2473 ]
  %2504 = add nsw i32 %2501, 1
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  %2505 = getelementptr inbounds i32, ptr %7, i64 %2503
  %2506 = load i32, ptr %2505, align 4, !tbaa !6
  %2507 = getelementptr inbounds i32, ptr %6, i64 %2503
  br label %2518

2508:                                             ; preds = %2482
  %2509 = icmp eq i32 %2485, %2488
  br i1 %2509, label %2510, label %2516

2510:                                             ; preds = %2508
  store i32 0, ptr %2484, align 4, !tbaa !6
  %2511 = getelementptr inbounds i32, ptr %8, i64 %2483
  %2512 = load i32, ptr %2511, align 4, !tbaa !6
  %2513 = getelementptr inbounds i32, ptr %6, i64 %2483
  store i32 %2512, ptr %2513, align 4, !tbaa !6
  %2514 = add nuw nsw i64 %2483, 1
  %2515 = icmp eq i64 %2514, %2234
  br i1 %2515, label %2523, label %2482, !llvm.loop !1383

2516:                                             ; preds = %2478, %2508
  %2517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2518:                                             ; preds = %2491, %2500
  %2519 = phi ptr [ %2507, %2500 ], [ %2484, %2491 ]
  %2520 = phi i32 [ %2506, %2500 ], [ 1, %2491 ]
  %2521 = load i32, ptr %2519, align 4, !tbaa !6
  %2522 = add nsw i32 %2521, %2520
  store i32 %2522, ptr %2519, align 4, !tbaa !6
  br label %2523

2523:                                             ; preds = %2510, %2518, %2480, %2461
  %2524 = icmp eq i32 %2472, %5
  br i1 %2524, label %5661, label %2383, !llvm.loop !1384

2525:                                             ; preds = %1911
  %2526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2284, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

2527:                                             ; preds = %18
  %2528 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2529 = load ptr, ptr %2528, align 8, !tbaa !10
  %2530 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2531 = load ptr, ptr %2530, align 8, !tbaa !10
  store i32 0, ptr %2531, align 4, !tbaa !6
  %2532 = icmp eq i32 %13, 0
  br i1 %2532, label %2533, label %2541

2533:                                             ; preds = %2527
  %2534 = load double, ptr %2529, align 8, !tbaa !19
  %2535 = fptosi double %2534 to i32
  %2536 = icmp slt i32 %2535, 0
  %2537 = mul nsw i32 %2535, %2535
  %2538 = sub nsw i32 0, %2537
  %2539 = select i1 %2536, i32 %2538, i32 %2537
  %2540 = mul i32 %2539, %2535
  store i32 %2540, ptr %2531, align 4, !tbaa !6
  br label %5661

2541:                                             ; preds = %2527
  switch i32 %1, label %3155 [
    i32 1, label %2542
    i32 0, label %2853
  ]

2542:                                             ; preds = %2541
  %2543 = getelementptr inbounds i32, ptr %3, i64 %19
  %2544 = load i32, ptr %2543, align 4, !tbaa !6
  %2545 = icmp eq i32 %2544, 0
  %2546 = icmp sgt i32 %5, 0
  br i1 %2545, label %2556, label %2547

2547:                                             ; preds = %2542
  br i1 %2546, label %2548, label %5661

2548:                                             ; preds = %2547
  %2549 = icmp sgt i32 %13, 1
  %2550 = icmp sgt i32 %13, 0
  %2551 = add i32 %13, -2
  %2552 = zext i32 %2551 to i64
  %2553 = zext i32 %13 to i64
  %2554 = add nuw i32 %5, 1
  %2555 = icmp eq i32 %13, 1
  br label %2708

2556:                                             ; preds = %2542
  br i1 %2546, label %2557, label %5661

2557:                                             ; preds = %2556
  %2558 = icmp sgt i32 %13, 1
  %2559 = icmp sgt i32 %13, 0
  %2560 = add i32 %13, -2
  %2561 = zext i32 %2560 to i64
  %2562 = zext i32 %13 to i64
  %2563 = add nuw i32 %5, 1
  %2564 = icmp eq i32 %13, 1
  br label %2565

2565:                                             ; preds = %2557, %2706
  %2566 = phi i32 [ 0, %2557 ], [ %2658, %2706 ]
  %2567 = phi double [ 0.000000e+00, %2557 ], [ %2657, %2706 ]
  %2568 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2558, label %2569, label %2638

2569:                                             ; preds = %2565, %2628
  %2570 = phi i32 [ %2637, %2628 ], [ 0, %2565 ]
  %2571 = phi i64 [ %2579, %2628 ], [ %2562, %2565 ]
  %2572 = phi i64 [ %2636, %2628 ], [ %2561, %2565 ]
  %2573 = phi i32 [ %2634, %2628 ], [ %2568, %2565 ]
  %2574 = sub i32 %2560, %2570
  %2575 = tail call i32 @llvm.smin.i32(i32 %2574, i32 0)
  %2576 = sub i32 %2574, %2575
  %2577 = zext i32 %2576 to i64
  %2578 = add nuw nsw i64 %2577, 1
  %2579 = add nsw i64 %2571, -1
  %2580 = icmp ult i32 %2576, 31
  br i1 %2580, label %2616, label %2581

2581:                                             ; preds = %2569
  %2582 = and i64 %2578, 8589934560
  %2583 = sub i64 %2572, %2582
  br label %2584

2584:                                             ; preds = %2584, %2581
  %2585 = phi i64 [ 0, %2581 ], [ %2608, %2584 ]
  %2586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2604, %2584 ]
  %2587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2605, %2584 ]
  %2588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2606, %2584 ]
  %2589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2581 ], [ %2607, %2584 ]
  %2590 = sub i64 %2572, %2585
  %2591 = getelementptr inbounds i32, ptr %9, i64 %2590
  %2592 = getelementptr inbounds i32, ptr %2591, i64 -7
  %2593 = load <8 x i32>, ptr %2592, align 4, !tbaa !6
  %2594 = shufflevector <8 x i32> %2593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2595 = getelementptr inbounds i32, ptr %2591, i64 -15
  %2596 = load <8 x i32>, ptr %2595, align 4, !tbaa !6
  %2597 = shufflevector <8 x i32> %2596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2598 = getelementptr inbounds i32, ptr %2591, i64 -23
  %2599 = load <8 x i32>, ptr %2598, align 4, !tbaa !6
  %2600 = shufflevector <8 x i32> %2599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2601 = getelementptr inbounds i32, ptr %2591, i64 -31
  %2602 = load <8 x i32>, ptr %2601, align 4, !tbaa !6
  %2603 = shufflevector <8 x i32> %2602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2604 = mul <8 x i32> %2594, %2586
  %2605 = mul <8 x i32> %2597, %2587
  %2606 = mul <8 x i32> %2600, %2588
  %2607 = mul <8 x i32> %2603, %2589
  %2608 = add nuw i64 %2585, 32
  %2609 = icmp eq i64 %2608, %2582
  br i1 %2609, label %2610, label %2584, !llvm.loop !1385

2610:                                             ; preds = %2584
  %2611 = mul <8 x i32> %2605, %2604
  %2612 = mul <8 x i32> %2606, %2611
  %2613 = mul <8 x i32> %2607, %2612
  %2614 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2613)
  %2615 = icmp eq i64 %2578, %2582
  br i1 %2615, label %2628, label %2616

2616:                                             ; preds = %2569, %2610
  %2617 = phi i64 [ %2572, %2569 ], [ %2583, %2610 ]
  %2618 = phi i32 [ 1, %2569 ], [ %2614, %2610 ]
  br label %2619

2619:                                             ; preds = %2616, %2619
  %2620 = phi i64 [ %2625, %2619 ], [ %2617, %2616 ]
  %2621 = phi i32 [ %2624, %2619 ], [ %2618, %2616 ]
  %2622 = getelementptr inbounds i32, ptr %9, i64 %2620
  %2623 = load i32, ptr %2622, align 4, !tbaa !6
  %2624 = mul nsw i32 %2623, %2621
  %2625 = add nsw i64 %2620, -1
  %2626 = trunc i64 %2620 to i32
  %2627 = icmp sgt i32 %2626, 0
  br i1 %2627, label %2619, label %2628, !llvm.loop !1386

2628:                                             ; preds = %2619, %2610
  %2629 = phi i32 [ %2614, %2610 ], [ %2624, %2619 ]
  %2630 = and i64 %2579, 4294967295
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2630
  %2632 = load i32, ptr %2631, align 4, !tbaa !6
  %2633 = mul nsw i32 %2632, %2629
  %2634 = add nsw i32 %2633, %2573
  %2635 = icmp sgt i64 %2571, 2
  %2636 = add nsw i64 %2572, -1
  %2637 = add i32 %2570, 1
  br i1 %2635, label %2569, label %2638, !llvm.loop !1387

2638:                                             ; preds = %2628, %2565
  %2639 = phi i32 [ %2568, %2565 ], [ %2634, %2628 ]
  %2640 = sext i32 %2639 to i64
  %2641 = getelementptr inbounds double, ptr %2, i64 %2640
  %2642 = load double, ptr %2641, align 8, !tbaa !19
  %2643 = getelementptr inbounds double, ptr %2529, i64 %2640
  %2644 = load double, ptr %2643, align 8, !tbaa !19
  %2645 = fptosi double %2644 to i32
  %2646 = load i32, ptr %2531, align 4, !tbaa !6
  %2647 = sitofp i32 %2646 to double
  %2648 = sitofp i32 %2645 to double
  %2649 = fmul fast double %2642, %2648
  %2650 = fcmp fast olt double %2649, 0.000000e+00
  %2651 = fneg fast double %2649
  %2652 = select nnan ninf i1 %2650, double %2651, double %2649
  %2653 = fmul fast double %2649, %2649
  %2654 = fmul fast double %2653, %2652
  %2655 = fadd fast double %2654, %2647
  %2656 = fptosi double %2655 to i32
  store i32 %2656, ptr %2531, align 4, !tbaa !6
  %2657 = fadd fast double %2642, %2567
  %2658 = add nuw nsw i32 %2566, 1
  br i1 %2559, label %2659, label %2706

2659:                                             ; preds = %2638
  %2660 = load i32, ptr %4, align 4, !tbaa !6
  %2661 = load i32, ptr %12, align 4, !tbaa !6
  %2662 = add nsw i32 %2661, -1
  %2663 = icmp slt i32 %2660, %2662
  br i1 %2663, label %2683, label %2664

2664:                                             ; preds = %2659
  %2665 = icmp eq i32 %2660, %2662
  br i1 %2665, label %2666, label %2699

2666:                                             ; preds = %2664
  store i32 0, ptr %4, align 4, !tbaa !6
  %2667 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2667, ptr %6, align 4, !tbaa !6
  br i1 %2564, label %2706, label %2668

2668:                                             ; preds = %2666, %2693
  %2669 = phi i64 [ %2697, %2693 ], [ 1, %2666 ]
  %2670 = getelementptr inbounds i32, ptr %4, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !6
  %2672 = getelementptr inbounds i32, ptr %12, i64 %2669
  %2673 = load i32, ptr %2672, align 4, !tbaa !6
  %2674 = add nsw i32 %2673, -1
  %2675 = icmp slt i32 %2671, %2674
  br i1 %2675, label %2676, label %2691

2676:                                             ; preds = %2668
  br i1 %2663, label %2683, label %2677

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds i32, ptr %7, i64 %2669
  %2679 = load i32, ptr %2678, align 4, !tbaa !6
  %2680 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2681 = load i32, ptr %2680, align 4, !tbaa !6
  %2682 = add nsw i32 %2681, %2679
  store i32 %2682, ptr %2680, align 4, !tbaa !6
  br label %2701

2683:                                             ; preds = %2659, %2676
  %2684 = phi i32 [ %2671, %2676 ], [ %2660, %2659 ]
  %2685 = phi ptr [ %2670, %2676 ], [ %4, %2659 ]
  %2686 = phi i64 [ %2669, %2676 ], [ 0, %2659 ]
  %2687 = add nsw i32 %2684, 1
  store i32 %2687, ptr %2685, align 4, !tbaa !6
  %2688 = getelementptr inbounds i32, ptr %7, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !6
  %2690 = getelementptr inbounds i32, ptr %6, i64 %2686
  br label %2701

2691:                                             ; preds = %2668
  %2692 = icmp eq i32 %2671, %2674
  br i1 %2692, label %2693, label %2699

2693:                                             ; preds = %2691
  store i32 0, ptr %2670, align 4, !tbaa !6
  %2694 = getelementptr inbounds i32, ptr %8, i64 %2669
  %2695 = load i32, ptr %2694, align 4, !tbaa !6
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2669
  store i32 %2695, ptr %2696, align 4, !tbaa !6
  %2697 = add nuw nsw i64 %2669, 1
  %2698 = icmp eq i64 %2697, %2562
  br i1 %2698, label %2706, label %2668, !llvm.loop !1388

2699:                                             ; preds = %2664, %2691
  %2700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2701:                                             ; preds = %2677, %2683
  %2702 = phi ptr [ %2690, %2683 ], [ %2670, %2677 ]
  %2703 = phi i32 [ %2689, %2683 ], [ 1, %2677 ]
  %2704 = load i32, ptr %2702, align 4, !tbaa !6
  %2705 = add nsw i32 %2704, %2703
  store i32 %2705, ptr %2702, align 4, !tbaa !6
  br label %2706

2706:                                             ; preds = %2693, %2701, %2666, %2638
  %2707 = icmp eq i32 %2658, %5
  br i1 %2707, label %5661, label %2565, !llvm.loop !1389

2708:                                             ; preds = %2548, %2851
  %2709 = phi i32 [ 0, %2548 ], [ %2800, %2851 ]
  %2710 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2549, label %2711, label %2780

2711:                                             ; preds = %2708, %2770
  %2712 = phi i32 [ %2779, %2770 ], [ 0, %2708 ]
  %2713 = phi i64 [ %2721, %2770 ], [ %2553, %2708 ]
  %2714 = phi i64 [ %2778, %2770 ], [ %2552, %2708 ]
  %2715 = phi i32 [ %2776, %2770 ], [ %2710, %2708 ]
  %2716 = sub i32 %2551, %2712
  %2717 = tail call i32 @llvm.smin.i32(i32 %2716, i32 0)
  %2718 = sub i32 %2716, %2717
  %2719 = zext i32 %2718 to i64
  %2720 = add nuw nsw i64 %2719, 1
  %2721 = add nsw i64 %2713, -1
  %2722 = icmp ult i32 %2718, 31
  br i1 %2722, label %2758, label %2723

2723:                                             ; preds = %2711
  %2724 = and i64 %2720, 8589934560
  %2725 = sub i64 %2714, %2724
  br label %2726

2726:                                             ; preds = %2726, %2723
  %2727 = phi i64 [ 0, %2723 ], [ %2750, %2726 ]
  %2728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2746, %2726 ]
  %2729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2747, %2726 ]
  %2730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2748, %2726 ]
  %2731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2749, %2726 ]
  %2732 = sub i64 %2714, %2727
  %2733 = getelementptr inbounds i32, ptr %11, i64 %2732
  %2734 = getelementptr inbounds i32, ptr %2733, i64 -7
  %2735 = load <8 x i32>, ptr %2734, align 4, !tbaa !6
  %2736 = shufflevector <8 x i32> %2735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2737 = getelementptr inbounds i32, ptr %2733, i64 -15
  %2738 = load <8 x i32>, ptr %2737, align 4, !tbaa !6
  %2739 = shufflevector <8 x i32> %2738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2740 = getelementptr inbounds i32, ptr %2733, i64 -23
  %2741 = load <8 x i32>, ptr %2740, align 4, !tbaa !6
  %2742 = shufflevector <8 x i32> %2741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2743 = getelementptr inbounds i32, ptr %2733, i64 -31
  %2744 = load <8 x i32>, ptr %2743, align 4, !tbaa !6
  %2745 = shufflevector <8 x i32> %2744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2746 = mul <8 x i32> %2736, %2728
  %2747 = mul <8 x i32> %2739, %2729
  %2748 = mul <8 x i32> %2742, %2730
  %2749 = mul <8 x i32> %2745, %2731
  %2750 = add nuw i64 %2727, 32
  %2751 = icmp eq i64 %2750, %2724
  br i1 %2751, label %2752, label %2726, !llvm.loop !1390

2752:                                             ; preds = %2726
  %2753 = mul <8 x i32> %2747, %2746
  %2754 = mul <8 x i32> %2748, %2753
  %2755 = mul <8 x i32> %2749, %2754
  %2756 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2755)
  %2757 = icmp eq i64 %2720, %2724
  br i1 %2757, label %2770, label %2758

2758:                                             ; preds = %2711, %2752
  %2759 = phi i64 [ %2714, %2711 ], [ %2725, %2752 ]
  %2760 = phi i32 [ 1, %2711 ], [ %2756, %2752 ]
  br label %2761

2761:                                             ; preds = %2758, %2761
  %2762 = phi i64 [ %2767, %2761 ], [ %2759, %2758 ]
  %2763 = phi i32 [ %2766, %2761 ], [ %2760, %2758 ]
  %2764 = getelementptr inbounds i32, ptr %11, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !6
  %2766 = mul nsw i32 %2765, %2763
  %2767 = add nsw i64 %2762, -1
  %2768 = trunc i64 %2762 to i32
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2761, label %2770, !llvm.loop !1391

2770:                                             ; preds = %2761, %2752
  %2771 = phi i32 [ %2756, %2752 ], [ %2766, %2761 ]
  %2772 = and i64 %2721, 4294967295
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2772
  %2774 = load i32, ptr %2773, align 4, !tbaa !6
  %2775 = mul nsw i32 %2774, %2771
  %2776 = add nsw i32 %2775, %2715
  %2777 = icmp sgt i64 %2713, 2
  %2778 = add nsw i64 %2714, -1
  %2779 = add i32 %2712, 1
  br i1 %2777, label %2711, label %2780, !llvm.loop !1392

2780:                                             ; preds = %2770, %2708
  %2781 = phi i32 [ %2710, %2708 ], [ %2776, %2770 ]
  %2782 = icmp slt i32 %2781, %5
  br i1 %2782, label %2785, label %2783

2783:                                             ; preds = %2780
  %2784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

2785:                                             ; preds = %2780
  %2786 = sext i32 %2781 to i64
  %2787 = getelementptr inbounds double, ptr %2529, i64 %2786
  %2788 = load double, ptr %2787, align 8, !tbaa !19
  %2789 = fptosi double %2788 to i32
  %2790 = load i32, ptr %2531, align 4, !tbaa !6
  %2791 = sitofp i32 %2790 to double
  %2792 = sitofp i32 %2789 to double
  %2793 = icmp slt i32 %2789, 0
  %2794 = fneg fast double %2792
  %2795 = select i1 %2793, double %2794, double %2792
  %2796 = fmul fast double %2792, %2792
  %2797 = fmul fast double %2796, %2795
  %2798 = fadd fast double %2797, %2791
  %2799 = fptosi double %2798 to i32
  store i32 %2799, ptr %2531, align 4, !tbaa !6
  %2800 = add nuw nsw i32 %2709, 1
  br i1 %2550, label %2801, label %2851

2801:                                             ; preds = %2785
  %2802 = load i32, ptr %4, align 4, !tbaa !6
  %2803 = load i32, ptr %12, align 4, !tbaa !6
  %2804 = add nsw i32 %2803, -1
  %2805 = icmp slt i32 %2802, %2804
  br i1 %2805, label %2828, label %2806

2806:                                             ; preds = %2801
  %2807 = icmp eq i32 %2802, %2804
  br i1 %2807, label %2808, label %2844

2808:                                             ; preds = %2806
  store i32 0, ptr %4, align 4, !tbaa !6
  %2809 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2809, ptr %6, align 4, !tbaa !6
  br i1 %2555, label %2851, label %2810

2810:                                             ; preds = %2808, %2838
  %2811 = phi i64 [ %2842, %2838 ], [ 1, %2808 ]
  %2812 = getelementptr inbounds i32, ptr %4, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !6
  %2814 = getelementptr inbounds i32, ptr %12, i64 %2811
  %2815 = load i32, ptr %2814, align 4, !tbaa !6
  %2816 = add nsw i32 %2815, -1
  %2817 = icmp slt i32 %2813, %2816
  br i1 %2817, label %2818, label %2836

2818:                                             ; preds = %2810
  br i1 %2805, label %2828, label %2819

2819:                                             ; preds = %2818
  %2820 = shl i64 %2811, 32
  %2821 = add i64 %2820, -4294967296
  %2822 = ashr exact i64 %2821, 32
  %2823 = getelementptr inbounds i32, ptr %7, i64 %2822
  %2824 = load i32, ptr %2823, align 4, !tbaa !6
  %2825 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2826 = load i32, ptr %2825, align 4, !tbaa !6
  %2827 = add nsw i32 %2826, %2824
  store i32 %2827, ptr %2825, align 4, !tbaa !6
  br label %2846

2828:                                             ; preds = %2801, %2818
  %2829 = phi i32 [ %2813, %2818 ], [ %2802, %2801 ]
  %2830 = phi ptr [ %2812, %2818 ], [ %4, %2801 ]
  %2831 = phi i64 [ %2811, %2818 ], [ 0, %2801 ]
  %2832 = add nsw i32 %2829, 1
  store i32 %2832, ptr %2830, align 4, !tbaa !6
  %2833 = getelementptr inbounds i32, ptr %7, i64 %2831
  %2834 = load i32, ptr %2833, align 4, !tbaa !6
  %2835 = getelementptr inbounds i32, ptr %6, i64 %2831
  br label %2846

2836:                                             ; preds = %2810
  %2837 = icmp eq i32 %2813, %2816
  br i1 %2837, label %2838, label %2844

2838:                                             ; preds = %2836
  store i32 0, ptr %2812, align 4, !tbaa !6
  %2839 = getelementptr inbounds i32, ptr %8, i64 %2811
  %2840 = load i32, ptr %2839, align 4, !tbaa !6
  %2841 = getelementptr inbounds i32, ptr %6, i64 %2811
  store i32 %2840, ptr %2841, align 4, !tbaa !6
  %2842 = add nuw nsw i64 %2811, 1
  %2843 = icmp eq i64 %2842, %2553
  br i1 %2843, label %2851, label %2810, !llvm.loop !1393

2844:                                             ; preds = %2806, %2836
  %2845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

2846:                                             ; preds = %2819, %2828
  %2847 = phi ptr [ %2835, %2828 ], [ %2812, %2819 ]
  %2848 = phi i32 [ %2834, %2828 ], [ 1, %2819 ]
  %2849 = load i32, ptr %2847, align 4, !tbaa !6
  %2850 = add nsw i32 %2849, %2848
  store i32 %2850, ptr %2847, align 4, !tbaa !6
  br label %2851

2851:                                             ; preds = %2838, %2846, %2808, %2785
  %2852 = icmp eq i32 %2800, %5
  br i1 %2852, label %5661, label %2708, !llvm.loop !1394

2853:                                             ; preds = %2541
  %2854 = getelementptr inbounds i32, ptr %3, i64 %19
  %2855 = load i32, ptr %2854, align 4, !tbaa !6
  %2856 = icmp eq i32 %2855, 0
  %2857 = icmp sgt i32 %5, 0
  br i1 %2856, label %2867, label %2858

2858:                                             ; preds = %2853
  br i1 %2857, label %2859, label %5661

2859:                                             ; preds = %2858
  %2860 = icmp sgt i32 %13, 1
  %2861 = icmp sgt i32 %13, 0
  %2862 = add i32 %13, -2
  %2863 = zext i32 %2862 to i64
  %2864 = zext i32 %13 to i64
  %2865 = add nuw i32 %5, 1
  %2866 = icmp eq i32 %13, 1
  br label %3013

2867:                                             ; preds = %2853
  br i1 %2857, label %2868, label %5661

2868:                                             ; preds = %2867
  %2869 = icmp sgt i32 %13, 1
  %2870 = icmp sgt i32 %13, 0
  %2871 = add i32 %13, -2
  %2872 = zext i32 %2871 to i64
  %2873 = zext i32 %13 to i64
  %2874 = add nuw i32 %5, 1
  %2875 = icmp eq i32 %13, 1
  br label %2876

2876:                                             ; preds = %2868, %3011
  %2877 = phi i32 [ 0, %2868 ], [ %2963, %3011 ]
  %2878 = phi double [ 0.000000e+00, %2868 ], [ %2962, %3011 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2869, label %2880, label %2949

2880:                                             ; preds = %2876, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2876 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2873, %2876 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2872, %2876 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2876 ]
  %2885 = sub i32 %2871, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %9, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !6
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !6
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !6
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !6
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1395

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %9, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !6
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1396

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !6
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1397

2949:                                             ; preds = %2939, %2876
  %2950 = phi i32 [ %2879, %2876 ], [ %2945, %2939 ]
  %2951 = sext i32 %2950 to i64
  %2952 = getelementptr inbounds double, ptr %2529, i64 %2951
  %2953 = load double, ptr %2952, align 8, !tbaa !19
  %2954 = fptosi double %2953 to i32
  %2955 = load i32, ptr %2531, align 4, !tbaa !6
  %2956 = icmp slt i32 %2954, 0
  %2957 = mul nsw i32 %2954, %2954
  %2958 = sub nsw i32 0, %2957
  %2959 = select i1 %2956, i32 %2958, i32 %2957
  %2960 = mul i32 %2959, %2954
  %2961 = add nsw i32 %2960, %2955
  store i32 %2961, ptr %2531, align 4, !tbaa !6
  %2962 = fadd fast double %2878, 1.000000e+00
  %2963 = add nuw nsw i32 %2877, 1
  br i1 %2870, label %2964, label %3011

2964:                                             ; preds = %2949
  %2965 = load i32, ptr %4, align 4, !tbaa !6
  %2966 = load i32, ptr %12, align 4, !tbaa !6
  %2967 = add nsw i32 %2966, -1
  %2968 = icmp slt i32 %2965, %2967
  br i1 %2968, label %2988, label %2969

2969:                                             ; preds = %2964
  %2970 = icmp eq i32 %2965, %2967
  br i1 %2970, label %2971, label %3004

2971:                                             ; preds = %2969
  store i32 0, ptr %4, align 4, !tbaa !6
  %2972 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2972, ptr %6, align 4, !tbaa !6
  br i1 %2875, label %3011, label %2973

2973:                                             ; preds = %2971, %2998
  %2974 = phi i64 [ %3002, %2998 ], [ 1, %2971 ]
  %2975 = getelementptr inbounds i32, ptr %4, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !6
  %2977 = getelementptr inbounds i32, ptr %12, i64 %2974
  %2978 = load i32, ptr %2977, align 4, !tbaa !6
  %2979 = add nsw i32 %2978, -1
  %2980 = icmp slt i32 %2976, %2979
  br i1 %2980, label %2981, label %2996

2981:                                             ; preds = %2973
  br i1 %2968, label %2988, label %2982

2982:                                             ; preds = %2981
  %2983 = getelementptr inbounds i32, ptr %7, i64 %2974
  %2984 = load i32, ptr %2983, align 4, !tbaa !6
  %2985 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2986 = load i32, ptr %2985, align 4, !tbaa !6
  %2987 = add nsw i32 %2986, %2984
  store i32 %2987, ptr %2985, align 4, !tbaa !6
  br label %3006

2988:                                             ; preds = %2964, %2981
  %2989 = phi i32 [ %2976, %2981 ], [ %2965, %2964 ]
  %2990 = phi ptr [ %2975, %2981 ], [ %4, %2964 ]
  %2991 = phi i64 [ %2974, %2981 ], [ 0, %2964 ]
  %2992 = add nsw i32 %2989, 1
  store i32 %2992, ptr %2990, align 4, !tbaa !6
  %2993 = getelementptr inbounds i32, ptr %7, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2991
  br label %3006

2996:                                             ; preds = %2973
  %2997 = icmp eq i32 %2976, %2979
  br i1 %2997, label %2998, label %3004

2998:                                             ; preds = %2996
  store i32 0, ptr %2975, align 4, !tbaa !6
  %2999 = getelementptr inbounds i32, ptr %8, i64 %2974
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2974
  store i32 %3000, ptr %3001, align 4, !tbaa !6
  %3002 = add nuw nsw i64 %2974, 1
  %3003 = icmp eq i64 %3002, %2873
  br i1 %3003, label %3011, label %2973, !llvm.loop !1398

3004:                                             ; preds = %2969, %2996
  %3005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3006:                                             ; preds = %2982, %2988
  %3007 = phi ptr [ %2995, %2988 ], [ %2975, %2982 ]
  %3008 = phi i32 [ %2994, %2988 ], [ 1, %2982 ]
  %3009 = load i32, ptr %3007, align 4, !tbaa !6
  %3010 = add nsw i32 %3009, %3008
  store i32 %3010, ptr %3007, align 4, !tbaa !6
  br label %3011

3011:                                             ; preds = %2998, %3006, %2971, %2949
  %3012 = icmp eq i32 %2963, %5
  br i1 %3012, label %5661, label %2876, !llvm.loop !1399

3013:                                             ; preds = %2859, %3153
  %3014 = phi i32 [ 0, %2859 ], [ %3102, %3153 ]
  %3015 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2860, label %3016, label %3085

3016:                                             ; preds = %3013, %3075
  %3017 = phi i32 [ %3084, %3075 ], [ 0, %3013 ]
  %3018 = phi i64 [ %3026, %3075 ], [ %2864, %3013 ]
  %3019 = phi i64 [ %3083, %3075 ], [ %2863, %3013 ]
  %3020 = phi i32 [ %3081, %3075 ], [ %3015, %3013 ]
  %3021 = sub i32 %2862, %3017
  %3022 = tail call i32 @llvm.smin.i32(i32 %3021, i32 0)
  %3023 = sub i32 %3021, %3022
  %3024 = zext i32 %3023 to i64
  %3025 = add nuw nsw i64 %3024, 1
  %3026 = add nsw i64 %3018, -1
  %3027 = icmp ult i32 %3023, 31
  br i1 %3027, label %3063, label %3028

3028:                                             ; preds = %3016
  %3029 = and i64 %3025, 8589934560
  %3030 = sub i64 %3019, %3029
  br label %3031

3031:                                             ; preds = %3031, %3028
  %3032 = phi i64 [ 0, %3028 ], [ %3055, %3031 ]
  %3033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3051, %3031 ]
  %3034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3052, %3031 ]
  %3035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3053, %3031 ]
  %3036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3028 ], [ %3054, %3031 ]
  %3037 = sub i64 %3019, %3032
  %3038 = getelementptr inbounds i32, ptr %11, i64 %3037
  %3039 = getelementptr inbounds i32, ptr %3038, i64 -7
  %3040 = load <8 x i32>, ptr %3039, align 4, !tbaa !6
  %3041 = shufflevector <8 x i32> %3040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3042 = getelementptr inbounds i32, ptr %3038, i64 -15
  %3043 = load <8 x i32>, ptr %3042, align 4, !tbaa !6
  %3044 = shufflevector <8 x i32> %3043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3045 = getelementptr inbounds i32, ptr %3038, i64 -23
  %3046 = load <8 x i32>, ptr %3045, align 4, !tbaa !6
  %3047 = shufflevector <8 x i32> %3046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3048 = getelementptr inbounds i32, ptr %3038, i64 -31
  %3049 = load <8 x i32>, ptr %3048, align 4, !tbaa !6
  %3050 = shufflevector <8 x i32> %3049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3051 = mul <8 x i32> %3041, %3033
  %3052 = mul <8 x i32> %3044, %3034
  %3053 = mul <8 x i32> %3047, %3035
  %3054 = mul <8 x i32> %3050, %3036
  %3055 = add nuw i64 %3032, 32
  %3056 = icmp eq i64 %3055, %3029
  br i1 %3056, label %3057, label %3031, !llvm.loop !1400

3057:                                             ; preds = %3031
  %3058 = mul <8 x i32> %3052, %3051
  %3059 = mul <8 x i32> %3053, %3058
  %3060 = mul <8 x i32> %3054, %3059
  %3061 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3060)
  %3062 = icmp eq i64 %3025, %3029
  br i1 %3062, label %3075, label %3063

3063:                                             ; preds = %3016, %3057
  %3064 = phi i64 [ %3019, %3016 ], [ %3030, %3057 ]
  %3065 = phi i32 [ 1, %3016 ], [ %3061, %3057 ]
  br label %3066

3066:                                             ; preds = %3063, %3066
  %3067 = phi i64 [ %3072, %3066 ], [ %3064, %3063 ]
  %3068 = phi i32 [ %3071, %3066 ], [ %3065, %3063 ]
  %3069 = getelementptr inbounds i32, ptr %11, i64 %3067
  %3070 = load i32, ptr %3069, align 4, !tbaa !6
  %3071 = mul nsw i32 %3070, %3068
  %3072 = add nsw i64 %3067, -1
  %3073 = trunc i64 %3067 to i32
  %3074 = icmp sgt i32 %3073, 0
  br i1 %3074, label %3066, label %3075, !llvm.loop !1401

3075:                                             ; preds = %3066, %3057
  %3076 = phi i32 [ %3061, %3057 ], [ %3071, %3066 ]
  %3077 = and i64 %3026, 4294967295
  %3078 = getelementptr inbounds i32, ptr %6, i64 %3077
  %3079 = load i32, ptr %3078, align 4, !tbaa !6
  %3080 = mul nsw i32 %3079, %3076
  %3081 = add nsw i32 %3080, %3020
  %3082 = icmp sgt i64 %3018, 2
  %3083 = add nsw i64 %3019, -1
  %3084 = add i32 %3017, 1
  br i1 %3082, label %3016, label %3085, !llvm.loop !1402

3085:                                             ; preds = %3075, %3013
  %3086 = phi i32 [ %3015, %3013 ], [ %3081, %3075 ]
  %3087 = icmp slt i32 %3086, %5
  br i1 %3087, label %3090, label %3088

3088:                                             ; preds = %3085
  %3089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3090:                                             ; preds = %3085
  %3091 = sext i32 %3086 to i64
  %3092 = getelementptr inbounds double, ptr %2529, i64 %3091
  %3093 = load double, ptr %3092, align 8, !tbaa !19
  %3094 = fptosi double %3093 to i32
  %3095 = load i32, ptr %2531, align 4, !tbaa !6
  %3096 = icmp slt i32 %3094, 0
  %3097 = mul nsw i32 %3094, %3094
  %3098 = sub nsw i32 0, %3097
  %3099 = select i1 %3096, i32 %3098, i32 %3097
  %3100 = mul i32 %3099, %3094
  %3101 = add nsw i32 %3100, %3095
  store i32 %3101, ptr %2531, align 4, !tbaa !6
  %3102 = add nuw nsw i32 %3014, 1
  br i1 %2861, label %3103, label %3153

3103:                                             ; preds = %3090
  %3104 = load i32, ptr %4, align 4, !tbaa !6
  %3105 = load i32, ptr %12, align 4, !tbaa !6
  %3106 = add nsw i32 %3105, -1
  %3107 = icmp slt i32 %3104, %3106
  br i1 %3107, label %3130, label %3108

3108:                                             ; preds = %3103
  %3109 = icmp eq i32 %3104, %3106
  br i1 %3109, label %3110, label %3146

3110:                                             ; preds = %3108
  store i32 0, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3111, ptr %6, align 4, !tbaa !6
  br i1 %2866, label %3153, label %3112

3112:                                             ; preds = %3110, %3140
  %3113 = phi i64 [ %3144, %3140 ], [ 1, %3110 ]
  %3114 = getelementptr inbounds i32, ptr %4, i64 %3113
  %3115 = load i32, ptr %3114, align 4, !tbaa !6
  %3116 = getelementptr inbounds i32, ptr %12, i64 %3113
  %3117 = load i32, ptr %3116, align 4, !tbaa !6
  %3118 = add nsw i32 %3117, -1
  %3119 = icmp slt i32 %3115, %3118
  br i1 %3119, label %3120, label %3138

3120:                                             ; preds = %3112
  br i1 %3107, label %3130, label %3121

3121:                                             ; preds = %3120
  %3122 = shl i64 %3113, 32
  %3123 = add i64 %3122, -4294967296
  %3124 = ashr exact i64 %3123, 32
  %3125 = getelementptr inbounds i32, ptr %7, i64 %3124
  %3126 = load i32, ptr %3125, align 4, !tbaa !6
  %3127 = getelementptr inbounds i32, ptr %6, i64 %3113
  %3128 = load i32, ptr %3127, align 4, !tbaa !6
  %3129 = add nsw i32 %3128, %3126
  store i32 %3129, ptr %3127, align 4, !tbaa !6
  br label %3148

3130:                                             ; preds = %3103, %3120
  %3131 = phi i32 [ %3115, %3120 ], [ %3104, %3103 ]
  %3132 = phi ptr [ %3114, %3120 ], [ %4, %3103 ]
  %3133 = phi i64 [ %3113, %3120 ], [ 0, %3103 ]
  %3134 = add nsw i32 %3131, 1
  store i32 %3134, ptr %3132, align 4, !tbaa !6
  %3135 = getelementptr inbounds i32, ptr %7, i64 %3133
  %3136 = load i32, ptr %3135, align 4, !tbaa !6
  %3137 = getelementptr inbounds i32, ptr %6, i64 %3133
  br label %3148

3138:                                             ; preds = %3112
  %3139 = icmp eq i32 %3115, %3118
  br i1 %3139, label %3140, label %3146

3140:                                             ; preds = %3138
  store i32 0, ptr %3114, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %8, i64 %3113
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3113
  store i32 %3142, ptr %3143, align 4, !tbaa !6
  %3144 = add nuw nsw i64 %3113, 1
  %3145 = icmp eq i64 %3144, %2864
  br i1 %3145, label %3153, label %3112, !llvm.loop !1403

3146:                                             ; preds = %3108, %3138
  %3147 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3148:                                             ; preds = %3121, %3130
  %3149 = phi ptr [ %3137, %3130 ], [ %3114, %3121 ]
  %3150 = phi i32 [ %3136, %3130 ], [ 1, %3121 ]
  %3151 = load i32, ptr %3149, align 4, !tbaa !6
  %3152 = add nsw i32 %3151, %3150
  store i32 %3152, ptr %3149, align 4, !tbaa !6
  br label %3153

3153:                                             ; preds = %3140, %3148, %3110, %3090
  %3154 = icmp eq i32 %3102, %5
  br i1 %3154, label %5661, label %3013, !llvm.loop !1404

3155:                                             ; preds = %2541
  %3156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2289, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

3157:                                             ; preds = %18
  %3158 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3159 = load ptr, ptr %3158, align 8, !tbaa !10
  %3160 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3161 = load ptr, ptr %3160, align 8, !tbaa !10
  store i64 0, ptr %3161, align 8, !tbaa !121
  %3162 = icmp eq i32 %13, 0
  br i1 %3162, label %3163, label %3171

3163:                                             ; preds = %3157
  %3164 = load double, ptr %3159, align 8, !tbaa !19
  %3165 = fptosi double %3164 to i64
  %3166 = icmp slt i64 %3165, 0
  %3167 = mul nsw i64 %3165, %3165
  %3168 = sub nsw i64 0, %3167
  %3169 = select i1 %3166, i64 %3168, i64 %3167
  %3170 = mul i64 %3169, %3165
  store i64 %3170, ptr %3161, align 8, !tbaa !121
  br label %5661

3171:                                             ; preds = %3157
  switch i32 %1, label %3785 [
    i32 1, label %3172
    i32 0, label %3483
  ]

3172:                                             ; preds = %3171
  %3173 = getelementptr inbounds i32, ptr %3, i64 %19
  %3174 = load i32, ptr %3173, align 4, !tbaa !6
  %3175 = icmp eq i32 %3174, 0
  %3176 = icmp sgt i32 %5, 0
  br i1 %3175, label %3186, label %3177

3177:                                             ; preds = %3172
  br i1 %3176, label %3178, label %5661

3178:                                             ; preds = %3177
  %3179 = icmp sgt i32 %13, 1
  %3180 = icmp sgt i32 %13, 0
  %3181 = add i32 %13, -2
  %3182 = zext i32 %3181 to i64
  %3183 = zext i32 %13 to i64
  %3184 = add nuw i32 %5, 1
  %3185 = icmp eq i32 %13, 1
  br label %3338

3186:                                             ; preds = %3172
  br i1 %3176, label %3187, label %5661

3187:                                             ; preds = %3186
  %3188 = icmp sgt i32 %13, 1
  %3189 = icmp sgt i32 %13, 0
  %3190 = add i32 %13, -2
  %3191 = zext i32 %3190 to i64
  %3192 = zext i32 %13 to i64
  %3193 = add nuw i32 %5, 1
  %3194 = icmp eq i32 %13, 1
  br label %3195

3195:                                             ; preds = %3187, %3336
  %3196 = phi i64 [ 0, %3187 ], [ %3286, %3336 ]
  %3197 = phi i32 [ 0, %3187 ], [ %3288, %3336 ]
  %3198 = phi double [ 0.000000e+00, %3187 ], [ %3287, %3336 ]
  %3199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3188, label %3200, label %3269

3200:                                             ; preds = %3195, %3259
  %3201 = phi i32 [ %3268, %3259 ], [ 0, %3195 ]
  %3202 = phi i64 [ %3210, %3259 ], [ %3192, %3195 ]
  %3203 = phi i64 [ %3267, %3259 ], [ %3191, %3195 ]
  %3204 = phi i32 [ %3265, %3259 ], [ %3199, %3195 ]
  %3205 = sub i32 %3190, %3201
  %3206 = tail call i32 @llvm.smin.i32(i32 %3205, i32 0)
  %3207 = sub i32 %3205, %3206
  %3208 = zext i32 %3207 to i64
  %3209 = add nuw nsw i64 %3208, 1
  %3210 = add nsw i64 %3202, -1
  %3211 = icmp ult i32 %3207, 31
  br i1 %3211, label %3247, label %3212

3212:                                             ; preds = %3200
  %3213 = and i64 %3209, 8589934560
  %3214 = sub i64 %3203, %3213
  br label %3215

3215:                                             ; preds = %3215, %3212
  %3216 = phi i64 [ 0, %3212 ], [ %3239, %3215 ]
  %3217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3235, %3215 ]
  %3218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3236, %3215 ]
  %3219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3237, %3215 ]
  %3220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3212 ], [ %3238, %3215 ]
  %3221 = sub i64 %3203, %3216
  %3222 = getelementptr inbounds i32, ptr %9, i64 %3221
  %3223 = getelementptr inbounds i32, ptr %3222, i64 -7
  %3224 = load <8 x i32>, ptr %3223, align 4, !tbaa !6
  %3225 = shufflevector <8 x i32> %3224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3226 = getelementptr inbounds i32, ptr %3222, i64 -15
  %3227 = load <8 x i32>, ptr %3226, align 4, !tbaa !6
  %3228 = shufflevector <8 x i32> %3227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3229 = getelementptr inbounds i32, ptr %3222, i64 -23
  %3230 = load <8 x i32>, ptr %3229, align 4, !tbaa !6
  %3231 = shufflevector <8 x i32> %3230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3232 = getelementptr inbounds i32, ptr %3222, i64 -31
  %3233 = load <8 x i32>, ptr %3232, align 4, !tbaa !6
  %3234 = shufflevector <8 x i32> %3233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3235 = mul <8 x i32> %3225, %3217
  %3236 = mul <8 x i32> %3228, %3218
  %3237 = mul <8 x i32> %3231, %3219
  %3238 = mul <8 x i32> %3234, %3220
  %3239 = add nuw i64 %3216, 32
  %3240 = icmp eq i64 %3239, %3213
  br i1 %3240, label %3241, label %3215, !llvm.loop !1405

3241:                                             ; preds = %3215
  %3242 = mul <8 x i32> %3236, %3235
  %3243 = mul <8 x i32> %3237, %3242
  %3244 = mul <8 x i32> %3238, %3243
  %3245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3244)
  %3246 = icmp eq i64 %3209, %3213
  br i1 %3246, label %3259, label %3247

3247:                                             ; preds = %3200, %3241
  %3248 = phi i64 [ %3203, %3200 ], [ %3214, %3241 ]
  %3249 = phi i32 [ 1, %3200 ], [ %3245, %3241 ]
  br label %3250

3250:                                             ; preds = %3247, %3250
  %3251 = phi i64 [ %3256, %3250 ], [ %3248, %3247 ]
  %3252 = phi i32 [ %3255, %3250 ], [ %3249, %3247 ]
  %3253 = getelementptr inbounds i32, ptr %9, i64 %3251
  %3254 = load i32, ptr %3253, align 4, !tbaa !6
  %3255 = mul nsw i32 %3254, %3252
  %3256 = add nsw i64 %3251, -1
  %3257 = trunc i64 %3251 to i32
  %3258 = icmp sgt i32 %3257, 0
  br i1 %3258, label %3250, label %3259, !llvm.loop !1406

3259:                                             ; preds = %3250, %3241
  %3260 = phi i32 [ %3245, %3241 ], [ %3255, %3250 ]
  %3261 = and i64 %3210, 4294967295
  %3262 = getelementptr inbounds i32, ptr %6, i64 %3261
  %3263 = load i32, ptr %3262, align 4, !tbaa !6
  %3264 = mul nsw i32 %3263, %3260
  %3265 = add nsw i32 %3264, %3204
  %3266 = icmp sgt i64 %3202, 2
  %3267 = add nsw i64 %3203, -1
  %3268 = add i32 %3201, 1
  br i1 %3266, label %3200, label %3269, !llvm.loop !1407

3269:                                             ; preds = %3259, %3195
  %3270 = phi i32 [ %3199, %3195 ], [ %3265, %3259 ]
  %3271 = sext i32 %3270 to i64
  %3272 = getelementptr inbounds double, ptr %2, i64 %3271
  %3273 = load double, ptr %3272, align 8, !tbaa !19
  %3274 = getelementptr inbounds double, ptr %3159, i64 %3271
  %3275 = load double, ptr %3274, align 8, !tbaa !19
  %3276 = fptosi double %3275 to i64
  %3277 = sitofp i64 %3196 to double
  %3278 = sitofp i64 %3276 to double
  %3279 = fmul fast double %3273, %3278
  %3280 = fcmp fast olt double %3279, 0.000000e+00
  %3281 = fneg fast double %3279
  %3282 = select nnan ninf i1 %3280, double %3281, double %3279
  %3283 = fmul fast double %3279, %3279
  %3284 = fmul fast double %3283, %3282
  %3285 = fadd fast double %3284, %3277
  %3286 = fptosi double %3285 to i64
  %3287 = fadd fast double %3273, %3198
  %3288 = add nuw nsw i32 %3197, 1
  br i1 %3189, label %3289, label %3336

3289:                                             ; preds = %3269
  %3290 = load i32, ptr %4, align 4, !tbaa !6
  %3291 = load i32, ptr %12, align 4, !tbaa !6
  %3292 = add nsw i32 %3291, -1
  %3293 = icmp slt i32 %3290, %3292
  br i1 %3293, label %3313, label %3294

3294:                                             ; preds = %3289
  %3295 = icmp eq i32 %3290, %3292
  br i1 %3295, label %3296, label %3329

3296:                                             ; preds = %3294
  store i32 0, ptr %4, align 4, !tbaa !6
  %3297 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3297, ptr %6, align 4, !tbaa !6
  br i1 %3194, label %3336, label %3298

3298:                                             ; preds = %3296, %3323
  %3299 = phi i64 [ %3327, %3323 ], [ 1, %3296 ]
  %3300 = getelementptr inbounds i32, ptr %4, i64 %3299
  %3301 = load i32, ptr %3300, align 4, !tbaa !6
  %3302 = getelementptr inbounds i32, ptr %12, i64 %3299
  %3303 = load i32, ptr %3302, align 4, !tbaa !6
  %3304 = add nsw i32 %3303, -1
  %3305 = icmp slt i32 %3301, %3304
  br i1 %3305, label %3306, label %3321

3306:                                             ; preds = %3298
  br i1 %3293, label %3313, label %3307

3307:                                             ; preds = %3306
  %3308 = getelementptr inbounds i32, ptr %7, i64 %3299
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = getelementptr inbounds i32, ptr %6, i64 %3299
  %3311 = load i32, ptr %3310, align 4, !tbaa !6
  %3312 = add nsw i32 %3311, %3309
  store i32 %3312, ptr %3310, align 4, !tbaa !6
  br label %3331

3313:                                             ; preds = %3289, %3306
  %3314 = phi i32 [ %3301, %3306 ], [ %3290, %3289 ]
  %3315 = phi ptr [ %3300, %3306 ], [ %4, %3289 ]
  %3316 = phi i64 [ %3299, %3306 ], [ 0, %3289 ]
  %3317 = add nsw i32 %3314, 1
  store i32 %3317, ptr %3315, align 4, !tbaa !6
  %3318 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3319 = load i32, ptr %3318, align 4, !tbaa !6
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3316
  br label %3331

3321:                                             ; preds = %3298
  %3322 = icmp eq i32 %3301, %3304
  br i1 %3322, label %3323, label %3329

3323:                                             ; preds = %3321
  store i32 0, ptr %3300, align 4, !tbaa !6
  %3324 = getelementptr inbounds i32, ptr %8, i64 %3299
  %3325 = load i32, ptr %3324, align 4, !tbaa !6
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3299
  store i32 %3325, ptr %3326, align 4, !tbaa !6
  %3327 = add nuw nsw i64 %3299, 1
  %3328 = icmp eq i64 %3327, %3192
  br i1 %3328, label %3336, label %3298, !llvm.loop !1408

3329:                                             ; preds = %3294, %3321
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3331:                                             ; preds = %3307, %3313
  %3332 = phi ptr [ %3320, %3313 ], [ %3300, %3307 ]
  %3333 = phi i32 [ %3319, %3313 ], [ 1, %3307 ]
  %3334 = load i32, ptr %3332, align 4, !tbaa !6
  %3335 = add nsw i32 %3334, %3333
  store i32 %3335, ptr %3332, align 4, !tbaa !6
  br label %3336

3336:                                             ; preds = %3323, %3331, %3296, %3269
  %3337 = icmp eq i32 %3288, %5
  br i1 %3337, label %5657, label %3195, !llvm.loop !1409

3338:                                             ; preds = %3178, %3481
  %3339 = phi i64 [ 0, %3178 ], [ %3429, %3481 ]
  %3340 = phi i32 [ 0, %3178 ], [ %3430, %3481 ]
  %3341 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3179, label %3342, label %3411

3342:                                             ; preds = %3338, %3401
  %3343 = phi i32 [ %3410, %3401 ], [ 0, %3338 ]
  %3344 = phi i64 [ %3352, %3401 ], [ %3183, %3338 ]
  %3345 = phi i64 [ %3409, %3401 ], [ %3182, %3338 ]
  %3346 = phi i32 [ %3407, %3401 ], [ %3341, %3338 ]
  %3347 = sub i32 %3181, %3343
  %3348 = tail call i32 @llvm.smin.i32(i32 %3347, i32 0)
  %3349 = sub i32 %3347, %3348
  %3350 = zext i32 %3349 to i64
  %3351 = add nuw nsw i64 %3350, 1
  %3352 = add nsw i64 %3344, -1
  %3353 = icmp ult i32 %3349, 31
  br i1 %3353, label %3389, label %3354

3354:                                             ; preds = %3342
  %3355 = and i64 %3351, 8589934560
  %3356 = sub i64 %3345, %3355
  br label %3357

3357:                                             ; preds = %3357, %3354
  %3358 = phi i64 [ 0, %3354 ], [ %3381, %3357 ]
  %3359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3377, %3357 ]
  %3360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3378, %3357 ]
  %3361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3379, %3357 ]
  %3362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3354 ], [ %3380, %3357 ]
  %3363 = sub i64 %3345, %3358
  %3364 = getelementptr inbounds i32, ptr %11, i64 %3363
  %3365 = getelementptr inbounds i32, ptr %3364, i64 -7
  %3366 = load <8 x i32>, ptr %3365, align 4, !tbaa !6
  %3367 = shufflevector <8 x i32> %3366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3368 = getelementptr inbounds i32, ptr %3364, i64 -15
  %3369 = load <8 x i32>, ptr %3368, align 4, !tbaa !6
  %3370 = shufflevector <8 x i32> %3369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3371 = getelementptr inbounds i32, ptr %3364, i64 -23
  %3372 = load <8 x i32>, ptr %3371, align 4, !tbaa !6
  %3373 = shufflevector <8 x i32> %3372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3374 = getelementptr inbounds i32, ptr %3364, i64 -31
  %3375 = load <8 x i32>, ptr %3374, align 4, !tbaa !6
  %3376 = shufflevector <8 x i32> %3375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3377 = mul <8 x i32> %3367, %3359
  %3378 = mul <8 x i32> %3370, %3360
  %3379 = mul <8 x i32> %3373, %3361
  %3380 = mul <8 x i32> %3376, %3362
  %3381 = add nuw i64 %3358, 32
  %3382 = icmp eq i64 %3381, %3355
  br i1 %3382, label %3383, label %3357, !llvm.loop !1410

3383:                                             ; preds = %3357
  %3384 = mul <8 x i32> %3378, %3377
  %3385 = mul <8 x i32> %3379, %3384
  %3386 = mul <8 x i32> %3380, %3385
  %3387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3386)
  %3388 = icmp eq i64 %3351, %3355
  br i1 %3388, label %3401, label %3389

3389:                                             ; preds = %3342, %3383
  %3390 = phi i64 [ %3345, %3342 ], [ %3356, %3383 ]
  %3391 = phi i32 [ 1, %3342 ], [ %3387, %3383 ]
  br label %3392

3392:                                             ; preds = %3389, %3392
  %3393 = phi i64 [ %3398, %3392 ], [ %3390, %3389 ]
  %3394 = phi i32 [ %3397, %3392 ], [ %3391, %3389 ]
  %3395 = getelementptr inbounds i32, ptr %11, i64 %3393
  %3396 = load i32, ptr %3395, align 4, !tbaa !6
  %3397 = mul nsw i32 %3396, %3394
  %3398 = add nsw i64 %3393, -1
  %3399 = trunc i64 %3393 to i32
  %3400 = icmp sgt i32 %3399, 0
  br i1 %3400, label %3392, label %3401, !llvm.loop !1411

3401:                                             ; preds = %3392, %3383
  %3402 = phi i32 [ %3387, %3383 ], [ %3397, %3392 ]
  %3403 = and i64 %3352, 4294967295
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3403
  %3405 = load i32, ptr %3404, align 4, !tbaa !6
  %3406 = mul nsw i32 %3405, %3402
  %3407 = add nsw i32 %3406, %3346
  %3408 = icmp sgt i64 %3344, 2
  %3409 = add nsw i64 %3345, -1
  %3410 = add i32 %3343, 1
  br i1 %3408, label %3342, label %3411, !llvm.loop !1412

3411:                                             ; preds = %3401, %3338
  %3412 = phi i32 [ %3341, %3338 ], [ %3407, %3401 ]
  %3413 = icmp slt i32 %3412, %5
  br i1 %3413, label %3416, label %3414

3414:                                             ; preds = %3411
  %3415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3416:                                             ; preds = %3411
  %3417 = sext i32 %3412 to i64
  %3418 = getelementptr inbounds double, ptr %3159, i64 %3417
  %3419 = load double, ptr %3418, align 8, !tbaa !19
  %3420 = fptosi double %3419 to i64
  %3421 = sitofp i64 %3339 to double
  %3422 = sitofp i64 %3420 to double
  %3423 = icmp slt i64 %3420, 0
  %3424 = fneg fast double %3422
  %3425 = select i1 %3423, double %3424, double %3422
  %3426 = fmul fast double %3422, %3422
  %3427 = fmul fast double %3426, %3425
  %3428 = fadd fast double %3427, %3421
  %3429 = fptosi double %3428 to i64
  store i64 %3429, ptr %3161, align 8, !tbaa !121
  %3430 = add nuw nsw i32 %3340, 1
  br i1 %3180, label %3431, label %3481

3431:                                             ; preds = %3416
  %3432 = load i32, ptr %4, align 4, !tbaa !6
  %3433 = load i32, ptr %12, align 4, !tbaa !6
  %3434 = add nsw i32 %3433, -1
  %3435 = icmp slt i32 %3432, %3434
  br i1 %3435, label %3458, label %3436

3436:                                             ; preds = %3431
  %3437 = icmp eq i32 %3432, %3434
  br i1 %3437, label %3438, label %3474

3438:                                             ; preds = %3436
  store i32 0, ptr %4, align 4, !tbaa !6
  %3439 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3439, ptr %6, align 4, !tbaa !6
  br i1 %3185, label %3481, label %3440

3440:                                             ; preds = %3438, %3468
  %3441 = phi i64 [ %3472, %3468 ], [ 1, %3438 ]
  %3442 = getelementptr inbounds i32, ptr %4, i64 %3441
  %3443 = load i32, ptr %3442, align 4, !tbaa !6
  %3444 = getelementptr inbounds i32, ptr %12, i64 %3441
  %3445 = load i32, ptr %3444, align 4, !tbaa !6
  %3446 = add nsw i32 %3445, -1
  %3447 = icmp slt i32 %3443, %3446
  br i1 %3447, label %3448, label %3466

3448:                                             ; preds = %3440
  br i1 %3435, label %3458, label %3449

3449:                                             ; preds = %3448
  %3450 = shl i64 %3441, 32
  %3451 = add i64 %3450, -4294967296
  %3452 = ashr exact i64 %3451, 32
  %3453 = getelementptr inbounds i32, ptr %7, i64 %3452
  %3454 = load i32, ptr %3453, align 4, !tbaa !6
  %3455 = getelementptr inbounds i32, ptr %6, i64 %3441
  %3456 = load i32, ptr %3455, align 4, !tbaa !6
  %3457 = add nsw i32 %3456, %3454
  store i32 %3457, ptr %3455, align 4, !tbaa !6
  br label %3476

3458:                                             ; preds = %3431, %3448
  %3459 = phi i32 [ %3443, %3448 ], [ %3432, %3431 ]
  %3460 = phi ptr [ %3442, %3448 ], [ %4, %3431 ]
  %3461 = phi i64 [ %3441, %3448 ], [ 0, %3431 ]
  %3462 = add nsw i32 %3459, 1
  store i32 %3462, ptr %3460, align 4, !tbaa !6
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3461
  br label %3476

3466:                                             ; preds = %3440
  %3467 = icmp eq i32 %3443, %3446
  br i1 %3467, label %3468, label %3474

3468:                                             ; preds = %3466
  store i32 0, ptr %3442, align 4, !tbaa !6
  %3469 = getelementptr inbounds i32, ptr %8, i64 %3441
  %3470 = load i32, ptr %3469, align 4, !tbaa !6
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3441
  store i32 %3470, ptr %3471, align 4, !tbaa !6
  %3472 = add nuw nsw i64 %3441, 1
  %3473 = icmp eq i64 %3472, %3183
  br i1 %3473, label %3481, label %3440, !llvm.loop !1413

3474:                                             ; preds = %3436, %3466
  %3475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3476:                                             ; preds = %3449, %3458
  %3477 = phi ptr [ %3465, %3458 ], [ %3442, %3449 ]
  %3478 = phi i32 [ %3464, %3458 ], [ 1, %3449 ]
  %3479 = load i32, ptr %3477, align 4, !tbaa !6
  %3480 = add nsw i32 %3479, %3478
  store i32 %3480, ptr %3477, align 4, !tbaa !6
  br label %3481

3481:                                             ; preds = %3468, %3476, %3438, %3416
  %3482 = icmp eq i32 %3430, %5
  br i1 %3482, label %5661, label %3338, !llvm.loop !1414

3483:                                             ; preds = %3171
  %3484 = getelementptr inbounds i32, ptr %3, i64 %19
  %3485 = load i32, ptr %3484, align 4, !tbaa !6
  %3486 = icmp eq i32 %3485, 0
  %3487 = icmp sgt i32 %5, 0
  br i1 %3486, label %3497, label %3488

3488:                                             ; preds = %3483
  br i1 %3487, label %3489, label %5661

3489:                                             ; preds = %3488
  %3490 = icmp sgt i32 %13, 1
  %3491 = icmp sgt i32 %13, 0
  %3492 = add i32 %13, -2
  %3493 = zext i32 %3492 to i64
  %3494 = zext i32 %13 to i64
  %3495 = add nuw i32 %5, 1
  %3496 = icmp eq i32 %13, 1
  br label %3643

3497:                                             ; preds = %3483
  br i1 %3487, label %3498, label %5661

3498:                                             ; preds = %3497
  %3499 = icmp sgt i32 %13, 1
  %3500 = icmp sgt i32 %13, 0
  %3501 = add i32 %13, -2
  %3502 = zext i32 %3501 to i64
  %3503 = zext i32 %13 to i64
  %3504 = add nuw i32 %5, 1
  %3505 = icmp eq i32 %13, 1
  br label %3506

3506:                                             ; preds = %3498, %3641
  %3507 = phi i64 [ 0, %3498 ], [ %3591, %3641 ]
  %3508 = phi i32 [ 0, %3498 ], [ %3593, %3641 ]
  %3509 = phi double [ 0.000000e+00, %3498 ], [ %3592, %3641 ]
  %3510 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3499, label %3511, label %3580

3511:                                             ; preds = %3506, %3570
  %3512 = phi i32 [ %3579, %3570 ], [ 0, %3506 ]
  %3513 = phi i64 [ %3521, %3570 ], [ %3503, %3506 ]
  %3514 = phi i64 [ %3578, %3570 ], [ %3502, %3506 ]
  %3515 = phi i32 [ %3576, %3570 ], [ %3510, %3506 ]
  %3516 = sub i32 %3501, %3512
  %3517 = tail call i32 @llvm.smin.i32(i32 %3516, i32 0)
  %3518 = sub i32 %3516, %3517
  %3519 = zext i32 %3518 to i64
  %3520 = add nuw nsw i64 %3519, 1
  %3521 = add nsw i64 %3513, -1
  %3522 = icmp ult i32 %3518, 31
  br i1 %3522, label %3558, label %3523

3523:                                             ; preds = %3511
  %3524 = and i64 %3520, 8589934560
  %3525 = sub i64 %3514, %3524
  br label %3526

3526:                                             ; preds = %3526, %3523
  %3527 = phi i64 [ 0, %3523 ], [ %3550, %3526 ]
  %3528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3546, %3526 ]
  %3529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3547, %3526 ]
  %3530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3548, %3526 ]
  %3531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3523 ], [ %3549, %3526 ]
  %3532 = sub i64 %3514, %3527
  %3533 = getelementptr inbounds i32, ptr %9, i64 %3532
  %3534 = getelementptr inbounds i32, ptr %3533, i64 -7
  %3535 = load <8 x i32>, ptr %3534, align 4, !tbaa !6
  %3536 = shufflevector <8 x i32> %3535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3537 = getelementptr inbounds i32, ptr %3533, i64 -15
  %3538 = load <8 x i32>, ptr %3537, align 4, !tbaa !6
  %3539 = shufflevector <8 x i32> %3538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3540 = getelementptr inbounds i32, ptr %3533, i64 -23
  %3541 = load <8 x i32>, ptr %3540, align 4, !tbaa !6
  %3542 = shufflevector <8 x i32> %3541, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3543 = getelementptr inbounds i32, ptr %3533, i64 -31
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !6
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = mul <8 x i32> %3536, %3528
  %3547 = mul <8 x i32> %3539, %3529
  %3548 = mul <8 x i32> %3542, %3530
  %3549 = mul <8 x i32> %3545, %3531
  %3550 = add nuw i64 %3527, 32
  %3551 = icmp eq i64 %3550, %3524
  br i1 %3551, label %3552, label %3526, !llvm.loop !1415

3552:                                             ; preds = %3526
  %3553 = mul <8 x i32> %3547, %3546
  %3554 = mul <8 x i32> %3548, %3553
  %3555 = mul <8 x i32> %3549, %3554
  %3556 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3555)
  %3557 = icmp eq i64 %3520, %3524
  br i1 %3557, label %3570, label %3558

3558:                                             ; preds = %3511, %3552
  %3559 = phi i64 [ %3514, %3511 ], [ %3525, %3552 ]
  %3560 = phi i32 [ 1, %3511 ], [ %3556, %3552 ]
  br label %3561

3561:                                             ; preds = %3558, %3561
  %3562 = phi i64 [ %3567, %3561 ], [ %3559, %3558 ]
  %3563 = phi i32 [ %3566, %3561 ], [ %3560, %3558 ]
  %3564 = getelementptr inbounds i32, ptr %9, i64 %3562
  %3565 = load i32, ptr %3564, align 4, !tbaa !6
  %3566 = mul nsw i32 %3565, %3563
  %3567 = add nsw i64 %3562, -1
  %3568 = trunc i64 %3562 to i32
  %3569 = icmp sgt i32 %3568, 0
  br i1 %3569, label %3561, label %3570, !llvm.loop !1416

3570:                                             ; preds = %3561, %3552
  %3571 = phi i32 [ %3556, %3552 ], [ %3566, %3561 ]
  %3572 = and i64 %3521, 4294967295
  %3573 = getelementptr inbounds i32, ptr %6, i64 %3572
  %3574 = load i32, ptr %3573, align 4, !tbaa !6
  %3575 = mul nsw i32 %3574, %3571
  %3576 = add nsw i32 %3575, %3515
  %3577 = icmp sgt i64 %3513, 2
  %3578 = add nsw i64 %3514, -1
  %3579 = add i32 %3512, 1
  br i1 %3577, label %3511, label %3580, !llvm.loop !1417

3580:                                             ; preds = %3570, %3506
  %3581 = phi i32 [ %3510, %3506 ], [ %3576, %3570 ]
  %3582 = sext i32 %3581 to i64
  %3583 = getelementptr inbounds double, ptr %3159, i64 %3582
  %3584 = load double, ptr %3583, align 8, !tbaa !19
  %3585 = fptosi double %3584 to i64
  %3586 = icmp slt i64 %3585, 0
  %3587 = mul nsw i64 %3585, %3585
  %3588 = sub nsw i64 0, %3587
  %3589 = select i1 %3586, i64 %3588, i64 %3587
  %3590 = mul i64 %3589, %3585
  %3591 = add nsw i64 %3590, %3507
  %3592 = fadd fast double %3509, 1.000000e+00
  %3593 = add nuw nsw i32 %3508, 1
  br i1 %3500, label %3594, label %3641

3594:                                             ; preds = %3580
  %3595 = load i32, ptr %4, align 4, !tbaa !6
  %3596 = load i32, ptr %12, align 4, !tbaa !6
  %3597 = add nsw i32 %3596, -1
  %3598 = icmp slt i32 %3595, %3597
  br i1 %3598, label %3618, label %3599

3599:                                             ; preds = %3594
  %3600 = icmp eq i32 %3595, %3597
  br i1 %3600, label %3601, label %3634

3601:                                             ; preds = %3599
  store i32 0, ptr %4, align 4, !tbaa !6
  %3602 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3602, ptr %6, align 4, !tbaa !6
  br i1 %3505, label %3641, label %3603

3603:                                             ; preds = %3601, %3628
  %3604 = phi i64 [ %3632, %3628 ], [ 1, %3601 ]
  %3605 = getelementptr inbounds i32, ptr %4, i64 %3604
  %3606 = load i32, ptr %3605, align 4, !tbaa !6
  %3607 = getelementptr inbounds i32, ptr %12, i64 %3604
  %3608 = load i32, ptr %3607, align 4, !tbaa !6
  %3609 = add nsw i32 %3608, -1
  %3610 = icmp slt i32 %3606, %3609
  br i1 %3610, label %3611, label %3626

3611:                                             ; preds = %3603
  br i1 %3598, label %3618, label %3612

3612:                                             ; preds = %3611
  %3613 = getelementptr inbounds i32, ptr %7, i64 %3604
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %6, i64 %3604
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, %3614
  store i32 %3617, ptr %3615, align 4, !tbaa !6
  br label %3636

3618:                                             ; preds = %3594, %3611
  %3619 = phi i32 [ %3606, %3611 ], [ %3595, %3594 ]
  %3620 = phi ptr [ %3605, %3611 ], [ %4, %3594 ]
  %3621 = phi i64 [ %3604, %3611 ], [ 0, %3594 ]
  %3622 = add nsw i32 %3619, 1
  store i32 %3622, ptr %3620, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %7, i64 %3621
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = getelementptr inbounds i32, ptr %6, i64 %3621
  br label %3636

3626:                                             ; preds = %3603
  %3627 = icmp eq i32 %3606, %3609
  br i1 %3627, label %3628, label %3634

3628:                                             ; preds = %3626
  store i32 0, ptr %3605, align 4, !tbaa !6
  %3629 = getelementptr inbounds i32, ptr %8, i64 %3604
  %3630 = load i32, ptr %3629, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %6, i64 %3604
  store i32 %3630, ptr %3631, align 4, !tbaa !6
  %3632 = add nuw nsw i64 %3604, 1
  %3633 = icmp eq i64 %3632, %3503
  br i1 %3633, label %3641, label %3603, !llvm.loop !1418

3634:                                             ; preds = %3599, %3626
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  %3635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3636:                                             ; preds = %3612, %3618
  %3637 = phi ptr [ %3625, %3618 ], [ %3605, %3612 ]
  %3638 = phi i32 [ %3624, %3618 ], [ 1, %3612 ]
  %3639 = load i32, ptr %3637, align 4, !tbaa !6
  %3640 = add nsw i32 %3639, %3638
  store i32 %3640, ptr %3637, align 4, !tbaa !6
  br label %3641

3641:                                             ; preds = %3628, %3636, %3601, %3580
  %3642 = icmp eq i32 %3593, %5
  br i1 %3642, label %5658, label %3506, !llvm.loop !1419

3643:                                             ; preds = %3489, %3783
  %3644 = phi i64 [ 0, %3489 ], [ %3731, %3783 ]
  %3645 = phi i32 [ 0, %3489 ], [ %3732, %3783 ]
  %3646 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3490, label %3647, label %3716

3647:                                             ; preds = %3643, %3706
  %3648 = phi i32 [ %3715, %3706 ], [ 0, %3643 ]
  %3649 = phi i64 [ %3657, %3706 ], [ %3494, %3643 ]
  %3650 = phi i64 [ %3714, %3706 ], [ %3493, %3643 ]
  %3651 = phi i32 [ %3712, %3706 ], [ %3646, %3643 ]
  %3652 = sub i32 %3492, %3648
  %3653 = tail call i32 @llvm.smin.i32(i32 %3652, i32 0)
  %3654 = sub i32 %3652, %3653
  %3655 = zext i32 %3654 to i64
  %3656 = add nuw nsw i64 %3655, 1
  %3657 = add nsw i64 %3649, -1
  %3658 = icmp ult i32 %3654, 31
  br i1 %3658, label %3694, label %3659

3659:                                             ; preds = %3647
  %3660 = and i64 %3656, 8589934560
  %3661 = sub i64 %3650, %3660
  br label %3662

3662:                                             ; preds = %3662, %3659
  %3663 = phi i64 [ 0, %3659 ], [ %3686, %3662 ]
  %3664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3682, %3662 ]
  %3665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3683, %3662 ]
  %3666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3684, %3662 ]
  %3667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3659 ], [ %3685, %3662 ]
  %3668 = sub i64 %3650, %3663
  %3669 = getelementptr inbounds i32, ptr %11, i64 %3668
  %3670 = getelementptr inbounds i32, ptr %3669, i64 -7
  %3671 = load <8 x i32>, ptr %3670, align 4, !tbaa !6
  %3672 = shufflevector <8 x i32> %3671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3673 = getelementptr inbounds i32, ptr %3669, i64 -15
  %3674 = load <8 x i32>, ptr %3673, align 4, !tbaa !6
  %3675 = shufflevector <8 x i32> %3674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3676 = getelementptr inbounds i32, ptr %3669, i64 -23
  %3677 = load <8 x i32>, ptr %3676, align 4, !tbaa !6
  %3678 = shufflevector <8 x i32> %3677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3679 = getelementptr inbounds i32, ptr %3669, i64 -31
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !6
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = mul <8 x i32> %3672, %3664
  %3683 = mul <8 x i32> %3675, %3665
  %3684 = mul <8 x i32> %3678, %3666
  %3685 = mul <8 x i32> %3681, %3667
  %3686 = add nuw i64 %3663, 32
  %3687 = icmp eq i64 %3686, %3660
  br i1 %3687, label %3688, label %3662, !llvm.loop !1420

3688:                                             ; preds = %3662
  %3689 = mul <8 x i32> %3683, %3682
  %3690 = mul <8 x i32> %3684, %3689
  %3691 = mul <8 x i32> %3685, %3690
  %3692 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3691)
  %3693 = icmp eq i64 %3656, %3660
  br i1 %3693, label %3706, label %3694

3694:                                             ; preds = %3647, %3688
  %3695 = phi i64 [ %3650, %3647 ], [ %3661, %3688 ]
  %3696 = phi i32 [ 1, %3647 ], [ %3692, %3688 ]
  br label %3697

3697:                                             ; preds = %3694, %3697
  %3698 = phi i64 [ %3703, %3697 ], [ %3695, %3694 ]
  %3699 = phi i32 [ %3702, %3697 ], [ %3696, %3694 ]
  %3700 = getelementptr inbounds i32, ptr %11, i64 %3698
  %3701 = load i32, ptr %3700, align 4, !tbaa !6
  %3702 = mul nsw i32 %3701, %3699
  %3703 = add nsw i64 %3698, -1
  %3704 = trunc i64 %3698 to i32
  %3705 = icmp sgt i32 %3704, 0
  br i1 %3705, label %3697, label %3706, !llvm.loop !1421

3706:                                             ; preds = %3697, %3688
  %3707 = phi i32 [ %3692, %3688 ], [ %3702, %3697 ]
  %3708 = and i64 %3657, 4294967295
  %3709 = getelementptr inbounds i32, ptr %6, i64 %3708
  %3710 = load i32, ptr %3709, align 4, !tbaa !6
  %3711 = mul nsw i32 %3710, %3707
  %3712 = add nsw i32 %3711, %3651
  %3713 = icmp sgt i64 %3649, 2
  %3714 = add nsw i64 %3650, -1
  %3715 = add i32 %3648, 1
  br i1 %3713, label %3647, label %3716, !llvm.loop !1422

3716:                                             ; preds = %3706, %3643
  %3717 = phi i32 [ %3646, %3643 ], [ %3712, %3706 ]
  %3718 = icmp slt i32 %3717, %5
  br i1 %3718, label %3721, label %3719

3719:                                             ; preds = %3716
  %3720 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

3721:                                             ; preds = %3716
  %3722 = sext i32 %3717 to i64
  %3723 = getelementptr inbounds double, ptr %3159, i64 %3722
  %3724 = load double, ptr %3723, align 8, !tbaa !19
  %3725 = fptosi double %3724 to i64
  %3726 = icmp slt i64 %3725, 0
  %3727 = mul nsw i64 %3725, %3725
  %3728 = sub nsw i64 0, %3727
  %3729 = select i1 %3726, i64 %3728, i64 %3727
  %3730 = mul i64 %3729, %3725
  %3731 = add nsw i64 %3730, %3644
  store i64 %3731, ptr %3161, align 8, !tbaa !121
  %3732 = add nuw nsw i32 %3645, 1
  br i1 %3491, label %3733, label %3783

3733:                                             ; preds = %3721
  %3734 = load i32, ptr %4, align 4, !tbaa !6
  %3735 = load i32, ptr %12, align 4, !tbaa !6
  %3736 = add nsw i32 %3735, -1
  %3737 = icmp slt i32 %3734, %3736
  br i1 %3737, label %3760, label %3738

3738:                                             ; preds = %3733
  %3739 = icmp eq i32 %3734, %3736
  br i1 %3739, label %3740, label %3776

3740:                                             ; preds = %3738
  store i32 0, ptr %4, align 4, !tbaa !6
  %3741 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3741, ptr %6, align 4, !tbaa !6
  br i1 %3496, label %3783, label %3742

3742:                                             ; preds = %3740, %3770
  %3743 = phi i64 [ %3774, %3770 ], [ 1, %3740 ]
  %3744 = getelementptr inbounds i32, ptr %4, i64 %3743
  %3745 = load i32, ptr %3744, align 4, !tbaa !6
  %3746 = getelementptr inbounds i32, ptr %12, i64 %3743
  %3747 = load i32, ptr %3746, align 4, !tbaa !6
  %3748 = add nsw i32 %3747, -1
  %3749 = icmp slt i32 %3745, %3748
  br i1 %3749, label %3750, label %3768

3750:                                             ; preds = %3742
  br i1 %3737, label %3760, label %3751

3751:                                             ; preds = %3750
  %3752 = shl i64 %3743, 32
  %3753 = add i64 %3752, -4294967296
  %3754 = ashr exact i64 %3753, 32
  %3755 = getelementptr inbounds i32, ptr %7, i64 %3754
  %3756 = load i32, ptr %3755, align 4, !tbaa !6
  %3757 = getelementptr inbounds i32, ptr %6, i64 %3743
  %3758 = load i32, ptr %3757, align 4, !tbaa !6
  %3759 = add nsw i32 %3758, %3756
  store i32 %3759, ptr %3757, align 4, !tbaa !6
  br label %3778

3760:                                             ; preds = %3733, %3750
  %3761 = phi i32 [ %3745, %3750 ], [ %3734, %3733 ]
  %3762 = phi ptr [ %3744, %3750 ], [ %4, %3733 ]
  %3763 = phi i64 [ %3743, %3750 ], [ 0, %3733 ]
  %3764 = add nsw i32 %3761, 1
  store i32 %3764, ptr %3762, align 4, !tbaa !6
  %3765 = getelementptr inbounds i32, ptr %7, i64 %3763
  %3766 = load i32, ptr %3765, align 4, !tbaa !6
  %3767 = getelementptr inbounds i32, ptr %6, i64 %3763
  br label %3778

3768:                                             ; preds = %3742
  %3769 = icmp eq i32 %3745, %3748
  br i1 %3769, label %3770, label %3776

3770:                                             ; preds = %3768
  store i32 0, ptr %3744, align 4, !tbaa !6
  %3771 = getelementptr inbounds i32, ptr %8, i64 %3743
  %3772 = load i32, ptr %3771, align 4, !tbaa !6
  %3773 = getelementptr inbounds i32, ptr %6, i64 %3743
  store i32 %3772, ptr %3773, align 4, !tbaa !6
  %3774 = add nuw nsw i64 %3743, 1
  %3775 = icmp eq i64 %3774, %3494
  br i1 %3775, label %3783, label %3742, !llvm.loop !1423

3776:                                             ; preds = %3738, %3768
  %3777 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3778:                                             ; preds = %3751, %3760
  %3779 = phi ptr [ %3767, %3760 ], [ %3744, %3751 ]
  %3780 = phi i32 [ %3766, %3760 ], [ 1, %3751 ]
  %3781 = load i32, ptr %3779, align 4, !tbaa !6
  %3782 = add nsw i32 %3781, %3780
  store i32 %3782, ptr %3779, align 4, !tbaa !6
  br label %3783

3783:                                             ; preds = %3770, %3778, %3740, %3721
  %3784 = icmp eq i32 %3732, %5
  br i1 %3784, label %5661, label %3643, !llvm.loop !1424

3785:                                             ; preds = %3171
  %3786 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

3787:                                             ; preds = %18
  %3788 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3789 = load ptr, ptr %3788, align 8, !tbaa !10
  %3790 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3791 = load ptr, ptr %3790, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3791, align 8, !tbaa !19
  %3792 = icmp eq i32 %13, 0
  br i1 %3792, label %3793, label %3800

3793:                                             ; preds = %3787
  %3794 = load double, ptr %3789, align 8, !tbaa !19
  %3795 = fcmp fast olt double %3794, 0.000000e+00
  %3796 = fneg fast double %3794
  %3797 = select nnan ninf i1 %3795, double %3796, double %3794
  %3798 = fmul fast double %3794, %3794
  %3799 = fmul fast double %3798, %3797
  store double %3799, ptr %3791, align 8, !tbaa !19
  br label %5661

3800:                                             ; preds = %3787
  switch i32 %1, label %4404 [
    i32 1, label %3801
    i32 0, label %4104
  ]

3801:                                             ; preds = %3800
  %3802 = getelementptr inbounds i32, ptr %3, i64 %19
  %3803 = load i32, ptr %3802, align 4, !tbaa !6
  %3804 = icmp eq i32 %3803, 0
  %3805 = icmp sgt i32 %5, 0
  br i1 %3804, label %3815, label %3806

3806:                                             ; preds = %3801
  br i1 %3805, label %3807, label %5661

3807:                                             ; preds = %3806
  %3808 = icmp sgt i32 %13, 1
  %3809 = icmp sgt i32 %13, 0
  %3810 = add i32 %13, -2
  %3811 = zext i32 %3810 to i64
  %3812 = zext i32 %13 to i64
  %3813 = add nuw i32 %5, 1
  %3814 = icmp eq i32 %13, 1
  br label %3963

3815:                                             ; preds = %3801
  br i1 %3805, label %3816, label %5661

3816:                                             ; preds = %3815
  %3817 = icmp sgt i32 %13, 1
  %3818 = icmp sgt i32 %13, 0
  %3819 = add i32 %13, -2
  %3820 = zext i32 %3819 to i64
  %3821 = zext i32 %13 to i64
  %3822 = add nuw i32 %5, 1
  %3823 = icmp eq i32 %13, 1
  br label %3824

3824:                                             ; preds = %3816, %3961
  %3825 = phi double [ 0.000000e+00, %3816 ], [ %3911, %3961 ]
  %3826 = phi i32 [ 0, %3816 ], [ %3913, %3961 ]
  %3827 = phi double [ 0.000000e+00, %3816 ], [ %3912, %3961 ]
  %3828 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3817, label %3829, label %3898

3829:                                             ; preds = %3824, %3888
  %3830 = phi i32 [ %3897, %3888 ], [ 0, %3824 ]
  %3831 = phi i64 [ %3839, %3888 ], [ %3821, %3824 ]
  %3832 = phi i64 [ %3896, %3888 ], [ %3820, %3824 ]
  %3833 = phi i32 [ %3894, %3888 ], [ %3828, %3824 ]
  %3834 = sub i32 %3819, %3830
  %3835 = tail call i32 @llvm.smin.i32(i32 %3834, i32 0)
  %3836 = sub i32 %3834, %3835
  %3837 = zext i32 %3836 to i64
  %3838 = add nuw nsw i64 %3837, 1
  %3839 = add nsw i64 %3831, -1
  %3840 = icmp ult i32 %3836, 31
  br i1 %3840, label %3876, label %3841

3841:                                             ; preds = %3829
  %3842 = and i64 %3838, 8589934560
  %3843 = sub i64 %3832, %3842
  br label %3844

3844:                                             ; preds = %3844, %3841
  %3845 = phi i64 [ 0, %3841 ], [ %3868, %3844 ]
  %3846 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3864, %3844 ]
  %3847 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3865, %3844 ]
  %3848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3866, %3844 ]
  %3849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3841 ], [ %3867, %3844 ]
  %3850 = sub i64 %3832, %3845
  %3851 = getelementptr inbounds i32, ptr %9, i64 %3850
  %3852 = getelementptr inbounds i32, ptr %3851, i64 -7
  %3853 = load <8 x i32>, ptr %3852, align 4, !tbaa !6
  %3854 = shufflevector <8 x i32> %3853, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3855 = getelementptr inbounds i32, ptr %3851, i64 -15
  %3856 = load <8 x i32>, ptr %3855, align 4, !tbaa !6
  %3857 = shufflevector <8 x i32> %3856, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3858 = getelementptr inbounds i32, ptr %3851, i64 -23
  %3859 = load <8 x i32>, ptr %3858, align 4, !tbaa !6
  %3860 = shufflevector <8 x i32> %3859, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3861 = getelementptr inbounds i32, ptr %3851, i64 -31
  %3862 = load <8 x i32>, ptr %3861, align 4, !tbaa !6
  %3863 = shufflevector <8 x i32> %3862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3864 = mul <8 x i32> %3854, %3846
  %3865 = mul <8 x i32> %3857, %3847
  %3866 = mul <8 x i32> %3860, %3848
  %3867 = mul <8 x i32> %3863, %3849
  %3868 = add nuw i64 %3845, 32
  %3869 = icmp eq i64 %3868, %3842
  br i1 %3869, label %3870, label %3844, !llvm.loop !1425

3870:                                             ; preds = %3844
  %3871 = mul <8 x i32> %3865, %3864
  %3872 = mul <8 x i32> %3866, %3871
  %3873 = mul <8 x i32> %3867, %3872
  %3874 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3873)
  %3875 = icmp eq i64 %3838, %3842
  br i1 %3875, label %3888, label %3876

3876:                                             ; preds = %3829, %3870
  %3877 = phi i64 [ %3832, %3829 ], [ %3843, %3870 ]
  %3878 = phi i32 [ 1, %3829 ], [ %3874, %3870 ]
  br label %3879

3879:                                             ; preds = %3876, %3879
  %3880 = phi i64 [ %3885, %3879 ], [ %3877, %3876 ]
  %3881 = phi i32 [ %3884, %3879 ], [ %3878, %3876 ]
  %3882 = getelementptr inbounds i32, ptr %9, i64 %3880
  %3883 = load i32, ptr %3882, align 4, !tbaa !6
  %3884 = mul nsw i32 %3883, %3881
  %3885 = add nsw i64 %3880, -1
  %3886 = trunc i64 %3880 to i32
  %3887 = icmp sgt i32 %3886, 0
  br i1 %3887, label %3879, label %3888, !llvm.loop !1426

3888:                                             ; preds = %3879, %3870
  %3889 = phi i32 [ %3874, %3870 ], [ %3884, %3879 ]
  %3890 = and i64 %3839, 4294967295
  %3891 = getelementptr inbounds i32, ptr %6, i64 %3890
  %3892 = load i32, ptr %3891, align 4, !tbaa !6
  %3893 = mul nsw i32 %3892, %3889
  %3894 = add nsw i32 %3893, %3833
  %3895 = icmp sgt i64 %3831, 2
  %3896 = add nsw i64 %3832, -1
  %3897 = add i32 %3830, 1
  br i1 %3895, label %3829, label %3898, !llvm.loop !1427

3898:                                             ; preds = %3888, %3824
  %3899 = phi i32 [ %3828, %3824 ], [ %3894, %3888 ]
  %3900 = sext i32 %3899 to i64
  %3901 = getelementptr inbounds double, ptr %2, i64 %3900
  %3902 = load double, ptr %3901, align 8, !tbaa !19
  %3903 = getelementptr inbounds double, ptr %3789, i64 %3900
  %3904 = load double, ptr %3903, align 8, !tbaa !19
  %3905 = fmul fast double %3904, %3902
  %3906 = fcmp fast olt double %3905, 0.000000e+00
  %3907 = fneg fast double %3905
  %3908 = select nnan ninf i1 %3906, double %3907, double %3905
  %3909 = fmul fast double %3905, %3905
  %3910 = fmul fast double %3909, %3908
  %3911 = fadd fast double %3910, %3825
  store double %3911, ptr %3791, align 8, !tbaa !19
  %3912 = fadd fast double %3902, %3827
  %3913 = add nuw nsw i32 %3826, 1
  br i1 %3818, label %3914, label %3961

3914:                                             ; preds = %3898
  %3915 = load i32, ptr %4, align 4, !tbaa !6
  %3916 = load i32, ptr %12, align 4, !tbaa !6
  %3917 = add nsw i32 %3916, -1
  %3918 = icmp slt i32 %3915, %3917
  br i1 %3918, label %3938, label %3919

3919:                                             ; preds = %3914
  %3920 = icmp eq i32 %3915, %3917
  br i1 %3920, label %3921, label %3954

3921:                                             ; preds = %3919
  store i32 0, ptr %4, align 4, !tbaa !6
  %3922 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3922, ptr %6, align 4, !tbaa !6
  br i1 %3823, label %3961, label %3923

3923:                                             ; preds = %3921, %3948
  %3924 = phi i64 [ %3952, %3948 ], [ 1, %3921 ]
  %3925 = getelementptr inbounds i32, ptr %4, i64 %3924
  %3926 = load i32, ptr %3925, align 4, !tbaa !6
  %3927 = getelementptr inbounds i32, ptr %12, i64 %3924
  %3928 = load i32, ptr %3927, align 4, !tbaa !6
  %3929 = add nsw i32 %3928, -1
  %3930 = icmp slt i32 %3926, %3929
  br i1 %3930, label %3931, label %3946

3931:                                             ; preds = %3923
  br i1 %3918, label %3938, label %3932

3932:                                             ; preds = %3931
  %3933 = getelementptr inbounds i32, ptr %7, i64 %3924
  %3934 = load i32, ptr %3933, align 4, !tbaa !6
  %3935 = getelementptr inbounds i32, ptr %6, i64 %3924
  %3936 = load i32, ptr %3935, align 4, !tbaa !6
  %3937 = add nsw i32 %3936, %3934
  store i32 %3937, ptr %3935, align 4, !tbaa !6
  br label %3956

3938:                                             ; preds = %3914, %3931
  %3939 = phi i32 [ %3926, %3931 ], [ %3915, %3914 ]
  %3940 = phi ptr [ %3925, %3931 ], [ %4, %3914 ]
  %3941 = phi i64 [ %3924, %3931 ], [ 0, %3914 ]
  %3942 = add nsw i32 %3939, 1
  store i32 %3942, ptr %3940, align 4, !tbaa !6
  %3943 = getelementptr inbounds i32, ptr %7, i64 %3941
  %3944 = load i32, ptr %3943, align 4, !tbaa !6
  %3945 = getelementptr inbounds i32, ptr %6, i64 %3941
  br label %3956

3946:                                             ; preds = %3923
  %3947 = icmp eq i32 %3926, %3929
  br i1 %3947, label %3948, label %3954

3948:                                             ; preds = %3946
  store i32 0, ptr %3925, align 4, !tbaa !6
  %3949 = getelementptr inbounds i32, ptr %8, i64 %3924
  %3950 = load i32, ptr %3949, align 4, !tbaa !6
  %3951 = getelementptr inbounds i32, ptr %6, i64 %3924
  store i32 %3950, ptr %3951, align 4, !tbaa !6
  %3952 = add nuw nsw i64 %3924, 1
  %3953 = icmp eq i64 %3952, %3821
  br i1 %3953, label %3961, label %3923, !llvm.loop !1428

3954:                                             ; preds = %3919, %3946
  %3955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

3956:                                             ; preds = %3932, %3938
  %3957 = phi ptr [ %3945, %3938 ], [ %3925, %3932 ]
  %3958 = phi i32 [ %3944, %3938 ], [ 1, %3932 ]
  %3959 = load i32, ptr %3957, align 4, !tbaa !6
  %3960 = add nsw i32 %3959, %3958
  store i32 %3960, ptr %3957, align 4, !tbaa !6
  br label %3961

3961:                                             ; preds = %3948, %3956, %3921, %3898
  %3962 = icmp eq i32 %3913, %5
  br i1 %3962, label %5661, label %3824, !llvm.loop !1429

3963:                                             ; preds = %3807, %4102
  %3964 = phi double [ 0.000000e+00, %3807 ], [ %4050, %4102 ]
  %3965 = phi i32 [ 0, %3807 ], [ %4051, %4102 ]
  %3966 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3808, label %3967, label %4036

3967:                                             ; preds = %3963, %4026
  %3968 = phi i32 [ %4035, %4026 ], [ 0, %3963 ]
  %3969 = phi i64 [ %3977, %4026 ], [ %3812, %3963 ]
  %3970 = phi i64 [ %4034, %4026 ], [ %3811, %3963 ]
  %3971 = phi i32 [ %4032, %4026 ], [ %3966, %3963 ]
  %3972 = sub i32 %3810, %3968
  %3973 = tail call i32 @llvm.smin.i32(i32 %3972, i32 0)
  %3974 = sub i32 %3972, %3973
  %3975 = zext i32 %3974 to i64
  %3976 = add nuw nsw i64 %3975, 1
  %3977 = add nsw i64 %3969, -1
  %3978 = icmp ult i32 %3974, 31
  br i1 %3978, label %4014, label %3979

3979:                                             ; preds = %3967
  %3980 = and i64 %3976, 8589934560
  %3981 = sub i64 %3970, %3980
  br label %3982

3982:                                             ; preds = %3982, %3979
  %3983 = phi i64 [ 0, %3979 ], [ %4006, %3982 ]
  %3984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4002, %3982 ]
  %3985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4003, %3982 ]
  %3986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4004, %3982 ]
  %3987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3979 ], [ %4005, %3982 ]
  %3988 = sub i64 %3970, %3983
  %3989 = getelementptr inbounds i32, ptr %11, i64 %3988
  %3990 = getelementptr inbounds i32, ptr %3989, i64 -7
  %3991 = load <8 x i32>, ptr %3990, align 4, !tbaa !6
  %3992 = shufflevector <8 x i32> %3991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3993 = getelementptr inbounds i32, ptr %3989, i64 -15
  %3994 = load <8 x i32>, ptr %3993, align 4, !tbaa !6
  %3995 = shufflevector <8 x i32> %3994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3996 = getelementptr inbounds i32, ptr %3989, i64 -23
  %3997 = load <8 x i32>, ptr %3996, align 4, !tbaa !6
  %3998 = shufflevector <8 x i32> %3997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3999 = getelementptr inbounds i32, ptr %3989, i64 -31
  %4000 = load <8 x i32>, ptr %3999, align 4, !tbaa !6
  %4001 = shufflevector <8 x i32> %4000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4002 = mul <8 x i32> %3992, %3984
  %4003 = mul <8 x i32> %3995, %3985
  %4004 = mul <8 x i32> %3998, %3986
  %4005 = mul <8 x i32> %4001, %3987
  %4006 = add nuw i64 %3983, 32
  %4007 = icmp eq i64 %4006, %3980
  br i1 %4007, label %4008, label %3982, !llvm.loop !1430

4008:                                             ; preds = %3982
  %4009 = mul <8 x i32> %4003, %4002
  %4010 = mul <8 x i32> %4004, %4009
  %4011 = mul <8 x i32> %4005, %4010
  %4012 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4011)
  %4013 = icmp eq i64 %3976, %3980
  br i1 %4013, label %4026, label %4014

4014:                                             ; preds = %3967, %4008
  %4015 = phi i64 [ %3970, %3967 ], [ %3981, %4008 ]
  %4016 = phi i32 [ 1, %3967 ], [ %4012, %4008 ]
  br label %4017

4017:                                             ; preds = %4014, %4017
  %4018 = phi i64 [ %4023, %4017 ], [ %4015, %4014 ]
  %4019 = phi i32 [ %4022, %4017 ], [ %4016, %4014 ]
  %4020 = getelementptr inbounds i32, ptr %11, i64 %4018
  %4021 = load i32, ptr %4020, align 4, !tbaa !6
  %4022 = mul nsw i32 %4021, %4019
  %4023 = add nsw i64 %4018, -1
  %4024 = trunc i64 %4018 to i32
  %4025 = icmp sgt i32 %4024, 0
  br i1 %4025, label %4017, label %4026, !llvm.loop !1431

4026:                                             ; preds = %4017, %4008
  %4027 = phi i32 [ %4012, %4008 ], [ %4022, %4017 ]
  %4028 = and i64 %3977, 4294967295
  %4029 = getelementptr inbounds i32, ptr %6, i64 %4028
  %4030 = load i32, ptr %4029, align 4, !tbaa !6
  %4031 = mul nsw i32 %4030, %4027
  %4032 = add nsw i32 %4031, %3971
  %4033 = icmp sgt i64 %3969, 2
  %4034 = add nsw i64 %3970, -1
  %4035 = add i32 %3968, 1
  br i1 %4033, label %3967, label %4036, !llvm.loop !1432

4036:                                             ; preds = %4026, %3963
  %4037 = phi i32 [ %3966, %3963 ], [ %4032, %4026 ]
  %4038 = icmp slt i32 %4037, %5
  br i1 %4038, label %4041, label %4039

4039:                                             ; preds = %4036
  %4040 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4041:                                             ; preds = %4036
  %4042 = sext i32 %4037 to i64
  %4043 = getelementptr inbounds double, ptr %3789, i64 %4042
  %4044 = load double, ptr %4043, align 8, !tbaa !19
  %4045 = fcmp fast olt double %4044, 0.000000e+00
  %4046 = fneg fast double %4044
  %4047 = select nnan ninf i1 %4045, double %4046, double %4044
  %4048 = fmul fast double %4044, %4044
  %4049 = fmul fast double %4048, %4047
  %4050 = fadd fast double %4049, %3964
  store double %4050, ptr %3791, align 8, !tbaa !19
  %4051 = add nuw nsw i32 %3965, 1
  br i1 %3809, label %4052, label %4102

4052:                                             ; preds = %4041
  %4053 = load i32, ptr %4, align 4, !tbaa !6
  %4054 = load i32, ptr %12, align 4, !tbaa !6
  %4055 = add nsw i32 %4054, -1
  %4056 = icmp slt i32 %4053, %4055
  br i1 %4056, label %4079, label %4057

4057:                                             ; preds = %4052
  %4058 = icmp eq i32 %4053, %4055
  br i1 %4058, label %4059, label %4095

4059:                                             ; preds = %4057
  store i32 0, ptr %4, align 4, !tbaa !6
  %4060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4060, ptr %6, align 4, !tbaa !6
  br i1 %3814, label %4102, label %4061

4061:                                             ; preds = %4059, %4089
  %4062 = phi i64 [ %4093, %4089 ], [ 1, %4059 ]
  %4063 = getelementptr inbounds i32, ptr %4, i64 %4062
  %4064 = load i32, ptr %4063, align 4, !tbaa !6
  %4065 = getelementptr inbounds i32, ptr %12, i64 %4062
  %4066 = load i32, ptr %4065, align 4, !tbaa !6
  %4067 = add nsw i32 %4066, -1
  %4068 = icmp slt i32 %4064, %4067
  br i1 %4068, label %4069, label %4087

4069:                                             ; preds = %4061
  br i1 %4056, label %4079, label %4070

4070:                                             ; preds = %4069
  %4071 = shl i64 %4062, 32
  %4072 = add i64 %4071, -4294967296
  %4073 = ashr exact i64 %4072, 32
  %4074 = getelementptr inbounds i32, ptr %7, i64 %4073
  %4075 = load i32, ptr %4074, align 4, !tbaa !6
  %4076 = getelementptr inbounds i32, ptr %6, i64 %4062
  %4077 = load i32, ptr %4076, align 4, !tbaa !6
  %4078 = add nsw i32 %4077, %4075
  store i32 %4078, ptr %4076, align 4, !tbaa !6
  br label %4097

4079:                                             ; preds = %4052, %4069
  %4080 = phi i32 [ %4064, %4069 ], [ %4053, %4052 ]
  %4081 = phi ptr [ %4063, %4069 ], [ %4, %4052 ]
  %4082 = phi i64 [ %4062, %4069 ], [ 0, %4052 ]
  %4083 = add nsw i32 %4080, 1
  store i32 %4083, ptr %4081, align 4, !tbaa !6
  %4084 = getelementptr inbounds i32, ptr %7, i64 %4082
  %4085 = load i32, ptr %4084, align 4, !tbaa !6
  %4086 = getelementptr inbounds i32, ptr %6, i64 %4082
  br label %4097

4087:                                             ; preds = %4061
  %4088 = icmp eq i32 %4064, %4067
  br i1 %4088, label %4089, label %4095

4089:                                             ; preds = %4087
  store i32 0, ptr %4063, align 4, !tbaa !6
  %4090 = getelementptr inbounds i32, ptr %8, i64 %4062
  %4091 = load i32, ptr %4090, align 4, !tbaa !6
  %4092 = getelementptr inbounds i32, ptr %6, i64 %4062
  store i32 %4091, ptr %4092, align 4, !tbaa !6
  %4093 = add nuw nsw i64 %4062, 1
  %4094 = icmp eq i64 %4093, %3812
  br i1 %4094, label %4102, label %4061, !llvm.loop !1433

4095:                                             ; preds = %4057, %4087
  %4096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4097:                                             ; preds = %4070, %4079
  %4098 = phi ptr [ %4086, %4079 ], [ %4063, %4070 ]
  %4099 = phi i32 [ %4085, %4079 ], [ 1, %4070 ]
  %4100 = load i32, ptr %4098, align 4, !tbaa !6
  %4101 = add nsw i32 %4100, %4099
  store i32 %4101, ptr %4098, align 4, !tbaa !6
  br label %4102

4102:                                             ; preds = %4089, %4097, %4059, %4041
  %4103 = icmp eq i32 %4051, %5
  br i1 %4103, label %5661, label %3963, !llvm.loop !1434

4104:                                             ; preds = %3800
  %4105 = getelementptr inbounds i32, ptr %3, i64 %19
  %4106 = load i32, ptr %4105, align 4, !tbaa !6
  %4107 = icmp eq i32 %4106, 0
  %4108 = icmp sgt i32 %5, 0
  br i1 %4107, label %4118, label %4109

4109:                                             ; preds = %4104
  br i1 %4108, label %4110, label %5661

4110:                                             ; preds = %4109
  %4111 = icmp sgt i32 %13, 1
  %4112 = icmp sgt i32 %13, 0
  %4113 = add i32 %13, -2
  %4114 = zext i32 %4113 to i64
  %4115 = zext i32 %13 to i64
  %4116 = add nuw i32 %5, 1
  %4117 = icmp eq i32 %13, 1
  br label %4263

4118:                                             ; preds = %4104
  br i1 %4108, label %4119, label %5661

4119:                                             ; preds = %4118
  %4120 = icmp sgt i32 %13, 1
  %4121 = icmp sgt i32 %13, 0
  %4122 = add i32 %13, -2
  %4123 = zext i32 %4122 to i64
  %4124 = zext i32 %13 to i64
  %4125 = add nuw i32 %5, 1
  %4126 = icmp eq i32 %13, 1
  br label %4127

4127:                                             ; preds = %4119, %4261
  %4128 = phi double [ 0.000000e+00, %4119 ], [ %4211, %4261 ]
  %4129 = phi i32 [ 0, %4119 ], [ %4213, %4261 ]
  %4130 = phi double [ 0.000000e+00, %4119 ], [ %4212, %4261 ]
  %4131 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4120, label %4132, label %4201

4132:                                             ; preds = %4127, %4191
  %4133 = phi i32 [ %4200, %4191 ], [ 0, %4127 ]
  %4134 = phi i64 [ %4142, %4191 ], [ %4124, %4127 ]
  %4135 = phi i64 [ %4199, %4191 ], [ %4123, %4127 ]
  %4136 = phi i32 [ %4197, %4191 ], [ %4131, %4127 ]
  %4137 = sub i32 %4122, %4133
  %4138 = tail call i32 @llvm.smin.i32(i32 %4137, i32 0)
  %4139 = sub i32 %4137, %4138
  %4140 = zext i32 %4139 to i64
  %4141 = add nuw nsw i64 %4140, 1
  %4142 = add nsw i64 %4134, -1
  %4143 = icmp ult i32 %4139, 31
  br i1 %4143, label %4179, label %4144

4144:                                             ; preds = %4132
  %4145 = and i64 %4141, 8589934560
  %4146 = sub i64 %4135, %4145
  br label %4147

4147:                                             ; preds = %4147, %4144
  %4148 = phi i64 [ 0, %4144 ], [ %4171, %4147 ]
  %4149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4167, %4147 ]
  %4150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4168, %4147 ]
  %4151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4169, %4147 ]
  %4152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4144 ], [ %4170, %4147 ]
  %4153 = sub i64 %4135, %4148
  %4154 = getelementptr inbounds i32, ptr %9, i64 %4153
  %4155 = getelementptr inbounds i32, ptr %4154, i64 -7
  %4156 = load <8 x i32>, ptr %4155, align 4, !tbaa !6
  %4157 = shufflevector <8 x i32> %4156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4158 = getelementptr inbounds i32, ptr %4154, i64 -15
  %4159 = load <8 x i32>, ptr %4158, align 4, !tbaa !6
  %4160 = shufflevector <8 x i32> %4159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4161 = getelementptr inbounds i32, ptr %4154, i64 -23
  %4162 = load <8 x i32>, ptr %4161, align 4, !tbaa !6
  %4163 = shufflevector <8 x i32> %4162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4164 = getelementptr inbounds i32, ptr %4154, i64 -31
  %4165 = load <8 x i32>, ptr %4164, align 4, !tbaa !6
  %4166 = shufflevector <8 x i32> %4165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4167 = mul <8 x i32> %4157, %4149
  %4168 = mul <8 x i32> %4160, %4150
  %4169 = mul <8 x i32> %4163, %4151
  %4170 = mul <8 x i32> %4166, %4152
  %4171 = add nuw i64 %4148, 32
  %4172 = icmp eq i64 %4171, %4145
  br i1 %4172, label %4173, label %4147, !llvm.loop !1435

4173:                                             ; preds = %4147
  %4174 = mul <8 x i32> %4168, %4167
  %4175 = mul <8 x i32> %4169, %4174
  %4176 = mul <8 x i32> %4170, %4175
  %4177 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4176)
  %4178 = icmp eq i64 %4141, %4145
  br i1 %4178, label %4191, label %4179

4179:                                             ; preds = %4132, %4173
  %4180 = phi i64 [ %4135, %4132 ], [ %4146, %4173 ]
  %4181 = phi i32 [ 1, %4132 ], [ %4177, %4173 ]
  br label %4182

4182:                                             ; preds = %4179, %4182
  %4183 = phi i64 [ %4188, %4182 ], [ %4180, %4179 ]
  %4184 = phi i32 [ %4187, %4182 ], [ %4181, %4179 ]
  %4185 = getelementptr inbounds i32, ptr %9, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !6
  %4187 = mul nsw i32 %4186, %4184
  %4188 = add nsw i64 %4183, -1
  %4189 = trunc i64 %4183 to i32
  %4190 = icmp sgt i32 %4189, 0
  br i1 %4190, label %4182, label %4191, !llvm.loop !1436

4191:                                             ; preds = %4182, %4173
  %4192 = phi i32 [ %4177, %4173 ], [ %4187, %4182 ]
  %4193 = and i64 %4142, 4294967295
  %4194 = getelementptr inbounds i32, ptr %6, i64 %4193
  %4195 = load i32, ptr %4194, align 4, !tbaa !6
  %4196 = mul nsw i32 %4195, %4192
  %4197 = add nsw i32 %4196, %4136
  %4198 = icmp sgt i64 %4134, 2
  %4199 = add nsw i64 %4135, -1
  %4200 = add i32 %4133, 1
  br i1 %4198, label %4132, label %4201, !llvm.loop !1437

4201:                                             ; preds = %4191, %4127
  %4202 = phi i32 [ %4131, %4127 ], [ %4197, %4191 ]
  %4203 = sext i32 %4202 to i64
  %4204 = getelementptr inbounds double, ptr %3789, i64 %4203
  %4205 = load double, ptr %4204, align 8, !tbaa !19
  %4206 = fcmp fast olt double %4205, 0.000000e+00
  %4207 = fneg fast double %4205
  %4208 = select nnan ninf i1 %4206, double %4207, double %4205
  %4209 = fmul fast double %4205, %4205
  %4210 = fmul fast double %4209, %4208
  %4211 = fadd fast double %4210, %4128
  store double %4211, ptr %3791, align 8, !tbaa !19
  %4212 = fadd fast double %4130, 1.000000e+00
  %4213 = add nuw nsw i32 %4129, 1
  br i1 %4121, label %4214, label %4261

4214:                                             ; preds = %4201
  %4215 = load i32, ptr %4, align 4, !tbaa !6
  %4216 = load i32, ptr %12, align 4, !tbaa !6
  %4217 = add nsw i32 %4216, -1
  %4218 = icmp slt i32 %4215, %4217
  br i1 %4218, label %4238, label %4219

4219:                                             ; preds = %4214
  %4220 = icmp eq i32 %4215, %4217
  br i1 %4220, label %4221, label %4254

4221:                                             ; preds = %4219
  store i32 0, ptr %4, align 4, !tbaa !6
  %4222 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4222, ptr %6, align 4, !tbaa !6
  br i1 %4126, label %4261, label %4223

4223:                                             ; preds = %4221, %4248
  %4224 = phi i64 [ %4252, %4248 ], [ 1, %4221 ]
  %4225 = getelementptr inbounds i32, ptr %4, i64 %4224
  %4226 = load i32, ptr %4225, align 4, !tbaa !6
  %4227 = getelementptr inbounds i32, ptr %12, i64 %4224
  %4228 = load i32, ptr %4227, align 4, !tbaa !6
  %4229 = add nsw i32 %4228, -1
  %4230 = icmp slt i32 %4226, %4229
  br i1 %4230, label %4231, label %4246

4231:                                             ; preds = %4223
  br i1 %4218, label %4238, label %4232

4232:                                             ; preds = %4231
  %4233 = getelementptr inbounds i32, ptr %7, i64 %4224
  %4234 = load i32, ptr %4233, align 4, !tbaa !6
  %4235 = getelementptr inbounds i32, ptr %6, i64 %4224
  %4236 = load i32, ptr %4235, align 4, !tbaa !6
  %4237 = add nsw i32 %4236, %4234
  store i32 %4237, ptr %4235, align 4, !tbaa !6
  br label %4256

4238:                                             ; preds = %4214, %4231
  %4239 = phi i32 [ %4226, %4231 ], [ %4215, %4214 ]
  %4240 = phi ptr [ %4225, %4231 ], [ %4, %4214 ]
  %4241 = phi i64 [ %4224, %4231 ], [ 0, %4214 ]
  %4242 = add nsw i32 %4239, 1
  store i32 %4242, ptr %4240, align 4, !tbaa !6
  %4243 = getelementptr inbounds i32, ptr %7, i64 %4241
  %4244 = load i32, ptr %4243, align 4, !tbaa !6
  %4245 = getelementptr inbounds i32, ptr %6, i64 %4241
  br label %4256

4246:                                             ; preds = %4223
  %4247 = icmp eq i32 %4226, %4229
  br i1 %4247, label %4248, label %4254

4248:                                             ; preds = %4246
  store i32 0, ptr %4225, align 4, !tbaa !6
  %4249 = getelementptr inbounds i32, ptr %8, i64 %4224
  %4250 = load i32, ptr %4249, align 4, !tbaa !6
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4224
  store i32 %4250, ptr %4251, align 4, !tbaa !6
  %4252 = add nuw nsw i64 %4224, 1
  %4253 = icmp eq i64 %4252, %4124
  br i1 %4253, label %4261, label %4223, !llvm.loop !1438

4254:                                             ; preds = %4219, %4246
  %4255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4256:                                             ; preds = %4232, %4238
  %4257 = phi ptr [ %4245, %4238 ], [ %4225, %4232 ]
  %4258 = phi i32 [ %4244, %4238 ], [ 1, %4232 ]
  %4259 = load i32, ptr %4257, align 4, !tbaa !6
  %4260 = add nsw i32 %4259, %4258
  store i32 %4260, ptr %4257, align 4, !tbaa !6
  br label %4261

4261:                                             ; preds = %4248, %4256, %4221, %4201
  %4262 = icmp eq i32 %4213, %5
  br i1 %4262, label %5661, label %4127, !llvm.loop !1439

4263:                                             ; preds = %4110, %4402
  %4264 = phi double [ 0.000000e+00, %4110 ], [ %4350, %4402 ]
  %4265 = phi i32 [ 0, %4110 ], [ %4351, %4402 ]
  %4266 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4111, label %4267, label %4336

4267:                                             ; preds = %4263, %4326
  %4268 = phi i32 [ %4335, %4326 ], [ 0, %4263 ]
  %4269 = phi i64 [ %4277, %4326 ], [ %4115, %4263 ]
  %4270 = phi i64 [ %4334, %4326 ], [ %4114, %4263 ]
  %4271 = phi i32 [ %4332, %4326 ], [ %4266, %4263 ]
  %4272 = sub i32 %4113, %4268
  %4273 = tail call i32 @llvm.smin.i32(i32 %4272, i32 0)
  %4274 = sub i32 %4272, %4273
  %4275 = zext i32 %4274 to i64
  %4276 = add nuw nsw i64 %4275, 1
  %4277 = add nsw i64 %4269, -1
  %4278 = icmp ult i32 %4274, 31
  br i1 %4278, label %4314, label %4279

4279:                                             ; preds = %4267
  %4280 = and i64 %4276, 8589934560
  %4281 = sub i64 %4270, %4280
  br label %4282

4282:                                             ; preds = %4282, %4279
  %4283 = phi i64 [ 0, %4279 ], [ %4306, %4282 ]
  %4284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4302, %4282 ]
  %4285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4303, %4282 ]
  %4286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4304, %4282 ]
  %4287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4279 ], [ %4305, %4282 ]
  %4288 = sub i64 %4270, %4283
  %4289 = getelementptr inbounds i32, ptr %11, i64 %4288
  %4290 = getelementptr inbounds i32, ptr %4289, i64 -7
  %4291 = load <8 x i32>, ptr %4290, align 4, !tbaa !6
  %4292 = shufflevector <8 x i32> %4291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4293 = getelementptr inbounds i32, ptr %4289, i64 -15
  %4294 = load <8 x i32>, ptr %4293, align 4, !tbaa !6
  %4295 = shufflevector <8 x i32> %4294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4296 = getelementptr inbounds i32, ptr %4289, i64 -23
  %4297 = load <8 x i32>, ptr %4296, align 4, !tbaa !6
  %4298 = shufflevector <8 x i32> %4297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4299 = getelementptr inbounds i32, ptr %4289, i64 -31
  %4300 = load <8 x i32>, ptr %4299, align 4, !tbaa !6
  %4301 = shufflevector <8 x i32> %4300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4302 = mul <8 x i32> %4292, %4284
  %4303 = mul <8 x i32> %4295, %4285
  %4304 = mul <8 x i32> %4298, %4286
  %4305 = mul <8 x i32> %4301, %4287
  %4306 = add nuw i64 %4283, 32
  %4307 = icmp eq i64 %4306, %4280
  br i1 %4307, label %4308, label %4282, !llvm.loop !1440

4308:                                             ; preds = %4282
  %4309 = mul <8 x i32> %4303, %4302
  %4310 = mul <8 x i32> %4304, %4309
  %4311 = mul <8 x i32> %4305, %4310
  %4312 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4311)
  %4313 = icmp eq i64 %4276, %4280
  br i1 %4313, label %4326, label %4314

4314:                                             ; preds = %4267, %4308
  %4315 = phi i64 [ %4270, %4267 ], [ %4281, %4308 ]
  %4316 = phi i32 [ 1, %4267 ], [ %4312, %4308 ]
  br label %4317

4317:                                             ; preds = %4314, %4317
  %4318 = phi i64 [ %4323, %4317 ], [ %4315, %4314 ]
  %4319 = phi i32 [ %4322, %4317 ], [ %4316, %4314 ]
  %4320 = getelementptr inbounds i32, ptr %11, i64 %4318
  %4321 = load i32, ptr %4320, align 4, !tbaa !6
  %4322 = mul nsw i32 %4321, %4319
  %4323 = add nsw i64 %4318, -1
  %4324 = trunc i64 %4318 to i32
  %4325 = icmp sgt i32 %4324, 0
  br i1 %4325, label %4317, label %4326, !llvm.loop !1441

4326:                                             ; preds = %4317, %4308
  %4327 = phi i32 [ %4312, %4308 ], [ %4322, %4317 ]
  %4328 = and i64 %4277, 4294967295
  %4329 = getelementptr inbounds i32, ptr %6, i64 %4328
  %4330 = load i32, ptr %4329, align 4, !tbaa !6
  %4331 = mul nsw i32 %4330, %4327
  %4332 = add nsw i32 %4331, %4271
  %4333 = icmp sgt i64 %4269, 2
  %4334 = add nsw i64 %4270, -1
  %4335 = add i32 %4268, 1
  br i1 %4333, label %4267, label %4336, !llvm.loop !1442

4336:                                             ; preds = %4326, %4263
  %4337 = phi i32 [ %4266, %4263 ], [ %4332, %4326 ]
  %4338 = icmp slt i32 %4337, %5
  br i1 %4338, label %4341, label %4339

4339:                                             ; preds = %4336
  %4340 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4341:                                             ; preds = %4336
  %4342 = sext i32 %4337 to i64
  %4343 = getelementptr inbounds double, ptr %3789, i64 %4342
  %4344 = load double, ptr %4343, align 8, !tbaa !19
  %4345 = fcmp fast olt double %4344, 0.000000e+00
  %4346 = fneg fast double %4344
  %4347 = select nnan ninf i1 %4345, double %4346, double %4344
  %4348 = fmul fast double %4344, %4344
  %4349 = fmul fast double %4348, %4347
  %4350 = fadd fast double %4349, %4264
  store double %4350, ptr %3791, align 8, !tbaa !19
  %4351 = add nuw nsw i32 %4265, 1
  br i1 %4112, label %4352, label %4402

4352:                                             ; preds = %4341
  %4353 = load i32, ptr %4, align 4, !tbaa !6
  %4354 = load i32, ptr %12, align 4, !tbaa !6
  %4355 = add nsw i32 %4354, -1
  %4356 = icmp slt i32 %4353, %4355
  br i1 %4356, label %4379, label %4357

4357:                                             ; preds = %4352
  %4358 = icmp eq i32 %4353, %4355
  br i1 %4358, label %4359, label %4395

4359:                                             ; preds = %4357
  store i32 0, ptr %4, align 4, !tbaa !6
  %4360 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4360, ptr %6, align 4, !tbaa !6
  br i1 %4117, label %4402, label %4361

4361:                                             ; preds = %4359, %4389
  %4362 = phi i64 [ %4393, %4389 ], [ 1, %4359 ]
  %4363 = getelementptr inbounds i32, ptr %4, i64 %4362
  %4364 = load i32, ptr %4363, align 4, !tbaa !6
  %4365 = getelementptr inbounds i32, ptr %12, i64 %4362
  %4366 = load i32, ptr %4365, align 4, !tbaa !6
  %4367 = add nsw i32 %4366, -1
  %4368 = icmp slt i32 %4364, %4367
  br i1 %4368, label %4369, label %4387

4369:                                             ; preds = %4361
  br i1 %4356, label %4379, label %4370

4370:                                             ; preds = %4369
  %4371 = shl i64 %4362, 32
  %4372 = add i64 %4371, -4294967296
  %4373 = ashr exact i64 %4372, 32
  %4374 = getelementptr inbounds i32, ptr %7, i64 %4373
  %4375 = load i32, ptr %4374, align 4, !tbaa !6
  %4376 = getelementptr inbounds i32, ptr %6, i64 %4362
  %4377 = load i32, ptr %4376, align 4, !tbaa !6
  %4378 = add nsw i32 %4377, %4375
  store i32 %4378, ptr %4376, align 4, !tbaa !6
  br label %4397

4379:                                             ; preds = %4352, %4369
  %4380 = phi i32 [ %4364, %4369 ], [ %4353, %4352 ]
  %4381 = phi ptr [ %4363, %4369 ], [ %4, %4352 ]
  %4382 = phi i64 [ %4362, %4369 ], [ 0, %4352 ]
  %4383 = add nsw i32 %4380, 1
  store i32 %4383, ptr %4381, align 4, !tbaa !6
  %4384 = getelementptr inbounds i32, ptr %7, i64 %4382
  %4385 = load i32, ptr %4384, align 4, !tbaa !6
  %4386 = getelementptr inbounds i32, ptr %6, i64 %4382
  br label %4397

4387:                                             ; preds = %4361
  %4388 = icmp eq i32 %4364, %4367
  br i1 %4388, label %4389, label %4395

4389:                                             ; preds = %4387
  store i32 0, ptr %4363, align 4, !tbaa !6
  %4390 = getelementptr inbounds i32, ptr %8, i64 %4362
  %4391 = load i32, ptr %4390, align 4, !tbaa !6
  %4392 = getelementptr inbounds i32, ptr %6, i64 %4362
  store i32 %4391, ptr %4392, align 4, !tbaa !6
  %4393 = add nuw nsw i64 %4362, 1
  %4394 = icmp eq i64 %4393, %4115
  br i1 %4394, label %4402, label %4361, !llvm.loop !1443

4395:                                             ; preds = %4357, %4387
  %4396 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4397:                                             ; preds = %4370, %4379
  %4398 = phi ptr [ %4386, %4379 ], [ %4363, %4370 ]
  %4399 = phi i32 [ %4385, %4379 ], [ 1, %4370 ]
  %4400 = load i32, ptr %4398, align 4, !tbaa !6
  %4401 = add nsw i32 %4400, %4399
  store i32 %4401, ptr %4398, align 4, !tbaa !6
  br label %4402

4402:                                             ; preds = %4389, %4397, %4359, %4341
  %4403 = icmp eq i32 %4351, %5
  br i1 %4403, label %5661, label %4263, !llvm.loop !1444

4404:                                             ; preds = %3800
  %4405 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

4406:                                             ; preds = %18
  %4407 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4408 = load ptr, ptr %4407, align 8, !tbaa !10
  %4409 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4410 = load ptr, ptr %4409, align 8, !tbaa !10
  store float 0.000000e+00, ptr %4410, align 4, !tbaa !163
  %4411 = icmp eq i32 %13, 0
  br i1 %4411, label %4412, label %4420

4412:                                             ; preds = %4406
  %4413 = load double, ptr %4408, align 8, !tbaa !19
  %4414 = fptrunc double %4413 to float
  %4415 = fcmp fast olt float %4414, 0.000000e+00
  %4416 = fneg fast float %4414
  %4417 = select nnan ninf i1 %4415, float %4416, float %4414
  %4418 = fmul fast float %4414, %4414
  %4419 = fmul fast float %4418, %4417
  store float %4419, ptr %4410, align 4, !tbaa !163
  br label %5661

4420:                                             ; preds = %4406
  switch i32 %1, label %5034 [
    i32 1, label %4421
    i32 0, label %4732
  ]

4421:                                             ; preds = %4420
  %4422 = getelementptr inbounds i32, ptr %3, i64 %19
  %4423 = load i32, ptr %4422, align 4, !tbaa !6
  %4424 = icmp eq i32 %4423, 0
  %4425 = icmp sgt i32 %5, 0
  br i1 %4424, label %4435, label %4426

4426:                                             ; preds = %4421
  br i1 %4425, label %4427, label %5661

4427:                                             ; preds = %4426
  %4428 = icmp sgt i32 %13, 1
  %4429 = icmp sgt i32 %13, 0
  %4430 = add i32 %13, -2
  %4431 = zext i32 %4430 to i64
  %4432 = zext i32 %13 to i64
  %4433 = add nuw i32 %5, 1
  %4434 = icmp eq i32 %13, 1
  br label %4587

4435:                                             ; preds = %4421
  br i1 %4425, label %4436, label %5661

4436:                                             ; preds = %4435
  %4437 = icmp sgt i32 %13, 1
  %4438 = icmp sgt i32 %13, 0
  %4439 = add i32 %13, -2
  %4440 = zext i32 %4439 to i64
  %4441 = zext i32 %13 to i64
  %4442 = add nuw i32 %5, 1
  %4443 = icmp eq i32 %13, 1
  br label %4444

4444:                                             ; preds = %4436, %4585
  %4445 = phi float [ 0.000000e+00, %4436 ], [ %4535, %4585 ]
  %4446 = phi i32 [ 0, %4436 ], [ %4537, %4585 ]
  %4447 = phi double [ 0.000000e+00, %4436 ], [ %4536, %4585 ]
  %4448 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4437, label %4449, label %4518

4449:                                             ; preds = %4444, %4508
  %4450 = phi i32 [ %4517, %4508 ], [ 0, %4444 ]
  %4451 = phi i64 [ %4459, %4508 ], [ %4441, %4444 ]
  %4452 = phi i64 [ %4516, %4508 ], [ %4440, %4444 ]
  %4453 = phi i32 [ %4514, %4508 ], [ %4448, %4444 ]
  %4454 = sub i32 %4439, %4450
  %4455 = tail call i32 @llvm.smin.i32(i32 %4454, i32 0)
  %4456 = sub i32 %4454, %4455
  %4457 = zext i32 %4456 to i64
  %4458 = add nuw nsw i64 %4457, 1
  %4459 = add nsw i64 %4451, -1
  %4460 = icmp ult i32 %4456, 31
  br i1 %4460, label %4496, label %4461

4461:                                             ; preds = %4449
  %4462 = and i64 %4458, 8589934560
  %4463 = sub i64 %4452, %4462
  br label %4464

4464:                                             ; preds = %4464, %4461
  %4465 = phi i64 [ 0, %4461 ], [ %4488, %4464 ]
  %4466 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4484, %4464 ]
  %4467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4485, %4464 ]
  %4468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4486, %4464 ]
  %4469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4461 ], [ %4487, %4464 ]
  %4470 = sub i64 %4452, %4465
  %4471 = getelementptr inbounds i32, ptr %9, i64 %4470
  %4472 = getelementptr inbounds i32, ptr %4471, i64 -7
  %4473 = load <8 x i32>, ptr %4472, align 4, !tbaa !6
  %4474 = shufflevector <8 x i32> %4473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4475 = getelementptr inbounds i32, ptr %4471, i64 -15
  %4476 = load <8 x i32>, ptr %4475, align 4, !tbaa !6
  %4477 = shufflevector <8 x i32> %4476, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4478 = getelementptr inbounds i32, ptr %4471, i64 -23
  %4479 = load <8 x i32>, ptr %4478, align 4, !tbaa !6
  %4480 = shufflevector <8 x i32> %4479, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4481 = getelementptr inbounds i32, ptr %4471, i64 -31
  %4482 = load <8 x i32>, ptr %4481, align 4, !tbaa !6
  %4483 = shufflevector <8 x i32> %4482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4484 = mul <8 x i32> %4474, %4466
  %4485 = mul <8 x i32> %4477, %4467
  %4486 = mul <8 x i32> %4480, %4468
  %4487 = mul <8 x i32> %4483, %4469
  %4488 = add nuw i64 %4465, 32
  %4489 = icmp eq i64 %4488, %4462
  br i1 %4489, label %4490, label %4464, !llvm.loop !1445

4490:                                             ; preds = %4464
  %4491 = mul <8 x i32> %4485, %4484
  %4492 = mul <8 x i32> %4486, %4491
  %4493 = mul <8 x i32> %4487, %4492
  %4494 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4493)
  %4495 = icmp eq i64 %4458, %4462
  br i1 %4495, label %4508, label %4496

4496:                                             ; preds = %4449, %4490
  %4497 = phi i64 [ %4452, %4449 ], [ %4463, %4490 ]
  %4498 = phi i32 [ 1, %4449 ], [ %4494, %4490 ]
  br label %4499

4499:                                             ; preds = %4496, %4499
  %4500 = phi i64 [ %4505, %4499 ], [ %4497, %4496 ]
  %4501 = phi i32 [ %4504, %4499 ], [ %4498, %4496 ]
  %4502 = getelementptr inbounds i32, ptr %9, i64 %4500
  %4503 = load i32, ptr %4502, align 4, !tbaa !6
  %4504 = mul nsw i32 %4503, %4501
  %4505 = add nsw i64 %4500, -1
  %4506 = trunc i64 %4500 to i32
  %4507 = icmp sgt i32 %4506, 0
  br i1 %4507, label %4499, label %4508, !llvm.loop !1446

4508:                                             ; preds = %4499, %4490
  %4509 = phi i32 [ %4494, %4490 ], [ %4504, %4499 ]
  %4510 = and i64 %4459, 4294967295
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4510
  %4512 = load i32, ptr %4511, align 4, !tbaa !6
  %4513 = mul nsw i32 %4512, %4509
  %4514 = add nsw i32 %4513, %4453
  %4515 = icmp sgt i64 %4451, 2
  %4516 = add nsw i64 %4452, -1
  %4517 = add i32 %4450, 1
  br i1 %4515, label %4449, label %4518, !llvm.loop !1447

4518:                                             ; preds = %4508, %4444
  %4519 = phi i32 [ %4448, %4444 ], [ %4514, %4508 ]
  %4520 = sext i32 %4519 to i64
  %4521 = getelementptr inbounds double, ptr %2, i64 %4520
  %4522 = load double, ptr %4521, align 8, !tbaa !19
  %4523 = getelementptr inbounds double, ptr %4408, i64 %4520
  %4524 = load double, ptr %4523, align 8, !tbaa !19
  %4525 = fptrunc double %4524 to float
  %4526 = fpext float %4445 to double
  %4527 = fpext float %4525 to double
  %4528 = fmul fast double %4522, %4527
  %4529 = fcmp fast olt double %4528, 0.000000e+00
  %4530 = fneg fast double %4528
  %4531 = select nnan ninf i1 %4529, double %4530, double %4528
  %4532 = fmul fast double %4528, %4528
  %4533 = fmul fast double %4532, %4531
  %4534 = fadd fast double %4533, %4526
  %4535 = fptrunc double %4534 to float
  %4536 = fadd fast double %4522, %4447
  %4537 = add nuw nsw i32 %4446, 1
  br i1 %4438, label %4538, label %4585

4538:                                             ; preds = %4518
  %4539 = load i32, ptr %4, align 4, !tbaa !6
  %4540 = load i32, ptr %12, align 4, !tbaa !6
  %4541 = add nsw i32 %4540, -1
  %4542 = icmp slt i32 %4539, %4541
  br i1 %4542, label %4562, label %4543

4543:                                             ; preds = %4538
  %4544 = icmp eq i32 %4539, %4541
  br i1 %4544, label %4545, label %4578

4545:                                             ; preds = %4543
  store i32 0, ptr %4, align 4, !tbaa !6
  %4546 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4546, ptr %6, align 4, !tbaa !6
  br i1 %4443, label %4585, label %4547

4547:                                             ; preds = %4545, %4572
  %4548 = phi i64 [ %4576, %4572 ], [ 1, %4545 ]
  %4549 = getelementptr inbounds i32, ptr %4, i64 %4548
  %4550 = load i32, ptr %4549, align 4, !tbaa !6
  %4551 = getelementptr inbounds i32, ptr %12, i64 %4548
  %4552 = load i32, ptr %4551, align 4, !tbaa !6
  %4553 = add nsw i32 %4552, -1
  %4554 = icmp slt i32 %4550, %4553
  br i1 %4554, label %4555, label %4570

4555:                                             ; preds = %4547
  br i1 %4542, label %4562, label %4556

4556:                                             ; preds = %4555
  %4557 = getelementptr inbounds i32, ptr %7, i64 %4548
  %4558 = load i32, ptr %4557, align 4, !tbaa !6
  %4559 = getelementptr inbounds i32, ptr %6, i64 %4548
  %4560 = load i32, ptr %4559, align 4, !tbaa !6
  %4561 = add nsw i32 %4560, %4558
  store i32 %4561, ptr %4559, align 4, !tbaa !6
  br label %4580

4562:                                             ; preds = %4538, %4555
  %4563 = phi i32 [ %4550, %4555 ], [ %4539, %4538 ]
  %4564 = phi ptr [ %4549, %4555 ], [ %4, %4538 ]
  %4565 = phi i64 [ %4548, %4555 ], [ 0, %4538 ]
  %4566 = add nsw i32 %4563, 1
  store i32 %4566, ptr %4564, align 4, !tbaa !6
  %4567 = getelementptr inbounds i32, ptr %7, i64 %4565
  %4568 = load i32, ptr %4567, align 4, !tbaa !6
  %4569 = getelementptr inbounds i32, ptr %6, i64 %4565
  br label %4580

4570:                                             ; preds = %4547
  %4571 = icmp eq i32 %4550, %4553
  br i1 %4571, label %4572, label %4578

4572:                                             ; preds = %4570
  store i32 0, ptr %4549, align 4, !tbaa !6
  %4573 = getelementptr inbounds i32, ptr %8, i64 %4548
  %4574 = load i32, ptr %4573, align 4, !tbaa !6
  %4575 = getelementptr inbounds i32, ptr %6, i64 %4548
  store i32 %4574, ptr %4575, align 4, !tbaa !6
  %4576 = add nuw nsw i64 %4548, 1
  %4577 = icmp eq i64 %4576, %4441
  br i1 %4577, label %4585, label %4547, !llvm.loop !1448

4578:                                             ; preds = %4543, %4570
  store float %4535, ptr %4410, align 4, !tbaa !163
  %4579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4580:                                             ; preds = %4556, %4562
  %4581 = phi ptr [ %4569, %4562 ], [ %4549, %4556 ]
  %4582 = phi i32 [ %4568, %4562 ], [ 1, %4556 ]
  %4583 = load i32, ptr %4581, align 4, !tbaa !6
  %4584 = add nsw i32 %4583, %4582
  store i32 %4584, ptr %4581, align 4, !tbaa !6
  br label %4585

4585:                                             ; preds = %4572, %4580, %4545, %4518
  %4586 = icmp eq i32 %4537, %5
  br i1 %4586, label %5659, label %4444, !llvm.loop !1449

4587:                                             ; preds = %4427, %4730
  %4588 = phi float [ 0.000000e+00, %4427 ], [ %4678, %4730 ]
  %4589 = phi i32 [ 0, %4427 ], [ %4679, %4730 ]
  %4590 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4428, label %4591, label %4660

4591:                                             ; preds = %4587, %4650
  %4592 = phi i32 [ %4659, %4650 ], [ 0, %4587 ]
  %4593 = phi i64 [ %4601, %4650 ], [ %4432, %4587 ]
  %4594 = phi i64 [ %4658, %4650 ], [ %4431, %4587 ]
  %4595 = phi i32 [ %4656, %4650 ], [ %4590, %4587 ]
  %4596 = sub i32 %4430, %4592
  %4597 = tail call i32 @llvm.smin.i32(i32 %4596, i32 0)
  %4598 = sub i32 %4596, %4597
  %4599 = zext i32 %4598 to i64
  %4600 = add nuw nsw i64 %4599, 1
  %4601 = add nsw i64 %4593, -1
  %4602 = icmp ult i32 %4598, 31
  br i1 %4602, label %4638, label %4603

4603:                                             ; preds = %4591
  %4604 = and i64 %4600, 8589934560
  %4605 = sub i64 %4594, %4604
  br label %4606

4606:                                             ; preds = %4606, %4603
  %4607 = phi i64 [ 0, %4603 ], [ %4630, %4606 ]
  %4608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4626, %4606 ]
  %4609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4627, %4606 ]
  %4610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4628, %4606 ]
  %4611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4603 ], [ %4629, %4606 ]
  %4612 = sub i64 %4594, %4607
  %4613 = getelementptr inbounds i32, ptr %11, i64 %4612
  %4614 = getelementptr inbounds i32, ptr %4613, i64 -7
  %4615 = load <8 x i32>, ptr %4614, align 4, !tbaa !6
  %4616 = shufflevector <8 x i32> %4615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4617 = getelementptr inbounds i32, ptr %4613, i64 -15
  %4618 = load <8 x i32>, ptr %4617, align 4, !tbaa !6
  %4619 = shufflevector <8 x i32> %4618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4620 = getelementptr inbounds i32, ptr %4613, i64 -23
  %4621 = load <8 x i32>, ptr %4620, align 4, !tbaa !6
  %4622 = shufflevector <8 x i32> %4621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4623 = getelementptr inbounds i32, ptr %4613, i64 -31
  %4624 = load <8 x i32>, ptr %4623, align 4, !tbaa !6
  %4625 = shufflevector <8 x i32> %4624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4626 = mul <8 x i32> %4616, %4608
  %4627 = mul <8 x i32> %4619, %4609
  %4628 = mul <8 x i32> %4622, %4610
  %4629 = mul <8 x i32> %4625, %4611
  %4630 = add nuw i64 %4607, 32
  %4631 = icmp eq i64 %4630, %4604
  br i1 %4631, label %4632, label %4606, !llvm.loop !1450

4632:                                             ; preds = %4606
  %4633 = mul <8 x i32> %4627, %4626
  %4634 = mul <8 x i32> %4628, %4633
  %4635 = mul <8 x i32> %4629, %4634
  %4636 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4635)
  %4637 = icmp eq i64 %4600, %4604
  br i1 %4637, label %4650, label %4638

4638:                                             ; preds = %4591, %4632
  %4639 = phi i64 [ %4594, %4591 ], [ %4605, %4632 ]
  %4640 = phi i32 [ 1, %4591 ], [ %4636, %4632 ]
  br label %4641

4641:                                             ; preds = %4638, %4641
  %4642 = phi i64 [ %4647, %4641 ], [ %4639, %4638 ]
  %4643 = phi i32 [ %4646, %4641 ], [ %4640, %4638 ]
  %4644 = getelementptr inbounds i32, ptr %11, i64 %4642
  %4645 = load i32, ptr %4644, align 4, !tbaa !6
  %4646 = mul nsw i32 %4645, %4643
  %4647 = add nsw i64 %4642, -1
  %4648 = trunc i64 %4642 to i32
  %4649 = icmp sgt i32 %4648, 0
  br i1 %4649, label %4641, label %4650, !llvm.loop !1451

4650:                                             ; preds = %4641, %4632
  %4651 = phi i32 [ %4636, %4632 ], [ %4646, %4641 ]
  %4652 = and i64 %4601, 4294967295
  %4653 = getelementptr inbounds i32, ptr %6, i64 %4652
  %4654 = load i32, ptr %4653, align 4, !tbaa !6
  %4655 = mul nsw i32 %4654, %4651
  %4656 = add nsw i32 %4655, %4595
  %4657 = icmp sgt i64 %4593, 2
  %4658 = add nsw i64 %4594, -1
  %4659 = add i32 %4592, 1
  br i1 %4657, label %4591, label %4660, !llvm.loop !1452

4660:                                             ; preds = %4650, %4587
  %4661 = phi i32 [ %4590, %4587 ], [ %4656, %4650 ]
  %4662 = icmp slt i32 %4661, %5
  br i1 %4662, label %4665, label %4663

4663:                                             ; preds = %4660
  %4664 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4665:                                             ; preds = %4660
  %4666 = sext i32 %4661 to i64
  %4667 = getelementptr inbounds double, ptr %4408, i64 %4666
  %4668 = load double, ptr %4667, align 8, !tbaa !19
  %4669 = fptrunc double %4668 to float
  %4670 = fpext float %4588 to double
  %4671 = fpext float %4669 to double
  %4672 = fcmp fast olt float %4669, 0.000000e+00
  %4673 = fneg fast double %4671
  %4674 = select i1 %4672, double %4673, double %4671
  %4675 = fmul fast double %4671, %4671
  %4676 = fmul fast double %4675, %4674
  %4677 = fadd fast double %4676, %4670
  %4678 = fptrunc double %4677 to float
  store float %4678, ptr %4410, align 4, !tbaa !163
  %4679 = add nuw nsw i32 %4589, 1
  br i1 %4429, label %4680, label %4730

4680:                                             ; preds = %4665
  %4681 = load i32, ptr %4, align 4, !tbaa !6
  %4682 = load i32, ptr %12, align 4, !tbaa !6
  %4683 = add nsw i32 %4682, -1
  %4684 = icmp slt i32 %4681, %4683
  br i1 %4684, label %4707, label %4685

4685:                                             ; preds = %4680
  %4686 = icmp eq i32 %4681, %4683
  br i1 %4686, label %4687, label %4723

4687:                                             ; preds = %4685
  store i32 0, ptr %4, align 4, !tbaa !6
  %4688 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4688, ptr %6, align 4, !tbaa !6
  br i1 %4434, label %4730, label %4689

4689:                                             ; preds = %4687, %4717
  %4690 = phi i64 [ %4721, %4717 ], [ 1, %4687 ]
  %4691 = getelementptr inbounds i32, ptr %4, i64 %4690
  %4692 = load i32, ptr %4691, align 4, !tbaa !6
  %4693 = getelementptr inbounds i32, ptr %12, i64 %4690
  %4694 = load i32, ptr %4693, align 4, !tbaa !6
  %4695 = add nsw i32 %4694, -1
  %4696 = icmp slt i32 %4692, %4695
  br i1 %4696, label %4697, label %4715

4697:                                             ; preds = %4689
  br i1 %4684, label %4707, label %4698

4698:                                             ; preds = %4697
  %4699 = shl i64 %4690, 32
  %4700 = add i64 %4699, -4294967296
  %4701 = ashr exact i64 %4700, 32
  %4702 = getelementptr inbounds i32, ptr %7, i64 %4701
  %4703 = load i32, ptr %4702, align 4, !tbaa !6
  %4704 = getelementptr inbounds i32, ptr %6, i64 %4690
  %4705 = load i32, ptr %4704, align 4, !tbaa !6
  %4706 = add nsw i32 %4705, %4703
  store i32 %4706, ptr %4704, align 4, !tbaa !6
  br label %4725

4707:                                             ; preds = %4680, %4697
  %4708 = phi i32 [ %4692, %4697 ], [ %4681, %4680 ]
  %4709 = phi ptr [ %4691, %4697 ], [ %4, %4680 ]
  %4710 = phi i64 [ %4690, %4697 ], [ 0, %4680 ]
  %4711 = add nsw i32 %4708, 1
  store i32 %4711, ptr %4709, align 4, !tbaa !6
  %4712 = getelementptr inbounds i32, ptr %7, i64 %4710
  %4713 = load i32, ptr %4712, align 4, !tbaa !6
  %4714 = getelementptr inbounds i32, ptr %6, i64 %4710
  br label %4725

4715:                                             ; preds = %4689
  %4716 = icmp eq i32 %4692, %4695
  br i1 %4716, label %4717, label %4723

4717:                                             ; preds = %4715
  store i32 0, ptr %4691, align 4, !tbaa !6
  %4718 = getelementptr inbounds i32, ptr %8, i64 %4690
  %4719 = load i32, ptr %4718, align 4, !tbaa !6
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4690
  store i32 %4719, ptr %4720, align 4, !tbaa !6
  %4721 = add nuw nsw i64 %4690, 1
  %4722 = icmp eq i64 %4721, %4432
  br i1 %4722, label %4730, label %4689, !llvm.loop !1453

4723:                                             ; preds = %4685, %4715
  %4724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4725:                                             ; preds = %4698, %4707
  %4726 = phi ptr [ %4714, %4707 ], [ %4691, %4698 ]
  %4727 = phi i32 [ %4713, %4707 ], [ 1, %4698 ]
  %4728 = load i32, ptr %4726, align 4, !tbaa !6
  %4729 = add nsw i32 %4728, %4727
  store i32 %4729, ptr %4726, align 4, !tbaa !6
  br label %4730

4730:                                             ; preds = %4717, %4725, %4687, %4665
  %4731 = icmp eq i32 %4679, %5
  br i1 %4731, label %5661, label %4587, !llvm.loop !1454

4732:                                             ; preds = %4420
  %4733 = getelementptr inbounds i32, ptr %3, i64 %19
  %4734 = load i32, ptr %4733, align 4, !tbaa !6
  %4735 = icmp eq i32 %4734, 0
  %4736 = icmp sgt i32 %5, 0
  br i1 %4735, label %4746, label %4737

4737:                                             ; preds = %4732
  br i1 %4736, label %4738, label %5661

4738:                                             ; preds = %4737
  %4739 = icmp sgt i32 %13, 1
  %4740 = icmp sgt i32 %13, 0
  %4741 = add i32 %13, -2
  %4742 = zext i32 %4741 to i64
  %4743 = zext i32 %13 to i64
  %4744 = add nuw i32 %5, 1
  %4745 = icmp eq i32 %13, 1
  br label %4892

4746:                                             ; preds = %4732
  br i1 %4736, label %4747, label %5661

4747:                                             ; preds = %4746
  %4748 = icmp sgt i32 %13, 1
  %4749 = icmp sgt i32 %13, 0
  %4750 = add i32 %13, -2
  %4751 = zext i32 %4750 to i64
  %4752 = zext i32 %13 to i64
  %4753 = add nuw i32 %5, 1
  %4754 = icmp eq i32 %13, 1
  br label %4755

4755:                                             ; preds = %4747, %4890
  %4756 = phi float [ 0.000000e+00, %4747 ], [ %4840, %4890 ]
  %4757 = phi i32 [ 0, %4747 ], [ %4842, %4890 ]
  %4758 = phi double [ 0.000000e+00, %4747 ], [ %4841, %4890 ]
  %4759 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4748, label %4760, label %4829

4760:                                             ; preds = %4755, %4819
  %4761 = phi i32 [ %4828, %4819 ], [ 0, %4755 ]
  %4762 = phi i64 [ %4770, %4819 ], [ %4752, %4755 ]
  %4763 = phi i64 [ %4827, %4819 ], [ %4751, %4755 ]
  %4764 = phi i32 [ %4825, %4819 ], [ %4759, %4755 ]
  %4765 = sub i32 %4750, %4761
  %4766 = tail call i32 @llvm.smin.i32(i32 %4765, i32 0)
  %4767 = sub i32 %4765, %4766
  %4768 = zext i32 %4767 to i64
  %4769 = add nuw nsw i64 %4768, 1
  %4770 = add nsw i64 %4762, -1
  %4771 = icmp ult i32 %4767, 31
  br i1 %4771, label %4807, label %4772

4772:                                             ; preds = %4760
  %4773 = and i64 %4769, 8589934560
  %4774 = sub i64 %4763, %4773
  br label %4775

4775:                                             ; preds = %4775, %4772
  %4776 = phi i64 [ 0, %4772 ], [ %4799, %4775 ]
  %4777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4795, %4775 ]
  %4778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4796, %4775 ]
  %4779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4797, %4775 ]
  %4780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4798, %4775 ]
  %4781 = sub i64 %4763, %4776
  %4782 = getelementptr inbounds i32, ptr %9, i64 %4781
  %4783 = getelementptr inbounds i32, ptr %4782, i64 -7
  %4784 = load <8 x i32>, ptr %4783, align 4, !tbaa !6
  %4785 = shufflevector <8 x i32> %4784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4786 = getelementptr inbounds i32, ptr %4782, i64 -15
  %4787 = load <8 x i32>, ptr %4786, align 4, !tbaa !6
  %4788 = shufflevector <8 x i32> %4787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4789 = getelementptr inbounds i32, ptr %4782, i64 -23
  %4790 = load <8 x i32>, ptr %4789, align 4, !tbaa !6
  %4791 = shufflevector <8 x i32> %4790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4792 = getelementptr inbounds i32, ptr %4782, i64 -31
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !6
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = mul <8 x i32> %4785, %4777
  %4796 = mul <8 x i32> %4788, %4778
  %4797 = mul <8 x i32> %4791, %4779
  %4798 = mul <8 x i32> %4794, %4780
  %4799 = add nuw i64 %4776, 32
  %4800 = icmp eq i64 %4799, %4773
  br i1 %4800, label %4801, label %4775, !llvm.loop !1455

4801:                                             ; preds = %4775
  %4802 = mul <8 x i32> %4796, %4795
  %4803 = mul <8 x i32> %4797, %4802
  %4804 = mul <8 x i32> %4798, %4803
  %4805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4804)
  %4806 = icmp eq i64 %4769, %4773
  br i1 %4806, label %4819, label %4807

4807:                                             ; preds = %4760, %4801
  %4808 = phi i64 [ %4763, %4760 ], [ %4774, %4801 ]
  %4809 = phi i32 [ 1, %4760 ], [ %4805, %4801 ]
  br label %4810

4810:                                             ; preds = %4807, %4810
  %4811 = phi i64 [ %4816, %4810 ], [ %4808, %4807 ]
  %4812 = phi i32 [ %4815, %4810 ], [ %4809, %4807 ]
  %4813 = getelementptr inbounds i32, ptr %9, i64 %4811
  %4814 = load i32, ptr %4813, align 4, !tbaa !6
  %4815 = mul nsw i32 %4814, %4812
  %4816 = add nsw i64 %4811, -1
  %4817 = trunc i64 %4811 to i32
  %4818 = icmp sgt i32 %4817, 0
  br i1 %4818, label %4810, label %4819, !llvm.loop !1456

4819:                                             ; preds = %4810, %4801
  %4820 = phi i32 [ %4805, %4801 ], [ %4815, %4810 ]
  %4821 = and i64 %4770, 4294967295
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4821
  %4823 = load i32, ptr %4822, align 4, !tbaa !6
  %4824 = mul nsw i32 %4823, %4820
  %4825 = add nsw i32 %4824, %4764
  %4826 = icmp sgt i64 %4762, 2
  %4827 = add nsw i64 %4763, -1
  %4828 = add i32 %4761, 1
  br i1 %4826, label %4760, label %4829, !llvm.loop !1457

4829:                                             ; preds = %4819, %4755
  %4830 = phi i32 [ %4759, %4755 ], [ %4825, %4819 ]
  %4831 = sext i32 %4830 to i64
  %4832 = getelementptr inbounds double, ptr %4408, i64 %4831
  %4833 = load double, ptr %4832, align 8, !tbaa !19
  %4834 = fptrunc double %4833 to float
  %4835 = fcmp fast olt float %4834, 0.000000e+00
  %4836 = fneg fast float %4834
  %4837 = select nnan ninf i1 %4835, float %4836, float %4834
  %4838 = fmul fast float %4834, %4834
  %4839 = fmul fast float %4838, %4837
  %4840 = fadd fast float %4839, %4756
  %4841 = fadd fast double %4758, 1.000000e+00
  %4842 = add nuw nsw i32 %4757, 1
  br i1 %4749, label %4843, label %4890

4843:                                             ; preds = %4829
  %4844 = load i32, ptr %4, align 4, !tbaa !6
  %4845 = load i32, ptr %12, align 4, !tbaa !6
  %4846 = add nsw i32 %4845, -1
  %4847 = icmp slt i32 %4844, %4846
  br i1 %4847, label %4867, label %4848

4848:                                             ; preds = %4843
  %4849 = icmp eq i32 %4844, %4846
  br i1 %4849, label %4850, label %4883

4850:                                             ; preds = %4848
  store i32 0, ptr %4, align 4, !tbaa !6
  %4851 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4851, ptr %6, align 4, !tbaa !6
  br i1 %4754, label %4890, label %4852

4852:                                             ; preds = %4850, %4877
  %4853 = phi i64 [ %4881, %4877 ], [ 1, %4850 ]
  %4854 = getelementptr inbounds i32, ptr %4, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !6
  %4856 = getelementptr inbounds i32, ptr %12, i64 %4853
  %4857 = load i32, ptr %4856, align 4, !tbaa !6
  %4858 = add nsw i32 %4857, -1
  %4859 = icmp slt i32 %4855, %4858
  br i1 %4859, label %4860, label %4875

4860:                                             ; preds = %4852
  br i1 %4847, label %4867, label %4861

4861:                                             ; preds = %4860
  %4862 = getelementptr inbounds i32, ptr %7, i64 %4853
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = getelementptr inbounds i32, ptr %6, i64 %4853
  %4865 = load i32, ptr %4864, align 4, !tbaa !6
  %4866 = add nsw i32 %4865, %4863
  store i32 %4866, ptr %4864, align 4, !tbaa !6
  br label %4885

4867:                                             ; preds = %4843, %4860
  %4868 = phi i32 [ %4855, %4860 ], [ %4844, %4843 ]
  %4869 = phi ptr [ %4854, %4860 ], [ %4, %4843 ]
  %4870 = phi i64 [ %4853, %4860 ], [ 0, %4843 ]
  %4871 = add nsw i32 %4868, 1
  store i32 %4871, ptr %4869, align 4, !tbaa !6
  %4872 = getelementptr inbounds i32, ptr %7, i64 %4870
  %4873 = load i32, ptr %4872, align 4, !tbaa !6
  %4874 = getelementptr inbounds i32, ptr %6, i64 %4870
  br label %4885

4875:                                             ; preds = %4852
  %4876 = icmp eq i32 %4855, %4858
  br i1 %4876, label %4877, label %4883

4877:                                             ; preds = %4875
  store i32 0, ptr %4854, align 4, !tbaa !6
  %4878 = getelementptr inbounds i32, ptr %8, i64 %4853
  %4879 = load i32, ptr %4878, align 4, !tbaa !6
  %4880 = getelementptr inbounds i32, ptr %6, i64 %4853
  store i32 %4879, ptr %4880, align 4, !tbaa !6
  %4881 = add nuw nsw i64 %4853, 1
  %4882 = icmp eq i64 %4881, %4752
  br i1 %4882, label %4890, label %4852, !llvm.loop !1458

4883:                                             ; preds = %4848, %4875
  store float %4840, ptr %4410, align 4, !tbaa !163
  %4884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

4885:                                             ; preds = %4861, %4867
  %4886 = phi ptr [ %4874, %4867 ], [ %4854, %4861 ]
  %4887 = phi i32 [ %4873, %4867 ], [ 1, %4861 ]
  %4888 = load i32, ptr %4886, align 4, !tbaa !6
  %4889 = add nsw i32 %4888, %4887
  store i32 %4889, ptr %4886, align 4, !tbaa !6
  br label %4890

4890:                                             ; preds = %4877, %4885, %4850, %4829
  %4891 = icmp eq i32 %4842, %5
  br i1 %4891, label %5660, label %4755, !llvm.loop !1459

4892:                                             ; preds = %4738, %5032
  %4893 = phi float [ 0.000000e+00, %4738 ], [ %4980, %5032 ]
  %4894 = phi i32 [ 0, %4738 ], [ %4981, %5032 ]
  %4895 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4739, label %4896, label %4965

4896:                                             ; preds = %4892, %4955
  %4897 = phi i32 [ %4964, %4955 ], [ 0, %4892 ]
  %4898 = phi i64 [ %4906, %4955 ], [ %4743, %4892 ]
  %4899 = phi i64 [ %4963, %4955 ], [ %4742, %4892 ]
  %4900 = phi i32 [ %4961, %4955 ], [ %4895, %4892 ]
  %4901 = sub i32 %4741, %4897
  %4902 = tail call i32 @llvm.smin.i32(i32 %4901, i32 0)
  %4903 = sub i32 %4901, %4902
  %4904 = zext i32 %4903 to i64
  %4905 = add nuw nsw i64 %4904, 1
  %4906 = add nsw i64 %4898, -1
  %4907 = icmp ult i32 %4903, 31
  br i1 %4907, label %4943, label %4908

4908:                                             ; preds = %4896
  %4909 = and i64 %4905, 8589934560
  %4910 = sub i64 %4899, %4909
  br label %4911

4911:                                             ; preds = %4911, %4908
  %4912 = phi i64 [ 0, %4908 ], [ %4935, %4911 ]
  %4913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4931, %4911 ]
  %4914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4932, %4911 ]
  %4915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4933, %4911 ]
  %4916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4908 ], [ %4934, %4911 ]
  %4917 = sub i64 %4899, %4912
  %4918 = getelementptr inbounds i32, ptr %11, i64 %4917
  %4919 = getelementptr inbounds i32, ptr %4918, i64 -7
  %4920 = load <8 x i32>, ptr %4919, align 4, !tbaa !6
  %4921 = shufflevector <8 x i32> %4920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4922 = getelementptr inbounds i32, ptr %4918, i64 -15
  %4923 = load <8 x i32>, ptr %4922, align 4, !tbaa !6
  %4924 = shufflevector <8 x i32> %4923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4925 = getelementptr inbounds i32, ptr %4918, i64 -23
  %4926 = load <8 x i32>, ptr %4925, align 4, !tbaa !6
  %4927 = shufflevector <8 x i32> %4926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4928 = getelementptr inbounds i32, ptr %4918, i64 -31
  %4929 = load <8 x i32>, ptr %4928, align 4, !tbaa !6
  %4930 = shufflevector <8 x i32> %4929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4931 = mul <8 x i32> %4921, %4913
  %4932 = mul <8 x i32> %4924, %4914
  %4933 = mul <8 x i32> %4927, %4915
  %4934 = mul <8 x i32> %4930, %4916
  %4935 = add nuw i64 %4912, 32
  %4936 = icmp eq i64 %4935, %4909
  br i1 %4936, label %4937, label %4911, !llvm.loop !1460

4937:                                             ; preds = %4911
  %4938 = mul <8 x i32> %4932, %4931
  %4939 = mul <8 x i32> %4933, %4938
  %4940 = mul <8 x i32> %4934, %4939
  %4941 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4940)
  %4942 = icmp eq i64 %4905, %4909
  br i1 %4942, label %4955, label %4943

4943:                                             ; preds = %4896, %4937
  %4944 = phi i64 [ %4899, %4896 ], [ %4910, %4937 ]
  %4945 = phi i32 [ 1, %4896 ], [ %4941, %4937 ]
  br label %4946

4946:                                             ; preds = %4943, %4946
  %4947 = phi i64 [ %4952, %4946 ], [ %4944, %4943 ]
  %4948 = phi i32 [ %4951, %4946 ], [ %4945, %4943 ]
  %4949 = getelementptr inbounds i32, ptr %11, i64 %4947
  %4950 = load i32, ptr %4949, align 4, !tbaa !6
  %4951 = mul nsw i32 %4950, %4948
  %4952 = add nsw i64 %4947, -1
  %4953 = trunc i64 %4947 to i32
  %4954 = icmp sgt i32 %4953, 0
  br i1 %4954, label %4946, label %4955, !llvm.loop !1461

4955:                                             ; preds = %4946, %4937
  %4956 = phi i32 [ %4941, %4937 ], [ %4951, %4946 ]
  %4957 = and i64 %4906, 4294967295
  %4958 = getelementptr inbounds i32, ptr %6, i64 %4957
  %4959 = load i32, ptr %4958, align 4, !tbaa !6
  %4960 = mul nsw i32 %4959, %4956
  %4961 = add nsw i32 %4960, %4900
  %4962 = icmp sgt i64 %4898, 2
  %4963 = add nsw i64 %4899, -1
  %4964 = add i32 %4897, 1
  br i1 %4962, label %4896, label %4965, !llvm.loop !1462

4965:                                             ; preds = %4955, %4892
  %4966 = phi i32 [ %4895, %4892 ], [ %4961, %4955 ]
  %4967 = icmp slt i32 %4966, %5
  br i1 %4967, label %4970, label %4968

4968:                                             ; preds = %4965
  %4969 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

4970:                                             ; preds = %4965
  %4971 = sext i32 %4966 to i64
  %4972 = getelementptr inbounds double, ptr %4408, i64 %4971
  %4973 = load double, ptr %4972, align 8, !tbaa !19
  %4974 = fptrunc double %4973 to float
  %4975 = fcmp fast olt float %4974, 0.000000e+00
  %4976 = fneg fast float %4974
  %4977 = select nnan ninf i1 %4975, float %4976, float %4974
  %4978 = fmul fast float %4974, %4974
  %4979 = fmul fast float %4978, %4977
  %4980 = fadd fast float %4979, %4893
  store float %4980, ptr %4410, align 4, !tbaa !163
  %4981 = add nuw nsw i32 %4894, 1
  br i1 %4740, label %4982, label %5032

4982:                                             ; preds = %4970
  %4983 = load i32, ptr %4, align 4, !tbaa !6
  %4984 = load i32, ptr %12, align 4, !tbaa !6
  %4985 = add nsw i32 %4984, -1
  %4986 = icmp slt i32 %4983, %4985
  br i1 %4986, label %5009, label %4987

4987:                                             ; preds = %4982
  %4988 = icmp eq i32 %4983, %4985
  br i1 %4988, label %4989, label %5025

4989:                                             ; preds = %4987
  store i32 0, ptr %4, align 4, !tbaa !6
  %4990 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4990, ptr %6, align 4, !tbaa !6
  br i1 %4745, label %5032, label %4991

4991:                                             ; preds = %4989, %5019
  %4992 = phi i64 [ %5023, %5019 ], [ 1, %4989 ]
  %4993 = getelementptr inbounds i32, ptr %4, i64 %4992
  %4994 = load i32, ptr %4993, align 4, !tbaa !6
  %4995 = getelementptr inbounds i32, ptr %12, i64 %4992
  %4996 = load i32, ptr %4995, align 4, !tbaa !6
  %4997 = add nsw i32 %4996, -1
  %4998 = icmp slt i32 %4994, %4997
  br i1 %4998, label %4999, label %5017

4999:                                             ; preds = %4991
  br i1 %4986, label %5009, label %5000

5000:                                             ; preds = %4999
  %5001 = shl i64 %4992, 32
  %5002 = add i64 %5001, -4294967296
  %5003 = ashr exact i64 %5002, 32
  %5004 = getelementptr inbounds i32, ptr %7, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !6
  %5006 = getelementptr inbounds i32, ptr %6, i64 %4992
  %5007 = load i32, ptr %5006, align 4, !tbaa !6
  %5008 = add nsw i32 %5007, %5005
  store i32 %5008, ptr %5006, align 4, !tbaa !6
  br label %5027

5009:                                             ; preds = %4982, %4999
  %5010 = phi i32 [ %4994, %4999 ], [ %4983, %4982 ]
  %5011 = phi ptr [ %4993, %4999 ], [ %4, %4982 ]
  %5012 = phi i64 [ %4992, %4999 ], [ 0, %4982 ]
  %5013 = add nsw i32 %5010, 1
  store i32 %5013, ptr %5011, align 4, !tbaa !6
  %5014 = getelementptr inbounds i32, ptr %7, i64 %5012
  %5015 = load i32, ptr %5014, align 4, !tbaa !6
  %5016 = getelementptr inbounds i32, ptr %6, i64 %5012
  br label %5027

5017:                                             ; preds = %4991
  %5018 = icmp eq i32 %4994, %4997
  br i1 %5018, label %5019, label %5025

5019:                                             ; preds = %5017
  store i32 0, ptr %4993, align 4, !tbaa !6
  %5020 = getelementptr inbounds i32, ptr %8, i64 %4992
  %5021 = load i32, ptr %5020, align 4, !tbaa !6
  %5022 = getelementptr inbounds i32, ptr %6, i64 %4992
  store i32 %5021, ptr %5022, align 4, !tbaa !6
  %5023 = add nuw nsw i64 %4992, 1
  %5024 = icmp eq i64 %5023, %4743
  br i1 %5024, label %5032, label %4991, !llvm.loop !1463

5025:                                             ; preds = %4987, %5017
  %5026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5027:                                             ; preds = %5000, %5009
  %5028 = phi ptr [ %5016, %5009 ], [ %4993, %5000 ]
  %5029 = phi i32 [ %5015, %5009 ], [ 1, %5000 ]
  %5030 = load i32, ptr %5028, align 4, !tbaa !6
  %5031 = add nsw i32 %5030, %5029
  store i32 %5031, ptr %5028, align 4, !tbaa !6
  br label %5032

5032:                                             ; preds = %5019, %5027, %4989, %4970
  %5033 = icmp eq i32 %4981, %5
  br i1 %5033, label %5661, label %4892, !llvm.loop !1464

5034:                                             ; preds = %4420
  %5035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

5036:                                             ; preds = %18
  %5037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5038 = load ptr, ptr %5037, align 8, !tbaa !10
  %5039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5040 = load ptr, ptr %5039, align 8, !tbaa !10
  store double 0.000000e+00, ptr %5040, align 8, !tbaa !19
  %5041 = icmp eq i32 %13, 0
  br i1 %5041, label %5042, label %5049

5042:                                             ; preds = %5036
  %5043 = load double, ptr %5038, align 8, !tbaa !19
  %5044 = fcmp fast olt double %5043, 0.000000e+00
  %5045 = fneg fast double %5043
  %5046 = select nnan ninf i1 %5044, double %5045, double %5043
  %5047 = fmul fast double %5043, %5043
  %5048 = fmul fast double %5047, %5046
  store double %5048, ptr %5040, align 8, !tbaa !19
  br label %5661

5049:                                             ; preds = %5036
  switch i32 %1, label %5653 [
    i32 1, label %5050
    i32 0, label %5353
  ]

5050:                                             ; preds = %5049
  %5051 = getelementptr inbounds i32, ptr %3, i64 %19
  %5052 = load i32, ptr %5051, align 4, !tbaa !6
  %5053 = icmp eq i32 %5052, 0
  %5054 = icmp sgt i32 %5, 0
  br i1 %5053, label %5064, label %5055

5055:                                             ; preds = %5050
  br i1 %5054, label %5056, label %5661

5056:                                             ; preds = %5055
  %5057 = icmp sgt i32 %13, 1
  %5058 = icmp sgt i32 %13, 0
  %5059 = add i32 %13, -2
  %5060 = zext i32 %5059 to i64
  %5061 = zext i32 %13 to i64
  %5062 = add nuw i32 %5, 1
  %5063 = icmp eq i32 %13, 1
  br label %5212

5064:                                             ; preds = %5050
  br i1 %5054, label %5065, label %5661

5065:                                             ; preds = %5064
  %5066 = icmp sgt i32 %13, 1
  %5067 = icmp sgt i32 %13, 0
  %5068 = add i32 %13, -2
  %5069 = zext i32 %5068 to i64
  %5070 = zext i32 %13 to i64
  %5071 = add nuw i32 %5, 1
  %5072 = icmp eq i32 %13, 1
  br label %5073

5073:                                             ; preds = %5065, %5210
  %5074 = phi double [ 0.000000e+00, %5065 ], [ %5160, %5210 ]
  %5075 = phi i32 [ 0, %5065 ], [ %5162, %5210 ]
  %5076 = phi double [ 0.000000e+00, %5065 ], [ %5161, %5210 ]
  %5077 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5066, label %5078, label %5147

5078:                                             ; preds = %5073, %5137
  %5079 = phi i32 [ %5146, %5137 ], [ 0, %5073 ]
  %5080 = phi i64 [ %5088, %5137 ], [ %5070, %5073 ]
  %5081 = phi i64 [ %5145, %5137 ], [ %5069, %5073 ]
  %5082 = phi i32 [ %5143, %5137 ], [ %5077, %5073 ]
  %5083 = sub i32 %5068, %5079
  %5084 = tail call i32 @llvm.smin.i32(i32 %5083, i32 0)
  %5085 = sub i32 %5083, %5084
  %5086 = zext i32 %5085 to i64
  %5087 = add nuw nsw i64 %5086, 1
  %5088 = add nsw i64 %5080, -1
  %5089 = icmp ult i32 %5085, 31
  br i1 %5089, label %5125, label %5090

5090:                                             ; preds = %5078
  %5091 = and i64 %5087, 8589934560
  %5092 = sub i64 %5081, %5091
  br label %5093

5093:                                             ; preds = %5093, %5090
  %5094 = phi i64 [ 0, %5090 ], [ %5117, %5093 ]
  %5095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5113, %5093 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5114, %5093 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5115, %5093 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5116, %5093 ]
  %5099 = sub i64 %5081, %5094
  %5100 = getelementptr inbounds i32, ptr %9, i64 %5099
  %5101 = getelementptr inbounds i32, ptr %5100, i64 -7
  %5102 = load <8 x i32>, ptr %5101, align 4, !tbaa !6
  %5103 = shufflevector <8 x i32> %5102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5104 = getelementptr inbounds i32, ptr %5100, i64 -15
  %5105 = load <8 x i32>, ptr %5104, align 4, !tbaa !6
  %5106 = shufflevector <8 x i32> %5105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5107 = getelementptr inbounds i32, ptr %5100, i64 -23
  %5108 = load <8 x i32>, ptr %5107, align 4, !tbaa !6
  %5109 = shufflevector <8 x i32> %5108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5110 = getelementptr inbounds i32, ptr %5100, i64 -31
  %5111 = load <8 x i32>, ptr %5110, align 4, !tbaa !6
  %5112 = shufflevector <8 x i32> %5111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5113 = mul <8 x i32> %5103, %5095
  %5114 = mul <8 x i32> %5106, %5096
  %5115 = mul <8 x i32> %5109, %5097
  %5116 = mul <8 x i32> %5112, %5098
  %5117 = add nuw i64 %5094, 32
  %5118 = icmp eq i64 %5117, %5091
  br i1 %5118, label %5119, label %5093, !llvm.loop !1465

5119:                                             ; preds = %5093
  %5120 = mul <8 x i32> %5114, %5113
  %5121 = mul <8 x i32> %5115, %5120
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5122)
  %5124 = icmp eq i64 %5087, %5091
  br i1 %5124, label %5137, label %5125

5125:                                             ; preds = %5078, %5119
  %5126 = phi i64 [ %5081, %5078 ], [ %5092, %5119 ]
  %5127 = phi i32 [ 1, %5078 ], [ %5123, %5119 ]
  br label %5128

5128:                                             ; preds = %5125, %5128
  %5129 = phi i64 [ %5134, %5128 ], [ %5126, %5125 ]
  %5130 = phi i32 [ %5133, %5128 ], [ %5127, %5125 ]
  %5131 = getelementptr inbounds i32, ptr %9, i64 %5129
  %5132 = load i32, ptr %5131, align 4, !tbaa !6
  %5133 = mul nsw i32 %5132, %5130
  %5134 = add nsw i64 %5129, -1
  %5135 = trunc i64 %5129 to i32
  %5136 = icmp sgt i32 %5135, 0
  br i1 %5136, label %5128, label %5137, !llvm.loop !1466

5137:                                             ; preds = %5128, %5119
  %5138 = phi i32 [ %5123, %5119 ], [ %5133, %5128 ]
  %5139 = and i64 %5088, 4294967295
  %5140 = getelementptr inbounds i32, ptr %6, i64 %5139
  %5141 = load i32, ptr %5140, align 4, !tbaa !6
  %5142 = mul nsw i32 %5141, %5138
  %5143 = add nsw i32 %5142, %5082
  %5144 = icmp sgt i64 %5080, 2
  %5145 = add nsw i64 %5081, -1
  %5146 = add i32 %5079, 1
  br i1 %5144, label %5078, label %5147, !llvm.loop !1467

5147:                                             ; preds = %5137, %5073
  %5148 = phi i32 [ %5077, %5073 ], [ %5143, %5137 ]
  %5149 = sext i32 %5148 to i64
  %5150 = getelementptr inbounds double, ptr %2, i64 %5149
  %5151 = load double, ptr %5150, align 8, !tbaa !19
  %5152 = getelementptr inbounds double, ptr %5038, i64 %5149
  %5153 = load double, ptr %5152, align 8, !tbaa !19
  %5154 = fmul fast double %5153, %5151
  %5155 = fcmp fast olt double %5154, 0.000000e+00
  %5156 = fneg fast double %5154
  %5157 = select nnan ninf i1 %5155, double %5156, double %5154
  %5158 = fmul fast double %5154, %5154
  %5159 = fmul fast double %5158, %5157
  %5160 = fadd fast double %5159, %5074
  store double %5160, ptr %5040, align 8, !tbaa !19
  %5161 = fadd fast double %5151, %5076
  %5162 = add nuw nsw i32 %5075, 1
  br i1 %5067, label %5163, label %5210

5163:                                             ; preds = %5147
  %5164 = load i32, ptr %4, align 4, !tbaa !6
  %5165 = load i32, ptr %12, align 4, !tbaa !6
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5187, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5203

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !6
  %5171 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5171, ptr %6, align 4, !tbaa !6
  br i1 %5072, label %5210, label %5172

5172:                                             ; preds = %5170, %5197
  %5173 = phi i64 [ %5201, %5197 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !6
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !6
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5195

5180:                                             ; preds = %5172
  br i1 %5167, label %5187, label %5181

5181:                                             ; preds = %5180
  %5182 = getelementptr inbounds i32, ptr %7, i64 %5173
  %5183 = load i32, ptr %5182, align 4, !tbaa !6
  %5184 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5185 = load i32, ptr %5184, align 4, !tbaa !6
  %5186 = add nsw i32 %5185, %5183
  store i32 %5186, ptr %5184, align 4, !tbaa !6
  br label %5205

5187:                                             ; preds = %5163, %5180
  %5188 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5189 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5190 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5191 = add nsw i32 %5188, 1
  store i32 %5191, ptr %5189, align 4, !tbaa !6
  %5192 = getelementptr inbounds i32, ptr %7, i64 %5190
  %5193 = load i32, ptr %5192, align 4, !tbaa !6
  %5194 = getelementptr inbounds i32, ptr %6, i64 %5190
  br label %5205

5195:                                             ; preds = %5172
  %5196 = icmp eq i32 %5175, %5178
  br i1 %5196, label %5197, label %5203

5197:                                             ; preds = %5195
  store i32 0, ptr %5174, align 4, !tbaa !6
  %5198 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5199 = load i32, ptr %5198, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5199, ptr %5200, align 4, !tbaa !6
  %5201 = add nuw nsw i64 %5173, 1
  %5202 = icmp eq i64 %5201, %5070
  br i1 %5202, label %5210, label %5172, !llvm.loop !1468

5203:                                             ; preds = %5168, %5195
  %5204 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5205:                                             ; preds = %5181, %5187
  %5206 = phi ptr [ %5194, %5187 ], [ %5174, %5181 ]
  %5207 = phi i32 [ %5193, %5187 ], [ 1, %5181 ]
  %5208 = load i32, ptr %5206, align 4, !tbaa !6
  %5209 = add nsw i32 %5208, %5207
  store i32 %5209, ptr %5206, align 4, !tbaa !6
  br label %5210

5210:                                             ; preds = %5197, %5205, %5170, %5147
  %5211 = icmp eq i32 %5162, %5
  br i1 %5211, label %5661, label %5073, !llvm.loop !1469

5212:                                             ; preds = %5056, %5351
  %5213 = phi double [ 0.000000e+00, %5056 ], [ %5299, %5351 ]
  %5214 = phi i32 [ 0, %5056 ], [ %5300, %5351 ]
  %5215 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5057, label %5216, label %5285

5216:                                             ; preds = %5212, %5275
  %5217 = phi i32 [ %5284, %5275 ], [ 0, %5212 ]
  %5218 = phi i64 [ %5226, %5275 ], [ %5061, %5212 ]
  %5219 = phi i64 [ %5283, %5275 ], [ %5060, %5212 ]
  %5220 = phi i32 [ %5281, %5275 ], [ %5215, %5212 ]
  %5221 = sub i32 %5059, %5217
  %5222 = tail call i32 @llvm.smin.i32(i32 %5221, i32 0)
  %5223 = sub i32 %5221, %5222
  %5224 = zext i32 %5223 to i64
  %5225 = add nuw nsw i64 %5224, 1
  %5226 = add nsw i64 %5218, -1
  %5227 = icmp ult i32 %5223, 31
  br i1 %5227, label %5263, label %5228

5228:                                             ; preds = %5216
  %5229 = and i64 %5225, 8589934560
  %5230 = sub i64 %5219, %5229
  br label %5231

5231:                                             ; preds = %5231, %5228
  %5232 = phi i64 [ 0, %5228 ], [ %5255, %5231 ]
  %5233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5251, %5231 ]
  %5234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5252, %5231 ]
  %5235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5253, %5231 ]
  %5236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5228 ], [ %5254, %5231 ]
  %5237 = sub i64 %5219, %5232
  %5238 = getelementptr inbounds i32, ptr %11, i64 %5237
  %5239 = getelementptr inbounds i32, ptr %5238, i64 -7
  %5240 = load <8 x i32>, ptr %5239, align 4, !tbaa !6
  %5241 = shufflevector <8 x i32> %5240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5242 = getelementptr inbounds i32, ptr %5238, i64 -15
  %5243 = load <8 x i32>, ptr %5242, align 4, !tbaa !6
  %5244 = shufflevector <8 x i32> %5243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5245 = getelementptr inbounds i32, ptr %5238, i64 -23
  %5246 = load <8 x i32>, ptr %5245, align 4, !tbaa !6
  %5247 = shufflevector <8 x i32> %5246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5248 = getelementptr inbounds i32, ptr %5238, i64 -31
  %5249 = load <8 x i32>, ptr %5248, align 4, !tbaa !6
  %5250 = shufflevector <8 x i32> %5249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5251 = mul <8 x i32> %5241, %5233
  %5252 = mul <8 x i32> %5244, %5234
  %5253 = mul <8 x i32> %5247, %5235
  %5254 = mul <8 x i32> %5250, %5236
  %5255 = add nuw i64 %5232, 32
  %5256 = icmp eq i64 %5255, %5229
  br i1 %5256, label %5257, label %5231, !llvm.loop !1470

5257:                                             ; preds = %5231
  %5258 = mul <8 x i32> %5252, %5251
  %5259 = mul <8 x i32> %5253, %5258
  %5260 = mul <8 x i32> %5254, %5259
  %5261 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5260)
  %5262 = icmp eq i64 %5225, %5229
  br i1 %5262, label %5275, label %5263

5263:                                             ; preds = %5216, %5257
  %5264 = phi i64 [ %5219, %5216 ], [ %5230, %5257 ]
  %5265 = phi i32 [ 1, %5216 ], [ %5261, %5257 ]
  br label %5266

5266:                                             ; preds = %5263, %5266
  %5267 = phi i64 [ %5272, %5266 ], [ %5264, %5263 ]
  %5268 = phi i32 [ %5271, %5266 ], [ %5265, %5263 ]
  %5269 = getelementptr inbounds i32, ptr %11, i64 %5267
  %5270 = load i32, ptr %5269, align 4, !tbaa !6
  %5271 = mul nsw i32 %5270, %5268
  %5272 = add nsw i64 %5267, -1
  %5273 = trunc i64 %5267 to i32
  %5274 = icmp sgt i32 %5273, 0
  br i1 %5274, label %5266, label %5275, !llvm.loop !1471

5275:                                             ; preds = %5266, %5257
  %5276 = phi i32 [ %5261, %5257 ], [ %5271, %5266 ]
  %5277 = and i64 %5226, 4294967295
  %5278 = getelementptr inbounds i32, ptr %6, i64 %5277
  %5279 = load i32, ptr %5278, align 4, !tbaa !6
  %5280 = mul nsw i32 %5279, %5276
  %5281 = add nsw i32 %5280, %5220
  %5282 = icmp sgt i64 %5218, 2
  %5283 = add nsw i64 %5219, -1
  %5284 = add i32 %5217, 1
  br i1 %5282, label %5216, label %5285, !llvm.loop !1472

5285:                                             ; preds = %5275, %5212
  %5286 = phi i32 [ %5215, %5212 ], [ %5281, %5275 ]
  %5287 = icmp slt i32 %5286, %5
  br i1 %5287, label %5290, label %5288

5288:                                             ; preds = %5285
  %5289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

5290:                                             ; preds = %5285
  %5291 = sext i32 %5286 to i64
  %5292 = getelementptr inbounds double, ptr %5038, i64 %5291
  %5293 = load double, ptr %5292, align 8, !tbaa !19
  %5294 = fcmp fast olt double %5293, 0.000000e+00
  %5295 = fneg fast double %5293
  %5296 = select nnan ninf i1 %5294, double %5295, double %5293
  %5297 = fmul fast double %5293, %5293
  %5298 = fmul fast double %5297, %5296
  %5299 = fadd fast double %5298, %5213
  store double %5299, ptr %5040, align 8, !tbaa !19
  %5300 = add nuw nsw i32 %5214, 1
  br i1 %5058, label %5301, label %5351

5301:                                             ; preds = %5290
  %5302 = load i32, ptr %4, align 4, !tbaa !6
  %5303 = load i32, ptr %12, align 4, !tbaa !6
  %5304 = add nsw i32 %5303, -1
  %5305 = icmp slt i32 %5302, %5304
  br i1 %5305, label %5328, label %5306

5306:                                             ; preds = %5301
  %5307 = icmp eq i32 %5302, %5304
  br i1 %5307, label %5308, label %5344

5308:                                             ; preds = %5306
  store i32 0, ptr %4, align 4, !tbaa !6
  %5309 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5309, ptr %6, align 4, !tbaa !6
  br i1 %5063, label %5351, label %5310

5310:                                             ; preds = %5308, %5338
  %5311 = phi i64 [ %5342, %5338 ], [ 1, %5308 ]
  %5312 = getelementptr inbounds i32, ptr %4, i64 %5311
  %5313 = load i32, ptr %5312, align 4, !tbaa !6
  %5314 = getelementptr inbounds i32, ptr %12, i64 %5311
  %5315 = load i32, ptr %5314, align 4, !tbaa !6
  %5316 = add nsw i32 %5315, -1
  %5317 = icmp slt i32 %5313, %5316
  br i1 %5317, label %5318, label %5336

5318:                                             ; preds = %5310
  br i1 %5305, label %5328, label %5319

5319:                                             ; preds = %5318
  %5320 = shl i64 %5311, 32
  %5321 = add i64 %5320, -4294967296
  %5322 = ashr exact i64 %5321, 32
  %5323 = getelementptr inbounds i32, ptr %7, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !6
  %5325 = getelementptr inbounds i32, ptr %6, i64 %5311
  %5326 = load i32, ptr %5325, align 4, !tbaa !6
  %5327 = add nsw i32 %5326, %5324
  store i32 %5327, ptr %5325, align 4, !tbaa !6
  br label %5346

5328:                                             ; preds = %5301, %5318
  %5329 = phi i32 [ %5313, %5318 ], [ %5302, %5301 ]
  %5330 = phi ptr [ %5312, %5318 ], [ %4, %5301 ]
  %5331 = phi i64 [ %5311, %5318 ], [ 0, %5301 ]
  %5332 = add nsw i32 %5329, 1
  store i32 %5332, ptr %5330, align 4, !tbaa !6
  %5333 = getelementptr inbounds i32, ptr %7, i64 %5331
  %5334 = load i32, ptr %5333, align 4, !tbaa !6
  %5335 = getelementptr inbounds i32, ptr %6, i64 %5331
  br label %5346

5336:                                             ; preds = %5310
  %5337 = icmp eq i32 %5313, %5316
  br i1 %5337, label %5338, label %5344

5338:                                             ; preds = %5336
  store i32 0, ptr %5312, align 4, !tbaa !6
  %5339 = getelementptr inbounds i32, ptr %8, i64 %5311
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = getelementptr inbounds i32, ptr %6, i64 %5311
  store i32 %5340, ptr %5341, align 4, !tbaa !6
  %5342 = add nuw nsw i64 %5311, 1
  %5343 = icmp eq i64 %5342, %5061
  br i1 %5343, label %5351, label %5310, !llvm.loop !1473

5344:                                             ; preds = %5306, %5336
  %5345 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5346:                                             ; preds = %5319, %5328
  %5347 = phi ptr [ %5335, %5328 ], [ %5312, %5319 ]
  %5348 = phi i32 [ %5334, %5328 ], [ 1, %5319 ]
  %5349 = load i32, ptr %5347, align 4, !tbaa !6
  %5350 = add nsw i32 %5349, %5348
  store i32 %5350, ptr %5347, align 4, !tbaa !6
  br label %5351

5351:                                             ; preds = %5338, %5346, %5308, %5290
  %5352 = icmp eq i32 %5300, %5
  br i1 %5352, label %5661, label %5212, !llvm.loop !1474

5353:                                             ; preds = %5049
  %5354 = getelementptr inbounds i32, ptr %3, i64 %19
  %5355 = load i32, ptr %5354, align 4, !tbaa !6
  %5356 = icmp eq i32 %5355, 0
  %5357 = icmp sgt i32 %5, 0
  br i1 %5356, label %5367, label %5358

5358:                                             ; preds = %5353
  br i1 %5357, label %5359, label %5661

5359:                                             ; preds = %5358
  %5360 = icmp sgt i32 %13, 1
  %5361 = icmp sgt i32 %13, 0
  %5362 = add i32 %13, -2
  %5363 = zext i32 %5362 to i64
  %5364 = zext i32 %13 to i64
  %5365 = add nuw i32 %5, 1
  %5366 = icmp eq i32 %13, 1
  br label %5512

5367:                                             ; preds = %5353
  br i1 %5357, label %5368, label %5661

5368:                                             ; preds = %5367
  %5369 = icmp sgt i32 %13, 1
  %5370 = icmp sgt i32 %13, 0
  %5371 = add i32 %13, -2
  %5372 = zext i32 %5371 to i64
  %5373 = zext i32 %13 to i64
  %5374 = add nuw i32 %5, 1
  %5375 = icmp eq i32 %13, 1
  br label %5376

5376:                                             ; preds = %5368, %5510
  %5377 = phi double [ 0.000000e+00, %5368 ], [ %5460, %5510 ]
  %5378 = phi i32 [ 0, %5368 ], [ %5462, %5510 ]
  %5379 = phi double [ 0.000000e+00, %5368 ], [ %5461, %5510 ]
  %5380 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5369, label %5381, label %5450

5381:                                             ; preds = %5376, %5440
  %5382 = phi i32 [ %5449, %5440 ], [ 0, %5376 ]
  %5383 = phi i64 [ %5391, %5440 ], [ %5373, %5376 ]
  %5384 = phi i64 [ %5448, %5440 ], [ %5372, %5376 ]
  %5385 = phi i32 [ %5446, %5440 ], [ %5380, %5376 ]
  %5386 = sub i32 %5371, %5382
  %5387 = tail call i32 @llvm.smin.i32(i32 %5386, i32 0)
  %5388 = sub i32 %5386, %5387
  %5389 = zext i32 %5388 to i64
  %5390 = add nuw nsw i64 %5389, 1
  %5391 = add nsw i64 %5383, -1
  %5392 = icmp ult i32 %5388, 31
  br i1 %5392, label %5428, label %5393

5393:                                             ; preds = %5381
  %5394 = and i64 %5390, 8589934560
  %5395 = sub i64 %5384, %5394
  br label %5396

5396:                                             ; preds = %5396, %5393
  %5397 = phi i64 [ 0, %5393 ], [ %5420, %5396 ]
  %5398 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5416, %5396 ]
  %5399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5417, %5396 ]
  %5400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5418, %5396 ]
  %5401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5393 ], [ %5419, %5396 ]
  %5402 = sub i64 %5384, %5397
  %5403 = getelementptr inbounds i32, ptr %9, i64 %5402
  %5404 = getelementptr inbounds i32, ptr %5403, i64 -7
  %5405 = load <8 x i32>, ptr %5404, align 4, !tbaa !6
  %5406 = shufflevector <8 x i32> %5405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5407 = getelementptr inbounds i32, ptr %5403, i64 -15
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !6
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = getelementptr inbounds i32, ptr %5403, i64 -23
  %5411 = load <8 x i32>, ptr %5410, align 4, !tbaa !6
  %5412 = shufflevector <8 x i32> %5411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5413 = getelementptr inbounds i32, ptr %5403, i64 -31
  %5414 = load <8 x i32>, ptr %5413, align 4, !tbaa !6
  %5415 = shufflevector <8 x i32> %5414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5416 = mul <8 x i32> %5406, %5398
  %5417 = mul <8 x i32> %5409, %5399
  %5418 = mul <8 x i32> %5412, %5400
  %5419 = mul <8 x i32> %5415, %5401
  %5420 = add nuw i64 %5397, 32
  %5421 = icmp eq i64 %5420, %5394
  br i1 %5421, label %5422, label %5396, !llvm.loop !1475

5422:                                             ; preds = %5396
  %5423 = mul <8 x i32> %5417, %5416
  %5424 = mul <8 x i32> %5418, %5423
  %5425 = mul <8 x i32> %5419, %5424
  %5426 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5425)
  %5427 = icmp eq i64 %5390, %5394
  br i1 %5427, label %5440, label %5428

5428:                                             ; preds = %5381, %5422
  %5429 = phi i64 [ %5384, %5381 ], [ %5395, %5422 ]
  %5430 = phi i32 [ 1, %5381 ], [ %5426, %5422 ]
  br label %5431

5431:                                             ; preds = %5428, %5431
  %5432 = phi i64 [ %5437, %5431 ], [ %5429, %5428 ]
  %5433 = phi i32 [ %5436, %5431 ], [ %5430, %5428 ]
  %5434 = getelementptr inbounds i32, ptr %9, i64 %5432
  %5435 = load i32, ptr %5434, align 4, !tbaa !6
  %5436 = mul nsw i32 %5435, %5433
  %5437 = add nsw i64 %5432, -1
  %5438 = trunc i64 %5432 to i32
  %5439 = icmp sgt i32 %5438, 0
  br i1 %5439, label %5431, label %5440, !llvm.loop !1476

5440:                                             ; preds = %5431, %5422
  %5441 = phi i32 [ %5426, %5422 ], [ %5436, %5431 ]
  %5442 = and i64 %5391, 4294967295
  %5443 = getelementptr inbounds i32, ptr %6, i64 %5442
  %5444 = load i32, ptr %5443, align 4, !tbaa !6
  %5445 = mul nsw i32 %5444, %5441
  %5446 = add nsw i32 %5445, %5385
  %5447 = icmp sgt i64 %5383, 2
  %5448 = add nsw i64 %5384, -1
  %5449 = add i32 %5382, 1
  br i1 %5447, label %5381, label %5450, !llvm.loop !1477

5450:                                             ; preds = %5440, %5376
  %5451 = phi i32 [ %5380, %5376 ], [ %5446, %5440 ]
  %5452 = sext i32 %5451 to i64
  %5453 = getelementptr inbounds double, ptr %5038, i64 %5452
  %5454 = load double, ptr %5453, align 8, !tbaa !19
  %5455 = fcmp fast olt double %5454, 0.000000e+00
  %5456 = fneg fast double %5454
  %5457 = select nnan ninf i1 %5455, double %5456, double %5454
  %5458 = fmul fast double %5454, %5454
  %5459 = fmul fast double %5458, %5457
  %5460 = fadd fast double %5459, %5377
  store double %5460, ptr %5040, align 8, !tbaa !19
  %5461 = fadd fast double %5379, 1.000000e+00
  %5462 = add nuw nsw i32 %5378, 1
  br i1 %5370, label %5463, label %5510

5463:                                             ; preds = %5450
  %5464 = load i32, ptr %4, align 4, !tbaa !6
  %5465 = load i32, ptr %12, align 4, !tbaa !6
  %5466 = add nsw i32 %5465, -1
  %5467 = icmp slt i32 %5464, %5466
  br i1 %5467, label %5487, label %5468

5468:                                             ; preds = %5463
  %5469 = icmp eq i32 %5464, %5466
  br i1 %5469, label %5470, label %5503

5470:                                             ; preds = %5468
  store i32 0, ptr %4, align 4, !tbaa !6
  %5471 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5471, ptr %6, align 4, !tbaa !6
  br i1 %5375, label %5510, label %5472

5472:                                             ; preds = %5470, %5497
  %5473 = phi i64 [ %5501, %5497 ], [ 1, %5470 ]
  %5474 = getelementptr inbounds i32, ptr %4, i64 %5473
  %5475 = load i32, ptr %5474, align 4, !tbaa !6
  %5476 = getelementptr inbounds i32, ptr %12, i64 %5473
  %5477 = load i32, ptr %5476, align 4, !tbaa !6
  %5478 = add nsw i32 %5477, -1
  %5479 = icmp slt i32 %5475, %5478
  br i1 %5479, label %5480, label %5495

5480:                                             ; preds = %5472
  br i1 %5467, label %5487, label %5481

5481:                                             ; preds = %5480
  %5482 = getelementptr inbounds i32, ptr %7, i64 %5473
  %5483 = load i32, ptr %5482, align 4, !tbaa !6
  %5484 = getelementptr inbounds i32, ptr %6, i64 %5473
  %5485 = load i32, ptr %5484, align 4, !tbaa !6
  %5486 = add nsw i32 %5485, %5483
  store i32 %5486, ptr %5484, align 4, !tbaa !6
  br label %5505

5487:                                             ; preds = %5463, %5480
  %5488 = phi i32 [ %5475, %5480 ], [ %5464, %5463 ]
  %5489 = phi ptr [ %5474, %5480 ], [ %4, %5463 ]
  %5490 = phi i64 [ %5473, %5480 ], [ 0, %5463 ]
  %5491 = add nsw i32 %5488, 1
  store i32 %5491, ptr %5489, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %7, i64 %5490
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = getelementptr inbounds i32, ptr %6, i64 %5490
  br label %5505

5495:                                             ; preds = %5472
  %5496 = icmp eq i32 %5475, %5478
  br i1 %5496, label %5497, label %5503

5497:                                             ; preds = %5495
  store i32 0, ptr %5474, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %8, i64 %5473
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5473
  store i32 %5499, ptr %5500, align 4, !tbaa !6
  %5501 = add nuw nsw i64 %5473, 1
  %5502 = icmp eq i64 %5501, %5373
  br i1 %5502, label %5510, label %5472, !llvm.loop !1478

5503:                                             ; preds = %5468, %5495
  %5504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5505:                                             ; preds = %5481, %5487
  %5506 = phi ptr [ %5494, %5487 ], [ %5474, %5481 ]
  %5507 = phi i32 [ %5493, %5487 ], [ 1, %5481 ]
  %5508 = load i32, ptr %5506, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, %5507
  store i32 %5509, ptr %5506, align 4, !tbaa !6
  br label %5510

5510:                                             ; preds = %5497, %5505, %5470, %5450
  %5511 = icmp eq i32 %5462, %5
  br i1 %5511, label %5661, label %5376, !llvm.loop !1479

5512:                                             ; preds = %5359, %5651
  %5513 = phi double [ 0.000000e+00, %5359 ], [ %5599, %5651 ]
  %5514 = phi i32 [ 0, %5359 ], [ %5600, %5651 ]
  %5515 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5360, label %5516, label %5585

5516:                                             ; preds = %5512, %5575
  %5517 = phi i32 [ %5584, %5575 ], [ 0, %5512 ]
  %5518 = phi i64 [ %5526, %5575 ], [ %5364, %5512 ]
  %5519 = phi i64 [ %5583, %5575 ], [ %5363, %5512 ]
  %5520 = phi i32 [ %5581, %5575 ], [ %5515, %5512 ]
  %5521 = sub i32 %5362, %5517
  %5522 = tail call i32 @llvm.smin.i32(i32 %5521, i32 0)
  %5523 = sub i32 %5521, %5522
  %5524 = zext i32 %5523 to i64
  %5525 = add nuw nsw i64 %5524, 1
  %5526 = add nsw i64 %5518, -1
  %5527 = icmp ult i32 %5523, 31
  br i1 %5527, label %5563, label %5528

5528:                                             ; preds = %5516
  %5529 = and i64 %5525, 8589934560
  %5530 = sub i64 %5519, %5529
  br label %5531

5531:                                             ; preds = %5531, %5528
  %5532 = phi i64 [ 0, %5528 ], [ %5555, %5531 ]
  %5533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5551, %5531 ]
  %5534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5552, %5531 ]
  %5535 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5553, %5531 ]
  %5536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5528 ], [ %5554, %5531 ]
  %5537 = sub i64 %5519, %5532
  %5538 = getelementptr inbounds i32, ptr %11, i64 %5537
  %5539 = getelementptr inbounds i32, ptr %5538, i64 -7
  %5540 = load <8 x i32>, ptr %5539, align 4, !tbaa !6
  %5541 = shufflevector <8 x i32> %5540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5542 = getelementptr inbounds i32, ptr %5538, i64 -15
  %5543 = load <8 x i32>, ptr %5542, align 4, !tbaa !6
  %5544 = shufflevector <8 x i32> %5543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5545 = getelementptr inbounds i32, ptr %5538, i64 -23
  %5546 = load <8 x i32>, ptr %5545, align 4, !tbaa !6
  %5547 = shufflevector <8 x i32> %5546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5548 = getelementptr inbounds i32, ptr %5538, i64 -31
  %5549 = load <8 x i32>, ptr %5548, align 4, !tbaa !6
  %5550 = shufflevector <8 x i32> %5549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5551 = mul <8 x i32> %5541, %5533
  %5552 = mul <8 x i32> %5544, %5534
  %5553 = mul <8 x i32> %5547, %5535
  %5554 = mul <8 x i32> %5550, %5536
  %5555 = add nuw i64 %5532, 32
  %5556 = icmp eq i64 %5555, %5529
  br i1 %5556, label %5557, label %5531, !llvm.loop !1480

5557:                                             ; preds = %5531
  %5558 = mul <8 x i32> %5552, %5551
  %5559 = mul <8 x i32> %5553, %5558
  %5560 = mul <8 x i32> %5554, %5559
  %5561 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5560)
  %5562 = icmp eq i64 %5525, %5529
  br i1 %5562, label %5575, label %5563

5563:                                             ; preds = %5516, %5557
  %5564 = phi i64 [ %5519, %5516 ], [ %5530, %5557 ]
  %5565 = phi i32 [ 1, %5516 ], [ %5561, %5557 ]
  br label %5566

5566:                                             ; preds = %5563, %5566
  %5567 = phi i64 [ %5572, %5566 ], [ %5564, %5563 ]
  %5568 = phi i32 [ %5571, %5566 ], [ %5565, %5563 ]
  %5569 = getelementptr inbounds i32, ptr %11, i64 %5567
  %5570 = load i32, ptr %5569, align 4, !tbaa !6
  %5571 = mul nsw i32 %5570, %5568
  %5572 = add nsw i64 %5567, -1
  %5573 = trunc i64 %5567 to i32
  %5574 = icmp sgt i32 %5573, 0
  br i1 %5574, label %5566, label %5575, !llvm.loop !1481

5575:                                             ; preds = %5566, %5557
  %5576 = phi i32 [ %5561, %5557 ], [ %5571, %5566 ]
  %5577 = and i64 %5526, 4294967295
  %5578 = getelementptr inbounds i32, ptr %6, i64 %5577
  %5579 = load i32, ptr %5578, align 4, !tbaa !6
  %5580 = mul nsw i32 %5579, %5576
  %5581 = add nsw i32 %5580, %5520
  %5582 = icmp sgt i64 %5518, 2
  %5583 = add nsw i64 %5519, -1
  %5584 = add i32 %5517, 1
  br i1 %5582, label %5516, label %5585, !llvm.loop !1482

5585:                                             ; preds = %5575, %5512
  %5586 = phi i32 [ %5515, %5512 ], [ %5581, %5575 ]
  %5587 = icmp slt i32 %5586, %5
  br i1 %5587, label %5590, label %5588

5588:                                             ; preds = %5585
  %5589 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5666

5590:                                             ; preds = %5585
  %5591 = sext i32 %5586 to i64
  %5592 = getelementptr inbounds double, ptr %5038, i64 %5591
  %5593 = load double, ptr %5592, align 8, !tbaa !19
  %5594 = fcmp fast olt double %5593, 0.000000e+00
  %5595 = fneg fast double %5593
  %5596 = select nnan ninf i1 %5594, double %5595, double %5593
  %5597 = fmul fast double %5593, %5593
  %5598 = fmul fast double %5597, %5596
  %5599 = fadd fast double %5598, %5513
  store double %5599, ptr %5040, align 8, !tbaa !19
  %5600 = add nuw nsw i32 %5514, 1
  br i1 %5361, label %5601, label %5651

5601:                                             ; preds = %5590
  %5602 = load i32, ptr %4, align 4, !tbaa !6
  %5603 = load i32, ptr %12, align 4, !tbaa !6
  %5604 = add nsw i32 %5603, -1
  %5605 = icmp slt i32 %5602, %5604
  br i1 %5605, label %5628, label %5606

5606:                                             ; preds = %5601
  %5607 = icmp eq i32 %5602, %5604
  br i1 %5607, label %5608, label %5644

5608:                                             ; preds = %5606
  store i32 0, ptr %4, align 4, !tbaa !6
  %5609 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5609, ptr %6, align 4, !tbaa !6
  br i1 %5366, label %5651, label %5610

5610:                                             ; preds = %5608, %5638
  %5611 = phi i64 [ %5642, %5638 ], [ 1, %5608 ]
  %5612 = getelementptr inbounds i32, ptr %4, i64 %5611
  %5613 = load i32, ptr %5612, align 4, !tbaa !6
  %5614 = getelementptr inbounds i32, ptr %12, i64 %5611
  %5615 = load i32, ptr %5614, align 4, !tbaa !6
  %5616 = add nsw i32 %5615, -1
  %5617 = icmp slt i32 %5613, %5616
  br i1 %5617, label %5618, label %5636

5618:                                             ; preds = %5610
  br i1 %5605, label %5628, label %5619

5619:                                             ; preds = %5618
  %5620 = shl i64 %5611, 32
  %5621 = add i64 %5620, -4294967296
  %5622 = ashr exact i64 %5621, 32
  %5623 = getelementptr inbounds i32, ptr %7, i64 %5622
  %5624 = load i32, ptr %5623, align 4, !tbaa !6
  %5625 = getelementptr inbounds i32, ptr %6, i64 %5611
  %5626 = load i32, ptr %5625, align 4, !tbaa !6
  %5627 = add nsw i32 %5626, %5624
  store i32 %5627, ptr %5625, align 4, !tbaa !6
  br label %5646

5628:                                             ; preds = %5601, %5618
  %5629 = phi i32 [ %5613, %5618 ], [ %5602, %5601 ]
  %5630 = phi ptr [ %5612, %5618 ], [ %4, %5601 ]
  %5631 = phi i64 [ %5611, %5618 ], [ 0, %5601 ]
  %5632 = add nsw i32 %5629, 1
  store i32 %5632, ptr %5630, align 4, !tbaa !6
  %5633 = getelementptr inbounds i32, ptr %7, i64 %5631
  %5634 = load i32, ptr %5633, align 4, !tbaa !6
  %5635 = getelementptr inbounds i32, ptr %6, i64 %5631
  br label %5646

5636:                                             ; preds = %5610
  %5637 = icmp eq i32 %5613, %5616
  br i1 %5637, label %5638, label %5644

5638:                                             ; preds = %5636
  store i32 0, ptr %5612, align 4, !tbaa !6
  %5639 = getelementptr inbounds i32, ptr %8, i64 %5611
  %5640 = load i32, ptr %5639, align 4, !tbaa !6
  %5641 = getelementptr inbounds i32, ptr %6, i64 %5611
  store i32 %5640, ptr %5641, align 4, !tbaa !6
  %5642 = add nuw nsw i64 %5611, 1
  %5643 = icmp eq i64 %5642, %5364
  br i1 %5643, label %5651, label %5610, !llvm.loop !1483

5644:                                             ; preds = %5606, %5636
  %5645 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5666

5646:                                             ; preds = %5619, %5628
  %5647 = phi ptr [ %5635, %5628 ], [ %5612, %5619 ]
  %5648 = phi i32 [ %5634, %5628 ], [ 1, %5619 ]
  %5649 = load i32, ptr %5647, align 4, !tbaa !6
  %5650 = add nsw i32 %5649, %5648
  store i32 %5650, ptr %5647, align 4, !tbaa !6
  br label %5651

5651:                                             ; preds = %5638, %5646, %5608, %5590
  %5652 = icmp eq i32 %5600, %5
  br i1 %5652, label %5661, label %5512, !llvm.loop !1484

5653:                                             ; preds = %5049
  %5654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5661

5655:                                             ; preds = %2076
  store i16 %2026, ptr %1901, align 2, !tbaa !79
  br label %5661

5656:                                             ; preds = %2381
  store i16 %2331, ptr %1901, align 2, !tbaa !79
  br label %5661

5657:                                             ; preds = %3336
  store i64 %3286, ptr %3161, align 8, !tbaa !121
  br label %5661

5658:                                             ; preds = %3641
  store i64 %3591, ptr %3161, align 8, !tbaa !121
  br label %5661

5659:                                             ; preds = %4585
  store float %4535, ptr %4410, align 4, !tbaa !163
  br label %5661

5660:                                             ; preds = %4890
  store float %4840, ptr %4410, align 4, !tbaa !163
  br label %5661

5661:                                             ; preds = %5651, %5510, %5351, %5210, %5032, %4730, %4402, %4261, %4102, %3961, %3783, %3481, %3153, %3011, %2851, %2706, %2523, %2221, %1893, %1751, %1591, %1446, %1263, %1121, %961, %816, %633, %494, %337, %198, %5358, %5367, %5055, %5064, %4737, %4746, %5660, %4426, %4435, %5659, %4109, %4118, %3806, %3815, %3488, %3497, %5658, %3177, %3186, %5657, %2858, %2867, %2547, %2556, %2228, %2237, %5656, %1917, %1926, %5655, %1598, %1607, %1287, %1296, %968, %977, %657, %666, %344, %353, %39, %48, %5042, %5653, %4412, %5034, %3793, %4404, %3163, %3785, %2533, %3155, %1903, %2525, %1273, %1895, %643, %1265, %28, %635, %18
  %5662 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1265 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %1895 ], [ 0.000000e+00, %1273 ], [ 0.000000e+00, %2525 ], [ 0.000000e+00, %1903 ], [ 0.000000e+00, %3155 ], [ 0.000000e+00, %2533 ], [ 0.000000e+00, %3785 ], [ 0.000000e+00, %3163 ], [ 0.000000e+00, %4404 ], [ 0.000000e+00, %3793 ], [ 0.000000e+00, %5034 ], [ 0.000000e+00, %4412 ], [ 0.000000e+00, %5653 ], [ 0.000000e+00, %5042 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %353 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %666 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %977 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %1296 ], [ 0.000000e+00, %1287 ], [ 0.000000e+00, %1607 ], [ 0.000000e+00, %1598 ], [ %2027, %5655 ], [ 0.000000e+00, %1926 ], [ 0.000000e+00, %1917 ], [ %2332, %5656 ], [ 0.000000e+00, %2237 ], [ 0.000000e+00, %2228 ], [ 0.000000e+00, %2556 ], [ 0.000000e+00, %2547 ], [ 0.000000e+00, %2867 ], [ 0.000000e+00, %2858 ], [ %3287, %5657 ], [ 0.000000e+00, %3186 ], [ 0.000000e+00, %3177 ], [ %3592, %5658 ], [ 0.000000e+00, %3497 ], [ 0.000000e+00, %3488 ], [ 0.000000e+00, %3815 ], [ 0.000000e+00, %3806 ], [ 0.000000e+00, %4118 ], [ 0.000000e+00, %4109 ], [ %4536, %5659 ], [ 0.000000e+00, %4435 ], [ 0.000000e+00, %4426 ], [ %4841, %5660 ], [ 0.000000e+00, %4746 ], [ 0.000000e+00, %4737 ], [ 0.000000e+00, %5064 ], [ 0.000000e+00, %5055 ], [ 0.000000e+00, %5367 ], [ 0.000000e+00, %5358 ], [ %149, %198 ], [ 0.000000e+00, %337 ], [ %445, %494 ], [ 0.000000e+00, %633 ], [ %767, %816 ], [ 0.000000e+00, %961 ], [ %1072, %1121 ], [ 0.000000e+00, %1263 ], [ %1397, %1446 ], [ 0.000000e+00, %1591 ], [ %1702, %1751 ], [ 0.000000e+00, %1893 ], [ 0.000000e+00, %2221 ], [ 0.000000e+00, %2523 ], [ %2657, %2706 ], [ 0.000000e+00, %2851 ], [ %2962, %3011 ], [ 0.000000e+00, %3153 ], [ 0.000000e+00, %3481 ], [ 0.000000e+00, %3783 ], [ %3912, %3961 ], [ 0.000000e+00, %4102 ], [ %4212, %4261 ], [ 0.000000e+00, %4402 ], [ 0.000000e+00, %4730 ], [ 0.000000e+00, %5032 ], [ %5161, %5210 ], [ 0.000000e+00, %5351 ], [ %5461, %5510 ], [ 0.000000e+00, %5651 ]
  %5663 = phi i32 [ %10, %18 ], [ 1, %635 ], [ 1, %28 ], [ 1, %1265 ], [ 1, %643 ], [ 1, %1895 ], [ 1, %1273 ], [ 1, %2525 ], [ 1, %1903 ], [ 1, %3155 ], [ 1, %2533 ], [ 1, %3785 ], [ 1, %3163 ], [ 1, %4404 ], [ 1, %3793 ], [ 1, %5034 ], [ 1, %4412 ], [ 1, %5653 ], [ 1, %5042 ], [ 1, %48 ], [ 1, %39 ], [ 1, %353 ], [ 1, %344 ], [ 1, %666 ], [ 1, %657 ], [ 1, %977 ], [ 1, %968 ], [ 1, %1296 ], [ 1, %1287 ], [ 1, %1607 ], [ 1, %1598 ], [ %1933, %5655 ], [ 1, %1926 ], [ 1, %1917 ], [ %2244, %5656 ], [ 1, %2237 ], [ 1, %2228 ], [ 1, %2556 ], [ 1, %2547 ], [ 1, %2867 ], [ 1, %2858 ], [ %3193, %5657 ], [ 1, %3186 ], [ 1, %3177 ], [ %3504, %5658 ], [ 1, %3497 ], [ 1, %3488 ], [ 1, %3815 ], [ 1, %3806 ], [ 1, %4118 ], [ 1, %4109 ], [ %4442, %5659 ], [ 1, %4435 ], [ 1, %4426 ], [ %4753, %5660 ], [ 1, %4746 ], [ 1, %4737 ], [ 1, %5064 ], [ 1, %5055 ], [ 1, %5367 ], [ 1, %5358 ], [ %55, %198 ], [ %46, %337 ], [ %360, %494 ], [ %351, %633 ], [ %673, %816 ], [ %664, %961 ], [ %984, %1121 ], [ %975, %1263 ], [ %1303, %1446 ], [ %1294, %1591 ], [ %1614, %1751 ], [ %1605, %1893 ], [ %1924, %2221 ], [ %2235, %2523 ], [ %2563, %2706 ], [ %2554, %2851 ], [ %2874, %3011 ], [ %2865, %3153 ], [ %3184, %3481 ], [ %3495, %3783 ], [ %3822, %3961 ], [ %3813, %4102 ], [ %4125, %4261 ], [ %4116, %4402 ], [ %4433, %4730 ], [ %4744, %5032 ], [ %5071, %5210 ], [ %5062, %5351 ], [ %5374, %5510 ], [ %5365, %5651 ]
  %5664 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5663, ptr noundef nonnull @.str.5) #3
  %5665 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5662, ptr noundef nonnull @.str.6) #3
  br label %5666

5666:                                             ; preds = %5203, %5288, %5344, %5503, %5588, %5644, %4578, %4663, %4723, %4883, %4968, %5025, %3954, %4039, %4095, %4254, %4339, %4395, %3329, %3414, %3474, %3634, %3719, %3776, %2699, %2783, %2844, %3004, %3088, %3146, %2069, %2154, %2214, %2374, %2459, %2516, %1439, %1523, %1584, %1744, %1828, %1886, %809, %893, %954, %1114, %1198, %1256, %191, %275, %330, %487, %571, %626, %5661
  %5667 = phi i32 [ 0, %5661 ], [ -1, %626 ], [ -1, %571 ], [ -1, %487 ], [ -1, %330 ], [ -1, %275 ], [ -1, %191 ], [ -1, %1256 ], [ -1, %1198 ], [ -1, %1114 ], [ -1, %954 ], [ -1, %893 ], [ -1, %809 ], [ -1, %1886 ], [ -1, %1828 ], [ -1, %1744 ], [ -1, %1584 ], [ -1, %1523 ], [ -1, %1439 ], [ -1, %2516 ], [ -1, %2459 ], [ -1, %2374 ], [ -1, %2214 ], [ -1, %2154 ], [ -1, %2069 ], [ -1, %3146 ], [ -1, %3088 ], [ -1, %3004 ], [ -1, %2844 ], [ -1, %2783 ], [ -1, %2699 ], [ -1, %3776 ], [ -1, %3719 ], [ -1, %3634 ], [ -1, %3474 ], [ -1, %3414 ], [ -1, %3329 ], [ -1, %4395 ], [ -1, %4339 ], [ -1, %4254 ], [ -1, %4095 ], [ -1, %4039 ], [ -1, %3954 ], [ -1, %5025 ], [ -1, %4968 ], [ -1, %4883 ], [ -1, %4723 ], [ -1, %4663 ], [ -1, %4578 ], [ -1, %5644 ], [ -1, %5588 ], [ -1, %5503 ], [ -1, %5344 ], [ -1, %5288 ], [ -1, %5203 ]
  ret i32 %5667
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !8, i64 0}
!12 = !{!8, !8, i64 0}
!13 = distinct !{!13, !14, !15, !16}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
!17 = distinct !{!17, !14, !16, !15}
!18 = distinct !{!18, !14}
!19 = !{!20, !20, i64 0}
!20 = !{!"double", !8, i64 0}
!21 = distinct !{!21, !14, !22}
!22 = !{!"llvm.loop.peeled.count", i32 1}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14, !15, !16}
!25 = distinct !{!25, !14, !16, !15}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14, !22}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14, !15, !16}
!30 = distinct !{!30, !14, !16, !15}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14, !22}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !14, !15, !16}
!35 = distinct !{!35, !14, !16, !15}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !14, !22}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14, !15, !16}
!40 = distinct !{!40, !14, !16, !15}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !14, !22}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !14, !15, !16}
!45 = distinct !{!45, !14, !16, !15}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14, !22}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14, !15, !16}
!50 = distinct !{!50, !14, !16, !15}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14, !22}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14, !15, !16}
!55 = distinct !{!55, !14, !16, !15}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14, !22}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !14, !15, !16}
!60 = distinct !{!60, !14, !16, !15}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !14, !22}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !14, !15, !16}
!65 = distinct !{!65, !14, !16, !15}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !14, !22}
!68 = distinct !{!68, !14}
!69 = distinct !{!69, !14, !15, !16}
!70 = distinct !{!70, !14, !16, !15}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14, !22}
!73 = distinct !{!73, !14}
!74 = distinct !{!74, !14, !15, !16}
!75 = distinct !{!75, !14, !16, !15}
!76 = distinct !{!76, !14}
!77 = distinct !{!77, !14, !22}
!78 = distinct !{!78, !14}
!79 = !{!80, !80, i64 0}
!80 = !{!"short", !8, i64 0}
!81 = distinct !{!81, !14, !15, !16}
!82 = distinct !{!82, !14, !16, !15}
!83 = distinct !{!83, !14}
!84 = distinct !{!84, !14, !22}
!85 = distinct !{!85, !14}
!86 = distinct !{!86, !14, !15, !16}
!87 = distinct !{!87, !14, !16, !15}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !14, !22}
!90 = distinct !{!90, !14}
!91 = distinct !{!91, !14, !15, !16}
!92 = distinct !{!92, !14, !16, !15}
!93 = distinct !{!93, !14}
!94 = distinct !{!94, !14, !22}
!95 = distinct !{!95, !14}
!96 = distinct !{!96, !14, !15, !16}
!97 = distinct !{!97, !14, !16, !15}
!98 = distinct !{!98, !14}
!99 = distinct !{!99, !14, !22}
!100 = distinct !{!100, !14}
!101 = distinct !{!101, !14, !15, !16}
!102 = distinct !{!102, !14, !16, !15}
!103 = distinct !{!103, !14}
!104 = distinct !{!104, !14, !22}
!105 = distinct !{!105, !14}
!106 = distinct !{!106, !14, !15, !16}
!107 = distinct !{!107, !14, !16, !15}
!108 = distinct !{!108, !14}
!109 = distinct !{!109, !14, !22}
!110 = distinct !{!110, !14}
!111 = distinct !{!111, !14, !15, !16}
!112 = distinct !{!112, !14, !16, !15}
!113 = distinct !{!113, !14}
!114 = distinct !{!114, !14, !22}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !14, !15, !16}
!117 = distinct !{!117, !14, !16, !15}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !14, !22}
!120 = distinct !{!120, !14}
!121 = !{!122, !122, i64 0}
!122 = !{!"long", !8, i64 0}
!123 = distinct !{!123, !14, !15, !16}
!124 = distinct !{!124, !14, !16, !15}
!125 = distinct !{!125, !14}
!126 = distinct !{!126, !14, !22}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !14, !15, !16}
!129 = distinct !{!129, !14, !16, !15}
!130 = distinct !{!130, !14}
!131 = distinct !{!131, !14, !22}
!132 = distinct !{!132, !14}
!133 = distinct !{!133, !14, !15, !16}
!134 = distinct !{!134, !14, !16, !15}
!135 = distinct !{!135, !14}
!136 = distinct !{!136, !14, !22}
!137 = distinct !{!137, !14}
!138 = distinct !{!138, !14, !15, !16}
!139 = distinct !{!139, !14, !16, !15}
!140 = distinct !{!140, !14}
!141 = distinct !{!141, !14, !22}
!142 = distinct !{!142, !14}
!143 = distinct !{!143, !14, !15, !16}
!144 = distinct !{!144, !14, !16, !15}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14, !22}
!147 = distinct !{!147, !14}
!148 = distinct !{!148, !14, !15, !16}
!149 = distinct !{!149, !14, !16, !15}
!150 = distinct !{!150, !14}
!151 = distinct !{!151, !14, !22}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !14, !15, !16}
!154 = distinct !{!154, !14, !16, !15}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !14, !22}
!157 = distinct !{!157, !14}
!158 = distinct !{!158, !14, !15, !16}
!159 = distinct !{!159, !14, !16, !15}
!160 = distinct !{!160, !14}
!161 = distinct !{!161, !14, !22}
!162 = distinct !{!162, !14}
!163 = !{!164, !164, i64 0}
!164 = !{!"float", !8, i64 0}
!165 = distinct !{!165, !14, !15, !16}
!166 = distinct !{!166, !14, !16, !15}
!167 = distinct !{!167, !14}
!168 = distinct !{!168, !14, !22}
!169 = distinct !{!169, !14}
!170 = distinct !{!170, !14, !15, !16}
!171 = distinct !{!171, !14, !16, !15}
!172 = distinct !{!172, !14}
!173 = distinct !{!173, !14, !22}
!174 = distinct !{!174, !14}
!175 = distinct !{!175, !14, !15, !16}
!176 = distinct !{!176, !14, !16, !15}
!177 = distinct !{!177, !14}
!178 = distinct !{!178, !14, !22}
!179 = distinct !{!179, !14}
!180 = distinct !{!180, !14, !15, !16}
!181 = distinct !{!181, !14, !16, !15}
!182 = distinct !{!182, !14}
!183 = distinct !{!183, !14, !22}
!184 = distinct !{!184, !14}
!185 = distinct !{!185, !14, !15, !16}
!186 = distinct !{!186, !14, !16, !15}
!187 = distinct !{!187, !14}
!188 = distinct !{!188, !14, !22}
!189 = distinct !{!189, !14}
!190 = distinct !{!190, !14, !15, !16}
!191 = distinct !{!191, !14, !16, !15}
!192 = distinct !{!192, !14}
!193 = distinct !{!193, !14, !22}
!194 = distinct !{!194, !14}
!195 = distinct !{!195, !14, !15, !16}
!196 = distinct !{!196, !14, !16, !15}
!197 = distinct !{!197, !14}
!198 = distinct !{!198, !14, !22}
!199 = distinct !{!199, !14}
!200 = distinct !{!200, !14, !15, !16}
!201 = distinct !{!201, !14, !16, !15}
!202 = distinct !{!202, !14}
!203 = distinct !{!203, !14, !22}
!204 = distinct !{!204, !14}
!205 = distinct !{!205, !14, !15, !16}
!206 = distinct !{!206, !14, !16, !15}
!207 = distinct !{!207, !14}
!208 = distinct !{!208, !14, !22}
!209 = distinct !{!209, !14}
!210 = distinct !{!210, !14, !15, !16}
!211 = distinct !{!211, !14, !16, !15}
!212 = distinct !{!212, !14}
!213 = distinct !{!213, !14, !22}
!214 = distinct !{!214, !14}
!215 = distinct !{!215, !14, !15, !16}
!216 = distinct !{!216, !14, !16, !15}
!217 = distinct !{!217, !14}
!218 = distinct !{!218, !14, !22}
!219 = distinct !{!219, !14}
!220 = distinct !{!220, !14, !15, !16}
!221 = distinct !{!221, !14, !16, !15}
!222 = distinct !{!222, !14}
!223 = distinct !{!223, !14, !22}
!224 = distinct !{!224, !14}
!225 = distinct !{!225, !14, !15, !16}
!226 = distinct !{!226, !14, !16, !15}
!227 = distinct !{!227, !14}
!228 = distinct !{!228, !14, !22}
!229 = distinct !{!229, !14}
!230 = distinct !{!230, !14, !15, !16}
!231 = distinct !{!231, !14, !16, !15}
!232 = distinct !{!232, !14}
!233 = distinct !{!233, !14, !22}
!234 = distinct !{!234, !14}
!235 = distinct !{!235, !14, !15, !16}
!236 = distinct !{!236, !14, !16, !15}
!237 = distinct !{!237, !14}
!238 = distinct !{!238, !14, !22}
!239 = distinct !{!239, !14}
!240 = distinct !{!240, !14, !15, !16}
!241 = distinct !{!241, !14, !16, !15}
!242 = distinct !{!242, !14}
!243 = distinct !{!243, !14, !22}
!244 = distinct !{!244, !14}
!245 = distinct !{!245, !14, !15, !16}
!246 = distinct !{!246, !14, !16, !15}
!247 = distinct !{!247, !14}
!248 = distinct !{!248, !14, !22}
!249 = distinct !{!249, !14}
!250 = distinct !{!250, !14, !15, !16}
!251 = distinct !{!251, !14, !16, !15}
!252 = distinct !{!252, !14}
!253 = distinct !{!253, !14, !22}
!254 = distinct !{!254, !14}
!255 = distinct !{!255, !14, !15, !16}
!256 = distinct !{!256, !14, !16, !15}
!257 = distinct !{!257, !14}
!258 = distinct !{!258, !14, !22}
!259 = distinct !{!259, !14}
!260 = distinct !{!260, !14, !15, !16}
!261 = distinct !{!261, !14, !16, !15}
!262 = distinct !{!262, !14}
!263 = distinct !{!263, !14, !22}
!264 = distinct !{!264, !14}
!265 = distinct !{!265, !14, !15, !16}
!266 = distinct !{!266, !14, !16, !15}
!267 = distinct !{!267, !14}
!268 = distinct !{!268, !14, !22}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !14, !15, !16}
!271 = distinct !{!271, !14, !16, !15}
!272 = distinct !{!272, !14}
!273 = distinct !{!273, !14, !22}
!274 = distinct !{!274, !14}
!275 = distinct !{!275, !14, !15, !16}
!276 = distinct !{!276, !14, !16, !15}
!277 = distinct !{!277, !14}
!278 = distinct !{!278, !14, !22}
!279 = distinct !{!279, !14}
!280 = distinct !{!280, !14, !15, !16}
!281 = distinct !{!281, !14, !16, !15}
!282 = distinct !{!282, !14}
!283 = distinct !{!283, !14, !22}
!284 = distinct !{!284, !14}
!285 = distinct !{!285, !14, !15, !16}
!286 = distinct !{!286, !14, !16, !15}
!287 = distinct !{!287, !14}
!288 = distinct !{!288, !14, !22}
!289 = distinct !{!289, !14}
!290 = distinct !{!290, !14, !15, !16}
!291 = distinct !{!291, !14, !16, !15}
!292 = distinct !{!292, !14}
!293 = distinct !{!293, !14, !22}
!294 = distinct !{!294, !14}
!295 = distinct !{!295, !14, !15, !16}
!296 = distinct !{!296, !14, !16, !15}
!297 = distinct !{!297, !14}
!298 = distinct !{!298, !14, !22}
!299 = distinct !{!299, !14}
!300 = distinct !{!300, !14, !15, !16}
!301 = distinct !{!301, !14, !16, !15}
!302 = distinct !{!302, !14}
!303 = distinct !{!303, !14, !22}
!304 = distinct !{!304, !14}
!305 = distinct !{!305, !14, !15, !16}
!306 = distinct !{!306, !14, !16, !15}
!307 = distinct !{!307, !14}
!308 = distinct !{!308, !14, !22}
!309 = distinct !{!309, !14}
!310 = distinct !{!310, !14, !15, !16}
!311 = distinct !{!311, !14, !16, !15}
!312 = distinct !{!312, !14}
!313 = distinct !{!313, !14, !22}
!314 = distinct !{!314, !14}
!315 = distinct !{!315, !14, !15, !16}
!316 = distinct !{!316, !14, !16, !15}
!317 = distinct !{!317, !14}
!318 = distinct !{!318, !14, !22}
!319 = distinct !{!319, !14}
!320 = distinct !{!320, !14, !15, !16}
!321 = distinct !{!321, !14, !16, !15}
!322 = distinct !{!322, !14}
!323 = distinct !{!323, !14, !22}
!324 = distinct !{!324, !14}
!325 = distinct !{!325, !14, !15, !16}
!326 = distinct !{!326, !14, !16, !15}
!327 = distinct !{!327, !14}
!328 = distinct !{!328, !14, !22}
!329 = distinct !{!329, !14}
!330 = distinct !{!330, !14, !15, !16}
!331 = distinct !{!331, !14, !16, !15}
!332 = distinct !{!332, !14}
!333 = distinct !{!333, !14, !22}
!334 = distinct !{!334, !14}
!335 = distinct !{!335, !14, !15, !16}
!336 = distinct !{!336, !14, !16, !15}
!337 = distinct !{!337, !14}
!338 = distinct !{!338, !14, !22}
!339 = distinct !{!339, !14}
!340 = distinct !{!340, !14, !15, !16}
!341 = distinct !{!341, !14, !16, !15}
!342 = distinct !{!342, !14}
!343 = distinct !{!343, !14, !22}
!344 = distinct !{!344, !14}
!345 = distinct !{!345, !14, !15, !16}
!346 = distinct !{!346, !14, !16, !15}
!347 = distinct !{!347, !14}
!348 = distinct !{!348, !14, !22}
!349 = distinct !{!349, !14}
!350 = distinct !{!350, !14, !15, !16}
!351 = distinct !{!351, !14, !16, !15}
!352 = distinct !{!352, !14}
!353 = distinct !{!353, !14, !22}
!354 = distinct !{!354, !14}
!355 = distinct !{!355, !14, !15, !16}
!356 = distinct !{!356, !14, !16, !15}
!357 = distinct !{!357, !14}
!358 = distinct !{!358, !14, !22}
!359 = distinct !{!359, !14}
!360 = distinct !{!360, !14, !15, !16}
!361 = distinct !{!361, !14, !16, !15}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14, !22}
!364 = distinct !{!364, !14}
!365 = distinct !{!365, !14, !15, !16}
!366 = distinct !{!366, !14, !16, !15}
!367 = distinct !{!367, !14}
!368 = distinct !{!368, !14, !22}
!369 = distinct !{!369, !14}
!370 = distinct !{!370, !14, !15, !16}
!371 = distinct !{!371, !14, !16, !15}
!372 = distinct !{!372, !14}
!373 = distinct !{!373, !14, !22}
!374 = distinct !{!374, !14}
!375 = distinct !{!375, !14, !15, !16}
!376 = distinct !{!376, !14, !16, !15}
!377 = distinct !{!377, !14}
!378 = distinct !{!378, !14, !22}
!379 = distinct !{!379, !14}
!380 = distinct !{!380, !14, !15, !16}
!381 = distinct !{!381, !14, !16, !15}
!382 = distinct !{!382, !14}
!383 = distinct !{!383, !14, !22}
!384 = distinct !{!384, !14}
!385 = distinct !{!385, !14, !15, !16}
!386 = distinct !{!386, !14, !16, !15}
!387 = distinct !{!387, !14}
!388 = distinct !{!388, !14, !22}
!389 = distinct !{!389, !14}
!390 = distinct !{!390, !14, !15, !16}
!391 = distinct !{!391, !14, !16, !15}
!392 = distinct !{!392, !14}
!393 = distinct !{!393, !14, !22}
!394 = distinct !{!394, !14}
!395 = distinct !{!395, !14, !15, !16}
!396 = distinct !{!396, !14, !16, !15}
!397 = distinct !{!397, !14}
!398 = distinct !{!398, !14, !22}
!399 = distinct !{!399, !14}
!400 = distinct !{!400, !14, !15, !16}
!401 = distinct !{!401, !14, !16, !15}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !14, !22}
!404 = distinct !{!404, !14}
!405 = distinct !{!405, !14, !15, !16}
!406 = distinct !{!406, !14, !16, !15}
!407 = distinct !{!407, !14}
!408 = distinct !{!408, !14, !22}
!409 = distinct !{!409, !14}
!410 = distinct !{!410, !14, !15, !16}
!411 = distinct !{!411, !14, !16, !15}
!412 = distinct !{!412, !14}
!413 = distinct !{!413, !14, !22}
!414 = distinct !{!414, !14}
!415 = distinct !{!415, !14, !15, !16}
!416 = distinct !{!416, !14, !16, !15}
!417 = distinct !{!417, !14}
!418 = distinct !{!418, !14, !22}
!419 = distinct !{!419, !14}
!420 = distinct !{!420, !14, !15, !16}
!421 = distinct !{!421, !14, !16, !15}
!422 = distinct !{!422, !14}
!423 = distinct !{!423, !14, !22}
!424 = distinct !{!424, !14}
!425 = distinct !{!425, !14, !15, !16}
!426 = distinct !{!426, !14, !16, !15}
!427 = distinct !{!427, !14}
!428 = distinct !{!428, !14, !22}
!429 = distinct !{!429, !14}
!430 = distinct !{!430, !14, !15, !16}
!431 = distinct !{!431, !14, !16, !15}
!432 = distinct !{!432, !14}
!433 = distinct !{!433, !14, !22}
!434 = distinct !{!434, !14}
!435 = distinct !{!435, !14, !15, !16}
!436 = distinct !{!436, !14, !16, !15}
!437 = distinct !{!437, !14}
!438 = distinct !{!438, !14, !22}
!439 = distinct !{!439, !14}
!440 = distinct !{!440, !14, !15, !16}
!441 = distinct !{!441, !14, !16, !15}
!442 = distinct !{!442, !14}
!443 = distinct !{!443, !14, !22}
!444 = distinct !{!444, !14}
!445 = distinct !{!445, !14, !15, !16}
!446 = distinct !{!446, !14, !16, !15}
!447 = distinct !{!447, !14}
!448 = distinct !{!448, !14, !22}
!449 = distinct !{!449, !14}
!450 = distinct !{!450, !14, !15, !16}
!451 = distinct !{!451, !14, !16, !15}
!452 = distinct !{!452, !14}
!453 = distinct !{!453, !14, !22}
!454 = distinct !{!454, !14}
!455 = distinct !{!455, !14, !15, !16}
!456 = distinct !{!456, !14, !16, !15}
!457 = distinct !{!457, !14}
!458 = distinct !{!458, !14, !22}
!459 = distinct !{!459, !14}
!460 = distinct !{!460, !14, !15, !16}
!461 = distinct !{!461, !14, !16, !15}
!462 = distinct !{!462, !14}
!463 = distinct !{!463, !14, !22}
!464 = distinct !{!464, !14}
!465 = distinct !{!465, !14, !15, !16}
!466 = distinct !{!466, !14, !16, !15}
!467 = distinct !{!467, !14}
!468 = distinct !{!468, !14, !22}
!469 = distinct !{!469, !14}
!470 = distinct !{!470, !14, !15, !16}
!471 = distinct !{!471, !14, !16, !15}
!472 = distinct !{!472, !14}
!473 = distinct !{!473, !14, !22}
!474 = distinct !{!474, !14}
!475 = distinct !{!475, !14, !15, !16}
!476 = distinct !{!476, !14, !16, !15}
!477 = distinct !{!477, !14}
!478 = distinct !{!478, !14, !22}
!479 = distinct !{!479, !14}
!480 = distinct !{!480, !14, !15, !16}
!481 = distinct !{!481, !14, !16, !15}
!482 = distinct !{!482, !14}
!483 = distinct !{!483, !14, !22}
!484 = distinct !{!484, !14}
!485 = distinct !{!485, !14, !15, !16}
!486 = distinct !{!486, !14, !16, !15}
!487 = distinct !{!487, !14}
!488 = distinct !{!488, !14, !22}
!489 = distinct !{!489, !14}
!490 = distinct !{!490, !14, !15, !16}
!491 = distinct !{!491, !14, !16, !15}
!492 = distinct !{!492, !14}
!493 = distinct !{!493, !14, !22}
!494 = distinct !{!494, !14}
!495 = distinct !{!495, !14, !15, !16}
!496 = distinct !{!496, !14, !16, !15}
!497 = distinct !{!497, !14}
!498 = distinct !{!498, !14, !22}
!499 = distinct !{!499, !14}
!500 = distinct !{!500, !14, !15, !16}
!501 = distinct !{!501, !14, !16, !15}
!502 = distinct !{!502, !14}
!503 = distinct !{!503, !14, !22}
!504 = distinct !{!504, !14}
!505 = distinct !{!505, !14, !15, !16}
!506 = distinct !{!506, !14, !16, !15}
!507 = distinct !{!507, !14}
!508 = distinct !{!508, !14, !22}
!509 = distinct !{!509, !14}
!510 = distinct !{!510, !14, !15, !16}
!511 = distinct !{!511, !14, !16, !15}
!512 = distinct !{!512, !14}
!513 = distinct !{!513, !14, !22}
!514 = distinct !{!514, !14}
!515 = distinct !{!515, !14, !15, !16}
!516 = distinct !{!516, !14, !16, !15}
!517 = distinct !{!517, !14}
!518 = distinct !{!518, !14, !22}
!519 = distinct !{!519, !14}
!520 = distinct !{!520, !14, !15, !16}
!521 = distinct !{!521, !14, !16, !15}
!522 = distinct !{!522, !14}
!523 = distinct !{!523, !14, !22}
!524 = distinct !{!524, !14}
!525 = distinct !{!525, !14, !15, !16}
!526 = distinct !{!526, !14, !16, !15}
!527 = distinct !{!527, !14}
!528 = distinct !{!528, !14, !22}
!529 = distinct !{!529, !14}
!530 = distinct !{!530, !14, !15, !16}
!531 = distinct !{!531, !14, !16, !15}
!532 = distinct !{!532, !14}
!533 = distinct !{!533, !14, !22}
!534 = distinct !{!534, !14}
!535 = distinct !{!535, !14, !15, !16}
!536 = distinct !{!536, !14, !16, !15}
!537 = distinct !{!537, !14}
!538 = distinct !{!538, !14, !22}
!539 = distinct !{!539, !14}
!540 = distinct !{!540, !14, !15, !16}
!541 = distinct !{!541, !14, !16, !15}
!542 = distinct !{!542, !14}
!543 = distinct !{!543, !14, !22}
!544 = distinct !{!544, !14}
!545 = distinct !{!545, !14, !15, !16}
!546 = distinct !{!546, !14, !16, !15}
!547 = distinct !{!547, !14}
!548 = distinct !{!548, !14, !22}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !14, !15, !16}
!551 = distinct !{!551, !14, !16, !15}
!552 = distinct !{!552, !14}
!553 = distinct !{!553, !14, !22}
!554 = distinct !{!554, !14}
!555 = distinct !{!555, !14, !15, !16}
!556 = distinct !{!556, !14, !16, !15}
!557 = distinct !{!557, !14}
!558 = distinct !{!558, !14, !22}
!559 = distinct !{!559, !14}
!560 = distinct !{!560, !14, !15, !16}
!561 = distinct !{!561, !14, !16, !15}
!562 = distinct !{!562, !14}
!563 = distinct !{!563, !14, !22}
!564 = distinct !{!564, !14}
!565 = distinct !{!565, !14, !15, !16}
!566 = distinct !{!566, !14, !16, !15}
!567 = distinct !{!567, !14}
!568 = distinct !{!568, !14, !22}
!569 = distinct !{!569, !14}
!570 = distinct !{!570, !14, !15, !16}
!571 = distinct !{!571, !14, !16, !15}
!572 = distinct !{!572, !14}
!573 = distinct !{!573, !14, !22}
!574 = distinct !{!574, !14}
!575 = distinct !{!575, !14, !15, !16}
!576 = distinct !{!576, !14, !16, !15}
!577 = distinct !{!577, !14}
!578 = distinct !{!578, !14, !22}
!579 = distinct !{!579, !14}
!580 = distinct !{!580, !14, !15, !16}
!581 = distinct !{!581, !14, !16, !15}
!582 = distinct !{!582, !14}
!583 = distinct !{!583, !14, !22}
!584 = distinct !{!584, !14}
!585 = distinct !{!585, !14, !15, !16}
!586 = distinct !{!586, !14, !16, !15}
!587 = distinct !{!587, !14}
!588 = distinct !{!588, !14, !22}
!589 = distinct !{!589, !14}
!590 = distinct !{!590, !14, !15, !16}
!591 = distinct !{!591, !14, !16, !15}
!592 = distinct !{!592, !14}
!593 = distinct !{!593, !14, !22}
!594 = distinct !{!594, !14}
!595 = distinct !{!595, !14, !15, !16}
!596 = distinct !{!596, !14, !16, !15}
!597 = distinct !{!597, !14}
!598 = distinct !{!598, !14, !22}
!599 = distinct !{!599, !14}
!600 = distinct !{!600, !14, !15, !16}
!601 = distinct !{!601, !14, !16, !15}
!602 = distinct !{!602, !14}
!603 = distinct !{!603, !14, !22}
!604 = distinct !{!604, !14}
!605 = distinct !{!605, !14, !15, !16}
!606 = distinct !{!606, !14, !16, !15}
!607 = distinct !{!607, !14}
!608 = distinct !{!608, !14, !22}
!609 = distinct !{!609, !14}
!610 = distinct !{!610, !14, !15, !16}
!611 = distinct !{!611, !14, !16, !15}
!612 = distinct !{!612, !14}
!613 = distinct !{!613, !14, !22}
!614 = distinct !{!614, !14}
!615 = distinct !{!615, !14, !15, !16}
!616 = distinct !{!616, !14, !16, !15}
!617 = distinct !{!617, !14}
!618 = distinct !{!618, !14, !22}
!619 = distinct !{!619, !14}
!620 = distinct !{!620, !14, !15, !16}
!621 = distinct !{!621, !14, !16, !15}
!622 = distinct !{!622, !14}
!623 = distinct !{!623, !14, !22}
!624 = distinct !{!624, !14}
!625 = distinct !{!625, !14, !15, !16}
!626 = distinct !{!626, !14, !16, !15}
!627 = distinct !{!627, !14}
!628 = distinct !{!628, !14, !22}
!629 = distinct !{!629, !14}
!630 = distinct !{!630, !14, !15, !16}
!631 = distinct !{!631, !14, !16, !15}
!632 = distinct !{!632, !14}
!633 = distinct !{!633, !14, !22}
!634 = distinct !{!634, !14}
!635 = distinct !{!635, !14, !15, !16}
!636 = distinct !{!636, !14, !16, !15}
!637 = distinct !{!637, !14}
!638 = distinct !{!638, !14, !22}
!639 = distinct !{!639, !14}
!640 = distinct !{!640, !14, !15, !16}
!641 = distinct !{!641, !14, !16, !15}
!642 = distinct !{!642, !14}
!643 = distinct !{!643, !14, !22}
!644 = distinct !{!644, !14}
!645 = distinct !{!645, !14, !15, !16}
!646 = distinct !{!646, !14, !16, !15}
!647 = distinct !{!647, !14}
!648 = distinct !{!648, !14, !22}
!649 = distinct !{!649, !14}
!650 = distinct !{!650, !14, !15, !16}
!651 = distinct !{!651, !14, !16, !15}
!652 = distinct !{!652, !14}
!653 = distinct !{!653, !14, !22}
!654 = distinct !{!654, !14}
!655 = distinct !{!655, !14, !15, !16}
!656 = distinct !{!656, !14, !16, !15}
!657 = distinct !{!657, !14}
!658 = distinct !{!658, !14, !22}
!659 = distinct !{!659, !14}
!660 = distinct !{!660, !14, !15, !16}
!661 = distinct !{!661, !14, !16, !15}
!662 = distinct !{!662, !14}
!663 = distinct !{!663, !14, !22}
!664 = distinct !{!664, !14}
!665 = distinct !{!665, !14, !15, !16}
!666 = distinct !{!666, !14, !16, !15}
!667 = distinct !{!667, !14}
!668 = distinct !{!668, !14, !22}
!669 = distinct !{!669, !14}
!670 = distinct !{!670, !14, !15, !16}
!671 = distinct !{!671, !14, !16, !15}
!672 = distinct !{!672, !14}
!673 = distinct !{!673, !14, !22}
!674 = distinct !{!674, !14}
!675 = distinct !{!675, !14, !15, !16}
!676 = distinct !{!676, !14, !16, !15}
!677 = distinct !{!677, !14}
!678 = distinct !{!678, !14, !22}
!679 = distinct !{!679, !14}
!680 = distinct !{!680, !14, !15, !16}
!681 = distinct !{!681, !14, !16, !15}
!682 = distinct !{!682, !14}
!683 = distinct !{!683, !14, !22}
!684 = distinct !{!684, !14}
!685 = distinct !{!685, !14, !15, !16}
!686 = distinct !{!686, !14, !16, !15}
!687 = distinct !{!687, !14}
!688 = distinct !{!688, !14, !22}
!689 = distinct !{!689, !14}
!690 = distinct !{!690, !14, !15, !16}
!691 = distinct !{!691, !14, !16, !15}
!692 = distinct !{!692, !14}
!693 = distinct !{!693, !14, !22}
!694 = distinct !{!694, !14}
!695 = distinct !{!695, !14, !15, !16}
!696 = distinct !{!696, !14, !16, !15}
!697 = distinct !{!697, !14}
!698 = distinct !{!698, !14, !22}
!699 = distinct !{!699, !14}
!700 = distinct !{!700, !14, !15, !16}
!701 = distinct !{!701, !14, !16, !15}
!702 = distinct !{!702, !14}
!703 = distinct !{!703, !14, !22}
!704 = distinct !{!704, !14}
!705 = distinct !{!705, !14, !15, !16}
!706 = distinct !{!706, !14, !16, !15}
!707 = distinct !{!707, !14}
!708 = distinct !{!708, !14, !22}
!709 = distinct !{!709, !14}
!710 = distinct !{!710, !14, !15, !16}
!711 = distinct !{!711, !14, !16, !15}
!712 = distinct !{!712, !14}
!713 = distinct !{!713, !14, !22}
!714 = distinct !{!714, !14}
!715 = distinct !{!715, !14, !15, !16}
!716 = distinct !{!716, !14, !16, !15}
!717 = distinct !{!717, !14}
!718 = distinct !{!718, !14, !22}
!719 = distinct !{!719, !14}
!720 = distinct !{!720, !14, !15, !16}
!721 = distinct !{!721, !14, !16, !15}
!722 = distinct !{!722, !14}
!723 = distinct !{!723, !14, !22}
!724 = distinct !{!724, !14}
!725 = distinct !{!725, !14, !15, !16}
!726 = distinct !{!726, !14, !16, !15}
!727 = distinct !{!727, !14}
!728 = distinct !{!728, !14, !22}
!729 = distinct !{!729, !14}
!730 = distinct !{!730, !14, !15, !16}
!731 = distinct !{!731, !14, !16, !15}
!732 = distinct !{!732, !14}
!733 = distinct !{!733, !14, !22}
!734 = distinct !{!734, !14}
!735 = distinct !{!735, !14, !15, !16}
!736 = distinct !{!736, !14, !16, !15}
!737 = distinct !{!737, !14}
!738 = distinct !{!738, !14, !22}
!739 = distinct !{!739, !14}
!740 = distinct !{!740, !14, !15, !16}
!741 = distinct !{!741, !14, !16, !15}
!742 = distinct !{!742, !14}
!743 = distinct !{!743, !14, !22}
!744 = distinct !{!744, !14}
!745 = distinct !{!745, !14, !15, !16}
!746 = distinct !{!746, !14, !16, !15}
!747 = distinct !{!747, !14}
!748 = distinct !{!748, !14, !22}
!749 = distinct !{!749, !14}
!750 = distinct !{!750, !14, !15, !16}
!751 = distinct !{!751, !14, !16, !15}
!752 = distinct !{!752, !14}
!753 = distinct !{!753, !14, !22}
!754 = distinct !{!754, !14}
!755 = distinct !{!755, !14, !15, !16}
!756 = distinct !{!756, !14, !16, !15}
!757 = distinct !{!757, !14}
!758 = distinct !{!758, !14, !22}
!759 = distinct !{!759, !14}
!760 = distinct !{!760, !14, !15, !16}
!761 = distinct !{!761, !14, !16, !15}
!762 = distinct !{!762, !14}
!763 = distinct !{!763, !14, !22}
!764 = distinct !{!764, !14}
!765 = distinct !{!765, !14, !15, !16}
!766 = distinct !{!766, !14, !16, !15}
!767 = distinct !{!767, !14}
!768 = distinct !{!768, !14, !22}
!769 = distinct !{!769, !14}
!770 = distinct !{!770, !14, !15, !16}
!771 = distinct !{!771, !14, !16, !15}
!772 = distinct !{!772, !14}
!773 = distinct !{!773, !14, !22}
!774 = distinct !{!774, !14}
!775 = distinct !{!775, !14, !15, !16}
!776 = distinct !{!776, !14, !16, !15}
!777 = distinct !{!777, !14}
!778 = distinct !{!778, !14, !22}
!779 = distinct !{!779, !14}
!780 = distinct !{!780, !14, !15, !16}
!781 = distinct !{!781, !14, !16, !15}
!782 = distinct !{!782, !14}
!783 = distinct !{!783, !14, !22}
!784 = distinct !{!784, !14}
!785 = distinct !{!785, !14, !15, !16}
!786 = distinct !{!786, !14, !16, !15}
!787 = distinct !{!787, !14}
!788 = distinct !{!788, !14, !22}
!789 = distinct !{!789, !14}
!790 = distinct !{!790, !14, !15, !16}
!791 = distinct !{!791, !14, !16, !15}
!792 = distinct !{!792, !14}
!793 = distinct !{!793, !14, !22}
!794 = distinct !{!794, !14}
!795 = distinct !{!795, !14, !15, !16}
!796 = distinct !{!796, !14, !16, !15}
!797 = distinct !{!797, !14}
!798 = distinct !{!798, !14, !22}
!799 = distinct !{!799, !14}
!800 = distinct !{!800, !14, !15, !16}
!801 = distinct !{!801, !14, !16, !15}
!802 = distinct !{!802, !14}
!803 = distinct !{!803, !14, !22}
!804 = distinct !{!804, !14}
!805 = distinct !{!805, !14, !15, !16}
!806 = distinct !{!806, !14, !16, !15}
!807 = distinct !{!807, !14}
!808 = distinct !{!808, !14, !22}
!809 = distinct !{!809, !14}
!810 = distinct !{!810, !14, !15, !16}
!811 = distinct !{!811, !14, !16, !15}
!812 = distinct !{!812, !14}
!813 = distinct !{!813, !14, !22}
!814 = distinct !{!814, !14}
!815 = distinct !{!815, !14, !15, !16}
!816 = distinct !{!816, !14, !16, !15}
!817 = distinct !{!817, !14}
!818 = distinct !{!818, !14, !22}
!819 = distinct !{!819, !14}
!820 = distinct !{!820, !14, !15, !16}
!821 = distinct !{!821, !14, !16, !15}
!822 = distinct !{!822, !14}
!823 = distinct !{!823, !14, !22}
!824 = distinct !{!824, !14}
!825 = distinct !{!825, !14, !15, !16}
!826 = distinct !{!826, !14, !16, !15}
!827 = distinct !{!827, !14}
!828 = distinct !{!828, !14, !22}
!829 = distinct !{!829, !14}
!830 = distinct !{!830, !14, !15, !16}
!831 = distinct !{!831, !14, !16, !15}
!832 = distinct !{!832, !14}
!833 = distinct !{!833, !14, !22}
!834 = distinct !{!834, !14}
!835 = distinct !{!835, !14, !15, !16}
!836 = distinct !{!836, !14, !16, !15}
!837 = distinct !{!837, !14}
!838 = distinct !{!838, !14, !22}
!839 = distinct !{!839, !14}
!840 = distinct !{!840, !14, !15, !16}
!841 = distinct !{!841, !14, !16, !15}
!842 = distinct !{!842, !14}
!843 = distinct !{!843, !14, !22}
!844 = distinct !{!844, !14}
!845 = distinct !{!845, !14, !15, !16}
!846 = distinct !{!846, !14, !16, !15}
!847 = distinct !{!847, !14}
!848 = distinct !{!848, !14, !22}
!849 = distinct !{!849, !14}
!850 = distinct !{!850, !14, !15, !16}
!851 = distinct !{!851, !14, !16, !15}
!852 = distinct !{!852, !14}
!853 = distinct !{!853, !14, !22}
!854 = distinct !{!854, !14}
!855 = distinct !{!855, !14, !15, !16}
!856 = distinct !{!856, !14, !16, !15}
!857 = distinct !{!857, !14}
!858 = distinct !{!858, !14, !22}
!859 = distinct !{!859, !14}
!860 = distinct !{!860, !14, !15, !16}
!861 = distinct !{!861, !14, !16, !15}
!862 = distinct !{!862, !14}
!863 = distinct !{!863, !14, !22}
!864 = distinct !{!864, !14}
!865 = distinct !{!865, !14, !15, !16}
!866 = distinct !{!866, !14, !16, !15}
!867 = distinct !{!867, !14}
!868 = distinct !{!868, !14, !22}
!869 = distinct !{!869, !14}
!870 = distinct !{!870, !14, !15, !16}
!871 = distinct !{!871, !14, !16, !15}
!872 = distinct !{!872, !14}
!873 = distinct !{!873, !14, !22}
!874 = distinct !{!874, !14}
!875 = distinct !{!875, !14, !15, !16}
!876 = distinct !{!876, !14, !16, !15}
!877 = distinct !{!877, !14}
!878 = distinct !{!878, !14, !22}
!879 = distinct !{!879, !14}
!880 = distinct !{!880, !14, !15, !16}
!881 = distinct !{!881, !14, !16, !15}
!882 = distinct !{!882, !14}
!883 = distinct !{!883, !14, !22}
!884 = distinct !{!884, !14}
!885 = distinct !{!885, !14, !15, !16}
!886 = distinct !{!886, !14, !16, !15}
!887 = distinct !{!887, !14}
!888 = distinct !{!888, !14, !22}
!889 = distinct !{!889, !14}
!890 = distinct !{!890, !14, !15, !16}
!891 = distinct !{!891, !14, !16, !15}
!892 = distinct !{!892, !14}
!893 = distinct !{!893, !14, !22}
!894 = distinct !{!894, !14}
!895 = distinct !{!895, !14, !15, !16}
!896 = distinct !{!896, !14, !16, !15}
!897 = distinct !{!897, !14}
!898 = distinct !{!898, !14, !22}
!899 = distinct !{!899, !14}
!900 = distinct !{!900, !14, !15, !16}
!901 = distinct !{!901, !14, !16, !15}
!902 = distinct !{!902, !14}
!903 = distinct !{!903, !14, !22}
!904 = distinct !{!904, !14}
!905 = distinct !{!905, !14, !15, !16}
!906 = distinct !{!906, !14, !16, !15}
!907 = distinct !{!907, !14}
!908 = distinct !{!908, !14, !22}
!909 = distinct !{!909, !14}
!910 = distinct !{!910, !14, !15, !16}
!911 = distinct !{!911, !14, !16, !15}
!912 = distinct !{!912, !14}
!913 = distinct !{!913, !14, !22}
!914 = distinct !{!914, !14}
!915 = distinct !{!915, !14, !15, !16}
!916 = distinct !{!916, !14, !16, !15}
!917 = distinct !{!917, !14}
!918 = distinct !{!918, !14, !22}
!919 = distinct !{!919, !14}
!920 = distinct !{!920, !14, !15, !16}
!921 = distinct !{!921, !14, !16, !15}
!922 = distinct !{!922, !14}
!923 = distinct !{!923, !14, !22}
!924 = distinct !{!924, !14}
!925 = distinct !{!925, !14, !15, !16}
!926 = distinct !{!926, !14, !16, !15}
!927 = distinct !{!927, !14}
!928 = distinct !{!928, !14, !22}
!929 = distinct !{!929, !14}
!930 = distinct !{!930, !14, !15, !16}
!931 = distinct !{!931, !14, !16, !15}
!932 = distinct !{!932, !14}
!933 = distinct !{!933, !14, !22}
!934 = distinct !{!934, !14}
!935 = distinct !{!935, !14, !15, !16}
!936 = distinct !{!936, !14, !16, !15}
!937 = distinct !{!937, !14}
!938 = distinct !{!938, !14, !22}
!939 = distinct !{!939, !14}
!940 = distinct !{!940, !14, !15, !16}
!941 = distinct !{!941, !14, !16, !15}
!942 = distinct !{!942, !14}
!943 = distinct !{!943, !14, !22}
!944 = distinct !{!944, !14}
!945 = distinct !{!945, !14, !15, !16}
!946 = distinct !{!946, !14, !16, !15}
!947 = distinct !{!947, !14}
!948 = distinct !{!948, !14, !22}
!949 = distinct !{!949, !14}
!950 = distinct !{!950, !14, !15, !16}
!951 = distinct !{!951, !14, !16, !15}
!952 = distinct !{!952, !14}
!953 = distinct !{!953, !14, !22}
!954 = distinct !{!954, !14}
!955 = distinct !{!955, !14, !15, !16}
!956 = distinct !{!956, !14, !16, !15}
!957 = distinct !{!957, !14}
!958 = distinct !{!958, !14, !22}
!959 = distinct !{!959, !14}
!960 = distinct !{!960, !14, !15, !16}
!961 = distinct !{!961, !14, !16, !15}
!962 = distinct !{!962, !14}
!963 = distinct !{!963, !14, !22}
!964 = distinct !{!964, !14}
!965 = distinct !{!965, !14, !15, !16}
!966 = distinct !{!966, !14, !16, !15}
!967 = distinct !{!967, !14}
!968 = distinct !{!968, !14, !22}
!969 = distinct !{!969, !14}
!970 = distinct !{!970, !14, !15, !16}
!971 = distinct !{!971, !14, !16, !15}
!972 = distinct !{!972, !14}
!973 = distinct !{!973, !14, !22}
!974 = distinct !{!974, !14}
!975 = distinct !{!975, !14, !15, !16}
!976 = distinct !{!976, !14, !16, !15}
!977 = distinct !{!977, !14}
!978 = distinct !{!978, !14, !22}
!979 = distinct !{!979, !14}
!980 = distinct !{!980, !14, !15, !16}
!981 = distinct !{!981, !14, !16, !15}
!982 = distinct !{!982, !14}
!983 = distinct !{!983, !14, !22}
!984 = distinct !{!984, !14}
!985 = distinct !{!985, !14, !15, !16}
!986 = distinct !{!986, !14, !16, !15}
!987 = distinct !{!987, !14}
!988 = distinct !{!988, !14, !22}
!989 = distinct !{!989, !14}
!990 = distinct !{!990, !14, !15, !16}
!991 = distinct !{!991, !14, !16, !15}
!992 = distinct !{!992, !14}
!993 = distinct !{!993, !14, !22}
!994 = distinct !{!994, !14}
!995 = distinct !{!995, !14, !15, !16}
!996 = distinct !{!996, !14, !16, !15}
!997 = distinct !{!997, !14}
!998 = distinct !{!998, !14, !22}
!999 = distinct !{!999, !14}
!1000 = distinct !{!1000, !14, !15, !16}
!1001 = distinct !{!1001, !14, !16, !15}
!1002 = distinct !{!1002, !14}
!1003 = distinct !{!1003, !14, !22}
!1004 = distinct !{!1004, !14}
!1005 = distinct !{!1005, !14, !15, !16}
!1006 = distinct !{!1006, !14, !16, !15}
!1007 = distinct !{!1007, !14}
!1008 = distinct !{!1008, !14, !22}
!1009 = distinct !{!1009, !14}
!1010 = distinct !{!1010, !14, !15, !16}
!1011 = distinct !{!1011, !14, !16, !15}
!1012 = distinct !{!1012, !14}
!1013 = distinct !{!1013, !14, !22}
!1014 = distinct !{!1014, !14}
!1015 = distinct !{!1015, !14, !15, !16}
!1016 = distinct !{!1016, !14, !16, !15}
!1017 = distinct !{!1017, !14}
!1018 = distinct !{!1018, !14, !22}
!1019 = distinct !{!1019, !14}
!1020 = distinct !{!1020, !14, !15, !16}
!1021 = distinct !{!1021, !14, !16, !15}
!1022 = distinct !{!1022, !14}
!1023 = distinct !{!1023, !14, !22}
!1024 = distinct !{!1024, !14}
!1025 = distinct !{!1025, !14, !15, !16}
!1026 = distinct !{!1026, !14, !16, !15}
!1027 = distinct !{!1027, !14}
!1028 = distinct !{!1028, !14, !22}
!1029 = distinct !{!1029, !14}
!1030 = distinct !{!1030, !14, !15, !16}
!1031 = distinct !{!1031, !14, !16, !15}
!1032 = distinct !{!1032, !14}
!1033 = distinct !{!1033, !14, !22}
!1034 = distinct !{!1034, !14}
!1035 = distinct !{!1035, !14, !15, !16}
!1036 = distinct !{!1036, !14, !16, !15}
!1037 = distinct !{!1037, !14}
!1038 = distinct !{!1038, !14, !22}
!1039 = distinct !{!1039, !14}
!1040 = distinct !{!1040, !14, !15, !16}
!1041 = distinct !{!1041, !14, !16, !15}
!1042 = distinct !{!1042, !14}
!1043 = distinct !{!1043, !14, !22}
!1044 = distinct !{!1044, !14}
!1045 = distinct !{!1045, !14, !15, !16}
!1046 = distinct !{!1046, !14, !16, !15}
!1047 = distinct !{!1047, !14}
!1048 = distinct !{!1048, !14, !22}
!1049 = distinct !{!1049, !14}
!1050 = distinct !{!1050, !14, !15, !16}
!1051 = distinct !{!1051, !14, !16, !15}
!1052 = distinct !{!1052, !14}
!1053 = distinct !{!1053, !14, !22}
!1054 = distinct !{!1054, !14}
!1055 = distinct !{!1055, !14, !15, !16}
!1056 = distinct !{!1056, !14, !16, !15}
!1057 = distinct !{!1057, !14}
!1058 = distinct !{!1058, !14, !22}
!1059 = distinct !{!1059, !14}
!1060 = distinct !{!1060, !14, !15, !16}
!1061 = distinct !{!1061, !14, !16, !15}
!1062 = distinct !{!1062, !14}
!1063 = distinct !{!1063, !14, !22}
!1064 = distinct !{!1064, !14}
!1065 = distinct !{!1065, !14, !15, !16}
!1066 = distinct !{!1066, !14, !16, !15}
!1067 = distinct !{!1067, !14}
!1068 = distinct !{!1068, !14, !22}
!1069 = distinct !{!1069, !14}
!1070 = distinct !{!1070, !14, !15, !16}
!1071 = distinct !{!1071, !14, !16, !15}
!1072 = distinct !{!1072, !14}
!1073 = distinct !{!1073, !14, !22}
!1074 = distinct !{!1074, !14}
!1075 = distinct !{!1075, !14, !15, !16}
!1076 = distinct !{!1076, !14, !16, !15}
!1077 = distinct !{!1077, !14}
!1078 = distinct !{!1078, !14, !22}
!1079 = distinct !{!1079, !14}
!1080 = distinct !{!1080, !14, !15, !16}
!1081 = distinct !{!1081, !14, !16, !15}
!1082 = distinct !{!1082, !14}
!1083 = distinct !{!1083, !14, !22}
!1084 = distinct !{!1084, !14}
!1085 = distinct !{!1085, !14, !15, !16}
!1086 = distinct !{!1086, !14, !16, !15}
!1087 = distinct !{!1087, !14}
!1088 = distinct !{!1088, !14, !22}
!1089 = distinct !{!1089, !14}
!1090 = distinct !{!1090, !14, !15, !16}
!1091 = distinct !{!1091, !14, !16, !15}
!1092 = distinct !{!1092, !14}
!1093 = distinct !{!1093, !14, !22}
!1094 = distinct !{!1094, !14}
!1095 = distinct !{!1095, !14, !15, !16}
!1096 = distinct !{!1096, !14, !16, !15}
!1097 = distinct !{!1097, !14}
!1098 = distinct !{!1098, !14, !22}
!1099 = distinct !{!1099, !14}
!1100 = distinct !{!1100, !14, !15, !16}
!1101 = distinct !{!1101, !14, !16, !15}
!1102 = distinct !{!1102, !14}
!1103 = distinct !{!1103, !14, !22}
!1104 = distinct !{!1104, !14}
!1105 = distinct !{!1105, !14, !15, !16}
!1106 = distinct !{!1106, !14, !16, !15}
!1107 = distinct !{!1107, !14}
!1108 = distinct !{!1108, !14, !22}
!1109 = distinct !{!1109, !14}
!1110 = distinct !{!1110, !14, !15, !16}
!1111 = distinct !{!1111, !14, !16, !15}
!1112 = distinct !{!1112, !14}
!1113 = distinct !{!1113, !14, !22}
!1114 = distinct !{!1114, !14}
!1115 = distinct !{!1115, !14, !15, !16}
!1116 = distinct !{!1116, !14, !16, !15}
!1117 = distinct !{!1117, !14}
!1118 = distinct !{!1118, !14, !22}
!1119 = distinct !{!1119, !14}
!1120 = distinct !{!1120, !14, !15, !16}
!1121 = distinct !{!1121, !14, !16, !15}
!1122 = distinct !{!1122, !14}
!1123 = distinct !{!1123, !14, !22}
!1124 = distinct !{!1124, !14}
!1125 = distinct !{!1125, !14, !15, !16}
!1126 = distinct !{!1126, !14, !16, !15}
!1127 = distinct !{!1127, !14}
!1128 = distinct !{!1128, !14, !22}
!1129 = distinct !{!1129, !14}
!1130 = distinct !{!1130, !14, !15, !16}
!1131 = distinct !{!1131, !14, !16, !15}
!1132 = distinct !{!1132, !14}
!1133 = distinct !{!1133, !14, !22}
!1134 = distinct !{!1134, !14}
!1135 = distinct !{!1135, !14, !15, !16}
!1136 = distinct !{!1136, !14, !16, !15}
!1137 = distinct !{!1137, !14}
!1138 = distinct !{!1138, !14, !22}
!1139 = distinct !{!1139, !14}
!1140 = distinct !{!1140, !14, !15, !16}
!1141 = distinct !{!1141, !14, !16, !15}
!1142 = distinct !{!1142, !14}
!1143 = distinct !{!1143, !14, !22}
!1144 = distinct !{!1144, !14}
!1145 = distinct !{!1145, !14, !15, !16}
!1146 = distinct !{!1146, !14, !16, !15}
!1147 = distinct !{!1147, !14}
!1148 = distinct !{!1148, !14, !22}
!1149 = distinct !{!1149, !14}
!1150 = distinct !{!1150, !14, !15, !16}
!1151 = distinct !{!1151, !14, !16, !15}
!1152 = distinct !{!1152, !14}
!1153 = distinct !{!1153, !14, !22}
!1154 = distinct !{!1154, !14}
!1155 = distinct !{!1155, !14, !15, !16}
!1156 = distinct !{!1156, !14, !16, !15}
!1157 = distinct !{!1157, !14}
!1158 = distinct !{!1158, !14, !22}
!1159 = distinct !{!1159, !14}
!1160 = distinct !{!1160, !14, !15, !16}
!1161 = distinct !{!1161, !14, !16, !15}
!1162 = distinct !{!1162, !14}
!1163 = distinct !{!1163, !14, !22}
!1164 = distinct !{!1164, !14}
!1165 = distinct !{!1165, !14, !15, !16}
!1166 = distinct !{!1166, !14, !16, !15}
!1167 = distinct !{!1167, !14}
!1168 = distinct !{!1168, !14, !22}
!1169 = distinct !{!1169, !14}
!1170 = distinct !{!1170, !14, !15, !16}
!1171 = distinct !{!1171, !14, !16, !15}
!1172 = distinct !{!1172, !14}
!1173 = distinct !{!1173, !14, !22}
!1174 = distinct !{!1174, !14}
!1175 = distinct !{!1175, !14, !15, !16}
!1176 = distinct !{!1176, !14, !16, !15}
!1177 = distinct !{!1177, !14}
!1178 = distinct !{!1178, !14, !22}
!1179 = distinct !{!1179, !14}
!1180 = distinct !{!1180, !14, !15, !16}
!1181 = distinct !{!1181, !14, !16, !15}
!1182 = distinct !{!1182, !14}
!1183 = distinct !{!1183, !14, !22}
!1184 = distinct !{!1184, !14}
!1185 = distinct !{!1185, !14, !15, !16}
!1186 = distinct !{!1186, !14, !16, !15}
!1187 = distinct !{!1187, !14}
!1188 = distinct !{!1188, !14, !22}
!1189 = distinct !{!1189, !14}
!1190 = distinct !{!1190, !14, !15, !16}
!1191 = distinct !{!1191, !14, !16, !15}
!1192 = distinct !{!1192, !14}
!1193 = distinct !{!1193, !14, !22}
!1194 = distinct !{!1194, !14}
!1195 = distinct !{!1195, !14, !15, !16}
!1196 = distinct !{!1196, !14, !16, !15}
!1197 = distinct !{!1197, !14}
!1198 = distinct !{!1198, !14, !22}
!1199 = distinct !{!1199, !14}
!1200 = distinct !{!1200, !14, !15, !16}
!1201 = distinct !{!1201, !14, !16, !15}
!1202 = distinct !{!1202, !14}
!1203 = distinct !{!1203, !14, !22}
!1204 = distinct !{!1204, !14}
!1205 = distinct !{!1205, !14, !15, !16}
!1206 = distinct !{!1206, !14, !16, !15}
!1207 = distinct !{!1207, !14}
!1208 = distinct !{!1208, !14, !22}
!1209 = distinct !{!1209, !14}
!1210 = distinct !{!1210, !14, !15, !16}
!1211 = distinct !{!1211, !14, !16, !15}
!1212 = distinct !{!1212, !14}
!1213 = distinct !{!1213, !14, !22}
!1214 = distinct !{!1214, !14}
!1215 = distinct !{!1215, !14, !15, !16}
!1216 = distinct !{!1216, !14, !16, !15}
!1217 = distinct !{!1217, !14}
!1218 = distinct !{!1218, !14, !22}
!1219 = distinct !{!1219, !14}
!1220 = distinct !{!1220, !14, !15, !16}
!1221 = distinct !{!1221, !14, !16, !15}
!1222 = distinct !{!1222, !14}
!1223 = distinct !{!1223, !14, !22}
!1224 = distinct !{!1224, !14}
!1225 = distinct !{!1225, !14, !15, !16}
!1226 = distinct !{!1226, !14, !16, !15}
!1227 = distinct !{!1227, !14}
!1228 = distinct !{!1228, !14, !22}
!1229 = distinct !{!1229, !14}
!1230 = distinct !{!1230, !14, !15, !16}
!1231 = distinct !{!1231, !14, !16, !15}
!1232 = distinct !{!1232, !14}
!1233 = distinct !{!1233, !14, !22}
!1234 = distinct !{!1234, !14}
!1235 = distinct !{!1235, !14, !15, !16}
!1236 = distinct !{!1236, !14, !16, !15}
!1237 = distinct !{!1237, !14}
!1238 = distinct !{!1238, !14, !22}
!1239 = distinct !{!1239, !14}
!1240 = distinct !{!1240, !14, !15, !16}
!1241 = distinct !{!1241, !14, !16, !15}
!1242 = distinct !{!1242, !14}
!1243 = distinct !{!1243, !14, !22}
!1244 = distinct !{!1244, !14}
!1245 = distinct !{!1245, !14, !15, !16}
!1246 = distinct !{!1246, !14, !16, !15}
!1247 = distinct !{!1247, !14}
!1248 = distinct !{!1248, !14, !22}
!1249 = distinct !{!1249, !14}
!1250 = distinct !{!1250, !14, !15, !16}
!1251 = distinct !{!1251, !14, !16, !15}
!1252 = distinct !{!1252, !14}
!1253 = distinct !{!1253, !14, !22}
!1254 = distinct !{!1254, !14}
!1255 = distinct !{!1255, !14, !15, !16}
!1256 = distinct !{!1256, !14, !16, !15}
!1257 = distinct !{!1257, !14}
!1258 = distinct !{!1258, !14, !22}
!1259 = distinct !{!1259, !14}
!1260 = distinct !{!1260, !14, !15, !16}
!1261 = distinct !{!1261, !14, !16, !15}
!1262 = distinct !{!1262, !14}
!1263 = distinct !{!1263, !14, !22}
!1264 = distinct !{!1264, !14}
!1265 = distinct !{!1265, !14, !15, !16}
!1266 = distinct !{!1266, !14, !16, !15}
!1267 = distinct !{!1267, !14}
!1268 = distinct !{!1268, !14, !22}
!1269 = distinct !{!1269, !14}
!1270 = distinct !{!1270, !14, !15, !16}
!1271 = distinct !{!1271, !14, !16, !15}
!1272 = distinct !{!1272, !14}
!1273 = distinct !{!1273, !14, !22}
!1274 = distinct !{!1274, !14}
!1275 = distinct !{!1275, !14, !15, !16}
!1276 = distinct !{!1276, !14, !16, !15}
!1277 = distinct !{!1277, !14}
!1278 = distinct !{!1278, !14, !22}
!1279 = distinct !{!1279, !14}
!1280 = distinct !{!1280, !14, !15, !16}
!1281 = distinct !{!1281, !14, !16, !15}
!1282 = distinct !{!1282, !14}
!1283 = distinct !{!1283, !14, !22}
!1284 = distinct !{!1284, !14}
!1285 = distinct !{!1285, !14, !15, !16}
!1286 = distinct !{!1286, !14, !16, !15}
!1287 = distinct !{!1287, !14}
!1288 = distinct !{!1288, !14, !22}
!1289 = distinct !{!1289, !14}
!1290 = distinct !{!1290, !14, !15, !16}
!1291 = distinct !{!1291, !14, !16, !15}
!1292 = distinct !{!1292, !14}
!1293 = distinct !{!1293, !14, !22}
!1294 = distinct !{!1294, !14}
!1295 = distinct !{!1295, !14, !15, !16}
!1296 = distinct !{!1296, !14, !16, !15}
!1297 = distinct !{!1297, !14}
!1298 = distinct !{!1298, !14, !22}
!1299 = distinct !{!1299, !14}
!1300 = distinct !{!1300, !14, !15, !16}
!1301 = distinct !{!1301, !14, !16, !15}
!1302 = distinct !{!1302, !14}
!1303 = distinct !{!1303, !14, !22}
!1304 = distinct !{!1304, !14}
!1305 = distinct !{!1305, !14, !15, !16}
!1306 = distinct !{!1306, !14, !16, !15}
!1307 = distinct !{!1307, !14}
!1308 = distinct !{!1308, !14, !22}
!1309 = distinct !{!1309, !14}
!1310 = distinct !{!1310, !14, !15, !16}
!1311 = distinct !{!1311, !14, !16, !15}
!1312 = distinct !{!1312, !14}
!1313 = distinct !{!1313, !14, !22}
!1314 = distinct !{!1314, !14}
!1315 = distinct !{!1315, !14, !15, !16}
!1316 = distinct !{!1316, !14, !16, !15}
!1317 = distinct !{!1317, !14}
!1318 = distinct !{!1318, !14, !22}
!1319 = distinct !{!1319, !14}
!1320 = distinct !{!1320, !14, !15, !16}
!1321 = distinct !{!1321, !14, !16, !15}
!1322 = distinct !{!1322, !14}
!1323 = distinct !{!1323, !14, !22}
!1324 = distinct !{!1324, !14}
!1325 = distinct !{!1325, !14, !15, !16}
!1326 = distinct !{!1326, !14, !16, !15}
!1327 = distinct !{!1327, !14}
!1328 = distinct !{!1328, !14, !22}
!1329 = distinct !{!1329, !14}
!1330 = distinct !{!1330, !14, !15, !16}
!1331 = distinct !{!1331, !14, !16, !15}
!1332 = distinct !{!1332, !14}
!1333 = distinct !{!1333, !14, !22}
!1334 = distinct !{!1334, !14}
!1335 = distinct !{!1335, !14, !15, !16}
!1336 = distinct !{!1336, !14, !16, !15}
!1337 = distinct !{!1337, !14}
!1338 = distinct !{!1338, !14, !22}
!1339 = distinct !{!1339, !14}
!1340 = distinct !{!1340, !14, !15, !16}
!1341 = distinct !{!1341, !14, !16, !15}
!1342 = distinct !{!1342, !14}
!1343 = distinct !{!1343, !14, !22}
!1344 = distinct !{!1344, !14}
!1345 = distinct !{!1345, !14, !15, !16}
!1346 = distinct !{!1346, !14, !16, !15}
!1347 = distinct !{!1347, !14}
!1348 = distinct !{!1348, !14, !22}
!1349 = distinct !{!1349, !14}
!1350 = distinct !{!1350, !14, !15, !16}
!1351 = distinct !{!1351, !14, !16, !15}
!1352 = distinct !{!1352, !14}
!1353 = distinct !{!1353, !14, !22}
!1354 = distinct !{!1354, !14}
!1355 = distinct !{!1355, !14, !15, !16}
!1356 = distinct !{!1356, !14, !16, !15}
!1357 = distinct !{!1357, !14}
!1358 = distinct !{!1358, !14, !22}
!1359 = distinct !{!1359, !14}
!1360 = distinct !{!1360, !14, !15, !16}
!1361 = distinct !{!1361, !14, !16, !15}
!1362 = distinct !{!1362, !14}
!1363 = distinct !{!1363, !14, !22}
!1364 = distinct !{!1364, !14}
!1365 = distinct !{!1365, !14, !15, !16}
!1366 = distinct !{!1366, !14, !16, !15}
!1367 = distinct !{!1367, !14}
!1368 = distinct !{!1368, !14, !22}
!1369 = distinct !{!1369, !14}
!1370 = distinct !{!1370, !14, !15, !16}
!1371 = distinct !{!1371, !14, !16, !15}
!1372 = distinct !{!1372, !14}
!1373 = distinct !{!1373, !14, !22}
!1374 = distinct !{!1374, !14}
!1375 = distinct !{!1375, !14, !15, !16}
!1376 = distinct !{!1376, !14, !16, !15}
!1377 = distinct !{!1377, !14}
!1378 = distinct !{!1378, !14, !22}
!1379 = distinct !{!1379, !14}
!1380 = distinct !{!1380, !14, !15, !16}
!1381 = distinct !{!1381, !14, !16, !15}
!1382 = distinct !{!1382, !14}
!1383 = distinct !{!1383, !14, !22}
!1384 = distinct !{!1384, !14}
!1385 = distinct !{!1385, !14, !15, !16}
!1386 = distinct !{!1386, !14, !16, !15}
!1387 = distinct !{!1387, !14}
!1388 = distinct !{!1388, !14, !22}
!1389 = distinct !{!1389, !14}
!1390 = distinct !{!1390, !14, !15, !16}
!1391 = distinct !{!1391, !14, !16, !15}
!1392 = distinct !{!1392, !14}
!1393 = distinct !{!1393, !14, !22}
!1394 = distinct !{!1394, !14}
!1395 = distinct !{!1395, !14, !15, !16}
!1396 = distinct !{!1396, !14, !16, !15}
!1397 = distinct !{!1397, !14}
!1398 = distinct !{!1398, !14, !22}
!1399 = distinct !{!1399, !14}
!1400 = distinct !{!1400, !14, !15, !16}
!1401 = distinct !{!1401, !14, !16, !15}
!1402 = distinct !{!1402, !14}
!1403 = distinct !{!1403, !14, !22}
!1404 = distinct !{!1404, !14}
!1405 = distinct !{!1405, !14, !15, !16}
!1406 = distinct !{!1406, !14, !16, !15}
!1407 = distinct !{!1407, !14}
!1408 = distinct !{!1408, !14, !22}
!1409 = distinct !{!1409, !14}
!1410 = distinct !{!1410, !14, !15, !16}
!1411 = distinct !{!1411, !14, !16, !15}
!1412 = distinct !{!1412, !14}
!1413 = distinct !{!1413, !14, !22}
!1414 = distinct !{!1414, !14}
!1415 = distinct !{!1415, !14, !15, !16}
!1416 = distinct !{!1416, !14, !16, !15}
!1417 = distinct !{!1417, !14}
!1418 = distinct !{!1418, !14, !22}
!1419 = distinct !{!1419, !14}
!1420 = distinct !{!1420, !14, !15, !16}
!1421 = distinct !{!1421, !14, !16, !15}
!1422 = distinct !{!1422, !14}
!1423 = distinct !{!1423, !14, !22}
!1424 = distinct !{!1424, !14}
!1425 = distinct !{!1425, !14, !15, !16}
!1426 = distinct !{!1426, !14, !16, !15}
!1427 = distinct !{!1427, !14}
!1428 = distinct !{!1428, !14, !22}
!1429 = distinct !{!1429, !14}
!1430 = distinct !{!1430, !14, !15, !16}
!1431 = distinct !{!1431, !14, !16, !15}
!1432 = distinct !{!1432, !14}
!1433 = distinct !{!1433, !14, !22}
!1434 = distinct !{!1434, !14}
!1435 = distinct !{!1435, !14, !15, !16}
!1436 = distinct !{!1436, !14, !16, !15}
!1437 = distinct !{!1437, !14}
!1438 = distinct !{!1438, !14, !22}
!1439 = distinct !{!1439, !14}
!1440 = distinct !{!1440, !14, !15, !16}
!1441 = distinct !{!1441, !14, !16, !15}
!1442 = distinct !{!1442, !14}
!1443 = distinct !{!1443, !14, !22}
!1444 = distinct !{!1444, !14}
!1445 = distinct !{!1445, !14, !15, !16}
!1446 = distinct !{!1446, !14, !16, !15}
!1447 = distinct !{!1447, !14}
!1448 = distinct !{!1448, !14, !22}
!1449 = distinct !{!1449, !14}
!1450 = distinct !{!1450, !14, !15, !16}
!1451 = distinct !{!1451, !14, !16, !15}
!1452 = distinct !{!1452, !14}
!1453 = distinct !{!1453, !14, !22}
!1454 = distinct !{!1454, !14}
!1455 = distinct !{!1455, !14, !15, !16}
!1456 = distinct !{!1456, !14, !16, !15}
!1457 = distinct !{!1457, !14}
!1458 = distinct !{!1458, !14, !22}
!1459 = distinct !{!1459, !14}
!1460 = distinct !{!1460, !14, !15, !16}
!1461 = distinct !{!1461, !14, !16, !15}
!1462 = distinct !{!1462, !14}
!1463 = distinct !{!1463, !14, !22}
!1464 = distinct !{!1464, !14}
!1465 = distinct !{!1465, !14, !15, !16}
!1466 = distinct !{!1466, !14, !16, !15}
!1467 = distinct !{!1467, !14}
!1468 = distinct !{!1468, !14, !22}
!1469 = distinct !{!1469, !14}
!1470 = distinct !{!1470, !14, !15, !16}
!1471 = distinct !{!1471, !14, !16, !15}
!1472 = distinct !{!1472, !14}
!1473 = distinct !{!1473, !14, !22}
!1474 = distinct !{!1474, !14}
!1475 = distinct !{!1475, !14, !15, !16}
!1476 = distinct !{!1476, !14, !16, !15}
!1477 = distinct !{!1477, !14}
!1478 = distinct !{!1478, !14, !22}
!1479 = distinct !{!1479, !14}
!1480 = distinct !{!1480, !14, !15, !16}
!1481 = distinct !{!1481, !14, !16, !15}
!1482 = distinct !{!1482, !14}
!1483 = distinct !{!1483, !14, !22}
!1484 = distinct !{!1484, !14}
