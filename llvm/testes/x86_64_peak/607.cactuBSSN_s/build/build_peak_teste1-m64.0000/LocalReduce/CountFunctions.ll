; ModuleID = 'LocalReduce/CountFunctions.c'
source_filename = "LocalReduce/CountFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [29 x i8] c"LocalReduce/CountFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !13

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !16

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !17

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !20

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !21

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !22

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !23

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !24

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !25

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !26

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !27

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !28

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !29

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !30

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !31

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !32

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !33

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !34

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !35

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !36

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !37

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !38

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !39

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !40

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !41

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !42

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !43

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !44

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !45

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !46

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !47

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !48

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !49

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !50

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !51

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !52

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !53

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !54

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !55

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !56

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !57

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !58

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !61

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !62

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !63

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !64

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !65

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !66

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !67

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !68

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !69

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !70

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !71

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !72

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !73

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !74

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !75

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !76

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !77

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !78

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !79

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !80

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !81

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !82

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !83

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !84

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !85

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !86

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !87

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !88

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !91

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !92

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !93

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !94

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !95

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !96

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !97

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !98

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !99

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !100

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !101

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !102

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !103

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !104

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !107

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !108

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !109

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !110

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !111

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !112

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !113

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !114

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !115

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !116

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !117

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !118

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !119

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !120

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !123

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !124

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !125

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !126

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !127

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !128

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !129

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !130

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !131

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !132

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !133

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !134

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !135

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !136

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !137

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !138

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !139

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !140

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !141

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !142

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !143

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !144

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !145

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !146

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !147

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !148

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !149

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !150

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !151

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !152

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !153

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !154

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !155

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !156

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !157

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !158

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !159

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !160

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !161

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !162

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !163

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !164

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 290, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !165

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !166

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !167

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !168

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !169

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !170

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !171

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !172

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !173

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !174

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !175

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !176

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !177

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !178

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 293, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !179

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !180

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !181

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !182

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !183

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !184

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !185

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !186

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !187

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !188

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !189

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !190

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !191

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !192

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !193

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !194

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !195

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !196

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !197

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !198

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !199

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !200

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !201

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !202

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !203

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !204

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !205

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !206

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !207

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !208

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !209

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !210

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !211

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !212

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !213

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !214

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !215

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !216

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !217

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !218

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !219

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !220

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !221

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !222

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !223

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !224

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !225

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !226

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !227

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !228

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !229

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !230

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !231

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !232

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !233

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !234

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !235

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !236

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !237

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !238

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !239

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !240

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !241

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !242

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !243

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !244

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !245

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !246

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !247

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !248

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !249

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !250

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !251

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !252

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !253

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !254

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !255

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !256

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !257

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !258

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !259

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !260

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !261

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !262

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 320, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !263

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !264

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !265

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !266

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !267

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !268

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !269

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !270

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !271

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !272

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !273

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !274

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !275

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !276

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %2120 [
    i32 101, label %22
    i32 102, label %440
    i32 107, label %854
    i32 108, label %1272
    i32 109, label %1690
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %2120

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %2120

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %2120

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !277

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %2120, label %48, !llvm.loop !278

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !279

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !280

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !281

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !282

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %2120, label %101, !llvm.loop !283

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %2120

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %2120

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !284

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %2120, label %253, !llvm.loop !285

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !286

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !287

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !288

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !289

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %2120, label %306, !llvm.loop !290

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %2120

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %2120

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %2120

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !291

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %2120, label %466, !llvm.loop !292

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !293

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !294

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !295

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !296

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %2120, label %518, !llvm.loop !297

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %2120

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %2120

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !298

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %2120, label %669, !llvm.loop !299

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !300

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !301

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !302

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !303

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %2120, label %721, !llvm.loop !304

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 529, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store double 0.000000e+00, ptr %856, align 8, !tbaa !105
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store double 1.000000e+00, ptr %856, align 8, !tbaa !105
  br label %2120

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %2120

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %2120

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %882, %931 ]
  %882 = add nuw i32 %881, 1
  br i1 %876, label %883, label %931

883:                                              ; preds = %880
  %884 = load i32, ptr %4, align 4, !tbaa !6
  %885 = load i32, ptr %12, align 4, !tbaa !6
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %884, %886
  br i1 %887, label %907, label %888

888:                                              ; preds = %883
  %889 = icmp eq i32 %884, %886
  br i1 %889, label %890, label %923

890:                                              ; preds = %888
  store i32 0, ptr %4, align 4, !tbaa !6
  %891 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %891, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %892

892:                                              ; preds = %890, %917
  %893 = phi i64 [ %921, %917 ], [ 1, %890 ]
  %894 = getelementptr inbounds i32, ptr %4, i64 %893
  %895 = load i32, ptr %894, align 4, !tbaa !6
  %896 = getelementptr inbounds i32, ptr %12, i64 %893
  %897 = load i32, ptr %896, align 4, !tbaa !6
  %898 = add nsw i32 %897, -1
  %899 = icmp slt i32 %895, %898
  br i1 %899, label %900, label %915

900:                                              ; preds = %892
  br i1 %887, label %907, label %901

901:                                              ; preds = %900
  %902 = getelementptr inbounds i32, ptr %7, i64 %893
  %903 = load i32, ptr %902, align 4, !tbaa !6
  %904 = getelementptr inbounds i32, ptr %6, i64 %893
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = add nsw i32 %905, %903
  store i32 %906, ptr %904, align 4, !tbaa !6
  br label %926

907:                                              ; preds = %883, %900
  %908 = phi i32 [ %895, %900 ], [ %884, %883 ]
  %909 = phi ptr [ %894, %900 ], [ %4, %883 ]
  %910 = phi i64 [ %893, %900 ], [ 0, %883 ]
  %911 = add nsw i32 %908, 1
  store i32 %911, ptr %909, align 4, !tbaa !6
  %912 = getelementptr inbounds i32, ptr %7, i64 %910
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %6, i64 %910
  br label %926

915:                                              ; preds = %892
  %916 = icmp eq i32 %895, %898
  br i1 %916, label %917, label %923

917:                                              ; preds = %915
  store i32 0, ptr %894, align 4, !tbaa !6
  %918 = getelementptr inbounds i32, ptr %8, i64 %893
  %919 = load i32, ptr %918, align 4, !tbaa !6
  %920 = getelementptr inbounds i32, ptr %6, i64 %893
  store i32 %919, ptr %920, align 4, !tbaa !6
  %921 = add nuw nsw i64 %893, 1
  %922 = icmp eq i64 %921, %878
  br i1 %922, label %931, label %892, !llvm.loop !305

923:                                              ; preds = %888, %915
  %924 = sitofp i32 %881 to double
  store double %924, ptr %856, align 8, !tbaa !105
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

926:                                              ; preds = %901, %907
  %927 = phi ptr [ %914, %907 ], [ %894, %901 ]
  %928 = phi i32 [ %913, %907 ], [ 1, %901 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %917, %926, %890, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %2108, label %880, !llvm.loop !306

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !307

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !308

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !309

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1010:                                             ; preds = %1005
  %1011 = sitofp i32 %934 to double
  store double %1011, ptr %856, align 8, !tbaa !105
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !310

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %2120, label %933, !llvm.loop !311

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %2120

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %2120

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1087, %1136 ]
  %1087 = add nuw i32 %1086, 1
  br i1 %1081, label %1088, label %1136

1088:                                             ; preds = %1085
  %1089 = load i32, ptr %4, align 4, !tbaa !6
  %1090 = load i32, ptr %12, align 4, !tbaa !6
  %1091 = add nsw i32 %1090, -1
  %1092 = icmp slt i32 %1089, %1091
  br i1 %1092, label %1112, label %1093

1093:                                             ; preds = %1088
  %1094 = icmp eq i32 %1089, %1091
  br i1 %1094, label %1095, label %1128

1095:                                             ; preds = %1093
  store i32 0, ptr %4, align 4, !tbaa !6
  %1096 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1096, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1097

1097:                                             ; preds = %1095, %1122
  %1098 = phi i64 [ %1126, %1122 ], [ 1, %1095 ]
  %1099 = getelementptr inbounds i32, ptr %4, i64 %1098
  %1100 = load i32, ptr %1099, align 4, !tbaa !6
  %1101 = getelementptr inbounds i32, ptr %12, i64 %1098
  %1102 = load i32, ptr %1101, align 4, !tbaa !6
  %1103 = add nsw i32 %1102, -1
  %1104 = icmp slt i32 %1100, %1103
  br i1 %1104, label %1105, label %1120

1105:                                             ; preds = %1097
  br i1 %1092, label %1112, label %1106

1106:                                             ; preds = %1105
  %1107 = getelementptr inbounds i32, ptr %7, i64 %1098
  %1108 = load i32, ptr %1107, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %6, i64 %1098
  %1110 = load i32, ptr %1109, align 4, !tbaa !6
  %1111 = add nsw i32 %1110, %1108
  store i32 %1111, ptr %1109, align 4, !tbaa !6
  br label %1131

1112:                                             ; preds = %1088, %1105
  %1113 = phi i32 [ %1100, %1105 ], [ %1089, %1088 ]
  %1114 = phi ptr [ %1099, %1105 ], [ %4, %1088 ]
  %1115 = phi i64 [ %1098, %1105 ], [ 0, %1088 ]
  %1116 = add nsw i32 %1113, 1
  store i32 %1116, ptr %1114, align 4, !tbaa !6
  %1117 = getelementptr inbounds i32, ptr %7, i64 %1115
  %1118 = load i32, ptr %1117, align 4, !tbaa !6
  %1119 = getelementptr inbounds i32, ptr %6, i64 %1115
  br label %1131

1120:                                             ; preds = %1097
  %1121 = icmp eq i32 %1100, %1103
  br i1 %1121, label %1122, label %1128

1122:                                             ; preds = %1120
  store i32 0, ptr %1099, align 4, !tbaa !6
  %1123 = getelementptr inbounds i32, ptr %8, i64 %1098
  %1124 = load i32, ptr %1123, align 4, !tbaa !6
  %1125 = getelementptr inbounds i32, ptr %6, i64 %1098
  store i32 %1124, ptr %1125, align 4, !tbaa !6
  %1126 = add nuw nsw i64 %1098, 1
  %1127 = icmp eq i64 %1126, %1083
  br i1 %1127, label %1136, label %1097, !llvm.loop !312

1128:                                             ; preds = %1093, %1120
  %1129 = sitofp i32 %1086 to double
  store double %1129, ptr %856, align 8, !tbaa !105
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1131:                                             ; preds = %1106, %1112
  %1132 = phi ptr [ %1119, %1112 ], [ %1099, %1106 ]
  %1133 = phi i32 [ %1118, %1112 ], [ 1, %1106 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1122, %1131, %1095, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %2110, label %1085, !llvm.loop !313

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !314

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !315

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !316

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1215:                                             ; preds = %1210
  %1216 = sitofp i32 %1139 to double
  store double %1216, ptr %856, align 8, !tbaa !105
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !317

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %2120, label %1138, !llvm.loop !318

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 552, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1274, align 4, !tbaa !121
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store float 1.000000e+00, ptr %1274, align 4, !tbaa !121
  br label %2120

1277:                                             ; preds = %1272
  switch i32 %1, label %1688 [
    i32 1, label %1278
    i32 0, label %1483
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %2120

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1351

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %2120

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = add nuw i32 %5, 1
  %1296 = zext i32 %13 to i64
  %1297 = icmp eq i32 %13, 1
  br label %1298

1298:                                             ; preds = %1293, %1349
  %1299 = phi i32 [ 1, %1293 ], [ %1300, %1349 ]
  %1300 = add nuw i32 %1299, 1
  br i1 %1294, label %1301, label %1349

1301:                                             ; preds = %1298
  %1302 = load i32, ptr %4, align 4, !tbaa !6
  %1303 = load i32, ptr %12, align 4, !tbaa !6
  %1304 = add nsw i32 %1303, -1
  %1305 = icmp slt i32 %1302, %1304
  br i1 %1305, label %1325, label %1306

1306:                                             ; preds = %1301
  %1307 = icmp eq i32 %1302, %1304
  br i1 %1307, label %1308, label %1341

1308:                                             ; preds = %1306
  store i32 0, ptr %4, align 4, !tbaa !6
  %1309 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1309, ptr %6, align 4, !tbaa !6
  br i1 %1297, label %1349, label %1310

1310:                                             ; preds = %1308, %1335
  %1311 = phi i64 [ %1339, %1335 ], [ 1, %1308 ]
  %1312 = getelementptr inbounds i32, ptr %4, i64 %1311
  %1313 = load i32, ptr %1312, align 4, !tbaa !6
  %1314 = getelementptr inbounds i32, ptr %12, i64 %1311
  %1315 = load i32, ptr %1314, align 4, !tbaa !6
  %1316 = add nsw i32 %1315, -1
  %1317 = icmp slt i32 %1313, %1316
  br i1 %1317, label %1318, label %1333

1318:                                             ; preds = %1310
  br i1 %1305, label %1325, label %1319

1319:                                             ; preds = %1318
  %1320 = getelementptr inbounds i32, ptr %7, i64 %1311
  %1321 = load i32, ptr %1320, align 4, !tbaa !6
  %1322 = getelementptr inbounds i32, ptr %6, i64 %1311
  %1323 = load i32, ptr %1322, align 4, !tbaa !6
  %1324 = add nsw i32 %1323, %1321
  store i32 %1324, ptr %1322, align 4, !tbaa !6
  br label %1344

1325:                                             ; preds = %1301, %1318
  %1326 = phi i32 [ %1313, %1318 ], [ %1302, %1301 ]
  %1327 = phi ptr [ %1312, %1318 ], [ %4, %1301 ]
  %1328 = phi i64 [ %1311, %1318 ], [ 0, %1301 ]
  %1329 = add nsw i32 %1326, 1
  store i32 %1329, ptr %1327, align 4, !tbaa !6
  %1330 = getelementptr inbounds i32, ptr %7, i64 %1328
  %1331 = load i32, ptr %1330, align 4, !tbaa !6
  %1332 = getelementptr inbounds i32, ptr %6, i64 %1328
  br label %1344

1333:                                             ; preds = %1310
  %1334 = icmp eq i32 %1313, %1316
  br i1 %1334, label %1335, label %1341

1335:                                             ; preds = %1333
  store i32 0, ptr %1312, align 4, !tbaa !6
  %1336 = getelementptr inbounds i32, ptr %8, i64 %1311
  %1337 = load i32, ptr %1336, align 4, !tbaa !6
  %1338 = getelementptr inbounds i32, ptr %6, i64 %1311
  store i32 %1337, ptr %1338, align 4, !tbaa !6
  %1339 = add nuw nsw i64 %1311, 1
  %1340 = icmp eq i64 %1339, %1296
  br i1 %1340, label %1349, label %1310, !llvm.loop !319

1341:                                             ; preds = %1306, %1333
  %1342 = sitofp i32 %1299 to float
  store float %1342, ptr %1274, align 4, !tbaa !121
  %1343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1344:                                             ; preds = %1319, %1325
  %1345 = phi ptr [ %1332, %1325 ], [ %1312, %1319 ]
  %1346 = phi i32 [ %1331, %1325 ], [ 1, %1319 ]
  %1347 = load i32, ptr %1345, align 4, !tbaa !6
  %1348 = add nsw i32 %1347, %1346
  store i32 %1348, ptr %1345, align 4, !tbaa !6
  br label %1349

1349:                                             ; preds = %1335, %1344, %1308, %1298
  %1350 = icmp eq i32 %1299, %5
  br i1 %1350, label %2112, label %1298, !llvm.loop !320

1351:                                             ; preds = %1284, %1481
  %1352 = phi i32 [ 1, %1284 ], [ %1430, %1481 ]
  %1353 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1354, label %1423

1354:                                             ; preds = %1351, %1413
  %1355 = phi i32 [ %1422, %1413 ], [ 0, %1351 ]
  %1356 = phi i64 [ %1364, %1413 ], [ %1289, %1351 ]
  %1357 = phi i64 [ %1421, %1413 ], [ %1288, %1351 ]
  %1358 = phi i32 [ %1419, %1413 ], [ %1353, %1351 ]
  %1359 = sub i32 %1287, %1355
  %1360 = tail call i32 @llvm.smin.i32(i32 %1359, i32 0)
  %1361 = sub i32 %1359, %1360
  %1362 = zext i32 %1361 to i64
  %1363 = add nuw nsw i64 %1362, 1
  %1364 = add nsw i64 %1356, -1
  %1365 = icmp ult i32 %1361, 31
  br i1 %1365, label %1401, label %1366

1366:                                             ; preds = %1354
  %1367 = and i64 %1363, 8589934560
  %1368 = sub i64 %1357, %1367
  br label %1369

1369:                                             ; preds = %1369, %1366
  %1370 = phi i64 [ 0, %1366 ], [ %1393, %1369 ]
  %1371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1389, %1369 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1390, %1369 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1391, %1369 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1392, %1369 ]
  %1375 = sub i64 %1357, %1370
  %1376 = getelementptr inbounds i32, ptr %11, i64 %1375
  %1377 = getelementptr inbounds i32, ptr %1376, i64 -7
  %1378 = load <8 x i32>, ptr %1377, align 4, !tbaa !6
  %1379 = shufflevector <8 x i32> %1378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1380 = getelementptr inbounds i32, ptr %1376, i64 -15
  %1381 = load <8 x i32>, ptr %1380, align 4, !tbaa !6
  %1382 = shufflevector <8 x i32> %1381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1383 = getelementptr inbounds i32, ptr %1376, i64 -23
  %1384 = load <8 x i32>, ptr %1383, align 4, !tbaa !6
  %1385 = shufflevector <8 x i32> %1384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1386 = getelementptr inbounds i32, ptr %1376, i64 -31
  %1387 = load <8 x i32>, ptr %1386, align 4, !tbaa !6
  %1388 = shufflevector <8 x i32> %1387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1389 = mul <8 x i32> %1379, %1371
  %1390 = mul <8 x i32> %1382, %1372
  %1391 = mul <8 x i32> %1385, %1373
  %1392 = mul <8 x i32> %1388, %1374
  %1393 = add nuw i64 %1370, 32
  %1394 = icmp eq i64 %1393, %1367
  br i1 %1394, label %1395, label %1369, !llvm.loop !321

1395:                                             ; preds = %1369
  %1396 = mul <8 x i32> %1390, %1389
  %1397 = mul <8 x i32> %1391, %1396
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1398)
  %1400 = icmp eq i64 %1363, %1367
  br i1 %1400, label %1413, label %1401

1401:                                             ; preds = %1354, %1395
  %1402 = phi i64 [ %1357, %1354 ], [ %1368, %1395 ]
  %1403 = phi i32 [ 1, %1354 ], [ %1399, %1395 ]
  br label %1404

1404:                                             ; preds = %1401, %1404
  %1405 = phi i64 [ %1410, %1404 ], [ %1402, %1401 ]
  %1406 = phi i32 [ %1409, %1404 ], [ %1403, %1401 ]
  %1407 = getelementptr inbounds i32, ptr %11, i64 %1405
  %1408 = load i32, ptr %1407, align 4, !tbaa !6
  %1409 = mul nsw i32 %1408, %1406
  %1410 = add nsw i64 %1405, -1
  %1411 = trunc i64 %1405 to i32
  %1412 = icmp sgt i32 %1411, 0
  br i1 %1412, label %1404, label %1413, !llvm.loop !322

1413:                                             ; preds = %1404, %1395
  %1414 = phi i32 [ %1399, %1395 ], [ %1409, %1404 ]
  %1415 = and i64 %1364, 4294967295
  %1416 = getelementptr inbounds i32, ptr %6, i64 %1415
  %1417 = load i32, ptr %1416, align 4, !tbaa !6
  %1418 = mul nsw i32 %1417, %1414
  %1419 = add nsw i32 %1418, %1358
  %1420 = icmp sgt i64 %1356, 2
  %1421 = add nsw i64 %1357, -1
  %1422 = add i32 %1355, 1
  br i1 %1420, label %1354, label %1423, !llvm.loop !323

1423:                                             ; preds = %1413, %1351
  %1424 = phi i32 [ %1353, %1351 ], [ %1419, %1413 ]
  %1425 = icmp slt i32 %1424, %5
  br i1 %1425, label %1428, label %1426

1426:                                             ; preds = %1423
  %1427 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1428:                                             ; preds = %1423
  %1429 = sitofp i32 %1352 to float
  store float %1429, ptr %1274, align 4, !tbaa !121
  %1430 = add nuw i32 %1352, 1
  br i1 %1286, label %1431, label %1481

1431:                                             ; preds = %1428
  %1432 = load i32, ptr %4, align 4, !tbaa !6
  %1433 = load i32, ptr %12, align 4, !tbaa !6
  %1434 = add nsw i32 %1433, -1
  %1435 = icmp slt i32 %1432, %1434
  br i1 %1435, label %1458, label %1436

1436:                                             ; preds = %1431
  %1437 = icmp eq i32 %1432, %1434
  br i1 %1437, label %1438, label %1474

1438:                                             ; preds = %1436
  store i32 0, ptr %4, align 4, !tbaa !6
  %1439 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1439, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1481, label %1440

1440:                                             ; preds = %1438, %1468
  %1441 = phi i64 [ %1472, %1468 ], [ 1, %1438 ]
  %1442 = getelementptr inbounds i32, ptr %4, i64 %1441
  %1443 = load i32, ptr %1442, align 4, !tbaa !6
  %1444 = getelementptr inbounds i32, ptr %12, i64 %1441
  %1445 = load i32, ptr %1444, align 4, !tbaa !6
  %1446 = add nsw i32 %1445, -1
  %1447 = icmp slt i32 %1443, %1446
  br i1 %1447, label %1448, label %1466

1448:                                             ; preds = %1440
  br i1 %1435, label %1458, label %1449

1449:                                             ; preds = %1448
  %1450 = shl i64 %1441, 32
  %1451 = add i64 %1450, -4294967296
  %1452 = ashr exact i64 %1451, 32
  %1453 = getelementptr inbounds i32, ptr %7, i64 %1452
  %1454 = load i32, ptr %1453, align 4, !tbaa !6
  %1455 = getelementptr inbounds i32, ptr %6, i64 %1441
  %1456 = load i32, ptr %1455, align 4, !tbaa !6
  %1457 = add nsw i32 %1456, %1454
  store i32 %1457, ptr %1455, align 4, !tbaa !6
  br label %1476

1458:                                             ; preds = %1431, %1448
  %1459 = phi i32 [ %1443, %1448 ], [ %1432, %1431 ]
  %1460 = phi ptr [ %1442, %1448 ], [ %4, %1431 ]
  %1461 = phi i64 [ %1441, %1448 ], [ 0, %1431 ]
  %1462 = add nsw i32 %1459, 1
  store i32 %1462, ptr %1460, align 4, !tbaa !6
  %1463 = getelementptr inbounds i32, ptr %7, i64 %1461
  %1464 = load i32, ptr %1463, align 4, !tbaa !6
  %1465 = getelementptr inbounds i32, ptr %6, i64 %1461
  br label %1476

1466:                                             ; preds = %1440
  %1467 = icmp eq i32 %1443, %1446
  br i1 %1467, label %1468, label %1474

1468:                                             ; preds = %1466
  store i32 0, ptr %1442, align 4, !tbaa !6
  %1469 = getelementptr inbounds i32, ptr %8, i64 %1441
  %1470 = load i32, ptr %1469, align 4, !tbaa !6
  %1471 = getelementptr inbounds i32, ptr %6, i64 %1441
  store i32 %1470, ptr %1471, align 4, !tbaa !6
  %1472 = add nuw nsw i64 %1441, 1
  %1473 = icmp eq i64 %1472, %1289
  br i1 %1473, label %1481, label %1440, !llvm.loop !324

1474:                                             ; preds = %1436, %1466
  %1475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1476:                                             ; preds = %1449, %1458
  %1477 = phi ptr [ %1465, %1458 ], [ %1442, %1449 ]
  %1478 = phi i32 [ %1464, %1458 ], [ 1, %1449 ]
  %1479 = load i32, ptr %1477, align 4, !tbaa !6
  %1480 = add nsw i32 %1479, %1478
  store i32 %1480, ptr %1477, align 4, !tbaa !6
  br label %1481

1481:                                             ; preds = %1468, %1476, %1438, %1428
  %1482 = icmp eq i32 %1352, %5
  br i1 %1482, label %2120, label %1351, !llvm.loop !325

1483:                                             ; preds = %1277
  %1484 = getelementptr inbounds i32, ptr %3, i64 %19
  %1485 = load i32, ptr %1484, align 4, !tbaa !6
  %1486 = icmp eq i32 %1485, 0
  %1487 = icmp sgt i32 %5, 0
  br i1 %1486, label %1497, label %1488

1488:                                             ; preds = %1483
  br i1 %1487, label %1489, label %2120

1489:                                             ; preds = %1488
  %1490 = icmp sgt i32 %13, 1
  %1491 = icmp sgt i32 %13, 0
  %1492 = add i32 %13, -2
  %1493 = zext i32 %1492 to i64
  %1494 = zext i32 %13 to i64
  %1495 = add nuw i32 %5, 1
  %1496 = icmp eq i32 %13, 1
  br label %1556

1497:                                             ; preds = %1483
  br i1 %1487, label %1498, label %2120

1498:                                             ; preds = %1497
  %1499 = icmp sgt i32 %13, 0
  %1500 = add nuw i32 %5, 1
  %1501 = zext i32 %13 to i64
  %1502 = icmp eq i32 %13, 1
  br label %1503

1503:                                             ; preds = %1498, %1554
  %1504 = phi i32 [ 1, %1498 ], [ %1505, %1554 ]
  %1505 = add nuw i32 %1504, 1
  br i1 %1499, label %1506, label %1554

1506:                                             ; preds = %1503
  %1507 = load i32, ptr %4, align 4, !tbaa !6
  %1508 = load i32, ptr %12, align 4, !tbaa !6
  %1509 = add nsw i32 %1508, -1
  %1510 = icmp slt i32 %1507, %1509
  br i1 %1510, label %1530, label %1511

1511:                                             ; preds = %1506
  %1512 = icmp eq i32 %1507, %1509
  br i1 %1512, label %1513, label %1546

1513:                                             ; preds = %1511
  store i32 0, ptr %4, align 4, !tbaa !6
  %1514 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1514, ptr %6, align 4, !tbaa !6
  br i1 %1502, label %1554, label %1515

1515:                                             ; preds = %1513, %1540
  %1516 = phi i64 [ %1544, %1540 ], [ 1, %1513 ]
  %1517 = getelementptr inbounds i32, ptr %4, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !6
  %1519 = getelementptr inbounds i32, ptr %12, i64 %1516
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = add nsw i32 %1520, -1
  %1522 = icmp slt i32 %1518, %1521
  br i1 %1522, label %1523, label %1538

1523:                                             ; preds = %1515
  br i1 %1510, label %1530, label %1524

1524:                                             ; preds = %1523
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1516
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1516
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, %1526
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  br label %1549

1530:                                             ; preds = %1506, %1523
  %1531 = phi i32 [ %1518, %1523 ], [ %1507, %1506 ]
  %1532 = phi ptr [ %1517, %1523 ], [ %4, %1506 ]
  %1533 = phi i64 [ %1516, %1523 ], [ 0, %1506 ]
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, ptr %1532, align 4, !tbaa !6
  %1535 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1536 = load i32, ptr %1535, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %6, i64 %1533
  br label %1549

1538:                                             ; preds = %1515
  %1539 = icmp eq i32 %1518, %1521
  br i1 %1539, label %1540, label %1546

1540:                                             ; preds = %1538
  store i32 0, ptr %1517, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %8, i64 %1516
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1516
  store i32 %1542, ptr %1543, align 4, !tbaa !6
  %1544 = add nuw nsw i64 %1516, 1
  %1545 = icmp eq i64 %1544, %1501
  br i1 %1545, label %1554, label %1515, !llvm.loop !326

1546:                                             ; preds = %1511, %1538
  %1547 = sitofp i32 %1504 to float
  store float %1547, ptr %1274, align 4, !tbaa !121
  %1548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1549:                                             ; preds = %1524, %1530
  %1550 = phi ptr [ %1537, %1530 ], [ %1517, %1524 ]
  %1551 = phi i32 [ %1536, %1530 ], [ 1, %1524 ]
  %1552 = load i32, ptr %1550, align 4, !tbaa !6
  %1553 = add nsw i32 %1552, %1551
  store i32 %1553, ptr %1550, align 4, !tbaa !6
  br label %1554

1554:                                             ; preds = %1540, %1549, %1513, %1503
  %1555 = icmp eq i32 %1504, %5
  br i1 %1555, label %2114, label %1503, !llvm.loop !327

1556:                                             ; preds = %1489, %1686
  %1557 = phi i32 [ 1, %1489 ], [ %1635, %1686 ]
  %1558 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1490, label %1559, label %1628

1559:                                             ; preds = %1556, %1618
  %1560 = phi i32 [ %1627, %1618 ], [ 0, %1556 ]
  %1561 = phi i64 [ %1569, %1618 ], [ %1494, %1556 ]
  %1562 = phi i64 [ %1626, %1618 ], [ %1493, %1556 ]
  %1563 = phi i32 [ %1624, %1618 ], [ %1558, %1556 ]
  %1564 = sub i32 %1492, %1560
  %1565 = tail call i32 @llvm.smin.i32(i32 %1564, i32 0)
  %1566 = sub i32 %1564, %1565
  %1567 = zext i32 %1566 to i64
  %1568 = add nuw nsw i64 %1567, 1
  %1569 = add nsw i64 %1561, -1
  %1570 = icmp ult i32 %1566, 31
  br i1 %1570, label %1606, label %1571

1571:                                             ; preds = %1559
  %1572 = and i64 %1568, 8589934560
  %1573 = sub i64 %1562, %1572
  br label %1574

1574:                                             ; preds = %1574, %1571
  %1575 = phi i64 [ 0, %1571 ], [ %1598, %1574 ]
  %1576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1594, %1574 ]
  %1577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1595, %1574 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1596, %1574 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1597, %1574 ]
  %1580 = sub i64 %1562, %1575
  %1581 = getelementptr inbounds i32, ptr %11, i64 %1580
  %1582 = getelementptr inbounds i32, ptr %1581, i64 -7
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !6
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = getelementptr inbounds i32, ptr %1581, i64 -15
  %1586 = load <8 x i32>, ptr %1585, align 4, !tbaa !6
  %1587 = shufflevector <8 x i32> %1586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1588 = getelementptr inbounds i32, ptr %1581, i64 -23
  %1589 = load <8 x i32>, ptr %1588, align 4, !tbaa !6
  %1590 = shufflevector <8 x i32> %1589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1591 = getelementptr inbounds i32, ptr %1581, i64 -31
  %1592 = load <8 x i32>, ptr %1591, align 4, !tbaa !6
  %1593 = shufflevector <8 x i32> %1592, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1594 = mul <8 x i32> %1584, %1576
  %1595 = mul <8 x i32> %1587, %1577
  %1596 = mul <8 x i32> %1590, %1578
  %1597 = mul <8 x i32> %1593, %1579
  %1598 = add nuw i64 %1575, 32
  %1599 = icmp eq i64 %1598, %1572
  br i1 %1599, label %1600, label %1574, !llvm.loop !328

1600:                                             ; preds = %1574
  %1601 = mul <8 x i32> %1595, %1594
  %1602 = mul <8 x i32> %1596, %1601
  %1603 = mul <8 x i32> %1597, %1602
  %1604 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1603)
  %1605 = icmp eq i64 %1568, %1572
  br i1 %1605, label %1618, label %1606

1606:                                             ; preds = %1559, %1600
  %1607 = phi i64 [ %1562, %1559 ], [ %1573, %1600 ]
  %1608 = phi i32 [ 1, %1559 ], [ %1604, %1600 ]
  br label %1609

1609:                                             ; preds = %1606, %1609
  %1610 = phi i64 [ %1615, %1609 ], [ %1607, %1606 ]
  %1611 = phi i32 [ %1614, %1609 ], [ %1608, %1606 ]
  %1612 = getelementptr inbounds i32, ptr %11, i64 %1610
  %1613 = load i32, ptr %1612, align 4, !tbaa !6
  %1614 = mul nsw i32 %1613, %1611
  %1615 = add nsw i64 %1610, -1
  %1616 = trunc i64 %1610 to i32
  %1617 = icmp sgt i32 %1616, 0
  br i1 %1617, label %1609, label %1618, !llvm.loop !329

1618:                                             ; preds = %1609, %1600
  %1619 = phi i32 [ %1604, %1600 ], [ %1614, %1609 ]
  %1620 = and i64 %1569, 4294967295
  %1621 = getelementptr inbounds i32, ptr %6, i64 %1620
  %1622 = load i32, ptr %1621, align 4, !tbaa !6
  %1623 = mul nsw i32 %1622, %1619
  %1624 = add nsw i32 %1623, %1563
  %1625 = icmp sgt i64 %1561, 2
  %1626 = add nsw i64 %1562, -1
  %1627 = add i32 %1560, 1
  br i1 %1625, label %1559, label %1628, !llvm.loop !330

1628:                                             ; preds = %1618, %1556
  %1629 = phi i32 [ %1558, %1556 ], [ %1624, %1618 ]
  %1630 = icmp slt i32 %1629, %5
  br i1 %1630, label %1633, label %1631

1631:                                             ; preds = %1628
  %1632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1633:                                             ; preds = %1628
  %1634 = sitofp i32 %1557 to float
  store float %1634, ptr %1274, align 4, !tbaa !121
  %1635 = add nuw i32 %1557, 1
  br i1 %1491, label %1636, label %1686

1636:                                             ; preds = %1633
  %1637 = load i32, ptr %4, align 4, !tbaa !6
  %1638 = load i32, ptr %12, align 4, !tbaa !6
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1637, %1639
  br i1 %1640, label %1663, label %1641

1641:                                             ; preds = %1636
  %1642 = icmp eq i32 %1637, %1639
  br i1 %1642, label %1643, label %1679

1643:                                             ; preds = %1641
  store i32 0, ptr %4, align 4, !tbaa !6
  %1644 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1644, ptr %6, align 4, !tbaa !6
  br i1 %1496, label %1686, label %1645

1645:                                             ; preds = %1643, %1673
  %1646 = phi i64 [ %1677, %1673 ], [ 1, %1643 ]
  %1647 = getelementptr inbounds i32, ptr %4, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !6
  %1649 = getelementptr inbounds i32, ptr %12, i64 %1646
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = add nsw i32 %1650, -1
  %1652 = icmp slt i32 %1648, %1651
  br i1 %1652, label %1653, label %1671

1653:                                             ; preds = %1645
  br i1 %1640, label %1663, label %1654

1654:                                             ; preds = %1653
  %1655 = shl i64 %1646, 32
  %1656 = add i64 %1655, -4294967296
  %1657 = ashr exact i64 %1656, 32
  %1658 = getelementptr inbounds i32, ptr %7, i64 %1657
  %1659 = load i32, ptr %1658, align 4, !tbaa !6
  %1660 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = add nsw i32 %1661, %1659
  store i32 %1662, ptr %1660, align 4, !tbaa !6
  br label %1681

1663:                                             ; preds = %1636, %1653
  %1664 = phi i32 [ %1648, %1653 ], [ %1637, %1636 ]
  %1665 = phi ptr [ %1647, %1653 ], [ %4, %1636 ]
  %1666 = phi i64 [ %1646, %1653 ], [ 0, %1636 ]
  %1667 = add nsw i32 %1664, 1
  store i32 %1667, ptr %1665, align 4, !tbaa !6
  %1668 = getelementptr inbounds i32, ptr %7, i64 %1666
  %1669 = load i32, ptr %1668, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %6, i64 %1666
  br label %1681

1671:                                             ; preds = %1645
  %1672 = icmp eq i32 %1648, %1651
  br i1 %1672, label %1673, label %1679

1673:                                             ; preds = %1671
  store i32 0, ptr %1647, align 4, !tbaa !6
  %1674 = getelementptr inbounds i32, ptr %8, i64 %1646
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %6, i64 %1646
  store i32 %1675, ptr %1676, align 4, !tbaa !6
  %1677 = add nuw nsw i64 %1646, 1
  %1678 = icmp eq i64 %1677, %1494
  br i1 %1678, label %1686, label %1645, !llvm.loop !331

1679:                                             ; preds = %1641, %1671
  %1680 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1681:                                             ; preds = %1654, %1663
  %1682 = phi ptr [ %1670, %1663 ], [ %1647, %1654 ]
  %1683 = phi i32 [ %1669, %1663 ], [ 1, %1654 ]
  %1684 = load i32, ptr %1682, align 4, !tbaa !6
  %1685 = add nsw i32 %1684, %1683
  store i32 %1685, ptr %1682, align 4, !tbaa !6
  br label %1686

1686:                                             ; preds = %1673, %1681, %1643, %1633
  %1687 = icmp eq i32 %1557, %5
  br i1 %1687, label %2120, label %1556, !llvm.loop !332

1688:                                             ; preds = %1277
  %1689 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 556, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

1690:                                             ; preds = %18
  %1691 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1692 = load ptr, ptr %1691, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1692, align 8, !tbaa !105
  %1693 = icmp eq i32 %13, 0
  br i1 %1693, label %1694, label %1695

1694:                                             ; preds = %1690
  store double 1.000000e+00, ptr %1692, align 8, !tbaa !105
  br label %2120

1695:                                             ; preds = %1690
  switch i32 %1, label %2106 [
    i32 1, label %1696
    i32 0, label %1901
  ]

1696:                                             ; preds = %1695
  %1697 = getelementptr inbounds i32, ptr %3, i64 %19
  %1698 = load i32, ptr %1697, align 4, !tbaa !6
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp sgt i32 %5, 0
  br i1 %1699, label %1710, label %1701

1701:                                             ; preds = %1696
  br i1 %1700, label %1702, label %2120

1702:                                             ; preds = %1701
  %1703 = icmp sgt i32 %13, 1
  %1704 = icmp sgt i32 %13, 0
  %1705 = add i32 %13, -2
  %1706 = zext i32 %1705 to i64
  %1707 = zext i32 %13 to i64
  %1708 = add nuw i32 %5, 1
  %1709 = icmp eq i32 %13, 1
  br label %1769

1710:                                             ; preds = %1696
  br i1 %1700, label %1711, label %2120

1711:                                             ; preds = %1710
  %1712 = icmp sgt i32 %13, 0
  %1713 = add nuw i32 %5, 1
  %1714 = zext i32 %13 to i64
  %1715 = icmp eq i32 %13, 1
  br label %1716

1716:                                             ; preds = %1711, %1767
  %1717 = phi i32 [ 1, %1711 ], [ %1718, %1767 ]
  %1718 = add nuw i32 %1717, 1
  br i1 %1712, label %1719, label %1767

1719:                                             ; preds = %1716
  %1720 = load i32, ptr %4, align 4, !tbaa !6
  %1721 = load i32, ptr %12, align 4, !tbaa !6
  %1722 = add nsw i32 %1721, -1
  %1723 = icmp slt i32 %1720, %1722
  br i1 %1723, label %1743, label %1724

1724:                                             ; preds = %1719
  %1725 = icmp eq i32 %1720, %1722
  br i1 %1725, label %1726, label %1759

1726:                                             ; preds = %1724
  store i32 0, ptr %4, align 4, !tbaa !6
  %1727 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1727, ptr %6, align 4, !tbaa !6
  br i1 %1715, label %1767, label %1728

1728:                                             ; preds = %1726, %1753
  %1729 = phi i64 [ %1757, %1753 ], [ 1, %1726 ]
  %1730 = getelementptr inbounds i32, ptr %4, i64 %1729
  %1731 = load i32, ptr %1730, align 4, !tbaa !6
  %1732 = getelementptr inbounds i32, ptr %12, i64 %1729
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = add nsw i32 %1733, -1
  %1735 = icmp slt i32 %1731, %1734
  br i1 %1735, label %1736, label %1751

1736:                                             ; preds = %1728
  br i1 %1723, label %1743, label %1737

1737:                                             ; preds = %1736
  %1738 = getelementptr inbounds i32, ptr %7, i64 %1729
  %1739 = load i32, ptr %1738, align 4, !tbaa !6
  %1740 = getelementptr inbounds i32, ptr %6, i64 %1729
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = add nsw i32 %1741, %1739
  store i32 %1742, ptr %1740, align 4, !tbaa !6
  br label %1762

1743:                                             ; preds = %1719, %1736
  %1744 = phi i32 [ %1731, %1736 ], [ %1720, %1719 ]
  %1745 = phi ptr [ %1730, %1736 ], [ %4, %1719 ]
  %1746 = phi i64 [ %1729, %1736 ], [ 0, %1719 ]
  %1747 = add nsw i32 %1744, 1
  store i32 %1747, ptr %1745, align 4, !tbaa !6
  %1748 = getelementptr inbounds i32, ptr %7, i64 %1746
  %1749 = load i32, ptr %1748, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %6, i64 %1746
  br label %1762

1751:                                             ; preds = %1728
  %1752 = icmp eq i32 %1731, %1734
  br i1 %1752, label %1753, label %1759

1753:                                             ; preds = %1751
  store i32 0, ptr %1730, align 4, !tbaa !6
  %1754 = getelementptr inbounds i32, ptr %8, i64 %1729
  %1755 = load i32, ptr %1754, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %6, i64 %1729
  store i32 %1755, ptr %1756, align 4, !tbaa !6
  %1757 = add nuw nsw i64 %1729, 1
  %1758 = icmp eq i64 %1757, %1714
  br i1 %1758, label %1767, label %1728, !llvm.loop !333

1759:                                             ; preds = %1724, %1751
  %1760 = sitofp i32 %1717 to double
  store double %1760, ptr %1692, align 8, !tbaa !105
  %1761 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1762:                                             ; preds = %1737, %1743
  %1763 = phi ptr [ %1750, %1743 ], [ %1730, %1737 ]
  %1764 = phi i32 [ %1749, %1743 ], [ 1, %1737 ]
  %1765 = load i32, ptr %1763, align 4, !tbaa !6
  %1766 = add nsw i32 %1765, %1764
  store i32 %1766, ptr %1763, align 4, !tbaa !6
  br label %1767

1767:                                             ; preds = %1753, %1762, %1726, %1716
  %1768 = icmp eq i32 %1717, %5
  br i1 %1768, label %2116, label %1716, !llvm.loop !334

1769:                                             ; preds = %1702, %1899
  %1770 = phi i32 [ 1, %1702 ], [ %1848, %1899 ]
  %1771 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1703, label %1772, label %1841

1772:                                             ; preds = %1769, %1831
  %1773 = phi i32 [ %1840, %1831 ], [ 0, %1769 ]
  %1774 = phi i64 [ %1782, %1831 ], [ %1707, %1769 ]
  %1775 = phi i64 [ %1839, %1831 ], [ %1706, %1769 ]
  %1776 = phi i32 [ %1837, %1831 ], [ %1771, %1769 ]
  %1777 = sub i32 %1705, %1773
  %1778 = tail call i32 @llvm.smin.i32(i32 %1777, i32 0)
  %1779 = sub i32 %1777, %1778
  %1780 = zext i32 %1779 to i64
  %1781 = add nuw nsw i64 %1780, 1
  %1782 = add nsw i64 %1774, -1
  %1783 = icmp ult i32 %1779, 31
  br i1 %1783, label %1819, label %1784

1784:                                             ; preds = %1772
  %1785 = and i64 %1781, 8589934560
  %1786 = sub i64 %1775, %1785
  br label %1787

1787:                                             ; preds = %1787, %1784
  %1788 = phi i64 [ 0, %1784 ], [ %1811, %1787 ]
  %1789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1807, %1787 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1808, %1787 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1809, %1787 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1810, %1787 ]
  %1793 = sub i64 %1775, %1788
  %1794 = getelementptr inbounds i32, ptr %11, i64 %1793
  %1795 = getelementptr inbounds i32, ptr %1794, i64 -7
  %1796 = load <8 x i32>, ptr %1795, align 4, !tbaa !6
  %1797 = shufflevector <8 x i32> %1796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1798 = getelementptr inbounds i32, ptr %1794, i64 -15
  %1799 = load <8 x i32>, ptr %1798, align 4, !tbaa !6
  %1800 = shufflevector <8 x i32> %1799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1801 = getelementptr inbounds i32, ptr %1794, i64 -23
  %1802 = load <8 x i32>, ptr %1801, align 4, !tbaa !6
  %1803 = shufflevector <8 x i32> %1802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1804 = getelementptr inbounds i32, ptr %1794, i64 -31
  %1805 = load <8 x i32>, ptr %1804, align 4, !tbaa !6
  %1806 = shufflevector <8 x i32> %1805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1807 = mul <8 x i32> %1797, %1789
  %1808 = mul <8 x i32> %1800, %1790
  %1809 = mul <8 x i32> %1803, %1791
  %1810 = mul <8 x i32> %1806, %1792
  %1811 = add nuw i64 %1788, 32
  %1812 = icmp eq i64 %1811, %1785
  br i1 %1812, label %1813, label %1787, !llvm.loop !335

1813:                                             ; preds = %1787
  %1814 = mul <8 x i32> %1808, %1807
  %1815 = mul <8 x i32> %1809, %1814
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1816)
  %1818 = icmp eq i64 %1781, %1785
  br i1 %1818, label %1831, label %1819

1819:                                             ; preds = %1772, %1813
  %1820 = phi i64 [ %1775, %1772 ], [ %1786, %1813 ]
  %1821 = phi i32 [ 1, %1772 ], [ %1817, %1813 ]
  br label %1822

1822:                                             ; preds = %1819, %1822
  %1823 = phi i64 [ %1828, %1822 ], [ %1820, %1819 ]
  %1824 = phi i32 [ %1827, %1822 ], [ %1821, %1819 ]
  %1825 = getelementptr inbounds i32, ptr %11, i64 %1823
  %1826 = load i32, ptr %1825, align 4, !tbaa !6
  %1827 = mul nsw i32 %1826, %1824
  %1828 = add nsw i64 %1823, -1
  %1829 = trunc i64 %1823 to i32
  %1830 = icmp sgt i32 %1829, 0
  br i1 %1830, label %1822, label %1831, !llvm.loop !336

1831:                                             ; preds = %1822, %1813
  %1832 = phi i32 [ %1817, %1813 ], [ %1827, %1822 ]
  %1833 = and i64 %1782, 4294967295
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1833
  %1835 = load i32, ptr %1834, align 4, !tbaa !6
  %1836 = mul nsw i32 %1835, %1832
  %1837 = add nsw i32 %1836, %1776
  %1838 = icmp sgt i64 %1774, 2
  %1839 = add nsw i64 %1775, -1
  %1840 = add i32 %1773, 1
  br i1 %1838, label %1772, label %1841, !llvm.loop !337

1841:                                             ; preds = %1831, %1769
  %1842 = phi i32 [ %1771, %1769 ], [ %1837, %1831 ]
  %1843 = icmp slt i32 %1842, %5
  br i1 %1843, label %1846, label %1844

1844:                                             ; preds = %1841
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1846:                                             ; preds = %1841
  %1847 = sitofp i32 %1770 to double
  store double %1847, ptr %1692, align 8, !tbaa !105
  %1848 = add nuw i32 %1770, 1
  br i1 %1704, label %1849, label %1899

1849:                                             ; preds = %1846
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1709, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1707
  br i1 %1891, label %1899, label %1858, !llvm.loop !338

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1846
  %1900 = icmp eq i32 %1770, %5
  br i1 %1900, label %2120, label %1769, !llvm.loop !339

1901:                                             ; preds = %1695
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %2120

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1974

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %2120

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1972
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1972 ]
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1972

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1972, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1967

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1967

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1972, label %1933, !llvm.loop !340

1964:                                             ; preds = %1929, %1956
  %1965 = sitofp i32 %1922 to double
  store double %1965, ptr %1692, align 8, !tbaa !105
  %1966 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1967:                                             ; preds = %1942, %1948
  %1968 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1969 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1970 = load i32, ptr %1968, align 4, !tbaa !6
  %1971 = add nsw i32 %1970, %1969
  store i32 %1971, ptr %1968, align 4, !tbaa !6
  br label %1972

1972:                                             ; preds = %1958, %1967, %1931, %1921
  %1973 = icmp eq i32 %1922, %5
  br i1 %1973, label %2118, label %1921, !llvm.loop !341

1974:                                             ; preds = %1907, %2104
  %1975 = phi i32 [ 1, %1907 ], [ %2053, %2104 ]
  %1976 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1977, label %2046

1977:                                             ; preds = %1974, %2036
  %1978 = phi i32 [ %2045, %2036 ], [ 0, %1974 ]
  %1979 = phi i64 [ %1987, %2036 ], [ %1912, %1974 ]
  %1980 = phi i64 [ %2044, %2036 ], [ %1911, %1974 ]
  %1981 = phi i32 [ %2042, %2036 ], [ %1976, %1974 ]
  %1982 = sub i32 %1910, %1978
  %1983 = tail call i32 @llvm.smin.i32(i32 %1982, i32 0)
  %1984 = sub i32 %1982, %1983
  %1985 = zext i32 %1984 to i64
  %1986 = add nuw nsw i64 %1985, 1
  %1987 = add nsw i64 %1979, -1
  %1988 = icmp ult i32 %1984, 31
  br i1 %1988, label %2024, label %1989

1989:                                             ; preds = %1977
  %1990 = and i64 %1986, 8589934560
  %1991 = sub i64 %1980, %1990
  br label %1992

1992:                                             ; preds = %1992, %1989
  %1993 = phi i64 [ 0, %1989 ], [ %2016, %1992 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2012, %1992 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2013, %1992 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2014, %1992 ]
  %1997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2015, %1992 ]
  %1998 = sub i64 %1980, %1993
  %1999 = getelementptr inbounds i32, ptr %11, i64 %1998
  %2000 = getelementptr inbounds i32, ptr %1999, i64 -7
  %2001 = load <8 x i32>, ptr %2000, align 4, !tbaa !6
  %2002 = shufflevector <8 x i32> %2001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2003 = getelementptr inbounds i32, ptr %1999, i64 -15
  %2004 = load <8 x i32>, ptr %2003, align 4, !tbaa !6
  %2005 = shufflevector <8 x i32> %2004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2006 = getelementptr inbounds i32, ptr %1999, i64 -23
  %2007 = load <8 x i32>, ptr %2006, align 4, !tbaa !6
  %2008 = shufflevector <8 x i32> %2007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2009 = getelementptr inbounds i32, ptr %1999, i64 -31
  %2010 = load <8 x i32>, ptr %2009, align 4, !tbaa !6
  %2011 = shufflevector <8 x i32> %2010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2012 = mul <8 x i32> %2002, %1994
  %2013 = mul <8 x i32> %2005, %1995
  %2014 = mul <8 x i32> %2008, %1996
  %2015 = mul <8 x i32> %2011, %1997
  %2016 = add nuw i64 %1993, 32
  %2017 = icmp eq i64 %2016, %1990
  br i1 %2017, label %2018, label %1992, !llvm.loop !342

2018:                                             ; preds = %1992
  %2019 = mul <8 x i32> %2013, %2012
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = mul <8 x i32> %2015, %2020
  %2022 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2021)
  %2023 = icmp eq i64 %1986, %1990
  br i1 %2023, label %2036, label %2024

2024:                                             ; preds = %1977, %2018
  %2025 = phi i64 [ %1980, %1977 ], [ %1991, %2018 ]
  %2026 = phi i32 [ 1, %1977 ], [ %2022, %2018 ]
  br label %2027

2027:                                             ; preds = %2024, %2027
  %2028 = phi i64 [ %2033, %2027 ], [ %2025, %2024 ]
  %2029 = phi i32 [ %2032, %2027 ], [ %2026, %2024 ]
  %2030 = getelementptr inbounds i32, ptr %11, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !6
  %2032 = mul nsw i32 %2031, %2029
  %2033 = add nsw i64 %2028, -1
  %2034 = trunc i64 %2028 to i32
  %2035 = icmp sgt i32 %2034, 0
  br i1 %2035, label %2027, label %2036, !llvm.loop !343

2036:                                             ; preds = %2027, %2018
  %2037 = phi i32 [ %2022, %2018 ], [ %2032, %2027 ]
  %2038 = and i64 %1987, 4294967295
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2038
  %2040 = load i32, ptr %2039, align 4, !tbaa !6
  %2041 = mul nsw i32 %2040, %2037
  %2042 = add nsw i32 %2041, %1981
  %2043 = icmp sgt i64 %1979, 2
  %2044 = add nsw i64 %1980, -1
  %2045 = add i32 %1978, 1
  br i1 %2043, label %1977, label %2046, !llvm.loop !344

2046:                                             ; preds = %2036, %1974
  %2047 = phi i32 [ %1976, %1974 ], [ %2042, %2036 ]
  %2048 = icmp slt i32 %2047, %5
  br i1 %2048, label %2051, label %2049

2049:                                             ; preds = %2046
  %2050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

2051:                                             ; preds = %2046
  %2052 = sitofp i32 %1975 to double
  store double %2052, ptr %1692, align 8, !tbaa !105
  %2053 = add nuw i32 %1975, 1
  br i1 %1909, label %2054, label %2104

2054:                                             ; preds = %2051
  %2055 = load i32, ptr %4, align 4, !tbaa !6
  %2056 = load i32, ptr %12, align 4, !tbaa !6
  %2057 = add nsw i32 %2056, -1
  %2058 = icmp slt i32 %2055, %2057
  br i1 %2058, label %2081, label %2059

2059:                                             ; preds = %2054
  %2060 = icmp eq i32 %2055, %2057
  br i1 %2060, label %2061, label %2097

2061:                                             ; preds = %2059
  store i32 0, ptr %4, align 4, !tbaa !6
  %2062 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2062, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2104, label %2063

2063:                                             ; preds = %2061, %2091
  %2064 = phi i64 [ %2095, %2091 ], [ 1, %2061 ]
  %2065 = getelementptr inbounds i32, ptr %4, i64 %2064
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = getelementptr inbounds i32, ptr %12, i64 %2064
  %2068 = load i32, ptr %2067, align 4, !tbaa !6
  %2069 = add nsw i32 %2068, -1
  %2070 = icmp slt i32 %2066, %2069
  br i1 %2070, label %2071, label %2089

2071:                                             ; preds = %2063
  br i1 %2058, label %2081, label %2072

2072:                                             ; preds = %2071
  %2073 = shl i64 %2064, 32
  %2074 = add i64 %2073, -4294967296
  %2075 = ashr exact i64 %2074, 32
  %2076 = getelementptr inbounds i32, ptr %7, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = getelementptr inbounds i32, ptr %6, i64 %2064
  %2079 = load i32, ptr %2078, align 4, !tbaa !6
  %2080 = add nsw i32 %2079, %2077
  store i32 %2080, ptr %2078, align 4, !tbaa !6
  br label %2099

2081:                                             ; preds = %2054, %2071
  %2082 = phi i32 [ %2066, %2071 ], [ %2055, %2054 ]
  %2083 = phi ptr [ %2065, %2071 ], [ %4, %2054 ]
  %2084 = phi i64 [ %2064, %2071 ], [ 0, %2054 ]
  %2085 = add nsw i32 %2082, 1
  store i32 %2085, ptr %2083, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %7, i64 %2084
  %2087 = load i32, ptr %2086, align 4, !tbaa !6
  %2088 = getelementptr inbounds i32, ptr %6, i64 %2084
  br label %2099

2089:                                             ; preds = %2063
  %2090 = icmp eq i32 %2066, %2069
  br i1 %2090, label %2091, label %2097

2091:                                             ; preds = %2089
  store i32 0, ptr %2065, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %8, i64 %2064
  %2093 = load i32, ptr %2092, align 4, !tbaa !6
  %2094 = getelementptr inbounds i32, ptr %6, i64 %2064
  store i32 %2093, ptr %2094, align 4, !tbaa !6
  %2095 = add nuw nsw i64 %2064, 1
  %2096 = icmp eq i64 %2095, %1912
  br i1 %2096, label %2104, label %2063, !llvm.loop !345

2097:                                             ; preds = %2059, %2089
  %2098 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

2099:                                             ; preds = %2072, %2081
  %2100 = phi ptr [ %2088, %2081 ], [ %2065, %2072 ]
  %2101 = phi i32 [ %2087, %2081 ], [ 1, %2072 ]
  %2102 = load i32, ptr %2100, align 4, !tbaa !6
  %2103 = add nsw i32 %2102, %2101
  store i32 %2103, ptr %2100, align 4, !tbaa !6
  br label %2104

2104:                                             ; preds = %2091, %2099, %2061, %2051
  %2105 = icmp eq i32 %1975, %5
  br i1 %2105, label %2120, label %1974, !llvm.loop !346

2106:                                             ; preds = %1695
  %2107 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 561, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

2108:                                             ; preds = %931
  %2109 = sitofp i32 %881 to double
  store double %2109, ptr %856, align 8, !tbaa !105
  br label %2120

2110:                                             ; preds = %1136
  %2111 = sitofp i32 %1086 to double
  store double %2111, ptr %856, align 8, !tbaa !105
  br label %2120

2112:                                             ; preds = %1349
  %2113 = sitofp i32 %1299 to float
  store float %2113, ptr %1274, align 4, !tbaa !121
  br label %2120

2114:                                             ; preds = %1554
  %2115 = sitofp i32 %1504 to float
  store float %2115, ptr %1274, align 4, !tbaa !121
  br label %2120

2116:                                             ; preds = %1767
  %2117 = sitofp i32 %1717 to double
  store double %2117, ptr %1692, align 8, !tbaa !105
  br label %2120

2118:                                             ; preds = %1972
  %2119 = sitofp i32 %1922 to double
  store double %2119, ptr %1692, align 8, !tbaa !105
  br label %2120

2120:                                             ; preds = %2104, %1899, %1686, %1481, %1268, %1063, %850, %719, %647, %516, %436, %304, %231, %99, %1906, %1915, %2118, %1701, %1710, %2116, %1488, %1497, %2114, %1283, %1292, %2112, %1070, %1079, %2110, %865, %874, %2108, %654, %663, %451, %460, %238, %247, %33, %42, %1694, %2106, %1276, %1688, %858, %1270, %444, %852, %26, %438, %18, %1759, %1844, %1892, %1964, %2049, %2097, %1341, %1426, %1474, %1546, %1631, %1679, %923, %1008, %1056, %1128, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %2121 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1128 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %923 ], [ -1, %1679 ], [ -1, %1631 ], [ -1, %1546 ], [ -1, %1474 ], [ -1, %1426 ], [ -1, %1341 ], [ -1, %2097 ], [ -1, %2049 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1844 ], [ -1, %1759 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1688 ], [ 1, %1276 ], [ 1, %2106 ], [ 1, %1694 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ %877, %2108 ], [ 1, %874 ], [ 1, %865 ], [ %1082, %2110 ], [ 1, %1079 ], [ 1, %1070 ], [ %1295, %2112 ], [ 1, %1292 ], [ 1, %1283 ], [ %1500, %2114 ], [ 1, %1497 ], [ 1, %1488 ], [ %1713, %2116 ], [ 1, %1710 ], [ 1, %1701 ], [ %1918, %2118 ], [ 1, %1915 ], [ 1, %1906 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %872, %1063 ], [ %1077, %1268 ], [ %1290, %1481 ], [ %1495, %1686 ], [ %1708, %1899 ], [ %1913, %2104 ]
  ret i32 %2121
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %2120 [
    i32 101, label %22
    i32 102, label %440
    i32 107, label %854
    i32 108, label %1272
    i32 109, label %1690
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %2120

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %2120

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %2120

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !347

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %2120, label %48, !llvm.loop !348

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !349

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !350

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !351

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !352

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %2120, label %101, !llvm.loop !353

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %2120

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %2120

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !354

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %2120, label %253, !llvm.loop !355

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !356

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !357

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !358

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !359

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %2120, label %306, !llvm.loop !360

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 765, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %2120

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %2120

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %2120

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !361

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %2120, label %466, !llvm.loop !362

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !363

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !364

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !365

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !366

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %2120, label %518, !llvm.loop !367

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %2120

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %2120

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !368

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %2120, label %669, !llvm.loop !369

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !370

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !371

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !372

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !373

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %2120, label %721, !llvm.loop !374

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 768, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store double 0.000000e+00, ptr %856, align 8, !tbaa !105
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store double 1.000000e+00, ptr %856, align 8, !tbaa !105
  br label %2120

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %2120

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %2120

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %882, %931 ]
  %882 = add nuw i32 %881, 1
  br i1 %876, label %883, label %931

883:                                              ; preds = %880
  %884 = load i32, ptr %4, align 4, !tbaa !6
  %885 = load i32, ptr %12, align 4, !tbaa !6
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %884, %886
  br i1 %887, label %907, label %888

888:                                              ; preds = %883
  %889 = icmp eq i32 %884, %886
  br i1 %889, label %890, label %923

890:                                              ; preds = %888
  store i32 0, ptr %4, align 4, !tbaa !6
  %891 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %891, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %892

892:                                              ; preds = %890, %917
  %893 = phi i64 [ %921, %917 ], [ 1, %890 ]
  %894 = getelementptr inbounds i32, ptr %4, i64 %893
  %895 = load i32, ptr %894, align 4, !tbaa !6
  %896 = getelementptr inbounds i32, ptr %12, i64 %893
  %897 = load i32, ptr %896, align 4, !tbaa !6
  %898 = add nsw i32 %897, -1
  %899 = icmp slt i32 %895, %898
  br i1 %899, label %900, label %915

900:                                              ; preds = %892
  br i1 %887, label %907, label %901

901:                                              ; preds = %900
  %902 = getelementptr inbounds i32, ptr %7, i64 %893
  %903 = load i32, ptr %902, align 4, !tbaa !6
  %904 = getelementptr inbounds i32, ptr %6, i64 %893
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = add nsw i32 %905, %903
  store i32 %906, ptr %904, align 4, !tbaa !6
  br label %926

907:                                              ; preds = %883, %900
  %908 = phi i32 [ %895, %900 ], [ %884, %883 ]
  %909 = phi ptr [ %894, %900 ], [ %4, %883 ]
  %910 = phi i64 [ %893, %900 ], [ 0, %883 ]
  %911 = add nsw i32 %908, 1
  store i32 %911, ptr %909, align 4, !tbaa !6
  %912 = getelementptr inbounds i32, ptr %7, i64 %910
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %6, i64 %910
  br label %926

915:                                              ; preds = %892
  %916 = icmp eq i32 %895, %898
  br i1 %916, label %917, label %923

917:                                              ; preds = %915
  store i32 0, ptr %894, align 4, !tbaa !6
  %918 = getelementptr inbounds i32, ptr %8, i64 %893
  %919 = load i32, ptr %918, align 4, !tbaa !6
  %920 = getelementptr inbounds i32, ptr %6, i64 %893
  store i32 %919, ptr %920, align 4, !tbaa !6
  %921 = add nuw nsw i64 %893, 1
  %922 = icmp eq i64 %921, %878
  br i1 %922, label %931, label %892, !llvm.loop !375

923:                                              ; preds = %888, %915
  %924 = sitofp i32 %881 to double
  store double %924, ptr %856, align 8, !tbaa !105
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

926:                                              ; preds = %901, %907
  %927 = phi ptr [ %914, %907 ], [ %894, %901 ]
  %928 = phi i32 [ %913, %907 ], [ 1, %901 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %917, %926, %890, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %2108, label %880, !llvm.loop !376

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !377

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !378

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !379

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1010:                                             ; preds = %1005
  %1011 = sitofp i32 %934 to double
  store double %1011, ptr %856, align 8, !tbaa !105
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !380

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %2120, label %933, !llvm.loop !381

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %2120

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %2120

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1087, %1136 ]
  %1087 = add nuw i32 %1086, 1
  br i1 %1081, label %1088, label %1136

1088:                                             ; preds = %1085
  %1089 = load i32, ptr %4, align 4, !tbaa !6
  %1090 = load i32, ptr %12, align 4, !tbaa !6
  %1091 = add nsw i32 %1090, -1
  %1092 = icmp slt i32 %1089, %1091
  br i1 %1092, label %1112, label %1093

1093:                                             ; preds = %1088
  %1094 = icmp eq i32 %1089, %1091
  br i1 %1094, label %1095, label %1128

1095:                                             ; preds = %1093
  store i32 0, ptr %4, align 4, !tbaa !6
  %1096 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1096, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1097

1097:                                             ; preds = %1095, %1122
  %1098 = phi i64 [ %1126, %1122 ], [ 1, %1095 ]
  %1099 = getelementptr inbounds i32, ptr %4, i64 %1098
  %1100 = load i32, ptr %1099, align 4, !tbaa !6
  %1101 = getelementptr inbounds i32, ptr %12, i64 %1098
  %1102 = load i32, ptr %1101, align 4, !tbaa !6
  %1103 = add nsw i32 %1102, -1
  %1104 = icmp slt i32 %1100, %1103
  br i1 %1104, label %1105, label %1120

1105:                                             ; preds = %1097
  br i1 %1092, label %1112, label %1106

1106:                                             ; preds = %1105
  %1107 = getelementptr inbounds i32, ptr %7, i64 %1098
  %1108 = load i32, ptr %1107, align 4, !tbaa !6
  %1109 = getelementptr inbounds i32, ptr %6, i64 %1098
  %1110 = load i32, ptr %1109, align 4, !tbaa !6
  %1111 = add nsw i32 %1110, %1108
  store i32 %1111, ptr %1109, align 4, !tbaa !6
  br label %1131

1112:                                             ; preds = %1088, %1105
  %1113 = phi i32 [ %1100, %1105 ], [ %1089, %1088 ]
  %1114 = phi ptr [ %1099, %1105 ], [ %4, %1088 ]
  %1115 = phi i64 [ %1098, %1105 ], [ 0, %1088 ]
  %1116 = add nsw i32 %1113, 1
  store i32 %1116, ptr %1114, align 4, !tbaa !6
  %1117 = getelementptr inbounds i32, ptr %7, i64 %1115
  %1118 = load i32, ptr %1117, align 4, !tbaa !6
  %1119 = getelementptr inbounds i32, ptr %6, i64 %1115
  br label %1131

1120:                                             ; preds = %1097
  %1121 = icmp eq i32 %1100, %1103
  br i1 %1121, label %1122, label %1128

1122:                                             ; preds = %1120
  store i32 0, ptr %1099, align 4, !tbaa !6
  %1123 = getelementptr inbounds i32, ptr %8, i64 %1098
  %1124 = load i32, ptr %1123, align 4, !tbaa !6
  %1125 = getelementptr inbounds i32, ptr %6, i64 %1098
  store i32 %1124, ptr %1125, align 4, !tbaa !6
  %1126 = add nuw nsw i64 %1098, 1
  %1127 = icmp eq i64 %1126, %1083
  br i1 %1127, label %1136, label %1097, !llvm.loop !382

1128:                                             ; preds = %1093, %1120
  %1129 = sitofp i32 %1086 to double
  store double %1129, ptr %856, align 8, !tbaa !105
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1131:                                             ; preds = %1106, %1112
  %1132 = phi ptr [ %1119, %1112 ], [ %1099, %1106 ]
  %1133 = phi i32 [ %1118, %1112 ], [ 1, %1106 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1122, %1131, %1095, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %2110, label %1085, !llvm.loop !383

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !384

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !385

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !386

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1215:                                             ; preds = %1210
  %1216 = sitofp i32 %1139 to double
  store double %1216, ptr %856, align 8, !tbaa !105
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !387

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %2120, label %1138, !llvm.loop !388

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 791, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store float 0.000000e+00, ptr %1274, align 4, !tbaa !121
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store float 1.000000e+00, ptr %1274, align 4, !tbaa !121
  br label %2120

1277:                                             ; preds = %1272
  switch i32 %1, label %1688 [
    i32 1, label %1278
    i32 0, label %1483
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %2120

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1351

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %2120

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = add nuw i32 %5, 1
  %1296 = zext i32 %13 to i64
  %1297 = icmp eq i32 %13, 1
  br label %1298

1298:                                             ; preds = %1293, %1349
  %1299 = phi i32 [ 1, %1293 ], [ %1300, %1349 ]
  %1300 = add nuw i32 %1299, 1
  br i1 %1294, label %1301, label %1349

1301:                                             ; preds = %1298
  %1302 = load i32, ptr %4, align 4, !tbaa !6
  %1303 = load i32, ptr %12, align 4, !tbaa !6
  %1304 = add nsw i32 %1303, -1
  %1305 = icmp slt i32 %1302, %1304
  br i1 %1305, label %1325, label %1306

1306:                                             ; preds = %1301
  %1307 = icmp eq i32 %1302, %1304
  br i1 %1307, label %1308, label %1341

1308:                                             ; preds = %1306
  store i32 0, ptr %4, align 4, !tbaa !6
  %1309 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1309, ptr %6, align 4, !tbaa !6
  br i1 %1297, label %1349, label %1310

1310:                                             ; preds = %1308, %1335
  %1311 = phi i64 [ %1339, %1335 ], [ 1, %1308 ]
  %1312 = getelementptr inbounds i32, ptr %4, i64 %1311
  %1313 = load i32, ptr %1312, align 4, !tbaa !6
  %1314 = getelementptr inbounds i32, ptr %12, i64 %1311
  %1315 = load i32, ptr %1314, align 4, !tbaa !6
  %1316 = add nsw i32 %1315, -1
  %1317 = icmp slt i32 %1313, %1316
  br i1 %1317, label %1318, label %1333

1318:                                             ; preds = %1310
  br i1 %1305, label %1325, label %1319

1319:                                             ; preds = %1318
  %1320 = getelementptr inbounds i32, ptr %7, i64 %1311
  %1321 = load i32, ptr %1320, align 4, !tbaa !6
  %1322 = getelementptr inbounds i32, ptr %6, i64 %1311
  %1323 = load i32, ptr %1322, align 4, !tbaa !6
  %1324 = add nsw i32 %1323, %1321
  store i32 %1324, ptr %1322, align 4, !tbaa !6
  br label %1344

1325:                                             ; preds = %1301, %1318
  %1326 = phi i32 [ %1313, %1318 ], [ %1302, %1301 ]
  %1327 = phi ptr [ %1312, %1318 ], [ %4, %1301 ]
  %1328 = phi i64 [ %1311, %1318 ], [ 0, %1301 ]
  %1329 = add nsw i32 %1326, 1
  store i32 %1329, ptr %1327, align 4, !tbaa !6
  %1330 = getelementptr inbounds i32, ptr %7, i64 %1328
  %1331 = load i32, ptr %1330, align 4, !tbaa !6
  %1332 = getelementptr inbounds i32, ptr %6, i64 %1328
  br label %1344

1333:                                             ; preds = %1310
  %1334 = icmp eq i32 %1313, %1316
  br i1 %1334, label %1335, label %1341

1335:                                             ; preds = %1333
  store i32 0, ptr %1312, align 4, !tbaa !6
  %1336 = getelementptr inbounds i32, ptr %8, i64 %1311
  %1337 = load i32, ptr %1336, align 4, !tbaa !6
  %1338 = getelementptr inbounds i32, ptr %6, i64 %1311
  store i32 %1337, ptr %1338, align 4, !tbaa !6
  %1339 = add nuw nsw i64 %1311, 1
  %1340 = icmp eq i64 %1339, %1296
  br i1 %1340, label %1349, label %1310, !llvm.loop !389

1341:                                             ; preds = %1306, %1333
  %1342 = sitofp i32 %1299 to float
  store float %1342, ptr %1274, align 4, !tbaa !121
  %1343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1344:                                             ; preds = %1319, %1325
  %1345 = phi ptr [ %1332, %1325 ], [ %1312, %1319 ]
  %1346 = phi i32 [ %1331, %1325 ], [ 1, %1319 ]
  %1347 = load i32, ptr %1345, align 4, !tbaa !6
  %1348 = add nsw i32 %1347, %1346
  store i32 %1348, ptr %1345, align 4, !tbaa !6
  br label %1349

1349:                                             ; preds = %1335, %1344, %1308, %1298
  %1350 = icmp eq i32 %1299, %5
  br i1 %1350, label %2112, label %1298, !llvm.loop !390

1351:                                             ; preds = %1284, %1481
  %1352 = phi i32 [ 1, %1284 ], [ %1430, %1481 ]
  %1353 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1354, label %1423

1354:                                             ; preds = %1351, %1413
  %1355 = phi i32 [ %1422, %1413 ], [ 0, %1351 ]
  %1356 = phi i64 [ %1364, %1413 ], [ %1289, %1351 ]
  %1357 = phi i64 [ %1421, %1413 ], [ %1288, %1351 ]
  %1358 = phi i32 [ %1419, %1413 ], [ %1353, %1351 ]
  %1359 = sub i32 %1287, %1355
  %1360 = tail call i32 @llvm.smin.i32(i32 %1359, i32 0)
  %1361 = sub i32 %1359, %1360
  %1362 = zext i32 %1361 to i64
  %1363 = add nuw nsw i64 %1362, 1
  %1364 = add nsw i64 %1356, -1
  %1365 = icmp ult i32 %1361, 31
  br i1 %1365, label %1401, label %1366

1366:                                             ; preds = %1354
  %1367 = and i64 %1363, 8589934560
  %1368 = sub i64 %1357, %1367
  br label %1369

1369:                                             ; preds = %1369, %1366
  %1370 = phi i64 [ 0, %1366 ], [ %1393, %1369 ]
  %1371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1389, %1369 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1390, %1369 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1391, %1369 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1366 ], [ %1392, %1369 ]
  %1375 = sub i64 %1357, %1370
  %1376 = getelementptr inbounds i32, ptr %11, i64 %1375
  %1377 = getelementptr inbounds i32, ptr %1376, i64 -7
  %1378 = load <8 x i32>, ptr %1377, align 4, !tbaa !6
  %1379 = shufflevector <8 x i32> %1378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1380 = getelementptr inbounds i32, ptr %1376, i64 -15
  %1381 = load <8 x i32>, ptr %1380, align 4, !tbaa !6
  %1382 = shufflevector <8 x i32> %1381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1383 = getelementptr inbounds i32, ptr %1376, i64 -23
  %1384 = load <8 x i32>, ptr %1383, align 4, !tbaa !6
  %1385 = shufflevector <8 x i32> %1384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1386 = getelementptr inbounds i32, ptr %1376, i64 -31
  %1387 = load <8 x i32>, ptr %1386, align 4, !tbaa !6
  %1388 = shufflevector <8 x i32> %1387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1389 = mul <8 x i32> %1379, %1371
  %1390 = mul <8 x i32> %1382, %1372
  %1391 = mul <8 x i32> %1385, %1373
  %1392 = mul <8 x i32> %1388, %1374
  %1393 = add nuw i64 %1370, 32
  %1394 = icmp eq i64 %1393, %1367
  br i1 %1394, label %1395, label %1369, !llvm.loop !391

1395:                                             ; preds = %1369
  %1396 = mul <8 x i32> %1390, %1389
  %1397 = mul <8 x i32> %1391, %1396
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1398)
  %1400 = icmp eq i64 %1363, %1367
  br i1 %1400, label %1413, label %1401

1401:                                             ; preds = %1354, %1395
  %1402 = phi i64 [ %1357, %1354 ], [ %1368, %1395 ]
  %1403 = phi i32 [ 1, %1354 ], [ %1399, %1395 ]
  br label %1404

1404:                                             ; preds = %1401, %1404
  %1405 = phi i64 [ %1410, %1404 ], [ %1402, %1401 ]
  %1406 = phi i32 [ %1409, %1404 ], [ %1403, %1401 ]
  %1407 = getelementptr inbounds i32, ptr %11, i64 %1405
  %1408 = load i32, ptr %1407, align 4, !tbaa !6
  %1409 = mul nsw i32 %1408, %1406
  %1410 = add nsw i64 %1405, -1
  %1411 = trunc i64 %1405 to i32
  %1412 = icmp sgt i32 %1411, 0
  br i1 %1412, label %1404, label %1413, !llvm.loop !392

1413:                                             ; preds = %1404, %1395
  %1414 = phi i32 [ %1399, %1395 ], [ %1409, %1404 ]
  %1415 = and i64 %1364, 4294967295
  %1416 = getelementptr inbounds i32, ptr %6, i64 %1415
  %1417 = load i32, ptr %1416, align 4, !tbaa !6
  %1418 = mul nsw i32 %1417, %1414
  %1419 = add nsw i32 %1418, %1358
  %1420 = icmp sgt i64 %1356, 2
  %1421 = add nsw i64 %1357, -1
  %1422 = add i32 %1355, 1
  br i1 %1420, label %1354, label %1423, !llvm.loop !393

1423:                                             ; preds = %1413, %1351
  %1424 = phi i32 [ %1353, %1351 ], [ %1419, %1413 ]
  %1425 = icmp slt i32 %1424, %5
  br i1 %1425, label %1428, label %1426

1426:                                             ; preds = %1423
  %1427 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1428:                                             ; preds = %1423
  %1429 = sitofp i32 %1352 to float
  store float %1429, ptr %1274, align 4, !tbaa !121
  %1430 = add nuw i32 %1352, 1
  br i1 %1286, label %1431, label %1481

1431:                                             ; preds = %1428
  %1432 = load i32, ptr %4, align 4, !tbaa !6
  %1433 = load i32, ptr %12, align 4, !tbaa !6
  %1434 = add nsw i32 %1433, -1
  %1435 = icmp slt i32 %1432, %1434
  br i1 %1435, label %1458, label %1436

1436:                                             ; preds = %1431
  %1437 = icmp eq i32 %1432, %1434
  br i1 %1437, label %1438, label %1474

1438:                                             ; preds = %1436
  store i32 0, ptr %4, align 4, !tbaa !6
  %1439 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1439, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1481, label %1440

1440:                                             ; preds = %1438, %1468
  %1441 = phi i64 [ %1472, %1468 ], [ 1, %1438 ]
  %1442 = getelementptr inbounds i32, ptr %4, i64 %1441
  %1443 = load i32, ptr %1442, align 4, !tbaa !6
  %1444 = getelementptr inbounds i32, ptr %12, i64 %1441
  %1445 = load i32, ptr %1444, align 4, !tbaa !6
  %1446 = add nsw i32 %1445, -1
  %1447 = icmp slt i32 %1443, %1446
  br i1 %1447, label %1448, label %1466

1448:                                             ; preds = %1440
  br i1 %1435, label %1458, label %1449

1449:                                             ; preds = %1448
  %1450 = shl i64 %1441, 32
  %1451 = add i64 %1450, -4294967296
  %1452 = ashr exact i64 %1451, 32
  %1453 = getelementptr inbounds i32, ptr %7, i64 %1452
  %1454 = load i32, ptr %1453, align 4, !tbaa !6
  %1455 = getelementptr inbounds i32, ptr %6, i64 %1441
  %1456 = load i32, ptr %1455, align 4, !tbaa !6
  %1457 = add nsw i32 %1456, %1454
  store i32 %1457, ptr %1455, align 4, !tbaa !6
  br label %1476

1458:                                             ; preds = %1431, %1448
  %1459 = phi i32 [ %1443, %1448 ], [ %1432, %1431 ]
  %1460 = phi ptr [ %1442, %1448 ], [ %4, %1431 ]
  %1461 = phi i64 [ %1441, %1448 ], [ 0, %1431 ]
  %1462 = add nsw i32 %1459, 1
  store i32 %1462, ptr %1460, align 4, !tbaa !6
  %1463 = getelementptr inbounds i32, ptr %7, i64 %1461
  %1464 = load i32, ptr %1463, align 4, !tbaa !6
  %1465 = getelementptr inbounds i32, ptr %6, i64 %1461
  br label %1476

1466:                                             ; preds = %1440
  %1467 = icmp eq i32 %1443, %1446
  br i1 %1467, label %1468, label %1474

1468:                                             ; preds = %1466
  store i32 0, ptr %1442, align 4, !tbaa !6
  %1469 = getelementptr inbounds i32, ptr %8, i64 %1441
  %1470 = load i32, ptr %1469, align 4, !tbaa !6
  %1471 = getelementptr inbounds i32, ptr %6, i64 %1441
  store i32 %1470, ptr %1471, align 4, !tbaa !6
  %1472 = add nuw nsw i64 %1441, 1
  %1473 = icmp eq i64 %1472, %1289
  br i1 %1473, label %1481, label %1440, !llvm.loop !394

1474:                                             ; preds = %1436, %1466
  %1475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1476:                                             ; preds = %1449, %1458
  %1477 = phi ptr [ %1465, %1458 ], [ %1442, %1449 ]
  %1478 = phi i32 [ %1464, %1458 ], [ 1, %1449 ]
  %1479 = load i32, ptr %1477, align 4, !tbaa !6
  %1480 = add nsw i32 %1479, %1478
  store i32 %1480, ptr %1477, align 4, !tbaa !6
  br label %1481

1481:                                             ; preds = %1468, %1476, %1438, %1428
  %1482 = icmp eq i32 %1352, %5
  br i1 %1482, label %2120, label %1351, !llvm.loop !395

1483:                                             ; preds = %1277
  %1484 = getelementptr inbounds i32, ptr %3, i64 %19
  %1485 = load i32, ptr %1484, align 4, !tbaa !6
  %1486 = icmp eq i32 %1485, 0
  %1487 = icmp sgt i32 %5, 0
  br i1 %1486, label %1497, label %1488

1488:                                             ; preds = %1483
  br i1 %1487, label %1489, label %2120

1489:                                             ; preds = %1488
  %1490 = icmp sgt i32 %13, 1
  %1491 = icmp sgt i32 %13, 0
  %1492 = add i32 %13, -2
  %1493 = zext i32 %1492 to i64
  %1494 = zext i32 %13 to i64
  %1495 = add nuw i32 %5, 1
  %1496 = icmp eq i32 %13, 1
  br label %1556

1497:                                             ; preds = %1483
  br i1 %1487, label %1498, label %2120

1498:                                             ; preds = %1497
  %1499 = icmp sgt i32 %13, 0
  %1500 = add nuw i32 %5, 1
  %1501 = zext i32 %13 to i64
  %1502 = icmp eq i32 %13, 1
  br label %1503

1503:                                             ; preds = %1498, %1554
  %1504 = phi i32 [ 1, %1498 ], [ %1505, %1554 ]
  %1505 = add nuw i32 %1504, 1
  br i1 %1499, label %1506, label %1554

1506:                                             ; preds = %1503
  %1507 = load i32, ptr %4, align 4, !tbaa !6
  %1508 = load i32, ptr %12, align 4, !tbaa !6
  %1509 = add nsw i32 %1508, -1
  %1510 = icmp slt i32 %1507, %1509
  br i1 %1510, label %1530, label %1511

1511:                                             ; preds = %1506
  %1512 = icmp eq i32 %1507, %1509
  br i1 %1512, label %1513, label %1546

1513:                                             ; preds = %1511
  store i32 0, ptr %4, align 4, !tbaa !6
  %1514 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1514, ptr %6, align 4, !tbaa !6
  br i1 %1502, label %1554, label %1515

1515:                                             ; preds = %1513, %1540
  %1516 = phi i64 [ %1544, %1540 ], [ 1, %1513 ]
  %1517 = getelementptr inbounds i32, ptr %4, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !6
  %1519 = getelementptr inbounds i32, ptr %12, i64 %1516
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = add nsw i32 %1520, -1
  %1522 = icmp slt i32 %1518, %1521
  br i1 %1522, label %1523, label %1538

1523:                                             ; preds = %1515
  br i1 %1510, label %1530, label %1524

1524:                                             ; preds = %1523
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1516
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1516
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, %1526
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  br label %1549

1530:                                             ; preds = %1506, %1523
  %1531 = phi i32 [ %1518, %1523 ], [ %1507, %1506 ]
  %1532 = phi ptr [ %1517, %1523 ], [ %4, %1506 ]
  %1533 = phi i64 [ %1516, %1523 ], [ 0, %1506 ]
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, ptr %1532, align 4, !tbaa !6
  %1535 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1536 = load i32, ptr %1535, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %6, i64 %1533
  br label %1549

1538:                                             ; preds = %1515
  %1539 = icmp eq i32 %1518, %1521
  br i1 %1539, label %1540, label %1546

1540:                                             ; preds = %1538
  store i32 0, ptr %1517, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %8, i64 %1516
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1516
  store i32 %1542, ptr %1543, align 4, !tbaa !6
  %1544 = add nuw nsw i64 %1516, 1
  %1545 = icmp eq i64 %1544, %1501
  br i1 %1545, label %1554, label %1515, !llvm.loop !396

1546:                                             ; preds = %1511, %1538
  %1547 = sitofp i32 %1504 to float
  store float %1547, ptr %1274, align 4, !tbaa !121
  %1548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1549:                                             ; preds = %1524, %1530
  %1550 = phi ptr [ %1537, %1530 ], [ %1517, %1524 ]
  %1551 = phi i32 [ %1536, %1530 ], [ 1, %1524 ]
  %1552 = load i32, ptr %1550, align 4, !tbaa !6
  %1553 = add nsw i32 %1552, %1551
  store i32 %1553, ptr %1550, align 4, !tbaa !6
  br label %1554

1554:                                             ; preds = %1540, %1549, %1513, %1503
  %1555 = icmp eq i32 %1504, %5
  br i1 %1555, label %2114, label %1503, !llvm.loop !397

1556:                                             ; preds = %1489, %1686
  %1557 = phi i32 [ 1, %1489 ], [ %1635, %1686 ]
  %1558 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1490, label %1559, label %1628

1559:                                             ; preds = %1556, %1618
  %1560 = phi i32 [ %1627, %1618 ], [ 0, %1556 ]
  %1561 = phi i64 [ %1569, %1618 ], [ %1494, %1556 ]
  %1562 = phi i64 [ %1626, %1618 ], [ %1493, %1556 ]
  %1563 = phi i32 [ %1624, %1618 ], [ %1558, %1556 ]
  %1564 = sub i32 %1492, %1560
  %1565 = tail call i32 @llvm.smin.i32(i32 %1564, i32 0)
  %1566 = sub i32 %1564, %1565
  %1567 = zext i32 %1566 to i64
  %1568 = add nuw nsw i64 %1567, 1
  %1569 = add nsw i64 %1561, -1
  %1570 = icmp ult i32 %1566, 31
  br i1 %1570, label %1606, label %1571

1571:                                             ; preds = %1559
  %1572 = and i64 %1568, 8589934560
  %1573 = sub i64 %1562, %1572
  br label %1574

1574:                                             ; preds = %1574, %1571
  %1575 = phi i64 [ 0, %1571 ], [ %1598, %1574 ]
  %1576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1594, %1574 ]
  %1577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1595, %1574 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1596, %1574 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1571 ], [ %1597, %1574 ]
  %1580 = sub i64 %1562, %1575
  %1581 = getelementptr inbounds i32, ptr %11, i64 %1580
  %1582 = getelementptr inbounds i32, ptr %1581, i64 -7
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !6
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = getelementptr inbounds i32, ptr %1581, i64 -15
  %1586 = load <8 x i32>, ptr %1585, align 4, !tbaa !6
  %1587 = shufflevector <8 x i32> %1586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1588 = getelementptr inbounds i32, ptr %1581, i64 -23
  %1589 = load <8 x i32>, ptr %1588, align 4, !tbaa !6
  %1590 = shufflevector <8 x i32> %1589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1591 = getelementptr inbounds i32, ptr %1581, i64 -31
  %1592 = load <8 x i32>, ptr %1591, align 4, !tbaa !6
  %1593 = shufflevector <8 x i32> %1592, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1594 = mul <8 x i32> %1584, %1576
  %1595 = mul <8 x i32> %1587, %1577
  %1596 = mul <8 x i32> %1590, %1578
  %1597 = mul <8 x i32> %1593, %1579
  %1598 = add nuw i64 %1575, 32
  %1599 = icmp eq i64 %1598, %1572
  br i1 %1599, label %1600, label %1574, !llvm.loop !398

1600:                                             ; preds = %1574
  %1601 = mul <8 x i32> %1595, %1594
  %1602 = mul <8 x i32> %1596, %1601
  %1603 = mul <8 x i32> %1597, %1602
  %1604 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1603)
  %1605 = icmp eq i64 %1568, %1572
  br i1 %1605, label %1618, label %1606

1606:                                             ; preds = %1559, %1600
  %1607 = phi i64 [ %1562, %1559 ], [ %1573, %1600 ]
  %1608 = phi i32 [ 1, %1559 ], [ %1604, %1600 ]
  br label %1609

1609:                                             ; preds = %1606, %1609
  %1610 = phi i64 [ %1615, %1609 ], [ %1607, %1606 ]
  %1611 = phi i32 [ %1614, %1609 ], [ %1608, %1606 ]
  %1612 = getelementptr inbounds i32, ptr %11, i64 %1610
  %1613 = load i32, ptr %1612, align 4, !tbaa !6
  %1614 = mul nsw i32 %1613, %1611
  %1615 = add nsw i64 %1610, -1
  %1616 = trunc i64 %1610 to i32
  %1617 = icmp sgt i32 %1616, 0
  br i1 %1617, label %1609, label %1618, !llvm.loop !399

1618:                                             ; preds = %1609, %1600
  %1619 = phi i32 [ %1604, %1600 ], [ %1614, %1609 ]
  %1620 = and i64 %1569, 4294967295
  %1621 = getelementptr inbounds i32, ptr %6, i64 %1620
  %1622 = load i32, ptr %1621, align 4, !tbaa !6
  %1623 = mul nsw i32 %1622, %1619
  %1624 = add nsw i32 %1623, %1563
  %1625 = icmp sgt i64 %1561, 2
  %1626 = add nsw i64 %1562, -1
  %1627 = add i32 %1560, 1
  br i1 %1625, label %1559, label %1628, !llvm.loop !400

1628:                                             ; preds = %1618, %1556
  %1629 = phi i32 [ %1558, %1556 ], [ %1624, %1618 ]
  %1630 = icmp slt i32 %1629, %5
  br i1 %1630, label %1633, label %1631

1631:                                             ; preds = %1628
  %1632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1633:                                             ; preds = %1628
  %1634 = sitofp i32 %1557 to float
  store float %1634, ptr %1274, align 4, !tbaa !121
  %1635 = add nuw i32 %1557, 1
  br i1 %1491, label %1636, label %1686

1636:                                             ; preds = %1633
  %1637 = load i32, ptr %4, align 4, !tbaa !6
  %1638 = load i32, ptr %12, align 4, !tbaa !6
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1637, %1639
  br i1 %1640, label %1663, label %1641

1641:                                             ; preds = %1636
  %1642 = icmp eq i32 %1637, %1639
  br i1 %1642, label %1643, label %1679

1643:                                             ; preds = %1641
  store i32 0, ptr %4, align 4, !tbaa !6
  %1644 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1644, ptr %6, align 4, !tbaa !6
  br i1 %1496, label %1686, label %1645

1645:                                             ; preds = %1643, %1673
  %1646 = phi i64 [ %1677, %1673 ], [ 1, %1643 ]
  %1647 = getelementptr inbounds i32, ptr %4, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !6
  %1649 = getelementptr inbounds i32, ptr %12, i64 %1646
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = add nsw i32 %1650, -1
  %1652 = icmp slt i32 %1648, %1651
  br i1 %1652, label %1653, label %1671

1653:                                             ; preds = %1645
  br i1 %1640, label %1663, label %1654

1654:                                             ; preds = %1653
  %1655 = shl i64 %1646, 32
  %1656 = add i64 %1655, -4294967296
  %1657 = ashr exact i64 %1656, 32
  %1658 = getelementptr inbounds i32, ptr %7, i64 %1657
  %1659 = load i32, ptr %1658, align 4, !tbaa !6
  %1660 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = add nsw i32 %1661, %1659
  store i32 %1662, ptr %1660, align 4, !tbaa !6
  br label %1681

1663:                                             ; preds = %1636, %1653
  %1664 = phi i32 [ %1648, %1653 ], [ %1637, %1636 ]
  %1665 = phi ptr [ %1647, %1653 ], [ %4, %1636 ]
  %1666 = phi i64 [ %1646, %1653 ], [ 0, %1636 ]
  %1667 = add nsw i32 %1664, 1
  store i32 %1667, ptr %1665, align 4, !tbaa !6
  %1668 = getelementptr inbounds i32, ptr %7, i64 %1666
  %1669 = load i32, ptr %1668, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %6, i64 %1666
  br label %1681

1671:                                             ; preds = %1645
  %1672 = icmp eq i32 %1648, %1651
  br i1 %1672, label %1673, label %1679

1673:                                             ; preds = %1671
  store i32 0, ptr %1647, align 4, !tbaa !6
  %1674 = getelementptr inbounds i32, ptr %8, i64 %1646
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %6, i64 %1646
  store i32 %1675, ptr %1676, align 4, !tbaa !6
  %1677 = add nuw nsw i64 %1646, 1
  %1678 = icmp eq i64 %1677, %1494
  br i1 %1678, label %1686, label %1645, !llvm.loop !401

1679:                                             ; preds = %1641, %1671
  %1680 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1681:                                             ; preds = %1654, %1663
  %1682 = phi ptr [ %1670, %1663 ], [ %1647, %1654 ]
  %1683 = phi i32 [ %1669, %1663 ], [ 1, %1654 ]
  %1684 = load i32, ptr %1682, align 4, !tbaa !6
  %1685 = add nsw i32 %1684, %1683
  store i32 %1685, ptr %1682, align 4, !tbaa !6
  br label %1686

1686:                                             ; preds = %1673, %1681, %1643, %1633
  %1687 = icmp eq i32 %1557, %5
  br i1 %1687, label %2120, label %1556, !llvm.loop !402

1688:                                             ; preds = %1277
  %1689 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 795, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

1690:                                             ; preds = %18
  %1691 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1692 = load ptr, ptr %1691, align 8, !tbaa !10
  store double 0.000000e+00, ptr %1692, align 8, !tbaa !105
  %1693 = icmp eq i32 %13, 0
  br i1 %1693, label %1694, label %1695

1694:                                             ; preds = %1690
  store double 1.000000e+00, ptr %1692, align 8, !tbaa !105
  br label %2120

1695:                                             ; preds = %1690
  switch i32 %1, label %2106 [
    i32 1, label %1696
    i32 0, label %1901
  ]

1696:                                             ; preds = %1695
  %1697 = getelementptr inbounds i32, ptr %3, i64 %19
  %1698 = load i32, ptr %1697, align 4, !tbaa !6
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp sgt i32 %5, 0
  br i1 %1699, label %1710, label %1701

1701:                                             ; preds = %1696
  br i1 %1700, label %1702, label %2120

1702:                                             ; preds = %1701
  %1703 = icmp sgt i32 %13, 1
  %1704 = icmp sgt i32 %13, 0
  %1705 = add i32 %13, -2
  %1706 = zext i32 %1705 to i64
  %1707 = zext i32 %13 to i64
  %1708 = add nuw i32 %5, 1
  %1709 = icmp eq i32 %13, 1
  br label %1769

1710:                                             ; preds = %1696
  br i1 %1700, label %1711, label %2120

1711:                                             ; preds = %1710
  %1712 = icmp sgt i32 %13, 0
  %1713 = add nuw i32 %5, 1
  %1714 = zext i32 %13 to i64
  %1715 = icmp eq i32 %13, 1
  br label %1716

1716:                                             ; preds = %1711, %1767
  %1717 = phi i32 [ 1, %1711 ], [ %1718, %1767 ]
  %1718 = add nuw i32 %1717, 1
  br i1 %1712, label %1719, label %1767

1719:                                             ; preds = %1716
  %1720 = load i32, ptr %4, align 4, !tbaa !6
  %1721 = load i32, ptr %12, align 4, !tbaa !6
  %1722 = add nsw i32 %1721, -1
  %1723 = icmp slt i32 %1720, %1722
  br i1 %1723, label %1743, label %1724

1724:                                             ; preds = %1719
  %1725 = icmp eq i32 %1720, %1722
  br i1 %1725, label %1726, label %1759

1726:                                             ; preds = %1724
  store i32 0, ptr %4, align 4, !tbaa !6
  %1727 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1727, ptr %6, align 4, !tbaa !6
  br i1 %1715, label %1767, label %1728

1728:                                             ; preds = %1726, %1753
  %1729 = phi i64 [ %1757, %1753 ], [ 1, %1726 ]
  %1730 = getelementptr inbounds i32, ptr %4, i64 %1729
  %1731 = load i32, ptr %1730, align 4, !tbaa !6
  %1732 = getelementptr inbounds i32, ptr %12, i64 %1729
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = add nsw i32 %1733, -1
  %1735 = icmp slt i32 %1731, %1734
  br i1 %1735, label %1736, label %1751

1736:                                             ; preds = %1728
  br i1 %1723, label %1743, label %1737

1737:                                             ; preds = %1736
  %1738 = getelementptr inbounds i32, ptr %7, i64 %1729
  %1739 = load i32, ptr %1738, align 4, !tbaa !6
  %1740 = getelementptr inbounds i32, ptr %6, i64 %1729
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = add nsw i32 %1741, %1739
  store i32 %1742, ptr %1740, align 4, !tbaa !6
  br label %1762

1743:                                             ; preds = %1719, %1736
  %1744 = phi i32 [ %1731, %1736 ], [ %1720, %1719 ]
  %1745 = phi ptr [ %1730, %1736 ], [ %4, %1719 ]
  %1746 = phi i64 [ %1729, %1736 ], [ 0, %1719 ]
  %1747 = add nsw i32 %1744, 1
  store i32 %1747, ptr %1745, align 4, !tbaa !6
  %1748 = getelementptr inbounds i32, ptr %7, i64 %1746
  %1749 = load i32, ptr %1748, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %6, i64 %1746
  br label %1762

1751:                                             ; preds = %1728
  %1752 = icmp eq i32 %1731, %1734
  br i1 %1752, label %1753, label %1759

1753:                                             ; preds = %1751
  store i32 0, ptr %1730, align 4, !tbaa !6
  %1754 = getelementptr inbounds i32, ptr %8, i64 %1729
  %1755 = load i32, ptr %1754, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %6, i64 %1729
  store i32 %1755, ptr %1756, align 4, !tbaa !6
  %1757 = add nuw nsw i64 %1729, 1
  %1758 = icmp eq i64 %1757, %1714
  br i1 %1758, label %1767, label %1728, !llvm.loop !403

1759:                                             ; preds = %1724, %1751
  %1760 = sitofp i32 %1717 to double
  store double %1760, ptr %1692, align 8, !tbaa !105
  %1761 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1762:                                             ; preds = %1737, %1743
  %1763 = phi ptr [ %1750, %1743 ], [ %1730, %1737 ]
  %1764 = phi i32 [ %1749, %1743 ], [ 1, %1737 ]
  %1765 = load i32, ptr %1763, align 4, !tbaa !6
  %1766 = add nsw i32 %1765, %1764
  store i32 %1766, ptr %1763, align 4, !tbaa !6
  br label %1767

1767:                                             ; preds = %1753, %1762, %1726, %1716
  %1768 = icmp eq i32 %1717, %5
  br i1 %1768, label %2116, label %1716, !llvm.loop !404

1769:                                             ; preds = %1702, %1899
  %1770 = phi i32 [ 1, %1702 ], [ %1848, %1899 ]
  %1771 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1703, label %1772, label %1841

1772:                                             ; preds = %1769, %1831
  %1773 = phi i32 [ %1840, %1831 ], [ 0, %1769 ]
  %1774 = phi i64 [ %1782, %1831 ], [ %1707, %1769 ]
  %1775 = phi i64 [ %1839, %1831 ], [ %1706, %1769 ]
  %1776 = phi i32 [ %1837, %1831 ], [ %1771, %1769 ]
  %1777 = sub i32 %1705, %1773
  %1778 = tail call i32 @llvm.smin.i32(i32 %1777, i32 0)
  %1779 = sub i32 %1777, %1778
  %1780 = zext i32 %1779 to i64
  %1781 = add nuw nsw i64 %1780, 1
  %1782 = add nsw i64 %1774, -1
  %1783 = icmp ult i32 %1779, 31
  br i1 %1783, label %1819, label %1784

1784:                                             ; preds = %1772
  %1785 = and i64 %1781, 8589934560
  %1786 = sub i64 %1775, %1785
  br label %1787

1787:                                             ; preds = %1787, %1784
  %1788 = phi i64 [ 0, %1784 ], [ %1811, %1787 ]
  %1789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1807, %1787 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1808, %1787 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1809, %1787 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1784 ], [ %1810, %1787 ]
  %1793 = sub i64 %1775, %1788
  %1794 = getelementptr inbounds i32, ptr %11, i64 %1793
  %1795 = getelementptr inbounds i32, ptr %1794, i64 -7
  %1796 = load <8 x i32>, ptr %1795, align 4, !tbaa !6
  %1797 = shufflevector <8 x i32> %1796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1798 = getelementptr inbounds i32, ptr %1794, i64 -15
  %1799 = load <8 x i32>, ptr %1798, align 4, !tbaa !6
  %1800 = shufflevector <8 x i32> %1799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1801 = getelementptr inbounds i32, ptr %1794, i64 -23
  %1802 = load <8 x i32>, ptr %1801, align 4, !tbaa !6
  %1803 = shufflevector <8 x i32> %1802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1804 = getelementptr inbounds i32, ptr %1794, i64 -31
  %1805 = load <8 x i32>, ptr %1804, align 4, !tbaa !6
  %1806 = shufflevector <8 x i32> %1805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1807 = mul <8 x i32> %1797, %1789
  %1808 = mul <8 x i32> %1800, %1790
  %1809 = mul <8 x i32> %1803, %1791
  %1810 = mul <8 x i32> %1806, %1792
  %1811 = add nuw i64 %1788, 32
  %1812 = icmp eq i64 %1811, %1785
  br i1 %1812, label %1813, label %1787, !llvm.loop !405

1813:                                             ; preds = %1787
  %1814 = mul <8 x i32> %1808, %1807
  %1815 = mul <8 x i32> %1809, %1814
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1816)
  %1818 = icmp eq i64 %1781, %1785
  br i1 %1818, label %1831, label %1819

1819:                                             ; preds = %1772, %1813
  %1820 = phi i64 [ %1775, %1772 ], [ %1786, %1813 ]
  %1821 = phi i32 [ 1, %1772 ], [ %1817, %1813 ]
  br label %1822

1822:                                             ; preds = %1819, %1822
  %1823 = phi i64 [ %1828, %1822 ], [ %1820, %1819 ]
  %1824 = phi i32 [ %1827, %1822 ], [ %1821, %1819 ]
  %1825 = getelementptr inbounds i32, ptr %11, i64 %1823
  %1826 = load i32, ptr %1825, align 4, !tbaa !6
  %1827 = mul nsw i32 %1826, %1824
  %1828 = add nsw i64 %1823, -1
  %1829 = trunc i64 %1823 to i32
  %1830 = icmp sgt i32 %1829, 0
  br i1 %1830, label %1822, label %1831, !llvm.loop !406

1831:                                             ; preds = %1822, %1813
  %1832 = phi i32 [ %1817, %1813 ], [ %1827, %1822 ]
  %1833 = and i64 %1782, 4294967295
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1833
  %1835 = load i32, ptr %1834, align 4, !tbaa !6
  %1836 = mul nsw i32 %1835, %1832
  %1837 = add nsw i32 %1836, %1776
  %1838 = icmp sgt i64 %1774, 2
  %1839 = add nsw i64 %1775, -1
  %1840 = add i32 %1773, 1
  br i1 %1838, label %1772, label %1841, !llvm.loop !407

1841:                                             ; preds = %1831, %1769
  %1842 = phi i32 [ %1771, %1769 ], [ %1837, %1831 ]
  %1843 = icmp slt i32 %1842, %5
  br i1 %1843, label %1846, label %1844

1844:                                             ; preds = %1841
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

1846:                                             ; preds = %1841
  %1847 = sitofp i32 %1770 to double
  store double %1847, ptr %1692, align 8, !tbaa !105
  %1848 = add nuw i32 %1770, 1
  br i1 %1704, label %1849, label %1899

1849:                                             ; preds = %1846
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1709, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1707
  br i1 %1891, label %1899, label %1858, !llvm.loop !408

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1846
  %1900 = icmp eq i32 %1770, %5
  br i1 %1900, label %2120, label %1769, !llvm.loop !409

1901:                                             ; preds = %1695
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %2120

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1974

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %2120

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1972
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1972 ]
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1972

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1972, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1967

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1967

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1972, label %1933, !llvm.loop !410

1964:                                             ; preds = %1929, %1956
  %1965 = sitofp i32 %1922 to double
  store double %1965, ptr %1692, align 8, !tbaa !105
  %1966 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

1967:                                             ; preds = %1942, %1948
  %1968 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1969 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1970 = load i32, ptr %1968, align 4, !tbaa !6
  %1971 = add nsw i32 %1970, %1969
  store i32 %1971, ptr %1968, align 4, !tbaa !6
  br label %1972

1972:                                             ; preds = %1958, %1967, %1931, %1921
  %1973 = icmp eq i32 %1922, %5
  br i1 %1973, label %2118, label %1921, !llvm.loop !411

1974:                                             ; preds = %1907, %2104
  %1975 = phi i32 [ 1, %1907 ], [ %2053, %2104 ]
  %1976 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1977, label %2046

1977:                                             ; preds = %1974, %2036
  %1978 = phi i32 [ %2045, %2036 ], [ 0, %1974 ]
  %1979 = phi i64 [ %1987, %2036 ], [ %1912, %1974 ]
  %1980 = phi i64 [ %2044, %2036 ], [ %1911, %1974 ]
  %1981 = phi i32 [ %2042, %2036 ], [ %1976, %1974 ]
  %1982 = sub i32 %1910, %1978
  %1983 = tail call i32 @llvm.smin.i32(i32 %1982, i32 0)
  %1984 = sub i32 %1982, %1983
  %1985 = zext i32 %1984 to i64
  %1986 = add nuw nsw i64 %1985, 1
  %1987 = add nsw i64 %1979, -1
  %1988 = icmp ult i32 %1984, 31
  br i1 %1988, label %2024, label %1989

1989:                                             ; preds = %1977
  %1990 = and i64 %1986, 8589934560
  %1991 = sub i64 %1980, %1990
  br label %1992

1992:                                             ; preds = %1992, %1989
  %1993 = phi i64 [ 0, %1989 ], [ %2016, %1992 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2012, %1992 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2013, %1992 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2014, %1992 ]
  %1997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2015, %1992 ]
  %1998 = sub i64 %1980, %1993
  %1999 = getelementptr inbounds i32, ptr %11, i64 %1998
  %2000 = getelementptr inbounds i32, ptr %1999, i64 -7
  %2001 = load <8 x i32>, ptr %2000, align 4, !tbaa !6
  %2002 = shufflevector <8 x i32> %2001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2003 = getelementptr inbounds i32, ptr %1999, i64 -15
  %2004 = load <8 x i32>, ptr %2003, align 4, !tbaa !6
  %2005 = shufflevector <8 x i32> %2004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2006 = getelementptr inbounds i32, ptr %1999, i64 -23
  %2007 = load <8 x i32>, ptr %2006, align 4, !tbaa !6
  %2008 = shufflevector <8 x i32> %2007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2009 = getelementptr inbounds i32, ptr %1999, i64 -31
  %2010 = load <8 x i32>, ptr %2009, align 4, !tbaa !6
  %2011 = shufflevector <8 x i32> %2010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2012 = mul <8 x i32> %2002, %1994
  %2013 = mul <8 x i32> %2005, %1995
  %2014 = mul <8 x i32> %2008, %1996
  %2015 = mul <8 x i32> %2011, %1997
  %2016 = add nuw i64 %1993, 32
  %2017 = icmp eq i64 %2016, %1990
  br i1 %2017, label %2018, label %1992, !llvm.loop !412

2018:                                             ; preds = %1992
  %2019 = mul <8 x i32> %2013, %2012
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = mul <8 x i32> %2015, %2020
  %2022 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2021)
  %2023 = icmp eq i64 %1986, %1990
  br i1 %2023, label %2036, label %2024

2024:                                             ; preds = %1977, %2018
  %2025 = phi i64 [ %1980, %1977 ], [ %1991, %2018 ]
  %2026 = phi i32 [ 1, %1977 ], [ %2022, %2018 ]
  br label %2027

2027:                                             ; preds = %2024, %2027
  %2028 = phi i64 [ %2033, %2027 ], [ %2025, %2024 ]
  %2029 = phi i32 [ %2032, %2027 ], [ %2026, %2024 ]
  %2030 = getelementptr inbounds i32, ptr %11, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !6
  %2032 = mul nsw i32 %2031, %2029
  %2033 = add nsw i64 %2028, -1
  %2034 = trunc i64 %2028 to i32
  %2035 = icmp sgt i32 %2034, 0
  br i1 %2035, label %2027, label %2036, !llvm.loop !413

2036:                                             ; preds = %2027, %2018
  %2037 = phi i32 [ %2022, %2018 ], [ %2032, %2027 ]
  %2038 = and i64 %1987, 4294967295
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2038
  %2040 = load i32, ptr %2039, align 4, !tbaa !6
  %2041 = mul nsw i32 %2040, %2037
  %2042 = add nsw i32 %2041, %1981
  %2043 = icmp sgt i64 %1979, 2
  %2044 = add nsw i64 %1980, -1
  %2045 = add i32 %1978, 1
  br i1 %2043, label %1977, label %2046, !llvm.loop !414

2046:                                             ; preds = %2036, %1974
  %2047 = phi i32 [ %1976, %1974 ], [ %2042, %2036 ]
  %2048 = icmp slt i32 %2047, %5
  br i1 %2048, label %2051, label %2049

2049:                                             ; preds = %2046
  %2050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %2120

2051:                                             ; preds = %2046
  %2052 = sitofp i32 %1975 to double
  store double %2052, ptr %1692, align 8, !tbaa !105
  %2053 = add nuw i32 %1975, 1
  br i1 %1909, label %2054, label %2104

2054:                                             ; preds = %2051
  %2055 = load i32, ptr %4, align 4, !tbaa !6
  %2056 = load i32, ptr %12, align 4, !tbaa !6
  %2057 = add nsw i32 %2056, -1
  %2058 = icmp slt i32 %2055, %2057
  br i1 %2058, label %2081, label %2059

2059:                                             ; preds = %2054
  %2060 = icmp eq i32 %2055, %2057
  br i1 %2060, label %2061, label %2097

2061:                                             ; preds = %2059
  store i32 0, ptr %4, align 4, !tbaa !6
  %2062 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2062, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2104, label %2063

2063:                                             ; preds = %2061, %2091
  %2064 = phi i64 [ %2095, %2091 ], [ 1, %2061 ]
  %2065 = getelementptr inbounds i32, ptr %4, i64 %2064
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = getelementptr inbounds i32, ptr %12, i64 %2064
  %2068 = load i32, ptr %2067, align 4, !tbaa !6
  %2069 = add nsw i32 %2068, -1
  %2070 = icmp slt i32 %2066, %2069
  br i1 %2070, label %2071, label %2089

2071:                                             ; preds = %2063
  br i1 %2058, label %2081, label %2072

2072:                                             ; preds = %2071
  %2073 = shl i64 %2064, 32
  %2074 = add i64 %2073, -4294967296
  %2075 = ashr exact i64 %2074, 32
  %2076 = getelementptr inbounds i32, ptr %7, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = getelementptr inbounds i32, ptr %6, i64 %2064
  %2079 = load i32, ptr %2078, align 4, !tbaa !6
  %2080 = add nsw i32 %2079, %2077
  store i32 %2080, ptr %2078, align 4, !tbaa !6
  br label %2099

2081:                                             ; preds = %2054, %2071
  %2082 = phi i32 [ %2066, %2071 ], [ %2055, %2054 ]
  %2083 = phi ptr [ %2065, %2071 ], [ %4, %2054 ]
  %2084 = phi i64 [ %2064, %2071 ], [ 0, %2054 ]
  %2085 = add nsw i32 %2082, 1
  store i32 %2085, ptr %2083, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %7, i64 %2084
  %2087 = load i32, ptr %2086, align 4, !tbaa !6
  %2088 = getelementptr inbounds i32, ptr %6, i64 %2084
  br label %2099

2089:                                             ; preds = %2063
  %2090 = icmp eq i32 %2066, %2069
  br i1 %2090, label %2091, label %2097

2091:                                             ; preds = %2089
  store i32 0, ptr %2065, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %8, i64 %2064
  %2093 = load i32, ptr %2092, align 4, !tbaa !6
  %2094 = getelementptr inbounds i32, ptr %6, i64 %2064
  store i32 %2093, ptr %2094, align 4, !tbaa !6
  %2095 = add nuw nsw i64 %2064, 1
  %2096 = icmp eq i64 %2095, %1912
  br i1 %2096, label %2104, label %2063, !llvm.loop !415

2097:                                             ; preds = %2059, %2089
  %2098 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %2120

2099:                                             ; preds = %2072, %2081
  %2100 = phi ptr [ %2088, %2081 ], [ %2065, %2072 ]
  %2101 = phi i32 [ %2087, %2081 ], [ 1, %2072 ]
  %2102 = load i32, ptr %2100, align 4, !tbaa !6
  %2103 = add nsw i32 %2102, %2101
  store i32 %2103, ptr %2100, align 4, !tbaa !6
  br label %2104

2104:                                             ; preds = %2091, %2099, %2061, %2051
  %2105 = icmp eq i32 %1975, %5
  br i1 %2105, label %2120, label %1974, !llvm.loop !416

2106:                                             ; preds = %1695
  %2107 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %2120

2108:                                             ; preds = %931
  %2109 = sitofp i32 %881 to double
  store double %2109, ptr %856, align 8, !tbaa !105
  br label %2120

2110:                                             ; preds = %1136
  %2111 = sitofp i32 %1086 to double
  store double %2111, ptr %856, align 8, !tbaa !105
  br label %2120

2112:                                             ; preds = %1349
  %2113 = sitofp i32 %1299 to float
  store float %2113, ptr %1274, align 4, !tbaa !121
  br label %2120

2114:                                             ; preds = %1554
  %2115 = sitofp i32 %1504 to float
  store float %2115, ptr %1274, align 4, !tbaa !121
  br label %2120

2116:                                             ; preds = %1767
  %2117 = sitofp i32 %1717 to double
  store double %2117, ptr %1692, align 8, !tbaa !105
  br label %2120

2118:                                             ; preds = %1972
  %2119 = sitofp i32 %1922 to double
  store double %2119, ptr %1692, align 8, !tbaa !105
  br label %2120

2120:                                             ; preds = %2104, %1899, %1686, %1481, %1268, %1063, %850, %719, %647, %516, %436, %304, %231, %99, %1906, %1915, %2118, %1701, %1710, %2116, %1488, %1497, %2114, %1283, %1292, %2112, %1070, %1079, %2110, %865, %874, %2108, %654, %663, %451, %460, %238, %247, %33, %42, %1694, %2106, %1276, %1688, %858, %1270, %444, %852, %26, %438, %18, %1759, %1844, %1892, %1964, %2049, %2097, %1341, %1426, %1474, %1546, %1631, %1679, %923, %1008, %1056, %1128, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %2121 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1128 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %923 ], [ -1, %1679 ], [ -1, %1631 ], [ -1, %1546 ], [ -1, %1474 ], [ -1, %1426 ], [ -1, %1341 ], [ -1, %2097 ], [ -1, %2049 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1844 ], [ -1, %1759 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1688 ], [ 1, %1276 ], [ 1, %2106 ], [ 1, %1694 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ %877, %2108 ], [ 1, %874 ], [ 1, %865 ], [ %1082, %2110 ], [ 1, %1079 ], [ 1, %1070 ], [ %1295, %2112 ], [ 1, %1292 ], [ 1, %1283 ], [ %1500, %2114 ], [ 1, %1497 ], [ 1, %1488 ], [ %1713, %2116 ], [ 1, %1710 ], [ 1, %1701 ], [ %1918, %2118 ], [ 1, %1915 ], [ 1, %1906 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %872, %1063 ], [ %1077, %1268 ], [ %1290, %1481 ], [ %1495, %1686 ], [ %1708, %1899 ], [ %1913, %2104 ]
  ret i32 %2121
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !417

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !418

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !419

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !420

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !421

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !422

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !423

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !424

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !425

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !426

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !427

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !428

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !429

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !430

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !431

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !432

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !433

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !434

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !435

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !436

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !437

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !438

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !439

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !440

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !441

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !442

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !443

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !444

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !445

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !446

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !447

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !448

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !449

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !450

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !451

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !452

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !453

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !454

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !455

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !456

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !457

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !458

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1011, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !459

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !460

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !461

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !462

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !463

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !464

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !465

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !466

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !467

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !468

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !469

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !470

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !471

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !472

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1016, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !473

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !474

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !475

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !476

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !477

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !478

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !479

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !480

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !481

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !482

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !483

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !484

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !485

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !486

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1021, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !487

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !488

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !489

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !490

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !491

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !492

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !493

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !494

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !495

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !496

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !497

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !498

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !499

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !500

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !501

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !502

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !503

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !504

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !505

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !506

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !507

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !508

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !509

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !510

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !511

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !512

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !513

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !514

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1030, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !515

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !516

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !517

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !518

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !519

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !520

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !521

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !522

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !523

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !524

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !525

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !526

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !527

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !528

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1034, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !529

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !530

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !531

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !532

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !533

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !534

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !535

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !536

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !537

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !538

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !539

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !540

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !541

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !542

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1039, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !543

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !544

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !545

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !546

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !547

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !548

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !549

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !550

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !551

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !552

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !553

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !554

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !555

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !556

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1243, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !557

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !558

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !559

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !560

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !561

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !562

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !563

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !564

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !565

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !566

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !567

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !568

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !569

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !570

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !571

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !572

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !573

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !574

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !575

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !576

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !577

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !578

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !579

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !580

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !581

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !582

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !583

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !584

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1250, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !585

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !586

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !587

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !588

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !589

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !590

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !591

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !592

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !593

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !594

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !595

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !596

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !597

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !598

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1255, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !599

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !600

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !601

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !602

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !603

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !604

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !605

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !606

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !607

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !608

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !609

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !610

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !611

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !612

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1260, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !613

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !614

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !615

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !616

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !617

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !618

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !619

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !620

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !621

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !622

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !623

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !624

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !625

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !626

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1265, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !627

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !628

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !629

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !630

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !631

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !632

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !633

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !634

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !635

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !636

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !637

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !638

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !639

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !640

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1269, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !641

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !642

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !643

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !644

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !645

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !646

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !647

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !648

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !649

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !650

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !651

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !652

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !653

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !654

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !655

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !656

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !657

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !658

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !659

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !660

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !661

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !662

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !663

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !664

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !665

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !666

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !667

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !668

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !669

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !670

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !671

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !672

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !673

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !674

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !675

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !676

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !677

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !678

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !679

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !680

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !681

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !682

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1481, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !683

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !684

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !685

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !686

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !687

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !688

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !689

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !690

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !691

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !692

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !693

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !694

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !695

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !696

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1484, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !697

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !698

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !699

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !700

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !701

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !702

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !703

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !704

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !705

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !706

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !707

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !708

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !709

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !710

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1488, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !711

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !712

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !713

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !714

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !715

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !716

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !717

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !718

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !719

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !720

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !721

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !722

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !723

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !724

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1493, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !725

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !726

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !727

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !728

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !729

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !730

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !731

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !732

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !733

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !734

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !735

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !736

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !737

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !738

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1498, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !739

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !740

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !741

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !742

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !743

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !744

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !745

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !746

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !747

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !748

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !749

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !750

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !751

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !752

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !753

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !754

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !755

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !756

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !757

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !758

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !759

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !760

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !761

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !762

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !763

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !764

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !765

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !766

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1507, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !767

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !768

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !769

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !770

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !771

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !772

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !773

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !774

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !775

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !776

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !777

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !778

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !779

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !780

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1511, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !781

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !782

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !783

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !784

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !785

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !786

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !787

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !788

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !789

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !790

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !791

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !792

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !793

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !794

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1516, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !795

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !796

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !797

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !798

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !799

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !800

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !801

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !802

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !803

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !804

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !805

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !806

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !807

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !808

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1719, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !809

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !810

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !811

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !812

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !813

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !814

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !815

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !816

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !817

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !818

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !819

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !820

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !821

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !822

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1722, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !823

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !824

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !825

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !826

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !827

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !828

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !829

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !830

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !831

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !832

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !833

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !834

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !835

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !836

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1726, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !837

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !838

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !839

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !840

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !841

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !842

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !843

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !844

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !845

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !846

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !847

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !848

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !849

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !850

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1731, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !851

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !852

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !853

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !854

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !855

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !856

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !857

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !858

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !859

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !860

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !861

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !862

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !863

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !864

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !865

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !866

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !867

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !868

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !869

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !870

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !871

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !872

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !873

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !874

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !875

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !876

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !877

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !878

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1741, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !879

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !880

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !881

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !882

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !883

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !884

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !885

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !886

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !887

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !888

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !889

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !890

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !891

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !892

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1745, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !893

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !894

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !895

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !896

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !897

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !898

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !899

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !900

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !901

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !902

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !903

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !904

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !905

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !906

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1749, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !907

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !908

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !909

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !910

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !911

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !912

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !913

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !914

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !915

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !916

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !917

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !918

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !919

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !920

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1754, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Count_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readnone %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readnone %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readnone %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3802 [
    i32 101, label %22
    i32 102, label %440
    i32 103, label %854
    i32 104, label %1272
    i32 105, label %1692
    i32 106, label %2106
    i32 107, label %2532
    i32 108, label %2950
    i32 109, label %3368
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %16, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  store i8 0, ptr %24, align 1, !tbaa !12
  %25 = icmp eq i32 %13, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i8 1, ptr %24, align 1, !tbaa !12
  br label %3802

27:                                               ; preds = %22
  switch i32 %1, label %438 [
    i32 1, label %28
    i32 0, label %233
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds i32, ptr %3, i64 %19
  %30 = load i32, ptr %29, align 4, !tbaa !6
  %31 = icmp eq i32 %30, 0
  %32 = icmp sgt i32 %5, 0
  br i1 %31, label %42, label %33

33:                                               ; preds = %28
  br i1 %32, label %34, label %3802

34:                                               ; preds = %33
  %35 = icmp sgt i32 %13, 1
  %36 = icmp sgt i32 %13, 0
  %37 = add i32 %13, -2
  %38 = zext i32 %37 to i64
  %39 = zext i32 %13 to i64
  %40 = add nuw i32 %5, 1
  %41 = icmp eq i32 %13, 1
  br label %101

42:                                               ; preds = %28
  br i1 %32, label %43, label %3802

43:                                               ; preds = %42
  %44 = icmp sgt i32 %13, 0
  %45 = add nuw i32 %5, 1
  %46 = zext i32 %13 to i64
  %47 = icmp eq i32 %13, 1
  br label %48

48:                                               ; preds = %43, %99
  %49 = phi i32 [ 1, %43 ], [ %51, %99 ]
  %50 = trunc i32 %49 to i8
  store i8 %50, ptr %24, align 1, !tbaa !12
  %51 = add nuw i32 %49, 1
  br i1 %44, label %52, label %99

52:                                               ; preds = %48
  %53 = load i32, ptr %4, align 4, !tbaa !6
  %54 = load i32, ptr %12, align 4, !tbaa !6
  %55 = add nsw i32 %54, -1
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %59, label %92

59:                                               ; preds = %57
  store i32 0, ptr %4, align 4, !tbaa !6
  %60 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %60, ptr %6, align 4, !tbaa !6
  br i1 %47, label %99, label %61

61:                                               ; preds = %59, %86
  %62 = phi i64 [ %90, %86 ], [ 1, %59 ]
  %63 = getelementptr inbounds i32, ptr %4, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !6
  %65 = getelementptr inbounds i32, ptr %12, i64 %62
  %66 = load i32, ptr %65, align 4, !tbaa !6
  %67 = add nsw i32 %66, -1
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %61
  br i1 %56, label %76, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds i32, ptr %7, i64 %62
  %72 = load i32, ptr %71, align 4, !tbaa !6
  %73 = getelementptr inbounds i32, ptr %6, i64 %62
  %74 = load i32, ptr %73, align 4, !tbaa !6
  %75 = add nsw i32 %74, %72
  store i32 %75, ptr %73, align 4, !tbaa !6
  br label %94

76:                                               ; preds = %52, %69
  %77 = phi i32 [ %64, %69 ], [ %53, %52 ]
  %78 = phi ptr [ %63, %69 ], [ %4, %52 ]
  %79 = phi i64 [ %62, %69 ], [ 0, %52 ]
  %80 = add nsw i32 %77, 1
  store i32 %80, ptr %78, align 4, !tbaa !6
  %81 = getelementptr inbounds i32, ptr %7, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !6
  %83 = getelementptr inbounds i32, ptr %6, i64 %79
  br label %94

84:                                               ; preds = %61
  %85 = icmp eq i32 %64, %67
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i32 0, ptr %63, align 4, !tbaa !6
  %87 = getelementptr inbounds i32, ptr %8, i64 %62
  %88 = load i32, ptr %87, align 4, !tbaa !6
  %89 = getelementptr inbounds i32, ptr %6, i64 %62
  store i32 %88, ptr %89, align 4, !tbaa !6
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %46
  br i1 %91, label %99, label %61, !llvm.loop !921

92:                                               ; preds = %57, %84
  %93 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

94:                                               ; preds = %70, %76
  %95 = phi ptr [ %83, %76 ], [ %63, %70 ]
  %96 = phi i32 [ %82, %76 ], [ 1, %70 ]
  %97 = load i32, ptr %95, align 4, !tbaa !6
  %98 = add nsw i32 %97, %96
  store i32 %98, ptr %95, align 4, !tbaa !6
  br label %99

99:                                               ; preds = %86, %94, %59, %48
  %100 = icmp eq i32 %49, %5
  br i1 %100, label %3802, label %48, !llvm.loop !922

101:                                              ; preds = %34, %231
  %102 = phi i32 [ 1, %34 ], [ %180, %231 ]
  %103 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %35, label %104, label %173

104:                                              ; preds = %101, %163
  %105 = phi i32 [ %172, %163 ], [ 0, %101 ]
  %106 = phi i64 [ %114, %163 ], [ %39, %101 ]
  %107 = phi i64 [ %171, %163 ], [ %38, %101 ]
  %108 = phi i32 [ %169, %163 ], [ %103, %101 ]
  %109 = sub i32 %37, %105
  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 0)
  %111 = sub i32 %109, %110
  %112 = zext i32 %111 to i64
  %113 = add nuw nsw i64 %112, 1
  %114 = add nsw i64 %106, -1
  %115 = icmp ult i32 %111, 31
  br i1 %115, label %151, label %116

116:                                              ; preds = %104
  %117 = and i64 %113, 8589934560
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i64 [ 0, %116 ], [ %143, %119 ]
  %121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %139, %119 ]
  %122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %140, %119 ]
  %123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %141, %119 ]
  %124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %116 ], [ %142, %119 ]
  %125 = sub i64 %107, %120
  %126 = getelementptr inbounds i32, ptr %11, i64 %125
  %127 = getelementptr inbounds i32, ptr %126, i64 -7
  %128 = load <8 x i32>, ptr %127, align 4, !tbaa !6
  %129 = shufflevector <8 x i32> %128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %130 = getelementptr inbounds i32, ptr %126, i64 -15
  %131 = load <8 x i32>, ptr %130, align 4, !tbaa !6
  %132 = shufflevector <8 x i32> %131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = getelementptr inbounds i32, ptr %126, i64 -23
  %134 = load <8 x i32>, ptr %133, align 4, !tbaa !6
  %135 = shufflevector <8 x i32> %134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %136 = getelementptr inbounds i32, ptr %126, i64 -31
  %137 = load <8 x i32>, ptr %136, align 4, !tbaa !6
  %138 = shufflevector <8 x i32> %137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %139 = mul <8 x i32> %129, %121
  %140 = mul <8 x i32> %132, %122
  %141 = mul <8 x i32> %135, %123
  %142 = mul <8 x i32> %138, %124
  %143 = add nuw i64 %120, 32
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %145, label %119, !llvm.loop !923

145:                                              ; preds = %119
  %146 = mul <8 x i32> %140, %139
  %147 = mul <8 x i32> %141, %146
  %148 = mul <8 x i32> %142, %147
  %149 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %148)
  %150 = icmp eq i64 %113, %117
  br i1 %150, label %163, label %151

151:                                              ; preds = %104, %145
  %152 = phi i64 [ %107, %104 ], [ %118, %145 ]
  %153 = phi i32 [ 1, %104 ], [ %149, %145 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %160, %154 ], [ %152, %151 ]
  %156 = phi i32 [ %159, %154 ], [ %153, %151 ]
  %157 = getelementptr inbounds i32, ptr %11, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !6
  %159 = mul nsw i32 %158, %156
  %160 = add nsw i64 %155, -1
  %161 = trunc i64 %155 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %154, label %163, !llvm.loop !924

163:                                              ; preds = %154, %145
  %164 = phi i32 [ %149, %145 ], [ %159, %154 ]
  %165 = and i64 %114, 4294967295
  %166 = getelementptr inbounds i32, ptr %6, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = mul nsw i32 %167, %164
  %169 = add nsw i32 %168, %108
  %170 = icmp sgt i64 %106, 2
  %171 = add nsw i64 %107, -1
  %172 = add i32 %105, 1
  br i1 %170, label %104, label %173, !llvm.loop !925

173:                                              ; preds = %163, %101
  %174 = phi i32 [ %103, %101 ], [ %169, %163 ]
  %175 = icmp slt i32 %174, %5
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

178:                                              ; preds = %173
  %179 = trunc i32 %102 to i8
  store i8 %179, ptr %24, align 1, !tbaa !12
  %180 = add nuw i32 %102, 1
  br i1 %36, label %181, label %231

181:                                              ; preds = %178
  %182 = load i32, ptr %4, align 4, !tbaa !6
  %183 = load i32, ptr %12, align 4, !tbaa !6
  %184 = add nsw i32 %183, -1
  %185 = icmp slt i32 %182, %184
  br i1 %185, label %208, label %186

186:                                              ; preds = %181
  %187 = icmp eq i32 %182, %184
  br i1 %187, label %188, label %224

188:                                              ; preds = %186
  store i32 0, ptr %4, align 4, !tbaa !6
  %189 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %189, ptr %6, align 4, !tbaa !6
  br i1 %41, label %231, label %190

190:                                              ; preds = %188, %218
  %191 = phi i64 [ %222, %218 ], [ 1, %188 ]
  %192 = getelementptr inbounds i32, ptr %4, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !6
  %194 = getelementptr inbounds i32, ptr %12, i64 %191
  %195 = load i32, ptr %194, align 4, !tbaa !6
  %196 = add nsw i32 %195, -1
  %197 = icmp slt i32 %193, %196
  br i1 %197, label %198, label %216

198:                                              ; preds = %190
  br i1 %185, label %208, label %199

199:                                              ; preds = %198
  %200 = shl i64 %191, 32
  %201 = add i64 %200, -4294967296
  %202 = ashr exact i64 %201, 32
  %203 = getelementptr inbounds i32, ptr %7, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !6
  %205 = getelementptr inbounds i32, ptr %6, i64 %191
  %206 = load i32, ptr %205, align 4, !tbaa !6
  %207 = add nsw i32 %206, %204
  store i32 %207, ptr %205, align 4, !tbaa !6
  br label %226

208:                                              ; preds = %181, %198
  %209 = phi i32 [ %193, %198 ], [ %182, %181 ]
  %210 = phi ptr [ %192, %198 ], [ %4, %181 ]
  %211 = phi i64 [ %191, %198 ], [ 0, %181 ]
  %212 = add nsw i32 %209, 1
  store i32 %212, ptr %210, align 4, !tbaa !6
  %213 = getelementptr inbounds i32, ptr %7, i64 %211
  %214 = load i32, ptr %213, align 4, !tbaa !6
  %215 = getelementptr inbounds i32, ptr %6, i64 %211
  br label %226

216:                                              ; preds = %190
  %217 = icmp eq i32 %193, %196
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  store i32 0, ptr %192, align 4, !tbaa !6
  %219 = getelementptr inbounds i32, ptr %8, i64 %191
  %220 = load i32, ptr %219, align 4, !tbaa !6
  %221 = getelementptr inbounds i32, ptr %6, i64 %191
  store i32 %220, ptr %221, align 4, !tbaa !6
  %222 = add nuw nsw i64 %191, 1
  %223 = icmp eq i64 %222, %39
  br i1 %223, label %231, label %190, !llvm.loop !926

224:                                              ; preds = %186, %216
  %225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

226:                                              ; preds = %199, %208
  %227 = phi ptr [ %215, %208 ], [ %192, %199 ]
  %228 = phi i32 [ %214, %208 ], [ 1, %199 ]
  %229 = load i32, ptr %227, align 4, !tbaa !6
  %230 = add nsw i32 %229, %228
  store i32 %230, ptr %227, align 4, !tbaa !6
  br label %231

231:                                              ; preds = %218, %226, %188, %178
  %232 = icmp eq i32 %102, %5
  br i1 %232, label %3802, label %101, !llvm.loop !927

233:                                              ; preds = %27
  %234 = getelementptr inbounds i32, ptr %3, i64 %19
  %235 = load i32, ptr %234, align 4, !tbaa !6
  %236 = icmp eq i32 %235, 0
  %237 = icmp sgt i32 %5, 0
  br i1 %236, label %247, label %238

238:                                              ; preds = %233
  br i1 %237, label %239, label %3802

239:                                              ; preds = %238
  %240 = icmp sgt i32 %13, 1
  %241 = icmp sgt i32 %13, 0
  %242 = add i32 %13, -2
  %243 = zext i32 %242 to i64
  %244 = zext i32 %13 to i64
  %245 = add nuw i32 %5, 1
  %246 = icmp eq i32 %13, 1
  br label %306

247:                                              ; preds = %233
  br i1 %237, label %248, label %3802

248:                                              ; preds = %247
  %249 = icmp sgt i32 %13, 0
  %250 = add nuw i32 %5, 1
  %251 = zext i32 %13 to i64
  %252 = icmp eq i32 %13, 1
  br label %253

253:                                              ; preds = %248, %304
  %254 = phi i32 [ 1, %248 ], [ %256, %304 ]
  %255 = trunc i32 %254 to i8
  store i8 %255, ptr %24, align 1, !tbaa !12
  %256 = add nuw i32 %254, 1
  br i1 %249, label %257, label %304

257:                                              ; preds = %253
  %258 = load i32, ptr %4, align 4, !tbaa !6
  %259 = load i32, ptr %12, align 4, !tbaa !6
  %260 = add nsw i32 %259, -1
  %261 = icmp slt i32 %258, %260
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = icmp eq i32 %258, %260
  br i1 %263, label %264, label %297

264:                                              ; preds = %262
  store i32 0, ptr %4, align 4, !tbaa !6
  %265 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %265, ptr %6, align 4, !tbaa !6
  br i1 %252, label %304, label %266

266:                                              ; preds = %264, %291
  %267 = phi i64 [ %295, %291 ], [ 1, %264 ]
  %268 = getelementptr inbounds i32, ptr %4, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !6
  %270 = getelementptr inbounds i32, ptr %12, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !6
  %272 = add nsw i32 %271, -1
  %273 = icmp slt i32 %269, %272
  br i1 %273, label %274, label %289

274:                                              ; preds = %266
  br i1 %261, label %281, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds i32, ptr %7, i64 %267
  %277 = load i32, ptr %276, align 4, !tbaa !6
  %278 = getelementptr inbounds i32, ptr %6, i64 %267
  %279 = load i32, ptr %278, align 4, !tbaa !6
  %280 = add nsw i32 %279, %277
  store i32 %280, ptr %278, align 4, !tbaa !6
  br label %299

281:                                              ; preds = %257, %274
  %282 = phi i32 [ %269, %274 ], [ %258, %257 ]
  %283 = phi ptr [ %268, %274 ], [ %4, %257 ]
  %284 = phi i64 [ %267, %274 ], [ 0, %257 ]
  %285 = add nsw i32 %282, 1
  store i32 %285, ptr %283, align 4, !tbaa !6
  %286 = getelementptr inbounds i32, ptr %7, i64 %284
  %287 = load i32, ptr %286, align 4, !tbaa !6
  %288 = getelementptr inbounds i32, ptr %6, i64 %284
  br label %299

289:                                              ; preds = %266
  %290 = icmp eq i32 %269, %272
  br i1 %290, label %291, label %297

291:                                              ; preds = %289
  store i32 0, ptr %268, align 4, !tbaa !6
  %292 = getelementptr inbounds i32, ptr %8, i64 %267
  %293 = load i32, ptr %292, align 4, !tbaa !6
  %294 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %293, ptr %294, align 4, !tbaa !6
  %295 = add nuw nsw i64 %267, 1
  %296 = icmp eq i64 %295, %251
  br i1 %296, label %304, label %266, !llvm.loop !928

297:                                              ; preds = %262, %289
  %298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

299:                                              ; preds = %275, %281
  %300 = phi ptr [ %288, %281 ], [ %268, %275 ]
  %301 = phi i32 [ %287, %281 ], [ 1, %275 ]
  %302 = load i32, ptr %300, align 4, !tbaa !6
  %303 = add nsw i32 %302, %301
  store i32 %303, ptr %300, align 4, !tbaa !6
  br label %304

304:                                              ; preds = %291, %299, %264, %253
  %305 = icmp eq i32 %254, %5
  br i1 %305, label %3802, label %253, !llvm.loop !929

306:                                              ; preds = %239, %436
  %307 = phi i32 [ 1, %239 ], [ %385, %436 ]
  %308 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %240, label %309, label %378

309:                                              ; preds = %306, %368
  %310 = phi i32 [ %377, %368 ], [ 0, %306 ]
  %311 = phi i64 [ %319, %368 ], [ %244, %306 ]
  %312 = phi i64 [ %376, %368 ], [ %243, %306 ]
  %313 = phi i32 [ %374, %368 ], [ %308, %306 ]
  %314 = sub i32 %242, %310
  %315 = tail call i32 @llvm.smin.i32(i32 %314, i32 0)
  %316 = sub i32 %314, %315
  %317 = zext i32 %316 to i64
  %318 = add nuw nsw i64 %317, 1
  %319 = add nsw i64 %311, -1
  %320 = icmp ult i32 %316, 31
  br i1 %320, label %356, label %321

321:                                              ; preds = %309
  %322 = and i64 %318, 8589934560
  %323 = sub i64 %312, %322
  br label %324

324:                                              ; preds = %324, %321
  %325 = phi i64 [ 0, %321 ], [ %348, %324 ]
  %326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %344, %324 ]
  %327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %345, %324 ]
  %328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %346, %324 ]
  %329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %321 ], [ %347, %324 ]
  %330 = sub i64 %312, %325
  %331 = getelementptr inbounds i32, ptr %11, i64 %330
  %332 = getelementptr inbounds i32, ptr %331, i64 -7
  %333 = load <8 x i32>, ptr %332, align 4, !tbaa !6
  %334 = shufflevector <8 x i32> %333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %335 = getelementptr inbounds i32, ptr %331, i64 -15
  %336 = load <8 x i32>, ptr %335, align 4, !tbaa !6
  %337 = shufflevector <8 x i32> %336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %338 = getelementptr inbounds i32, ptr %331, i64 -23
  %339 = load <8 x i32>, ptr %338, align 4, !tbaa !6
  %340 = shufflevector <8 x i32> %339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %341 = getelementptr inbounds i32, ptr %331, i64 -31
  %342 = load <8 x i32>, ptr %341, align 4, !tbaa !6
  %343 = shufflevector <8 x i32> %342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = mul <8 x i32> %334, %326
  %345 = mul <8 x i32> %337, %327
  %346 = mul <8 x i32> %340, %328
  %347 = mul <8 x i32> %343, %329
  %348 = add nuw i64 %325, 32
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %350, label %324, !llvm.loop !930

350:                                              ; preds = %324
  %351 = mul <8 x i32> %345, %344
  %352 = mul <8 x i32> %346, %351
  %353 = mul <8 x i32> %347, %352
  %354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %353)
  %355 = icmp eq i64 %318, %322
  br i1 %355, label %368, label %356

356:                                              ; preds = %309, %350
  %357 = phi i64 [ %312, %309 ], [ %323, %350 ]
  %358 = phi i32 [ 1, %309 ], [ %354, %350 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i64 [ %365, %359 ], [ %357, %356 ]
  %361 = phi i32 [ %364, %359 ], [ %358, %356 ]
  %362 = getelementptr inbounds i32, ptr %11, i64 %360
  %363 = load i32, ptr %362, align 4, !tbaa !6
  %364 = mul nsw i32 %363, %361
  %365 = add nsw i64 %360, -1
  %366 = trunc i64 %360 to i32
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %359, label %368, !llvm.loop !931

368:                                              ; preds = %359, %350
  %369 = phi i32 [ %354, %350 ], [ %364, %359 ]
  %370 = and i64 %319, 4294967295
  %371 = getelementptr inbounds i32, ptr %6, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !6
  %373 = mul nsw i32 %372, %369
  %374 = add nsw i32 %373, %313
  %375 = icmp sgt i64 %311, 2
  %376 = add nsw i64 %312, -1
  %377 = add i32 %310, 1
  br i1 %375, label %309, label %378, !llvm.loop !932

378:                                              ; preds = %368, %306
  %379 = phi i32 [ %308, %306 ], [ %374, %368 ]
  %380 = icmp slt i32 %379, %5
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

383:                                              ; preds = %378
  %384 = trunc i32 %307 to i8
  store i8 %384, ptr %24, align 1, !tbaa !12
  %385 = add nuw i32 %307, 1
  br i1 %241, label %386, label %436

386:                                              ; preds = %383
  %387 = load i32, ptr %4, align 4, !tbaa !6
  %388 = load i32, ptr %12, align 4, !tbaa !6
  %389 = add nsw i32 %388, -1
  %390 = icmp slt i32 %387, %389
  br i1 %390, label %413, label %391

391:                                              ; preds = %386
  %392 = icmp eq i32 %387, %389
  br i1 %392, label %393, label %429

393:                                              ; preds = %391
  store i32 0, ptr %4, align 4, !tbaa !6
  %394 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %394, ptr %6, align 4, !tbaa !6
  br i1 %246, label %436, label %395

395:                                              ; preds = %393, %423
  %396 = phi i64 [ %427, %423 ], [ 1, %393 ]
  %397 = getelementptr inbounds i32, ptr %4, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !6
  %399 = getelementptr inbounds i32, ptr %12, i64 %396
  %400 = load i32, ptr %399, align 4, !tbaa !6
  %401 = add nsw i32 %400, -1
  %402 = icmp slt i32 %398, %401
  br i1 %402, label %403, label %421

403:                                              ; preds = %395
  br i1 %390, label %413, label %404

404:                                              ; preds = %403
  %405 = shl i64 %396, 32
  %406 = add i64 %405, -4294967296
  %407 = ashr exact i64 %406, 32
  %408 = getelementptr inbounds i32, ptr %7, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !6
  %410 = getelementptr inbounds i32, ptr %6, i64 %396
  %411 = load i32, ptr %410, align 4, !tbaa !6
  %412 = add nsw i32 %411, %409
  store i32 %412, ptr %410, align 4, !tbaa !6
  br label %431

413:                                              ; preds = %386, %403
  %414 = phi i32 [ %398, %403 ], [ %387, %386 ]
  %415 = phi ptr [ %397, %403 ], [ %4, %386 ]
  %416 = phi i64 [ %396, %403 ], [ 0, %386 ]
  %417 = add nsw i32 %414, 1
  store i32 %417, ptr %415, align 4, !tbaa !6
  %418 = getelementptr inbounds i32, ptr %7, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !6
  %420 = getelementptr inbounds i32, ptr %6, i64 %416
  br label %431

421:                                              ; preds = %395
  %422 = icmp eq i32 %398, %401
  br i1 %422, label %423, label %429

423:                                              ; preds = %421
  store i32 0, ptr %397, align 4, !tbaa !6
  %424 = getelementptr inbounds i32, ptr %8, i64 %396
  %425 = load i32, ptr %424, align 4, !tbaa !6
  %426 = getelementptr inbounds i32, ptr %6, i64 %396
  store i32 %425, ptr %426, align 4, !tbaa !6
  %427 = add nuw nsw i64 %396, 1
  %428 = icmp eq i64 %427, %244
  br i1 %428, label %436, label %395, !llvm.loop !933

429:                                              ; preds = %391, %421
  %430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

431:                                              ; preds = %404, %413
  %432 = phi ptr [ %420, %413 ], [ %397, %404 ]
  %433 = phi i32 [ %419, %413 ], [ 1, %404 ]
  %434 = load i32, ptr %432, align 4, !tbaa !6
  %435 = add nsw i32 %434, %433
  store i32 %435, ptr %432, align 4, !tbaa !6
  br label %436

436:                                              ; preds = %423, %431, %393, %383
  %437 = icmp eq i32 %307, %5
  br i1 %437, label %3802, label %306, !llvm.loop !934

438:                                              ; preds = %27
  %439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1958, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

440:                                              ; preds = %18
  %441 = getelementptr inbounds ptr, ptr %16, i64 %19
  %442 = load ptr, ptr %441, align 8, !tbaa !10
  store i32 0, ptr %442, align 4, !tbaa !6
  %443 = icmp eq i32 %13, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %440
  store i32 1, ptr %442, align 4, !tbaa !6
  br label %3802

445:                                              ; preds = %440
  switch i32 %1, label %852 [
    i32 1, label %446
    i32 0, label %649
  ]

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %3, i64 %19
  %448 = load i32, ptr %447, align 4, !tbaa !6
  %449 = icmp eq i32 %448, 0
  %450 = icmp sgt i32 %5, 0
  br i1 %449, label %460, label %451

451:                                              ; preds = %446
  br i1 %450, label %452, label %3802

452:                                              ; preds = %451
  %453 = icmp sgt i32 %13, 1
  %454 = icmp sgt i32 %13, 0
  %455 = add i32 %13, -2
  %456 = zext i32 %455 to i64
  %457 = zext i32 %13 to i64
  %458 = add nuw i32 %5, 1
  %459 = icmp eq i32 %13, 1
  br label %518

460:                                              ; preds = %446
  br i1 %450, label %461, label %3802

461:                                              ; preds = %460
  %462 = icmp sgt i32 %13, 0
  %463 = add nuw i32 %5, 1
  %464 = zext i32 %13 to i64
  %465 = icmp eq i32 %13, 1
  br label %466

466:                                              ; preds = %461, %516
  %467 = phi i32 [ 1, %461 ], [ %468, %516 ]
  store i32 %467, ptr %442, align 4, !tbaa !6
  %468 = add nuw i32 %467, 1
  br i1 %462, label %469, label %516

469:                                              ; preds = %466
  %470 = load i32, ptr %4, align 4, !tbaa !6
  %471 = load i32, ptr %12, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %493, label %474

474:                                              ; preds = %469
  %475 = icmp eq i32 %470, %472
  br i1 %475, label %476, label %509

476:                                              ; preds = %474
  store i32 0, ptr %4, align 4, !tbaa !6
  %477 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %477, ptr %6, align 4, !tbaa !6
  br i1 %465, label %516, label %478

478:                                              ; preds = %476, %503
  %479 = phi i64 [ %507, %503 ], [ 1, %476 ]
  %480 = getelementptr inbounds i32, ptr %4, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !6
  %482 = getelementptr inbounds i32, ptr %12, i64 %479
  %483 = load i32, ptr %482, align 4, !tbaa !6
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %481, %484
  br i1 %485, label %486, label %501

486:                                              ; preds = %478
  br i1 %473, label %493, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds i32, ptr %7, i64 %479
  %489 = load i32, ptr %488, align 4, !tbaa !6
  %490 = getelementptr inbounds i32, ptr %6, i64 %479
  %491 = load i32, ptr %490, align 4, !tbaa !6
  %492 = add nsw i32 %491, %489
  store i32 %492, ptr %490, align 4, !tbaa !6
  br label %511

493:                                              ; preds = %469, %486
  %494 = phi i32 [ %481, %486 ], [ %470, %469 ]
  %495 = phi ptr [ %480, %486 ], [ %4, %469 ]
  %496 = phi i64 [ %479, %486 ], [ 0, %469 ]
  %497 = add nsw i32 %494, 1
  store i32 %497, ptr %495, align 4, !tbaa !6
  %498 = getelementptr inbounds i32, ptr %7, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !6
  %500 = getelementptr inbounds i32, ptr %6, i64 %496
  br label %511

501:                                              ; preds = %478
  %502 = icmp eq i32 %481, %484
  br i1 %502, label %503, label %509

503:                                              ; preds = %501
  store i32 0, ptr %480, align 4, !tbaa !6
  %504 = getelementptr inbounds i32, ptr %8, i64 %479
  %505 = load i32, ptr %504, align 4, !tbaa !6
  %506 = getelementptr inbounds i32, ptr %6, i64 %479
  store i32 %505, ptr %506, align 4, !tbaa !6
  %507 = add nuw nsw i64 %479, 1
  %508 = icmp eq i64 %507, %464
  br i1 %508, label %516, label %478, !llvm.loop !935

509:                                              ; preds = %474, %501
  %510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

511:                                              ; preds = %487, %493
  %512 = phi ptr [ %500, %493 ], [ %480, %487 ]
  %513 = phi i32 [ %499, %493 ], [ 1, %487 ]
  %514 = load i32, ptr %512, align 4, !tbaa !6
  %515 = add nsw i32 %514, %513
  store i32 %515, ptr %512, align 4, !tbaa !6
  br label %516

516:                                              ; preds = %503, %511, %476, %466
  %517 = icmp eq i32 %467, %5
  br i1 %517, label %3802, label %466, !llvm.loop !936

518:                                              ; preds = %452, %647
  %519 = phi i32 [ 1, %452 ], [ %596, %647 ]
  %520 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %453, label %521, label %590

521:                                              ; preds = %518, %580
  %522 = phi i32 [ %589, %580 ], [ 0, %518 ]
  %523 = phi i64 [ %531, %580 ], [ %457, %518 ]
  %524 = phi i64 [ %588, %580 ], [ %456, %518 ]
  %525 = phi i32 [ %586, %580 ], [ %520, %518 ]
  %526 = sub i32 %455, %522
  %527 = tail call i32 @llvm.smin.i32(i32 %526, i32 0)
  %528 = sub i32 %526, %527
  %529 = zext i32 %528 to i64
  %530 = add nuw nsw i64 %529, 1
  %531 = add nsw i64 %523, -1
  %532 = icmp ult i32 %528, 31
  br i1 %532, label %568, label %533

533:                                              ; preds = %521
  %534 = and i64 %530, 8589934560
  %535 = sub i64 %524, %534
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi i64 [ 0, %533 ], [ %560, %536 ]
  %538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %556, %536 ]
  %539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %557, %536 ]
  %540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %558, %536 ]
  %541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %533 ], [ %559, %536 ]
  %542 = sub i64 %524, %537
  %543 = getelementptr inbounds i32, ptr %11, i64 %542
  %544 = getelementptr inbounds i32, ptr %543, i64 -7
  %545 = load <8 x i32>, ptr %544, align 4, !tbaa !6
  %546 = shufflevector <8 x i32> %545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %547 = getelementptr inbounds i32, ptr %543, i64 -15
  %548 = load <8 x i32>, ptr %547, align 4, !tbaa !6
  %549 = shufflevector <8 x i32> %548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %550 = getelementptr inbounds i32, ptr %543, i64 -23
  %551 = load <8 x i32>, ptr %550, align 4, !tbaa !6
  %552 = shufflevector <8 x i32> %551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %553 = getelementptr inbounds i32, ptr %543, i64 -31
  %554 = load <8 x i32>, ptr %553, align 4, !tbaa !6
  %555 = shufflevector <8 x i32> %554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %556 = mul <8 x i32> %546, %538
  %557 = mul <8 x i32> %549, %539
  %558 = mul <8 x i32> %552, %540
  %559 = mul <8 x i32> %555, %541
  %560 = add nuw i64 %537, 32
  %561 = icmp eq i64 %560, %534
  br i1 %561, label %562, label %536, !llvm.loop !937

562:                                              ; preds = %536
  %563 = mul <8 x i32> %557, %556
  %564 = mul <8 x i32> %558, %563
  %565 = mul <8 x i32> %559, %564
  %566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %565)
  %567 = icmp eq i64 %530, %534
  br i1 %567, label %580, label %568

568:                                              ; preds = %521, %562
  %569 = phi i64 [ %524, %521 ], [ %535, %562 ]
  %570 = phi i32 [ 1, %521 ], [ %566, %562 ]
  br label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %577, %571 ], [ %569, %568 ]
  %573 = phi i32 [ %576, %571 ], [ %570, %568 ]
  %574 = getelementptr inbounds i32, ptr %11, i64 %572
  %575 = load i32, ptr %574, align 4, !tbaa !6
  %576 = mul nsw i32 %575, %573
  %577 = add nsw i64 %572, -1
  %578 = trunc i64 %572 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %571, label %580, !llvm.loop !938

580:                                              ; preds = %571, %562
  %581 = phi i32 [ %566, %562 ], [ %576, %571 ]
  %582 = and i64 %531, 4294967295
  %583 = getelementptr inbounds i32, ptr %6, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !6
  %585 = mul nsw i32 %584, %581
  %586 = add nsw i32 %585, %525
  %587 = icmp sgt i64 %523, 2
  %588 = add nsw i64 %524, -1
  %589 = add i32 %522, 1
  br i1 %587, label %521, label %590, !llvm.loop !939

590:                                              ; preds = %580, %518
  %591 = phi i32 [ %520, %518 ], [ %586, %580 ]
  %592 = icmp slt i32 %591, %5
  br i1 %592, label %595, label %593

593:                                              ; preds = %590
  %594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

595:                                              ; preds = %590
  store i32 %519, ptr %442, align 4, !tbaa !6
  %596 = add nuw i32 %519, 1
  br i1 %454, label %597, label %647

597:                                              ; preds = %595
  %598 = load i32, ptr %4, align 4, !tbaa !6
  %599 = load i32, ptr %12, align 4, !tbaa !6
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %598, %600
  br i1 %601, label %624, label %602

602:                                              ; preds = %597
  %603 = icmp eq i32 %598, %600
  br i1 %603, label %604, label %640

604:                                              ; preds = %602
  store i32 0, ptr %4, align 4, !tbaa !6
  %605 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %605, ptr %6, align 4, !tbaa !6
  br i1 %459, label %647, label %606

606:                                              ; preds = %604, %634
  %607 = phi i64 [ %638, %634 ], [ 1, %604 ]
  %608 = getelementptr inbounds i32, ptr %4, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !6
  %610 = getelementptr inbounds i32, ptr %12, i64 %607
  %611 = load i32, ptr %610, align 4, !tbaa !6
  %612 = add nsw i32 %611, -1
  %613 = icmp slt i32 %609, %612
  br i1 %613, label %614, label %632

614:                                              ; preds = %606
  br i1 %601, label %624, label %615

615:                                              ; preds = %614
  %616 = shl i64 %607, 32
  %617 = add i64 %616, -4294967296
  %618 = ashr exact i64 %617, 32
  %619 = getelementptr inbounds i32, ptr %7, i64 %618
  %620 = load i32, ptr %619, align 4, !tbaa !6
  %621 = getelementptr inbounds i32, ptr %6, i64 %607
  %622 = load i32, ptr %621, align 4, !tbaa !6
  %623 = add nsw i32 %622, %620
  store i32 %623, ptr %621, align 4, !tbaa !6
  br label %642

624:                                              ; preds = %597, %614
  %625 = phi i32 [ %609, %614 ], [ %598, %597 ]
  %626 = phi ptr [ %608, %614 ], [ %4, %597 ]
  %627 = phi i64 [ %607, %614 ], [ 0, %597 ]
  %628 = add nsw i32 %625, 1
  store i32 %628, ptr %626, align 4, !tbaa !6
  %629 = getelementptr inbounds i32, ptr %7, i64 %627
  %630 = load i32, ptr %629, align 4, !tbaa !6
  %631 = getelementptr inbounds i32, ptr %6, i64 %627
  br label %642

632:                                              ; preds = %606
  %633 = icmp eq i32 %609, %612
  br i1 %633, label %634, label %640

634:                                              ; preds = %632
  store i32 0, ptr %608, align 4, !tbaa !6
  %635 = getelementptr inbounds i32, ptr %8, i64 %607
  %636 = load i32, ptr %635, align 4, !tbaa !6
  %637 = getelementptr inbounds i32, ptr %6, i64 %607
  store i32 %636, ptr %637, align 4, !tbaa !6
  %638 = add nuw nsw i64 %607, 1
  %639 = icmp eq i64 %638, %457
  br i1 %639, label %647, label %606, !llvm.loop !940

640:                                              ; preds = %602, %632
  %641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

642:                                              ; preds = %615, %624
  %643 = phi ptr [ %631, %624 ], [ %608, %615 ]
  %644 = phi i32 [ %630, %624 ], [ 1, %615 ]
  %645 = load i32, ptr %643, align 4, !tbaa !6
  %646 = add nsw i32 %645, %644
  store i32 %646, ptr %643, align 4, !tbaa !6
  br label %647

647:                                              ; preds = %634, %642, %604, %595
  %648 = icmp eq i32 %519, %5
  br i1 %648, label %3802, label %518, !llvm.loop !941

649:                                              ; preds = %445
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !6
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3802

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %721

663:                                              ; preds = %649
  br i1 %653, label %664, label %3802

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 0
  %666 = add nuw i32 %5, 1
  %667 = zext i32 %13 to i64
  %668 = icmp eq i32 %13, 1
  br label %669

669:                                              ; preds = %664, %719
  %670 = phi i32 [ 1, %664 ], [ %671, %719 ]
  store i32 %670, ptr %442, align 4, !tbaa !6
  %671 = add nuw i32 %670, 1
  br i1 %665, label %672, label %719

672:                                              ; preds = %669
  %673 = load i32, ptr %4, align 4, !tbaa !6
  %674 = load i32, ptr %12, align 4, !tbaa !6
  %675 = add nsw i32 %674, -1
  %676 = icmp slt i32 %673, %675
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = icmp eq i32 %673, %675
  br i1 %678, label %679, label %712

679:                                              ; preds = %677
  store i32 0, ptr %4, align 4, !tbaa !6
  %680 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %680, ptr %6, align 4, !tbaa !6
  br i1 %668, label %719, label %681

681:                                              ; preds = %679, %706
  %682 = phi i64 [ %710, %706 ], [ 1, %679 ]
  %683 = getelementptr inbounds i32, ptr %4, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !6
  %685 = getelementptr inbounds i32, ptr %12, i64 %682
  %686 = load i32, ptr %685, align 4, !tbaa !6
  %687 = add nsw i32 %686, -1
  %688 = icmp slt i32 %684, %687
  br i1 %688, label %689, label %704

689:                                              ; preds = %681
  br i1 %676, label %696, label %690

690:                                              ; preds = %689
  %691 = getelementptr inbounds i32, ptr %7, i64 %682
  %692 = load i32, ptr %691, align 4, !tbaa !6
  %693 = getelementptr inbounds i32, ptr %6, i64 %682
  %694 = load i32, ptr %693, align 4, !tbaa !6
  %695 = add nsw i32 %694, %692
  store i32 %695, ptr %693, align 4, !tbaa !6
  br label %714

696:                                              ; preds = %672, %689
  %697 = phi i32 [ %684, %689 ], [ %673, %672 ]
  %698 = phi ptr [ %683, %689 ], [ %4, %672 ]
  %699 = phi i64 [ %682, %689 ], [ 0, %672 ]
  %700 = add nsw i32 %697, 1
  store i32 %700, ptr %698, align 4, !tbaa !6
  %701 = getelementptr inbounds i32, ptr %7, i64 %699
  %702 = load i32, ptr %701, align 4, !tbaa !6
  %703 = getelementptr inbounds i32, ptr %6, i64 %699
  br label %714

704:                                              ; preds = %681
  %705 = icmp eq i32 %684, %687
  br i1 %705, label %706, label %712

706:                                              ; preds = %704
  store i32 0, ptr %683, align 4, !tbaa !6
  %707 = getelementptr inbounds i32, ptr %8, i64 %682
  %708 = load i32, ptr %707, align 4, !tbaa !6
  %709 = getelementptr inbounds i32, ptr %6, i64 %682
  store i32 %708, ptr %709, align 4, !tbaa !6
  %710 = add nuw nsw i64 %682, 1
  %711 = icmp eq i64 %710, %667
  br i1 %711, label %719, label %681, !llvm.loop !942

712:                                              ; preds = %677, %704
  %713 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

714:                                              ; preds = %690, %696
  %715 = phi ptr [ %703, %696 ], [ %683, %690 ]
  %716 = phi i32 [ %702, %696 ], [ 1, %690 ]
  %717 = load i32, ptr %715, align 4, !tbaa !6
  %718 = add nsw i32 %717, %716
  store i32 %718, ptr %715, align 4, !tbaa !6
  br label %719

719:                                              ; preds = %706, %714, %679, %669
  %720 = icmp eq i32 %670, %5
  br i1 %720, label %3802, label %669, !llvm.loop !943

721:                                              ; preds = %655, %850
  %722 = phi i32 [ 1, %655 ], [ %799, %850 ]
  %723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %656, label %724, label %793

724:                                              ; preds = %721, %783
  %725 = phi i32 [ %792, %783 ], [ 0, %721 ]
  %726 = phi i64 [ %734, %783 ], [ %660, %721 ]
  %727 = phi i64 [ %791, %783 ], [ %659, %721 ]
  %728 = phi i32 [ %789, %783 ], [ %723, %721 ]
  %729 = sub i32 %658, %725
  %730 = tail call i32 @llvm.smin.i32(i32 %729, i32 0)
  %731 = sub i32 %729, %730
  %732 = zext i32 %731 to i64
  %733 = add nuw nsw i64 %732, 1
  %734 = add nsw i64 %726, -1
  %735 = icmp ult i32 %731, 31
  br i1 %735, label %771, label %736

736:                                              ; preds = %724
  %737 = and i64 %733, 8589934560
  %738 = sub i64 %727, %737
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i64 [ 0, %736 ], [ %763, %739 ]
  %741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %759, %739 ]
  %742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %760, %739 ]
  %743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %761, %739 ]
  %744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %736 ], [ %762, %739 ]
  %745 = sub i64 %727, %740
  %746 = getelementptr inbounds i32, ptr %11, i64 %745
  %747 = getelementptr inbounds i32, ptr %746, i64 -7
  %748 = load <8 x i32>, ptr %747, align 4, !tbaa !6
  %749 = shufflevector <8 x i32> %748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %750 = getelementptr inbounds i32, ptr %746, i64 -15
  %751 = load <8 x i32>, ptr %750, align 4, !tbaa !6
  %752 = shufflevector <8 x i32> %751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %753 = getelementptr inbounds i32, ptr %746, i64 -23
  %754 = load <8 x i32>, ptr %753, align 4, !tbaa !6
  %755 = shufflevector <8 x i32> %754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %756 = getelementptr inbounds i32, ptr %746, i64 -31
  %757 = load <8 x i32>, ptr %756, align 4, !tbaa !6
  %758 = shufflevector <8 x i32> %757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %759 = mul <8 x i32> %749, %741
  %760 = mul <8 x i32> %752, %742
  %761 = mul <8 x i32> %755, %743
  %762 = mul <8 x i32> %758, %744
  %763 = add nuw i64 %740, 32
  %764 = icmp eq i64 %763, %737
  br i1 %764, label %765, label %739, !llvm.loop !944

765:                                              ; preds = %739
  %766 = mul <8 x i32> %760, %759
  %767 = mul <8 x i32> %761, %766
  %768 = mul <8 x i32> %762, %767
  %769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %768)
  %770 = icmp eq i64 %733, %737
  br i1 %770, label %783, label %771

771:                                              ; preds = %724, %765
  %772 = phi i64 [ %727, %724 ], [ %738, %765 ]
  %773 = phi i32 [ 1, %724 ], [ %769, %765 ]
  br label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %780, %774 ], [ %772, %771 ]
  %776 = phi i32 [ %779, %774 ], [ %773, %771 ]
  %777 = getelementptr inbounds i32, ptr %11, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !6
  %779 = mul nsw i32 %778, %776
  %780 = add nsw i64 %775, -1
  %781 = trunc i64 %775 to i32
  %782 = icmp sgt i32 %781, 0
  br i1 %782, label %774, label %783, !llvm.loop !945

783:                                              ; preds = %774, %765
  %784 = phi i32 [ %769, %765 ], [ %779, %774 ]
  %785 = and i64 %734, 4294967295
  %786 = getelementptr inbounds i32, ptr %6, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = mul nsw i32 %787, %784
  %789 = add nsw i32 %788, %728
  %790 = icmp sgt i64 %726, 2
  %791 = add nsw i64 %727, -1
  %792 = add i32 %725, 1
  br i1 %790, label %724, label %793, !llvm.loop !946

793:                                              ; preds = %783, %721
  %794 = phi i32 [ %723, %721 ], [ %789, %783 ]
  %795 = icmp slt i32 %794, %5
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

798:                                              ; preds = %793
  store i32 %722, ptr %442, align 4, !tbaa !6
  %799 = add nuw i32 %722, 1
  br i1 %657, label %800, label %850

800:                                              ; preds = %798
  %801 = load i32, ptr %4, align 4, !tbaa !6
  %802 = load i32, ptr %12, align 4, !tbaa !6
  %803 = add nsw i32 %802, -1
  %804 = icmp slt i32 %801, %803
  br i1 %804, label %827, label %805

805:                                              ; preds = %800
  %806 = icmp eq i32 %801, %803
  br i1 %806, label %807, label %843

807:                                              ; preds = %805
  store i32 0, ptr %4, align 4, !tbaa !6
  %808 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %808, ptr %6, align 4, !tbaa !6
  br i1 %662, label %850, label %809

809:                                              ; preds = %807, %837
  %810 = phi i64 [ %841, %837 ], [ 1, %807 ]
  %811 = getelementptr inbounds i32, ptr %4, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !6
  %813 = getelementptr inbounds i32, ptr %12, i64 %810
  %814 = load i32, ptr %813, align 4, !tbaa !6
  %815 = add nsw i32 %814, -1
  %816 = icmp slt i32 %812, %815
  br i1 %816, label %817, label %835

817:                                              ; preds = %809
  br i1 %804, label %827, label %818

818:                                              ; preds = %817
  %819 = shl i64 %810, 32
  %820 = add i64 %819, -4294967296
  %821 = ashr exact i64 %820, 32
  %822 = getelementptr inbounds i32, ptr %7, i64 %821
  %823 = load i32, ptr %822, align 4, !tbaa !6
  %824 = getelementptr inbounds i32, ptr %6, i64 %810
  %825 = load i32, ptr %824, align 4, !tbaa !6
  %826 = add nsw i32 %825, %823
  store i32 %826, ptr %824, align 4, !tbaa !6
  br label %845

827:                                              ; preds = %800, %817
  %828 = phi i32 [ %812, %817 ], [ %801, %800 ]
  %829 = phi ptr [ %811, %817 ], [ %4, %800 ]
  %830 = phi i64 [ %810, %817 ], [ 0, %800 ]
  %831 = add nsw i32 %828, 1
  store i32 %831, ptr %829, align 4, !tbaa !6
  %832 = getelementptr inbounds i32, ptr %7, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !6
  %834 = getelementptr inbounds i32, ptr %6, i64 %830
  br label %845

835:                                              ; preds = %809
  %836 = icmp eq i32 %812, %815
  br i1 %836, label %837, label %843

837:                                              ; preds = %835
  store i32 0, ptr %811, align 4, !tbaa !6
  %838 = getelementptr inbounds i32, ptr %8, i64 %810
  %839 = load i32, ptr %838, align 4, !tbaa !6
  %840 = getelementptr inbounds i32, ptr %6, i64 %810
  store i32 %839, ptr %840, align 4, !tbaa !6
  %841 = add nuw nsw i64 %810, 1
  %842 = icmp eq i64 %841, %660
  br i1 %842, label %850, label %809, !llvm.loop !947

843:                                              ; preds = %805, %835
  %844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

845:                                              ; preds = %818, %827
  %846 = phi ptr [ %834, %827 ], [ %811, %818 ]
  %847 = phi i32 [ %833, %827 ], [ 1, %818 ]
  %848 = load i32, ptr %846, align 4, !tbaa !6
  %849 = add nsw i32 %848, %847
  store i32 %849, ptr %846, align 4, !tbaa !6
  br label %850

850:                                              ; preds = %837, %845, %807, %798
  %851 = icmp eq i32 %722, %5
  br i1 %851, label %3802, label %721, !llvm.loop !948

852:                                              ; preds = %445
  %853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1961, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

854:                                              ; preds = %18
  %855 = getelementptr inbounds ptr, ptr %16, i64 %19
  %856 = load ptr, ptr %855, align 8, !tbaa !10
  store i8 0, ptr %856, align 1, !tbaa !12
  %857 = icmp eq i32 %13, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %854
  store i8 1, ptr %856, align 1, !tbaa !12
  br label %3802

859:                                              ; preds = %854
  switch i32 %1, label %1270 [
    i32 1, label %860
    i32 0, label %1065
  ]

860:                                              ; preds = %859
  %861 = getelementptr inbounds i32, ptr %3, i64 %19
  %862 = load i32, ptr %861, align 4, !tbaa !6
  %863 = icmp eq i32 %862, 0
  %864 = icmp sgt i32 %5, 0
  br i1 %863, label %874, label %865

865:                                              ; preds = %860
  br i1 %864, label %866, label %3802

866:                                              ; preds = %865
  %867 = icmp sgt i32 %13, 1
  %868 = icmp sgt i32 %13, 0
  %869 = add i32 %13, -2
  %870 = zext i32 %869 to i64
  %871 = zext i32 %13 to i64
  %872 = add nuw i32 %5, 1
  %873 = icmp eq i32 %13, 1
  br label %933

874:                                              ; preds = %860
  br i1 %864, label %875, label %3802

875:                                              ; preds = %874
  %876 = icmp sgt i32 %13, 0
  %877 = add nuw i32 %5, 1
  %878 = zext i32 %13 to i64
  %879 = icmp eq i32 %13, 1
  br label %880

880:                                              ; preds = %875, %931
  %881 = phi i32 [ 1, %875 ], [ %883, %931 ]
  %882 = trunc i32 %881 to i8
  store i8 %882, ptr %856, align 1, !tbaa !12
  %883 = add nuw i32 %881, 1
  br i1 %876, label %884, label %931

884:                                              ; preds = %880
  %885 = load i32, ptr %4, align 4, !tbaa !6
  %886 = load i32, ptr %12, align 4, !tbaa !6
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %908, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %924

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %892, ptr %6, align 4, !tbaa !6
  br i1 %879, label %931, label %893

893:                                              ; preds = %891, %918
  %894 = phi i64 [ %922, %918 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !6
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %916

901:                                              ; preds = %893
  br i1 %888, label %908, label %902

902:                                              ; preds = %901
  %903 = getelementptr inbounds i32, ptr %7, i64 %894
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = getelementptr inbounds i32, ptr %6, i64 %894
  %906 = load i32, ptr %905, align 4, !tbaa !6
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !6
  br label %926

908:                                              ; preds = %884, %901
  %909 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %910 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %911 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !6
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %893
  %917 = icmp eq i32 %896, %899
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %895, align 4, !tbaa !6
  %919 = getelementptr inbounds i32, ptr %8, i64 %894
  %920 = load i32, ptr %919, align 4, !tbaa !6
  %921 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %920, ptr %921, align 4, !tbaa !6
  %922 = add nuw nsw i64 %894, 1
  %923 = icmp eq i64 %922, %878
  br i1 %923, label %931, label %893, !llvm.loop !949

924:                                              ; preds = %889, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

926:                                              ; preds = %902, %908
  %927 = phi ptr [ %915, %908 ], [ %895, %902 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %902 ]
  %929 = load i32, ptr %927, align 4, !tbaa !6
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !6
  br label %931

931:                                              ; preds = %918, %926, %891, %880
  %932 = icmp eq i32 %881, %5
  br i1 %932, label %3802, label %880, !llvm.loop !950

933:                                              ; preds = %866, %1063
  %934 = phi i32 [ 1, %866 ], [ %1012, %1063 ]
  %935 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %867, label %936, label %1005

936:                                              ; preds = %933, %995
  %937 = phi i32 [ %1004, %995 ], [ 0, %933 ]
  %938 = phi i64 [ %946, %995 ], [ %871, %933 ]
  %939 = phi i64 [ %1003, %995 ], [ %870, %933 ]
  %940 = phi i32 [ %1001, %995 ], [ %935, %933 ]
  %941 = sub i32 %869, %937
  %942 = tail call i32 @llvm.smin.i32(i32 %941, i32 0)
  %943 = sub i32 %941, %942
  %944 = zext i32 %943 to i64
  %945 = add nuw nsw i64 %944, 1
  %946 = add nsw i64 %938, -1
  %947 = icmp ult i32 %943, 31
  br i1 %947, label %983, label %948

948:                                              ; preds = %936
  %949 = and i64 %945, 8589934560
  %950 = sub i64 %939, %949
  br label %951

951:                                              ; preds = %951, %948
  %952 = phi i64 [ 0, %948 ], [ %975, %951 ]
  %953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %971, %951 ]
  %954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %972, %951 ]
  %955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %973, %951 ]
  %956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %948 ], [ %974, %951 ]
  %957 = sub i64 %939, %952
  %958 = getelementptr inbounds i32, ptr %11, i64 %957
  %959 = getelementptr inbounds i32, ptr %958, i64 -7
  %960 = load <8 x i32>, ptr %959, align 4, !tbaa !6
  %961 = shufflevector <8 x i32> %960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %962 = getelementptr inbounds i32, ptr %958, i64 -15
  %963 = load <8 x i32>, ptr %962, align 4, !tbaa !6
  %964 = shufflevector <8 x i32> %963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %965 = getelementptr inbounds i32, ptr %958, i64 -23
  %966 = load <8 x i32>, ptr %965, align 4, !tbaa !6
  %967 = shufflevector <8 x i32> %966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %968 = getelementptr inbounds i32, ptr %958, i64 -31
  %969 = load <8 x i32>, ptr %968, align 4, !tbaa !6
  %970 = shufflevector <8 x i32> %969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %971 = mul <8 x i32> %961, %953
  %972 = mul <8 x i32> %964, %954
  %973 = mul <8 x i32> %967, %955
  %974 = mul <8 x i32> %970, %956
  %975 = add nuw i64 %952, 32
  %976 = icmp eq i64 %975, %949
  br i1 %976, label %977, label %951, !llvm.loop !951

977:                                              ; preds = %951
  %978 = mul <8 x i32> %972, %971
  %979 = mul <8 x i32> %973, %978
  %980 = mul <8 x i32> %974, %979
  %981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %980)
  %982 = icmp eq i64 %945, %949
  br i1 %982, label %995, label %983

983:                                              ; preds = %936, %977
  %984 = phi i64 [ %939, %936 ], [ %950, %977 ]
  %985 = phi i32 [ 1, %936 ], [ %981, %977 ]
  br label %986

986:                                              ; preds = %983, %986
  %987 = phi i64 [ %992, %986 ], [ %984, %983 ]
  %988 = phi i32 [ %991, %986 ], [ %985, %983 ]
  %989 = getelementptr inbounds i32, ptr %11, i64 %987
  %990 = load i32, ptr %989, align 4, !tbaa !6
  %991 = mul nsw i32 %990, %988
  %992 = add nsw i64 %987, -1
  %993 = trunc i64 %987 to i32
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %986, label %995, !llvm.loop !952

995:                                              ; preds = %986, %977
  %996 = phi i32 [ %981, %977 ], [ %991, %986 ]
  %997 = and i64 %946, 4294967295
  %998 = getelementptr inbounds i32, ptr %6, i64 %997
  %999 = load i32, ptr %998, align 4, !tbaa !6
  %1000 = mul nsw i32 %999, %996
  %1001 = add nsw i32 %1000, %940
  %1002 = icmp sgt i64 %938, 2
  %1003 = add nsw i64 %939, -1
  %1004 = add i32 %937, 1
  br i1 %1002, label %936, label %1005, !llvm.loop !953

1005:                                             ; preds = %995, %933
  %1006 = phi i32 [ %935, %933 ], [ %1001, %995 ]
  %1007 = icmp slt i32 %1006, %5
  br i1 %1007, label %1010, label %1008

1008:                                             ; preds = %1005
  %1009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1010:                                             ; preds = %1005
  %1011 = trunc i32 %934 to i8
  store i8 %1011, ptr %856, align 1, !tbaa !12
  %1012 = add nuw i32 %934, 1
  br i1 %868, label %1013, label %1063

1013:                                             ; preds = %1010
  %1014 = load i32, ptr %4, align 4, !tbaa !6
  %1015 = load i32, ptr %12, align 4, !tbaa !6
  %1016 = add nsw i32 %1015, -1
  %1017 = icmp slt i32 %1014, %1016
  br i1 %1017, label %1040, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp eq i32 %1014, %1016
  br i1 %1019, label %1020, label %1056

1020:                                             ; preds = %1018
  store i32 0, ptr %4, align 4, !tbaa !6
  %1021 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1021, ptr %6, align 4, !tbaa !6
  br i1 %873, label %1063, label %1022

1022:                                             ; preds = %1020, %1050
  %1023 = phi i64 [ %1054, %1050 ], [ 1, %1020 ]
  %1024 = getelementptr inbounds i32, ptr %4, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !6
  %1026 = getelementptr inbounds i32, ptr %12, i64 %1023
  %1027 = load i32, ptr %1026, align 4, !tbaa !6
  %1028 = add nsw i32 %1027, -1
  %1029 = icmp slt i32 %1025, %1028
  br i1 %1029, label %1030, label %1048

1030:                                             ; preds = %1022
  br i1 %1017, label %1040, label %1031

1031:                                             ; preds = %1030
  %1032 = shl i64 %1023, 32
  %1033 = add i64 %1032, -4294967296
  %1034 = ashr exact i64 %1033, 32
  %1035 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !6
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1038 = load i32, ptr %1037, align 4, !tbaa !6
  %1039 = add nsw i32 %1038, %1036
  store i32 %1039, ptr %1037, align 4, !tbaa !6
  br label %1058

1040:                                             ; preds = %1013, %1030
  %1041 = phi i32 [ %1025, %1030 ], [ %1014, %1013 ]
  %1042 = phi ptr [ %1024, %1030 ], [ %4, %1013 ]
  %1043 = phi i64 [ %1023, %1030 ], [ 0, %1013 ]
  %1044 = add nsw i32 %1041, 1
  store i32 %1044, ptr %1042, align 4, !tbaa !6
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1043
  %1046 = load i32, ptr %1045, align 4, !tbaa !6
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1043
  br label %1058

1048:                                             ; preds = %1022
  %1049 = icmp eq i32 %1025, %1028
  br i1 %1049, label %1050, label %1056

1050:                                             ; preds = %1048
  store i32 0, ptr %1024, align 4, !tbaa !6
  %1051 = getelementptr inbounds i32, ptr %8, i64 %1023
  %1052 = load i32, ptr %1051, align 4, !tbaa !6
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1023
  store i32 %1052, ptr %1053, align 4, !tbaa !6
  %1054 = add nuw nsw i64 %1023, 1
  %1055 = icmp eq i64 %1054, %871
  br i1 %1055, label %1063, label %1022, !llvm.loop !954

1056:                                             ; preds = %1018, %1048
  %1057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1058:                                             ; preds = %1031, %1040
  %1059 = phi ptr [ %1047, %1040 ], [ %1024, %1031 ]
  %1060 = phi i32 [ %1046, %1040 ], [ 1, %1031 ]
  %1061 = load i32, ptr %1059, align 4, !tbaa !6
  %1062 = add nsw i32 %1061, %1060
  store i32 %1062, ptr %1059, align 4, !tbaa !6
  br label %1063

1063:                                             ; preds = %1050, %1058, %1020, %1010
  %1064 = icmp eq i32 %934, %5
  br i1 %1064, label %3802, label %933, !llvm.loop !955

1065:                                             ; preds = %859
  %1066 = getelementptr inbounds i32, ptr %3, i64 %19
  %1067 = load i32, ptr %1066, align 4, !tbaa !6
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp sgt i32 %5, 0
  br i1 %1068, label %1079, label %1070

1070:                                             ; preds = %1065
  br i1 %1069, label %1071, label %3802

1071:                                             ; preds = %1070
  %1072 = icmp sgt i32 %13, 1
  %1073 = icmp sgt i32 %13, 0
  %1074 = add i32 %13, -2
  %1075 = zext i32 %1074 to i64
  %1076 = zext i32 %13 to i64
  %1077 = add nuw i32 %5, 1
  %1078 = icmp eq i32 %13, 1
  br label %1138

1079:                                             ; preds = %1065
  br i1 %1069, label %1080, label %3802

1080:                                             ; preds = %1079
  %1081 = icmp sgt i32 %13, 0
  %1082 = add nuw i32 %5, 1
  %1083 = zext i32 %13 to i64
  %1084 = icmp eq i32 %13, 1
  br label %1085

1085:                                             ; preds = %1080, %1136
  %1086 = phi i32 [ 1, %1080 ], [ %1088, %1136 ]
  %1087 = trunc i32 %1086 to i8
  store i8 %1087, ptr %856, align 1, !tbaa !12
  %1088 = add nuw i32 %1086, 1
  br i1 %1081, label %1089, label %1136

1089:                                             ; preds = %1085
  %1090 = load i32, ptr %4, align 4, !tbaa !6
  %1091 = load i32, ptr %12, align 4, !tbaa !6
  %1092 = add nsw i32 %1091, -1
  %1093 = icmp slt i32 %1090, %1092
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1089
  %1095 = icmp eq i32 %1090, %1092
  br i1 %1095, label %1096, label %1129

1096:                                             ; preds = %1094
  store i32 0, ptr %4, align 4, !tbaa !6
  %1097 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1097, ptr %6, align 4, !tbaa !6
  br i1 %1084, label %1136, label %1098

1098:                                             ; preds = %1096, %1123
  %1099 = phi i64 [ %1127, %1123 ], [ 1, %1096 ]
  %1100 = getelementptr inbounds i32, ptr %4, i64 %1099
  %1101 = load i32, ptr %1100, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %12, i64 %1099
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = add nsw i32 %1103, -1
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1106, label %1121

1106:                                             ; preds = %1098
  br i1 %1093, label %1113, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds i32, ptr %7, i64 %1099
  %1109 = load i32, ptr %1108, align 4, !tbaa !6
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1099
  %1111 = load i32, ptr %1110, align 4, !tbaa !6
  %1112 = add nsw i32 %1111, %1109
  store i32 %1112, ptr %1110, align 4, !tbaa !6
  br label %1131

1113:                                             ; preds = %1089, %1106
  %1114 = phi i32 [ %1101, %1106 ], [ %1090, %1089 ]
  %1115 = phi ptr [ %1100, %1106 ], [ %4, %1089 ]
  %1116 = phi i64 [ %1099, %1106 ], [ 0, %1089 ]
  %1117 = add nsw i32 %1114, 1
  store i32 %1117, ptr %1115, align 4, !tbaa !6
  %1118 = getelementptr inbounds i32, ptr %7, i64 %1116
  %1119 = load i32, ptr %1118, align 4, !tbaa !6
  %1120 = getelementptr inbounds i32, ptr %6, i64 %1116
  br label %1131

1121:                                             ; preds = %1098
  %1122 = icmp eq i32 %1101, %1104
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1121
  store i32 0, ptr %1100, align 4, !tbaa !6
  %1124 = getelementptr inbounds i32, ptr %8, i64 %1099
  %1125 = load i32, ptr %1124, align 4, !tbaa !6
  %1126 = getelementptr inbounds i32, ptr %6, i64 %1099
  store i32 %1125, ptr %1126, align 4, !tbaa !6
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %1083
  br i1 %1128, label %1136, label %1098, !llvm.loop !956

1129:                                             ; preds = %1094, %1121
  %1130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1131:                                             ; preds = %1107, %1113
  %1132 = phi ptr [ %1120, %1113 ], [ %1100, %1107 ]
  %1133 = phi i32 [ %1119, %1113 ], [ 1, %1107 ]
  %1134 = load i32, ptr %1132, align 4, !tbaa !6
  %1135 = add nsw i32 %1134, %1133
  store i32 %1135, ptr %1132, align 4, !tbaa !6
  br label %1136

1136:                                             ; preds = %1123, %1131, %1096, %1085
  %1137 = icmp eq i32 %1086, %5
  br i1 %1137, label %3802, label %1085, !llvm.loop !957

1138:                                             ; preds = %1071, %1268
  %1139 = phi i32 [ 1, %1071 ], [ %1217, %1268 ]
  %1140 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1072, label %1141, label %1210

1141:                                             ; preds = %1138, %1200
  %1142 = phi i32 [ %1209, %1200 ], [ 0, %1138 ]
  %1143 = phi i64 [ %1151, %1200 ], [ %1076, %1138 ]
  %1144 = phi i64 [ %1208, %1200 ], [ %1075, %1138 ]
  %1145 = phi i32 [ %1206, %1200 ], [ %1140, %1138 ]
  %1146 = sub i32 %1074, %1142
  %1147 = tail call i32 @llvm.smin.i32(i32 %1146, i32 0)
  %1148 = sub i32 %1146, %1147
  %1149 = zext i32 %1148 to i64
  %1150 = add nuw nsw i64 %1149, 1
  %1151 = add nsw i64 %1143, -1
  %1152 = icmp ult i32 %1148, 31
  br i1 %1152, label %1188, label %1153

1153:                                             ; preds = %1141
  %1154 = and i64 %1150, 8589934560
  %1155 = sub i64 %1144, %1154
  br label %1156

1156:                                             ; preds = %1156, %1153
  %1157 = phi i64 [ 0, %1153 ], [ %1180, %1156 ]
  %1158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1176, %1156 ]
  %1159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1177, %1156 ]
  %1160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1178, %1156 ]
  %1161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1153 ], [ %1179, %1156 ]
  %1162 = sub i64 %1144, %1157
  %1163 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1164 = getelementptr inbounds i32, ptr %1163, i64 -7
  %1165 = load <8 x i32>, ptr %1164, align 4, !tbaa !6
  %1166 = shufflevector <8 x i32> %1165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1167 = getelementptr inbounds i32, ptr %1163, i64 -15
  %1168 = load <8 x i32>, ptr %1167, align 4, !tbaa !6
  %1169 = shufflevector <8 x i32> %1168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1170 = getelementptr inbounds i32, ptr %1163, i64 -23
  %1171 = load <8 x i32>, ptr %1170, align 4, !tbaa !6
  %1172 = shufflevector <8 x i32> %1171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1173 = getelementptr inbounds i32, ptr %1163, i64 -31
  %1174 = load <8 x i32>, ptr %1173, align 4, !tbaa !6
  %1175 = shufflevector <8 x i32> %1174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1176 = mul <8 x i32> %1166, %1158
  %1177 = mul <8 x i32> %1169, %1159
  %1178 = mul <8 x i32> %1172, %1160
  %1179 = mul <8 x i32> %1175, %1161
  %1180 = add nuw i64 %1157, 32
  %1181 = icmp eq i64 %1180, %1154
  br i1 %1181, label %1182, label %1156, !llvm.loop !958

1182:                                             ; preds = %1156
  %1183 = mul <8 x i32> %1177, %1176
  %1184 = mul <8 x i32> %1178, %1183
  %1185 = mul <8 x i32> %1179, %1184
  %1186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1185)
  %1187 = icmp eq i64 %1150, %1154
  br i1 %1187, label %1200, label %1188

1188:                                             ; preds = %1141, %1182
  %1189 = phi i64 [ %1144, %1141 ], [ %1155, %1182 ]
  %1190 = phi i32 [ 1, %1141 ], [ %1186, %1182 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, ptr %11, i64 %1192
  %1195 = load i32, ptr %1194, align 4, !tbaa !6
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nsw i64 %1192, -1
  %1198 = trunc i64 %1192 to i32
  %1199 = icmp sgt i32 %1198, 0
  br i1 %1199, label %1191, label %1200, !llvm.loop !959

1200:                                             ; preds = %1191, %1182
  %1201 = phi i32 [ %1186, %1182 ], [ %1196, %1191 ]
  %1202 = and i64 %1151, 4294967295
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !6
  %1205 = mul nsw i32 %1204, %1201
  %1206 = add nsw i32 %1205, %1145
  %1207 = icmp sgt i64 %1143, 2
  %1208 = add nsw i64 %1144, -1
  %1209 = add i32 %1142, 1
  br i1 %1207, label %1141, label %1210, !llvm.loop !960

1210:                                             ; preds = %1200, %1138
  %1211 = phi i32 [ %1140, %1138 ], [ %1206, %1200 ]
  %1212 = icmp slt i32 %1211, %5
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1210
  %1214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1215:                                             ; preds = %1210
  %1216 = trunc i32 %1139 to i8
  store i8 %1216, ptr %856, align 1, !tbaa !12
  %1217 = add nuw i32 %1139, 1
  br i1 %1073, label %1218, label %1268

1218:                                             ; preds = %1215
  %1219 = load i32, ptr %4, align 4, !tbaa !6
  %1220 = load i32, ptr %12, align 4, !tbaa !6
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1219, %1221
  br i1 %1222, label %1245, label %1223

1223:                                             ; preds = %1218
  %1224 = icmp eq i32 %1219, %1221
  br i1 %1224, label %1225, label %1261

1225:                                             ; preds = %1223
  store i32 0, ptr %4, align 4, !tbaa !6
  %1226 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1226, ptr %6, align 4, !tbaa !6
  br i1 %1078, label %1268, label %1227

1227:                                             ; preds = %1225, %1255
  %1228 = phi i64 [ %1259, %1255 ], [ 1, %1225 ]
  %1229 = getelementptr inbounds i32, ptr %4, i64 %1228
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %12, i64 %1228
  %1232 = load i32, ptr %1231, align 4, !tbaa !6
  %1233 = add nsw i32 %1232, -1
  %1234 = icmp slt i32 %1230, %1233
  br i1 %1234, label %1235, label %1253

1235:                                             ; preds = %1227
  br i1 %1222, label %1245, label %1236

1236:                                             ; preds = %1235
  %1237 = shl i64 %1228, 32
  %1238 = add i64 %1237, -4294967296
  %1239 = ashr exact i64 %1238, 32
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !6
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1228
  %1243 = load i32, ptr %1242, align 4, !tbaa !6
  %1244 = add nsw i32 %1243, %1241
  store i32 %1244, ptr %1242, align 4, !tbaa !6
  br label %1263

1245:                                             ; preds = %1218, %1235
  %1246 = phi i32 [ %1230, %1235 ], [ %1219, %1218 ]
  %1247 = phi ptr [ %1229, %1235 ], [ %4, %1218 ]
  %1248 = phi i64 [ %1228, %1235 ], [ 0, %1218 ]
  %1249 = add nsw i32 %1246, 1
  store i32 %1249, ptr %1247, align 4, !tbaa !6
  %1250 = getelementptr inbounds i32, ptr %7, i64 %1248
  %1251 = load i32, ptr %1250, align 4, !tbaa !6
  %1252 = getelementptr inbounds i32, ptr %6, i64 %1248
  br label %1263

1253:                                             ; preds = %1227
  %1254 = icmp eq i32 %1230, %1233
  br i1 %1254, label %1255, label %1261

1255:                                             ; preds = %1253
  store i32 0, ptr %1229, align 4, !tbaa !6
  %1256 = getelementptr inbounds i32, ptr %8, i64 %1228
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = getelementptr inbounds i32, ptr %6, i64 %1228
  store i32 %1257, ptr %1258, align 4, !tbaa !6
  %1259 = add nuw nsw i64 %1228, 1
  %1260 = icmp eq i64 %1259, %1076
  br i1 %1260, label %1268, label %1227, !llvm.loop !961

1261:                                             ; preds = %1223, %1253
  %1262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1263:                                             ; preds = %1236, %1245
  %1264 = phi ptr [ %1252, %1245 ], [ %1229, %1236 ]
  %1265 = phi i32 [ %1251, %1245 ], [ 1, %1236 ]
  %1266 = load i32, ptr %1264, align 4, !tbaa !6
  %1267 = add nsw i32 %1266, %1265
  store i32 %1267, ptr %1264, align 4, !tbaa !6
  br label %1268

1268:                                             ; preds = %1255, %1263, %1225, %1215
  %1269 = icmp eq i32 %1139, %5
  br i1 %1269, label %3802, label %1138, !llvm.loop !962

1270:                                             ; preds = %859
  %1271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1965, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1272:                                             ; preds = %18
  %1273 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1274 = load ptr, ptr %1273, align 8, !tbaa !10
  store i16 0, ptr %1274, align 2, !tbaa !59
  %1275 = icmp eq i32 %13, 0
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1272
  store i16 1, ptr %1274, align 2, !tbaa !59
  br label %3802

1277:                                             ; preds = %1272
  switch i32 %1, label %1690 [
    i32 1, label %1278
    i32 0, label %1484
  ]

1278:                                             ; preds = %1277
  %1279 = getelementptr inbounds i32, ptr %3, i64 %19
  %1280 = load i32, ptr %1279, align 4, !tbaa !6
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp sgt i32 %5, 0
  br i1 %1281, label %1292, label %1283

1283:                                             ; preds = %1278
  br i1 %1282, label %1284, label %3802

1284:                                             ; preds = %1283
  %1285 = icmp sgt i32 %13, 1
  %1286 = icmp sgt i32 %13, 0
  %1287 = add i32 %13, -2
  %1288 = zext i32 %1287 to i64
  %1289 = zext i32 %13 to i64
  %1290 = add nuw i32 %5, 1
  %1291 = icmp eq i32 %13, 1
  br label %1352

1292:                                             ; preds = %1278
  br i1 %1282, label %1293, label %3802

1293:                                             ; preds = %1292
  %1294 = icmp sgt i32 %13, 0
  %1295 = trunc i32 %5 to i16
  %1296 = add nuw i32 %5, 1
  %1297 = zext i32 %13 to i64
  %1298 = icmp eq i32 %13, 1
  br label %1299

1299:                                             ; preds = %1293, %1350
  %1300 = phi i32 [ 1, %1293 ], [ %1301, %1350 ]
  %1301 = add nuw i32 %1300, 1
  br i1 %1294, label %1302, label %1350

1302:                                             ; preds = %1299
  %1303 = load i32, ptr %4, align 4, !tbaa !6
  %1304 = load i32, ptr %12, align 4, !tbaa !6
  %1305 = add nsw i32 %1304, -1
  %1306 = icmp slt i32 %1303, %1305
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1302
  %1308 = icmp eq i32 %1303, %1305
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1307
  store i32 0, ptr %4, align 4, !tbaa !6
  %1310 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1310, ptr %6, align 4, !tbaa !6
  br i1 %1298, label %1350, label %1311

1311:                                             ; preds = %1309, %1336
  %1312 = phi i64 [ %1340, %1336 ], [ 1, %1309 ]
  %1313 = getelementptr inbounds i32, ptr %4, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !6
  %1315 = getelementptr inbounds i32, ptr %12, i64 %1312
  %1316 = load i32, ptr %1315, align 4, !tbaa !6
  %1317 = add nsw i32 %1316, -1
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1319, label %1334

1319:                                             ; preds = %1311
  br i1 %1306, label %1326, label %1320

1320:                                             ; preds = %1319
  %1321 = getelementptr inbounds i32, ptr %7, i64 %1312
  %1322 = load i32, ptr %1321, align 4, !tbaa !6
  %1323 = getelementptr inbounds i32, ptr %6, i64 %1312
  %1324 = load i32, ptr %1323, align 4, !tbaa !6
  %1325 = add nsw i32 %1324, %1322
  store i32 %1325, ptr %1323, align 4, !tbaa !6
  br label %1345

1326:                                             ; preds = %1302, %1319
  %1327 = phi i32 [ %1314, %1319 ], [ %1303, %1302 ]
  %1328 = phi ptr [ %1313, %1319 ], [ %4, %1302 ]
  %1329 = phi i64 [ %1312, %1319 ], [ 0, %1302 ]
  %1330 = add nsw i32 %1327, 1
  store i32 %1330, ptr %1328, align 4, !tbaa !6
  %1331 = getelementptr inbounds i32, ptr %7, i64 %1329
  %1332 = load i32, ptr %1331, align 4, !tbaa !6
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1329
  br label %1345

1334:                                             ; preds = %1311
  %1335 = icmp eq i32 %1314, %1317
  br i1 %1335, label %1336, label %1342

1336:                                             ; preds = %1334
  store i32 0, ptr %1313, align 4, !tbaa !6
  %1337 = getelementptr inbounds i32, ptr %8, i64 %1312
  %1338 = load i32, ptr %1337, align 4, !tbaa !6
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1312
  store i32 %1338, ptr %1339, align 4, !tbaa !6
  %1340 = add nuw nsw i64 %1312, 1
  %1341 = icmp eq i64 %1340, %1297
  br i1 %1341, label %1350, label %1311, !llvm.loop !963

1342:                                             ; preds = %1307, %1334
  %1343 = trunc i32 %1300 to i16
  store i16 %1343, ptr %1274, align 2, !tbaa !59
  %1344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1345:                                             ; preds = %1320, %1326
  %1346 = phi ptr [ %1333, %1326 ], [ %1313, %1320 ]
  %1347 = phi i32 [ %1332, %1326 ], [ 1, %1320 ]
  %1348 = load i32, ptr %1346, align 4, !tbaa !6
  %1349 = add nsw i32 %1348, %1347
  store i32 %1349, ptr %1346, align 4, !tbaa !6
  br label %1350

1350:                                             ; preds = %1336, %1345, %1309, %1299
  %1351 = icmp eq i32 %1300, %5
  br i1 %1351, label %3786, label %1299, !llvm.loop !964

1352:                                             ; preds = %1284, %1482
  %1353 = phi i32 [ 1, %1284 ], [ %1431, %1482 ]
  %1354 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1285, label %1355, label %1424

1355:                                             ; preds = %1352, %1414
  %1356 = phi i32 [ %1423, %1414 ], [ 0, %1352 ]
  %1357 = phi i64 [ %1365, %1414 ], [ %1289, %1352 ]
  %1358 = phi i64 [ %1422, %1414 ], [ %1288, %1352 ]
  %1359 = phi i32 [ %1420, %1414 ], [ %1354, %1352 ]
  %1360 = sub i32 %1287, %1356
  %1361 = tail call i32 @llvm.smin.i32(i32 %1360, i32 0)
  %1362 = sub i32 %1360, %1361
  %1363 = zext i32 %1362 to i64
  %1364 = add nuw nsw i64 %1363, 1
  %1365 = add nsw i64 %1357, -1
  %1366 = icmp ult i32 %1362, 31
  br i1 %1366, label %1402, label %1367

1367:                                             ; preds = %1355
  %1368 = and i64 %1364, 8589934560
  %1369 = sub i64 %1358, %1368
  br label %1370

1370:                                             ; preds = %1370, %1367
  %1371 = phi i64 [ 0, %1367 ], [ %1394, %1370 ]
  %1372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1390, %1370 ]
  %1373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1391, %1370 ]
  %1374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1392, %1370 ]
  %1375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1367 ], [ %1393, %1370 ]
  %1376 = sub i64 %1358, %1371
  %1377 = getelementptr inbounds i32, ptr %11, i64 %1376
  %1378 = getelementptr inbounds i32, ptr %1377, i64 -7
  %1379 = load <8 x i32>, ptr %1378, align 4, !tbaa !6
  %1380 = shufflevector <8 x i32> %1379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1381 = getelementptr inbounds i32, ptr %1377, i64 -15
  %1382 = load <8 x i32>, ptr %1381, align 4, !tbaa !6
  %1383 = shufflevector <8 x i32> %1382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1384 = getelementptr inbounds i32, ptr %1377, i64 -23
  %1385 = load <8 x i32>, ptr %1384, align 4, !tbaa !6
  %1386 = shufflevector <8 x i32> %1385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1387 = getelementptr inbounds i32, ptr %1377, i64 -31
  %1388 = load <8 x i32>, ptr %1387, align 4, !tbaa !6
  %1389 = shufflevector <8 x i32> %1388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1390 = mul <8 x i32> %1380, %1372
  %1391 = mul <8 x i32> %1383, %1373
  %1392 = mul <8 x i32> %1386, %1374
  %1393 = mul <8 x i32> %1389, %1375
  %1394 = add nuw i64 %1371, 32
  %1395 = icmp eq i64 %1394, %1368
  br i1 %1395, label %1396, label %1370, !llvm.loop !965

1396:                                             ; preds = %1370
  %1397 = mul <8 x i32> %1391, %1390
  %1398 = mul <8 x i32> %1392, %1397
  %1399 = mul <8 x i32> %1393, %1398
  %1400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1399)
  %1401 = icmp eq i64 %1364, %1368
  br i1 %1401, label %1414, label %1402

1402:                                             ; preds = %1355, %1396
  %1403 = phi i64 [ %1358, %1355 ], [ %1369, %1396 ]
  %1404 = phi i32 [ 1, %1355 ], [ %1400, %1396 ]
  br label %1405

1405:                                             ; preds = %1402, %1405
  %1406 = phi i64 [ %1411, %1405 ], [ %1403, %1402 ]
  %1407 = phi i32 [ %1410, %1405 ], [ %1404, %1402 ]
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = mul nsw i32 %1409, %1407
  %1411 = add nsw i64 %1406, -1
  %1412 = trunc i64 %1406 to i32
  %1413 = icmp sgt i32 %1412, 0
  br i1 %1413, label %1405, label %1414, !llvm.loop !966

1414:                                             ; preds = %1405, %1396
  %1415 = phi i32 [ %1400, %1396 ], [ %1410, %1405 ]
  %1416 = and i64 %1365, 4294967295
  %1417 = getelementptr inbounds i32, ptr %6, i64 %1416
  %1418 = load i32, ptr %1417, align 4, !tbaa !6
  %1419 = mul nsw i32 %1418, %1415
  %1420 = add nsw i32 %1419, %1359
  %1421 = icmp sgt i64 %1357, 2
  %1422 = add nsw i64 %1358, -1
  %1423 = add i32 %1356, 1
  br i1 %1421, label %1355, label %1424, !llvm.loop !967

1424:                                             ; preds = %1414, %1352
  %1425 = phi i32 [ %1354, %1352 ], [ %1420, %1414 ]
  %1426 = icmp slt i32 %1425, %5
  br i1 %1426, label %1429, label %1427

1427:                                             ; preds = %1424
  %1428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1429:                                             ; preds = %1424
  %1430 = trunc i32 %1353 to i16
  store i16 %1430, ptr %1274, align 2, !tbaa !59
  %1431 = add nuw i32 %1353, 1
  br i1 %1286, label %1432, label %1482

1432:                                             ; preds = %1429
  %1433 = load i32, ptr %4, align 4, !tbaa !6
  %1434 = load i32, ptr %12, align 4, !tbaa !6
  %1435 = add nsw i32 %1434, -1
  %1436 = icmp slt i32 %1433, %1435
  br i1 %1436, label %1459, label %1437

1437:                                             ; preds = %1432
  %1438 = icmp eq i32 %1433, %1435
  br i1 %1438, label %1439, label %1475

1439:                                             ; preds = %1437
  store i32 0, ptr %4, align 4, !tbaa !6
  %1440 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1440, ptr %6, align 4, !tbaa !6
  br i1 %1291, label %1482, label %1441

1441:                                             ; preds = %1439, %1469
  %1442 = phi i64 [ %1473, %1469 ], [ 1, %1439 ]
  %1443 = getelementptr inbounds i32, ptr %4, i64 %1442
  %1444 = load i32, ptr %1443, align 4, !tbaa !6
  %1445 = getelementptr inbounds i32, ptr %12, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !6
  %1447 = add nsw i32 %1446, -1
  %1448 = icmp slt i32 %1444, %1447
  br i1 %1448, label %1449, label %1467

1449:                                             ; preds = %1441
  br i1 %1436, label %1459, label %1450

1450:                                             ; preds = %1449
  %1451 = shl i64 %1442, 32
  %1452 = add i64 %1451, -4294967296
  %1453 = ashr exact i64 %1452, 32
  %1454 = getelementptr inbounds i32, ptr %7, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !6
  %1456 = getelementptr inbounds i32, ptr %6, i64 %1442
  %1457 = load i32, ptr %1456, align 4, !tbaa !6
  %1458 = add nsw i32 %1457, %1455
  store i32 %1458, ptr %1456, align 4, !tbaa !6
  br label %1477

1459:                                             ; preds = %1432, %1449
  %1460 = phi i32 [ %1444, %1449 ], [ %1433, %1432 ]
  %1461 = phi ptr [ %1443, %1449 ], [ %4, %1432 ]
  %1462 = phi i64 [ %1442, %1449 ], [ 0, %1432 ]
  %1463 = add nsw i32 %1460, 1
  store i32 %1463, ptr %1461, align 4, !tbaa !6
  %1464 = getelementptr inbounds i32, ptr %7, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !6
  %1466 = getelementptr inbounds i32, ptr %6, i64 %1462
  br label %1477

1467:                                             ; preds = %1441
  %1468 = icmp eq i32 %1444, %1447
  br i1 %1468, label %1469, label %1475

1469:                                             ; preds = %1467
  store i32 0, ptr %1443, align 4, !tbaa !6
  %1470 = getelementptr inbounds i32, ptr %8, i64 %1442
  %1471 = load i32, ptr %1470, align 4, !tbaa !6
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1442
  store i32 %1471, ptr %1472, align 4, !tbaa !6
  %1473 = add nuw nsw i64 %1442, 1
  %1474 = icmp eq i64 %1473, %1289
  br i1 %1474, label %1482, label %1441, !llvm.loop !968

1475:                                             ; preds = %1437, %1467
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1477:                                             ; preds = %1450, %1459
  %1478 = phi ptr [ %1466, %1459 ], [ %1443, %1450 ]
  %1479 = phi i32 [ %1465, %1459 ], [ 1, %1450 ]
  %1480 = load i32, ptr %1478, align 4, !tbaa !6
  %1481 = add nsw i32 %1480, %1479
  store i32 %1481, ptr %1478, align 4, !tbaa !6
  br label %1482

1482:                                             ; preds = %1469, %1477, %1439, %1429
  %1483 = icmp eq i32 %1353, %5
  br i1 %1483, label %3802, label %1352, !llvm.loop !969

1484:                                             ; preds = %1277
  %1485 = getelementptr inbounds i32, ptr %3, i64 %19
  %1486 = load i32, ptr %1485, align 4, !tbaa !6
  %1487 = icmp eq i32 %1486, 0
  %1488 = icmp sgt i32 %5, 0
  br i1 %1487, label %1498, label %1489

1489:                                             ; preds = %1484
  br i1 %1488, label %1490, label %3802

1490:                                             ; preds = %1489
  %1491 = icmp sgt i32 %13, 1
  %1492 = icmp sgt i32 %13, 0
  %1493 = add i32 %13, -2
  %1494 = zext i32 %1493 to i64
  %1495 = zext i32 %13 to i64
  %1496 = add nuw i32 %5, 1
  %1497 = icmp eq i32 %13, 1
  br label %1558

1498:                                             ; preds = %1484
  br i1 %1488, label %1499, label %3802

1499:                                             ; preds = %1498
  %1500 = icmp sgt i32 %13, 0
  %1501 = trunc i32 %5 to i16
  %1502 = add nuw i32 %5, 1
  %1503 = zext i32 %13 to i64
  %1504 = icmp eq i32 %13, 1
  br label %1505

1505:                                             ; preds = %1499, %1556
  %1506 = phi i32 [ 1, %1499 ], [ %1507, %1556 ]
  %1507 = add nuw i32 %1506, 1
  br i1 %1500, label %1508, label %1556

1508:                                             ; preds = %1505
  %1509 = load i32, ptr %4, align 4, !tbaa !6
  %1510 = load i32, ptr %12, align 4, !tbaa !6
  %1511 = add nsw i32 %1510, -1
  %1512 = icmp slt i32 %1509, %1511
  br i1 %1512, label %1532, label %1513

1513:                                             ; preds = %1508
  %1514 = icmp eq i32 %1509, %1511
  br i1 %1514, label %1515, label %1548

1515:                                             ; preds = %1513
  store i32 0, ptr %4, align 4, !tbaa !6
  %1516 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1516, ptr %6, align 4, !tbaa !6
  br i1 %1504, label %1556, label %1517

1517:                                             ; preds = %1515, %1542
  %1518 = phi i64 [ %1546, %1542 ], [ 1, %1515 ]
  %1519 = getelementptr inbounds i32, ptr %4, i64 %1518
  %1520 = load i32, ptr %1519, align 4, !tbaa !6
  %1521 = getelementptr inbounds i32, ptr %12, i64 %1518
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1520, %1523
  br i1 %1524, label %1525, label %1540

1525:                                             ; preds = %1517
  br i1 %1512, label %1532, label %1526

1526:                                             ; preds = %1525
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1518
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1518
  %1530 = load i32, ptr %1529, align 4, !tbaa !6
  %1531 = add nsw i32 %1530, %1528
  store i32 %1531, ptr %1529, align 4, !tbaa !6
  br label %1551

1532:                                             ; preds = %1508, %1525
  %1533 = phi i32 [ %1520, %1525 ], [ %1509, %1508 ]
  %1534 = phi ptr [ %1519, %1525 ], [ %4, %1508 ]
  %1535 = phi i64 [ %1518, %1525 ], [ 0, %1508 ]
  %1536 = add nsw i32 %1533, 1
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %7, i64 %1535
  %1538 = load i32, ptr %1537, align 4, !tbaa !6
  %1539 = getelementptr inbounds i32, ptr %6, i64 %1535
  br label %1551

1540:                                             ; preds = %1517
  %1541 = icmp eq i32 %1520, %1523
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1540
  store i32 0, ptr %1519, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %8, i64 %1518
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = getelementptr inbounds i32, ptr %6, i64 %1518
  store i32 %1544, ptr %1545, align 4, !tbaa !6
  %1546 = add nuw nsw i64 %1518, 1
  %1547 = icmp eq i64 %1546, %1503
  br i1 %1547, label %1556, label %1517, !llvm.loop !970

1548:                                             ; preds = %1513, %1540
  %1549 = trunc i32 %1506 to i16
  store i16 %1549, ptr %1274, align 2, !tbaa !59
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1551:                                             ; preds = %1526, %1532
  %1552 = phi ptr [ %1539, %1532 ], [ %1519, %1526 ]
  %1553 = phi i32 [ %1538, %1532 ], [ 1, %1526 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !6
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !6
  br label %1556

1556:                                             ; preds = %1542, %1551, %1515, %1505
  %1557 = icmp eq i32 %1506, %5
  br i1 %1557, label %3787, label %1505, !llvm.loop !971

1558:                                             ; preds = %1490, %1688
  %1559 = phi i32 [ 1, %1490 ], [ %1637, %1688 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1491, label %1561, label %1630

1561:                                             ; preds = %1558, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1558 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1495, %1558 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1494, %1558 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1558 ]
  %1566 = sub i32 %1493, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %11, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !6
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !6
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !6
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !6
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !972

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %11, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !6
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !973

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !6
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !974

1630:                                             ; preds = %1620, %1558
  %1631 = phi i32 [ %1560, %1558 ], [ %1626, %1620 ]
  %1632 = icmp slt i32 %1631, %5
  br i1 %1632, label %1635, label %1633

1633:                                             ; preds = %1630
  %1634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1635:                                             ; preds = %1630
  %1636 = trunc i32 %1559 to i16
  store i16 %1636, ptr %1274, align 2, !tbaa !59
  %1637 = add nuw i32 %1559, 1
  br i1 %1492, label %1638, label %1688

1638:                                             ; preds = %1635
  %1639 = load i32, ptr %4, align 4, !tbaa !6
  %1640 = load i32, ptr %12, align 4, !tbaa !6
  %1641 = add nsw i32 %1640, -1
  %1642 = icmp slt i32 %1639, %1641
  br i1 %1642, label %1665, label %1643

1643:                                             ; preds = %1638
  %1644 = icmp eq i32 %1639, %1641
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1643
  store i32 0, ptr %4, align 4, !tbaa !6
  %1646 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1646, ptr %6, align 4, !tbaa !6
  br i1 %1497, label %1688, label %1647

1647:                                             ; preds = %1645, %1675
  %1648 = phi i64 [ %1679, %1675 ], [ 1, %1645 ]
  %1649 = getelementptr inbounds i32, ptr %4, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !6
  %1651 = getelementptr inbounds i32, ptr %12, i64 %1648
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = add nsw i32 %1652, -1
  %1654 = icmp slt i32 %1650, %1653
  br i1 %1654, label %1655, label %1673

1655:                                             ; preds = %1647
  br i1 %1642, label %1665, label %1656

1656:                                             ; preds = %1655
  %1657 = shl i64 %1648, 32
  %1658 = add i64 %1657, -4294967296
  %1659 = ashr exact i64 %1658, 32
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1663 = load i32, ptr %1662, align 4, !tbaa !6
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !6
  br label %1683

1665:                                             ; preds = %1638, %1655
  %1666 = phi i32 [ %1650, %1655 ], [ %1639, %1638 ]
  %1667 = phi ptr [ %1649, %1655 ], [ %4, %1638 ]
  %1668 = phi i64 [ %1648, %1655 ], [ 0, %1638 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1647
  %1674 = icmp eq i32 %1650, %1653
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1649, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1648
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1648
  store i32 %1677, ptr %1678, align 4, !tbaa !6
  %1679 = add nuw nsw i64 %1648, 1
  %1680 = icmp eq i64 %1679, %1495
  br i1 %1680, label %1688, label %1647, !llvm.loop !975

1681:                                             ; preds = %1643, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1683:                                             ; preds = %1656, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1649, %1656 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1656 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !6
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !6
  br label %1688

1688:                                             ; preds = %1675, %1683, %1645, %1635
  %1689 = icmp eq i32 %1559, %5
  br i1 %1689, label %3802, label %1558, !llvm.loop !976

1690:                                             ; preds = %1277
  %1691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1970, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

1692:                                             ; preds = %18
  %1693 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1694 = load ptr, ptr %1693, align 8, !tbaa !10
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1695 = icmp eq i32 %13, 0
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1692
  store i32 1, ptr %1694, align 4, !tbaa !6
  br label %3802

1697:                                             ; preds = %1692
  switch i32 %1, label %2104 [
    i32 1, label %1698
    i32 0, label %1901
  ]

1698:                                             ; preds = %1697
  %1699 = getelementptr inbounds i32, ptr %3, i64 %19
  %1700 = load i32, ptr %1699, align 4, !tbaa !6
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp sgt i32 %5, 0
  br i1 %1701, label %1712, label %1703

1703:                                             ; preds = %1698
  br i1 %1702, label %1704, label %3802

1704:                                             ; preds = %1703
  %1705 = icmp sgt i32 %13, 1
  %1706 = icmp sgt i32 %13, 0
  %1707 = add i32 %13, -2
  %1708 = zext i32 %1707 to i64
  %1709 = zext i32 %13 to i64
  %1710 = add nuw i32 %5, 1
  %1711 = icmp eq i32 %13, 1
  br label %1770

1712:                                             ; preds = %1698
  br i1 %1702, label %1713, label %3802

1713:                                             ; preds = %1712
  %1714 = icmp sgt i32 %13, 0
  %1715 = add nuw i32 %5, 1
  %1716 = zext i32 %13 to i64
  %1717 = icmp eq i32 %13, 1
  br label %1718

1718:                                             ; preds = %1713, %1768
  %1719 = phi i32 [ 1, %1713 ], [ %1720, %1768 ]
  store i32 %1719, ptr %1694, align 4, !tbaa !6
  %1720 = add nuw i32 %1719, 1
  br i1 %1714, label %1721, label %1768

1721:                                             ; preds = %1718
  %1722 = load i32, ptr %4, align 4, !tbaa !6
  %1723 = load i32, ptr %12, align 4, !tbaa !6
  %1724 = add nsw i32 %1723, -1
  %1725 = icmp slt i32 %1722, %1724
  br i1 %1725, label %1745, label %1726

1726:                                             ; preds = %1721
  %1727 = icmp eq i32 %1722, %1724
  br i1 %1727, label %1728, label %1761

1728:                                             ; preds = %1726
  store i32 0, ptr %4, align 4, !tbaa !6
  %1729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1729, ptr %6, align 4, !tbaa !6
  br i1 %1717, label %1768, label %1730

1730:                                             ; preds = %1728, %1755
  %1731 = phi i64 [ %1759, %1755 ], [ 1, %1728 ]
  %1732 = getelementptr inbounds i32, ptr %4, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !6
  %1734 = getelementptr inbounds i32, ptr %12, i64 %1731
  %1735 = load i32, ptr %1734, align 4, !tbaa !6
  %1736 = add nsw i32 %1735, -1
  %1737 = icmp slt i32 %1733, %1736
  br i1 %1737, label %1738, label %1753

1738:                                             ; preds = %1730
  br i1 %1725, label %1745, label %1739

1739:                                             ; preds = %1738
  %1740 = getelementptr inbounds i32, ptr %7, i64 %1731
  %1741 = load i32, ptr %1740, align 4, !tbaa !6
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1743 = load i32, ptr %1742, align 4, !tbaa !6
  %1744 = add nsw i32 %1743, %1741
  store i32 %1744, ptr %1742, align 4, !tbaa !6
  br label %1763

1745:                                             ; preds = %1721, %1738
  %1746 = phi i32 [ %1733, %1738 ], [ %1722, %1721 ]
  %1747 = phi ptr [ %1732, %1738 ], [ %4, %1721 ]
  %1748 = phi i64 [ %1731, %1738 ], [ 0, %1721 ]
  %1749 = add nsw i32 %1746, 1
  store i32 %1749, ptr %1747, align 4, !tbaa !6
  %1750 = getelementptr inbounds i32, ptr %7, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !6
  %1752 = getelementptr inbounds i32, ptr %6, i64 %1748
  br label %1763

1753:                                             ; preds = %1730
  %1754 = icmp eq i32 %1733, %1736
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1753
  store i32 0, ptr %1732, align 4, !tbaa !6
  %1756 = getelementptr inbounds i32, ptr %8, i64 %1731
  %1757 = load i32, ptr %1756, align 4, !tbaa !6
  %1758 = getelementptr inbounds i32, ptr %6, i64 %1731
  store i32 %1757, ptr %1758, align 4, !tbaa !6
  %1759 = add nuw nsw i64 %1731, 1
  %1760 = icmp eq i64 %1759, %1716
  br i1 %1760, label %1768, label %1730, !llvm.loop !977

1761:                                             ; preds = %1726, %1753
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1763:                                             ; preds = %1739, %1745
  %1764 = phi ptr [ %1752, %1745 ], [ %1732, %1739 ]
  %1765 = phi i32 [ %1751, %1745 ], [ 1, %1739 ]
  %1766 = load i32, ptr %1764, align 4, !tbaa !6
  %1767 = add nsw i32 %1766, %1765
  store i32 %1767, ptr %1764, align 4, !tbaa !6
  br label %1768

1768:                                             ; preds = %1755, %1763, %1728, %1718
  %1769 = icmp eq i32 %1719, %5
  br i1 %1769, label %3802, label %1718, !llvm.loop !978

1770:                                             ; preds = %1704, %1899
  %1771 = phi i32 [ 1, %1704 ], [ %1848, %1899 ]
  %1772 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1705, label %1773, label %1842

1773:                                             ; preds = %1770, %1832
  %1774 = phi i32 [ %1841, %1832 ], [ 0, %1770 ]
  %1775 = phi i64 [ %1783, %1832 ], [ %1709, %1770 ]
  %1776 = phi i64 [ %1840, %1832 ], [ %1708, %1770 ]
  %1777 = phi i32 [ %1838, %1832 ], [ %1772, %1770 ]
  %1778 = sub i32 %1707, %1774
  %1779 = tail call i32 @llvm.smin.i32(i32 %1778, i32 0)
  %1780 = sub i32 %1778, %1779
  %1781 = zext i32 %1780 to i64
  %1782 = add nuw nsw i64 %1781, 1
  %1783 = add nsw i64 %1775, -1
  %1784 = icmp ult i32 %1780, 31
  br i1 %1784, label %1820, label %1785

1785:                                             ; preds = %1773
  %1786 = and i64 %1782, 8589934560
  %1787 = sub i64 %1776, %1786
  br label %1788

1788:                                             ; preds = %1788, %1785
  %1789 = phi i64 [ 0, %1785 ], [ %1812, %1788 ]
  %1790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1808, %1788 ]
  %1791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1809, %1788 ]
  %1792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1810, %1788 ]
  %1793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1785 ], [ %1811, %1788 ]
  %1794 = sub i64 %1776, %1789
  %1795 = getelementptr inbounds i32, ptr %11, i64 %1794
  %1796 = getelementptr inbounds i32, ptr %1795, i64 -7
  %1797 = load <8 x i32>, ptr %1796, align 4, !tbaa !6
  %1798 = shufflevector <8 x i32> %1797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1799 = getelementptr inbounds i32, ptr %1795, i64 -15
  %1800 = load <8 x i32>, ptr %1799, align 4, !tbaa !6
  %1801 = shufflevector <8 x i32> %1800, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1802 = getelementptr inbounds i32, ptr %1795, i64 -23
  %1803 = load <8 x i32>, ptr %1802, align 4, !tbaa !6
  %1804 = shufflevector <8 x i32> %1803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1805 = getelementptr inbounds i32, ptr %1795, i64 -31
  %1806 = load <8 x i32>, ptr %1805, align 4, !tbaa !6
  %1807 = shufflevector <8 x i32> %1806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1808 = mul <8 x i32> %1798, %1790
  %1809 = mul <8 x i32> %1801, %1791
  %1810 = mul <8 x i32> %1804, %1792
  %1811 = mul <8 x i32> %1807, %1793
  %1812 = add nuw i64 %1789, 32
  %1813 = icmp eq i64 %1812, %1786
  br i1 %1813, label %1814, label %1788, !llvm.loop !979

1814:                                             ; preds = %1788
  %1815 = mul <8 x i32> %1809, %1808
  %1816 = mul <8 x i32> %1810, %1815
  %1817 = mul <8 x i32> %1811, %1816
  %1818 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1817)
  %1819 = icmp eq i64 %1782, %1786
  br i1 %1819, label %1832, label %1820

1820:                                             ; preds = %1773, %1814
  %1821 = phi i64 [ %1776, %1773 ], [ %1787, %1814 ]
  %1822 = phi i32 [ 1, %1773 ], [ %1818, %1814 ]
  br label %1823

1823:                                             ; preds = %1820, %1823
  %1824 = phi i64 [ %1829, %1823 ], [ %1821, %1820 ]
  %1825 = phi i32 [ %1828, %1823 ], [ %1822, %1820 ]
  %1826 = getelementptr inbounds i32, ptr %11, i64 %1824
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = mul nsw i32 %1827, %1825
  %1829 = add nsw i64 %1824, -1
  %1830 = trunc i64 %1824 to i32
  %1831 = icmp sgt i32 %1830, 0
  br i1 %1831, label %1823, label %1832, !llvm.loop !980

1832:                                             ; preds = %1823, %1814
  %1833 = phi i32 [ %1818, %1814 ], [ %1828, %1823 ]
  %1834 = and i64 %1783, 4294967295
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = mul nsw i32 %1836, %1833
  %1838 = add nsw i32 %1837, %1777
  %1839 = icmp sgt i64 %1775, 2
  %1840 = add nsw i64 %1776, -1
  %1841 = add i32 %1774, 1
  br i1 %1839, label %1773, label %1842, !llvm.loop !981

1842:                                             ; preds = %1832, %1770
  %1843 = phi i32 [ %1772, %1770 ], [ %1838, %1832 ]
  %1844 = icmp slt i32 %1843, %5
  br i1 %1844, label %1847, label %1845

1845:                                             ; preds = %1842
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

1847:                                             ; preds = %1842
  store i32 %1771, ptr %1694, align 4, !tbaa !6
  %1848 = add nuw i32 %1771, 1
  br i1 %1706, label %1849, label %1899

1849:                                             ; preds = %1847
  %1850 = load i32, ptr %4, align 4, !tbaa !6
  %1851 = load i32, ptr %12, align 4, !tbaa !6
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1850, %1852
  br i1 %1853, label %1876, label %1854

1854:                                             ; preds = %1849
  %1855 = icmp eq i32 %1850, %1852
  br i1 %1855, label %1856, label %1892

1856:                                             ; preds = %1854
  store i32 0, ptr %4, align 4, !tbaa !6
  %1857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1857, ptr %6, align 4, !tbaa !6
  br i1 %1711, label %1899, label %1858

1858:                                             ; preds = %1856, %1886
  %1859 = phi i64 [ %1890, %1886 ], [ 1, %1856 ]
  %1860 = getelementptr inbounds i32, ptr %4, i64 %1859
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %12, i64 %1859
  %1863 = load i32, ptr %1862, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, -1
  %1865 = icmp slt i32 %1861, %1864
  br i1 %1865, label %1866, label %1884

1866:                                             ; preds = %1858
  br i1 %1853, label %1876, label %1867

1867:                                             ; preds = %1866
  %1868 = shl i64 %1859, 32
  %1869 = add i64 %1868, -4294967296
  %1870 = ashr exact i64 %1869, 32
  %1871 = getelementptr inbounds i32, ptr %7, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = getelementptr inbounds i32, ptr %6, i64 %1859
  %1874 = load i32, ptr %1873, align 4, !tbaa !6
  %1875 = add nsw i32 %1874, %1872
  store i32 %1875, ptr %1873, align 4, !tbaa !6
  br label %1894

1876:                                             ; preds = %1849, %1866
  %1877 = phi i32 [ %1861, %1866 ], [ %1850, %1849 ]
  %1878 = phi ptr [ %1860, %1866 ], [ %4, %1849 ]
  %1879 = phi i64 [ %1859, %1866 ], [ 0, %1849 ]
  %1880 = add nsw i32 %1877, 1
  store i32 %1880, ptr %1878, align 4, !tbaa !6
  %1881 = getelementptr inbounds i32, ptr %7, i64 %1879
  %1882 = load i32, ptr %1881, align 4, !tbaa !6
  %1883 = getelementptr inbounds i32, ptr %6, i64 %1879
  br label %1894

1884:                                             ; preds = %1858
  %1885 = icmp eq i32 %1861, %1864
  br i1 %1885, label %1886, label %1892

1886:                                             ; preds = %1884
  store i32 0, ptr %1860, align 4, !tbaa !6
  %1887 = getelementptr inbounds i32, ptr %8, i64 %1859
  %1888 = load i32, ptr %1887, align 4, !tbaa !6
  %1889 = getelementptr inbounds i32, ptr %6, i64 %1859
  store i32 %1888, ptr %1889, align 4, !tbaa !6
  %1890 = add nuw nsw i64 %1859, 1
  %1891 = icmp eq i64 %1890, %1709
  br i1 %1891, label %1899, label %1858, !llvm.loop !982

1892:                                             ; preds = %1854, %1884
  %1893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1894:                                             ; preds = %1867, %1876
  %1895 = phi ptr [ %1883, %1876 ], [ %1860, %1867 ]
  %1896 = phi i32 [ %1882, %1876 ], [ 1, %1867 ]
  %1897 = load i32, ptr %1895, align 4, !tbaa !6
  %1898 = add nsw i32 %1897, %1896
  store i32 %1898, ptr %1895, align 4, !tbaa !6
  br label %1899

1899:                                             ; preds = %1886, %1894, %1856, %1847
  %1900 = icmp eq i32 %1771, %5
  br i1 %1900, label %3802, label %1770, !llvm.loop !983

1901:                                             ; preds = %1697
  %1902 = getelementptr inbounds i32, ptr %3, i64 %19
  %1903 = load i32, ptr %1902, align 4, !tbaa !6
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp sgt i32 %5, 0
  br i1 %1904, label %1915, label %1906

1906:                                             ; preds = %1901
  br i1 %1905, label %1907, label %3802

1907:                                             ; preds = %1906
  %1908 = icmp sgt i32 %13, 1
  %1909 = icmp sgt i32 %13, 0
  %1910 = add i32 %13, -2
  %1911 = zext i32 %1910 to i64
  %1912 = zext i32 %13 to i64
  %1913 = add nuw i32 %5, 1
  %1914 = icmp eq i32 %13, 1
  br label %1973

1915:                                             ; preds = %1901
  br i1 %1905, label %1916, label %3802

1916:                                             ; preds = %1915
  %1917 = icmp sgt i32 %13, 0
  %1918 = add nuw i32 %5, 1
  %1919 = zext i32 %13 to i64
  %1920 = icmp eq i32 %13, 1
  br label %1921

1921:                                             ; preds = %1916, %1971
  %1922 = phi i32 [ 1, %1916 ], [ %1923, %1971 ]
  store i32 %1922, ptr %1694, align 4, !tbaa !6
  %1923 = add nuw i32 %1922, 1
  br i1 %1917, label %1924, label %1971

1924:                                             ; preds = %1921
  %1925 = load i32, ptr %4, align 4, !tbaa !6
  %1926 = load i32, ptr %12, align 4, !tbaa !6
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !6
  %1932 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1932, ptr %6, align 4, !tbaa !6
  br i1 %1920, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !6
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !6
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !6
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !6
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !6
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !6
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !6
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !6
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1919
  br i1 %1963, label %1971, label %1933, !llvm.loop !984

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !6
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !6
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1921
  %1972 = icmp eq i32 %1922, %5
  br i1 %1972, label %3802, label %1921, !llvm.loop !985

1973:                                             ; preds = %1907, %2102
  %1974 = phi i32 [ 1, %1907 ], [ %2051, %2102 ]
  %1975 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1908, label %1976, label %2045

1976:                                             ; preds = %1973, %2035
  %1977 = phi i32 [ %2044, %2035 ], [ 0, %1973 ]
  %1978 = phi i64 [ %1986, %2035 ], [ %1912, %1973 ]
  %1979 = phi i64 [ %2043, %2035 ], [ %1911, %1973 ]
  %1980 = phi i32 [ %2041, %2035 ], [ %1975, %1973 ]
  %1981 = sub i32 %1910, %1977
  %1982 = tail call i32 @llvm.smin.i32(i32 %1981, i32 0)
  %1983 = sub i32 %1981, %1982
  %1984 = zext i32 %1983 to i64
  %1985 = add nuw nsw i64 %1984, 1
  %1986 = add nsw i64 %1978, -1
  %1987 = icmp ult i32 %1983, 31
  br i1 %1987, label %2023, label %1988

1988:                                             ; preds = %1976
  %1989 = and i64 %1985, 8589934560
  %1990 = sub i64 %1979, %1989
  br label %1991

1991:                                             ; preds = %1991, %1988
  %1992 = phi i64 [ 0, %1988 ], [ %2015, %1991 ]
  %1993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2011, %1991 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2012, %1991 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2013, %1991 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1988 ], [ %2014, %1991 ]
  %1997 = sub i64 %1979, %1992
  %1998 = getelementptr inbounds i32, ptr %11, i64 %1997
  %1999 = getelementptr inbounds i32, ptr %1998, i64 -7
  %2000 = load <8 x i32>, ptr %1999, align 4, !tbaa !6
  %2001 = shufflevector <8 x i32> %2000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2002 = getelementptr inbounds i32, ptr %1998, i64 -15
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !6
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %1998, i64 -23
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !6
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %1998, i64 -31
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !6
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = mul <8 x i32> %2001, %1993
  %2012 = mul <8 x i32> %2004, %1994
  %2013 = mul <8 x i32> %2007, %1995
  %2014 = mul <8 x i32> %2010, %1996
  %2015 = add nuw i64 %1992, 32
  %2016 = icmp eq i64 %2015, %1989
  br i1 %2016, label %2017, label %1991, !llvm.loop !986

2017:                                             ; preds = %1991
  %2018 = mul <8 x i32> %2012, %2011
  %2019 = mul <8 x i32> %2013, %2018
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2020)
  %2022 = icmp eq i64 %1985, %1989
  br i1 %2022, label %2035, label %2023

2023:                                             ; preds = %1976, %2017
  %2024 = phi i64 [ %1979, %1976 ], [ %1990, %2017 ]
  %2025 = phi i32 [ 1, %1976 ], [ %2021, %2017 ]
  br label %2026

2026:                                             ; preds = %2023, %2026
  %2027 = phi i64 [ %2032, %2026 ], [ %2024, %2023 ]
  %2028 = phi i32 [ %2031, %2026 ], [ %2025, %2023 ]
  %2029 = getelementptr inbounds i32, ptr %11, i64 %2027
  %2030 = load i32, ptr %2029, align 4, !tbaa !6
  %2031 = mul nsw i32 %2030, %2028
  %2032 = add nsw i64 %2027, -1
  %2033 = trunc i64 %2027 to i32
  %2034 = icmp sgt i32 %2033, 0
  br i1 %2034, label %2026, label %2035, !llvm.loop !987

2035:                                             ; preds = %2026, %2017
  %2036 = phi i32 [ %2021, %2017 ], [ %2031, %2026 ]
  %2037 = and i64 %1986, 4294967295
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !6
  %2040 = mul nsw i32 %2039, %2036
  %2041 = add nsw i32 %2040, %1980
  %2042 = icmp sgt i64 %1978, 2
  %2043 = add nsw i64 %1979, -1
  %2044 = add i32 %1977, 1
  br i1 %2042, label %1976, label %2045, !llvm.loop !988

2045:                                             ; preds = %2035, %1973
  %2046 = phi i32 [ %1975, %1973 ], [ %2041, %2035 ]
  %2047 = icmp slt i32 %2046, %5
  br i1 %2047, label %2050, label %2048

2048:                                             ; preds = %2045
  %2049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2050:                                             ; preds = %2045
  store i32 %1974, ptr %1694, align 4, !tbaa !6
  %2051 = add nuw i32 %1974, 1
  br i1 %1909, label %2052, label %2102

2052:                                             ; preds = %2050
  %2053 = load i32, ptr %4, align 4, !tbaa !6
  %2054 = load i32, ptr %12, align 4, !tbaa !6
  %2055 = add nsw i32 %2054, -1
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2079, label %2057

2057:                                             ; preds = %2052
  %2058 = icmp eq i32 %2053, %2055
  br i1 %2058, label %2059, label %2095

2059:                                             ; preds = %2057
  store i32 0, ptr %4, align 4, !tbaa !6
  %2060 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2060, ptr %6, align 4, !tbaa !6
  br i1 %1914, label %2102, label %2061

2061:                                             ; preds = %2059, %2089
  %2062 = phi i64 [ %2093, %2089 ], [ 1, %2059 ]
  %2063 = getelementptr inbounds i32, ptr %4, i64 %2062
  %2064 = load i32, ptr %2063, align 4, !tbaa !6
  %2065 = getelementptr inbounds i32, ptr %12, i64 %2062
  %2066 = load i32, ptr %2065, align 4, !tbaa !6
  %2067 = add nsw i32 %2066, -1
  %2068 = icmp slt i32 %2064, %2067
  br i1 %2068, label %2069, label %2087

2069:                                             ; preds = %2061
  br i1 %2056, label %2079, label %2070

2070:                                             ; preds = %2069
  %2071 = shl i64 %2062, 32
  %2072 = add i64 %2071, -4294967296
  %2073 = ashr exact i64 %2072, 32
  %2074 = getelementptr inbounds i32, ptr %7, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !6
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2062
  %2077 = load i32, ptr %2076, align 4, !tbaa !6
  %2078 = add nsw i32 %2077, %2075
  store i32 %2078, ptr %2076, align 4, !tbaa !6
  br label %2097

2079:                                             ; preds = %2052, %2069
  %2080 = phi i32 [ %2064, %2069 ], [ %2053, %2052 ]
  %2081 = phi ptr [ %2063, %2069 ], [ %4, %2052 ]
  %2082 = phi i64 [ %2062, %2069 ], [ 0, %2052 ]
  %2083 = add nsw i32 %2080, 1
  store i32 %2083, ptr %2081, align 4, !tbaa !6
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2085 = load i32, ptr %2084, align 4, !tbaa !6
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2082
  br label %2097

2087:                                             ; preds = %2061
  %2088 = icmp eq i32 %2064, %2067
  br i1 %2088, label %2089, label %2095

2089:                                             ; preds = %2087
  store i32 0, ptr %2063, align 4, !tbaa !6
  %2090 = getelementptr inbounds i32, ptr %8, i64 %2062
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2062
  store i32 %2091, ptr %2092, align 4, !tbaa !6
  %2093 = add nuw nsw i64 %2062, 1
  %2094 = icmp eq i64 %2093, %1912
  br i1 %2094, label %2102, label %2061, !llvm.loop !989

2095:                                             ; preds = %2057, %2087
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2097:                                             ; preds = %2070, %2079
  %2098 = phi ptr [ %2086, %2079 ], [ %2063, %2070 ]
  %2099 = phi i32 [ %2085, %2079 ], [ 1, %2070 ]
  %2100 = load i32, ptr %2098, align 4, !tbaa !6
  %2101 = add nsw i32 %2100, %2099
  store i32 %2101, ptr %2098, align 4, !tbaa !6
  br label %2102

2102:                                             ; preds = %2089, %2097, %2059, %2050
  %2103 = icmp eq i32 %1974, %5
  br i1 %2103, label %3802, label %1973, !llvm.loop !990

2104:                                             ; preds = %1697
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1975, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2106:                                             ; preds = %18
  %2107 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2108 = load ptr, ptr %2107, align 8, !tbaa !10
  store i64 0, ptr %2108, align 8, !tbaa !89
  %2109 = icmp eq i32 %13, 0
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2106
  store i64 1, ptr %2108, align 8, !tbaa !89
  br label %3802

2111:                                             ; preds = %2106
  switch i32 %1, label %2530 [
    i32 1, label %2112
    i32 0, label %2321
  ]

2112:                                             ; preds = %2111
  %2113 = getelementptr inbounds i32, ptr %3, i64 %19
  %2114 = load i32, ptr %2113, align 4, !tbaa !6
  %2115 = icmp eq i32 %2114, 0
  %2116 = icmp sgt i32 %5, 0
  br i1 %2115, label %2127, label %2117

2117:                                             ; preds = %2112
  br i1 %2116, label %2118, label %3802

2118:                                             ; preds = %2117
  %2119 = icmp sgt i32 %13, 1
  %2120 = icmp sgt i32 %13, 0
  %2121 = add i32 %13, -2
  %2122 = zext i32 %2121 to i64
  %2123 = zext i32 %13 to i64
  %2124 = add nuw i32 %5, 1
  %2125 = zext i32 %2124 to i64
  %2126 = icmp eq i32 %13, 1
  br label %2190

2127:                                             ; preds = %2112
  br i1 %2116, label %2128, label %3802

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 0
  %2130 = add nsw i32 %5, -1
  %2131 = zext i32 %2130 to i64
  %2132 = add nuw nsw i64 %2131, 1
  %2133 = add nuw i32 %5, 1
  %2134 = add nuw i32 %5, 1
  %2135 = zext i32 %2134 to i64
  %2136 = zext i32 %13 to i64
  %2137 = icmp eq i32 %13, 1
  br label %2138

2138:                                             ; preds = %2128, %2188
  %2139 = phi i64 [ 1, %2128 ], [ %2140, %2188 ]
  %2140 = add nuw nsw i64 %2139, 1
  br i1 %2129, label %2141, label %2188

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2165, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2181

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %2137, label %2188, label %2150

2150:                                             ; preds = %2148, %2175
  %2151 = phi i64 [ %2179, %2175 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2173

2158:                                             ; preds = %2150
  br i1 %2145, label %2165, label %2159

2159:                                             ; preds = %2158
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2163 = load i32, ptr %2162, align 4, !tbaa !6
  %2164 = add nsw i32 %2163, %2161
  store i32 %2164, ptr %2162, align 4, !tbaa !6
  br label %2183

2165:                                             ; preds = %2141, %2158
  %2166 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2167 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2168 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2169 = add nsw i32 %2166, 1
  store i32 %2169, ptr %2167, align 4, !tbaa !6
  %2170 = getelementptr inbounds i32, ptr %7, i64 %2168
  %2171 = load i32, ptr %2170, align 4, !tbaa !6
  %2172 = getelementptr inbounds i32, ptr %6, i64 %2168
  br label %2183

2173:                                             ; preds = %2150
  %2174 = icmp eq i32 %2153, %2156
  br i1 %2174, label %2175, label %2181

2175:                                             ; preds = %2173
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2176 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2177 = load i32, ptr %2176, align 4, !tbaa !6
  %2178 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2177, ptr %2178, align 4, !tbaa !6
  %2179 = add nuw nsw i64 %2151, 1
  %2180 = icmp eq i64 %2179, %2136
  br i1 %2180, label %2188, label %2150, !llvm.loop !991

2181:                                             ; preds = %2146, %2173
  store i64 %2139, ptr %2108, align 8, !tbaa !89
  %2182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2183:                                             ; preds = %2159, %2165
  %2184 = phi ptr [ %2172, %2165 ], [ %2152, %2159 ]
  %2185 = phi i32 [ %2171, %2165 ], [ 1, %2159 ]
  %2186 = load i32, ptr %2184, align 4, !tbaa !6
  %2187 = add nsw i32 %2186, %2185
  store i32 %2187, ptr %2184, align 4, !tbaa !6
  br label %2188

2188:                                             ; preds = %2175, %2183, %2148, %2138
  %2189 = icmp eq i64 %2140, %2135
  br i1 %2189, label %3788, label %2138, !llvm.loop !992

2190:                                             ; preds = %2118, %2319
  %2191 = phi i64 [ 1, %2118 ], [ %2268, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2119, label %2193, label %2262

2193:                                             ; preds = %2190, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2190 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2123, %2190 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2122, %2190 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2190 ]
  %2198 = sub i32 %2121, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %11, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !6
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !6
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !6
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !6
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !993

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %11, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !6
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !994

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !6
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !995

2262:                                             ; preds = %2252, %2190
  %2263 = phi i32 [ %2192, %2190 ], [ %2258, %2252 ]
  %2264 = icmp slt i32 %2263, %5
  br i1 %2264, label %2267, label %2265

2265:                                             ; preds = %2262
  %2266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2267:                                             ; preds = %2262
  store i64 %2191, ptr %2108, align 8, !tbaa !89
  %2268 = add nuw nsw i64 %2191, 1
  br i1 %2120, label %2269, label %2319

2269:                                             ; preds = %2267
  %2270 = load i32, ptr %4, align 4, !tbaa !6
  %2271 = load i32, ptr %12, align 4, !tbaa !6
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2270, %2272
  br i1 %2273, label %2296, label %2274

2274:                                             ; preds = %2269
  %2275 = icmp eq i32 %2270, %2272
  br i1 %2275, label %2276, label %2312

2276:                                             ; preds = %2274
  store i32 0, ptr %4, align 4, !tbaa !6
  %2277 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2277, ptr %6, align 4, !tbaa !6
  br i1 %2126, label %2319, label %2278

2278:                                             ; preds = %2276, %2306
  %2279 = phi i64 [ %2310, %2306 ], [ 1, %2276 ]
  %2280 = getelementptr inbounds i32, ptr %4, i64 %2279
  %2281 = load i32, ptr %2280, align 4, !tbaa !6
  %2282 = getelementptr inbounds i32, ptr %12, i64 %2279
  %2283 = load i32, ptr %2282, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2281, %2284
  br i1 %2285, label %2286, label %2304

2286:                                             ; preds = %2278
  br i1 %2273, label %2296, label %2287

2287:                                             ; preds = %2286
  %2288 = shl i64 %2279, 32
  %2289 = add i64 %2288, -4294967296
  %2290 = ashr exact i64 %2289, 32
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !6
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2279
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !6
  br label %2314

2296:                                             ; preds = %2269, %2286
  %2297 = phi i32 [ %2281, %2286 ], [ %2270, %2269 ]
  %2298 = phi ptr [ %2280, %2286 ], [ %4, %2269 ]
  %2299 = phi i64 [ %2279, %2286 ], [ 0, %2269 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !6
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2278
  %2305 = icmp eq i32 %2281, %2284
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2280, align 4, !tbaa !6
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2279
  %2308 = load i32, ptr %2307, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2279
  store i32 %2308, ptr %2309, align 4, !tbaa !6
  %2310 = add nuw nsw i64 %2279, 1
  %2311 = icmp eq i64 %2310, %2123
  br i1 %2311, label %2319, label %2278, !llvm.loop !996

2312:                                             ; preds = %2274, %2304
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2314:                                             ; preds = %2287, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2280, %2287 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2287 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !6
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !6
  br label %2319

2319:                                             ; preds = %2306, %2314, %2276, %2267
  %2320 = icmp eq i64 %2268, %2125
  br i1 %2320, label %3802, label %2190, !llvm.loop !997

2321:                                             ; preds = %2111
  %2322 = getelementptr inbounds i32, ptr %3, i64 %19
  %2323 = load i32, ptr %2322, align 4, !tbaa !6
  %2324 = icmp eq i32 %2323, 0
  %2325 = icmp sgt i32 %5, 0
  br i1 %2324, label %2336, label %2326

2326:                                             ; preds = %2321
  br i1 %2325, label %2327, label %3802

2327:                                             ; preds = %2326
  %2328 = icmp sgt i32 %13, 1
  %2329 = icmp sgt i32 %13, 0
  %2330 = add i32 %13, -2
  %2331 = zext i32 %2330 to i64
  %2332 = zext i32 %13 to i64
  %2333 = add nuw i32 %5, 1
  %2334 = zext i32 %2333 to i64
  %2335 = icmp eq i32 %13, 1
  br label %2399

2336:                                             ; preds = %2321
  br i1 %2325, label %2337, label %3802

2337:                                             ; preds = %2336
  %2338 = icmp sgt i32 %13, 0
  %2339 = add nsw i32 %5, -1
  %2340 = zext i32 %2339 to i64
  %2341 = add nuw nsw i64 %2340, 1
  %2342 = add nuw i32 %5, 1
  %2343 = add nuw i32 %5, 1
  %2344 = zext i32 %2343 to i64
  %2345 = zext i32 %13 to i64
  %2346 = icmp eq i32 %13, 1
  br label %2347

2347:                                             ; preds = %2337, %2397
  %2348 = phi i64 [ 1, %2337 ], [ %2349, %2397 ]
  %2349 = add nuw nsw i64 %2348, 1
  br i1 %2338, label %2350, label %2397

2350:                                             ; preds = %2347
  %2351 = load i32, ptr %4, align 4, !tbaa !6
  %2352 = load i32, ptr %12, align 4, !tbaa !6
  %2353 = add nsw i32 %2352, -1
  %2354 = icmp slt i32 %2351, %2353
  br i1 %2354, label %2374, label %2355

2355:                                             ; preds = %2350
  %2356 = icmp eq i32 %2351, %2353
  br i1 %2356, label %2357, label %2390

2357:                                             ; preds = %2355
  store i32 0, ptr %4, align 4, !tbaa !6
  %2358 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2358, ptr %6, align 4, !tbaa !6
  br i1 %2346, label %2397, label %2359

2359:                                             ; preds = %2357, %2384
  %2360 = phi i64 [ %2388, %2384 ], [ 1, %2357 ]
  %2361 = getelementptr inbounds i32, ptr %4, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !6
  %2363 = getelementptr inbounds i32, ptr %12, i64 %2360
  %2364 = load i32, ptr %2363, align 4, !tbaa !6
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2362, %2365
  br i1 %2366, label %2367, label %2382

2367:                                             ; preds = %2359
  br i1 %2354, label %2374, label %2368

2368:                                             ; preds = %2367
  %2369 = getelementptr inbounds i32, ptr %7, i64 %2360
  %2370 = load i32, ptr %2369, align 4, !tbaa !6
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2372 = load i32, ptr %2371, align 4, !tbaa !6
  %2373 = add nsw i32 %2372, %2370
  store i32 %2373, ptr %2371, align 4, !tbaa !6
  br label %2392

2374:                                             ; preds = %2350, %2367
  %2375 = phi i32 [ %2362, %2367 ], [ %2351, %2350 ]
  %2376 = phi ptr [ %2361, %2367 ], [ %4, %2350 ]
  %2377 = phi i64 [ %2360, %2367 ], [ 0, %2350 ]
  %2378 = add nsw i32 %2375, 1
  store i32 %2378, ptr %2376, align 4, !tbaa !6
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2377
  br label %2392

2382:                                             ; preds = %2359
  %2383 = icmp eq i32 %2362, %2365
  br i1 %2383, label %2384, label %2390

2384:                                             ; preds = %2382
  store i32 0, ptr %2361, align 4, !tbaa !6
  %2385 = getelementptr inbounds i32, ptr %8, i64 %2360
  %2386 = load i32, ptr %2385, align 4, !tbaa !6
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2360
  store i32 %2386, ptr %2387, align 4, !tbaa !6
  %2388 = add nuw nsw i64 %2360, 1
  %2389 = icmp eq i64 %2388, %2345
  br i1 %2389, label %2397, label %2359, !llvm.loop !998

2390:                                             ; preds = %2355, %2382
  store i64 %2348, ptr %2108, align 8, !tbaa !89
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2392:                                             ; preds = %2368, %2374
  %2393 = phi ptr [ %2381, %2374 ], [ %2361, %2368 ]
  %2394 = phi i32 [ %2380, %2374 ], [ 1, %2368 ]
  %2395 = load i32, ptr %2393, align 4, !tbaa !6
  %2396 = add nsw i32 %2395, %2394
  store i32 %2396, ptr %2393, align 4, !tbaa !6
  br label %2397

2397:                                             ; preds = %2384, %2392, %2357, %2347
  %2398 = icmp eq i64 %2349, %2344
  br i1 %2398, label %3789, label %2347, !llvm.loop !999

2399:                                             ; preds = %2327, %2528
  %2400 = phi i64 [ 1, %2327 ], [ %2477, %2528 ]
  %2401 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2328, label %2402, label %2471

2402:                                             ; preds = %2399, %2461
  %2403 = phi i32 [ %2470, %2461 ], [ 0, %2399 ]
  %2404 = phi i64 [ %2412, %2461 ], [ %2332, %2399 ]
  %2405 = phi i64 [ %2469, %2461 ], [ %2331, %2399 ]
  %2406 = phi i32 [ %2467, %2461 ], [ %2401, %2399 ]
  %2407 = sub i32 %2330, %2403
  %2408 = tail call i32 @llvm.smin.i32(i32 %2407, i32 0)
  %2409 = sub i32 %2407, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, 1
  %2412 = add nsw i64 %2404, -1
  %2413 = icmp ult i32 %2409, 31
  br i1 %2413, label %2449, label %2414

2414:                                             ; preds = %2402
  %2415 = and i64 %2411, 8589934560
  %2416 = sub i64 %2405, %2415
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ 0, %2414 ], [ %2441, %2417 ]
  %2419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2437, %2417 ]
  %2420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2438, %2417 ]
  %2421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2439, %2417 ]
  %2422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2414 ], [ %2440, %2417 ]
  %2423 = sub i64 %2405, %2418
  %2424 = getelementptr inbounds i32, ptr %11, i64 %2423
  %2425 = getelementptr inbounds i32, ptr %2424, i64 -7
  %2426 = load <8 x i32>, ptr %2425, align 4, !tbaa !6
  %2427 = shufflevector <8 x i32> %2426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2428 = getelementptr inbounds i32, ptr %2424, i64 -15
  %2429 = load <8 x i32>, ptr %2428, align 4, !tbaa !6
  %2430 = shufflevector <8 x i32> %2429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2431 = getelementptr inbounds i32, ptr %2424, i64 -23
  %2432 = load <8 x i32>, ptr %2431, align 4, !tbaa !6
  %2433 = shufflevector <8 x i32> %2432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2434 = getelementptr inbounds i32, ptr %2424, i64 -31
  %2435 = load <8 x i32>, ptr %2434, align 4, !tbaa !6
  %2436 = shufflevector <8 x i32> %2435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2437 = mul <8 x i32> %2427, %2419
  %2438 = mul <8 x i32> %2430, %2420
  %2439 = mul <8 x i32> %2433, %2421
  %2440 = mul <8 x i32> %2436, %2422
  %2441 = add nuw i64 %2418, 32
  %2442 = icmp eq i64 %2441, %2415
  br i1 %2442, label %2443, label %2417, !llvm.loop !1000

2443:                                             ; preds = %2417
  %2444 = mul <8 x i32> %2438, %2437
  %2445 = mul <8 x i32> %2439, %2444
  %2446 = mul <8 x i32> %2440, %2445
  %2447 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2446)
  %2448 = icmp eq i64 %2411, %2415
  br i1 %2448, label %2461, label %2449

2449:                                             ; preds = %2402, %2443
  %2450 = phi i64 [ %2405, %2402 ], [ %2416, %2443 ]
  %2451 = phi i32 [ 1, %2402 ], [ %2447, %2443 ]
  br label %2452

2452:                                             ; preds = %2449, %2452
  %2453 = phi i64 [ %2458, %2452 ], [ %2450, %2449 ]
  %2454 = phi i32 [ %2457, %2452 ], [ %2451, %2449 ]
  %2455 = getelementptr inbounds i32, ptr %11, i64 %2453
  %2456 = load i32, ptr %2455, align 4, !tbaa !6
  %2457 = mul nsw i32 %2456, %2454
  %2458 = add nsw i64 %2453, -1
  %2459 = trunc i64 %2453 to i32
  %2460 = icmp sgt i32 %2459, 0
  br i1 %2460, label %2452, label %2461, !llvm.loop !1001

2461:                                             ; preds = %2452, %2443
  %2462 = phi i32 [ %2447, %2443 ], [ %2457, %2452 ]
  %2463 = and i64 %2412, 4294967295
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = mul nsw i32 %2465, %2462
  %2467 = add nsw i32 %2466, %2406
  %2468 = icmp sgt i64 %2404, 2
  %2469 = add nsw i64 %2405, -1
  %2470 = add i32 %2403, 1
  br i1 %2468, label %2402, label %2471, !llvm.loop !1002

2471:                                             ; preds = %2461, %2399
  %2472 = phi i32 [ %2401, %2399 ], [ %2467, %2461 ]
  %2473 = icmp slt i32 %2472, %5
  br i1 %2473, label %2476, label %2474

2474:                                             ; preds = %2471
  %2475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2476:                                             ; preds = %2471
  store i64 %2400, ptr %2108, align 8, !tbaa !89
  %2477 = add nuw nsw i64 %2400, 1
  br i1 %2329, label %2478, label %2528

2478:                                             ; preds = %2476
  %2479 = load i32, ptr %4, align 4, !tbaa !6
  %2480 = load i32, ptr %12, align 4, !tbaa !6
  %2481 = add nsw i32 %2480, -1
  %2482 = icmp slt i32 %2479, %2481
  br i1 %2482, label %2505, label %2483

2483:                                             ; preds = %2478
  %2484 = icmp eq i32 %2479, %2481
  br i1 %2484, label %2485, label %2521

2485:                                             ; preds = %2483
  store i32 0, ptr %4, align 4, !tbaa !6
  %2486 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2486, ptr %6, align 4, !tbaa !6
  br i1 %2335, label %2528, label %2487

2487:                                             ; preds = %2485, %2515
  %2488 = phi i64 [ %2519, %2515 ], [ 1, %2485 ]
  %2489 = getelementptr inbounds i32, ptr %4, i64 %2488
  %2490 = load i32, ptr %2489, align 4, !tbaa !6
  %2491 = getelementptr inbounds i32, ptr %12, i64 %2488
  %2492 = load i32, ptr %2491, align 4, !tbaa !6
  %2493 = add nsw i32 %2492, -1
  %2494 = icmp slt i32 %2490, %2493
  br i1 %2494, label %2495, label %2513

2495:                                             ; preds = %2487
  br i1 %2482, label %2505, label %2496

2496:                                             ; preds = %2495
  %2497 = shl i64 %2488, 32
  %2498 = add i64 %2497, -4294967296
  %2499 = ashr exact i64 %2498, 32
  %2500 = getelementptr inbounds i32, ptr %7, i64 %2499
  %2501 = load i32, ptr %2500, align 4, !tbaa !6
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2488
  %2503 = load i32, ptr %2502, align 4, !tbaa !6
  %2504 = add nsw i32 %2503, %2501
  store i32 %2504, ptr %2502, align 4, !tbaa !6
  br label %2523

2505:                                             ; preds = %2478, %2495
  %2506 = phi i32 [ %2490, %2495 ], [ %2479, %2478 ]
  %2507 = phi ptr [ %2489, %2495 ], [ %4, %2478 ]
  %2508 = phi i64 [ %2488, %2495 ], [ 0, %2478 ]
  %2509 = add nsw i32 %2506, 1
  store i32 %2509, ptr %2507, align 4, !tbaa !6
  %2510 = getelementptr inbounds i32, ptr %7, i64 %2508
  %2511 = load i32, ptr %2510, align 4, !tbaa !6
  %2512 = getelementptr inbounds i32, ptr %6, i64 %2508
  br label %2523

2513:                                             ; preds = %2487
  %2514 = icmp eq i32 %2490, %2493
  br i1 %2514, label %2515, label %2521

2515:                                             ; preds = %2513
  store i32 0, ptr %2489, align 4, !tbaa !6
  %2516 = getelementptr inbounds i32, ptr %8, i64 %2488
  %2517 = load i32, ptr %2516, align 4, !tbaa !6
  %2518 = getelementptr inbounds i32, ptr %6, i64 %2488
  store i32 %2517, ptr %2518, align 4, !tbaa !6
  %2519 = add nuw nsw i64 %2488, 1
  %2520 = icmp eq i64 %2519, %2332
  br i1 %2520, label %2528, label %2487, !llvm.loop !1003

2521:                                             ; preds = %2483, %2513
  %2522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2523:                                             ; preds = %2496, %2505
  %2524 = phi ptr [ %2512, %2505 ], [ %2489, %2496 ]
  %2525 = phi i32 [ %2511, %2505 ], [ 1, %2496 ]
  %2526 = load i32, ptr %2524, align 4, !tbaa !6
  %2527 = add nsw i32 %2526, %2525
  store i32 %2527, ptr %2524, align 4, !tbaa !6
  br label %2528

2528:                                             ; preds = %2515, %2523, %2485, %2476
  %2529 = icmp eq i64 %2477, %2334
  br i1 %2529, label %3802, label %2399, !llvm.loop !1004

2530:                                             ; preds = %2111
  %2531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2532:                                             ; preds = %18
  %2533 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2534 = load ptr, ptr %2533, align 8, !tbaa !10
  store double 0.000000e+00, ptr %2534, align 8, !tbaa !105
  %2535 = icmp eq i32 %13, 0
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2532
  store double 1.000000e+00, ptr %2534, align 8, !tbaa !105
  br label %3802

2537:                                             ; preds = %2532
  switch i32 %1, label %2948 [
    i32 1, label %2538
    i32 0, label %2743
  ]

2538:                                             ; preds = %2537
  %2539 = getelementptr inbounds i32, ptr %3, i64 %19
  %2540 = load i32, ptr %2539, align 4, !tbaa !6
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp sgt i32 %5, 0
  br i1 %2541, label %2552, label %2543

2543:                                             ; preds = %2538
  br i1 %2542, label %2544, label %3802

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2611

2552:                                             ; preds = %2538
  br i1 %2542, label %2553, label %3802

2553:                                             ; preds = %2552
  %2554 = icmp sgt i32 %13, 0
  %2555 = add nuw i32 %5, 1
  %2556 = zext i32 %13 to i64
  %2557 = icmp eq i32 %13, 1
  br label %2558

2558:                                             ; preds = %2553, %2609
  %2559 = phi i32 [ 1, %2553 ], [ %2560, %2609 ]
  %2560 = add nuw i32 %2559, 1
  br i1 %2554, label %2561, label %2609

2561:                                             ; preds = %2558
  %2562 = load i32, ptr %4, align 4, !tbaa !6
  %2563 = load i32, ptr %12, align 4, !tbaa !6
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !6
  %2569 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2569, ptr %6, align 4, !tbaa !6
  br i1 %2557, label %2609, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !6
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !6
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !6
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !6
  br label %2604

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !6
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !6
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2604

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !6
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !6
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2556
  br i1 %2600, label %2609, label %2570, !llvm.loop !1005

2601:                                             ; preds = %2566, %2593
  %2602 = sitofp i32 %2559 to double
  store double %2602, ptr %2534, align 8, !tbaa !105
  %2603 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2604:                                             ; preds = %2579, %2585
  %2605 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2606 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2607 = load i32, ptr %2605, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2606
  store i32 %2608, ptr %2605, align 4, !tbaa !6
  br label %2609

2609:                                             ; preds = %2595, %2604, %2568, %2558
  %2610 = icmp eq i32 %2559, %5
  br i1 %2610, label %3790, label %2558, !llvm.loop !1006

2611:                                             ; preds = %2544, %2741
  %2612 = phi i32 [ 1, %2544 ], [ %2690, %2741 ]
  %2613 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2545, label %2614, label %2683

2614:                                             ; preds = %2611, %2673
  %2615 = phi i32 [ %2682, %2673 ], [ 0, %2611 ]
  %2616 = phi i64 [ %2624, %2673 ], [ %2549, %2611 ]
  %2617 = phi i64 [ %2681, %2673 ], [ %2548, %2611 ]
  %2618 = phi i32 [ %2679, %2673 ], [ %2613, %2611 ]
  %2619 = sub i32 %2547, %2615
  %2620 = tail call i32 @llvm.smin.i32(i32 %2619, i32 0)
  %2621 = sub i32 %2619, %2620
  %2622 = zext i32 %2621 to i64
  %2623 = add nuw nsw i64 %2622, 1
  %2624 = add nsw i64 %2616, -1
  %2625 = icmp ult i32 %2621, 31
  br i1 %2625, label %2661, label %2626

2626:                                             ; preds = %2614
  %2627 = and i64 %2623, 8589934560
  %2628 = sub i64 %2617, %2627
  br label %2629

2629:                                             ; preds = %2629, %2626
  %2630 = phi i64 [ 0, %2626 ], [ %2653, %2629 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2649, %2629 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2650, %2629 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2651, %2629 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2626 ], [ %2652, %2629 ]
  %2635 = sub i64 %2617, %2630
  %2636 = getelementptr inbounds i32, ptr %11, i64 %2635
  %2637 = getelementptr inbounds i32, ptr %2636, i64 -7
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !6
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2636, i64 -15
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !6
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2636, i64 -23
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !6
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2636, i64 -31
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !6
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = mul <8 x i32> %2639, %2631
  %2650 = mul <8 x i32> %2642, %2632
  %2651 = mul <8 x i32> %2645, %2633
  %2652 = mul <8 x i32> %2648, %2634
  %2653 = add nuw i64 %2630, 32
  %2654 = icmp eq i64 %2653, %2627
  br i1 %2654, label %2655, label %2629, !llvm.loop !1007

2655:                                             ; preds = %2629
  %2656 = mul <8 x i32> %2650, %2649
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = mul <8 x i32> %2652, %2657
  %2659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2658)
  %2660 = icmp eq i64 %2623, %2627
  br i1 %2660, label %2673, label %2661

2661:                                             ; preds = %2614, %2655
  %2662 = phi i64 [ %2617, %2614 ], [ %2628, %2655 ]
  %2663 = phi i32 [ 1, %2614 ], [ %2659, %2655 ]
  br label %2664

2664:                                             ; preds = %2661, %2664
  %2665 = phi i64 [ %2670, %2664 ], [ %2662, %2661 ]
  %2666 = phi i32 [ %2669, %2664 ], [ %2663, %2661 ]
  %2667 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2668 = load i32, ptr %2667, align 4, !tbaa !6
  %2669 = mul nsw i32 %2668, %2666
  %2670 = add nsw i64 %2665, -1
  %2671 = trunc i64 %2665 to i32
  %2672 = icmp sgt i32 %2671, 0
  br i1 %2672, label %2664, label %2673, !llvm.loop !1008

2673:                                             ; preds = %2664, %2655
  %2674 = phi i32 [ %2659, %2655 ], [ %2669, %2664 ]
  %2675 = and i64 %2624, 4294967295
  %2676 = getelementptr inbounds i32, ptr %6, i64 %2675
  %2677 = load i32, ptr %2676, align 4, !tbaa !6
  %2678 = mul nsw i32 %2677, %2674
  %2679 = add nsw i32 %2678, %2618
  %2680 = icmp sgt i64 %2616, 2
  %2681 = add nsw i64 %2617, -1
  %2682 = add i32 %2615, 1
  br i1 %2680, label %2614, label %2683, !llvm.loop !1009

2683:                                             ; preds = %2673, %2611
  %2684 = phi i32 [ %2613, %2611 ], [ %2679, %2673 ]
  %2685 = icmp slt i32 %2684, %5
  br i1 %2685, label %2688, label %2686

2686:                                             ; preds = %2683
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2688:                                             ; preds = %2683
  %2689 = sitofp i32 %2612 to double
  store double %2689, ptr %2534, align 8, !tbaa !105
  %2690 = add nuw i32 %2612, 1
  br i1 %2546, label %2691, label %2741

2691:                                             ; preds = %2688
  %2692 = load i32, ptr %4, align 4, !tbaa !6
  %2693 = load i32, ptr %12, align 4, !tbaa !6
  %2694 = add nsw i32 %2693, -1
  %2695 = icmp slt i32 %2692, %2694
  br i1 %2695, label %2718, label %2696

2696:                                             ; preds = %2691
  %2697 = icmp eq i32 %2692, %2694
  br i1 %2697, label %2698, label %2734

2698:                                             ; preds = %2696
  store i32 0, ptr %4, align 4, !tbaa !6
  %2699 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2699, ptr %6, align 4, !tbaa !6
  br i1 %2551, label %2741, label %2700

2700:                                             ; preds = %2698, %2728
  %2701 = phi i64 [ %2732, %2728 ], [ 1, %2698 ]
  %2702 = getelementptr inbounds i32, ptr %4, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !6
  %2704 = getelementptr inbounds i32, ptr %12, i64 %2701
  %2705 = load i32, ptr %2704, align 4, !tbaa !6
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2703, %2706
  br i1 %2707, label %2708, label %2726

2708:                                             ; preds = %2700
  br i1 %2695, label %2718, label %2709

2709:                                             ; preds = %2708
  %2710 = shl i64 %2701, 32
  %2711 = add i64 %2710, -4294967296
  %2712 = ashr exact i64 %2711, 32
  %2713 = getelementptr inbounds i32, ptr %7, i64 %2712
  %2714 = load i32, ptr %2713, align 4, !tbaa !6
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2701
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = add nsw i32 %2716, %2714
  store i32 %2717, ptr %2715, align 4, !tbaa !6
  br label %2736

2718:                                             ; preds = %2691, %2708
  %2719 = phi i32 [ %2703, %2708 ], [ %2692, %2691 ]
  %2720 = phi ptr [ %2702, %2708 ], [ %4, %2691 ]
  %2721 = phi i64 [ %2701, %2708 ], [ 0, %2691 ]
  %2722 = add nsw i32 %2719, 1
  store i32 %2722, ptr %2720, align 4, !tbaa !6
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2721
  %2724 = load i32, ptr %2723, align 4, !tbaa !6
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2721
  br label %2736

2726:                                             ; preds = %2700
  %2727 = icmp eq i32 %2703, %2706
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2726
  store i32 0, ptr %2702, align 4, !tbaa !6
  %2729 = getelementptr inbounds i32, ptr %8, i64 %2701
  %2730 = load i32, ptr %2729, align 4, !tbaa !6
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2701
  store i32 %2730, ptr %2731, align 4, !tbaa !6
  %2732 = add nuw nsw i64 %2701, 1
  %2733 = icmp eq i64 %2732, %2549
  br i1 %2733, label %2741, label %2700, !llvm.loop !1010

2734:                                             ; preds = %2696, %2726
  %2735 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2736:                                             ; preds = %2709, %2718
  %2737 = phi ptr [ %2725, %2718 ], [ %2702, %2709 ]
  %2738 = phi i32 [ %2724, %2718 ], [ 1, %2709 ]
  %2739 = load i32, ptr %2737, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, %2738
  store i32 %2740, ptr %2737, align 4, !tbaa !6
  br label %2741

2741:                                             ; preds = %2728, %2736, %2698, %2688
  %2742 = icmp eq i32 %2612, %5
  br i1 %2742, label %3802, label %2611, !llvm.loop !1011

2743:                                             ; preds = %2537
  %2744 = getelementptr inbounds i32, ptr %3, i64 %19
  %2745 = load i32, ptr %2744, align 4, !tbaa !6
  %2746 = icmp eq i32 %2745, 0
  %2747 = icmp sgt i32 %5, 0
  br i1 %2746, label %2757, label %2748

2748:                                             ; preds = %2743
  br i1 %2747, label %2749, label %3802

2749:                                             ; preds = %2748
  %2750 = icmp sgt i32 %13, 1
  %2751 = icmp sgt i32 %13, 0
  %2752 = add i32 %13, -2
  %2753 = zext i32 %2752 to i64
  %2754 = zext i32 %13 to i64
  %2755 = add nuw i32 %5, 1
  %2756 = icmp eq i32 %13, 1
  br label %2816

2757:                                             ; preds = %2743
  br i1 %2747, label %2758, label %3802

2758:                                             ; preds = %2757
  %2759 = icmp sgt i32 %13, 0
  %2760 = add nuw i32 %5, 1
  %2761 = zext i32 %13 to i64
  %2762 = icmp eq i32 %13, 1
  br label %2763

2763:                                             ; preds = %2758, %2814
  %2764 = phi i32 [ 1, %2758 ], [ %2765, %2814 ]
  %2765 = add nuw i32 %2764, 1
  br i1 %2759, label %2766, label %2814

2766:                                             ; preds = %2763
  %2767 = load i32, ptr %4, align 4, !tbaa !6
  %2768 = load i32, ptr %12, align 4, !tbaa !6
  %2769 = add nsw i32 %2768, -1
  %2770 = icmp slt i32 %2767, %2769
  br i1 %2770, label %2790, label %2771

2771:                                             ; preds = %2766
  %2772 = icmp eq i32 %2767, %2769
  br i1 %2772, label %2773, label %2806

2773:                                             ; preds = %2771
  store i32 0, ptr %4, align 4, !tbaa !6
  %2774 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2774, ptr %6, align 4, !tbaa !6
  br i1 %2762, label %2814, label %2775

2775:                                             ; preds = %2773, %2800
  %2776 = phi i64 [ %2804, %2800 ], [ 1, %2773 ]
  %2777 = getelementptr inbounds i32, ptr %4, i64 %2776
  %2778 = load i32, ptr %2777, align 4, !tbaa !6
  %2779 = getelementptr inbounds i32, ptr %12, i64 %2776
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, -1
  %2782 = icmp slt i32 %2778, %2781
  br i1 %2782, label %2783, label %2798

2783:                                             ; preds = %2775
  br i1 %2770, label %2790, label %2784

2784:                                             ; preds = %2783
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2776
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2776
  %2788 = load i32, ptr %2787, align 4, !tbaa !6
  %2789 = add nsw i32 %2788, %2786
  store i32 %2789, ptr %2787, align 4, !tbaa !6
  br label %2809

2790:                                             ; preds = %2766, %2783
  %2791 = phi i32 [ %2778, %2783 ], [ %2767, %2766 ]
  %2792 = phi ptr [ %2777, %2783 ], [ %4, %2766 ]
  %2793 = phi i64 [ %2776, %2783 ], [ 0, %2766 ]
  %2794 = add nsw i32 %2791, 1
  store i32 %2794, ptr %2792, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %7, i64 %2793
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2793
  br label %2809

2798:                                             ; preds = %2775
  %2799 = icmp eq i32 %2778, %2781
  br i1 %2799, label %2800, label %2806

2800:                                             ; preds = %2798
  store i32 0, ptr %2777, align 4, !tbaa !6
  %2801 = getelementptr inbounds i32, ptr %8, i64 %2776
  %2802 = load i32, ptr %2801, align 4, !tbaa !6
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2776
  store i32 %2802, ptr %2803, align 4, !tbaa !6
  %2804 = add nuw nsw i64 %2776, 1
  %2805 = icmp eq i64 %2804, %2761
  br i1 %2805, label %2814, label %2775, !llvm.loop !1012

2806:                                             ; preds = %2771, %2798
  %2807 = sitofp i32 %2764 to double
  store double %2807, ptr %2534, align 8, !tbaa !105
  %2808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2809:                                             ; preds = %2784, %2790
  %2810 = phi ptr [ %2797, %2790 ], [ %2777, %2784 ]
  %2811 = phi i32 [ %2796, %2790 ], [ 1, %2784 ]
  %2812 = load i32, ptr %2810, align 4, !tbaa !6
  %2813 = add nsw i32 %2812, %2811
  store i32 %2813, ptr %2810, align 4, !tbaa !6
  br label %2814

2814:                                             ; preds = %2800, %2809, %2773, %2763
  %2815 = icmp eq i32 %2764, %5
  br i1 %2815, label %3792, label %2763, !llvm.loop !1013

2816:                                             ; preds = %2749, %2946
  %2817 = phi i32 [ 1, %2749 ], [ %2895, %2946 ]
  %2818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2750, label %2819, label %2888

2819:                                             ; preds = %2816, %2878
  %2820 = phi i32 [ %2887, %2878 ], [ 0, %2816 ]
  %2821 = phi i64 [ %2829, %2878 ], [ %2754, %2816 ]
  %2822 = phi i64 [ %2886, %2878 ], [ %2753, %2816 ]
  %2823 = phi i32 [ %2884, %2878 ], [ %2818, %2816 ]
  %2824 = sub i32 %2752, %2820
  %2825 = tail call i32 @llvm.smin.i32(i32 %2824, i32 0)
  %2826 = sub i32 %2824, %2825
  %2827 = zext i32 %2826 to i64
  %2828 = add nuw nsw i64 %2827, 1
  %2829 = add nsw i64 %2821, -1
  %2830 = icmp ult i32 %2826, 31
  br i1 %2830, label %2866, label %2831

2831:                                             ; preds = %2819
  %2832 = and i64 %2828, 8589934560
  %2833 = sub i64 %2822, %2832
  br label %2834

2834:                                             ; preds = %2834, %2831
  %2835 = phi i64 [ 0, %2831 ], [ %2858, %2834 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2854, %2834 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2855, %2834 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2856, %2834 ]
  %2839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2831 ], [ %2857, %2834 ]
  %2840 = sub i64 %2822, %2835
  %2841 = getelementptr inbounds i32, ptr %11, i64 %2840
  %2842 = getelementptr inbounds i32, ptr %2841, i64 -7
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2841, i64 -15
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2841, i64 -23
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = getelementptr inbounds i32, ptr %2841, i64 -31
  %2852 = load <8 x i32>, ptr %2851, align 4, !tbaa !6
  %2853 = shufflevector <8 x i32> %2852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2854 = mul <8 x i32> %2844, %2836
  %2855 = mul <8 x i32> %2847, %2837
  %2856 = mul <8 x i32> %2850, %2838
  %2857 = mul <8 x i32> %2853, %2839
  %2858 = add nuw i64 %2835, 32
  %2859 = icmp eq i64 %2858, %2832
  br i1 %2859, label %2860, label %2834, !llvm.loop !1014

2860:                                             ; preds = %2834
  %2861 = mul <8 x i32> %2855, %2854
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = mul <8 x i32> %2857, %2862
  %2864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2863)
  %2865 = icmp eq i64 %2828, %2832
  br i1 %2865, label %2878, label %2866

2866:                                             ; preds = %2819, %2860
  %2867 = phi i64 [ %2822, %2819 ], [ %2833, %2860 ]
  %2868 = phi i32 [ 1, %2819 ], [ %2864, %2860 ]
  br label %2869

2869:                                             ; preds = %2866, %2869
  %2870 = phi i64 [ %2875, %2869 ], [ %2867, %2866 ]
  %2871 = phi i32 [ %2874, %2869 ], [ %2868, %2866 ]
  %2872 = getelementptr inbounds i32, ptr %11, i64 %2870
  %2873 = load i32, ptr %2872, align 4, !tbaa !6
  %2874 = mul nsw i32 %2873, %2871
  %2875 = add nsw i64 %2870, -1
  %2876 = trunc i64 %2870 to i32
  %2877 = icmp sgt i32 %2876, 0
  br i1 %2877, label %2869, label %2878, !llvm.loop !1015

2878:                                             ; preds = %2869, %2860
  %2879 = phi i32 [ %2864, %2860 ], [ %2874, %2869 ]
  %2880 = and i64 %2829, 4294967295
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2880
  %2882 = load i32, ptr %2881, align 4, !tbaa !6
  %2883 = mul nsw i32 %2882, %2879
  %2884 = add nsw i32 %2883, %2823
  %2885 = icmp sgt i64 %2821, 2
  %2886 = add nsw i64 %2822, -1
  %2887 = add i32 %2820, 1
  br i1 %2885, label %2819, label %2888, !llvm.loop !1016

2888:                                             ; preds = %2878, %2816
  %2889 = phi i32 [ %2818, %2816 ], [ %2884, %2878 ]
  %2890 = icmp slt i32 %2889, %5
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

2893:                                             ; preds = %2888
  %2894 = sitofp i32 %2817 to double
  store double %2894, ptr %2534, align 8, !tbaa !105
  %2895 = add nuw i32 %2817, 1
  br i1 %2751, label %2896, label %2946

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %4, align 4, !tbaa !6
  %2898 = load i32, ptr %12, align 4, !tbaa !6
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2923, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2939

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !6
  %2904 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2904, ptr %6, align 4, !tbaa !6
  br i1 %2756, label %2946, label %2905

2905:                                             ; preds = %2903, %2933
  %2906 = phi i64 [ %2937, %2933 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2931

2913:                                             ; preds = %2905
  br i1 %2900, label %2923, label %2914

2914:                                             ; preds = %2913
  %2915 = shl i64 %2906, 32
  %2916 = add i64 %2915, -4294967296
  %2917 = ashr exact i64 %2916, 32
  %2918 = getelementptr inbounds i32, ptr %7, i64 %2917
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2921 = load i32, ptr %2920, align 4, !tbaa !6
  %2922 = add nsw i32 %2921, %2919
  store i32 %2922, ptr %2920, align 4, !tbaa !6
  br label %2941

2923:                                             ; preds = %2896, %2913
  %2924 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2925 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2926 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2927 = add nsw i32 %2924, 1
  store i32 %2927, ptr %2925, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2926
  br label %2941

2931:                                             ; preds = %2905
  %2932 = icmp eq i32 %2908, %2911
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  store i32 0, ptr %2907, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2935 = load i32, ptr %2934, align 4, !tbaa !6
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2935, ptr %2936, align 4, !tbaa !6
  %2937 = add nuw nsw i64 %2906, 1
  %2938 = icmp eq i64 %2937, %2754
  br i1 %2938, label %2946, label %2905, !llvm.loop !1017

2939:                                             ; preds = %2901, %2931
  %2940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

2941:                                             ; preds = %2914, %2923
  %2942 = phi ptr [ %2930, %2923 ], [ %2907, %2914 ]
  %2943 = phi i32 [ %2929, %2923 ], [ 1, %2914 ]
  %2944 = load i32, ptr %2942, align 4, !tbaa !6
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, ptr %2942, align 4, !tbaa !6
  br label %2946

2946:                                             ; preds = %2933, %2941, %2903, %2893
  %2947 = icmp eq i32 %2817, %5
  br i1 %2947, label %3802, label %2816, !llvm.loop !1018

2948:                                             ; preds = %2537
  %2949 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

2950:                                             ; preds = %18
  %2951 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2952 = load ptr, ptr %2951, align 8, !tbaa !10
  store float 0.000000e+00, ptr %2952, align 4, !tbaa !121
  %2953 = icmp eq i32 %13, 0
  br i1 %2953, label %2954, label %2955

2954:                                             ; preds = %2950
  store float 1.000000e+00, ptr %2952, align 4, !tbaa !121
  br label %3802

2955:                                             ; preds = %2950
  switch i32 %1, label %3366 [
    i32 1, label %2956
    i32 0, label %3161
  ]

2956:                                             ; preds = %2955
  %2957 = getelementptr inbounds i32, ptr %3, i64 %19
  %2958 = load i32, ptr %2957, align 4, !tbaa !6
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp sgt i32 %5, 0
  br i1 %2959, label %2970, label %2961

2961:                                             ; preds = %2956
  br i1 %2960, label %2962, label %3802

2962:                                             ; preds = %2961
  %2963 = icmp sgt i32 %13, 1
  %2964 = icmp sgt i32 %13, 0
  %2965 = add i32 %13, -2
  %2966 = zext i32 %2965 to i64
  %2967 = zext i32 %13 to i64
  %2968 = add nuw i32 %5, 1
  %2969 = icmp eq i32 %13, 1
  br label %3029

2970:                                             ; preds = %2956
  br i1 %2960, label %2971, label %3802

2971:                                             ; preds = %2970
  %2972 = icmp sgt i32 %13, 0
  %2973 = add nuw i32 %5, 1
  %2974 = zext i32 %13 to i64
  %2975 = icmp eq i32 %13, 1
  br label %2976

2976:                                             ; preds = %2971, %3027
  %2977 = phi i32 [ 1, %2971 ], [ %2978, %3027 ]
  %2978 = add nuw i32 %2977, 1
  br i1 %2972, label %2979, label %3027

2979:                                             ; preds = %2976
  %2980 = load i32, ptr %4, align 4, !tbaa !6
  %2981 = load i32, ptr %12, align 4, !tbaa !6
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2980, %2982
  br i1 %2983, label %3003, label %2984

2984:                                             ; preds = %2979
  %2985 = icmp eq i32 %2980, %2982
  br i1 %2985, label %2986, label %3019

2986:                                             ; preds = %2984
  store i32 0, ptr %4, align 4, !tbaa !6
  %2987 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2987, ptr %6, align 4, !tbaa !6
  br i1 %2975, label %3027, label %2988

2988:                                             ; preds = %2986, %3013
  %2989 = phi i64 [ %3017, %3013 ], [ 1, %2986 ]
  %2990 = getelementptr inbounds i32, ptr %4, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !6
  %2992 = getelementptr inbounds i32, ptr %12, i64 %2989
  %2993 = load i32, ptr %2992, align 4, !tbaa !6
  %2994 = add nsw i32 %2993, -1
  %2995 = icmp slt i32 %2991, %2994
  br i1 %2995, label %2996, label %3011

2996:                                             ; preds = %2988
  br i1 %2983, label %3003, label %2997

2997:                                             ; preds = %2996
  %2998 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2999 = load i32, ptr %2998, align 4, !tbaa !6
  %3000 = getelementptr inbounds i32, ptr %6, i64 %2989
  %3001 = load i32, ptr %3000, align 4, !tbaa !6
  %3002 = add nsw i32 %3001, %2999
  store i32 %3002, ptr %3000, align 4, !tbaa !6
  br label %3022

3003:                                             ; preds = %2979, %2996
  %3004 = phi i32 [ %2991, %2996 ], [ %2980, %2979 ]
  %3005 = phi ptr [ %2990, %2996 ], [ %4, %2979 ]
  %3006 = phi i64 [ %2989, %2996 ], [ 0, %2979 ]
  %3007 = add nsw i32 %3004, 1
  store i32 %3007, ptr %3005, align 4, !tbaa !6
  %3008 = getelementptr inbounds i32, ptr %7, i64 %3006
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3006
  br label %3022

3011:                                             ; preds = %2988
  %3012 = icmp eq i32 %2991, %2994
  br i1 %3012, label %3013, label %3019

3013:                                             ; preds = %3011
  store i32 0, ptr %2990, align 4, !tbaa !6
  %3014 = getelementptr inbounds i32, ptr %8, i64 %2989
  %3015 = load i32, ptr %3014, align 4, !tbaa !6
  %3016 = getelementptr inbounds i32, ptr %6, i64 %2989
  store i32 %3015, ptr %3016, align 4, !tbaa !6
  %3017 = add nuw nsw i64 %2989, 1
  %3018 = icmp eq i64 %3017, %2974
  br i1 %3018, label %3027, label %2988, !llvm.loop !1019

3019:                                             ; preds = %2984, %3011
  %3020 = sitofp i32 %2977 to float
  store float %3020, ptr %2952, align 4, !tbaa !121
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3022:                                             ; preds = %2997, %3003
  %3023 = phi ptr [ %3010, %3003 ], [ %2990, %2997 ]
  %3024 = phi i32 [ %3009, %3003 ], [ 1, %2997 ]
  %3025 = load i32, ptr %3023, align 4, !tbaa !6
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %3023, align 4, !tbaa !6
  br label %3027

3027:                                             ; preds = %3013, %3022, %2986, %2976
  %3028 = icmp eq i32 %2977, %5
  br i1 %3028, label %3794, label %2976, !llvm.loop !1020

3029:                                             ; preds = %2962, %3159
  %3030 = phi i32 [ 1, %2962 ], [ %3108, %3159 ]
  %3031 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2963, label %3032, label %3101

3032:                                             ; preds = %3029, %3091
  %3033 = phi i32 [ %3100, %3091 ], [ 0, %3029 ]
  %3034 = phi i64 [ %3042, %3091 ], [ %2967, %3029 ]
  %3035 = phi i64 [ %3099, %3091 ], [ %2966, %3029 ]
  %3036 = phi i32 [ %3097, %3091 ], [ %3031, %3029 ]
  %3037 = sub i32 %2965, %3033
  %3038 = tail call i32 @llvm.smin.i32(i32 %3037, i32 0)
  %3039 = sub i32 %3037, %3038
  %3040 = zext i32 %3039 to i64
  %3041 = add nuw nsw i64 %3040, 1
  %3042 = add nsw i64 %3034, -1
  %3043 = icmp ult i32 %3039, 31
  br i1 %3043, label %3079, label %3044

3044:                                             ; preds = %3032
  %3045 = and i64 %3041, 8589934560
  %3046 = sub i64 %3035, %3045
  br label %3047

3047:                                             ; preds = %3047, %3044
  %3048 = phi i64 [ 0, %3044 ], [ %3071, %3047 ]
  %3049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3067, %3047 ]
  %3050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3068, %3047 ]
  %3051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3069, %3047 ]
  %3052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3044 ], [ %3070, %3047 ]
  %3053 = sub i64 %3035, %3048
  %3054 = getelementptr inbounds i32, ptr %11, i64 %3053
  %3055 = getelementptr inbounds i32, ptr %3054, i64 -7
  %3056 = load <8 x i32>, ptr %3055, align 4, !tbaa !6
  %3057 = shufflevector <8 x i32> %3056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3058 = getelementptr inbounds i32, ptr %3054, i64 -15
  %3059 = load <8 x i32>, ptr %3058, align 4, !tbaa !6
  %3060 = shufflevector <8 x i32> %3059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3061 = getelementptr inbounds i32, ptr %3054, i64 -23
  %3062 = load <8 x i32>, ptr %3061, align 4, !tbaa !6
  %3063 = shufflevector <8 x i32> %3062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3064 = getelementptr inbounds i32, ptr %3054, i64 -31
  %3065 = load <8 x i32>, ptr %3064, align 4, !tbaa !6
  %3066 = shufflevector <8 x i32> %3065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3067 = mul <8 x i32> %3057, %3049
  %3068 = mul <8 x i32> %3060, %3050
  %3069 = mul <8 x i32> %3063, %3051
  %3070 = mul <8 x i32> %3066, %3052
  %3071 = add nuw i64 %3048, 32
  %3072 = icmp eq i64 %3071, %3045
  br i1 %3072, label %3073, label %3047, !llvm.loop !1021

3073:                                             ; preds = %3047
  %3074 = mul <8 x i32> %3068, %3067
  %3075 = mul <8 x i32> %3069, %3074
  %3076 = mul <8 x i32> %3070, %3075
  %3077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3076)
  %3078 = icmp eq i64 %3041, %3045
  br i1 %3078, label %3091, label %3079

3079:                                             ; preds = %3032, %3073
  %3080 = phi i64 [ %3035, %3032 ], [ %3046, %3073 ]
  %3081 = phi i32 [ 1, %3032 ], [ %3077, %3073 ]
  br label %3082

3082:                                             ; preds = %3079, %3082
  %3083 = phi i64 [ %3088, %3082 ], [ %3080, %3079 ]
  %3084 = phi i32 [ %3087, %3082 ], [ %3081, %3079 ]
  %3085 = getelementptr inbounds i32, ptr %11, i64 %3083
  %3086 = load i32, ptr %3085, align 4, !tbaa !6
  %3087 = mul nsw i32 %3086, %3084
  %3088 = add nsw i64 %3083, -1
  %3089 = trunc i64 %3083 to i32
  %3090 = icmp sgt i32 %3089, 0
  br i1 %3090, label %3082, label %3091, !llvm.loop !1022

3091:                                             ; preds = %3082, %3073
  %3092 = phi i32 [ %3077, %3073 ], [ %3087, %3082 ]
  %3093 = and i64 %3042, 4294967295
  %3094 = getelementptr inbounds i32, ptr %6, i64 %3093
  %3095 = load i32, ptr %3094, align 4, !tbaa !6
  %3096 = mul nsw i32 %3095, %3092
  %3097 = add nsw i32 %3096, %3036
  %3098 = icmp sgt i64 %3034, 2
  %3099 = add nsw i64 %3035, -1
  %3100 = add i32 %3033, 1
  br i1 %3098, label %3032, label %3101, !llvm.loop !1023

3101:                                             ; preds = %3091, %3029
  %3102 = phi i32 [ %3031, %3029 ], [ %3097, %3091 ]
  %3103 = icmp slt i32 %3102, %5
  br i1 %3103, label %3106, label %3104

3104:                                             ; preds = %3101
  %3105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3106:                                             ; preds = %3101
  %3107 = sitofp i32 %3030 to float
  store float %3107, ptr %2952, align 4, !tbaa !121
  %3108 = add nuw i32 %3030, 1
  br i1 %2964, label %3109, label %3159

3109:                                             ; preds = %3106
  %3110 = load i32, ptr %4, align 4, !tbaa !6
  %3111 = load i32, ptr %12, align 4, !tbaa !6
  %3112 = add nsw i32 %3111, -1
  %3113 = icmp slt i32 %3110, %3112
  br i1 %3113, label %3136, label %3114

3114:                                             ; preds = %3109
  %3115 = icmp eq i32 %3110, %3112
  br i1 %3115, label %3116, label %3152

3116:                                             ; preds = %3114
  store i32 0, ptr %4, align 4, !tbaa !6
  %3117 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3117, ptr %6, align 4, !tbaa !6
  br i1 %2969, label %3159, label %3118

3118:                                             ; preds = %3116, %3146
  %3119 = phi i64 [ %3150, %3146 ], [ 1, %3116 ]
  %3120 = getelementptr inbounds i32, ptr %4, i64 %3119
  %3121 = load i32, ptr %3120, align 4, !tbaa !6
  %3122 = getelementptr inbounds i32, ptr %12, i64 %3119
  %3123 = load i32, ptr %3122, align 4, !tbaa !6
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3121, %3124
  br i1 %3125, label %3126, label %3144

3126:                                             ; preds = %3118
  br i1 %3113, label %3136, label %3127

3127:                                             ; preds = %3126
  %3128 = shl i64 %3119, 32
  %3129 = add i64 %3128, -4294967296
  %3130 = ashr exact i64 %3129, 32
  %3131 = getelementptr inbounds i32, ptr %7, i64 %3130
  %3132 = load i32, ptr %3131, align 4, !tbaa !6
  %3133 = getelementptr inbounds i32, ptr %6, i64 %3119
  %3134 = load i32, ptr %3133, align 4, !tbaa !6
  %3135 = add nsw i32 %3134, %3132
  store i32 %3135, ptr %3133, align 4, !tbaa !6
  br label %3154

3136:                                             ; preds = %3109, %3126
  %3137 = phi i32 [ %3121, %3126 ], [ %3110, %3109 ]
  %3138 = phi ptr [ %3120, %3126 ], [ %4, %3109 ]
  %3139 = phi i64 [ %3119, %3126 ], [ 0, %3109 ]
  %3140 = add nsw i32 %3137, 1
  store i32 %3140, ptr %3138, align 4, !tbaa !6
  %3141 = getelementptr inbounds i32, ptr %7, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !6
  %3143 = getelementptr inbounds i32, ptr %6, i64 %3139
  br label %3154

3144:                                             ; preds = %3118
  %3145 = icmp eq i32 %3121, %3124
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  store i32 0, ptr %3120, align 4, !tbaa !6
  %3147 = getelementptr inbounds i32, ptr %8, i64 %3119
  %3148 = load i32, ptr %3147, align 4, !tbaa !6
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3119
  store i32 %3148, ptr %3149, align 4, !tbaa !6
  %3150 = add nuw nsw i64 %3119, 1
  %3151 = icmp eq i64 %3150, %2967
  br i1 %3151, label %3159, label %3118, !llvm.loop !1024

3152:                                             ; preds = %3114, %3144
  %3153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3154:                                             ; preds = %3127, %3136
  %3155 = phi ptr [ %3143, %3136 ], [ %3120, %3127 ]
  %3156 = phi i32 [ %3142, %3136 ], [ 1, %3127 ]
  %3157 = load i32, ptr %3155, align 4, !tbaa !6
  %3158 = add nsw i32 %3157, %3156
  store i32 %3158, ptr %3155, align 4, !tbaa !6
  br label %3159

3159:                                             ; preds = %3146, %3154, %3116, %3106
  %3160 = icmp eq i32 %3030, %5
  br i1 %3160, label %3802, label %3029, !llvm.loop !1025

3161:                                             ; preds = %2955
  %3162 = getelementptr inbounds i32, ptr %3, i64 %19
  %3163 = load i32, ptr %3162, align 4, !tbaa !6
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp sgt i32 %5, 0
  br i1 %3164, label %3175, label %3166

3166:                                             ; preds = %3161
  br i1 %3165, label %3167, label %3802

3167:                                             ; preds = %3166
  %3168 = icmp sgt i32 %13, 1
  %3169 = icmp sgt i32 %13, 0
  %3170 = add i32 %13, -2
  %3171 = zext i32 %3170 to i64
  %3172 = zext i32 %13 to i64
  %3173 = add nuw i32 %5, 1
  %3174 = icmp eq i32 %13, 1
  br label %3234

3175:                                             ; preds = %3161
  br i1 %3165, label %3176, label %3802

3176:                                             ; preds = %3175
  %3177 = icmp sgt i32 %13, 0
  %3178 = add nuw i32 %5, 1
  %3179 = zext i32 %13 to i64
  %3180 = icmp eq i32 %13, 1
  br label %3181

3181:                                             ; preds = %3176, %3232
  %3182 = phi i32 [ 1, %3176 ], [ %3183, %3232 ]
  %3183 = add nuw i32 %3182, 1
  br i1 %3177, label %3184, label %3232

3184:                                             ; preds = %3181
  %3185 = load i32, ptr %4, align 4, !tbaa !6
  %3186 = load i32, ptr %12, align 4, !tbaa !6
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3185, %3187
  br i1 %3188, label %3208, label %3189

3189:                                             ; preds = %3184
  %3190 = icmp eq i32 %3185, %3187
  br i1 %3190, label %3191, label %3224

3191:                                             ; preds = %3189
  store i32 0, ptr %4, align 4, !tbaa !6
  %3192 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3192, ptr %6, align 4, !tbaa !6
  br i1 %3180, label %3232, label %3193

3193:                                             ; preds = %3191, %3218
  %3194 = phi i64 [ %3222, %3218 ], [ 1, %3191 ]
  %3195 = getelementptr inbounds i32, ptr %4, i64 %3194
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = getelementptr inbounds i32, ptr %12, i64 %3194
  %3198 = load i32, ptr %3197, align 4, !tbaa !6
  %3199 = add nsw i32 %3198, -1
  %3200 = icmp slt i32 %3196, %3199
  br i1 %3200, label %3201, label %3216

3201:                                             ; preds = %3193
  br i1 %3188, label %3208, label %3202

3202:                                             ; preds = %3201
  %3203 = getelementptr inbounds i32, ptr %7, i64 %3194
  %3204 = load i32, ptr %3203, align 4, !tbaa !6
  %3205 = getelementptr inbounds i32, ptr %6, i64 %3194
  %3206 = load i32, ptr %3205, align 4, !tbaa !6
  %3207 = add nsw i32 %3206, %3204
  store i32 %3207, ptr %3205, align 4, !tbaa !6
  br label %3227

3208:                                             ; preds = %3184, %3201
  %3209 = phi i32 [ %3196, %3201 ], [ %3185, %3184 ]
  %3210 = phi ptr [ %3195, %3201 ], [ %4, %3184 ]
  %3211 = phi i64 [ %3194, %3201 ], [ 0, %3184 ]
  %3212 = add nsw i32 %3209, 1
  store i32 %3212, ptr %3210, align 4, !tbaa !6
  %3213 = getelementptr inbounds i32, ptr %7, i64 %3211
  %3214 = load i32, ptr %3213, align 4, !tbaa !6
  %3215 = getelementptr inbounds i32, ptr %6, i64 %3211
  br label %3227

3216:                                             ; preds = %3193
  %3217 = icmp eq i32 %3196, %3199
  br i1 %3217, label %3218, label %3224

3218:                                             ; preds = %3216
  store i32 0, ptr %3195, align 4, !tbaa !6
  %3219 = getelementptr inbounds i32, ptr %8, i64 %3194
  %3220 = load i32, ptr %3219, align 4, !tbaa !6
  %3221 = getelementptr inbounds i32, ptr %6, i64 %3194
  store i32 %3220, ptr %3221, align 4, !tbaa !6
  %3222 = add nuw nsw i64 %3194, 1
  %3223 = icmp eq i64 %3222, %3179
  br i1 %3223, label %3232, label %3193, !llvm.loop !1026

3224:                                             ; preds = %3189, %3216
  %3225 = sitofp i32 %3182 to float
  store float %3225, ptr %2952, align 4, !tbaa !121
  %3226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3227:                                             ; preds = %3202, %3208
  %3228 = phi ptr [ %3215, %3208 ], [ %3195, %3202 ]
  %3229 = phi i32 [ %3214, %3208 ], [ 1, %3202 ]
  %3230 = load i32, ptr %3228, align 4, !tbaa !6
  %3231 = add nsw i32 %3230, %3229
  store i32 %3231, ptr %3228, align 4, !tbaa !6
  br label %3232

3232:                                             ; preds = %3218, %3227, %3191, %3181
  %3233 = icmp eq i32 %3182, %5
  br i1 %3233, label %3796, label %3181, !llvm.loop !1027

3234:                                             ; preds = %3167, %3364
  %3235 = phi i32 [ 1, %3167 ], [ %3313, %3364 ]
  %3236 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3168, label %3237, label %3306

3237:                                             ; preds = %3234, %3296
  %3238 = phi i32 [ %3305, %3296 ], [ 0, %3234 ]
  %3239 = phi i64 [ %3247, %3296 ], [ %3172, %3234 ]
  %3240 = phi i64 [ %3304, %3296 ], [ %3171, %3234 ]
  %3241 = phi i32 [ %3302, %3296 ], [ %3236, %3234 ]
  %3242 = sub i32 %3170, %3238
  %3243 = tail call i32 @llvm.smin.i32(i32 %3242, i32 0)
  %3244 = sub i32 %3242, %3243
  %3245 = zext i32 %3244 to i64
  %3246 = add nuw nsw i64 %3245, 1
  %3247 = add nsw i64 %3239, -1
  %3248 = icmp ult i32 %3244, 31
  br i1 %3248, label %3284, label %3249

3249:                                             ; preds = %3237
  %3250 = and i64 %3246, 8589934560
  %3251 = sub i64 %3240, %3250
  br label %3252

3252:                                             ; preds = %3252, %3249
  %3253 = phi i64 [ 0, %3249 ], [ %3276, %3252 ]
  %3254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3272, %3252 ]
  %3255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3273, %3252 ]
  %3256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3274, %3252 ]
  %3257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3249 ], [ %3275, %3252 ]
  %3258 = sub i64 %3240, %3253
  %3259 = getelementptr inbounds i32, ptr %11, i64 %3258
  %3260 = getelementptr inbounds i32, ptr %3259, i64 -7
  %3261 = load <8 x i32>, ptr %3260, align 4, !tbaa !6
  %3262 = shufflevector <8 x i32> %3261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3263 = getelementptr inbounds i32, ptr %3259, i64 -15
  %3264 = load <8 x i32>, ptr %3263, align 4, !tbaa !6
  %3265 = shufflevector <8 x i32> %3264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3266 = getelementptr inbounds i32, ptr %3259, i64 -23
  %3267 = load <8 x i32>, ptr %3266, align 4, !tbaa !6
  %3268 = shufflevector <8 x i32> %3267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3269 = getelementptr inbounds i32, ptr %3259, i64 -31
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = mul <8 x i32> %3262, %3254
  %3273 = mul <8 x i32> %3265, %3255
  %3274 = mul <8 x i32> %3268, %3256
  %3275 = mul <8 x i32> %3271, %3257
  %3276 = add nuw i64 %3253, 32
  %3277 = icmp eq i64 %3276, %3250
  br i1 %3277, label %3278, label %3252, !llvm.loop !1028

3278:                                             ; preds = %3252
  %3279 = mul <8 x i32> %3273, %3272
  %3280 = mul <8 x i32> %3274, %3279
  %3281 = mul <8 x i32> %3275, %3280
  %3282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3281)
  %3283 = icmp eq i64 %3246, %3250
  br i1 %3283, label %3296, label %3284

3284:                                             ; preds = %3237, %3278
  %3285 = phi i64 [ %3240, %3237 ], [ %3251, %3278 ]
  %3286 = phi i32 [ 1, %3237 ], [ %3282, %3278 ]
  br label %3287

3287:                                             ; preds = %3284, %3287
  %3288 = phi i64 [ %3293, %3287 ], [ %3285, %3284 ]
  %3289 = phi i32 [ %3292, %3287 ], [ %3286, %3284 ]
  %3290 = getelementptr inbounds i32, ptr %11, i64 %3288
  %3291 = load i32, ptr %3290, align 4, !tbaa !6
  %3292 = mul nsw i32 %3291, %3289
  %3293 = add nsw i64 %3288, -1
  %3294 = trunc i64 %3288 to i32
  %3295 = icmp sgt i32 %3294, 0
  br i1 %3295, label %3287, label %3296, !llvm.loop !1029

3296:                                             ; preds = %3287, %3278
  %3297 = phi i32 [ %3282, %3278 ], [ %3292, %3287 ]
  %3298 = and i64 %3247, 4294967295
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3298
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3297
  %3302 = add nsw i32 %3301, %3241
  %3303 = icmp sgt i64 %3239, 2
  %3304 = add nsw i64 %3240, -1
  %3305 = add i32 %3238, 1
  br i1 %3303, label %3237, label %3306, !llvm.loop !1030

3306:                                             ; preds = %3296, %3234
  %3307 = phi i32 [ %3236, %3234 ], [ %3302, %3296 ]
  %3308 = icmp slt i32 %3307, %5
  br i1 %3308, label %3311, label %3309

3309:                                             ; preds = %3306
  %3310 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3311:                                             ; preds = %3306
  %3312 = sitofp i32 %3235 to float
  store float %3312, ptr %2952, align 4, !tbaa !121
  %3313 = add nuw i32 %3235, 1
  br i1 %3169, label %3314, label %3364

3314:                                             ; preds = %3311
  %3315 = load i32, ptr %4, align 4, !tbaa !6
  %3316 = load i32, ptr %12, align 4, !tbaa !6
  %3317 = add nsw i32 %3316, -1
  %3318 = icmp slt i32 %3315, %3317
  br i1 %3318, label %3341, label %3319

3319:                                             ; preds = %3314
  %3320 = icmp eq i32 %3315, %3317
  br i1 %3320, label %3321, label %3357

3321:                                             ; preds = %3319
  store i32 0, ptr %4, align 4, !tbaa !6
  %3322 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3322, ptr %6, align 4, !tbaa !6
  br i1 %3174, label %3364, label %3323

3323:                                             ; preds = %3321, %3351
  %3324 = phi i64 [ %3355, %3351 ], [ 1, %3321 ]
  %3325 = getelementptr inbounds i32, ptr %4, i64 %3324
  %3326 = load i32, ptr %3325, align 4, !tbaa !6
  %3327 = getelementptr inbounds i32, ptr %12, i64 %3324
  %3328 = load i32, ptr %3327, align 4, !tbaa !6
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3326, %3329
  br i1 %3330, label %3331, label %3349

3331:                                             ; preds = %3323
  br i1 %3318, label %3341, label %3332

3332:                                             ; preds = %3331
  %3333 = shl i64 %3324, 32
  %3334 = add i64 %3333, -4294967296
  %3335 = ashr exact i64 %3334, 32
  %3336 = getelementptr inbounds i32, ptr %7, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !6
  %3338 = getelementptr inbounds i32, ptr %6, i64 %3324
  %3339 = load i32, ptr %3338, align 4, !tbaa !6
  %3340 = add nsw i32 %3339, %3337
  store i32 %3340, ptr %3338, align 4, !tbaa !6
  br label %3359

3341:                                             ; preds = %3314, %3331
  %3342 = phi i32 [ %3326, %3331 ], [ %3315, %3314 ]
  %3343 = phi ptr [ %3325, %3331 ], [ %4, %3314 ]
  %3344 = phi i64 [ %3324, %3331 ], [ 0, %3314 ]
  %3345 = add nsw i32 %3342, 1
  store i32 %3345, ptr %3343, align 4, !tbaa !6
  %3346 = getelementptr inbounds i32, ptr %7, i64 %3344
  %3347 = load i32, ptr %3346, align 4, !tbaa !6
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3344
  br label %3359

3349:                                             ; preds = %3323
  %3350 = icmp eq i32 %3326, %3329
  br i1 %3350, label %3351, label %3357

3351:                                             ; preds = %3349
  store i32 0, ptr %3325, align 4, !tbaa !6
  %3352 = getelementptr inbounds i32, ptr %8, i64 %3324
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3324
  store i32 %3353, ptr %3354, align 4, !tbaa !6
  %3355 = add nuw nsw i64 %3324, 1
  %3356 = icmp eq i64 %3355, %3172
  br i1 %3356, label %3364, label %3323, !llvm.loop !1031

3357:                                             ; preds = %3319, %3349
  %3358 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3359:                                             ; preds = %3332, %3341
  %3360 = phi ptr [ %3348, %3341 ], [ %3325, %3332 ]
  %3361 = phi i32 [ %3347, %3341 ], [ 1, %3332 ]
  %3362 = load i32, ptr %3360, align 4, !tbaa !6
  %3363 = add nsw i32 %3362, %3361
  store i32 %3363, ptr %3360, align 4, !tbaa !6
  br label %3364

3364:                                             ; preds = %3351, %3359, %3321, %3311
  %3365 = icmp eq i32 %3235, %5
  br i1 %3365, label %3802, label %3234, !llvm.loop !1032

3366:                                             ; preds = %2955
  %3367 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1988, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3368:                                             ; preds = %18
  %3369 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3370 = load ptr, ptr %3369, align 8, !tbaa !10
  store double 0.000000e+00, ptr %3370, align 8, !tbaa !105
  %3371 = icmp eq i32 %13, 0
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3368
  store double 1.000000e+00, ptr %3370, align 8, !tbaa !105
  br label %3802

3373:                                             ; preds = %3368
  switch i32 %1, label %3784 [
    i32 1, label %3374
    i32 0, label %3579
  ]

3374:                                             ; preds = %3373
  %3375 = getelementptr inbounds i32, ptr %3, i64 %19
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp sgt i32 %5, 0
  br i1 %3377, label %3388, label %3379

3379:                                             ; preds = %3374
  br i1 %3378, label %3380, label %3802

3380:                                             ; preds = %3379
  %3381 = icmp sgt i32 %13, 1
  %3382 = icmp sgt i32 %13, 0
  %3383 = add i32 %13, -2
  %3384 = zext i32 %3383 to i64
  %3385 = zext i32 %13 to i64
  %3386 = add nuw i32 %5, 1
  %3387 = icmp eq i32 %13, 1
  br label %3447

3388:                                             ; preds = %3374
  br i1 %3378, label %3389, label %3802

3389:                                             ; preds = %3388
  %3390 = icmp sgt i32 %13, 0
  %3391 = add nuw i32 %5, 1
  %3392 = zext i32 %13 to i64
  %3393 = icmp eq i32 %13, 1
  br label %3394

3394:                                             ; preds = %3389, %3445
  %3395 = phi i32 [ 1, %3389 ], [ %3396, %3445 ]
  %3396 = add nuw i32 %3395, 1
  br i1 %3390, label %3397, label %3445

3397:                                             ; preds = %3394
  %3398 = load i32, ptr %4, align 4, !tbaa !6
  %3399 = load i32, ptr %12, align 4, !tbaa !6
  %3400 = add nsw i32 %3399, -1
  %3401 = icmp slt i32 %3398, %3400
  br i1 %3401, label %3421, label %3402

3402:                                             ; preds = %3397
  %3403 = icmp eq i32 %3398, %3400
  br i1 %3403, label %3404, label %3437

3404:                                             ; preds = %3402
  store i32 0, ptr %4, align 4, !tbaa !6
  %3405 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3405, ptr %6, align 4, !tbaa !6
  br i1 %3393, label %3445, label %3406

3406:                                             ; preds = %3404, %3431
  %3407 = phi i64 [ %3435, %3431 ], [ 1, %3404 ]
  %3408 = getelementptr inbounds i32, ptr %4, i64 %3407
  %3409 = load i32, ptr %3408, align 4, !tbaa !6
  %3410 = getelementptr inbounds i32, ptr %12, i64 %3407
  %3411 = load i32, ptr %3410, align 4, !tbaa !6
  %3412 = add nsw i32 %3411, -1
  %3413 = icmp slt i32 %3409, %3412
  br i1 %3413, label %3414, label %3429

3414:                                             ; preds = %3406
  br i1 %3401, label %3421, label %3415

3415:                                             ; preds = %3414
  %3416 = getelementptr inbounds i32, ptr %7, i64 %3407
  %3417 = load i32, ptr %3416, align 4, !tbaa !6
  %3418 = getelementptr inbounds i32, ptr %6, i64 %3407
  %3419 = load i32, ptr %3418, align 4, !tbaa !6
  %3420 = add nsw i32 %3419, %3417
  store i32 %3420, ptr %3418, align 4, !tbaa !6
  br label %3440

3421:                                             ; preds = %3397, %3414
  %3422 = phi i32 [ %3409, %3414 ], [ %3398, %3397 ]
  %3423 = phi ptr [ %3408, %3414 ], [ %4, %3397 ]
  %3424 = phi i64 [ %3407, %3414 ], [ 0, %3397 ]
  %3425 = add nsw i32 %3422, 1
  store i32 %3425, ptr %3423, align 4, !tbaa !6
  %3426 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3427 = load i32, ptr %3426, align 4, !tbaa !6
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3424
  br label %3440

3429:                                             ; preds = %3406
  %3430 = icmp eq i32 %3409, %3412
  br i1 %3430, label %3431, label %3437

3431:                                             ; preds = %3429
  store i32 0, ptr %3408, align 4, !tbaa !6
  %3432 = getelementptr inbounds i32, ptr %8, i64 %3407
  %3433 = load i32, ptr %3432, align 4, !tbaa !6
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3407
  store i32 %3433, ptr %3434, align 4, !tbaa !6
  %3435 = add nuw nsw i64 %3407, 1
  %3436 = icmp eq i64 %3435, %3392
  br i1 %3436, label %3445, label %3406, !llvm.loop !1033

3437:                                             ; preds = %3402, %3429
  %3438 = sitofp i32 %3395 to double
  store double %3438, ptr %3370, align 8, !tbaa !105
  %3439 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3440:                                             ; preds = %3415, %3421
  %3441 = phi ptr [ %3428, %3421 ], [ %3408, %3415 ]
  %3442 = phi i32 [ %3427, %3421 ], [ 1, %3415 ]
  %3443 = load i32, ptr %3441, align 4, !tbaa !6
  %3444 = add nsw i32 %3443, %3442
  store i32 %3444, ptr %3441, align 4, !tbaa !6
  br label %3445

3445:                                             ; preds = %3431, %3440, %3404, %3394
  %3446 = icmp eq i32 %3395, %5
  br i1 %3446, label %3798, label %3394, !llvm.loop !1034

3447:                                             ; preds = %3380, %3577
  %3448 = phi i32 [ 1, %3380 ], [ %3526, %3577 ]
  %3449 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3381, label %3450, label %3519

3450:                                             ; preds = %3447, %3509
  %3451 = phi i32 [ %3518, %3509 ], [ 0, %3447 ]
  %3452 = phi i64 [ %3460, %3509 ], [ %3385, %3447 ]
  %3453 = phi i64 [ %3517, %3509 ], [ %3384, %3447 ]
  %3454 = phi i32 [ %3515, %3509 ], [ %3449, %3447 ]
  %3455 = sub i32 %3383, %3451
  %3456 = tail call i32 @llvm.smin.i32(i32 %3455, i32 0)
  %3457 = sub i32 %3455, %3456
  %3458 = zext i32 %3457 to i64
  %3459 = add nuw nsw i64 %3458, 1
  %3460 = add nsw i64 %3452, -1
  %3461 = icmp ult i32 %3457, 31
  br i1 %3461, label %3497, label %3462

3462:                                             ; preds = %3450
  %3463 = and i64 %3459, 8589934560
  %3464 = sub i64 %3453, %3463
  br label %3465

3465:                                             ; preds = %3465, %3462
  %3466 = phi i64 [ 0, %3462 ], [ %3489, %3465 ]
  %3467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3485, %3465 ]
  %3468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3486, %3465 ]
  %3469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3487, %3465 ]
  %3470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3462 ], [ %3488, %3465 ]
  %3471 = sub i64 %3453, %3466
  %3472 = getelementptr inbounds i32, ptr %11, i64 %3471
  %3473 = getelementptr inbounds i32, ptr %3472, i64 -7
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3472, i64 -15
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = getelementptr inbounds i32, ptr %3472, i64 -23
  %3480 = load <8 x i32>, ptr %3479, align 4, !tbaa !6
  %3481 = shufflevector <8 x i32> %3480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3482 = getelementptr inbounds i32, ptr %3472, i64 -31
  %3483 = load <8 x i32>, ptr %3482, align 4, !tbaa !6
  %3484 = shufflevector <8 x i32> %3483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3485 = mul <8 x i32> %3475, %3467
  %3486 = mul <8 x i32> %3478, %3468
  %3487 = mul <8 x i32> %3481, %3469
  %3488 = mul <8 x i32> %3484, %3470
  %3489 = add nuw i64 %3466, 32
  %3490 = icmp eq i64 %3489, %3463
  br i1 %3490, label %3491, label %3465, !llvm.loop !1035

3491:                                             ; preds = %3465
  %3492 = mul <8 x i32> %3486, %3485
  %3493 = mul <8 x i32> %3487, %3492
  %3494 = mul <8 x i32> %3488, %3493
  %3495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3494)
  %3496 = icmp eq i64 %3459, %3463
  br i1 %3496, label %3509, label %3497

3497:                                             ; preds = %3450, %3491
  %3498 = phi i64 [ %3453, %3450 ], [ %3464, %3491 ]
  %3499 = phi i32 [ 1, %3450 ], [ %3495, %3491 ]
  br label %3500

3500:                                             ; preds = %3497, %3500
  %3501 = phi i64 [ %3506, %3500 ], [ %3498, %3497 ]
  %3502 = phi i32 [ %3505, %3500 ], [ %3499, %3497 ]
  %3503 = getelementptr inbounds i32, ptr %11, i64 %3501
  %3504 = load i32, ptr %3503, align 4, !tbaa !6
  %3505 = mul nsw i32 %3504, %3502
  %3506 = add nsw i64 %3501, -1
  %3507 = trunc i64 %3501 to i32
  %3508 = icmp sgt i32 %3507, 0
  br i1 %3508, label %3500, label %3509, !llvm.loop !1036

3509:                                             ; preds = %3500, %3491
  %3510 = phi i32 [ %3495, %3491 ], [ %3505, %3500 ]
  %3511 = and i64 %3460, 4294967295
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = mul nsw i32 %3513, %3510
  %3515 = add nsw i32 %3514, %3454
  %3516 = icmp sgt i64 %3452, 2
  %3517 = add nsw i64 %3453, -1
  %3518 = add i32 %3451, 1
  br i1 %3516, label %3450, label %3519, !llvm.loop !1037

3519:                                             ; preds = %3509, %3447
  %3520 = phi i32 [ %3449, %3447 ], [ %3515, %3509 ]
  %3521 = icmp slt i32 %3520, %5
  br i1 %3521, label %3524, label %3522

3522:                                             ; preds = %3519
  %3523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3524:                                             ; preds = %3519
  %3525 = sitofp i32 %3448 to double
  store double %3525, ptr %3370, align 8, !tbaa !105
  %3526 = add nuw i32 %3448, 1
  br i1 %3382, label %3527, label %3577

3527:                                             ; preds = %3524
  %3528 = load i32, ptr %4, align 4, !tbaa !6
  %3529 = load i32, ptr %12, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, -1
  %3531 = icmp slt i32 %3528, %3530
  br i1 %3531, label %3554, label %3532

3532:                                             ; preds = %3527
  %3533 = icmp eq i32 %3528, %3530
  br i1 %3533, label %3534, label %3570

3534:                                             ; preds = %3532
  store i32 0, ptr %4, align 4, !tbaa !6
  %3535 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3535, ptr %6, align 4, !tbaa !6
  br i1 %3387, label %3577, label %3536

3536:                                             ; preds = %3534, %3564
  %3537 = phi i64 [ %3568, %3564 ], [ 1, %3534 ]
  %3538 = getelementptr inbounds i32, ptr %4, i64 %3537
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %12, i64 %3537
  %3541 = load i32, ptr %3540, align 4, !tbaa !6
  %3542 = add nsw i32 %3541, -1
  %3543 = icmp slt i32 %3539, %3542
  br i1 %3543, label %3544, label %3562

3544:                                             ; preds = %3536
  br i1 %3531, label %3554, label %3545

3545:                                             ; preds = %3544
  %3546 = shl i64 %3537, 32
  %3547 = add i64 %3546, -4294967296
  %3548 = ashr exact i64 %3547, 32
  %3549 = getelementptr inbounds i32, ptr %7, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !6
  %3551 = getelementptr inbounds i32, ptr %6, i64 %3537
  %3552 = load i32, ptr %3551, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3550
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  br label %3572

3554:                                             ; preds = %3527, %3544
  %3555 = phi i32 [ %3539, %3544 ], [ %3528, %3527 ]
  %3556 = phi ptr [ %3538, %3544 ], [ %4, %3527 ]
  %3557 = phi i64 [ %3537, %3544 ], [ 0, %3527 ]
  %3558 = add nsw i32 %3555, 1
  store i32 %3558, ptr %3556, align 4, !tbaa !6
  %3559 = getelementptr inbounds i32, ptr %7, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !6
  %3561 = getelementptr inbounds i32, ptr %6, i64 %3557
  br label %3572

3562:                                             ; preds = %3536
  %3563 = icmp eq i32 %3539, %3542
  br i1 %3563, label %3564, label %3570

3564:                                             ; preds = %3562
  store i32 0, ptr %3538, align 4, !tbaa !6
  %3565 = getelementptr inbounds i32, ptr %8, i64 %3537
  %3566 = load i32, ptr %3565, align 4, !tbaa !6
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3537
  store i32 %3566, ptr %3567, align 4, !tbaa !6
  %3568 = add nuw nsw i64 %3537, 1
  %3569 = icmp eq i64 %3568, %3385
  br i1 %3569, label %3577, label %3536, !llvm.loop !1038

3570:                                             ; preds = %3532, %3562
  %3571 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3572:                                             ; preds = %3545, %3554
  %3573 = phi ptr [ %3561, %3554 ], [ %3538, %3545 ]
  %3574 = phi i32 [ %3560, %3554 ], [ 1, %3545 ]
  %3575 = load i32, ptr %3573, align 4, !tbaa !6
  %3576 = add nsw i32 %3575, %3574
  store i32 %3576, ptr %3573, align 4, !tbaa !6
  br label %3577

3577:                                             ; preds = %3564, %3572, %3534, %3524
  %3578 = icmp eq i32 %3448, %5
  br i1 %3578, label %3802, label %3447, !llvm.loop !1039

3579:                                             ; preds = %3373
  %3580 = getelementptr inbounds i32, ptr %3, i64 %19
  %3581 = load i32, ptr %3580, align 4, !tbaa !6
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp sgt i32 %5, 0
  br i1 %3582, label %3593, label %3584

3584:                                             ; preds = %3579
  br i1 %3583, label %3585, label %3802

3585:                                             ; preds = %3584
  %3586 = icmp sgt i32 %13, 1
  %3587 = icmp sgt i32 %13, 0
  %3588 = add i32 %13, -2
  %3589 = zext i32 %3588 to i64
  %3590 = zext i32 %13 to i64
  %3591 = add nuw i32 %5, 1
  %3592 = icmp eq i32 %13, 1
  br label %3652

3593:                                             ; preds = %3579
  br i1 %3583, label %3594, label %3802

3594:                                             ; preds = %3593
  %3595 = icmp sgt i32 %13, 0
  %3596 = add nuw i32 %5, 1
  %3597 = zext i32 %13 to i64
  %3598 = icmp eq i32 %13, 1
  br label %3599

3599:                                             ; preds = %3594, %3650
  %3600 = phi i32 [ 1, %3594 ], [ %3601, %3650 ]
  %3601 = add nuw i32 %3600, 1
  br i1 %3595, label %3602, label %3650

3602:                                             ; preds = %3599
  %3603 = load i32, ptr %4, align 4, !tbaa !6
  %3604 = load i32, ptr %12, align 4, !tbaa !6
  %3605 = add nsw i32 %3604, -1
  %3606 = icmp slt i32 %3603, %3605
  br i1 %3606, label %3626, label %3607

3607:                                             ; preds = %3602
  %3608 = icmp eq i32 %3603, %3605
  br i1 %3608, label %3609, label %3642

3609:                                             ; preds = %3607
  store i32 0, ptr %4, align 4, !tbaa !6
  %3610 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3610, ptr %6, align 4, !tbaa !6
  br i1 %3598, label %3650, label %3611

3611:                                             ; preds = %3609, %3636
  %3612 = phi i64 [ %3640, %3636 ], [ 1, %3609 ]
  %3613 = getelementptr inbounds i32, ptr %4, i64 %3612
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = getelementptr inbounds i32, ptr %12, i64 %3612
  %3616 = load i32, ptr %3615, align 4, !tbaa !6
  %3617 = add nsw i32 %3616, -1
  %3618 = icmp slt i32 %3614, %3617
  br i1 %3618, label %3619, label %3634

3619:                                             ; preds = %3611
  br i1 %3606, label %3626, label %3620

3620:                                             ; preds = %3619
  %3621 = getelementptr inbounds i32, ptr %7, i64 %3612
  %3622 = load i32, ptr %3621, align 4, !tbaa !6
  %3623 = getelementptr inbounds i32, ptr %6, i64 %3612
  %3624 = load i32, ptr %3623, align 4, !tbaa !6
  %3625 = add nsw i32 %3624, %3622
  store i32 %3625, ptr %3623, align 4, !tbaa !6
  br label %3645

3626:                                             ; preds = %3602, %3619
  %3627 = phi i32 [ %3614, %3619 ], [ %3603, %3602 ]
  %3628 = phi ptr [ %3613, %3619 ], [ %4, %3602 ]
  %3629 = phi i64 [ %3612, %3619 ], [ 0, %3602 ]
  %3630 = add nsw i32 %3627, 1
  store i32 %3630, ptr %3628, align 4, !tbaa !6
  %3631 = getelementptr inbounds i32, ptr %7, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = getelementptr inbounds i32, ptr %6, i64 %3629
  br label %3645

3634:                                             ; preds = %3611
  %3635 = icmp eq i32 %3614, %3617
  br i1 %3635, label %3636, label %3642

3636:                                             ; preds = %3634
  store i32 0, ptr %3613, align 4, !tbaa !6
  %3637 = getelementptr inbounds i32, ptr %8, i64 %3612
  %3638 = load i32, ptr %3637, align 4, !tbaa !6
  %3639 = getelementptr inbounds i32, ptr %6, i64 %3612
  store i32 %3638, ptr %3639, align 4, !tbaa !6
  %3640 = add nuw nsw i64 %3612, 1
  %3641 = icmp eq i64 %3640, %3597
  br i1 %3641, label %3650, label %3611, !llvm.loop !1040

3642:                                             ; preds = %3607, %3634
  %3643 = sitofp i32 %3600 to double
  store double %3643, ptr %3370, align 8, !tbaa !105
  %3644 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3645:                                             ; preds = %3620, %3626
  %3646 = phi ptr [ %3633, %3626 ], [ %3613, %3620 ]
  %3647 = phi i32 [ %3632, %3626 ], [ 1, %3620 ]
  %3648 = load i32, ptr %3646, align 4, !tbaa !6
  %3649 = add nsw i32 %3648, %3647
  store i32 %3649, ptr %3646, align 4, !tbaa !6
  br label %3650

3650:                                             ; preds = %3636, %3645, %3609, %3599
  %3651 = icmp eq i32 %3600, %5
  br i1 %3651, label %3800, label %3599, !llvm.loop !1041

3652:                                             ; preds = %3585, %3782
  %3653 = phi i32 [ 1, %3585 ], [ %3731, %3782 ]
  %3654 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3586, label %3655, label %3724

3655:                                             ; preds = %3652, %3714
  %3656 = phi i32 [ %3723, %3714 ], [ 0, %3652 ]
  %3657 = phi i64 [ %3665, %3714 ], [ %3590, %3652 ]
  %3658 = phi i64 [ %3722, %3714 ], [ %3589, %3652 ]
  %3659 = phi i32 [ %3720, %3714 ], [ %3654, %3652 ]
  %3660 = sub i32 %3588, %3656
  %3661 = tail call i32 @llvm.smin.i32(i32 %3660, i32 0)
  %3662 = sub i32 %3660, %3661
  %3663 = zext i32 %3662 to i64
  %3664 = add nuw nsw i64 %3663, 1
  %3665 = add nsw i64 %3657, -1
  %3666 = icmp ult i32 %3662, 31
  br i1 %3666, label %3702, label %3667

3667:                                             ; preds = %3655
  %3668 = and i64 %3664, 8589934560
  %3669 = sub i64 %3658, %3668
  br label %3670

3670:                                             ; preds = %3670, %3667
  %3671 = phi i64 [ 0, %3667 ], [ %3694, %3670 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3690, %3670 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3691, %3670 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3692, %3670 ]
  %3675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3667 ], [ %3693, %3670 ]
  %3676 = sub i64 %3658, %3671
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3676
  %3678 = getelementptr inbounds i32, ptr %3677, i64 -7
  %3679 = load <8 x i32>, ptr %3678, align 4, !tbaa !6
  %3680 = shufflevector <8 x i32> %3679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3681 = getelementptr inbounds i32, ptr %3677, i64 -15
  %3682 = load <8 x i32>, ptr %3681, align 4, !tbaa !6
  %3683 = shufflevector <8 x i32> %3682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3684 = getelementptr inbounds i32, ptr %3677, i64 -23
  %3685 = load <8 x i32>, ptr %3684, align 4, !tbaa !6
  %3686 = shufflevector <8 x i32> %3685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3687 = getelementptr inbounds i32, ptr %3677, i64 -31
  %3688 = load <8 x i32>, ptr %3687, align 4, !tbaa !6
  %3689 = shufflevector <8 x i32> %3688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3690 = mul <8 x i32> %3680, %3672
  %3691 = mul <8 x i32> %3683, %3673
  %3692 = mul <8 x i32> %3686, %3674
  %3693 = mul <8 x i32> %3689, %3675
  %3694 = add nuw i64 %3671, 32
  %3695 = icmp eq i64 %3694, %3668
  br i1 %3695, label %3696, label %3670, !llvm.loop !1042

3696:                                             ; preds = %3670
  %3697 = mul <8 x i32> %3691, %3690
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = mul <8 x i32> %3693, %3698
  %3700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3699)
  %3701 = icmp eq i64 %3664, %3668
  br i1 %3701, label %3714, label %3702

3702:                                             ; preds = %3655, %3696
  %3703 = phi i64 [ %3658, %3655 ], [ %3669, %3696 ]
  %3704 = phi i32 [ 1, %3655 ], [ %3700, %3696 ]
  br label %3705

3705:                                             ; preds = %3702, %3705
  %3706 = phi i64 [ %3711, %3705 ], [ %3703, %3702 ]
  %3707 = phi i32 [ %3710, %3705 ], [ %3704, %3702 ]
  %3708 = getelementptr inbounds i32, ptr %11, i64 %3706
  %3709 = load i32, ptr %3708, align 4, !tbaa !6
  %3710 = mul nsw i32 %3709, %3707
  %3711 = add nsw i64 %3706, -1
  %3712 = trunc i64 %3706 to i32
  %3713 = icmp sgt i32 %3712, 0
  br i1 %3713, label %3705, label %3714, !llvm.loop !1043

3714:                                             ; preds = %3705, %3696
  %3715 = phi i32 [ %3700, %3696 ], [ %3710, %3705 ]
  %3716 = and i64 %3665, 4294967295
  %3717 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !6
  %3719 = mul nsw i32 %3718, %3715
  %3720 = add nsw i32 %3719, %3659
  %3721 = icmp sgt i64 %3657, 2
  %3722 = add nsw i64 %3658, -1
  %3723 = add i32 %3656, 1
  br i1 %3721, label %3655, label %3724, !llvm.loop !1044

3724:                                             ; preds = %3714, %3652
  %3725 = phi i32 [ %3654, %3652 ], [ %3720, %3714 ]
  %3726 = icmp slt i32 %3725, %5
  br i1 %3726, label %3729, label %3727

3727:                                             ; preds = %3724
  %3728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3802

3729:                                             ; preds = %3724
  %3730 = sitofp i32 %3653 to double
  store double %3730, ptr %3370, align 8, !tbaa !105
  %3731 = add nuw i32 %3653, 1
  br i1 %3587, label %3732, label %3782

3732:                                             ; preds = %3729
  %3733 = load i32, ptr %4, align 4, !tbaa !6
  %3734 = load i32, ptr %12, align 4, !tbaa !6
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3759, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3775

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !6
  %3740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3740, ptr %6, align 4, !tbaa !6
  br i1 %3592, label %3782, label %3741

3741:                                             ; preds = %3739, %3769
  %3742 = phi i64 [ %3773, %3769 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !6
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !6
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3767

3749:                                             ; preds = %3741
  br i1 %3736, label %3759, label %3750

3750:                                             ; preds = %3749
  %3751 = shl i64 %3742, 32
  %3752 = add i64 %3751, -4294967296
  %3753 = ashr exact i64 %3752, 32
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3753
  %3755 = load i32, ptr %3754, align 4, !tbaa !6
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3757 = load i32, ptr %3756, align 4, !tbaa !6
  %3758 = add nsw i32 %3757, %3755
  store i32 %3758, ptr %3756, align 4, !tbaa !6
  br label %3777

3759:                                             ; preds = %3732, %3749
  %3760 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3761 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3762 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3763 = add nsw i32 %3760, 1
  store i32 %3763, ptr %3761, align 4, !tbaa !6
  %3764 = getelementptr inbounds i32, ptr %7, i64 %3762
  %3765 = load i32, ptr %3764, align 4, !tbaa !6
  %3766 = getelementptr inbounds i32, ptr %6, i64 %3762
  br label %3777

3767:                                             ; preds = %3741
  %3768 = icmp eq i32 %3744, %3747
  br i1 %3768, label %3769, label %3775

3769:                                             ; preds = %3767
  store i32 0, ptr %3743, align 4, !tbaa !6
  %3770 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3771 = load i32, ptr %3770, align 4, !tbaa !6
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3771, ptr %3772, align 4, !tbaa !6
  %3773 = add nuw nsw i64 %3742, 1
  %3774 = icmp eq i64 %3773, %3590
  br i1 %3774, label %3782, label %3741, !llvm.loop !1045

3775:                                             ; preds = %3737, %3767
  %3776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3802

3777:                                             ; preds = %3750, %3759
  %3778 = phi ptr [ %3766, %3759 ], [ %3743, %3750 ]
  %3779 = phi i32 [ %3765, %3759 ], [ 1, %3750 ]
  %3780 = load i32, ptr %3778, align 4, !tbaa !6
  %3781 = add nsw i32 %3780, %3779
  store i32 %3781, ptr %3778, align 4, !tbaa !6
  br label %3782

3782:                                             ; preds = %3769, %3777, %3739, %3729
  %3783 = icmp eq i32 %3653, %5
  br i1 %3783, label %3802, label %3652, !llvm.loop !1046

3784:                                             ; preds = %3373
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1993, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3802

3786:                                             ; preds = %1350
  store i16 %1295, ptr %1274, align 2, !tbaa !59
  br label %3802

3787:                                             ; preds = %1556
  store i16 %1501, ptr %1274, align 2, !tbaa !59
  br label %3802

3788:                                             ; preds = %2188
  store i64 %2132, ptr %2108, align 8, !tbaa !89
  br label %3802

3789:                                             ; preds = %2397
  store i64 %2341, ptr %2108, align 8, !tbaa !89
  br label %3802

3790:                                             ; preds = %2609
  %3791 = sitofp i32 %2559 to double
  store double %3791, ptr %2534, align 8, !tbaa !105
  br label %3802

3792:                                             ; preds = %2814
  %3793 = sitofp i32 %2764 to double
  store double %3793, ptr %2534, align 8, !tbaa !105
  br label %3802

3794:                                             ; preds = %3027
  %3795 = sitofp i32 %2977 to float
  store float %3795, ptr %2952, align 4, !tbaa !121
  br label %3802

3796:                                             ; preds = %3232
  %3797 = sitofp i32 %3182 to float
  store float %3797, ptr %2952, align 4, !tbaa !121
  br label %3802

3798:                                             ; preds = %3445
  %3799 = sitofp i32 %3395 to double
  store double %3799, ptr %3370, align 8, !tbaa !105
  br label %3802

3800:                                             ; preds = %3650
  %3801 = sitofp i32 %3600 to double
  store double %3801, ptr %3370, align 8, !tbaa !105
  br label %3802

3802:                                             ; preds = %3782, %3577, %3364, %3159, %2946, %2741, %2528, %2319, %2102, %1971, %1899, %1768, %1688, %1482, %1268, %1136, %1063, %931, %850, %719, %647, %516, %436, %304, %231, %99, %3584, %3593, %3800, %3379, %3388, %3798, %3166, %3175, %3796, %2961, %2970, %3794, %2748, %2757, %3792, %2543, %2552, %3790, %2326, %2336, %3789, %2117, %2127, %3788, %1906, %1915, %1703, %1712, %1489, %1498, %3787, %1283, %1292, %3786, %1070, %1079, %865, %874, %654, %663, %451, %460, %238, %247, %33, %42, %3372, %3784, %2954, %3366, %2536, %2948, %2110, %2530, %1696, %2104, %1276, %1690, %858, %1270, %444, %852, %26, %438, %18, %3437, %3522, %3570, %3642, %3727, %3775, %3019, %3104, %3152, %3224, %3309, %3357, %2601, %2686, %2734, %2806, %2891, %2939, %2181, %2265, %2312, %2390, %2474, %2521, %1761, %1845, %1892, %1964, %2048, %2095, %1342, %1427, %1475, %1548, %1633, %1681, %924, %1008, %1056, %1129, %1213, %1261, %509, %593, %640, %712, %796, %843, %92, %176, %224, %297, %381, %429
  %3803 = phi i32 [ -1, %429 ], [ -1, %381 ], [ -1, %297 ], [ -1, %224 ], [ -1, %176 ], [ -1, %92 ], [ -1, %843 ], [ -1, %796 ], [ -1, %712 ], [ -1, %640 ], [ -1, %593 ], [ -1, %509 ], [ -1, %1261 ], [ -1, %1213 ], [ -1, %1129 ], [ -1, %1056 ], [ -1, %1008 ], [ -1, %924 ], [ -1, %1681 ], [ -1, %1633 ], [ -1, %1548 ], [ -1, %1475 ], [ -1, %1427 ], [ -1, %1342 ], [ -1, %2095 ], [ -1, %2048 ], [ -1, %1964 ], [ -1, %1892 ], [ -1, %1845 ], [ -1, %1761 ], [ -1, %2521 ], [ -1, %2474 ], [ -1, %2390 ], [ -1, %2312 ], [ -1, %2265 ], [ -1, %2181 ], [ -1, %2939 ], [ -1, %2891 ], [ -1, %2806 ], [ -1, %2734 ], [ -1, %2686 ], [ -1, %2601 ], [ -1, %3357 ], [ -1, %3309 ], [ -1, %3224 ], [ -1, %3152 ], [ -1, %3104 ], [ -1, %3019 ], [ -1, %3775 ], [ -1, %3727 ], [ -1, %3642 ], [ -1, %3570 ], [ -1, %3522 ], [ -1, %3437 ], [ %10, %18 ], [ 1, %438 ], [ 1, %26 ], [ 1, %852 ], [ 1, %444 ], [ 1, %1270 ], [ 1, %858 ], [ 1, %1690 ], [ 1, %1276 ], [ 1, %2104 ], [ 1, %1696 ], [ 1, %2530 ], [ 1, %2110 ], [ 1, %2948 ], [ 1, %2536 ], [ 1, %3366 ], [ 1, %2954 ], [ 1, %3784 ], [ 1, %3372 ], [ 1, %42 ], [ 1, %33 ], [ 1, %247 ], [ 1, %238 ], [ 1, %460 ], [ 1, %451 ], [ 1, %663 ], [ 1, %654 ], [ 1, %874 ], [ 1, %865 ], [ 1, %1079 ], [ 1, %1070 ], [ %1296, %3786 ], [ 1, %1292 ], [ 1, %1283 ], [ %1502, %3787 ], [ 1, %1498 ], [ 1, %1489 ], [ 1, %1712 ], [ 1, %1703 ], [ 1, %1915 ], [ 1, %1906 ], [ %2133, %3788 ], [ 1, %2127 ], [ 1, %2117 ], [ %2342, %3789 ], [ 1, %2336 ], [ 1, %2326 ], [ %2555, %3790 ], [ 1, %2552 ], [ 1, %2543 ], [ %2760, %3792 ], [ 1, %2757 ], [ 1, %2748 ], [ %2973, %3794 ], [ 1, %2970 ], [ 1, %2961 ], [ %3178, %3796 ], [ 1, %3175 ], [ 1, %3166 ], [ %3391, %3798 ], [ 1, %3388 ], [ 1, %3379 ], [ %3596, %3800 ], [ 1, %3593 ], [ 1, %3584 ], [ %45, %99 ], [ %40, %231 ], [ %250, %304 ], [ %245, %436 ], [ %463, %516 ], [ %458, %647 ], [ %666, %719 ], [ %661, %850 ], [ %877, %931 ], [ %872, %1063 ], [ %1082, %1136 ], [ %1077, %1268 ], [ %1290, %1482 ], [ %1496, %1688 ], [ %1715, %1768 ], [ %1710, %1899 ], [ %1918, %1971 ], [ %1913, %2102 ], [ %2124, %2319 ], [ %2333, %2528 ], [ %2550, %2741 ], [ %2755, %2946 ], [ %2968, %3159 ], [ %3173, %3364 ], [ %3386, %3577 ], [ %3591, %3782 ]
  ret i32 %3803
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !8, i64 0}
!12 = !{!8, !8, i64 0}
!13 = distinct !{!13, !14, !15}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.peeled.count", i32 1}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !14, !18, !19}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = !{!"llvm.loop.unroll.runtime.disable"}
!20 = distinct !{!20, !14, !19, !18}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !14, !15}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14, !15}
!25 = distinct !{!25, !14}
!26 = distinct !{!26, !14, !18, !19}
!27 = distinct !{!27, !14, !19, !18}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14, !15}
!30 = distinct !{!30, !14}
!31 = distinct !{!31, !14, !15}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !14, !18, !19}
!34 = distinct !{!34, !14, !19, !18}
!35 = distinct !{!35, !14}
!36 = distinct !{!36, !14, !15}
!37 = distinct !{!37, !14}
!38 = distinct !{!38, !14, !15}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !14, !18, !19}
!41 = distinct !{!41, !14, !19, !18}
!42 = distinct !{!42, !14}
!43 = distinct !{!43, !14, !15}
!44 = distinct !{!44, !14}
!45 = distinct !{!45, !14, !15}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14, !18, !19}
!48 = distinct !{!48, !14, !19, !18}
!49 = distinct !{!49, !14}
!50 = distinct !{!50, !14, !15}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14, !15}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14, !18, !19}
!55 = distinct !{!55, !14, !19, !18}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14, !15}
!58 = distinct !{!58, !14}
!59 = !{!60, !60, i64 0}
!60 = !{!"short", !8, i64 0}
!61 = distinct !{!61, !14, !15}
!62 = distinct !{!62, !14}
!63 = distinct !{!63, !14, !18, !19}
!64 = distinct !{!64, !14, !19, !18}
!65 = distinct !{!65, !14}
!66 = distinct !{!66, !14, !15}
!67 = distinct !{!67, !14}
!68 = distinct !{!68, !14, !15}
!69 = distinct !{!69, !14}
!70 = distinct !{!70, !14, !18, !19}
!71 = distinct !{!71, !14, !19, !18}
!72 = distinct !{!72, !14}
!73 = distinct !{!73, !14, !15}
!74 = distinct !{!74, !14}
!75 = distinct !{!75, !14, !15}
!76 = distinct !{!76, !14}
!77 = distinct !{!77, !14, !18, !19}
!78 = distinct !{!78, !14, !19, !18}
!79 = distinct !{!79, !14}
!80 = distinct !{!80, !14, !15}
!81 = distinct !{!81, !14}
!82 = distinct !{!82, !14, !15}
!83 = distinct !{!83, !14}
!84 = distinct !{!84, !14, !18, !19}
!85 = distinct !{!85, !14, !19, !18}
!86 = distinct !{!86, !14}
!87 = distinct !{!87, !14, !15}
!88 = distinct !{!88, !14}
!89 = !{!90, !90, i64 0}
!90 = !{!"long", !8, i64 0}
!91 = distinct !{!91, !14, !15}
!92 = distinct !{!92, !14}
!93 = distinct !{!93, !14, !18, !19}
!94 = distinct !{!94, !14, !19, !18}
!95 = distinct !{!95, !14}
!96 = distinct !{!96, !14, !15}
!97 = distinct !{!97, !14}
!98 = distinct !{!98, !14, !15}
!99 = distinct !{!99, !14}
!100 = distinct !{!100, !14, !18, !19}
!101 = distinct !{!101, !14, !19, !18}
!102 = distinct !{!102, !14}
!103 = distinct !{!103, !14, !15}
!104 = distinct !{!104, !14}
!105 = !{!106, !106, i64 0}
!106 = !{!"double", !8, i64 0}
!107 = distinct !{!107, !14, !15}
!108 = distinct !{!108, !14}
!109 = distinct !{!109, !14, !18, !19}
!110 = distinct !{!110, !14, !19, !18}
!111 = distinct !{!111, !14}
!112 = distinct !{!112, !14, !15}
!113 = distinct !{!113, !14}
!114 = distinct !{!114, !14, !15}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !14, !18, !19}
!117 = distinct !{!117, !14, !19, !18}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !14, !15}
!120 = distinct !{!120, !14}
!121 = !{!122, !122, i64 0}
!122 = !{!"float", !8, i64 0}
!123 = distinct !{!123, !14, !15}
!124 = distinct !{!124, !14}
!125 = distinct !{!125, !14, !18, !19}
!126 = distinct !{!126, !14, !19, !18}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !14, !15}
!129 = distinct !{!129, !14}
!130 = distinct !{!130, !14, !15}
!131 = distinct !{!131, !14}
!132 = distinct !{!132, !14, !18, !19}
!133 = distinct !{!133, !14, !19, !18}
!134 = distinct !{!134, !14}
!135 = distinct !{!135, !14, !15}
!136 = distinct !{!136, !14}
!137 = distinct !{!137, !14, !15}
!138 = distinct !{!138, !14}
!139 = distinct !{!139, !14, !18, !19}
!140 = distinct !{!140, !14, !19, !18}
!141 = distinct !{!141, !14}
!142 = distinct !{!142, !14, !15}
!143 = distinct !{!143, !14}
!144 = distinct !{!144, !14, !15}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14, !18, !19}
!147 = distinct !{!147, !14, !19, !18}
!148 = distinct !{!148, !14}
!149 = distinct !{!149, !14, !15}
!150 = distinct !{!150, !14}
!151 = distinct !{!151, !14, !15}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !14, !18, !19}
!154 = distinct !{!154, !14, !19, !18}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !14, !15}
!157 = distinct !{!157, !14}
!158 = distinct !{!158, !14, !15}
!159 = distinct !{!159, !14}
!160 = distinct !{!160, !14, !18, !19}
!161 = distinct !{!161, !14, !19, !18}
!162 = distinct !{!162, !14}
!163 = distinct !{!163, !14, !15}
!164 = distinct !{!164, !14}
!165 = distinct !{!165, !14, !15}
!166 = distinct !{!166, !14}
!167 = distinct !{!167, !14, !18, !19}
!168 = distinct !{!168, !14, !19, !18}
!169 = distinct !{!169, !14}
!170 = distinct !{!170, !14, !15}
!171 = distinct !{!171, !14}
!172 = distinct !{!172, !14, !15}
!173 = distinct !{!173, !14}
!174 = distinct !{!174, !14, !18, !19}
!175 = distinct !{!175, !14, !19, !18}
!176 = distinct !{!176, !14}
!177 = distinct !{!177, !14, !15}
!178 = distinct !{!178, !14}
!179 = distinct !{!179, !14, !15}
!180 = distinct !{!180, !14}
!181 = distinct !{!181, !14, !18, !19}
!182 = distinct !{!182, !14, !19, !18}
!183 = distinct !{!183, !14}
!184 = distinct !{!184, !14, !15}
!185 = distinct !{!185, !14}
!186 = distinct !{!186, !14, !15}
!187 = distinct !{!187, !14}
!188 = distinct !{!188, !14, !18, !19}
!189 = distinct !{!189, !14, !19, !18}
!190 = distinct !{!190, !14}
!191 = distinct !{!191, !14, !15}
!192 = distinct !{!192, !14}
!193 = distinct !{!193, !14, !15}
!194 = distinct !{!194, !14}
!195 = distinct !{!195, !14, !18, !19}
!196 = distinct !{!196, !14, !19, !18}
!197 = distinct !{!197, !14}
!198 = distinct !{!198, !14, !15}
!199 = distinct !{!199, !14}
!200 = distinct !{!200, !14, !15}
!201 = distinct !{!201, !14}
!202 = distinct !{!202, !14, !18, !19}
!203 = distinct !{!203, !14, !19, !18}
!204 = distinct !{!204, !14}
!205 = distinct !{!205, !14, !15}
!206 = distinct !{!206, !14}
!207 = distinct !{!207, !14, !15}
!208 = distinct !{!208, !14}
!209 = distinct !{!209, !14, !18, !19}
!210 = distinct !{!210, !14, !19, !18}
!211 = distinct !{!211, !14}
!212 = distinct !{!212, !14, !15}
!213 = distinct !{!213, !14}
!214 = distinct !{!214, !14, !15}
!215 = distinct !{!215, !14}
!216 = distinct !{!216, !14, !18, !19}
!217 = distinct !{!217, !14, !19, !18}
!218 = distinct !{!218, !14}
!219 = distinct !{!219, !14, !15}
!220 = distinct !{!220, !14}
!221 = distinct !{!221, !14, !15}
!222 = distinct !{!222, !14}
!223 = distinct !{!223, !14, !18, !19}
!224 = distinct !{!224, !14, !19, !18}
!225 = distinct !{!225, !14}
!226 = distinct !{!226, !14, !15}
!227 = distinct !{!227, !14}
!228 = distinct !{!228, !14, !15}
!229 = distinct !{!229, !14}
!230 = distinct !{!230, !14, !18, !19}
!231 = distinct !{!231, !14, !19, !18}
!232 = distinct !{!232, !14}
!233 = distinct !{!233, !14, !15}
!234 = distinct !{!234, !14}
!235 = distinct !{!235, !14, !15}
!236 = distinct !{!236, !14}
!237 = distinct !{!237, !14, !18, !19}
!238 = distinct !{!238, !14, !19, !18}
!239 = distinct !{!239, !14}
!240 = distinct !{!240, !14, !15}
!241 = distinct !{!241, !14}
!242 = distinct !{!242, !14, !15}
!243 = distinct !{!243, !14}
!244 = distinct !{!244, !14, !18, !19}
!245 = distinct !{!245, !14, !19, !18}
!246 = distinct !{!246, !14}
!247 = distinct !{!247, !14, !15}
!248 = distinct !{!248, !14}
!249 = distinct !{!249, !14, !15}
!250 = distinct !{!250, !14}
!251 = distinct !{!251, !14, !18, !19}
!252 = distinct !{!252, !14, !19, !18}
!253 = distinct !{!253, !14}
!254 = distinct !{!254, !14, !15}
!255 = distinct !{!255, !14}
!256 = distinct !{!256, !14, !15}
!257 = distinct !{!257, !14}
!258 = distinct !{!258, !14, !18, !19}
!259 = distinct !{!259, !14, !19, !18}
!260 = distinct !{!260, !14}
!261 = distinct !{!261, !14, !15}
!262 = distinct !{!262, !14}
!263 = distinct !{!263, !14, !15}
!264 = distinct !{!264, !14}
!265 = distinct !{!265, !14, !18, !19}
!266 = distinct !{!266, !14, !19, !18}
!267 = distinct !{!267, !14}
!268 = distinct !{!268, !14, !15}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !14, !15}
!271 = distinct !{!271, !14}
!272 = distinct !{!272, !14, !18, !19}
!273 = distinct !{!273, !14, !19, !18}
!274 = distinct !{!274, !14}
!275 = distinct !{!275, !14, !15}
!276 = distinct !{!276, !14}
!277 = distinct !{!277, !14, !15}
!278 = distinct !{!278, !14}
!279 = distinct !{!279, !14, !18, !19}
!280 = distinct !{!280, !14, !19, !18}
!281 = distinct !{!281, !14}
!282 = distinct !{!282, !14, !15}
!283 = distinct !{!283, !14}
!284 = distinct !{!284, !14, !15}
!285 = distinct !{!285, !14}
!286 = distinct !{!286, !14, !18, !19}
!287 = distinct !{!287, !14, !19, !18}
!288 = distinct !{!288, !14}
!289 = distinct !{!289, !14, !15}
!290 = distinct !{!290, !14}
!291 = distinct !{!291, !14, !15}
!292 = distinct !{!292, !14}
!293 = distinct !{!293, !14, !18, !19}
!294 = distinct !{!294, !14, !19, !18}
!295 = distinct !{!295, !14}
!296 = distinct !{!296, !14, !15}
!297 = distinct !{!297, !14}
!298 = distinct !{!298, !14, !15}
!299 = distinct !{!299, !14}
!300 = distinct !{!300, !14, !18, !19}
!301 = distinct !{!301, !14, !19, !18}
!302 = distinct !{!302, !14}
!303 = distinct !{!303, !14, !15}
!304 = distinct !{!304, !14}
!305 = distinct !{!305, !14, !15}
!306 = distinct !{!306, !14}
!307 = distinct !{!307, !14, !18, !19}
!308 = distinct !{!308, !14, !19, !18}
!309 = distinct !{!309, !14}
!310 = distinct !{!310, !14, !15}
!311 = distinct !{!311, !14}
!312 = distinct !{!312, !14, !15}
!313 = distinct !{!313, !14}
!314 = distinct !{!314, !14, !18, !19}
!315 = distinct !{!315, !14, !19, !18}
!316 = distinct !{!316, !14}
!317 = distinct !{!317, !14, !15}
!318 = distinct !{!318, !14}
!319 = distinct !{!319, !14, !15}
!320 = distinct !{!320, !14}
!321 = distinct !{!321, !14, !18, !19}
!322 = distinct !{!322, !14, !19, !18}
!323 = distinct !{!323, !14}
!324 = distinct !{!324, !14, !15}
!325 = distinct !{!325, !14}
!326 = distinct !{!326, !14, !15}
!327 = distinct !{!327, !14}
!328 = distinct !{!328, !14, !18, !19}
!329 = distinct !{!329, !14, !19, !18}
!330 = distinct !{!330, !14}
!331 = distinct !{!331, !14, !15}
!332 = distinct !{!332, !14}
!333 = distinct !{!333, !14, !15}
!334 = distinct !{!334, !14}
!335 = distinct !{!335, !14, !18, !19}
!336 = distinct !{!336, !14, !19, !18}
!337 = distinct !{!337, !14}
!338 = distinct !{!338, !14, !15}
!339 = distinct !{!339, !14}
!340 = distinct !{!340, !14, !15}
!341 = distinct !{!341, !14}
!342 = distinct !{!342, !14, !18, !19}
!343 = distinct !{!343, !14, !19, !18}
!344 = distinct !{!344, !14}
!345 = distinct !{!345, !14, !15}
!346 = distinct !{!346, !14}
!347 = distinct !{!347, !14, !15}
!348 = distinct !{!348, !14}
!349 = distinct !{!349, !14, !18, !19}
!350 = distinct !{!350, !14, !19, !18}
!351 = distinct !{!351, !14}
!352 = distinct !{!352, !14, !15}
!353 = distinct !{!353, !14}
!354 = distinct !{!354, !14, !15}
!355 = distinct !{!355, !14}
!356 = distinct !{!356, !14, !18, !19}
!357 = distinct !{!357, !14, !19, !18}
!358 = distinct !{!358, !14}
!359 = distinct !{!359, !14, !15}
!360 = distinct !{!360, !14}
!361 = distinct !{!361, !14, !15}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14, !18, !19}
!364 = distinct !{!364, !14, !19, !18}
!365 = distinct !{!365, !14}
!366 = distinct !{!366, !14, !15}
!367 = distinct !{!367, !14}
!368 = distinct !{!368, !14, !15}
!369 = distinct !{!369, !14}
!370 = distinct !{!370, !14, !18, !19}
!371 = distinct !{!371, !14, !19, !18}
!372 = distinct !{!372, !14}
!373 = distinct !{!373, !14, !15}
!374 = distinct !{!374, !14}
!375 = distinct !{!375, !14, !15}
!376 = distinct !{!376, !14}
!377 = distinct !{!377, !14, !18, !19}
!378 = distinct !{!378, !14, !19, !18}
!379 = distinct !{!379, !14}
!380 = distinct !{!380, !14, !15}
!381 = distinct !{!381, !14}
!382 = distinct !{!382, !14, !15}
!383 = distinct !{!383, !14}
!384 = distinct !{!384, !14, !18, !19}
!385 = distinct !{!385, !14, !19, !18}
!386 = distinct !{!386, !14}
!387 = distinct !{!387, !14, !15}
!388 = distinct !{!388, !14}
!389 = distinct !{!389, !14, !15}
!390 = distinct !{!390, !14}
!391 = distinct !{!391, !14, !18, !19}
!392 = distinct !{!392, !14, !19, !18}
!393 = distinct !{!393, !14}
!394 = distinct !{!394, !14, !15}
!395 = distinct !{!395, !14}
!396 = distinct !{!396, !14, !15}
!397 = distinct !{!397, !14}
!398 = distinct !{!398, !14, !18, !19}
!399 = distinct !{!399, !14, !19, !18}
!400 = distinct !{!400, !14}
!401 = distinct !{!401, !14, !15}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !14, !15}
!404 = distinct !{!404, !14}
!405 = distinct !{!405, !14, !18, !19}
!406 = distinct !{!406, !14, !19, !18}
!407 = distinct !{!407, !14}
!408 = distinct !{!408, !14, !15}
!409 = distinct !{!409, !14}
!410 = distinct !{!410, !14, !15}
!411 = distinct !{!411, !14}
!412 = distinct !{!412, !14, !18, !19}
!413 = distinct !{!413, !14, !19, !18}
!414 = distinct !{!414, !14}
!415 = distinct !{!415, !14, !15}
!416 = distinct !{!416, !14}
!417 = distinct !{!417, !14, !15}
!418 = distinct !{!418, !14}
!419 = distinct !{!419, !14, !18, !19}
!420 = distinct !{!420, !14, !19, !18}
!421 = distinct !{!421, !14}
!422 = distinct !{!422, !14, !15}
!423 = distinct !{!423, !14}
!424 = distinct !{!424, !14, !15}
!425 = distinct !{!425, !14}
!426 = distinct !{!426, !14, !18, !19}
!427 = distinct !{!427, !14, !19, !18}
!428 = distinct !{!428, !14}
!429 = distinct !{!429, !14, !15}
!430 = distinct !{!430, !14}
!431 = distinct !{!431, !14, !15}
!432 = distinct !{!432, !14}
!433 = distinct !{!433, !14, !18, !19}
!434 = distinct !{!434, !14, !19, !18}
!435 = distinct !{!435, !14}
!436 = distinct !{!436, !14, !15}
!437 = distinct !{!437, !14}
!438 = distinct !{!438, !14, !15}
!439 = distinct !{!439, !14}
!440 = distinct !{!440, !14, !18, !19}
!441 = distinct !{!441, !14, !19, !18}
!442 = distinct !{!442, !14}
!443 = distinct !{!443, !14, !15}
!444 = distinct !{!444, !14}
!445 = distinct !{!445, !14, !15}
!446 = distinct !{!446, !14}
!447 = distinct !{!447, !14, !18, !19}
!448 = distinct !{!448, !14, !19, !18}
!449 = distinct !{!449, !14}
!450 = distinct !{!450, !14, !15}
!451 = distinct !{!451, !14}
!452 = distinct !{!452, !14, !15}
!453 = distinct !{!453, !14}
!454 = distinct !{!454, !14, !18, !19}
!455 = distinct !{!455, !14, !19, !18}
!456 = distinct !{!456, !14}
!457 = distinct !{!457, !14, !15}
!458 = distinct !{!458, !14}
!459 = distinct !{!459, !14, !15}
!460 = distinct !{!460, !14}
!461 = distinct !{!461, !14, !18, !19}
!462 = distinct !{!462, !14, !19, !18}
!463 = distinct !{!463, !14}
!464 = distinct !{!464, !14, !15}
!465 = distinct !{!465, !14}
!466 = distinct !{!466, !14, !15}
!467 = distinct !{!467, !14}
!468 = distinct !{!468, !14, !18, !19}
!469 = distinct !{!469, !14, !19, !18}
!470 = distinct !{!470, !14}
!471 = distinct !{!471, !14, !15}
!472 = distinct !{!472, !14}
!473 = distinct !{!473, !14, !15}
!474 = distinct !{!474, !14}
!475 = distinct !{!475, !14, !18, !19}
!476 = distinct !{!476, !14, !19, !18}
!477 = distinct !{!477, !14}
!478 = distinct !{!478, !14, !15}
!479 = distinct !{!479, !14}
!480 = distinct !{!480, !14, !15}
!481 = distinct !{!481, !14}
!482 = distinct !{!482, !14, !18, !19}
!483 = distinct !{!483, !14, !19, !18}
!484 = distinct !{!484, !14}
!485 = distinct !{!485, !14, !15}
!486 = distinct !{!486, !14}
!487 = distinct !{!487, !14, !15}
!488 = distinct !{!488, !14}
!489 = distinct !{!489, !14, !18, !19}
!490 = distinct !{!490, !14, !19, !18}
!491 = distinct !{!491, !14}
!492 = distinct !{!492, !14, !15}
!493 = distinct !{!493, !14}
!494 = distinct !{!494, !14, !15}
!495 = distinct !{!495, !14}
!496 = distinct !{!496, !14, !18, !19}
!497 = distinct !{!497, !14, !19, !18}
!498 = distinct !{!498, !14}
!499 = distinct !{!499, !14, !15}
!500 = distinct !{!500, !14}
!501 = distinct !{!501, !14, !15}
!502 = distinct !{!502, !14}
!503 = distinct !{!503, !14, !18, !19}
!504 = distinct !{!504, !14, !19, !18}
!505 = distinct !{!505, !14}
!506 = distinct !{!506, !14, !15}
!507 = distinct !{!507, !14}
!508 = distinct !{!508, !14, !15}
!509 = distinct !{!509, !14}
!510 = distinct !{!510, !14, !18, !19}
!511 = distinct !{!511, !14, !19, !18}
!512 = distinct !{!512, !14}
!513 = distinct !{!513, !14, !15}
!514 = distinct !{!514, !14}
!515 = distinct !{!515, !14, !15}
!516 = distinct !{!516, !14}
!517 = distinct !{!517, !14, !18, !19}
!518 = distinct !{!518, !14, !19, !18}
!519 = distinct !{!519, !14}
!520 = distinct !{!520, !14, !15}
!521 = distinct !{!521, !14}
!522 = distinct !{!522, !14, !15}
!523 = distinct !{!523, !14}
!524 = distinct !{!524, !14, !18, !19}
!525 = distinct !{!525, !14, !19, !18}
!526 = distinct !{!526, !14}
!527 = distinct !{!527, !14, !15}
!528 = distinct !{!528, !14}
!529 = distinct !{!529, !14, !15}
!530 = distinct !{!530, !14}
!531 = distinct !{!531, !14, !18, !19}
!532 = distinct !{!532, !14, !19, !18}
!533 = distinct !{!533, !14}
!534 = distinct !{!534, !14, !15}
!535 = distinct !{!535, !14}
!536 = distinct !{!536, !14, !15}
!537 = distinct !{!537, !14}
!538 = distinct !{!538, !14, !18, !19}
!539 = distinct !{!539, !14, !19, !18}
!540 = distinct !{!540, !14}
!541 = distinct !{!541, !14, !15}
!542 = distinct !{!542, !14}
!543 = distinct !{!543, !14, !15}
!544 = distinct !{!544, !14}
!545 = distinct !{!545, !14, !18, !19}
!546 = distinct !{!546, !14, !19, !18}
!547 = distinct !{!547, !14}
!548 = distinct !{!548, !14, !15}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !14, !15}
!551 = distinct !{!551, !14}
!552 = distinct !{!552, !14, !18, !19}
!553 = distinct !{!553, !14, !19, !18}
!554 = distinct !{!554, !14}
!555 = distinct !{!555, !14, !15}
!556 = distinct !{!556, !14}
!557 = distinct !{!557, !14, !15}
!558 = distinct !{!558, !14}
!559 = distinct !{!559, !14, !18, !19}
!560 = distinct !{!560, !14, !19, !18}
!561 = distinct !{!561, !14}
!562 = distinct !{!562, !14, !15}
!563 = distinct !{!563, !14}
!564 = distinct !{!564, !14, !15}
!565 = distinct !{!565, !14}
!566 = distinct !{!566, !14, !18, !19}
!567 = distinct !{!567, !14, !19, !18}
!568 = distinct !{!568, !14}
!569 = distinct !{!569, !14, !15}
!570 = distinct !{!570, !14}
!571 = distinct !{!571, !14, !15}
!572 = distinct !{!572, !14}
!573 = distinct !{!573, !14, !18, !19}
!574 = distinct !{!574, !14, !19, !18}
!575 = distinct !{!575, !14}
!576 = distinct !{!576, !14, !15}
!577 = distinct !{!577, !14}
!578 = distinct !{!578, !14, !15}
!579 = distinct !{!579, !14}
!580 = distinct !{!580, !14, !18, !19}
!581 = distinct !{!581, !14, !19, !18}
!582 = distinct !{!582, !14}
!583 = distinct !{!583, !14, !15}
!584 = distinct !{!584, !14}
!585 = distinct !{!585, !14, !15}
!586 = distinct !{!586, !14}
!587 = distinct !{!587, !14, !18, !19}
!588 = distinct !{!588, !14, !19, !18}
!589 = distinct !{!589, !14}
!590 = distinct !{!590, !14, !15}
!591 = distinct !{!591, !14}
!592 = distinct !{!592, !14, !15}
!593 = distinct !{!593, !14}
!594 = distinct !{!594, !14, !18, !19}
!595 = distinct !{!595, !14, !19, !18}
!596 = distinct !{!596, !14}
!597 = distinct !{!597, !14, !15}
!598 = distinct !{!598, !14}
!599 = distinct !{!599, !14, !15}
!600 = distinct !{!600, !14}
!601 = distinct !{!601, !14, !18, !19}
!602 = distinct !{!602, !14, !19, !18}
!603 = distinct !{!603, !14}
!604 = distinct !{!604, !14, !15}
!605 = distinct !{!605, !14}
!606 = distinct !{!606, !14, !15}
!607 = distinct !{!607, !14}
!608 = distinct !{!608, !14, !18, !19}
!609 = distinct !{!609, !14, !19, !18}
!610 = distinct !{!610, !14}
!611 = distinct !{!611, !14, !15}
!612 = distinct !{!612, !14}
!613 = distinct !{!613, !14, !15}
!614 = distinct !{!614, !14}
!615 = distinct !{!615, !14, !18, !19}
!616 = distinct !{!616, !14, !19, !18}
!617 = distinct !{!617, !14}
!618 = distinct !{!618, !14, !15}
!619 = distinct !{!619, !14}
!620 = distinct !{!620, !14, !15}
!621 = distinct !{!621, !14}
!622 = distinct !{!622, !14, !18, !19}
!623 = distinct !{!623, !14, !19, !18}
!624 = distinct !{!624, !14}
!625 = distinct !{!625, !14, !15}
!626 = distinct !{!626, !14}
!627 = distinct !{!627, !14, !15}
!628 = distinct !{!628, !14}
!629 = distinct !{!629, !14, !18, !19}
!630 = distinct !{!630, !14, !19, !18}
!631 = distinct !{!631, !14}
!632 = distinct !{!632, !14, !15}
!633 = distinct !{!633, !14}
!634 = distinct !{!634, !14, !15}
!635 = distinct !{!635, !14}
!636 = distinct !{!636, !14, !18, !19}
!637 = distinct !{!637, !14, !19, !18}
!638 = distinct !{!638, !14}
!639 = distinct !{!639, !14, !15}
!640 = distinct !{!640, !14}
!641 = distinct !{!641, !14, !15}
!642 = distinct !{!642, !14}
!643 = distinct !{!643, !14, !18, !19}
!644 = distinct !{!644, !14, !19, !18}
!645 = distinct !{!645, !14}
!646 = distinct !{!646, !14, !15}
!647 = distinct !{!647, !14}
!648 = distinct !{!648, !14, !15}
!649 = distinct !{!649, !14}
!650 = distinct !{!650, !14, !18, !19}
!651 = distinct !{!651, !14, !19, !18}
!652 = distinct !{!652, !14}
!653 = distinct !{!653, !14, !15}
!654 = distinct !{!654, !14}
!655 = distinct !{!655, !14, !15}
!656 = distinct !{!656, !14}
!657 = distinct !{!657, !14, !18, !19}
!658 = distinct !{!658, !14, !19, !18}
!659 = distinct !{!659, !14}
!660 = distinct !{!660, !14, !15}
!661 = distinct !{!661, !14}
!662 = distinct !{!662, !14, !15}
!663 = distinct !{!663, !14}
!664 = distinct !{!664, !14, !18, !19}
!665 = distinct !{!665, !14, !19, !18}
!666 = distinct !{!666, !14}
!667 = distinct !{!667, !14, !15}
!668 = distinct !{!668, !14}
!669 = distinct !{!669, !14, !15}
!670 = distinct !{!670, !14}
!671 = distinct !{!671, !14, !18, !19}
!672 = distinct !{!672, !14, !19, !18}
!673 = distinct !{!673, !14}
!674 = distinct !{!674, !14, !15}
!675 = distinct !{!675, !14}
!676 = distinct !{!676, !14, !15}
!677 = distinct !{!677, !14}
!678 = distinct !{!678, !14, !18, !19}
!679 = distinct !{!679, !14, !19, !18}
!680 = distinct !{!680, !14}
!681 = distinct !{!681, !14, !15}
!682 = distinct !{!682, !14}
!683 = distinct !{!683, !14, !15}
!684 = distinct !{!684, !14}
!685 = distinct !{!685, !14, !18, !19}
!686 = distinct !{!686, !14, !19, !18}
!687 = distinct !{!687, !14}
!688 = distinct !{!688, !14, !15}
!689 = distinct !{!689, !14}
!690 = distinct !{!690, !14, !15}
!691 = distinct !{!691, !14}
!692 = distinct !{!692, !14, !18, !19}
!693 = distinct !{!693, !14, !19, !18}
!694 = distinct !{!694, !14}
!695 = distinct !{!695, !14, !15}
!696 = distinct !{!696, !14}
!697 = distinct !{!697, !14, !15}
!698 = distinct !{!698, !14}
!699 = distinct !{!699, !14, !18, !19}
!700 = distinct !{!700, !14, !19, !18}
!701 = distinct !{!701, !14}
!702 = distinct !{!702, !14, !15}
!703 = distinct !{!703, !14}
!704 = distinct !{!704, !14, !15}
!705 = distinct !{!705, !14}
!706 = distinct !{!706, !14, !18, !19}
!707 = distinct !{!707, !14, !19, !18}
!708 = distinct !{!708, !14}
!709 = distinct !{!709, !14, !15}
!710 = distinct !{!710, !14}
!711 = distinct !{!711, !14, !15}
!712 = distinct !{!712, !14}
!713 = distinct !{!713, !14, !18, !19}
!714 = distinct !{!714, !14, !19, !18}
!715 = distinct !{!715, !14}
!716 = distinct !{!716, !14, !15}
!717 = distinct !{!717, !14}
!718 = distinct !{!718, !14, !15}
!719 = distinct !{!719, !14}
!720 = distinct !{!720, !14, !18, !19}
!721 = distinct !{!721, !14, !19, !18}
!722 = distinct !{!722, !14}
!723 = distinct !{!723, !14, !15}
!724 = distinct !{!724, !14}
!725 = distinct !{!725, !14, !15}
!726 = distinct !{!726, !14}
!727 = distinct !{!727, !14, !18, !19}
!728 = distinct !{!728, !14, !19, !18}
!729 = distinct !{!729, !14}
!730 = distinct !{!730, !14, !15}
!731 = distinct !{!731, !14}
!732 = distinct !{!732, !14, !15}
!733 = distinct !{!733, !14}
!734 = distinct !{!734, !14, !18, !19}
!735 = distinct !{!735, !14, !19, !18}
!736 = distinct !{!736, !14}
!737 = distinct !{!737, !14, !15}
!738 = distinct !{!738, !14}
!739 = distinct !{!739, !14, !15}
!740 = distinct !{!740, !14}
!741 = distinct !{!741, !14, !18, !19}
!742 = distinct !{!742, !14, !19, !18}
!743 = distinct !{!743, !14}
!744 = distinct !{!744, !14, !15}
!745 = distinct !{!745, !14}
!746 = distinct !{!746, !14, !15}
!747 = distinct !{!747, !14}
!748 = distinct !{!748, !14, !18, !19}
!749 = distinct !{!749, !14, !19, !18}
!750 = distinct !{!750, !14}
!751 = distinct !{!751, !14, !15}
!752 = distinct !{!752, !14}
!753 = distinct !{!753, !14, !15}
!754 = distinct !{!754, !14}
!755 = distinct !{!755, !14, !18, !19}
!756 = distinct !{!756, !14, !19, !18}
!757 = distinct !{!757, !14}
!758 = distinct !{!758, !14, !15}
!759 = distinct !{!759, !14}
!760 = distinct !{!760, !14, !15}
!761 = distinct !{!761, !14}
!762 = distinct !{!762, !14, !18, !19}
!763 = distinct !{!763, !14, !19, !18}
!764 = distinct !{!764, !14}
!765 = distinct !{!765, !14, !15}
!766 = distinct !{!766, !14}
!767 = distinct !{!767, !14, !15}
!768 = distinct !{!768, !14}
!769 = distinct !{!769, !14, !18, !19}
!770 = distinct !{!770, !14, !19, !18}
!771 = distinct !{!771, !14}
!772 = distinct !{!772, !14, !15}
!773 = distinct !{!773, !14}
!774 = distinct !{!774, !14, !15}
!775 = distinct !{!775, !14}
!776 = distinct !{!776, !14, !18, !19}
!777 = distinct !{!777, !14, !19, !18}
!778 = distinct !{!778, !14}
!779 = distinct !{!779, !14, !15}
!780 = distinct !{!780, !14}
!781 = distinct !{!781, !14, !15}
!782 = distinct !{!782, !14}
!783 = distinct !{!783, !14, !18, !19}
!784 = distinct !{!784, !14, !19, !18}
!785 = distinct !{!785, !14}
!786 = distinct !{!786, !14, !15}
!787 = distinct !{!787, !14}
!788 = distinct !{!788, !14, !15}
!789 = distinct !{!789, !14}
!790 = distinct !{!790, !14, !18, !19}
!791 = distinct !{!791, !14, !19, !18}
!792 = distinct !{!792, !14}
!793 = distinct !{!793, !14, !15}
!794 = distinct !{!794, !14}
!795 = distinct !{!795, !14, !15}
!796 = distinct !{!796, !14}
!797 = distinct !{!797, !14, !18, !19}
!798 = distinct !{!798, !14, !19, !18}
!799 = distinct !{!799, !14}
!800 = distinct !{!800, !14, !15}
!801 = distinct !{!801, !14}
!802 = distinct !{!802, !14, !15}
!803 = distinct !{!803, !14}
!804 = distinct !{!804, !14, !18, !19}
!805 = distinct !{!805, !14, !19, !18}
!806 = distinct !{!806, !14}
!807 = distinct !{!807, !14, !15}
!808 = distinct !{!808, !14}
!809 = distinct !{!809, !14, !15}
!810 = distinct !{!810, !14}
!811 = distinct !{!811, !14, !18, !19}
!812 = distinct !{!812, !14, !19, !18}
!813 = distinct !{!813, !14}
!814 = distinct !{!814, !14, !15}
!815 = distinct !{!815, !14}
!816 = distinct !{!816, !14, !15}
!817 = distinct !{!817, !14}
!818 = distinct !{!818, !14, !18, !19}
!819 = distinct !{!819, !14, !19, !18}
!820 = distinct !{!820, !14}
!821 = distinct !{!821, !14, !15}
!822 = distinct !{!822, !14}
!823 = distinct !{!823, !14, !15}
!824 = distinct !{!824, !14}
!825 = distinct !{!825, !14, !18, !19}
!826 = distinct !{!826, !14, !19, !18}
!827 = distinct !{!827, !14}
!828 = distinct !{!828, !14, !15}
!829 = distinct !{!829, !14}
!830 = distinct !{!830, !14, !15}
!831 = distinct !{!831, !14}
!832 = distinct !{!832, !14, !18, !19}
!833 = distinct !{!833, !14, !19, !18}
!834 = distinct !{!834, !14}
!835 = distinct !{!835, !14, !15}
!836 = distinct !{!836, !14}
!837 = distinct !{!837, !14, !15}
!838 = distinct !{!838, !14}
!839 = distinct !{!839, !14, !18, !19}
!840 = distinct !{!840, !14, !19, !18}
!841 = distinct !{!841, !14}
!842 = distinct !{!842, !14, !15}
!843 = distinct !{!843, !14}
!844 = distinct !{!844, !14, !15}
!845 = distinct !{!845, !14}
!846 = distinct !{!846, !14, !18, !19}
!847 = distinct !{!847, !14, !19, !18}
!848 = distinct !{!848, !14}
!849 = distinct !{!849, !14, !15}
!850 = distinct !{!850, !14}
!851 = distinct !{!851, !14, !15}
!852 = distinct !{!852, !14}
!853 = distinct !{!853, !14, !18, !19}
!854 = distinct !{!854, !14, !19, !18}
!855 = distinct !{!855, !14}
!856 = distinct !{!856, !14, !15}
!857 = distinct !{!857, !14}
!858 = distinct !{!858, !14, !15}
!859 = distinct !{!859, !14}
!860 = distinct !{!860, !14, !18, !19}
!861 = distinct !{!861, !14, !19, !18}
!862 = distinct !{!862, !14}
!863 = distinct !{!863, !14, !15}
!864 = distinct !{!864, !14}
!865 = distinct !{!865, !14, !15}
!866 = distinct !{!866, !14}
!867 = distinct !{!867, !14, !18, !19}
!868 = distinct !{!868, !14, !19, !18}
!869 = distinct !{!869, !14}
!870 = distinct !{!870, !14, !15}
!871 = distinct !{!871, !14}
!872 = distinct !{!872, !14, !15}
!873 = distinct !{!873, !14}
!874 = distinct !{!874, !14, !18, !19}
!875 = distinct !{!875, !14, !19, !18}
!876 = distinct !{!876, !14}
!877 = distinct !{!877, !14, !15}
!878 = distinct !{!878, !14}
!879 = distinct !{!879, !14, !15}
!880 = distinct !{!880, !14}
!881 = distinct !{!881, !14, !18, !19}
!882 = distinct !{!882, !14, !19, !18}
!883 = distinct !{!883, !14}
!884 = distinct !{!884, !14, !15}
!885 = distinct !{!885, !14}
!886 = distinct !{!886, !14, !15}
!887 = distinct !{!887, !14}
!888 = distinct !{!888, !14, !18, !19}
!889 = distinct !{!889, !14, !19, !18}
!890 = distinct !{!890, !14}
!891 = distinct !{!891, !14, !15}
!892 = distinct !{!892, !14}
!893 = distinct !{!893, !14, !15}
!894 = distinct !{!894, !14}
!895 = distinct !{!895, !14, !18, !19}
!896 = distinct !{!896, !14, !19, !18}
!897 = distinct !{!897, !14}
!898 = distinct !{!898, !14, !15}
!899 = distinct !{!899, !14}
!900 = distinct !{!900, !14, !15}
!901 = distinct !{!901, !14}
!902 = distinct !{!902, !14, !18, !19}
!903 = distinct !{!903, !14, !19, !18}
!904 = distinct !{!904, !14}
!905 = distinct !{!905, !14, !15}
!906 = distinct !{!906, !14}
!907 = distinct !{!907, !14, !15}
!908 = distinct !{!908, !14}
!909 = distinct !{!909, !14, !18, !19}
!910 = distinct !{!910, !14, !19, !18}
!911 = distinct !{!911, !14}
!912 = distinct !{!912, !14, !15}
!913 = distinct !{!913, !14}
!914 = distinct !{!914, !14, !15}
!915 = distinct !{!915, !14}
!916 = distinct !{!916, !14, !18, !19}
!917 = distinct !{!917, !14, !19, !18}
!918 = distinct !{!918, !14}
!919 = distinct !{!919, !14, !15}
!920 = distinct !{!920, !14}
!921 = distinct !{!921, !14, !15}
!922 = distinct !{!922, !14}
!923 = distinct !{!923, !14, !18, !19}
!924 = distinct !{!924, !14, !19, !18}
!925 = distinct !{!925, !14}
!926 = distinct !{!926, !14, !15}
!927 = distinct !{!927, !14}
!928 = distinct !{!928, !14, !15}
!929 = distinct !{!929, !14}
!930 = distinct !{!930, !14, !18, !19}
!931 = distinct !{!931, !14, !19, !18}
!932 = distinct !{!932, !14}
!933 = distinct !{!933, !14, !15}
!934 = distinct !{!934, !14}
!935 = distinct !{!935, !14, !15}
!936 = distinct !{!936, !14}
!937 = distinct !{!937, !14, !18, !19}
!938 = distinct !{!938, !14, !19, !18}
!939 = distinct !{!939, !14}
!940 = distinct !{!940, !14, !15}
!941 = distinct !{!941, !14}
!942 = distinct !{!942, !14, !15}
!943 = distinct !{!943, !14}
!944 = distinct !{!944, !14, !18, !19}
!945 = distinct !{!945, !14, !19, !18}
!946 = distinct !{!946, !14}
!947 = distinct !{!947, !14, !15}
!948 = distinct !{!948, !14}
!949 = distinct !{!949, !14, !15}
!950 = distinct !{!950, !14}
!951 = distinct !{!951, !14, !18, !19}
!952 = distinct !{!952, !14, !19, !18}
!953 = distinct !{!953, !14}
!954 = distinct !{!954, !14, !15}
!955 = distinct !{!955, !14}
!956 = distinct !{!956, !14, !15}
!957 = distinct !{!957, !14}
!958 = distinct !{!958, !14, !18, !19}
!959 = distinct !{!959, !14, !19, !18}
!960 = distinct !{!960, !14}
!961 = distinct !{!961, !14, !15}
!962 = distinct !{!962, !14}
!963 = distinct !{!963, !14, !15}
!964 = distinct !{!964, !14}
!965 = distinct !{!965, !14, !18, !19}
!966 = distinct !{!966, !14, !19, !18}
!967 = distinct !{!967, !14}
!968 = distinct !{!968, !14, !15}
!969 = distinct !{!969, !14}
!970 = distinct !{!970, !14, !15}
!971 = distinct !{!971, !14}
!972 = distinct !{!972, !14, !18, !19}
!973 = distinct !{!973, !14, !19, !18}
!974 = distinct !{!974, !14}
!975 = distinct !{!975, !14, !15}
!976 = distinct !{!976, !14}
!977 = distinct !{!977, !14, !15}
!978 = distinct !{!978, !14}
!979 = distinct !{!979, !14, !18, !19}
!980 = distinct !{!980, !14, !19, !18}
!981 = distinct !{!981, !14}
!982 = distinct !{!982, !14, !15}
!983 = distinct !{!983, !14}
!984 = distinct !{!984, !14, !15}
!985 = distinct !{!985, !14}
!986 = distinct !{!986, !14, !18, !19}
!987 = distinct !{!987, !14, !19, !18}
!988 = distinct !{!988, !14}
!989 = distinct !{!989, !14, !15}
!990 = distinct !{!990, !14}
!991 = distinct !{!991, !14, !15}
!992 = distinct !{!992, !14}
!993 = distinct !{!993, !14, !18, !19}
!994 = distinct !{!994, !14, !19, !18}
!995 = distinct !{!995, !14}
!996 = distinct !{!996, !14, !15}
!997 = distinct !{!997, !14}
!998 = distinct !{!998, !14, !15}
!999 = distinct !{!999, !14}
!1000 = distinct !{!1000, !14, !18, !19}
!1001 = distinct !{!1001, !14, !19, !18}
!1002 = distinct !{!1002, !14}
!1003 = distinct !{!1003, !14, !15}
!1004 = distinct !{!1004, !14}
!1005 = distinct !{!1005, !14, !15}
!1006 = distinct !{!1006, !14}
!1007 = distinct !{!1007, !14, !18, !19}
!1008 = distinct !{!1008, !14, !19, !18}
!1009 = distinct !{!1009, !14}
!1010 = distinct !{!1010, !14, !15}
!1011 = distinct !{!1011, !14}
!1012 = distinct !{!1012, !14, !15}
!1013 = distinct !{!1013, !14}
!1014 = distinct !{!1014, !14, !18, !19}
!1015 = distinct !{!1015, !14, !19, !18}
!1016 = distinct !{!1016, !14}
!1017 = distinct !{!1017, !14, !15}
!1018 = distinct !{!1018, !14}
!1019 = distinct !{!1019, !14, !15}
!1020 = distinct !{!1020, !14}
!1021 = distinct !{!1021, !14, !18, !19}
!1022 = distinct !{!1022, !14, !19, !18}
!1023 = distinct !{!1023, !14}
!1024 = distinct !{!1024, !14, !15}
!1025 = distinct !{!1025, !14}
!1026 = distinct !{!1026, !14, !15}
!1027 = distinct !{!1027, !14}
!1028 = distinct !{!1028, !14, !18, !19}
!1029 = distinct !{!1029, !14, !19, !18}
!1030 = distinct !{!1030, !14}
!1031 = distinct !{!1031, !14, !15}
!1032 = distinct !{!1032, !14}
!1033 = distinct !{!1033, !14, !15}
!1034 = distinct !{!1034, !14}
!1035 = distinct !{!1035, !14, !18, !19}
!1036 = distinct !{!1036, !14, !19, !18}
!1037 = distinct !{!1037, !14}
!1038 = distinct !{!1038, !14, !15}
!1039 = distinct !{!1039, !14}
!1040 = distinct !{!1040, !14, !15}
!1041 = distinct !{!1041, !14}
!1042 = distinct !{!1042, !14, !18, !19}
!1043 = distinct !{!1043, !14, !19, !18}
!1044 = distinct !{!1044, !14}
!1045 = distinct !{!1045, !14, !15}
!1046 = distinct !{!1046, !14}
