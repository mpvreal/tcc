; ModuleID = 'source/base/quadrature.cc'
source_filename = "source/base/quadrature.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.dealii::RefinementCase.35" = type { i8 }
%"class.dealii::Quadrature" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector", %"class.std::vector.3" }
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Point" = type { %"class.dealii::Tensor" }
%"class.dealii::Tensor" = type { [1 x double] }
%"class.dealii::Quadrature.8" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.9", %"class.std::vector.3" }
%"class.std::vector.9" = type { %"struct.std::_Vector_base.10" }
%"struct.std::_Vector_base.10" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Point.14" = type { %"class.dealii::Tensor.15" }
%"class.dealii::Tensor.15" = type { [2 x double] }
%"class.dealii::Quadrature.16" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.17", %"class.std::vector.3" }
%"class.std::vector.17" = type { %"struct.std::_Vector_base.18" }
%"struct.std::_Vector_base.18" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Point.22" = type { %"class.dealii::Tensor.23" }
%"class.dealii::Tensor.23" = type { [3 x double] }
%"class.dealii::QIterated.26" = type { %"class.dealii::Quadrature" }
%"class.dealii::QIterated" = type { %"class.dealii::Quadrature.8" }
%"class.dealii::Quadrature.28" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.29", %"class.std::vector.3" }
%"class.std::vector.29" = type { %"struct.std::_Vector_base.30" }
%"struct.std::_Vector_base.30" = type { %"struct.std::_Vector_base<dealii::Point<0>, std::allocator<dealii::Point<0> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<0>, std::allocator<dealii::Point<0> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<0>, std::allocator<dealii::Point<0> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<0>, std::allocator<dealii::Point<0> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::RefinementCase.37" = type { i8 }

$_ZN6dealii10QuadratureILi1EEC5Ej = comdat any

$__clang_call_terminate = comdat any

$_ZN6dealii10QuadratureILi1EEC5ERKS1_ = comdat any

$_ZNK6dealii10QuadratureILi1EE4sizeEv = comdat any

$_ZN6dealii10QuadratureILi1EEC5ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE = comdat any

$_ZN6dealii10QuadratureILi1EEC5ERKSt6vectorINS_5PointILi1EEESaIS4_EE = comdat any

$_ZN6dealii10QuadratureILi1EEC5ERKNS_5PointILi1EEE = comdat any

$_ZN6dealii10QuadratureILi1EEaSERKS1_ = comdat any

$_ZNSt6vectorIdSaIdEEaSERKS1_ = comdat any

$_ZNSt6vectorIN6dealii5PointILi1EEESaIS2_EEaSERKS4_ = comdat any

$_ZN6dealii10QuadratureILi1EED5Ev = comdat any

$_ZNK6dealii10QuadratureILi1EE5pointEj = comdat any

$_ZNK6dealii10QuadratureILi1EE10get_pointsEv = comdat any

$_ZNK6dealii10QuadratureILi1EE6weightEj = comdat any

$_ZNK6dealii10QuadratureILi1EE11get_weightsEv = comdat any

$_ZNK6dealii10QuadratureILi1EE18memory_consumptionEv = comdat any

$_ZN6dealii10QuadratureILi2EEC5Ej = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKNS0_ILi1EEES4_ = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKNS0_ILi1EEE = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKS1_ = comdat any

$_ZNK6dealii10QuadratureILi2EE4sizeEv = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKSt6vectorINS_5PointILi2EEESaIS4_EE = comdat any

$_ZN6dealii10QuadratureILi2EEC5ERKNS_5PointILi2EEE = comdat any

$_ZN6dealii10QuadratureILi2EEaSERKS1_ = comdat any

$_ZNSt6vectorIN6dealii5PointILi2EEESaIS2_EEaSERKS4_ = comdat any

$_ZN6dealii10QuadratureILi2EED5Ev = comdat any

$_ZNK6dealii10QuadratureILi2EE5pointEj = comdat any

$_ZNK6dealii10QuadratureILi2EE10get_pointsEv = comdat any

$_ZNK6dealii10QuadratureILi2EE6weightEj = comdat any

$_ZNK6dealii10QuadratureILi2EE11get_weightsEv = comdat any

$_ZNK6dealii10QuadratureILi2EE18memory_consumptionEv = comdat any

$_ZN6dealii10QuadratureILi3EEC5Ej = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKNS0_ILi2EEERKNS0_ILi1EEE = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKNS0_ILi1EEE = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKS1_ = comdat any

$_ZNK6dealii10QuadratureILi3EE4sizeEv = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKSt6vectorINS_5PointILi3EEESaIS4_EE = comdat any

$_ZN6dealii10QuadratureILi3EEC5ERKNS_5PointILi3EEE = comdat any

$_ZN6dealii10QuadratureILi3EEaSERKS1_ = comdat any

$_ZNSt6vectorIN6dealii5PointILi3EEESaIS2_EEaSERKS4_ = comdat any

$_ZN6dealii10QuadratureILi3EED5Ev = comdat any

$_ZNK6dealii10QuadratureILi3EE5pointEj = comdat any

$_ZNK6dealii10QuadratureILi3EE10get_pointsEv = comdat any

$_ZNK6dealii10QuadratureILi3EE6weightEj = comdat any

$_ZNK6dealii10QuadratureILi3EE11get_weightsEv = comdat any

$_ZNK6dealii10QuadratureILi3EE18memory_consumptionEv = comdat any

$_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEE = comdat any

$_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEES5_ = comdat any

$_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEES5_S5_ = comdat any

$_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEE = comdat any

$_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEES5_ = comdat any

$_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEES5_S5_ = comdat any

$_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEE = comdat any

$_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEES5_ = comdat any

$_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEES5_S5_ = comdat any

$_ZN6dealii9QIteratedILi2EEC5ERKNS_10QuadratureILi1EEEj = comdat any

$_ZN6dealii9QIteratedILi3EEC5ERKNS_10QuadratureILi1EEEj = comdat any

$_ZN6dealii10QProjectorILi1EE15project_to_faceERKNS_10QuadratureILi0EEEj = comdat any

$_ZN6dealii10QProjectorILi1EE18project_to_subfaceERKNS_10QuadratureILi0EEEjjRKNS_14RefinementCaseILi0EEE = comdat any

$_ZN6dealii10QProjectorILi1EE16project_to_childERKNS_10QuadratureILi1EEEj = comdat any

$_ZN6dealii10QProjectorILi1EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi1EEES9_ = comdat any

$_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC5Ev = comdat any

$_ZN6dealii10QProjectorILi1EE17DataSetDescriptor4cellEv = comdat any

$_ZN6dealii10QProjectorILi1EE17DataSetDescriptor4faceEjbbbj = comdat any

$_ZNK6dealii10QProjectorILi1EE17DataSetDescriptorcvjEv = comdat any

$_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC5Ej = comdat any

$_ZN6dealii10QProjectorILi1EE7reflectERKNS_10QuadratureILi2EEE = comdat any

$_ZN6dealii10QProjectorILi1EE6rotateERKNS_10QuadratureILi2EEEj = comdat any

$_ZN6dealii10QProjectorILi2EE15project_to_faceERKNS_10QuadratureILi1EEEj = comdat any

$_ZN6dealii10QProjectorILi2EE18project_to_subfaceERKNS_10QuadratureILi1EEEjjRKNS_14RefinementCaseILi1EEE = comdat any

$_ZN6dealii10QProjectorILi2EE16project_to_childERKNS_10QuadratureILi2EEEj = comdat any

$_ZN6dealii10QProjectorILi2EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi2EEES9_ = comdat any

$_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC5Ev = comdat any

$_ZN6dealii10QProjectorILi2EE17DataSetDescriptor4cellEv = comdat any

$_ZN6dealii10QProjectorILi2EE17DataSetDescriptor4faceEjbbbj = comdat any

$_ZNK6dealii10QProjectorILi2EE17DataSetDescriptorcvjEv = comdat any

$_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC5Ej = comdat any

$_ZN6dealii10QProjectorILi2EE7reflectERKNS_10QuadratureILi2EEE = comdat any

$_ZN6dealii10QProjectorILi2EE6rotateERKNS_10QuadratureILi2EEEj = comdat any

$_ZN6dealii10QProjectorILi3EE15project_to_faceERKNS_10QuadratureILi2EEEj = comdat any

$_ZN6dealii10QProjectorILi3EE18project_to_subfaceERKNS_10QuadratureILi2EEEjjRKNS_14RefinementCaseILi2EEE = comdat any

$_ZN6dealii10QProjectorILi3EE16project_to_childERKNS_10QuadratureILi3EEEj = comdat any

$_ZN6dealii10QProjectorILi3EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi3EEES9_ = comdat any

$_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC5Ev = comdat any

$_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv = comdat any

$_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj = comdat any

$_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv = comdat any

$_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC5Ej = comdat any

$_ZN6dealii10QProjectorILi3EE7reflectERKNS_10QuadratureILi2EEE = comdat any

$_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj = comdat any

$_ZN6dealii9QIteratedILi1EED0Ev = comdat any

$_ZN6dealii12QAnisotropicILi1EED0Ev = comdat any

$_ZN6dealii12QAnisotropicILi2EED0Ev = comdat any

$_ZN6dealii12QAnisotropicILi3EED0Ev = comdat any

$_ZN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaD0Ev = comdat any

$_ZN6dealii9QIteratedILi2EED0Ev = comdat any

$_ZN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaD0Ev = comdat any

$_ZN6dealii9QIteratedILi3EED0Ev = comdat any

$_ZN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaD0Ev = comdat any

$_ZTVN6dealii10QuadratureILi1EEE = comdat any

$_ZTVN6dealii10QuadratureILi2EEE = comdat any

$_ZTVN6dealii10QuadratureILi3EEE = comdat any

$_ZTVN6dealii12QAnisotropicILi1EEE = comdat any

$_ZTVN6dealii12QAnisotropicILi2EEE = comdat any

$_ZTVN6dealii12QAnisotropicILi3EEE = comdat any

$_ZTVN6dealii9QIteratedILi2EEE = comdat any

$_ZTVN6dealii9QIteratedILi3EEE = comdat any

$_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbjE6offset = comdat any

$_ZTVN6dealii10QuadratureILi0EEE = comdat any

$_ZTVN6dealii9QIteratedILi1EEE = comdat any

$_ZTSN6dealii10QuadratureILi1EEE = comdat any

$_ZTIN6dealii10QuadratureILi1EEE = comdat any

$_ZTSN6dealii9QIteratedILi1EEE = comdat any

$_ZTIN6dealii9QIteratedILi1EEE = comdat any

$_ZTSN6dealii10QuadratureILi2EEE = comdat any

$_ZTIN6dealii10QuadratureILi2EEE = comdat any

$_ZTSN6dealii10QuadratureILi3EEE = comdat any

$_ZTIN6dealii10QuadratureILi3EEE = comdat any

$_ZTSN6dealii12QAnisotropicILi1EEE = comdat any

$_ZTIN6dealii12QAnisotropicILi1EEE = comdat any

$_ZTSN6dealii12QAnisotropicILi2EEE = comdat any

$_ZTIN6dealii12QAnisotropicILi2EEE = comdat any

$_ZTSN6dealii12QAnisotropicILi3EEE = comdat any

$_ZTIN6dealii12QAnisotropicILi3EEE = comdat any

$_ZTVN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTIN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii9QIteratedILi2EEE = comdat any

$_ZTIN6dealii9QIteratedILi2EEE = comdat any

$_ZTVN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTIN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii9QIteratedILi3EEE = comdat any

$_ZTIN6dealii9QIteratedILi3EEE = comdat any

$_ZTVN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTIN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = comdat any

$_ZTSN6dealii10QuadratureILi0EEE = comdat any

$_ZTIN6dealii10QuadratureILi0EEE = comdat any

@_ZTVN6dealii10QuadratureILi1EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii10QuadratureILi1EEE, ptr @_ZN6dealii10QuadratureILi1EED2Ev, ptr @_ZN6dealii10QuadratureILi1EED0Ev] }, comdat, align 8
@.str = private unnamed_addr constant [4 x i8] c"Inf\00", align 1
@_ZTVN6dealii10QuadratureILi2EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii10QuadratureILi2EEE, ptr @_ZN6dealii10QuadratureILi2EED2Ev, ptr @_ZN6dealii10QuadratureILi2EED0Ev] }, comdat, align 8
@_ZTVN6dealii10QuadratureILi3EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii10QuadratureILi3EEE, ptr @_ZN6dealii10QuadratureILi3EED2Ev, ptr @_ZN6dealii10QuadratureILi3EED0Ev] }, comdat, align 8
@_ZTVN6dealii12QAnisotropicILi1EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii12QAnisotropicILi1EEE, ptr @_ZN6dealii10QuadratureILi1EED2Ev, ptr @_ZN6dealii12QAnisotropicILi1EED0Ev] }, comdat, align 8
@_ZTVN6dealii12QAnisotropicILi2EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii12QAnisotropicILi2EEE, ptr @_ZN6dealii10QuadratureILi2EED2Ev, ptr @_ZN6dealii12QAnisotropicILi2EED0Ev] }, comdat, align 8
@_ZTVN6dealii12QAnisotropicILi3EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii12QAnisotropicILi3EEE, ptr @_ZN6dealii10QuadratureILi3EED2Ev, ptr @_ZN6dealii12QAnisotropicILi3EED0Ev] }, comdat, align 8
@_ZTVN6dealii9QIteratedILi2EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi2EEE, ptr @_ZN6dealii10QuadratureILi2EED2Ev, ptr @_ZN6dealii9QIteratedILi2EED0Ev] }, comdat, align 8
@_ZTVN6dealii9QIteratedILi3EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi3EEE, ptr @_ZN6dealii10QuadratureILi3EED2Ev, ptr @_ZN6dealii9QIteratedILi3EED0Ev] }, comdat, align 8
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbjE6offset = linkonce_odr dso_local local_unnamed_addr constant [2 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 24, i32 30], [2 x i32] [i32 36, i32 42]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 6], [2 x i32] [i32 12, i32 18]]], comdat, align 16
@_ZTVN6dealii10QuadratureILi0EEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii10QuadratureILi0EEE, ptr @_ZN6dealii10QuadratureILi0EED2Ev, ptr @_ZN6dealii10QuadratureILi0EED0Ev] }, comdat, align 8
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE18orientation_offset = internal unnamed_addr constant [2 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 192, i32 240], [2 x i32] [i32 288, i32 336]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 48], [2 x i32] [i32 96, i32 144]]], align 16
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE15ref_case_offset = internal unnamed_addr constant [3 x i32] [i32 6, i32 4, i32 0], align 4
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case = internal global [10 x [4 x %"class.dealii::RefinementCase.35"]] zeroinitializer, align 32
@_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case = internal global i64 0, align 8
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE25equivalent_subface_number = internal unnamed_addr constant [10 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 0, i32 1, i32 -1, i32 -1], [4 x i32] [i32 0, i32 2, i32 1, i32 -1], [4 x i32] [i32 0, i32 1, i32 3, i32 -1], [4 x i32] [i32 0, i32 2, i32 1, i32 3], [4 x i32] [i32 0, i32 1, i32 -1, i32 -1], [4 x i32] [i32 0, i32 1, i32 1, i32 -1], [4 x i32] [i32 0, i32 2, i32 3, i32 -1], [4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 0, i32 1, i32 2, i32 3]], align 16
@_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation = internal global [4 x %"class.dealii::RefinementCase.35"] zeroinitializer, align 1
@_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation = internal global i64 0, align 8
@_ZTVN6dealii9QIteratedILi1EEE = weak_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi1EEE, ptr @_ZN6dealii10QuadratureILi1EED2Ev, ptr @_ZN6dealii9QIteratedILi1EED0Ev] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii10QuadratureILi1EEE = weak_odr dso_local constant [28 x i8] c"N6dealii10QuadratureILi1EEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTIN6dealii10QuadratureILi1EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii10QuadratureILi1EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii9QIteratedILi1EEE = weak_odr dso_local constant [26 x i8] c"N6dealii9QIteratedILi1EEE\00", comdat, align 1
@_ZTIN6dealii9QIteratedILi1EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi1EEE, ptr @_ZTIN6dealii10QuadratureILi1EEE }, comdat, align 8
@_ZTSN6dealii10QuadratureILi2EEE = weak_odr dso_local constant [28 x i8] c"N6dealii10QuadratureILi2EEE\00", comdat, align 1
@_ZTIN6dealii10QuadratureILi2EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii10QuadratureILi2EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii10QuadratureILi3EEE = weak_odr dso_local constant [28 x i8] c"N6dealii10QuadratureILi3EEE\00", comdat, align 1
@_ZTIN6dealii10QuadratureILi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii10QuadratureILi3EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii12QAnisotropicILi1EEE = weak_odr dso_local constant [30 x i8] c"N6dealii12QAnisotropicILi1EEE\00", comdat, align 1
@_ZTIN6dealii12QAnisotropicILi1EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12QAnisotropicILi1EEE, ptr @_ZTIN6dealii10QuadratureILi1EEE }, comdat, align 8
@_ZTSN6dealii12QAnisotropicILi2EEE = weak_odr dso_local constant [30 x i8] c"N6dealii12QAnisotropicILi2EEE\00", comdat, align 1
@_ZTIN6dealii12QAnisotropicILi2EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12QAnisotropicILi2EEE, ptr @_ZTIN6dealii10QuadratureILi2EEE }, comdat, align 8
@_ZTSN6dealii12QAnisotropicILi3EEE = weak_odr dso_local constant [30 x i8] c"N6dealii12QAnisotropicILi3EEE\00", comdat, align 1
@_ZTIN6dealii12QAnisotropicILi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12QAnisotropicILi3EEE, ptr @_ZTIN6dealii10QuadratureILi3EEE }, comdat, align 8
@_ZTVN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant [55 x i8] c"N6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE\00", comdat, align 1
@_ZTIN6dealii13ExceptionBaseE = external constant ptr
@_ZTIN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii9QIteratedILi2EEE = weak_odr dso_local constant [26 x i8] c"N6dealii9QIteratedILi2EEE\00", comdat, align 1
@_ZTIN6dealii9QIteratedILi2EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi2EEE, ptr @_ZTIN6dealii10QuadratureILi2EEE }, comdat, align 8
@_ZTVN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant [55 x i8] c"N6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE\00", comdat, align 1
@_ZTIN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii9QIteratedILi3EEE = weak_odr dso_local constant [26 x i8] c"N6dealii9QIteratedILi3EEE\00", comdat, align 1
@_ZTIN6dealii9QIteratedILi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi3EEE, ptr @_ZTIN6dealii10QuadratureILi3EEE }, comdat, align 8
@_ZTVN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant [55 x i8] c"N6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE\00", comdat, align 1
@_ZTIN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii10QuadratureILi0EEE = linkonce_odr dso_local constant [28 x i8] c"N6dealii10QuadratureILi0EEE\00", comdat, align 1
@_ZTIN6dealii10QuadratureILi0EEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii10QuadratureILi0EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE = private unnamed_addr constant [3 x i64] [i64 2, i64 0, i64 1], align 8
@switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE.6 = private unnamed_addr constant [3 x i64] [i64 1, i64 2, i64 0], align 8

@_ZN6dealii10QuadratureILi1EEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QuadratureILi1EEC2Ej
@_ZN6dealii10QuadratureILi1EEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKS1_
@_ZN6dealii10QuadratureILi1EEC1ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE
@_ZN6dealii10QuadratureILi1EEC1ERKSt6vectorINS_5PointILi1EEESaIS4_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EE
@_ZN6dealii10QuadratureILi1EEC1ERKNS_5PointILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKNS_5PointILi1EEE
@_ZN6dealii10QuadratureILi1EED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QuadratureILi1EED2Ev
@_ZN6dealii10QuadratureILi2EEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QuadratureILi2EEC2Ej
@_ZN6dealii10QuadratureILi2EEC1ERKNS0_ILi1EEES4_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKNS0_ILi1EEES4_
@_ZN6dealii10QuadratureILi2EEC1ERKNS0_ILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKNS0_ILi1EEE
@_ZN6dealii10QuadratureILi2EEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKS1_
@_ZN6dealii10QuadratureILi2EEC1ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE
@_ZN6dealii10QuadratureILi2EEC1ERKSt6vectorINS_5PointILi2EEESaIS4_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EE
@_ZN6dealii10QuadratureILi2EEC1ERKNS_5PointILi2EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi2EEC2ERKNS_5PointILi2EEE
@_ZN6dealii10QuadratureILi2EED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QuadratureILi2EED2Ev
@_ZN6dealii10QuadratureILi3EEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QuadratureILi3EEC2Ej
@_ZN6dealii10QuadratureILi3EEC1ERKNS0_ILi2EEERKNS0_ILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKNS0_ILi2EEERKNS0_ILi1EEE
@_ZN6dealii10QuadratureILi3EEC1ERKNS0_ILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKNS0_ILi1EEE
@_ZN6dealii10QuadratureILi3EEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKS1_
@_ZN6dealii10QuadratureILi3EEC1ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE
@_ZN6dealii10QuadratureILi3EEC1ERKSt6vectorINS_5PointILi3EEESaIS4_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EE
@_ZN6dealii10QuadratureILi3EEC1ERKNS_5PointILi3EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi3EEC2ERKNS_5PointILi3EEE
@_ZN6dealii10QuadratureILi3EED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QuadratureILi3EED2Ev
@_ZN6dealii12QAnisotropicILi1EEC1ERKNS_10QuadratureILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEE
@_ZN6dealii12QAnisotropicILi1EEC1ERKNS_10QuadratureILi1EEES5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEES5_
@_ZN6dealii12QAnisotropicILi1EEC1ERKNS_10QuadratureILi1EEES5_S5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEES5_S5_
@_ZN6dealii12QAnisotropicILi2EEC1ERKNS_10QuadratureILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEE
@_ZN6dealii12QAnisotropicILi2EEC1ERKNS_10QuadratureILi1EEES5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEES5_
@_ZN6dealii12QAnisotropicILi2EEC1ERKNS_10QuadratureILi1EEES5_S5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEES5_S5_
@_ZN6dealii12QAnisotropicILi3EEC1ERKNS_10QuadratureILi1EEE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEE
@_ZN6dealii12QAnisotropicILi3EEC1ERKNS_10QuadratureILi1EEES5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEES5_
@_ZN6dealii12QAnisotropicILi3EEC1ERKNS_10QuadratureILi1EEES5_S5_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr, ptr, ptr), ptr @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEES5_S5_
@_ZN6dealii9QIteratedILi2EEC1ERKNS_10QuadratureILi1EEEj = weak_odr dso_local unnamed_addr alias void (ptr, ptr, i32), ptr @_ZN6dealii9QIteratedILi2EEC2ERKNS_10QuadratureILi1EEEj
@_ZN6dealii9QIteratedILi3EEC1ERKNS_10QuadratureILi1EEEj = weak_odr dso_local unnamed_addr alias void (ptr, ptr, i32), ptr @_ZN6dealii9QIteratedILi3EEC2ERKNS_10QuadratureILi1EEEj
@_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC2Ev
@_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC2Ej
@_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC2Ev
@_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC2Ej
@_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC2Ev
@_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC2Ej
@_ZN6dealii10QuadratureILi0EEC1Ej = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii10QuadratureILi0EEC2Ej
@_ZN6dealii10QuadratureILi0EEC1ERKS1_ = dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi0EEC2ERKS1_
@_ZN6dealii10QuadratureILi0EED1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii10QuadratureILi0EED2Ev
@_ZN6dealii10QuadratureILi0EEC1ERKNS0_ILin1EEERKNS0_ILi1EEE = dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi0EEC2ERKNS0_ILin1EEERKNS0_ILi1EEE
@_ZN6dealii10QuadratureILi1EEC1ERKNS0_ILi0EEERKS1_ = dso_local unnamed_addr alias void (ptr, ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKNS0_ILi0EEERKS1_
@_ZN6dealii10QuadratureILi1EEC1ERKNS0_ILi0EEE = dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii10QuadratureILi1EEC2ERKNS0_ILi0EEE
@_ZN6dealii9QIteratedILi1EEC1ERKNS_10QuadratureILi1EEEj = dso_local unnamed_addr alias void (ptr, ptr, i32), ptr @_ZN6dealii9QIteratedILi1EEC2ERKNS_10QuadratureILi1EEEj

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %5 = zext i32 %1 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  br label %21

8:                                                ; preds = %2
  %9 = shl nuw nsw i64 %5, 3
  %10 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %11 unwind label %24

11:                                               ; preds = %8
  store ptr %10, ptr %4, align 8, !tbaa !31
  %12 = getelementptr inbounds %"class.dealii::Point", ptr %10, i64 %5
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !32
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %10, i8 0, i64 %9, i1 false), !tbaa !33
  %14 = getelementptr i8, ptr %10, i64 %9
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !35
  %16 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  %17 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %18 unwind label %26

18:                                               ; preds = %11
  store ptr %17, ptr %16, align 8, !tbaa !36
  %19 = getelementptr inbounds double, ptr %17, i64 %5
  %20 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %17, i8 0, i64 %9, i1 false), !tbaa !33
  br label %21

21:                                               ; preds = %18, %7
  %22 = phi ptr [ null, %7 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !38
  ret void

24:                                               ; preds = %8
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %28

26:                                               ; preds = %11
  %27 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %10) #23
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi { ptr, i32 } [ %25, %24 ], [ %27, %26 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %30 unwind label %31

30:                                               ; preds = %28
  resume { ptr, i32 } %29

31:                                               ; preds = %28
  %32 = landingpad { ptr, i32 }
          catch ptr null
  %33 = extractvalue { ptr, i32 } %32, 0
  tail call void @__clang_call_terminate(ptr %33) #24
  unreachable
}

declare void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #3 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #25
  tail call void @_ZSt9terminatev() #24
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 %11, ptr %12, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !35
  %17 = load ptr, ptr %14, align 8, !tbaa !31
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = ashr exact i64 %20, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %29, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %20, 9223372036854775800
  br i1 %24, label %25, label %27, !prof !39

25:                                               ; preds = %23
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %26 unwind label %120

26:                                               ; preds = %25
  unreachable

27:                                               ; preds = %23
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %20) #22
          to label %29 unwind label %120

29:                                               ; preds = %27, %2
  %30 = phi ptr [ null, %2 ], [ %28, %27 ]
  store ptr %30, ptr %13, align 8, !tbaa !31
  %31 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %31, align 8, !tbaa !35
  %32 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %21
  %33 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !32
  %34 = load ptr, ptr %14, align 8, !tbaa !40
  %35 = load ptr, ptr %15, align 8, !tbaa !40
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %85, label %37

37:                                               ; preds = %29
  %38 = ptrtoint ptr %34 to i64
  %39 = ptrtoint ptr %30 to i64
  %40 = ptrtoint ptr %35 to i64
  %41 = add i64 %40, -8
  %42 = sub i64 %41, %38
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %42, 120
  %46 = sub i64 %39, %38
  %47 = icmp ult i64 %46, 128
  %48 = or i1 %45, %47
  br i1 %48, label %75, label %49

49:                                               ; preds = %37
  %50 = and i64 %44, 4611686018427387888
  %51 = shl i64 %50, 3
  %52 = getelementptr i8, ptr %30, i64 %51
  %53 = shl i64 %50, 3
  %54 = getelementptr i8, ptr %34, i64 %53
  br label %55

55:                                               ; preds = %55, %49
  %56 = phi i64 [ 0, %49 ], [ %71, %55 ]
  %57 = shl i64 %56, 3
  %58 = getelementptr i8, ptr %30, i64 %57
  %59 = shl i64 %56, 3
  %60 = getelementptr i8, ptr %34, i64 %59
  %61 = load <4 x double>, ptr %60, align 8, !tbaa !33
  %62 = getelementptr double, ptr %60, i64 4
  %63 = load <4 x double>, ptr %62, align 8, !tbaa !33
  %64 = getelementptr double, ptr %60, i64 8
  %65 = load <4 x double>, ptr %64, align 8, !tbaa !33
  %66 = getelementptr double, ptr %60, i64 12
  %67 = load <4 x double>, ptr %66, align 8, !tbaa !33
  store <4 x double> %61, ptr %58, align 8, !tbaa !33
  %68 = getelementptr double, ptr %58, i64 4
  store <4 x double> %63, ptr %68, align 8, !tbaa !33
  %69 = getelementptr double, ptr %58, i64 8
  store <4 x double> %65, ptr %69, align 8, !tbaa !33
  %70 = getelementptr double, ptr %58, i64 12
  store <4 x double> %67, ptr %70, align 8, !tbaa !33
  %71 = add nuw i64 %56, 16
  %72 = icmp eq i64 %71, %50
  br i1 %72, label %73, label %55, !llvm.loop !41

73:                                               ; preds = %55
  %74 = icmp eq i64 %44, %50
  br i1 %74, label %85, label %75

75:                                               ; preds = %37, %73
  %76 = phi ptr [ %30, %37 ], [ %52, %73 ]
  %77 = phi ptr [ %34, %37 ], [ %54, %73 ]
  br label %78

78:                                               ; preds = %75, %78
  %79 = phi ptr [ %83, %78 ], [ %76, %75 ]
  %80 = phi ptr [ %82, %78 ], [ %77, %75 ]
  %81 = load double, ptr %80, align 8, !tbaa !33
  store double %81, ptr %79, align 8, !tbaa !33
  %82 = getelementptr inbounds %"class.dealii::Point", ptr %80, i64 1
  %83 = getelementptr inbounds %"class.dealii::Point", ptr %79, i64 1
  %84 = icmp eq ptr %82, %35
  br i1 %84, label %85, label %78, !llvm.loop !44

85:                                               ; preds = %78, %73, %29
  %86 = phi ptr [ %30, %29 ], [ %52, %73 ], [ %83, %78 ]
  store ptr %86, ptr %31, align 8, !tbaa !35
  %87 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %88 = load ptr, ptr %4, align 8, !tbaa !38
  %89 = load ptr, ptr %3, align 8, !tbaa !36
  %90 = ptrtoint ptr %88 to i64
  %91 = ptrtoint ptr %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %87, i8 0, i64 24, i1 false)
  %94 = icmp eq ptr %88, %89
  br i1 %94, label %101, label %95

95:                                               ; preds = %85
  %96 = icmp ugt i64 %92, 9223372036854775800
  br i1 %96, label %97, label %99, !prof !39

97:                                               ; preds = %95
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %98 unwind label %122

98:                                               ; preds = %97
  unreachable

99:                                               ; preds = %95
  %100 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %92) #22
          to label %101 unwind label %122

101:                                              ; preds = %99, %85
  %102 = phi ptr [ null, %85 ], [ %100, %99 ]
  store ptr %102, ptr %87, align 8, !tbaa !36
  %103 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %102, ptr %103, align 8, !tbaa !38
  %104 = getelementptr inbounds double, ptr %102, i64 %93
  %105 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %104, ptr %105, align 8, !tbaa !37
  %106 = load ptr, ptr %3, align 8, !tbaa !40
  %107 = load ptr, ptr %4, align 8, !tbaa !40
  %108 = ptrtoint ptr %107 to i64
  %109 = ptrtoint ptr %106 to i64
  %110 = sub i64 %108, %109
  %111 = icmp sgt i64 %110, 8
  br i1 %111, label %112, label %113, !prof !45

112:                                              ; preds = %101
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %102, ptr align 8 %106, i64 %110, i1 false)
  br label %117

113:                                              ; preds = %101
  %114 = icmp eq i64 %110, 8
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = load double, ptr %106, align 8, !tbaa !33
  store double %116, ptr %102, align 8, !tbaa !33
  br label %117

117:                                              ; preds = %115, %113, %112
  %118 = ashr exact i64 %110, 3
  %119 = getelementptr inbounds double, ptr %102, i64 %118
  store ptr %119, ptr %103, align 8, !tbaa !38
  ret void

120:                                              ; preds = %27, %25
  %121 = landingpad { ptr, i32 }
          cleanup
  br label %127

122:                                              ; preds = %99, %97
  %123 = landingpad { ptr, i32 }
          cleanup
  %124 = load ptr, ptr %13, align 8, !tbaa !31
  %125 = icmp eq ptr %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  tail call void @_ZdlPv(ptr noundef nonnull %124) #23
  br label %127

127:                                              ; preds = %126, %122, %120
  %128 = phi { ptr, i32 } [ %121, %120 ], [ %123, %122 ], [ %123, %126 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %129 unwind label %130

129:                                              ; preds = %127
  resume { ptr, i32 } %128

130:                                              ; preds = %127
  %131 = landingpad { ptr, i32 }
          catch ptr null
  %132 = extractvalue { ptr, i32 } %131, 0
  tail call void @__clang_call_terminate(ptr %132) #24
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi1EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !38
  %5 = load ptr, ptr %2, align 8, !tbaa !36
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EEC5ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !35
  %7 = load ptr, ptr %1, align 8, !tbaa !31
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  store i32 %12, ptr %4, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %14 = icmp eq ptr %6, %7
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = icmp ugt i64 %10, 9223372036854775800
  br i1 %16, label %17, label %19, !prof !39

17:                                               ; preds = %15
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %18 unwind label %113

18:                                               ; preds = %17
  unreachable

19:                                               ; preds = %15
  %20 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
          to label %21 unwind label %113

21:                                               ; preds = %19, %3
  %22 = phi ptr [ null, %3 ], [ %20, %19 ]
  store ptr %22, ptr %13, align 8, !tbaa !31
  %23 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !35
  %24 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %11
  %25 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !32
  %26 = load ptr, ptr %1, align 8, !tbaa !40
  %27 = load ptr, ptr %5, align 8, !tbaa !40
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %77, label %29

29:                                               ; preds = %21
  %30 = ptrtoint ptr %26 to i64
  %31 = ptrtoint ptr %22 to i64
  %32 = ptrtoint ptr %27 to i64
  %33 = add i64 %32, -8
  %34 = sub i64 %33, %30
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %34, 120
  %38 = sub i64 %31, %30
  %39 = icmp ult i64 %38, 128
  %40 = or i1 %37, %39
  br i1 %40, label %67, label %41

41:                                               ; preds = %29
  %42 = and i64 %36, 4611686018427387888
  %43 = shl i64 %42, 3
  %44 = getelementptr i8, ptr %22, i64 %43
  %45 = shl i64 %42, 3
  %46 = getelementptr i8, ptr %26, i64 %45
  br label %47

47:                                               ; preds = %47, %41
  %48 = phi i64 [ 0, %41 ], [ %63, %47 ]
  %49 = shl i64 %48, 3
  %50 = getelementptr i8, ptr %22, i64 %49
  %51 = shl i64 %48, 3
  %52 = getelementptr i8, ptr %26, i64 %51
  %53 = load <4 x double>, ptr %52, align 8, !tbaa !33
  %54 = getelementptr double, ptr %52, i64 4
  %55 = load <4 x double>, ptr %54, align 8, !tbaa !33
  %56 = getelementptr double, ptr %52, i64 8
  %57 = load <4 x double>, ptr %56, align 8, !tbaa !33
  %58 = getelementptr double, ptr %52, i64 12
  %59 = load <4 x double>, ptr %58, align 8, !tbaa !33
  store <4 x double> %53, ptr %50, align 8, !tbaa !33
  %60 = getelementptr double, ptr %50, i64 4
  store <4 x double> %55, ptr %60, align 8, !tbaa !33
  %61 = getelementptr double, ptr %50, i64 8
  store <4 x double> %57, ptr %61, align 8, !tbaa !33
  %62 = getelementptr double, ptr %50, i64 12
  store <4 x double> %59, ptr %62, align 8, !tbaa !33
  %63 = add nuw i64 %48, 16
  %64 = icmp eq i64 %63, %42
  br i1 %64, label %65, label %47, !llvm.loop !46

65:                                               ; preds = %47
  %66 = icmp eq i64 %36, %42
  br i1 %66, label %77, label %67

67:                                               ; preds = %29, %65
  %68 = phi ptr [ %22, %29 ], [ %44, %65 ]
  %69 = phi ptr [ %26, %29 ], [ %46, %65 ]
  br label %70

70:                                               ; preds = %67, %70
  %71 = phi ptr [ %75, %70 ], [ %68, %67 ]
  %72 = phi ptr [ %74, %70 ], [ %69, %67 ]
  %73 = load double, ptr %72, align 8, !tbaa !33
  store double %73, ptr %71, align 8, !tbaa !33
  %74 = getelementptr inbounds %"class.dealii::Point", ptr %72, i64 1
  %75 = getelementptr inbounds %"class.dealii::Point", ptr %71, i64 1
  %76 = icmp eq ptr %74, %27
  br i1 %76, label %77, label %70, !llvm.loop !47

77:                                               ; preds = %70, %65, %21
  %78 = phi ptr [ %22, %21 ], [ %44, %65 ], [ %75, %70 ]
  store ptr %78, ptr %23, align 8, !tbaa !35
  %79 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %80 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !38
  %82 = load ptr, ptr %2, align 8, !tbaa !36
  %83 = ptrtoint ptr %81 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %79, i8 0, i64 24, i1 false)
  %87 = icmp eq ptr %81, %82
  br i1 %87, label %94, label %88

88:                                               ; preds = %77
  %89 = icmp ugt i64 %85, 9223372036854775800
  br i1 %89, label %90, label %92, !prof !39

90:                                               ; preds = %88
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %91 unwind label %115

91:                                               ; preds = %90
  unreachable

92:                                               ; preds = %88
  %93 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %85) #22
          to label %94 unwind label %115

94:                                               ; preds = %92, %77
  %95 = phi ptr [ null, %77 ], [ %93, %92 ]
  store ptr %95, ptr %79, align 8, !tbaa !36
  %96 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %95, ptr %96, align 8, !tbaa !38
  %97 = getelementptr inbounds double, ptr %95, i64 %86
  %98 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %97, ptr %98, align 8, !tbaa !37
  %99 = load ptr, ptr %2, align 8, !tbaa !40
  %100 = load ptr, ptr %80, align 8, !tbaa !40
  %101 = ptrtoint ptr %100 to i64
  %102 = ptrtoint ptr %99 to i64
  %103 = sub i64 %101, %102
  %104 = icmp sgt i64 %103, 8
  br i1 %104, label %105, label %106, !prof !45

105:                                              ; preds = %94
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %95, ptr align 8 %99, i64 %103, i1 false)
  br label %110

106:                                              ; preds = %94
  %107 = icmp eq i64 %103, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = load double, ptr %99, align 8, !tbaa !33
  store double %109, ptr %95, align 8, !tbaa !33
  br label %110

110:                                              ; preds = %108, %106, %105
  %111 = ashr exact i64 %103, 3
  %112 = getelementptr inbounds double, ptr %95, i64 %111
  store ptr %112, ptr %96, align 8, !tbaa !38
  ret void

113:                                              ; preds = %19, %17
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %120

115:                                              ; preds = %92, %90
  %116 = landingpad { ptr, i32 }
          cleanup
  %117 = load ptr, ptr %13, align 8, !tbaa !31
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  tail call void @_ZdlPv(ptr noundef nonnull %117) #23
  br label %120

120:                                              ; preds = %119, %115, %113
  %121 = phi { ptr, i32 } [ %114, %113 ], [ %116, %115 ], [ %116, %119 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %122 unwind label %123

122:                                              ; preds = %120
  resume { ptr, i32 } %121

123:                                              ; preds = %120
  %124 = landingpad { ptr, i32 }
          catch ptr null
  %125 = extractvalue { ptr, i32 } %124, 0
  tail call void @__clang_call_terminate(ptr %125) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EEC5ERKSt6vectorINS_5PointILi1EEESaIS4_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !35
  %6 = load ptr, ptr %1, align 8, !tbaa !31
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  store i32 %11, ptr %3, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %13 = icmp eq ptr %5, %6
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, 9223372036854775800
  br i1 %15, label %16, label %18, !prof !39

16:                                               ; preds = %14
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %17 unwind label %131

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %14
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %20 unwind label %131

20:                                               ; preds = %18, %2
  %21 = phi ptr [ null, %2 ], [ %19, %18 ]
  store ptr %21, ptr %12, align 8, !tbaa !31
  %22 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !35
  %23 = getelementptr inbounds %"class.dealii::Point", ptr %21, i64 %10
  %24 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !32
  %25 = load ptr, ptr %1, align 8, !tbaa !40
  %26 = load ptr, ptr %4, align 8, !tbaa !40
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %76, label %28

28:                                               ; preds = %20
  %29 = ptrtoint ptr %25 to i64
  %30 = ptrtoint ptr %21 to i64
  %31 = ptrtoint ptr %26 to i64
  %32 = add i64 %31, -8
  %33 = sub i64 %32, %29
  %34 = lshr i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = icmp ult i64 %33, 120
  %37 = sub i64 %30, %29
  %38 = icmp ult i64 %37, 128
  %39 = or i1 %36, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %28
  %41 = and i64 %35, 4611686018427387888
  %42 = shl i64 %41, 3
  %43 = getelementptr i8, ptr %21, i64 %42
  %44 = shl i64 %41, 3
  %45 = getelementptr i8, ptr %25, i64 %44
  br label %46

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %62, %46 ]
  %48 = shl i64 %47, 3
  %49 = getelementptr i8, ptr %21, i64 %48
  %50 = shl i64 %47, 3
  %51 = getelementptr i8, ptr %25, i64 %50
  %52 = load <4 x double>, ptr %51, align 8, !tbaa !33
  %53 = getelementptr double, ptr %51, i64 4
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !33
  %55 = getelementptr double, ptr %51, i64 8
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !33
  %57 = getelementptr double, ptr %51, i64 12
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !33
  store <4 x double> %52, ptr %49, align 8, !tbaa !33
  %59 = getelementptr double, ptr %49, i64 4
  store <4 x double> %54, ptr %59, align 8, !tbaa !33
  %60 = getelementptr double, ptr %49, i64 8
  store <4 x double> %56, ptr %60, align 8, !tbaa !33
  %61 = getelementptr double, ptr %49, i64 12
  store <4 x double> %58, ptr %61, align 8, !tbaa !33
  %62 = add nuw i64 %47, 16
  %63 = icmp eq i64 %62, %41
  br i1 %63, label %64, label %46, !llvm.loop !48

64:                                               ; preds = %46
  %65 = icmp eq i64 %35, %41
  br i1 %65, label %76, label %66

66:                                               ; preds = %28, %64
  %67 = phi ptr [ %21, %28 ], [ %43, %64 ]
  %68 = phi ptr [ %25, %28 ], [ %45, %64 ]
  br label %69

69:                                               ; preds = %66, %69
  %70 = phi ptr [ %74, %69 ], [ %67, %66 ]
  %71 = phi ptr [ %73, %69 ], [ %68, %66 ]
  %72 = load double, ptr %71, align 8, !tbaa !33
  store double %72, ptr %70, align 8, !tbaa !33
  %73 = getelementptr inbounds %"class.dealii::Point", ptr %71, i64 1
  %74 = getelementptr inbounds %"class.dealii::Point", ptr %70, i64 1
  %75 = icmp eq ptr %73, %26
  br i1 %75, label %76, label %69, !llvm.loop !49

76:                                               ; preds = %69, %64, %20
  %77 = phi ptr [ %21, %20 ], [ %43, %64 ], [ %74, %69 ]
  store ptr %77, ptr %22, align 8, !tbaa !35
  %78 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %79 = load ptr, ptr %4, align 8, !tbaa !35
  %80 = ptrtoint ptr %79 to i64
  %81 = ptrtoint ptr %25 to i64
  %82 = sub i64 %80, %81
  %83 = ashr i64 %82, 3
  %84 = tail call double @strtod(ptr nocapture noundef nonnull @.str, ptr noundef null) #25
  %85 = icmp ugt i64 %82, 9223372036854775800
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.2) #26
          to label %87 unwind label %133

87:                                               ; preds = %86
  unreachable

88:                                               ; preds = %76
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %78, i8 0, i64 24, i1 false)
  %89 = icmp eq ptr %79, %25
  br i1 %89, label %128, label %90

90:                                               ; preds = %88
  %91 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %82) #22
          to label %92 unwind label %133

92:                                               ; preds = %90
  store ptr %91, ptr %78, align 8, !tbaa !36
  %93 = getelementptr inbounds double, ptr %91, i64 %83
  %94 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %93, ptr %94, align 8, !tbaa !37
  %95 = add i64 %82, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = icmp ult i64 %95, 120
  br i1 %98, label %122, label %99

99:                                               ; preds = %92
  %100 = and i64 %97, 4611686018427387888
  %101 = shl i64 %100, 3
  %102 = getelementptr i8, ptr %91, i64 %101
  %103 = insertelement <4 x double> poison, double %84, i64 0
  %104 = shufflevector <4 x double> %103, <4 x double> poison, <4 x i32> zeroinitializer
  %105 = insertelement <4 x double> poison, double %84, i64 0
  %106 = shufflevector <4 x double> %105, <4 x double> poison, <4 x i32> zeroinitializer
  %107 = insertelement <4 x double> poison, double %84, i64 0
  %108 = shufflevector <4 x double> %107, <4 x double> poison, <4 x i32> zeroinitializer
  %109 = insertelement <4 x double> poison, double %84, i64 0
  %110 = shufflevector <4 x double> %109, <4 x double> poison, <4 x i32> zeroinitializer
  br label %111

111:                                              ; preds = %111, %99
  %112 = phi i64 [ 0, %99 ], [ %118, %111 ]
  %113 = shl i64 %112, 3
  %114 = getelementptr i8, ptr %91, i64 %113
  store <4 x double> %104, ptr %114, align 8, !tbaa !33
  %115 = getelementptr double, ptr %114, i64 4
  store <4 x double> %106, ptr %115, align 8, !tbaa !33
  %116 = getelementptr double, ptr %114, i64 8
  store <4 x double> %108, ptr %116, align 8, !tbaa !33
  %117 = getelementptr double, ptr %114, i64 12
  store <4 x double> %110, ptr %117, align 8, !tbaa !33
  %118 = add nuw i64 %112, 16
  %119 = icmp eq i64 %118, %100
  br i1 %119, label %120, label %111, !llvm.loop !50

120:                                              ; preds = %111
  %121 = icmp eq i64 %97, %100
  br i1 %121, label %128, label %122

122:                                              ; preds = %92, %120
  %123 = phi ptr [ %91, %92 ], [ %102, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi ptr [ %126, %124 ], [ %123, %122 ]
  store double %84, ptr %125, align 8, !tbaa !33
  %126 = getelementptr inbounds double, ptr %125, i64 1
  %127 = icmp eq ptr %126, %93
  br i1 %127, label %128, label %124, !llvm.loop !51

128:                                              ; preds = %124, %120, %88
  %129 = phi ptr [ null, %88 ], [ %93, %120 ], [ %93, %124 ]
  %130 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %129, ptr %130, align 8, !tbaa !38
  ret void

131:                                              ; preds = %18, %16
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %138

133:                                              ; preds = %90, %86
  %134 = landingpad { ptr, i32 }
          cleanup
  %135 = load ptr, ptr %12, align 8, !tbaa !31
  %136 = icmp eq ptr %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %133
  tail call void @_ZdlPv(ptr noundef nonnull %135) #23
  br label %138

138:                                              ; preds = %137, %133, %131
  %139 = phi { ptr, i32 } [ %132, %131 ], [ %134, %133 ], [ %134, %137 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %140 unwind label %141

140:                                              ; preds = %138
  resume { ptr, i32 } %139

141:                                              ; preds = %138
  %142 = landingpad { ptr, i32 }
          catch ptr null
  %143 = extractvalue { ptr, i32 } %142, 0
  tail call void @__clang_call_terminate(ptr %143) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKNS_5PointILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EEC5ERKNS_5PointILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 1, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %5 = invoke noalias noundef nonnull dereferenceable(8) ptr @_Znwm(i64 noundef 8) #22
          to label %6 unwind label %17

6:                                                ; preds = %2
  store ptr %5, ptr %4, align 8, !tbaa !31
  %7 = getelementptr inbounds %"class.dealii::Point", ptr %5, i64 1
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %7, ptr %8, align 8, !tbaa !32
  %9 = load double, ptr %1, align 8, !tbaa !33
  store double %9, ptr %5, align 8, !tbaa !33
  %10 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %7, ptr %10, align 8, !tbaa !35
  %11 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  %12 = invoke noalias noundef nonnull dereferenceable(8) ptr @_Znwm(i64 noundef 8) #22
          to label %13 unwind label %19

13:                                               ; preds = %6
  store ptr %12, ptr %11, align 8, !tbaa !36
  %14 = getelementptr inbounds double, ptr %12, i64 1
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %14, ptr %15, align 8, !tbaa !37
  store double 1.000000e+00, ptr %12, align 8, !tbaa !33
  %16 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %14, ptr %16, align 8, !tbaa !38
  ret void

17:                                               ; preds = %2
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %21

19:                                               ; preds = %6
  %20 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #23
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi { ptr, i32 } [ %20, %19 ], [ %18, %17 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %23 unwind label %24

23:                                               ; preds = %21
  resume { ptr, i32 } %22

24:                                               ; preds = %21
  %25 = landingpad { ptr, i32 }
          catch ptr null
  %26 = extractvalue { ptr, i32 } %25, 0
  tail call void @__clang_call_terminate(ptr %26) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(128) ptr @_ZN6dealii10QuadratureILi1EEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %5 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIdSaIdEEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %3)
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %8 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi1EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6)
  %9 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = load ptr, ptr %3, align 8, !tbaa !36
  %12 = ptrtoint ptr %10 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 %16, ptr %17, align 8, !tbaa !8
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIdSaIdEEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !40
  %7 = load ptr, ptr %1, align 8, !tbaa !40
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !37
  %14 = load ptr, ptr %0, align 8, !tbaa !40
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %4
  %21 = icmp ugt i64 %10, 9223372036854775800
  br i1 %21, label %22, label %23, !prof !39

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #26
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
  %25 = icmp ugt i64 %10, 8
  br i1 %25, label %26, label %27, !prof !45

26:                                               ; preds = %23
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %24, ptr align 8 %7, i64 %10, i1 false)
  br label %31

27:                                               ; preds = %23
  %28 = icmp eq i64 %10, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = load double, ptr %7, align 8, !tbaa !33
  store double %30, ptr %24, align 8, !tbaa !33
  br label %31

31:                                               ; preds = %26, %27, %29
  %32 = icmp eq ptr %14, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %34

34:                                               ; preds = %31, %33
  store ptr %24, ptr %0, align 8, !tbaa !36
  %35 = getelementptr inbounds double, ptr %24, i64 %11
  store ptr %35, ptr %12, align 8, !tbaa !37
  br label %78

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !38
  %39 = ptrtoint ptr %38 to i64
  %40 = sub i64 %39, %16
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, %11
  br i1 %42, label %50, label %43

43:                                               ; preds = %36
  %44 = icmp sgt i64 %10, 8
  br i1 %44, label %45, label %46, !prof !45

45:                                               ; preds = %43
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %14, ptr align 8 %7, i64 %10, i1 false)
  br label %78

46:                                               ; preds = %43
  %47 = icmp eq i64 %10, 8
  br i1 %47, label %48, label %78

48:                                               ; preds = %46
  %49 = load double, ptr %7, align 8, !tbaa !33
  store double %49, ptr %14, align 8, !tbaa !33
  br label %78

50:                                               ; preds = %36
  %51 = icmp sgt i64 %40, 8
  br i1 %51, label %52, label %55, !prof !45

52:                                               ; preds = %50
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %14, ptr align 8 %7, i64 %40, i1 false)
  %53 = load ptr, ptr %37, align 8, !tbaa !38
  %54 = ptrtoint ptr %53 to i64
  br label %59

55:                                               ; preds = %50
  %56 = icmp eq i64 %40, 8
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = load double, ptr %7, align 8, !tbaa !33
  store double %58, ptr %14, align 8, !tbaa !33
  br label %59

59:                                               ; preds = %52, %55, %57
  %60 = phi i64 [ %54, %52 ], [ %39, %55 ], [ %39, %57 ]
  %61 = phi ptr [ %53, %52 ], [ %38, %55 ], [ %38, %57 ]
  %62 = load ptr, ptr %1, align 8, !tbaa !36
  %63 = load ptr, ptr %0, align 8, !tbaa !36
  %64 = ptrtoint ptr %63 to i64
  %65 = sub i64 %60, %64
  %66 = ashr exact i64 %65, 3
  %67 = getelementptr inbounds double, ptr %62, i64 %66
  %68 = load ptr, ptr %5, align 8, !tbaa !38
  %69 = ptrtoint ptr %68 to i64
  %70 = ptrtoint ptr %67 to i64
  %71 = sub i64 %69, %70
  %72 = icmp sgt i64 %71, 8
  br i1 %72, label %73, label %74, !prof !45

73:                                               ; preds = %59
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %61, ptr align 8 %67, i64 %71, i1 false)
  br label %78

74:                                               ; preds = %59
  %75 = icmp eq i64 %71, 8
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = load double, ptr %67, align 8, !tbaa !33
  store double %77, ptr %61, align 8, !tbaa !33
  br label %78

78:                                               ; preds = %76, %74, %73, %48, %46, %45, %34
  %79 = load ptr, ptr %0, align 8, !tbaa !36
  %80 = getelementptr inbounds double, ptr %79, i64 %11
  %81 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %80, ptr %81, align 8, !tbaa !38
  br label %82

82:                                               ; preds = %78, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi1EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %201, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !40
  %7 = load ptr, ptr %1, align 8, !tbaa !40
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = load ptr, ptr %0, align 8, !tbaa !40
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %4
  %21 = icmp ugt i64 %10, 9223372036854775800
  br i1 %21, label %22, label %23, !prof !39

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #26
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = add i64 %8, -8
  %28 = sub i64 %27, %9
  %29 = and i64 %28, -8
  %30 = add i64 %29, 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %24, ptr align 8 %7, i64 %30, i1 false), !tbaa !33
  br label %31

31:                                               ; preds = %23, %26
  %32 = icmp eq ptr %14, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %34

34:                                               ; preds = %31, %33
  store ptr %24, ptr %0, align 8, !tbaa !31
  %35 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %11
  store ptr %35, ptr %12, align 8, !tbaa !32
  br label %197

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !35
  %39 = ptrtoint ptr %38 to i64
  %40 = sub i64 %39, %16
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, %11
  br i1 %42, label %95, label %43

43:                                               ; preds = %36
  %44 = icmp sgt i64 %10, 0
  br i1 %44, label %45, label %197

45:                                               ; preds = %43
  %46 = lshr i64 %10, 3
  %47 = add nuw nsw i64 %46, 1
  %48 = icmp ugt i64 %10, 7
  %49 = sext i1 %48 to i64
  %50 = add nsw i64 %47, %49
  %51 = icmp ult i64 %50, 16
  %52 = sub i64 %16, %9
  %53 = icmp ult i64 %52, 128
  %54 = or i1 %51, %53
  br i1 %54, label %82, label %55

55:                                               ; preds = %45
  %56 = and i64 %50, -16
  %57 = sub i64 %46, %56
  %58 = shl i64 %56, 3
  %59 = getelementptr i8, ptr %14, i64 %58
  %60 = shl i64 %56, 3
  %61 = getelementptr i8, ptr %7, i64 %60
  br label %62

62:                                               ; preds = %62, %55
  %63 = phi i64 [ 0, %55 ], [ %78, %62 ]
  %64 = shl i64 %63, 3
  %65 = getelementptr i8, ptr %14, i64 %64
  %66 = shl i64 %63, 3
  %67 = getelementptr i8, ptr %7, i64 %66
  %68 = load <4 x double>, ptr %67, align 8, !tbaa !33
  %69 = getelementptr double, ptr %67, i64 4
  %70 = load <4 x double>, ptr %69, align 8, !tbaa !33
  %71 = getelementptr double, ptr %67, i64 8
  %72 = load <4 x double>, ptr %71, align 8, !tbaa !33
  %73 = getelementptr double, ptr %67, i64 12
  %74 = load <4 x double>, ptr %73, align 8, !tbaa !33
  store <4 x double> %68, ptr %65, align 8, !tbaa !33
  %75 = getelementptr double, ptr %65, i64 4
  store <4 x double> %70, ptr %75, align 8, !tbaa !33
  %76 = getelementptr double, ptr %65, i64 8
  store <4 x double> %72, ptr %76, align 8, !tbaa !33
  %77 = getelementptr double, ptr %65, i64 12
  store <4 x double> %74, ptr %77, align 8, !tbaa !33
  %78 = add nuw i64 %63, 16
  %79 = icmp eq i64 %78, %56
  br i1 %79, label %80, label %62, !llvm.loop !52

80:                                               ; preds = %62
  %81 = icmp eq i64 %50, %56
  br i1 %81, label %197, label %82

82:                                               ; preds = %45, %80
  %83 = phi i64 [ %46, %45 ], [ %57, %80 ]
  %84 = phi ptr [ %14, %45 ], [ %59, %80 ]
  %85 = phi ptr [ %7, %45 ], [ %61, %80 ]
  br label %86

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %93, %86 ], [ %83, %82 ]
  %88 = phi ptr [ %92, %86 ], [ %84, %82 ]
  %89 = phi ptr [ %91, %86 ], [ %85, %82 ]
  %90 = load double, ptr %89, align 8, !tbaa !33
  store double %90, ptr %88, align 8, !tbaa !33
  %91 = getelementptr inbounds %"class.dealii::Point", ptr %89, i64 1
  %92 = getelementptr inbounds %"class.dealii::Point", ptr %88, i64 1
  %93 = add nsw i64 %87, -1
  %94 = icmp ugt i64 %87, 1
  br i1 %94, label %86, label %197, !llvm.loop !53

95:                                               ; preds = %36
  %96 = getelementptr %"class.dealii::Point", ptr %7, i64 %41
  %97 = icmp sgt i64 %40, 0
  br i1 %97, label %98, label %148

98:                                               ; preds = %95
  %99 = lshr i64 %40, 3
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp ugt i64 %40, 7
  %102 = sext i1 %101 to i64
  %103 = add nsw i64 %100, %102
  %104 = icmp ult i64 %103, 16
  %105 = sub i64 %16, %9
  %106 = icmp ult i64 %105, 128
  %107 = or i1 %104, %106
  br i1 %107, label %135, label %108

108:                                              ; preds = %98
  %109 = and i64 %103, -16
  %110 = sub i64 %99, %109
  %111 = shl i64 %109, 3
  %112 = getelementptr i8, ptr %14, i64 %111
  %113 = shl i64 %109, 3
  %114 = getelementptr i8, ptr %7, i64 %113
  br label %115

115:                                              ; preds = %115, %108
  %116 = phi i64 [ 0, %108 ], [ %131, %115 ]
  %117 = shl i64 %116, 3
  %118 = getelementptr i8, ptr %14, i64 %117
  %119 = shl i64 %116, 3
  %120 = getelementptr i8, ptr %7, i64 %119
  %121 = load <4 x double>, ptr %120, align 8, !tbaa !33
  %122 = getelementptr double, ptr %120, i64 4
  %123 = load <4 x double>, ptr %122, align 8, !tbaa !33
  %124 = getelementptr double, ptr %120, i64 8
  %125 = load <4 x double>, ptr %124, align 8, !tbaa !33
  %126 = getelementptr double, ptr %120, i64 12
  %127 = load <4 x double>, ptr %126, align 8, !tbaa !33
  store <4 x double> %121, ptr %118, align 8, !tbaa !33
  %128 = getelementptr double, ptr %118, i64 4
  store <4 x double> %123, ptr %128, align 8, !tbaa !33
  %129 = getelementptr double, ptr %118, i64 8
  store <4 x double> %125, ptr %129, align 8, !tbaa !33
  %130 = getelementptr double, ptr %118, i64 12
  store <4 x double> %127, ptr %130, align 8, !tbaa !33
  %131 = add nuw i64 %116, 16
  %132 = icmp eq i64 %131, %109
  br i1 %132, label %133, label %115, !llvm.loop !54

133:                                              ; preds = %115
  %134 = icmp eq i64 %103, %109
  br i1 %134, label %148, label %135

135:                                              ; preds = %98, %133
  %136 = phi i64 [ %99, %98 ], [ %110, %133 ]
  %137 = phi ptr [ %14, %98 ], [ %112, %133 ]
  %138 = phi ptr [ %7, %98 ], [ %114, %133 ]
  br label %139

139:                                              ; preds = %135, %139
  %140 = phi i64 [ %146, %139 ], [ %136, %135 ]
  %141 = phi ptr [ %145, %139 ], [ %137, %135 ]
  %142 = phi ptr [ %144, %139 ], [ %138, %135 ]
  %143 = load double, ptr %142, align 8, !tbaa !33
  store double %143, ptr %141, align 8, !tbaa !33
  %144 = getelementptr inbounds %"class.dealii::Point", ptr %142, i64 1
  %145 = getelementptr inbounds %"class.dealii::Point", ptr %141, i64 1
  %146 = add nsw i64 %140, -1
  %147 = icmp ugt i64 %140, 1
  br i1 %147, label %139, label %148, !llvm.loop !55

148:                                              ; preds = %139, %133, %95
  %149 = icmp eq ptr %96, %6
  br i1 %149, label %197, label %150

150:                                              ; preds = %148
  %151 = add i64 %8, -8
  %152 = add i64 %40, %9
  %153 = sub i64 %151, %152
  %154 = lshr i64 %153, 3
  %155 = add nuw nsw i64 %154, 1
  %156 = icmp ult i64 %153, 120
  br i1 %156, label %187, label %157

157:                                              ; preds = %150
  %158 = add i64 %40, %9
  %159 = sub i64 %39, %158
  %160 = icmp ult i64 %159, 128
  br i1 %160, label %187, label %161

161:                                              ; preds = %157
  %162 = and i64 %155, 4611686018427387888
  %163 = shl i64 %162, 3
  %164 = getelementptr i8, ptr %38, i64 %163
  %165 = shl i64 %162, 3
  %166 = getelementptr i8, ptr %96, i64 %165
  br label %167

167:                                              ; preds = %167, %161
  %168 = phi i64 [ 0, %161 ], [ %183, %167 ]
  %169 = shl i64 %168, 3
  %170 = getelementptr i8, ptr %38, i64 %169
  %171 = shl i64 %168, 3
  %172 = getelementptr i8, ptr %96, i64 %171
  %173 = load <4 x double>, ptr %172, align 8, !tbaa !33
  %174 = getelementptr double, ptr %172, i64 4
  %175 = load <4 x double>, ptr %174, align 8, !tbaa !33
  %176 = getelementptr double, ptr %172, i64 8
  %177 = load <4 x double>, ptr %176, align 8, !tbaa !33
  %178 = getelementptr double, ptr %172, i64 12
  %179 = load <4 x double>, ptr %178, align 8, !tbaa !33
  store <4 x double> %173, ptr %170, align 8, !tbaa !33
  %180 = getelementptr double, ptr %170, i64 4
  store <4 x double> %175, ptr %180, align 8, !tbaa !33
  %181 = getelementptr double, ptr %170, i64 8
  store <4 x double> %177, ptr %181, align 8, !tbaa !33
  %182 = getelementptr double, ptr %170, i64 12
  store <4 x double> %179, ptr %182, align 8, !tbaa !33
  %183 = add nuw i64 %168, 16
  %184 = icmp eq i64 %183, %162
  br i1 %184, label %185, label %167, !llvm.loop !56

185:                                              ; preds = %167
  %186 = icmp eq i64 %155, %162
  br i1 %186, label %197, label %187

187:                                              ; preds = %157, %150, %185
  %188 = phi ptr [ %38, %157 ], [ %38, %150 ], [ %164, %185 ]
  %189 = phi ptr [ %96, %157 ], [ %96, %150 ], [ %166, %185 ]
  br label %190

190:                                              ; preds = %187, %190
  %191 = phi ptr [ %195, %190 ], [ %188, %187 ]
  %192 = phi ptr [ %194, %190 ], [ %189, %187 ]
  %193 = load double, ptr %192, align 8, !tbaa !33
  store double %193, ptr %191, align 8, !tbaa !33
  %194 = getelementptr inbounds %"class.dealii::Point", ptr %192, i64 1
  %195 = getelementptr inbounds %"class.dealii::Point", ptr %191, i64 1
  %196 = icmp eq ptr %194, %6
  br i1 %196, label %197, label %190, !llvm.loop !57

197:                                              ; preds = %86, %190, %80, %185, %43, %148, %34
  %198 = load ptr, ptr %0, align 8, !tbaa !31
  %199 = getelementptr inbounds %"class.dealii::Point", ptr %198, i64 %11
  %200 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %199, ptr %200, align 8, !tbaa !35
  br label %201

201:                                              ; preds = %197, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK6dealii10QuadratureILi1EE5pointEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !31
  %6 = getelementptr inbounds %"class.dealii::Point", ptr %5, i64 %4
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi1EE10get_pointsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii10QuadratureILi1EE6weightEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !36
  %6 = getelementptr inbounds double, ptr %5, i64 %4
  %7 = load double, ptr %6, align 8, !tbaa !33
  ret double %7
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi1EE11get_weightsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi1EE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !35
  %5 = load ptr, ptr %2, align 8, !tbaa !31
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !32
  %13 = ptrtoint ptr %12 to i64
  %14 = sub i64 %13, %7
  %15 = lshr exact i64 %14, 3
  %16 = sub nsw i64 %15, %9
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, %10
  %19 = shl i32 %18, 3
  %20 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !37
  %23 = load ptr, ptr %20, align 8, !tbaa !36
  %24 = ptrtoint ptr %22 to i64
  %25 = ptrtoint ptr %23 to i64
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, -8
  %29 = add i32 %28, 48
  %30 = add i32 %29, %19
  ret i32 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 8, !tbaa !58
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %5 = zext i32 %1 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  br label %22

8:                                                ; preds = %2
  %9 = shl nuw nsw i64 %5, 4
  %10 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %11 unwind label %25

11:                                               ; preds = %8
  store ptr %10, ptr %4, align 8, !tbaa !64
  %12 = getelementptr inbounds %"class.dealii::Point.14", ptr %10, i64 %5
  %13 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %10, i8 0, i64 %9, i1 false), !tbaa !33
  %14 = getelementptr i8, ptr %10, i64 %9
  %15 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !66
  %16 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  %17 = shl nuw nsw i64 %5, 3
  %18 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
          to label %19 unwind label %27

19:                                               ; preds = %11
  store ptr %18, ptr %16, align 8, !tbaa !36
  %20 = getelementptr inbounds double, ptr %18, i64 %5
  %21 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi ptr [ null, %7 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !38
  ret void

25:                                               ; preds = %8
  %26 = landingpad { ptr, i32 }
          cleanup
  br label %29

27:                                               ; preds = %11
  %28 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %10) #23
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi { ptr, i32 } [ %26, %25 ], [ %28, %27 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %31 unwind label %32

31:                                               ; preds = %29
  resume { ptr, i32 } %30

32:                                               ; preds = %29
  %33 = landingpad { ptr, i32 }
          catch ptr null
  %34 = extractvalue { ptr, i32 } %33, 0
  tail call void @__clang_call_terminate(ptr %34) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKNS0_ILi1EEES4_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKNS0_ILi1EEES4_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = load ptr, ptr %14, align 8, !tbaa !36
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = mul i32 %22, %13
  store i32 %23, ptr %4, align 8, !tbaa !58
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %25 = zext i32 %23 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %24, i8 0, i64 24, i1 false)
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %24, i8 0, i64 48, i1 false)
  br label %42

28:                                               ; preds = %3
  %29 = shl nuw nsw i64 %25, 4
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #22
          to label %31 unwind label %240

31:                                               ; preds = %28
  store ptr %30, ptr %24, align 8, !tbaa !64
  %32 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %25
  %33 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %30, i8 0, i64 %29, i1 false), !tbaa !33
  %34 = getelementptr i8, ptr %30, i64 %29
  %35 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !66
  %36 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %36, i8 0, i64 24, i1 false)
  %37 = shl nuw nsw i64 %25, 3
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %37) #22
          to label %39 unwind label %242

39:                                               ; preds = %31
  store ptr %38, ptr %36, align 8, !tbaa !36
  %40 = getelementptr inbounds double, ptr %38, i64 %25
  %41 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %38, i8 0, i64 %37, i1 false), !tbaa !33
  br label %42

42:                                               ; preds = %39, %27
  %43 = phi ptr [ null, %27 ], [ %38, %39 ]
  %44 = phi ptr [ null, %27 ], [ %30, %39 ]
  %45 = phi ptr [ null, %27 ], [ %40, %39 ]
  %46 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %46, align 8, !tbaa !38
  %47 = load ptr, ptr %15, align 8, !tbaa !38
  %48 = load ptr, ptr %14, align 8, !tbaa !36
  %49 = ptrtoint ptr %47 to i64
  %50 = ptrtoint ptr %48 to i64
  %51 = sub i64 %49, %50
  %52 = lshr exact i64 %51, 3
  %53 = and i64 %51, 34359738360
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %239, label %55

55:                                               ; preds = %42
  %56 = load ptr, ptr %6, align 8, !tbaa !38
  %57 = load ptr, ptr %5, align 8, !tbaa !36
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = and i64 %60, 34359738360
  %62 = icmp eq i64 %61, 0
  %63 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8
  br i1 %62, label %239, label %67

67:                                               ; preds = %55
  %68 = lshr exact i64 %60, 3
  %69 = and i64 %52, 4294967295
  %70 = and i64 %68, 4294967295
  %71 = add nsw i64 %70, -1
  %72 = getelementptr i8, ptr %44, i64 8
  %73 = getelementptr i8, ptr %64, i64 %61
  %74 = shl nuw nsw i64 %70, 4
  %75 = getelementptr i8, ptr %44, i64 %74
  %76 = getelementptr i8, ptr %43, i64 %61
  %77 = getelementptr i8, ptr %57, i64 %61
  %78 = icmp ult i64 %70, 48
  %79 = trunc i64 %71 to i32
  %80 = icmp ugt i64 %71, 4294967295
  %81 = shl nsw i64 %71, 4
  %82 = shl nsw i64 %71, 4
  %83 = and i64 %68, 3
  %84 = sub nsw i64 %70, %83
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i64 %83, 0
  br label %87

87:                                               ; preds = %235, %67
  %88 = phi i64 [ %237, %235 ], [ 0, %67 ]
  %89 = phi i32 [ %236, %235 ], [ 0, %67 ]
  %90 = shl i64 %88, 3
  %91 = getelementptr i8, ptr %66, i64 %90
  %92 = add i64 %90, 8
  %93 = getelementptr i8, ptr %66, i64 %92
  %94 = getelementptr i8, ptr %48, i64 %90
  %95 = getelementptr i8, ptr %48, i64 %92
  %96 = getelementptr inbounds %"class.dealii::Point", ptr %66, i64 %88
  %97 = getelementptr inbounds double, ptr %48, i64 %88
  br i1 %78, label %179, label %98

98:                                               ; preds = %87
  %99 = xor i32 %89, -1
  %100 = icmp ult i32 %99, %79
  %101 = or i1 %100, %80
  %102 = zext i32 %89 to i64
  %103 = shl nuw nsw i64 %102, 4
  %104 = getelementptr i8, ptr %44, i64 %103
  %105 = getelementptr i8, ptr %104, i64 %81
  %106 = icmp ult ptr %105, %104
  %107 = getelementptr i8, ptr %72, i64 %103
  %108 = getelementptr i8, ptr %107, i64 %82
  %109 = icmp ult ptr %108, %107
  %110 = or i1 %106, %101
  %111 = or i1 %109, %110
  br i1 %111, label %179, label %112

112:                                              ; preds = %98
  %113 = zext i32 %89 to i64
  %114 = shl nuw nsw i64 %113, 4
  %115 = getelementptr i8, ptr %44, i64 %114
  %116 = getelementptr i8, ptr %75, i64 %114
  %117 = shl nuw nsw i64 %113, 3
  %118 = getelementptr i8, ptr %43, i64 %117
  %119 = getelementptr i8, ptr %76, i64 %117
  %120 = icmp ult ptr %64, %116
  %121 = icmp ult ptr %115, %73
  %122 = and i1 %120, %121
  %123 = icmp ult ptr %64, %119
  %124 = icmp ult ptr %118, %73
  %125 = and i1 %123, %124
  %126 = or i1 %122, %125
  %127 = icmp ult ptr %91, %116
  %128 = icmp ult ptr %115, %93
  %129 = and i1 %127, %128
  %130 = or i1 %126, %129
  %131 = icmp ult ptr %91, %119
  %132 = icmp ult ptr %118, %93
  %133 = and i1 %131, %132
  %134 = or i1 %130, %133
  %135 = icmp ult ptr %57, %116
  %136 = icmp ult ptr %115, %77
  %137 = and i1 %135, %136
  %138 = or i1 %134, %137
  %139 = icmp ult ptr %57, %119
  %140 = icmp ult ptr %118, %77
  %141 = and i1 %139, %140
  %142 = or i1 %138, %141
  %143 = icmp ult ptr %94, %116
  %144 = icmp ult ptr %115, %95
  %145 = and i1 %143, %144
  %146 = or i1 %142, %145
  %147 = icmp ult ptr %94, %119
  %148 = icmp ult ptr %118, %95
  %149 = and i1 %147, %148
  %150 = or i1 %146, %149
  %151 = icmp ult ptr %115, %119
  %152 = icmp ult ptr %118, %116
  %153 = and i1 %151, %152
  %154 = or i1 %150, %153
  br i1 %154, label %179, label %155

155:                                              ; preds = %112
  %156 = add i32 %89, %85
  br label %157

157:                                              ; preds = %157, %155
  %158 = phi i64 [ 0, %155 ], [ %176, %157 ]
  %159 = trunc i64 %158 to i32
  %160 = add i32 %89, %159
  %161 = getelementptr inbounds %"class.dealii::Point", ptr %64, i64 %158
  %162 = load <4 x double>, ptr %161, align 8, !tbaa !33, !alias.scope !67, !noalias !70
  %163 = zext i32 %160 to i64
  %164 = load double, ptr %96, align 8, !tbaa !33, !alias.scope !73, !noalias !70
  %165 = insertelement <4 x double> poison, double %164, i64 0
  %166 = shufflevector <4 x double> %165, <4 x double> poison, <4 x i32> zeroinitializer
  %167 = getelementptr inbounds %"class.dealii::Point.14", ptr %44, i64 %163
  %168 = shufflevector <4 x double> %162, <4 x double> %166, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %168, ptr %167, align 8, !tbaa !33
  %169 = getelementptr inbounds double, ptr %57, i64 %158
  %170 = load <4 x double>, ptr %169, align 8, !tbaa !33, !alias.scope !75, !noalias !70
  %171 = load double, ptr %97, align 8, !tbaa !33, !alias.scope !77, !noalias !70
  %172 = insertelement <4 x double> poison, double %171, i64 0
  %173 = shufflevector <4 x double> %172, <4 x double> poison, <4 x i32> zeroinitializer
  %174 = fmul <4 x double> %170, %173
  %175 = getelementptr inbounds double, ptr %43, i64 %163
  store <4 x double> %174, ptr %175, align 8, !tbaa !33, !alias.scope !79
  %176 = add nuw i64 %158, 4
  %177 = icmp eq i64 %176, %84
  br i1 %177, label %178, label %157, !llvm.loop !80

178:                                              ; preds = %157
  br i1 %86, label %235, label %179

179:                                              ; preds = %112, %98, %87, %178
  %180 = phi i64 [ 0, %112 ], [ 0, %98 ], [ 0, %87 ], [ %84, %178 ]
  %181 = phi i32 [ %89, %112 ], [ %89, %98 ], [ %89, %87 ], [ %156, %178 ]
  %182 = sub nsw i64 %68, %180
  %183 = add nsw i64 %180, 1
  %184 = and i64 %182, 1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %200, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.dealii::Point", ptr %64, i64 %180
  %188 = load double, ptr %187, align 8, !tbaa !33
  %189 = zext i32 %181 to i64
  %190 = getelementptr inbounds %"class.dealii::Point.14", ptr %44, i64 %189
  store double %188, ptr %190, align 8, !tbaa !33
  %191 = load double, ptr %96, align 8, !tbaa !33
  %192 = getelementptr inbounds [2 x double], ptr %190, i64 0, i64 1
  store double %191, ptr %192, align 8, !tbaa !33
  %193 = getelementptr inbounds double, ptr %57, i64 %180
  %194 = load double, ptr %193, align 8, !tbaa !33
  %195 = load double, ptr %97, align 8, !tbaa !33
  %196 = fmul double %194, %195
  %197 = getelementptr inbounds double, ptr %43, i64 %189
  store double %196, ptr %197, align 8, !tbaa !33
  %198 = add i32 %181, 1
  %199 = add nuw nsw i64 %180, 1
  br label %200

200:                                              ; preds = %186, %179
  %201 = phi i32 [ undef, %179 ], [ %198, %186 ]
  %202 = phi i64 [ %180, %179 ], [ %199, %186 ]
  %203 = phi i32 [ %181, %179 ], [ %198, %186 ]
  %204 = icmp eq i64 %70, %183
  br i1 %204, label %235, label %205

205:                                              ; preds = %200, %205
  %206 = phi i64 [ %233, %205 ], [ %202, %200 ]
  %207 = phi i32 [ %232, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.dealii::Point", ptr %64, i64 %206
  %209 = load double, ptr %208, align 8, !tbaa !33
  %210 = zext i32 %207 to i64
  %211 = getelementptr inbounds %"class.dealii::Point.14", ptr %44, i64 %210
  store double %209, ptr %211, align 8, !tbaa !33
  %212 = load double, ptr %96, align 8, !tbaa !33
  %213 = getelementptr inbounds [2 x double], ptr %211, i64 0, i64 1
  store double %212, ptr %213, align 8, !tbaa !33
  %214 = getelementptr inbounds double, ptr %57, i64 %206
  %215 = load double, ptr %214, align 8, !tbaa !33
  %216 = load double, ptr %97, align 8, !tbaa !33
  %217 = fmul double %215, %216
  %218 = getelementptr inbounds double, ptr %43, i64 %210
  store double %217, ptr %218, align 8, !tbaa !33
  %219 = add i32 %207, 1
  %220 = add nuw nsw i64 %206, 1
  %221 = getelementptr inbounds %"class.dealii::Point", ptr %64, i64 %220
  %222 = load double, ptr %221, align 8, !tbaa !33
  %223 = zext i32 %219 to i64
  %224 = getelementptr inbounds %"class.dealii::Point.14", ptr %44, i64 %223
  store double %222, ptr %224, align 8, !tbaa !33
  %225 = load double, ptr %96, align 8, !tbaa !33
  %226 = getelementptr inbounds [2 x double], ptr %224, i64 0, i64 1
  store double %225, ptr %226, align 8, !tbaa !33
  %227 = getelementptr inbounds double, ptr %57, i64 %220
  %228 = load double, ptr %227, align 8, !tbaa !33
  %229 = load double, ptr %97, align 8, !tbaa !33
  %230 = fmul double %228, %229
  %231 = getelementptr inbounds double, ptr %43, i64 %223
  store double %230, ptr %231, align 8, !tbaa !33
  %232 = add i32 %207, 2
  %233 = add nuw nsw i64 %206, 2
  %234 = icmp eq i64 %233, %70
  br i1 %234, label %235, label %205, !llvm.loop !81

235:                                              ; preds = %200, %205, %178
  %236 = phi i32 [ %156, %178 ], [ %201, %200 ], [ %232, %205 ]
  %237 = add nuw nsw i64 %88, 1
  %238 = icmp eq i64 %237, %69
  br i1 %238, label %239, label %87

239:                                              ; preds = %235, %55, %42
  ret void

240:                                              ; preds = %28
  %241 = landingpad { ptr, i32 }
          cleanup
  br label %244

242:                                              ; preds = %31
  %243 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %244

244:                                              ; preds = %242, %240
  %245 = phi { ptr, i32 } [ %241, %240 ], [ %243, %242 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %246 unwind label %247

246:                                              ; preds = %244
  resume { ptr, i32 } %245

247:                                              ; preds = %244
  %248 = landingpad { ptr, i32 }
          catch ptr null
  %249 = extractvalue { ptr, i32 } %248, 0
  tail call void @__clang_call_terminate(ptr %249) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKNS0_ILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKNS0_ILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = mul i32 %12, %12
  store i32 %13, ptr %3, align 8, !tbaa !58
  %14 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %15 = zext i32 %13 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %14, i8 0, i64 48, i1 false)
  br label %32

18:                                               ; preds = %2
  %19 = shl nuw nsw i64 %15, 4
  %20 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
          to label %21 unwind label %182

21:                                               ; preds = %18
  store ptr %20, ptr %14, align 8, !tbaa !64
  %22 = getelementptr inbounds %"class.dealii::Point.14", ptr %20, i64 %15
  %23 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %22, ptr %23, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %24 = getelementptr i8, ptr %20, i64 %19
  %25 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !66
  %26 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %26, i8 0, i64 24, i1 false)
  %27 = shl nuw nsw i64 %15, 3
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %27) #22
          to label %29 unwind label %184

29:                                               ; preds = %21
  store ptr %28, ptr %26, align 8, !tbaa !36
  %30 = getelementptr inbounds double, ptr %28, i64 %15
  %31 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %28, i8 0, i64 %27, i1 false), !tbaa !33
  br label %32

32:                                               ; preds = %29, %17
  %33 = phi ptr [ null, %17 ], [ %28, %29 ]
  %34 = phi ptr [ null, %17 ], [ %20, %29 ]
  %35 = phi ptr [ null, %17 ], [ %30, %29 ]
  %36 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %35, ptr %36, align 8, !tbaa !38
  %37 = load ptr, ptr %5, align 8, !tbaa !38
  %38 = load ptr, ptr %4, align 8, !tbaa !36
  %39 = ptrtoint ptr %37 to i64
  %40 = ptrtoint ptr %38 to i64
  %41 = sub i64 %39, %40
  %42 = and i64 %41, 34359738360
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8
  br i1 %43, label %181, label %46

46:                                               ; preds = %32
  %47 = lshr exact i64 %41, 3
  %48 = and i64 %47, 4294967295
  %49 = add nsw i64 %48, -1
  %50 = getelementptr i8, ptr %34, i64 8
  %51 = shl nuw nsw i64 %48, 4
  %52 = getelementptr i8, ptr %34, i64 %51
  %53 = getelementptr i8, ptr %33, i64 %42
  %54 = getelementptr i8, ptr %45, i64 %42
  %55 = getelementptr i8, ptr %38, i64 %42
  %56 = icmp ult i64 %48, 44
  %57 = trunc i64 %49 to i32
  %58 = icmp ugt i64 %49, 4294967295
  %59 = shl nsw i64 %49, 4
  %60 = shl nsw i64 %49, 4
  %61 = and i64 %47, 3
  %62 = sub nsw i64 %48, %61
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i64 %61, 0
  br label %86

65:                                               ; preds = %69, %177
  %66 = phi i32 [ %155, %177 ], [ %83, %69 ]
  %67 = add nuw nsw i64 %87, 1
  %68 = icmp eq i64 %67, %48
  br i1 %68, label %181, label %86

69:                                               ; preds = %178, %69
  %70 = phi i64 [ %84, %69 ], [ %179, %178 ]
  %71 = phi i32 [ %83, %69 ], [ %180, %178 ]
  %72 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %70
  %73 = load double, ptr %72, align 8, !tbaa !33
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %74
  store double %73, ptr %75, align 8, !tbaa !33
  %76 = load double, ptr %95, align 8, !tbaa !33
  %77 = getelementptr inbounds [2 x double], ptr %75, i64 0, i64 1
  store double %76, ptr %77, align 8, !tbaa !33
  %78 = getelementptr inbounds double, ptr %38, i64 %70
  %79 = load double, ptr %78, align 8, !tbaa !33
  %80 = getelementptr inbounds double, ptr %33, i64 %74
  store double %79, ptr %80, align 8, !tbaa !33
  %81 = load double, ptr %96, align 8, !tbaa !33
  %82 = fmul double %79, %81
  store double %82, ptr %80, align 8, !tbaa !33
  %83 = add i32 %71, 1
  %84 = add nuw nsw i64 %70, 1
  %85 = icmp eq i64 %84, %48
  br i1 %85, label %65, label %69, !llvm.loop !82

86:                                               ; preds = %46, %65
  %87 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %88 = phi i32 [ 0, %46 ], [ %66, %65 ]
  %89 = shl i64 %87, 3
  %90 = getelementptr i8, ptr %45, i64 %89
  %91 = add i64 %89, 8
  %92 = getelementptr i8, ptr %45, i64 %91
  %93 = getelementptr i8, ptr %38, i64 %89
  %94 = getelementptr i8, ptr %38, i64 %91
  %95 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %87
  %96 = getelementptr inbounds double, ptr %38, i64 %87
  br i1 %56, label %178, label %97

97:                                               ; preds = %86
  %98 = xor i32 %88, -1
  %99 = icmp ult i32 %98, %57
  %100 = or i1 %99, %58
  %101 = zext i32 %88 to i64
  %102 = shl nuw nsw i64 %101, 4
  %103 = getelementptr i8, ptr %34, i64 %102
  %104 = getelementptr i8, ptr %103, i64 %59
  %105 = icmp ult ptr %104, %103
  %106 = getelementptr i8, ptr %50, i64 %102
  %107 = getelementptr i8, ptr %106, i64 %60
  %108 = icmp ult ptr %107, %106
  %109 = or i1 %105, %100
  %110 = or i1 %108, %109
  br i1 %110, label %178, label %111

111:                                              ; preds = %97
  %112 = zext i32 %88 to i64
  %113 = shl nuw nsw i64 %112, 4
  %114 = getelementptr i8, ptr %34, i64 %113
  %115 = getelementptr i8, ptr %52, i64 %113
  %116 = shl nuw nsw i64 %112, 3
  %117 = getelementptr i8, ptr %33, i64 %116
  %118 = getelementptr i8, ptr %53, i64 %116
  %119 = icmp ult ptr %90, %115
  %120 = icmp ult ptr %114, %92
  %121 = and i1 %119, %120
  %122 = icmp ult ptr %90, %118
  %123 = icmp ult ptr %117, %92
  %124 = and i1 %122, %123
  %125 = or i1 %121, %124
  %126 = icmp ult ptr %45, %115
  %127 = icmp ult ptr %114, %54
  %128 = and i1 %126, %127
  %129 = or i1 %125, %128
  %130 = icmp ult ptr %45, %118
  %131 = icmp ult ptr %117, %54
  %132 = and i1 %130, %131
  %133 = or i1 %129, %132
  %134 = icmp ult ptr %93, %115
  %135 = icmp ult ptr %114, %94
  %136 = and i1 %134, %135
  %137 = or i1 %133, %136
  %138 = icmp ult ptr %93, %118
  %139 = icmp ult ptr %117, %94
  %140 = and i1 %138, %139
  %141 = or i1 %137, %140
  %142 = icmp ult ptr %38, %115
  %143 = icmp ult ptr %114, %55
  %144 = and i1 %142, %143
  %145 = or i1 %141, %144
  %146 = icmp ult ptr %38, %118
  %147 = icmp ult ptr %117, %55
  %148 = and i1 %146, %147
  %149 = or i1 %145, %148
  %150 = icmp ult ptr %114, %118
  %151 = icmp ult ptr %117, %115
  %152 = and i1 %150, %151
  %153 = or i1 %149, %152
  br i1 %153, label %178, label %154

154:                                              ; preds = %111
  %155 = add i32 %88, %63
  br label %156

156:                                              ; preds = %156, %154
  %157 = phi i64 [ 0, %154 ], [ %175, %156 ]
  %158 = trunc i64 %157 to i32
  %159 = add i32 %88, %158
  %160 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %157
  %161 = load <4 x double>, ptr %160, align 8, !tbaa !33, !alias.scope !83, !noalias !86
  %162 = zext i32 %159 to i64
  %163 = load double, ptr %95, align 8, !tbaa !33, !alias.scope !89, !noalias !86
  %164 = insertelement <4 x double> poison, double %163, i64 0
  %165 = shufflevector <4 x double> %164, <4 x double> poison, <4 x i32> zeroinitializer
  %166 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %162
  %167 = shufflevector <4 x double> %161, <4 x double> %165, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %167, ptr %166, align 8, !tbaa !33
  %168 = getelementptr inbounds double, ptr %38, i64 %157
  %169 = load <4 x double>, ptr %168, align 8, !tbaa !33, !alias.scope !91, !noalias !86
  %170 = getelementptr inbounds double, ptr %33, i64 %162
  store <4 x double> %169, ptr %170, align 8, !tbaa !33, !alias.scope !93
  %171 = load double, ptr %96, align 8, !tbaa !33, !alias.scope !94, !noalias !86
  %172 = insertelement <4 x double> poison, double %171, i64 0
  %173 = shufflevector <4 x double> %172, <4 x double> poison, <4 x i32> zeroinitializer
  %174 = fmul <4 x double> %169, %173
  store <4 x double> %174, ptr %170, align 8, !tbaa !33, !alias.scope !93
  %175 = add nuw i64 %157, 4
  %176 = icmp eq i64 %175, %62
  br i1 %176, label %177, label %156, !llvm.loop !96

177:                                              ; preds = %156
  br i1 %64, label %65, label %178

178:                                              ; preds = %111, %97, %86, %177
  %179 = phi i64 [ 0, %111 ], [ 0, %97 ], [ 0, %86 ], [ %62, %177 ]
  %180 = phi i32 [ %88, %111 ], [ %88, %97 ], [ %88, %86 ], [ %155, %177 ]
  br label %69

181:                                              ; preds = %65, %32
  ret void

182:                                              ; preds = %18
  %183 = landingpad { ptr, i32 }
          cleanup
  br label %186

184:                                              ; preds = %21
  %185 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %20) #23
  br label %186

186:                                              ; preds = %184, %182
  %187 = phi { ptr, i32 } [ %183, %182 ], [ %185, %184 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %188 unwind label %189

188:                                              ; preds = %186
  resume { ptr, i32 } %187

189:                                              ; preds = %186
  %190 = landingpad { ptr, i32 }
          catch ptr null
  %191 = extractvalue { ptr, i32 } %190, 0
  tail call void @__clang_call_terminate(ptr %191) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  store i32 %11, ptr %12, align 8, !tbaa !58
  %13 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !66
  %17 = load ptr, ptr %14, align 8, !tbaa !64
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = ashr exact i64 %20, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %29, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %20, 9223372036854775792
  br i1 %24, label %25, label %27, !prof !39

25:                                               ; preds = %23
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %26 unwind label %82

26:                                               ; preds = %25
  unreachable

27:                                               ; preds = %23
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %20) #22
          to label %29 unwind label %82

29:                                               ; preds = %27, %2
  %30 = phi ptr [ null, %2 ], [ %28, %27 ]
  store ptr %30, ptr %13, align 8, !tbaa !64
  %31 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %31, align 8, !tbaa !66
  %32 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %21
  %33 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !65
  %34 = load ptr, ptr %14, align 8, !tbaa !40
  %35 = load ptr, ptr %15, align 8, !tbaa !40
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %29, %37
  %38 = phi ptr [ %45, %37 ], [ %30, %29 ]
  %39 = phi ptr [ %44, %37 ], [ %34, %29 ]
  %40 = load double, ptr %39, align 8, !tbaa !33
  store double %40, ptr %38, align 8, !tbaa !33
  %41 = getelementptr inbounds [2 x double], ptr %39, i64 0, i64 1
  %42 = load double, ptr %41, align 8, !tbaa !33
  %43 = getelementptr inbounds [2 x double], ptr %38, i64 0, i64 1
  store double %42, ptr %43, align 8, !tbaa !33
  %44 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 1
  %45 = getelementptr inbounds %"class.dealii::Point.14", ptr %38, i64 1
  %46 = icmp eq ptr %44, %35
  br i1 %46, label %47, label %37

47:                                               ; preds = %37, %29
  %48 = phi ptr [ %30, %29 ], [ %45, %37 ]
  store ptr %48, ptr %31, align 8, !tbaa !66
  %49 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %50 = load ptr, ptr %4, align 8, !tbaa !38
  %51 = load ptr, ptr %3, align 8, !tbaa !36
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %49, i8 0, i64 24, i1 false)
  %56 = icmp eq ptr %50, %51
  br i1 %56, label %63, label %57

57:                                               ; preds = %47
  %58 = icmp ugt i64 %54, 9223372036854775800
  br i1 %58, label %59, label %61, !prof !39

59:                                               ; preds = %57
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %60 unwind label %84

60:                                               ; preds = %59
  unreachable

61:                                               ; preds = %57
  %62 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %54) #22
          to label %63 unwind label %84

63:                                               ; preds = %61, %47
  %64 = phi ptr [ null, %47 ], [ %62, %61 ]
  store ptr %64, ptr %49, align 8, !tbaa !36
  %65 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %64, ptr %65, align 8, !tbaa !38
  %66 = getelementptr inbounds double, ptr %64, i64 %55
  %67 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %66, ptr %67, align 8, !tbaa !37
  %68 = load ptr, ptr %3, align 8, !tbaa !40
  %69 = load ptr, ptr %4, align 8, !tbaa !40
  %70 = ptrtoint ptr %69 to i64
  %71 = ptrtoint ptr %68 to i64
  %72 = sub i64 %70, %71
  %73 = icmp sgt i64 %72, 8
  br i1 %73, label %74, label %75, !prof !45

74:                                               ; preds = %63
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %64, ptr align 8 %68, i64 %72, i1 false)
  br label %79

75:                                               ; preds = %63
  %76 = icmp eq i64 %72, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = load double, ptr %68, align 8, !tbaa !33
  store double %78, ptr %64, align 8, !tbaa !33
  br label %79

79:                                               ; preds = %77, %75, %74
  %80 = ashr exact i64 %72, 3
  %81 = getelementptr inbounds double, ptr %64, i64 %80
  store ptr %81, ptr %65, align 8, !tbaa !38
  ret void

82:                                               ; preds = %27, %25
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %89

84:                                               ; preds = %61, %59
  %85 = landingpad { ptr, i32 }
          cleanup
  %86 = load ptr, ptr %13, align 8, !tbaa !64
  %87 = icmp eq ptr %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %89

89:                                               ; preds = %88, %84, %82
  %90 = phi { ptr, i32 } [ %83, %82 ], [ %85, %84 ], [ %85, %88 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %91 unwind label %92

91:                                               ; preds = %89
  resume { ptr, i32 } %90

92:                                               ; preds = %89
  %93 = landingpad { ptr, i32 }
          catch ptr null
  %94 = extractvalue { ptr, i32 } %93, 0
  tail call void @__clang_call_terminate(ptr %94) #24
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi2EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !38
  %5 = load ptr, ptr %2, align 8, !tbaa !36
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !66
  %7 = load ptr, ptr %1, align 8, !tbaa !64
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  store i32 %12, ptr %4, align 8, !tbaa !58
  %13 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %14 = icmp eq ptr %6, %7
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = icmp ugt i64 %10, 9223372036854775792
  br i1 %16, label %17, label %19, !prof !39

17:                                               ; preds = %15
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %18 unwind label %75

18:                                               ; preds = %17
  unreachable

19:                                               ; preds = %15
  %20 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
          to label %21 unwind label %75

21:                                               ; preds = %19, %3
  %22 = phi ptr [ null, %3 ], [ %20, %19 ]
  store ptr %22, ptr %13, align 8, !tbaa !64
  %23 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !66
  %24 = getelementptr inbounds %"class.dealii::Point.14", ptr %22, i64 %11
  %25 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !65
  %26 = load ptr, ptr %1, align 8, !tbaa !40
  %27 = load ptr, ptr %5, align 8, !tbaa !40
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %39, label %29

29:                                               ; preds = %21, %29
  %30 = phi ptr [ %37, %29 ], [ %22, %21 ]
  %31 = phi ptr [ %36, %29 ], [ %26, %21 ]
  %32 = load double, ptr %31, align 8, !tbaa !33
  store double %32, ptr %30, align 8, !tbaa !33
  %33 = getelementptr inbounds [2 x double], ptr %31, i64 0, i64 1
  %34 = load double, ptr %33, align 8, !tbaa !33
  %35 = getelementptr inbounds [2 x double], ptr %30, i64 0, i64 1
  store double %34, ptr %35, align 8, !tbaa !33
  %36 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 1
  %37 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 1
  %38 = icmp eq ptr %36, %27
  br i1 %38, label %39, label %29

39:                                               ; preds = %29, %21
  %40 = phi ptr [ %22, %21 ], [ %37, %29 ]
  store ptr %40, ptr %23, align 8, !tbaa !66
  %41 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !38
  %44 = load ptr, ptr %2, align 8, !tbaa !36
  %45 = ptrtoint ptr %43 to i64
  %46 = ptrtoint ptr %44 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %41, i8 0, i64 24, i1 false)
  %49 = icmp eq ptr %43, %44
  br i1 %49, label %56, label %50

50:                                               ; preds = %39
  %51 = icmp ugt i64 %47, 9223372036854775800
  br i1 %51, label %52, label %54, !prof !39

52:                                               ; preds = %50
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %53 unwind label %77

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %47) #22
          to label %56 unwind label %77

56:                                               ; preds = %54, %39
  %57 = phi ptr [ null, %39 ], [ %55, %54 ]
  store ptr %57, ptr %41, align 8, !tbaa !36
  %58 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %57, ptr %58, align 8, !tbaa !38
  %59 = getelementptr inbounds double, ptr %57, i64 %48
  %60 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %59, ptr %60, align 8, !tbaa !37
  %61 = load ptr, ptr %2, align 8, !tbaa !40
  %62 = load ptr, ptr %42, align 8, !tbaa !40
  %63 = ptrtoint ptr %62 to i64
  %64 = ptrtoint ptr %61 to i64
  %65 = sub i64 %63, %64
  %66 = icmp sgt i64 %65, 8
  br i1 %66, label %67, label %68, !prof !45

67:                                               ; preds = %56
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %57, ptr align 8 %61, i64 %65, i1 false)
  br label %72

68:                                               ; preds = %56
  %69 = icmp eq i64 %65, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = load double, ptr %61, align 8, !tbaa !33
  store double %71, ptr %57, align 8, !tbaa !33
  br label %72

72:                                               ; preds = %70, %68, %67
  %73 = ashr exact i64 %65, 3
  %74 = getelementptr inbounds double, ptr %57, i64 %73
  store ptr %74, ptr %58, align 8, !tbaa !38
  ret void

75:                                               ; preds = %19, %17
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %82

77:                                               ; preds = %54, %52
  %78 = landingpad { ptr, i32 }
          cleanup
  %79 = load ptr, ptr %13, align 8, !tbaa !64
  %80 = icmp eq ptr %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  tail call void @_ZdlPv(ptr noundef nonnull %79) #23
  br label %82

82:                                               ; preds = %81, %77, %75
  %83 = phi { ptr, i32 } [ %76, %75 ], [ %78, %77 ], [ %78, %81 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %84 unwind label %85

84:                                               ; preds = %82
  resume { ptr, i32 } %83

85:                                               ; preds = %82
  %86 = landingpad { ptr, i32 }
          catch ptr null
  %87 = extractvalue { ptr, i32 } %86, 0
  tail call void @__clang_call_terminate(ptr %87) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKSt6vectorINS_5PointILi2EEESaIS4_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !66
  %6 = load ptr, ptr %1, align 8, !tbaa !64
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = trunc i64 %10 to i32
  store i32 %11, ptr %3, align 8, !tbaa !58
  %12 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %13 = icmp eq ptr %5, %6
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, 9223372036854775792
  br i1 %15, label %16, label %18, !prof !39

16:                                               ; preds = %14
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %17 unwind label %94

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %14
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %20 unwind label %94

20:                                               ; preds = %18, %2
  %21 = phi ptr [ null, %2 ], [ %19, %18 ]
  store ptr %21, ptr %12, align 8, !tbaa !64
  %22 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !66
  %23 = getelementptr inbounds %"class.dealii::Point.14", ptr %21, i64 %10
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !65
  %25 = load ptr, ptr %1, align 8, !tbaa !40
  %26 = load ptr, ptr %4, align 8, !tbaa !40
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %28
  %29 = phi ptr [ %36, %28 ], [ %21, %20 ]
  %30 = phi ptr [ %35, %28 ], [ %25, %20 ]
  %31 = load double, ptr %30, align 8, !tbaa !33
  store double %31, ptr %29, align 8, !tbaa !33
  %32 = getelementptr inbounds [2 x double], ptr %30, i64 0, i64 1
  %33 = load double, ptr %32, align 8, !tbaa !33
  %34 = getelementptr inbounds [2 x double], ptr %29, i64 0, i64 1
  store double %33, ptr %34, align 8, !tbaa !33
  %35 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 1
  %36 = getelementptr inbounds %"class.dealii::Point.14", ptr %29, i64 1
  %37 = icmp eq ptr %35, %26
  br i1 %37, label %38, label %28

38:                                               ; preds = %28, %20
  %39 = phi ptr [ %21, %20 ], [ %36, %28 ]
  store ptr %39, ptr %22, align 8, !tbaa !66
  %40 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %41 = load ptr, ptr %4, align 8, !tbaa !66
  %42 = ptrtoint ptr %41 to i64
  %43 = ptrtoint ptr %25 to i64
  %44 = sub i64 %42, %43
  %45 = ashr i64 %44, 4
  %46 = tail call double @strtod(ptr nocapture noundef nonnull @.str, ptr noundef null) #25
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.2) #26
          to label %49 unwind label %96

49:                                               ; preds = %48
  unreachable

50:                                               ; preds = %38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %40, i8 0, i64 24, i1 false)
  %51 = icmp eq ptr %41, %25
  br i1 %51, label %91, label %52

52:                                               ; preds = %50
  %53 = lshr exact i64 %44, 1
  %54 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %53) #22
          to label %55 unwind label %96

55:                                               ; preds = %52
  store ptr %54, ptr %40, align 8, !tbaa !36
  %56 = getelementptr inbounds double, ptr %54, i64 %45
  %57 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %56, ptr %57, align 8, !tbaa !37
  %58 = add nsw i64 %45, 2305843009213693951
  %59 = and i64 %58, 2305843009213693951
  %60 = add nuw nsw i64 %59, 1
  %61 = icmp ult i64 %59, 15
  br i1 %61, label %85, label %62

62:                                               ; preds = %55
  %63 = and i64 %60, 4611686018427387888
  %64 = shl i64 %63, 3
  %65 = getelementptr i8, ptr %54, i64 %64
  %66 = insertelement <4 x double> poison, double %46, i64 0
  %67 = shufflevector <4 x double> %66, <4 x double> poison, <4 x i32> zeroinitializer
  %68 = insertelement <4 x double> poison, double %46, i64 0
  %69 = shufflevector <4 x double> %68, <4 x double> poison, <4 x i32> zeroinitializer
  %70 = insertelement <4 x double> poison, double %46, i64 0
  %71 = shufflevector <4 x double> %70, <4 x double> poison, <4 x i32> zeroinitializer
  %72 = insertelement <4 x double> poison, double %46, i64 0
  %73 = shufflevector <4 x double> %72, <4 x double> poison, <4 x i32> zeroinitializer
  br label %74

74:                                               ; preds = %74, %62
  %75 = phi i64 [ 0, %62 ], [ %81, %74 ]
  %76 = shl i64 %75, 3
  %77 = getelementptr i8, ptr %54, i64 %76
  store <4 x double> %67, ptr %77, align 8, !tbaa !33
  %78 = getelementptr double, ptr %77, i64 4
  store <4 x double> %69, ptr %78, align 8, !tbaa !33
  %79 = getelementptr double, ptr %77, i64 8
  store <4 x double> %71, ptr %79, align 8, !tbaa !33
  %80 = getelementptr double, ptr %77, i64 12
  store <4 x double> %73, ptr %80, align 8, !tbaa !33
  %81 = add nuw i64 %75, 16
  %82 = icmp eq i64 %81, %63
  br i1 %82, label %83, label %74, !llvm.loop !97

83:                                               ; preds = %74
  %84 = icmp eq i64 %60, %63
  br i1 %84, label %91, label %85

85:                                               ; preds = %55, %83
  %86 = phi ptr [ %54, %55 ], [ %65, %83 ]
  br label %87

87:                                               ; preds = %85, %87
  %88 = phi ptr [ %89, %87 ], [ %86, %85 ]
  store double %46, ptr %88, align 8, !tbaa !33
  %89 = getelementptr inbounds double, ptr %88, i64 1
  %90 = icmp eq ptr %89, %56
  br i1 %90, label %91, label %87, !llvm.loop !98

91:                                               ; preds = %87, %83, %50
  %92 = phi ptr [ null, %50 ], [ %56, %83 ], [ %56, %87 ]
  %93 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %92, ptr %93, align 8, !tbaa !38
  ret void

94:                                               ; preds = %18, %16
  %95 = landingpad { ptr, i32 }
          cleanup
  br label %101

96:                                               ; preds = %52, %48
  %97 = landingpad { ptr, i32 }
          cleanup
  %98 = load ptr, ptr %12, align 8, !tbaa !64
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %101

101:                                              ; preds = %100, %96, %94
  %102 = phi { ptr, i32 } [ %95, %94 ], [ %97, %96 ], [ %97, %100 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %103 unwind label %104

103:                                              ; preds = %101
  resume { ptr, i32 } %102

104:                                              ; preds = %101
  %105 = landingpad { ptr, i32 }
          catch ptr null
  %106 = extractvalue { ptr, i32 } %105, 0
  tail call void @__clang_call_terminate(ptr %106) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EEC2ERKNS_5PointILi2EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EEC5ERKNS_5PointILi2EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  store i32 1, ptr %3, align 8, !tbaa !58
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %5 = invoke noalias noundef nonnull dereferenceable(16) ptr @_Znwm(i64 noundef 16) #22
          to label %6 unwind label %17

6:                                                ; preds = %2
  store ptr %5, ptr %4, align 8, !tbaa !64
  %7 = getelementptr inbounds %"class.dealii::Point.14", ptr %5, i64 1
  %8 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %7, ptr %8, align 8, !tbaa !65
  %9 = load <2 x double>, ptr %1, align 8, !tbaa !33
  store <2 x double> %9, ptr %5, align 8, !tbaa !33
  %10 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %7, ptr %10, align 8, !tbaa !66
  %11 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  %12 = invoke noalias noundef nonnull dereferenceable(8) ptr @_Znwm(i64 noundef 8) #22
          to label %13 unwind label %19

13:                                               ; preds = %6
  store ptr %12, ptr %11, align 8, !tbaa !36
  %14 = getelementptr inbounds double, ptr %12, i64 1
  %15 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %14, ptr %15, align 8, !tbaa !37
  store double 1.000000e+00, ptr %12, align 8, !tbaa !33
  %16 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %14, ptr %16, align 8, !tbaa !38
  ret void

17:                                               ; preds = %2
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %21

19:                                               ; preds = %6
  %20 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #23
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi { ptr, i32 } [ %20, %19 ], [ %18, %17 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %23 unwind label %24

23:                                               ; preds = %21
  resume { ptr, i32 } %22

24:                                               ; preds = %21
  %25 = landingpad { ptr, i32 }
          catch ptr null
  %26 = extractvalue { ptr, i32 } %25, 0
  tail call void @__clang_call_terminate(ptr %26) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(128) ptr @_ZN6dealii10QuadratureILi2EEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %5 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIdSaIdEEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %3)
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %8 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi2EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6)
  %9 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = load ptr, ptr %3, align 8, !tbaa !36
  %12 = ptrtoint ptr %10 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 1
  store i32 %16, ptr %17, align 8, !tbaa !58
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi2EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %185, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !40
  %7 = load ptr, ptr %1, align 8, !tbaa !40
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 4
  %12 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !65
  %14 = load ptr, ptr %0, align 8, !tbaa !40
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %41

20:                                               ; preds = %4
  %21 = icmp ugt i64 %10, 9223372036854775792
  br i1 %21, label %22, label %23, !prof !39

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #26
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %36, label %26

26:                                               ; preds = %23, %26
  %27 = phi ptr [ %34, %26 ], [ %24, %23 ]
  %28 = phi ptr [ %33, %26 ], [ %7, %23 ]
  %29 = load double, ptr %28, align 8, !tbaa !33
  store double %29, ptr %27, align 8, !tbaa !33
  %30 = getelementptr inbounds [2 x double], ptr %28, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds [2 x double], ptr %27, i64 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !33
  %33 = getelementptr inbounds %"class.dealii::Point.14", ptr %28, i64 1
  %34 = getelementptr inbounds %"class.dealii::Point.14", ptr %27, i64 1
  %35 = icmp eq ptr %33, %6
  br i1 %35, label %36, label %26

36:                                               ; preds = %26, %23
  %37 = icmp eq ptr %14, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %39

39:                                               ; preds = %36, %38
  store ptr %24, ptr %0, align 8, !tbaa !64
  %40 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %11
  store ptr %40, ptr %12, align 8, !tbaa !65
  br label %181

41:                                               ; preds = %4
  %42 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !66
  %44 = ptrtoint ptr %43 to i64
  %45 = sub i64 %44, %16
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, %11
  br i1 %47, label %108, label %48

48:                                               ; preds = %41
  %49 = icmp sgt i64 %10, 0
  br i1 %49, label %50, label %181

50:                                               ; preds = %48
  %51 = lshr i64 %10, 4
  %52 = add nuw nsw i64 %51, 1
  %53 = icmp ugt i64 %10, 15
  %54 = sext i1 %53 to i64
  %55 = add nsw i64 %52, %54
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %92, label %57

57:                                               ; preds = %50
  %58 = and i64 %10, -16
  %59 = add i64 %58, 16
  %60 = icmp ult i64 %10, 16
  %61 = select i1 %60, i64 %59, i64 %58
  %62 = getelementptr i8, ptr %14, i64 %61
  %63 = getelementptr i8, ptr %7, i64 %61
  %64 = icmp ult ptr %14, %63
  %65 = icmp ult ptr %7, %62
  %66 = and i1 %64, %65
  br i1 %66, label %92, label %67

67:                                               ; preds = %57
  %68 = and i64 %55, -4
  %69 = sub nsw i64 %51, %68
  %70 = shl i64 %68, 4
  %71 = getelementptr i8, ptr %14, i64 %70
  %72 = shl i64 %68, 4
  %73 = getelementptr i8, ptr %7, i64 %72
  br label %74

74:                                               ; preds = %74, %67
  %75 = phi i64 [ 0, %67 ], [ %88, %74 ]
  %76 = shl i64 %75, 4
  %77 = getelementptr i8, ptr %14, i64 %76
  %78 = shl i64 %75, 4
  %79 = or i64 %78, 32
  %80 = getelementptr i8, ptr %14, i64 %79
  %81 = shl i64 %75, 4
  %82 = getelementptr i8, ptr %7, i64 %81
  %83 = shl i64 %75, 4
  %84 = or i64 %83, 32
  %85 = getelementptr i8, ptr %7, i64 %84
  %86 = load <4 x double>, ptr %82, align 8, !tbaa !33
  %87 = load <4 x double>, ptr %85, align 8, !tbaa !33
  store <4 x double> %86, ptr %77, align 8, !tbaa !33
  store <4 x double> %87, ptr %80, align 8, !tbaa !33
  %88 = add nuw i64 %75, 4
  %89 = icmp eq i64 %88, %68
  br i1 %89, label %90, label %74, !llvm.loop !99

90:                                               ; preds = %74
  %91 = icmp eq i64 %55, %68
  br i1 %91, label %181, label %92

92:                                               ; preds = %57, %50, %90
  %93 = phi i64 [ %51, %57 ], [ %51, %50 ], [ %69, %90 ]
  %94 = phi ptr [ %14, %57 ], [ %14, %50 ], [ %71, %90 ]
  %95 = phi ptr [ %7, %57 ], [ %7, %50 ], [ %73, %90 ]
  br label %96

96:                                               ; preds = %92, %96
  %97 = phi i64 [ %106, %96 ], [ %93, %92 ]
  %98 = phi ptr [ %105, %96 ], [ %94, %92 ]
  %99 = phi ptr [ %104, %96 ], [ %95, %92 ]
  %100 = load double, ptr %99, align 8, !tbaa !33
  store double %100, ptr %98, align 8, !tbaa !33
  %101 = getelementptr inbounds [2 x double], ptr %99, i64 0, i64 1
  %102 = load double, ptr %101, align 8, !tbaa !33
  %103 = getelementptr inbounds [2 x double], ptr %98, i64 0, i64 1
  store double %102, ptr %103, align 8, !tbaa !33
  %104 = getelementptr inbounds %"class.dealii::Point.14", ptr %99, i64 1
  %105 = getelementptr inbounds %"class.dealii::Point.14", ptr %98, i64 1
  %106 = add nsw i64 %97, -1
  %107 = icmp ugt i64 %97, 1
  br i1 %107, label %96, label %181, !llvm.loop !100

108:                                              ; preds = %41
  %109 = getelementptr inbounds %"class.dealii::Point.14", ptr %7, i64 %46
  %110 = icmp sgt i64 %45, 0
  br i1 %110, label %111, label %169

111:                                              ; preds = %108
  %112 = lshr i64 %45, 4
  %113 = add nuw nsw i64 %112, 1
  %114 = icmp ugt i64 %45, 15
  %115 = sext i1 %114 to i64
  %116 = add nsw i64 %113, %115
  %117 = icmp ult i64 %116, 16
  br i1 %117, label %153, label %118

118:                                              ; preds = %111
  %119 = and i64 %45, -16
  %120 = add i64 %119, 16
  %121 = icmp ult i64 %45, 16
  %122 = select i1 %121, i64 %120, i64 %119
  %123 = getelementptr i8, ptr %14, i64 %122
  %124 = getelementptr i8, ptr %7, i64 %122
  %125 = icmp ult ptr %14, %124
  %126 = icmp ult ptr %7, %123
  %127 = and i1 %125, %126
  br i1 %127, label %153, label %128

128:                                              ; preds = %118
  %129 = and i64 %116, -4
  %130 = sub nsw i64 %112, %129
  %131 = shl i64 %129, 4
  %132 = getelementptr i8, ptr %14, i64 %131
  %133 = shl i64 %129, 4
  %134 = getelementptr i8, ptr %7, i64 %133
  br label %135

135:                                              ; preds = %135, %128
  %136 = phi i64 [ 0, %128 ], [ %149, %135 ]
  %137 = shl i64 %136, 4
  %138 = getelementptr i8, ptr %14, i64 %137
  %139 = shl i64 %136, 4
  %140 = or i64 %139, 32
  %141 = getelementptr i8, ptr %14, i64 %140
  %142 = shl i64 %136, 4
  %143 = getelementptr i8, ptr %7, i64 %142
  %144 = shl i64 %136, 4
  %145 = or i64 %144, 32
  %146 = getelementptr i8, ptr %7, i64 %145
  %147 = load <4 x double>, ptr %143, align 8, !tbaa !33
  %148 = load <4 x double>, ptr %146, align 8, !tbaa !33
  store <4 x double> %147, ptr %138, align 8, !tbaa !33
  store <4 x double> %148, ptr %141, align 8, !tbaa !33
  %149 = add nuw i64 %136, 4
  %150 = icmp eq i64 %149, %129
  br i1 %150, label %151, label %135, !llvm.loop !101

151:                                              ; preds = %135
  %152 = icmp eq i64 %116, %129
  br i1 %152, label %169, label %153

153:                                              ; preds = %118, %111, %151
  %154 = phi i64 [ %112, %118 ], [ %112, %111 ], [ %130, %151 ]
  %155 = phi ptr [ %14, %118 ], [ %14, %111 ], [ %132, %151 ]
  %156 = phi ptr [ %7, %118 ], [ %7, %111 ], [ %134, %151 ]
  br label %157

157:                                              ; preds = %153, %157
  %158 = phi i64 [ %167, %157 ], [ %154, %153 ]
  %159 = phi ptr [ %166, %157 ], [ %155, %153 ]
  %160 = phi ptr [ %165, %157 ], [ %156, %153 ]
  %161 = load double, ptr %160, align 8, !tbaa !33
  store double %161, ptr %159, align 8, !tbaa !33
  %162 = getelementptr inbounds [2 x double], ptr %160, i64 0, i64 1
  %163 = load double, ptr %162, align 8, !tbaa !33
  %164 = getelementptr inbounds [2 x double], ptr %159, i64 0, i64 1
  store double %163, ptr %164, align 8, !tbaa !33
  %165 = getelementptr inbounds %"class.dealii::Point.14", ptr %160, i64 1
  %166 = getelementptr inbounds %"class.dealii::Point.14", ptr %159, i64 1
  %167 = add nsw i64 %158, -1
  %168 = icmp ugt i64 %158, 1
  br i1 %168, label %157, label %169, !llvm.loop !102

169:                                              ; preds = %157, %151, %108
  %170 = icmp eq ptr %109, %6
  br i1 %170, label %181, label %171

171:                                              ; preds = %169, %171
  %172 = phi ptr [ %179, %171 ], [ %43, %169 ]
  %173 = phi ptr [ %178, %171 ], [ %109, %169 ]
  %174 = load double, ptr %173, align 8, !tbaa !33
  store double %174, ptr %172, align 8, !tbaa !33
  %175 = getelementptr inbounds [2 x double], ptr %173, i64 0, i64 1
  %176 = load double, ptr %175, align 8, !tbaa !33
  %177 = getelementptr inbounds [2 x double], ptr %172, i64 0, i64 1
  store double %176, ptr %177, align 8, !tbaa !33
  %178 = getelementptr inbounds %"class.dealii::Point.14", ptr %173, i64 1
  %179 = getelementptr inbounds %"class.dealii::Point.14", ptr %172, i64 1
  %180 = icmp eq ptr %178, %6
  br i1 %180, label %181, label %171

181:                                              ; preds = %96, %171, %90, %48, %169, %39
  %182 = load ptr, ptr %0, align 8, !tbaa !64
  %183 = getelementptr inbounds %"class.dealii::Point.14", ptr %182, i64 %11
  %184 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %183, ptr %184, align 8, !tbaa !66
  br label %185

185:                                              ; preds = %181, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !64
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(16) ptr @_ZNK6dealii10QuadratureILi2EE5pointEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !64
  %6 = getelementptr inbounds %"class.dealii::Point.14", ptr %5, i64 %4
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi2EE10get_pointsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii10QuadratureILi2EE6weightEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !36
  %6 = getelementptr inbounds double, ptr %5, i64 %4
  %7 = load double, ptr %6, align 8, !tbaa !33
  ret double %7
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi2EE11get_weightsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi2EE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !66
  %5 = load ptr, ptr %2, align 8, !tbaa !64
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !65
  %13 = ptrtoint ptr %12 to i64
  %14 = sub i64 %13, %7
  %15 = lshr exact i64 %14, 4
  %16 = sub nsw i64 %15, %9
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, %10
  %19 = shl i32 %18, 4
  %20 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !37
  %23 = load ptr, ptr %20, align 8, !tbaa !36
  %24 = ptrtoint ptr %22 to i64
  %25 = ptrtoint ptr %23 to i64
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = and i32 %27, -8
  %29 = add i32 %28, 48
  %30 = add i32 %29, %19
  ret i32 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 8, !tbaa !103
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %5 = zext i32 %1 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  br label %22

8:                                                ; preds = %2
  %9 = mul nuw nsw i64 %5, 24
  %10 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %11 unwind label %25

11:                                               ; preds = %8
  store ptr %10, ptr %4, align 8, !tbaa !109
  %12 = getelementptr inbounds %"class.dealii::Point.22", ptr %10, i64 %5
  %13 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %10, i8 0, i64 %9, i1 false), !tbaa !33
  %14 = getelementptr i8, ptr %10, i64 %9
  %15 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !111
  %16 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  %17 = shl nuw nsw i64 %5, 3
  %18 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
          to label %19 unwind label %27

19:                                               ; preds = %11
  store ptr %18, ptr %16, align 8, !tbaa !36
  %20 = getelementptr inbounds double, ptr %18, i64 %5
  %21 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi ptr [ null, %7 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !38
  ret void

25:                                               ; preds = %8
  %26 = landingpad { ptr, i32 }
          cleanup
  br label %29

27:                                               ; preds = %11
  %28 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %10) #23
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi { ptr, i32 } [ %26, %25 ], [ %28, %27 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %31 unwind label %32

31:                                               ; preds = %29
  resume { ptr, i32 } %30

32:                                               ; preds = %29
  %33 = landingpad { ptr, i32 }
          catch ptr null
  %34 = extractvalue { ptr, i32 } %33, 0
  tail call void @__clang_call_terminate(ptr %34) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKNS0_ILi2EEERKNS0_ILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKNS0_ILi2EEERKNS0_ILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = load ptr, ptr %14, align 8, !tbaa !36
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = mul i32 %22, %13
  store i32 %23, ptr %4, align 8, !tbaa !103
  %24 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %25 = zext i32 %23 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %24, i8 0, i64 24, i1 false)
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %24, i8 0, i64 48, i1 false)
  br label %42

28:                                               ; preds = %3
  %29 = mul nuw nsw i64 %25, 24
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #22
          to label %31 unwind label %226

31:                                               ; preds = %28
  store ptr %30, ptr %24, align 8, !tbaa !109
  %32 = getelementptr inbounds %"class.dealii::Point.22", ptr %30, i64 %25
  %33 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %30, i8 0, i64 %29, i1 false), !tbaa !33
  %34 = getelementptr i8, ptr %30, i64 %29
  %35 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !111
  %36 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %36, i8 0, i64 24, i1 false)
  %37 = shl nuw nsw i64 %25, 3
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %37) #22
          to label %39 unwind label %228

39:                                               ; preds = %31
  store ptr %38, ptr %36, align 8, !tbaa !36
  %40 = getelementptr inbounds double, ptr %38, i64 %25
  %41 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %38, i8 0, i64 %37, i1 false), !tbaa !33
  br label %42

42:                                               ; preds = %39, %27
  %43 = phi ptr [ null, %27 ], [ %38, %39 ]
  %44 = phi ptr [ null, %27 ], [ %30, %39 ]
  %45 = phi ptr [ null, %27 ], [ %40, %39 ]
  %46 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %46, align 8, !tbaa !38
  %47 = load ptr, ptr %15, align 8, !tbaa !38
  %48 = load ptr, ptr %14, align 8, !tbaa !36
  %49 = ptrtoint ptr %47 to i64
  %50 = ptrtoint ptr %48 to i64
  %51 = sub i64 %49, %50
  %52 = lshr exact i64 %51, 3
  %53 = and i64 %51, 34359738360
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %225, label %55

55:                                               ; preds = %42
  %56 = load ptr, ptr %6, align 8, !tbaa !38
  %57 = load ptr, ptr %5, align 8, !tbaa !36
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = and i64 %60, 34359738360
  %62 = icmp eq i64 %61, 0
  %63 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8
  br i1 %62, label %225, label %67

67:                                               ; preds = %55
  %68 = lshr exact i64 %60, 3
  %69 = and i64 %52, 4294967295
  %70 = and i64 %68, 4294967295
  %71 = add nsw i64 %70, -1
  %72 = getelementptr i8, ptr %44, i64 8
  %73 = getelementptr i8, ptr %44, i64 16
  %74 = shl nuw nsw i64 %70, 4
  %75 = getelementptr i8, ptr %64, i64 %74
  %76 = mul nuw nsw i64 %70, 24
  %77 = getelementptr i8, ptr %44, i64 %76
  %78 = getelementptr i8, ptr %43, i64 %61
  %79 = getelementptr i8, ptr %57, i64 %61
  %80 = icmp ult i64 %70, 46
  %81 = trunc i64 %71 to i32
  %82 = icmp ugt i64 %71, 4294967295
  %83 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %71, i64 24)
  %84 = extractvalue { i64, i1 } %83, 0
  %85 = extractvalue { i64, i1 } %83, 1
  %86 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %71, i64 24)
  %87 = extractvalue { i64, i1 } %86, 0
  %88 = extractvalue { i64, i1 } %86, 1
  %89 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %71, i64 24)
  %90 = extractvalue { i64, i1 } %89, 0
  %91 = extractvalue { i64, i1 } %89, 1
  %92 = and i64 %68, 1
  %93 = sub nsw i64 %70, %92
  %94 = trunc i64 %93 to i32
  %95 = icmp eq i64 %92, 0
  br label %96

96:                                               ; preds = %221, %67
  %97 = phi i64 [ %223, %221 ], [ 0, %67 ]
  %98 = phi i32 [ %222, %221 ], [ 0, %67 ]
  %99 = shl i64 %97, 3
  %100 = getelementptr i8, ptr %66, i64 %99
  %101 = add i64 %99, 8
  %102 = getelementptr i8, ptr %66, i64 %101
  %103 = getelementptr i8, ptr %48, i64 %99
  %104 = getelementptr i8, ptr %48, i64 %101
  %105 = getelementptr inbounds %"class.dealii::Point", ptr %66, i64 %97
  %106 = getelementptr inbounds double, ptr %48, i64 %97
  br i1 %80, label %198, label %107

107:                                              ; preds = %96
  %108 = xor i32 %98, -1
  %109 = icmp ult i32 %108, %81
  %110 = or i1 %109, %82
  %111 = zext i32 %98 to i64
  %112 = mul nuw nsw i64 %111, 24
  %113 = getelementptr i8, ptr %72, i64 %112
  %114 = getelementptr i8, ptr %113, i64 %84
  %115 = icmp ult ptr %114, %113
  %116 = or i1 %115, %85
  %117 = getelementptr i8, ptr %73, i64 %112
  %118 = getelementptr i8, ptr %117, i64 %87
  %119 = icmp ult ptr %118, %117
  %120 = or i1 %119, %88
  %121 = getelementptr i8, ptr %44, i64 %112
  %122 = getelementptr i8, ptr %121, i64 %90
  %123 = icmp ult ptr %122, %121
  %124 = or i1 %123, %91
  %125 = or i1 %110, %116
  %126 = or i1 %125, %120
  %127 = or i1 %126, %124
  br i1 %127, label %198, label %128

128:                                              ; preds = %107
  %129 = zext i32 %98 to i64
  %130 = mul nuw nsw i64 %129, 24
  %131 = getelementptr i8, ptr %44, i64 %130
  %132 = getelementptr i8, ptr %77, i64 %130
  %133 = shl nuw nsw i64 %129, 3
  %134 = getelementptr i8, ptr %43, i64 %133
  %135 = getelementptr i8, ptr %78, i64 %133
  %136 = icmp ult ptr %64, %132
  %137 = icmp ult ptr %131, %75
  %138 = and i1 %136, %137
  %139 = icmp ult ptr %64, %135
  %140 = icmp ult ptr %134, %75
  %141 = and i1 %139, %140
  %142 = or i1 %138, %141
  %143 = icmp ult ptr %100, %132
  %144 = icmp ult ptr %131, %102
  %145 = and i1 %143, %144
  %146 = or i1 %142, %145
  %147 = icmp ult ptr %100, %135
  %148 = icmp ult ptr %134, %102
  %149 = and i1 %147, %148
  %150 = or i1 %146, %149
  %151 = icmp ult ptr %57, %132
  %152 = icmp ult ptr %131, %79
  %153 = and i1 %151, %152
  %154 = or i1 %150, %153
  %155 = icmp ult ptr %57, %135
  %156 = icmp ult ptr %134, %79
  %157 = and i1 %155, %156
  %158 = or i1 %154, %157
  %159 = icmp ult ptr %103, %132
  %160 = icmp ult ptr %131, %104
  %161 = and i1 %159, %160
  %162 = or i1 %158, %161
  %163 = icmp ult ptr %103, %135
  %164 = icmp ult ptr %134, %104
  %165 = and i1 %163, %164
  %166 = or i1 %162, %165
  %167 = icmp ult ptr %131, %135
  %168 = icmp ult ptr %134, %132
  %169 = and i1 %167, %168
  %170 = or i1 %166, %169
  br i1 %170, label %198, label %171

171:                                              ; preds = %128
  %172 = add i32 %98, %94
  br label %173

173:                                              ; preds = %173, %171
  %174 = phi i64 [ 0, %171 ], [ %195, %173 ]
  %175 = trunc i64 %174 to i32
  %176 = add i32 %98, %175
  %177 = getelementptr inbounds %"class.dealii::Point.14", ptr %64, i64 %174
  %178 = zext i32 %176 to i64
  %179 = load <4 x double>, ptr %177, align 8, !tbaa !33
  %180 = shufflevector <4 x double> %179, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %181 = shufflevector <4 x double> %179, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %182 = load double, ptr %105, align 8, !tbaa !33, !alias.scope !112, !noalias !115
  %183 = insertelement <2 x double> poison, double %182, i64 0
  %184 = getelementptr inbounds %"class.dealii::Point.22", ptr %44, i64 %178
  %185 = shufflevector <2 x double> %180, <2 x double> %181, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %186 = shufflevector <2 x double> %183, <2 x double> poison, <4 x i32> <i32 0, i32 0, i32 poison, i32 poison>
  %187 = shufflevector <4 x double> %185, <4 x double> %186, <6 x i32> <i32 0, i32 2, i32 4, i32 1, i32 3, i32 5>
  store <6 x double> %187, ptr %184, align 8, !tbaa !33
  %188 = getelementptr inbounds double, ptr %57, i64 %174
  %189 = load <2 x double>, ptr %188, align 8, !tbaa !33, !alias.scope !118, !noalias !115
  %190 = load double, ptr %106, align 8, !tbaa !33, !alias.scope !120, !noalias !115
  %191 = insertelement <2 x double> poison, double %190, i64 0
  %192 = shufflevector <2 x double> %191, <2 x double> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x double> %189, %192
  %194 = getelementptr inbounds double, ptr %43, i64 %178
  store <2 x double> %193, ptr %194, align 8, !tbaa !33, !alias.scope !122
  %195 = add nuw i64 %174, 2
  %196 = icmp eq i64 %195, %93
  br i1 %196, label %197, label %173, !llvm.loop !123

197:                                              ; preds = %173
  br i1 %95, label %221, label %198

198:                                              ; preds = %128, %107, %96, %197
  %199 = phi i64 [ 0, %128 ], [ 0, %107 ], [ 0, %96 ], [ %93, %197 ]
  %200 = phi i32 [ %98, %128 ], [ %98, %107 ], [ %98, %96 ], [ %172, %197 ]
  br label %201

201:                                              ; preds = %198, %201
  %202 = phi i64 [ %219, %201 ], [ %199, %198 ]
  %203 = phi i32 [ %218, %201 ], [ %200, %198 ]
  %204 = getelementptr inbounds %"class.dealii::Point.14", ptr %64, i64 %202
  %205 = zext i32 %203 to i64
  %206 = getelementptr inbounds %"class.dealii::Point.22", ptr %44, i64 %205
  %207 = load double, ptr %204, align 8, !tbaa !33
  store double %207, ptr %206, align 8, !tbaa !33
  %208 = getelementptr inbounds [2 x double], ptr %204, i64 0, i64 1
  %209 = load double, ptr %208, align 8, !tbaa !33
  %210 = getelementptr inbounds [3 x double], ptr %206, i64 0, i64 1
  store double %209, ptr %210, align 8, !tbaa !33
  %211 = load double, ptr %105, align 8, !tbaa !33
  %212 = getelementptr inbounds %"class.dealii::Point.22", ptr %44, i64 %205, i32 0, i32 0, i64 2
  store double %211, ptr %212, align 8, !tbaa !33
  %213 = getelementptr inbounds double, ptr %57, i64 %202
  %214 = load double, ptr %213, align 8, !tbaa !33
  %215 = load double, ptr %106, align 8, !tbaa !33
  %216 = fmul double %214, %215
  %217 = getelementptr inbounds double, ptr %43, i64 %205
  store double %216, ptr %217, align 8, !tbaa !33
  %218 = add i32 %203, 1
  %219 = add nuw nsw i64 %202, 1
  %220 = icmp eq i64 %219, %70
  br i1 %220, label %221, label %201, !llvm.loop !124

221:                                              ; preds = %201, %197
  %222 = phi i32 [ %172, %197 ], [ %218, %201 ]
  %223 = add nuw nsw i64 %97, 1
  %224 = icmp eq i64 %223, %69
  br i1 %224, label %225, label %96

225:                                              ; preds = %221, %55, %42
  ret void

226:                                              ; preds = %28
  %227 = landingpad { ptr, i32 }
          cleanup
  br label %230

228:                                              ; preds = %31
  %229 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %230

230:                                              ; preds = %228, %226
  %231 = phi { ptr, i32 } [ %227, %226 ], [ %229, %228 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %232 unwind label %233

232:                                              ; preds = %230
  resume { ptr, i32 } %231

233:                                              ; preds = %230
  %234 = landingpad { ptr, i32 }
          catch ptr null
  %235 = extractvalue { ptr, i32 } %234, 0
  tail call void @__clang_call_terminate(ptr %235) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKNS0_ILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKNS0_ILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = mul i32 %12, %12
  %14 = mul i32 %13, %12
  store i32 %14, ptr %3, align 8, !tbaa !103
  %15 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %16 = zext i32 %14 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %15, i8 0, i64 24, i1 false)
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %15, i8 0, i64 48, i1 false)
  br label %33

19:                                               ; preds = %2
  %20 = mul nuw nsw i64 %16, 24
  %21 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %20) #22
          to label %22 unwind label %86

22:                                               ; preds = %19
  store ptr %21, ptr %15, align 8, !tbaa !109
  %23 = getelementptr inbounds %"class.dealii::Point.22", ptr %21, i64 %16
  %24 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %21, i8 0, i64 %20, i1 false), !tbaa !33
  %25 = getelementptr i8, ptr %21, i64 %20
  %26 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !111
  %27 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %27, i8 0, i64 24, i1 false)
  %28 = shl nuw nsw i64 %16, 3
  %29 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %28) #22
          to label %30 unwind label %242

30:                                               ; preds = %22
  store ptr %29, ptr %27, align 8, !tbaa !36
  %31 = getelementptr inbounds double, ptr %29, i64 %16
  %32 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %31, ptr %32, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %29, i8 0, i64 %28, i1 false), !tbaa !33
  br label %33

33:                                               ; preds = %30, %18
  %34 = phi ptr [ null, %18 ], [ %29, %30 ]
  %35 = phi ptr [ null, %18 ], [ %21, %30 ]
  %36 = phi ptr [ null, %18 ], [ %31, %30 ]
  %37 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %36, ptr %37, align 8, !tbaa !38
  %38 = load ptr, ptr %5, align 8, !tbaa !38
  %39 = load ptr, ptr %4, align 8, !tbaa !36
  %40 = ptrtoint ptr %38 to i64
  %41 = ptrtoint ptr %39 to i64
  %42 = sub i64 %40, %41
  %43 = and i64 %42, 34359738360
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %85, label %45

45:                                               ; preds = %33
  %46 = lshr exact i64 %42, 3
  %47 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !31
  %49 = and i64 %46, 4294967295
  %50 = add nsw i64 %49, -1
  %51 = getelementptr i8, ptr %35, i64 8
  %52 = getelementptr i8, ptr %35, i64 16
  %53 = mul nuw nsw i64 %49, 24
  %54 = getelementptr i8, ptr %35, i64 %53
  %55 = getelementptr i8, ptr %34, i64 %43
  %56 = getelementptr i8, ptr %48, i64 %43
  %57 = getelementptr i8, ptr %39, i64 %43
  %58 = icmp ult i64 %49, 44
  %59 = trunc i64 %50 to i32
  %60 = icmp ugt i64 %50, 4294967295
  %61 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %50, i64 24)
  %62 = extractvalue { i64, i1 } %61, 0
  %63 = extractvalue { i64, i1 } %61, 1
  %64 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %50, i64 24)
  %65 = extractvalue { i64, i1 } %64, 0
  %66 = extractvalue { i64, i1 } %64, 1
  %67 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %50, i64 24)
  %68 = extractvalue { i64, i1 } %67, 0
  %69 = extractvalue { i64, i1 } %67, 1
  %70 = and i64 %46, 3
  %71 = sub nsw i64 %49, %70
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i64 %70, 0
  br label %74

74:                                               ; preds = %45, %214
  %75 = phi i64 [ 0, %45 ], [ %215, %214 ]
  %76 = phi i32 [ 0, %45 ], [ %218, %214 ]
  %77 = shl i64 %75, 3
  %78 = getelementptr i8, ptr %48, i64 %77
  %79 = add i64 %77, 8
  %80 = getelementptr i8, ptr %48, i64 %79
  %81 = getelementptr i8, ptr %39, i64 %77
  %82 = getelementptr i8, ptr %39, i64 %79
  %83 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %75
  %84 = getelementptr inbounds double, ptr %39, i64 %75
  br label %88

85:                                               ; preds = %214, %33
  ret void

86:                                               ; preds = %19
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %244

88:                                               ; preds = %74, %217
  %89 = phi i64 [ 0, %74 ], [ %219, %217 ]
  %90 = phi i32 [ %76, %74 ], [ %218, %217 ]
  %91 = shl i64 %89, 3
  %92 = getelementptr i8, ptr %48, i64 %91
  %93 = add i64 %91, 8
  %94 = getelementptr i8, ptr %48, i64 %93
  %95 = getelementptr i8, ptr %39, i64 %91
  %96 = getelementptr i8, ptr %39, i64 %93
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %89
  %98 = getelementptr inbounds double, ptr %39, i64 %89
  br i1 %58, label %211, label %99

99:                                               ; preds = %88
  %100 = xor i32 %90, -1
  %101 = icmp ult i32 %100, %59
  %102 = or i1 %101, %60
  %103 = zext i32 %90 to i64
  %104 = mul nuw nsw i64 %103, 24
  %105 = getelementptr i8, ptr %51, i64 %104
  %106 = getelementptr i8, ptr %105, i64 %62
  %107 = icmp ult ptr %106, %105
  %108 = or i1 %107, %63
  %109 = getelementptr i8, ptr %52, i64 %104
  %110 = getelementptr i8, ptr %109, i64 %65
  %111 = icmp ult ptr %110, %109
  %112 = or i1 %111, %66
  %113 = getelementptr i8, ptr %35, i64 %104
  %114 = getelementptr i8, ptr %113, i64 %68
  %115 = icmp ult ptr %114, %113
  %116 = or i1 %115, %69
  %117 = or i1 %102, %108
  %118 = or i1 %117, %112
  %119 = or i1 %118, %116
  br i1 %119, label %211, label %120

120:                                              ; preds = %99
  %121 = zext i32 %90 to i64
  %122 = mul nuw nsw i64 %121, 24
  %123 = getelementptr i8, ptr %35, i64 %122
  %124 = getelementptr i8, ptr %54, i64 %122
  %125 = shl nuw nsw i64 %121, 3
  %126 = getelementptr i8, ptr %34, i64 %125
  %127 = getelementptr i8, ptr %55, i64 %125
  %128 = icmp ult ptr %78, %124
  %129 = icmp ult ptr %123, %80
  %130 = and i1 %128, %129
  %131 = icmp ult ptr %78, %127
  %132 = icmp ult ptr %126, %80
  %133 = and i1 %131, %132
  %134 = or i1 %130, %133
  %135 = icmp ult ptr %92, %124
  %136 = icmp ult ptr %123, %94
  %137 = and i1 %135, %136
  %138 = or i1 %134, %137
  %139 = icmp ult ptr %92, %127
  %140 = icmp ult ptr %126, %94
  %141 = and i1 %139, %140
  %142 = or i1 %138, %141
  %143 = icmp ult ptr %48, %124
  %144 = icmp ult ptr %123, %56
  %145 = and i1 %143, %144
  %146 = or i1 %142, %145
  %147 = icmp ult ptr %48, %127
  %148 = icmp ult ptr %126, %56
  %149 = and i1 %147, %148
  %150 = or i1 %146, %149
  %151 = icmp ult ptr %81, %124
  %152 = icmp ult ptr %123, %82
  %153 = and i1 %151, %152
  %154 = or i1 %150, %153
  %155 = icmp ult ptr %81, %127
  %156 = icmp ult ptr %126, %82
  %157 = and i1 %155, %156
  %158 = or i1 %154, %157
  %159 = icmp ult ptr %95, %124
  %160 = icmp ult ptr %123, %96
  %161 = and i1 %159, %160
  %162 = or i1 %158, %161
  %163 = icmp ult ptr %95, %127
  %164 = icmp ult ptr %126, %96
  %165 = and i1 %163, %164
  %166 = or i1 %162, %165
  %167 = icmp ult ptr %39, %124
  %168 = icmp ult ptr %123, %57
  %169 = and i1 %167, %168
  %170 = or i1 %166, %169
  %171 = icmp ult ptr %39, %127
  %172 = icmp ult ptr %126, %57
  %173 = and i1 %171, %172
  %174 = or i1 %170, %173
  %175 = icmp ult ptr %123, %127
  %176 = icmp ult ptr %126, %124
  %177 = and i1 %175, %176
  %178 = or i1 %174, %177
  br i1 %178, label %211, label %179

179:                                              ; preds = %120
  %180 = add i32 %90, %72
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i64 [ 0, %179 ], [ %208, %181 ]
  %183 = trunc i64 %182 to i32
  %184 = add i32 %90, %183
  %185 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %182
  %186 = load <4 x double>, ptr %185, align 8, !tbaa !33, !alias.scope !125, !noalias !128
  %187 = zext i32 %184 to i64
  %188 = load double, ptr %97, align 8, !tbaa !33, !alias.scope !131, !noalias !128
  %189 = insertelement <4 x double> poison, double %188, i64 0
  %190 = shufflevector <4 x double> %189, <4 x double> poison, <4 x i32> zeroinitializer
  %191 = load double, ptr %83, align 8, !tbaa !33, !alias.scope !133, !noalias !128
  %192 = insertelement <4 x double> poison, double %191, i64 0
  %193 = getelementptr inbounds %"class.dealii::Point.22", ptr %35, i64 %187
  %194 = shufflevector <4 x double> %186, <4 x double> %190, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %195 = shufflevector <4 x double> %192, <4 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison, i32 poison, i32 poison>
  %196 = shufflevector <8 x double> %194, <8 x double> %195, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  store <12 x double> %196, ptr %193, align 8, !tbaa !33
  %197 = getelementptr inbounds double, ptr %39, i64 %182
  %198 = load <4 x double>, ptr %197, align 8, !tbaa !33, !alias.scope !135, !noalias !128
  %199 = getelementptr inbounds double, ptr %34, i64 %187
  store <4 x double> %198, ptr %199, align 8, !tbaa !33, !alias.scope !137
  %200 = load double, ptr %98, align 8, !tbaa !33, !alias.scope !138, !noalias !128
  %201 = insertelement <4 x double> poison, double %200, i64 0
  %202 = shufflevector <4 x double> %201, <4 x double> poison, <4 x i32> zeroinitializer
  %203 = fmul <4 x double> %198, %202
  store <4 x double> %203, ptr %199, align 8, !tbaa !33, !alias.scope !137
  %204 = load double, ptr %84, align 8, !tbaa !33, !alias.scope !140, !noalias !128
  %205 = insertelement <4 x double> poison, double %204, i64 0
  %206 = shufflevector <4 x double> %205, <4 x double> poison, <4 x i32> zeroinitializer
  %207 = fmul <4 x double> %203, %206
  store <4 x double> %207, ptr %199, align 8, !tbaa !33, !alias.scope !137
  %208 = add nuw i64 %182, 4
  %209 = icmp eq i64 %208, %71
  br i1 %209, label %210, label %181, !llvm.loop !142

210:                                              ; preds = %181
  br i1 %73, label %217, label %211

211:                                              ; preds = %120, %99, %88, %210
  %212 = phi i64 [ 0, %120 ], [ 0, %99 ], [ 0, %88 ], [ %71, %210 ]
  %213 = phi i32 [ %90, %120 ], [ %90, %99 ], [ %90, %88 ], [ %180, %210 ]
  br label %221

214:                                              ; preds = %217
  %215 = add nuw nsw i64 %75, 1
  %216 = icmp eq i64 %215, %49
  br i1 %216, label %85, label %74

217:                                              ; preds = %221, %210
  %218 = phi i32 [ %180, %210 ], [ %239, %221 ]
  %219 = add nuw nsw i64 %89, 1
  %220 = icmp eq i64 %219, %49
  br i1 %220, label %214, label %88

221:                                              ; preds = %211, %221
  %222 = phi i64 [ %240, %221 ], [ %212, %211 ]
  %223 = phi i32 [ %239, %221 ], [ %213, %211 ]
  %224 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %222
  %225 = load double, ptr %224, align 8, !tbaa !33
  %226 = zext i32 %223 to i64
  %227 = getelementptr inbounds %"class.dealii::Point.22", ptr %35, i64 %226
  store double %225, ptr %227, align 8, !tbaa !33
  %228 = load double, ptr %97, align 8, !tbaa !33
  %229 = getelementptr inbounds [3 x double], ptr %227, i64 0, i64 1
  store double %228, ptr %229, align 8, !tbaa !33
  %230 = load double, ptr %83, align 8, !tbaa !33
  %231 = getelementptr inbounds [3 x double], ptr %227, i64 0, i64 2
  store double %230, ptr %231, align 8, !tbaa !33
  %232 = getelementptr inbounds double, ptr %39, i64 %222
  %233 = load double, ptr %232, align 8, !tbaa !33
  %234 = getelementptr inbounds double, ptr %34, i64 %226
  store double %233, ptr %234, align 8, !tbaa !33
  %235 = load double, ptr %98, align 8, !tbaa !33
  %236 = fmul double %233, %235
  store double %236, ptr %234, align 8, !tbaa !33
  %237 = load double, ptr %84, align 8, !tbaa !33
  %238 = fmul double %236, %237
  store double %238, ptr %234, align 8, !tbaa !33
  %239 = add i32 %223, 1
  %240 = add nuw nsw i64 %222, 1
  %241 = icmp eq i64 %240, %49
  br i1 %241, label %217, label %221, !llvm.loop !143

242:                                              ; preds = %22
  %243 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %244

244:                                              ; preds = %242, %86
  %245 = phi { ptr, i32 } [ %87, %86 ], [ %243, %242 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %246 unwind label %247

246:                                              ; preds = %244
  resume { ptr, i32 } %245

247:                                              ; preds = %244
  %248 = landingpad { ptr, i32 }
          catch ptr null
  %249 = extractvalue { ptr, i32 } %248, 0
  tail call void @__clang_call_terminate(ptr %249) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  store i32 %11, ptr %12, align 8, !tbaa !103
  %13 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !111
  %17 = load ptr, ptr %14, align 8, !tbaa !109
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %29, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %21, 384307168202282325
  br i1 %24, label %25, label %27, !prof !39

25:                                               ; preds = %23
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %26 unwind label %85

26:                                               ; preds = %25
  unreachable

27:                                               ; preds = %23
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %20) #22
          to label %29 unwind label %85

29:                                               ; preds = %27, %2
  %30 = phi ptr [ null, %2 ], [ %28, %27 ]
  store ptr %30, ptr %13, align 8, !tbaa !109
  %31 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %31, align 8, !tbaa !111
  %32 = getelementptr inbounds %"class.dealii::Point.22", ptr %30, i64 %21
  %33 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !110
  %34 = load ptr, ptr %14, align 8, !tbaa !40
  %35 = load ptr, ptr %15, align 8, !tbaa !40
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %29, %37
  %38 = phi ptr [ %48, %37 ], [ %30, %29 ]
  %39 = phi ptr [ %47, %37 ], [ %34, %29 ]
  %40 = load double, ptr %39, align 8, !tbaa !33
  store double %40, ptr %38, align 8, !tbaa !33
  %41 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 1
  %42 = load double, ptr %41, align 8, !tbaa !33
  %43 = getelementptr inbounds [3 x double], ptr %38, i64 0, i64 1
  store double %42, ptr %43, align 8, !tbaa !33
  %44 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 2
  %45 = load double, ptr %44, align 8, !tbaa !33
  %46 = getelementptr inbounds [3 x double], ptr %38, i64 0, i64 2
  store double %45, ptr %46, align 8, !tbaa !33
  %47 = getelementptr inbounds %"class.dealii::Point.22", ptr %39, i64 1
  %48 = getelementptr inbounds %"class.dealii::Point.22", ptr %38, i64 1
  %49 = icmp eq ptr %47, %35
  br i1 %49, label %50, label %37

50:                                               ; preds = %37, %29
  %51 = phi ptr [ %30, %29 ], [ %48, %37 ]
  store ptr %51, ptr %31, align 8, !tbaa !111
  %52 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %53 = load ptr, ptr %4, align 8, !tbaa !38
  %54 = load ptr, ptr %3, align 8, !tbaa !36
  %55 = ptrtoint ptr %53 to i64
  %56 = ptrtoint ptr %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %52, i8 0, i64 24, i1 false)
  %59 = icmp eq ptr %53, %54
  br i1 %59, label %66, label %60

60:                                               ; preds = %50
  %61 = icmp ugt i64 %57, 9223372036854775800
  br i1 %61, label %62, label %64, !prof !39

62:                                               ; preds = %60
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %63 unwind label %87

63:                                               ; preds = %62
  unreachable

64:                                               ; preds = %60
  %65 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %57) #22
          to label %66 unwind label %87

66:                                               ; preds = %64, %50
  %67 = phi ptr [ null, %50 ], [ %65, %64 ]
  store ptr %67, ptr %52, align 8, !tbaa !36
  %68 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %67, ptr %68, align 8, !tbaa !38
  %69 = getelementptr inbounds double, ptr %67, i64 %58
  %70 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %69, ptr %70, align 8, !tbaa !37
  %71 = load ptr, ptr %3, align 8, !tbaa !40
  %72 = load ptr, ptr %4, align 8, !tbaa !40
  %73 = ptrtoint ptr %72 to i64
  %74 = ptrtoint ptr %71 to i64
  %75 = sub i64 %73, %74
  %76 = icmp sgt i64 %75, 8
  br i1 %76, label %77, label %78, !prof !45

77:                                               ; preds = %66
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %67, ptr align 8 %71, i64 %75, i1 false)
  br label %82

78:                                               ; preds = %66
  %79 = icmp eq i64 %75, 8
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = load double, ptr %71, align 8, !tbaa !33
  store double %81, ptr %67, align 8, !tbaa !33
  br label %82

82:                                               ; preds = %80, %78, %77
  %83 = ashr exact i64 %75, 3
  %84 = getelementptr inbounds double, ptr %67, i64 %83
  store ptr %84, ptr %68, align 8, !tbaa !38
  ret void

85:                                               ; preds = %27, %25
  %86 = landingpad { ptr, i32 }
          cleanup
  br label %92

87:                                               ; preds = %64, %62
  %88 = landingpad { ptr, i32 }
          cleanup
  %89 = load ptr, ptr %13, align 8, !tbaa !109
  %90 = icmp eq ptr %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZdlPv(ptr noundef nonnull %89) #23
  br label %92

92:                                               ; preds = %91, %87, %85
  %93 = phi { ptr, i32 } [ %86, %85 ], [ %88, %87 ], [ %88, %91 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %94 unwind label %95

94:                                               ; preds = %92
  resume { ptr, i32 } %93

95:                                               ; preds = %92
  %96 = landingpad { ptr, i32 }
          catch ptr null
  %97 = extractvalue { ptr, i32 } %96, 0
  tail call void @__clang_call_terminate(ptr %97) #24
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi3EE4sizeEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !38
  %5 = load ptr, ptr %2, align 8, !tbaa !36
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !111
  %7 = load ptr, ptr %1, align 8, !tbaa !109
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = trunc i64 %11 to i32
  store i32 %12, ptr %4, align 8, !tbaa !103
  %13 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %14 = icmp eq ptr %6, %7
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = icmp ugt i64 %11, 384307168202282325
  br i1 %16, label %17, label %19, !prof !39

17:                                               ; preds = %15
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %18 unwind label %78

18:                                               ; preds = %17
  unreachable

19:                                               ; preds = %15
  %20 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
          to label %21 unwind label %78

21:                                               ; preds = %19, %3
  %22 = phi ptr [ null, %3 ], [ %20, %19 ]
  store ptr %22, ptr %13, align 8, !tbaa !109
  %23 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !111
  %24 = getelementptr inbounds %"class.dealii::Point.22", ptr %22, i64 %11
  %25 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !110
  %26 = load ptr, ptr %1, align 8, !tbaa !40
  %27 = load ptr, ptr %5, align 8, !tbaa !40
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %42, label %29

29:                                               ; preds = %21, %29
  %30 = phi ptr [ %40, %29 ], [ %22, %21 ]
  %31 = phi ptr [ %39, %29 ], [ %26, %21 ]
  %32 = load double, ptr %31, align 8, !tbaa !33
  store double %32, ptr %30, align 8, !tbaa !33
  %33 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 1
  %34 = load double, ptr %33, align 8, !tbaa !33
  %35 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
  store double %34, ptr %35, align 8, !tbaa !33
  %36 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 2
  %37 = load double, ptr %36, align 8, !tbaa !33
  %38 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 2
  store double %37, ptr %38, align 8, !tbaa !33
  %39 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 1
  %40 = getelementptr inbounds %"class.dealii::Point.22", ptr %30, i64 1
  %41 = icmp eq ptr %39, %27
  br i1 %41, label %42, label %29

42:                                               ; preds = %29, %21
  %43 = phi ptr [ %22, %21 ], [ %40, %29 ]
  store ptr %43, ptr %23, align 8, !tbaa !111
  %44 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !38
  %47 = load ptr, ptr %2, align 8, !tbaa !36
  %48 = ptrtoint ptr %46 to i64
  %49 = ptrtoint ptr %47 to i64
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %44, i8 0, i64 24, i1 false)
  %52 = icmp eq ptr %46, %47
  br i1 %52, label %59, label %53

53:                                               ; preds = %42
  %54 = icmp ugt i64 %50, 9223372036854775800
  br i1 %54, label %55, label %57, !prof !39

55:                                               ; preds = %53
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %56 unwind label %80

56:                                               ; preds = %55
  unreachable

57:                                               ; preds = %53
  %58 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %50) #22
          to label %59 unwind label %80

59:                                               ; preds = %57, %42
  %60 = phi ptr [ null, %42 ], [ %58, %57 ]
  store ptr %60, ptr %44, align 8, !tbaa !36
  %61 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %60, ptr %61, align 8, !tbaa !38
  %62 = getelementptr inbounds double, ptr %60, i64 %51
  %63 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %62, ptr %63, align 8, !tbaa !37
  %64 = load ptr, ptr %2, align 8, !tbaa !40
  %65 = load ptr, ptr %45, align 8, !tbaa !40
  %66 = ptrtoint ptr %65 to i64
  %67 = ptrtoint ptr %64 to i64
  %68 = sub i64 %66, %67
  %69 = icmp sgt i64 %68, 8
  br i1 %69, label %70, label %71, !prof !45

70:                                               ; preds = %59
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %60, ptr align 8 %64, i64 %68, i1 false)
  br label %75

71:                                               ; preds = %59
  %72 = icmp eq i64 %68, 8
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = load double, ptr %64, align 8, !tbaa !33
  store double %74, ptr %60, align 8, !tbaa !33
  br label %75

75:                                               ; preds = %73, %71, %70
  %76 = ashr exact i64 %68, 3
  %77 = getelementptr inbounds double, ptr %60, i64 %76
  store ptr %77, ptr %61, align 8, !tbaa !38
  ret void

78:                                               ; preds = %19, %17
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %85

80:                                               ; preds = %57, %55
  %81 = landingpad { ptr, i32 }
          cleanup
  %82 = load ptr, ptr %13, align 8, !tbaa !109
  %83 = icmp eq ptr %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  tail call void @_ZdlPv(ptr noundef nonnull %82) #23
  br label %85

85:                                               ; preds = %84, %80, %78
  %86 = phi { ptr, i32 } [ %79, %78 ], [ %81, %80 ], [ %81, %84 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %87 unwind label %88

87:                                               ; preds = %85
  resume { ptr, i32 } %86

88:                                               ; preds = %85
  %89 = landingpad { ptr, i32 }
          catch ptr null
  %90 = extractvalue { ptr, i32 } %89, 0
  tail call void @__clang_call_terminate(ptr %90) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKSt6vectorINS_5PointILi3EEESaIS4_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !111
  %6 = load ptr, ptr %1, align 8, !tbaa !109
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  store i32 %11, ptr %3, align 8, !tbaa !103
  %12 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %13 = icmp eq ptr %5, %6
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = icmp ugt i64 %10, 384307168202282325
  br i1 %15, label %16, label %18, !prof !39

16:                                               ; preds = %14
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %17 unwind label %97

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %14
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %9) #22
          to label %20 unwind label %97

20:                                               ; preds = %18, %2
  %21 = phi ptr [ null, %2 ], [ %19, %18 ]
  store ptr %21, ptr %12, align 8, !tbaa !109
  %22 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !111
  %23 = getelementptr inbounds %"class.dealii::Point.22", ptr %21, i64 %10
  %24 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !110
  %25 = load ptr, ptr %1, align 8, !tbaa !40
  %26 = load ptr, ptr %4, align 8, !tbaa !40
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %41, label %28

28:                                               ; preds = %20, %28
  %29 = phi ptr [ %39, %28 ], [ %21, %20 ]
  %30 = phi ptr [ %38, %28 ], [ %25, %20 ]
  %31 = load double, ptr %30, align 8, !tbaa !33
  store double %31, ptr %29, align 8, !tbaa !33
  %32 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
  %33 = load double, ptr %32, align 8, !tbaa !33
  %34 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 1
  store double %33, ptr %34, align 8, !tbaa !33
  %35 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 2
  %36 = load double, ptr %35, align 8, !tbaa !33
  %37 = getelementptr inbounds [3 x double], ptr %29, i64 0, i64 2
  store double %36, ptr %37, align 8, !tbaa !33
  %38 = getelementptr inbounds %"class.dealii::Point.22", ptr %30, i64 1
  %39 = getelementptr inbounds %"class.dealii::Point.22", ptr %29, i64 1
  %40 = icmp eq ptr %38, %26
  br i1 %40, label %41, label %28

41:                                               ; preds = %28, %20
  %42 = phi ptr [ %21, %20 ], [ %39, %28 ]
  store ptr %42, ptr %22, align 8, !tbaa !111
  %43 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %44 = load ptr, ptr %4, align 8, !tbaa !111
  %45 = ptrtoint ptr %44 to i64
  %46 = ptrtoint ptr %25 to i64
  %47 = sub i64 %45, %46
  %48 = sdiv exact i64 %47, 24
  %49 = tail call double @strtod(ptr nocapture noundef nonnull @.str, ptr noundef null) #25
  %50 = icmp ugt i64 %48, 1152921504606846975
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.2) #26
          to label %52 unwind label %99

52:                                               ; preds = %51
  unreachable

53:                                               ; preds = %41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %43, i8 0, i64 24, i1 false)
  %54 = icmp eq ptr %44, %25
  br i1 %54, label %94, label %55

55:                                               ; preds = %53
  %56 = shl nuw nsw i64 %48, 3
  %57 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %56) #22
          to label %58 unwind label %99

58:                                               ; preds = %55
  store ptr %57, ptr %43, align 8, !tbaa !36
  %59 = getelementptr inbounds double, ptr %57, i64 %48
  %60 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %59, ptr %60, align 8, !tbaa !37
  %61 = add nsw i64 %48, 2305843009213693951
  %62 = and i64 %61, 2305843009213693951
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %62, 15
  br i1 %64, label %88, label %65

65:                                               ; preds = %58
  %66 = and i64 %63, 4611686018427387888
  %67 = shl i64 %66, 3
  %68 = getelementptr i8, ptr %57, i64 %67
  %69 = insertelement <4 x double> poison, double %49, i64 0
  %70 = shufflevector <4 x double> %69, <4 x double> poison, <4 x i32> zeroinitializer
  %71 = insertelement <4 x double> poison, double %49, i64 0
  %72 = shufflevector <4 x double> %71, <4 x double> poison, <4 x i32> zeroinitializer
  %73 = insertelement <4 x double> poison, double %49, i64 0
  %74 = shufflevector <4 x double> %73, <4 x double> poison, <4 x i32> zeroinitializer
  %75 = insertelement <4 x double> poison, double %49, i64 0
  %76 = shufflevector <4 x double> %75, <4 x double> poison, <4 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %84, %77 ]
  %79 = shl i64 %78, 3
  %80 = getelementptr i8, ptr %57, i64 %79
  store <4 x double> %70, ptr %80, align 8, !tbaa !33
  %81 = getelementptr double, ptr %80, i64 4
  store <4 x double> %72, ptr %81, align 8, !tbaa !33
  %82 = getelementptr double, ptr %80, i64 8
  store <4 x double> %74, ptr %82, align 8, !tbaa !33
  %83 = getelementptr double, ptr %80, i64 12
  store <4 x double> %76, ptr %83, align 8, !tbaa !33
  %84 = add nuw i64 %78, 16
  %85 = icmp eq i64 %84, %66
  br i1 %85, label %86, label %77, !llvm.loop !144

86:                                               ; preds = %77
  %87 = icmp eq i64 %63, %66
  br i1 %87, label %94, label %88

88:                                               ; preds = %58, %86
  %89 = phi ptr [ %57, %58 ], [ %68, %86 ]
  br label %90

90:                                               ; preds = %88, %90
  %91 = phi ptr [ %92, %90 ], [ %89, %88 ]
  store double %49, ptr %91, align 8, !tbaa !33
  %92 = getelementptr inbounds double, ptr %91, i64 1
  %93 = icmp eq ptr %92, %59
  br i1 %93, label %94, label %90, !llvm.loop !145

94:                                               ; preds = %90, %86, %53
  %95 = phi ptr [ null, %53 ], [ %59, %86 ], [ %59, %90 ]
  %96 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %95, ptr %96, align 8, !tbaa !38
  ret void

97:                                               ; preds = %18, %16
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %104

99:                                               ; preds = %55, %51
  %100 = landingpad { ptr, i32 }
          cleanup
  %101 = load ptr, ptr %12, align 8, !tbaa !109
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  tail call void @_ZdlPv(ptr noundef nonnull %101) #23
  br label %104

104:                                              ; preds = %103, %99, %97
  %105 = phi { ptr, i32 } [ %98, %97 ], [ %100, %99 ], [ %100, %103 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %106 unwind label %107

106:                                              ; preds = %104
  resume { ptr, i32 } %105

107:                                              ; preds = %104
  %108 = landingpad { ptr, i32 }
          catch ptr null
  %109 = extractvalue { ptr, i32 } %108, 0
  tail call void @__clang_call_terminate(ptr %109) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EEC2ERKNS_5PointILi3EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EEC5ERKNS_5PointILi3EEE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  store i32 1, ptr %3, align 8, !tbaa !103
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %5 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #22
          to label %6 unwind label %20

6:                                                ; preds = %2
  store ptr %5, ptr %4, align 8, !tbaa !109
  %7 = getelementptr inbounds %"class.dealii::Point.22", ptr %5, i64 1
  %8 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store ptr %7, ptr %8, align 8, !tbaa !110
  %9 = getelementptr inbounds [3 x double], ptr %1, i64 0, i64 2
  %10 = load double, ptr %9, align 8, !tbaa !33
  %11 = load <2 x double>, ptr %1, align 8, !tbaa !33
  store <2 x double> %11, ptr %5, align 8, !tbaa !33
  %12 = getelementptr inbounds [3 x double], ptr %5, i64 0, i64 2
  store double %10, ptr %12, align 8, !tbaa !33
  %13 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store ptr %7, ptr %13, align 8, !tbaa !111
  %14 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  %15 = invoke noalias noundef nonnull dereferenceable(8) ptr @_Znwm(i64 noundef 8) #22
          to label %16 unwind label %22

16:                                               ; preds = %6
  store ptr %15, ptr %14, align 8, !tbaa !36
  %17 = getelementptr inbounds double, ptr %15, i64 1
  %18 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !37
  store double 1.000000e+00, ptr %15, align 8, !tbaa !33
  %19 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %19, align 8, !tbaa !38
  ret void

20:                                               ; preds = %2
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %24

22:                                               ; preds = %6
  %23 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #23
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %26 unwind label %27

26:                                               ; preds = %24
  resume { ptr, i32 } %25

27:                                               ; preds = %24
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = extractvalue { ptr, i32 } %28, 0
  tail call void @__clang_call_terminate(ptr %29) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(128) ptr @_ZN6dealii10QuadratureILi3EEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %5 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIdSaIdEEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %3)
  %6 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %8 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6)
  %9 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = load ptr, ptr %3, align 8, !tbaa !36
  %12 = ptrtoint ptr %10 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 1
  store i32 %16, ptr %17, align 8, !tbaa !103
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii5PointILi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %109, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !40
  %7 = load ptr, ptr %1, align 8, !tbaa !40
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !110
  %14 = load ptr, ptr %0, align 8, !tbaa !40
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 24
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %4
  %21 = icmp ugt i64 %11, 384307168202282325
  br i1 %21, label %22, label %23, !prof !39

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #26
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #22
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %39, label %26

26:                                               ; preds = %23, %26
  %27 = phi ptr [ %37, %26 ], [ %24, %23 ]
  %28 = phi ptr [ %36, %26 ], [ %7, %23 ]
  %29 = load double, ptr %28, align 8, !tbaa !33
  store double %29, ptr %27, align 8, !tbaa !33
  %30 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !33
  %33 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !33
  %35 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !33
  %36 = getelementptr inbounds %"class.dealii::Point.22", ptr %28, i64 1
  %37 = getelementptr inbounds %"class.dealii::Point.22", ptr %27, i64 1
  %38 = icmp eq ptr %36, %6
  br i1 %38, label %39, label %26

39:                                               ; preds = %26, %23
  %40 = icmp eq ptr %14, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %42

42:                                               ; preds = %39, %41
  store ptr %24, ptr %0, align 8, !tbaa !109
  %43 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %11
  store ptr %43, ptr %12, align 8, !tbaa !110
  br label %105

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !111
  %47 = ptrtoint ptr %46 to i64
  %48 = sub i64 %47, %16
  %49 = sdiv exact i64 %48, 24
  %50 = icmp ult i64 %49, %11
  br i1 %50, label %70, label %51

51:                                               ; preds = %44
  %52 = icmp sgt i64 %10, 0
  br i1 %52, label %53, label %105

53:                                               ; preds = %51
  %54 = udiv exact i64 %10, 24
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ %68, %55 ], [ %54, %53 ]
  %57 = phi ptr [ %67, %55 ], [ %14, %53 ]
  %58 = phi ptr [ %66, %55 ], [ %7, %53 ]
  %59 = load double, ptr %58, align 8, !tbaa !33
  store double %59, ptr %57, align 8, !tbaa !33
  %60 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
  %61 = load double, ptr %60, align 8, !tbaa !33
  %62 = getelementptr inbounds [3 x double], ptr %57, i64 0, i64 1
  store double %61, ptr %62, align 8, !tbaa !33
  %63 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
  %64 = load double, ptr %63, align 8, !tbaa !33
  %65 = getelementptr inbounds [3 x double], ptr %57, i64 0, i64 2
  store double %64, ptr %65, align 8, !tbaa !33
  %66 = getelementptr inbounds %"class.dealii::Point.22", ptr %58, i64 1
  %67 = getelementptr inbounds %"class.dealii::Point.22", ptr %57, i64 1
  %68 = add nsw i64 %56, -1
  %69 = icmp ugt i64 %56, 1
  br i1 %69, label %55, label %105

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.dealii::Point.22", ptr %7, i64 %49
  %72 = icmp sgt i64 %48, 0
  br i1 %72, label %73, label %90

73:                                               ; preds = %70
  %74 = udiv exact i64 %48, 24
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ %88, %75 ], [ %74, %73 ]
  %77 = phi ptr [ %87, %75 ], [ %14, %73 ]
  %78 = phi ptr [ %86, %75 ], [ %7, %73 ]
  %79 = load double, ptr %78, align 8, !tbaa !33
  store double %79, ptr %77, align 8, !tbaa !33
  %80 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
  %81 = load double, ptr %80, align 8, !tbaa !33
  %82 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
  store double %81, ptr %82, align 8, !tbaa !33
  %83 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !33
  %85 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 2
  store double %84, ptr %85, align 8, !tbaa !33
  %86 = getelementptr inbounds %"class.dealii::Point.22", ptr %78, i64 1
  %87 = getelementptr inbounds %"class.dealii::Point.22", ptr %77, i64 1
  %88 = add nsw i64 %76, -1
  %89 = icmp ugt i64 %76, 1
  br i1 %89, label %75, label %90

90:                                               ; preds = %75, %70
  %91 = icmp eq ptr %71, %6
  br i1 %91, label %105, label %92

92:                                               ; preds = %90, %92
  %93 = phi ptr [ %103, %92 ], [ %46, %90 ]
  %94 = phi ptr [ %102, %92 ], [ %71, %90 ]
  %95 = load double, ptr %94, align 8, !tbaa !33
  store double %95, ptr %93, align 8, !tbaa !33
  %96 = getelementptr inbounds [3 x double], ptr %94, i64 0, i64 1
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1
  store double %97, ptr %98, align 8, !tbaa !33
  %99 = getelementptr inbounds [3 x double], ptr %94, i64 0, i64 2
  %100 = load double, ptr %99, align 8, !tbaa !33
  %101 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 2
  store double %100, ptr %101, align 8, !tbaa !33
  %102 = getelementptr inbounds %"class.dealii::Point.22", ptr %94, i64 1
  %103 = getelementptr inbounds %"class.dealii::Point.22", ptr %93, i64 1
  %104 = icmp eq ptr %102, %6
  br i1 %104, label %105, label %92

105:                                              ; preds = %55, %92, %51, %90, %42
  %106 = load ptr, ptr %0, align 8, !tbaa !109
  %107 = getelementptr inbounds %"class.dealii::Point.22", ptr %106, i64 %11
  %108 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %107, ptr %108, align 8, !tbaa !111
  br label %109

109:                                              ; preds = %105, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !109
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi3EE5pointEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !109
  %6 = getelementptr inbounds %"class.dealii::Point.22", ptr %5, i64 %4
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi3EE10get_pointsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii10QuadratureILi3EE6weightEj(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr %3, align 8, !tbaa !36
  %6 = getelementptr inbounds double, ptr %5, i64 %4
  %7 = load double, ptr %6, align 8, !tbaa !33
  ret double %7
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi3EE11get_weightsEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QuadratureILi3EE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(128) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !111
  %5 = load ptr, ptr %2, align 8, !tbaa !109
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 24
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !110
  %13 = ptrtoint ptr %12 to i64
  %14 = sub i64 %13, %7
  %15 = sdiv exact i64 %14, 24
  %16 = sub nsw i64 %15, %9
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !37
  %21 = load ptr, ptr %18, align 8, !tbaa !36
  %22 = ptrtoint ptr %20 to i64
  %23 = ptrtoint ptr %21 to i64
  %24 = sub i64 %22, %23
  %25 = trunc i64 %24 to i32
  %26 = and i32 %25, -8
  %27 = add i32 %17, %10
  %28 = mul i32 %27, 24
  %29 = add i32 %26, 48
  %30 = add i32 %29, %28
  ret i32 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  tail call void @_ZN6dealii10QuadratureILi1EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %11)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %12 = load ptr, ptr %4, align 8, !tbaa !38
  %13 = load ptr, ptr %3, align 8, !tbaa !36
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 34359738360
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %2
  %20 = lshr exact i64 %16, 3
  %21 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !31
  %23 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !31
  %25 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !36
  %27 = and i64 %20, 4294967295
  %28 = icmp ult i64 %27, 24
  br i1 %28, label %68, label %29

29:                                               ; preds = %19
  %30 = ptrtoint ptr %26 to i64
  %31 = ptrtoint ptr %24 to i64
  %32 = ptrtoint ptr %22 to i64
  %33 = sub i64 %30, %31
  %34 = icmp ult i64 %33, 64
  %35 = sub i64 %31, %32
  %36 = icmp ult i64 %35, 64
  %37 = or i1 %34, %36
  %38 = sub i64 %15, %31
  %39 = icmp ult i64 %38, 64
  %40 = or i1 %37, %39
  %41 = sub i64 %30, %32
  %42 = icmp ult i64 %41, 64
  %43 = or i1 %40, %42
  %44 = sub i64 %30, %15
  %45 = icmp ult i64 %44, 64
  %46 = or i1 %43, %45
  br i1 %46, label %68, label %47

47:                                               ; preds = %29
  %48 = and i64 %20, 7
  %49 = sub nsw i64 %27, %48
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi i64 [ 0, %47 ], [ %64, %50 ]
  %52 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %51
  %53 = load <4 x double>, ptr %52, align 8, !tbaa !33
  %54 = getelementptr inbounds double, ptr %52, i64 4
  %55 = load <4 x double>, ptr %54, align 8, !tbaa !33
  %56 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %51
  store <4 x double> %53, ptr %56, align 8, !tbaa !33
  %57 = getelementptr inbounds double, ptr %56, i64 4
  store <4 x double> %55, ptr %57, align 8, !tbaa !33
  %58 = getelementptr inbounds double, ptr %13, i64 %51
  %59 = load <4 x double>, ptr %58, align 8, !tbaa !33
  %60 = getelementptr inbounds double, ptr %58, i64 4
  %61 = load <4 x double>, ptr %60, align 8, !tbaa !33
  %62 = getelementptr inbounds double, ptr %26, i64 %51
  store <4 x double> %59, ptr %62, align 8, !tbaa !33
  %63 = getelementptr inbounds double, ptr %62, i64 4
  store <4 x double> %61, ptr %63, align 8, !tbaa !33
  %64 = add nuw i64 %51, 8
  %65 = icmp eq i64 %64, %49
  br i1 %65, label %66, label %50, !llvm.loop !146

66:                                               ; preds = %50
  %67 = icmp eq i64 %48, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %29, %19, %66
  %69 = phi i64 [ 0, %29 ], [ 0, %19 ], [ %49, %66 ]
  %70 = sub nsw i64 %20, %69
  %71 = add nsw i64 %69, 1
  %72 = and i64 %70, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %69
  %76 = load double, ptr %75, align 8, !tbaa !33
  %77 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %69
  store double %76, ptr %77, align 8, !tbaa !33
  %78 = getelementptr inbounds double, ptr %13, i64 %69
  %79 = load double, ptr %78, align 8, !tbaa !33
  %80 = add nuw nsw i64 %69, 1
  %81 = getelementptr inbounds double, ptr %26, i64 %69
  store double %79, ptr %81, align 8, !tbaa !33
  br label %82

82:                                               ; preds = %74, %68
  %83 = phi i64 [ %69, %68 ], [ %80, %74 ]
  %84 = icmp eq i64 %27, %71
  br i1 %84, label %85, label %86

85:                                               ; preds = %82, %86, %66, %2
  ret void

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %100, %86 ], [ %83, %82 ]
  %88 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %87
  %89 = load double, ptr %88, align 8, !tbaa !33
  %90 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %87
  store double %89, ptr %90, align 8, !tbaa !33
  %91 = getelementptr inbounds double, ptr %13, i64 %87
  %92 = load double, ptr %91, align 8, !tbaa !33
  %93 = add nuw nsw i64 %87, 1
  %94 = getelementptr inbounds double, ptr %26, i64 %87
  store double %92, ptr %94, align 8, !tbaa !33
  %95 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %93
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %93
  store double %96, ptr %97, align 8, !tbaa !33
  %98 = getelementptr inbounds double, ptr %13, i64 %93
  %99 = load double, ptr %98, align 8, !tbaa !33
  %100 = add nuw nsw i64 %87, 2
  %101 = getelementptr inbounds double, ptr %26, i64 %93
  store double %99, ptr %101, align 8, !tbaa !33
  %102 = icmp eq i64 %100, %27
  br i1 %102, label %85, label %86, !llvm.loop !147
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEES5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEES5_) align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = load ptr, ptr %13, align 8, !tbaa !36
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = mul i32 %21, %12
  tail call void @_ZN6dealii10QuadratureILi1EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %22)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %23 = load ptr, ptr %14, align 8, !tbaa !38
  %24 = load ptr, ptr %13, align 8, !tbaa !36
  %25 = ptrtoint ptr %23 to i64
  %26 = ptrtoint ptr %24 to i64
  %27 = sub i64 %25, %26
  %28 = lshr exact i64 %27, 3
  %29 = and i64 %27, 34359738360
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %113, label %31

31:                                               ; preds = %3
  %32 = load ptr, ptr %5, align 8, !tbaa !38
  %33 = load ptr, ptr %4, align 8, !tbaa !36
  %34 = ptrtoint ptr %32 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  %37 = and i64 %36, 34359738360
  %38 = icmp eq i64 %37, 0
  %39 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8
  br i1 %38, label %113, label %47

47:                                               ; preds = %31
  %48 = lshr exact i64 %36, 3
  %49 = and i64 %28, 4294967295
  %50 = and i64 %48, 4294967295
  %51 = and i64 %48, 1
  %52 = icmp eq i64 %50, 1
  %53 = sub nsw i64 %50, %51
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %47, %109
  %56 = phi i64 [ 0, %47 ], [ %111, %109 ]
  %57 = phi i32 [ 0, %47 ], [ %110, %109 ]
  %58 = getelementptr inbounds %"class.dealii::Point", ptr %44, i64 %56
  %59 = getelementptr inbounds double, ptr %24, i64 %56
  br i1 %52, label %92, label %60

60:                                               ; preds = %55, %60
  %61 = phi i64 [ %89, %60 ], [ 0, %55 ]
  %62 = phi i32 [ %87, %60 ], [ %57, %55 ]
  %63 = phi i64 [ %90, %60 ], [ 0, %55 ]
  %64 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %61
  %65 = load double, ptr %64, align 8, !tbaa !33
  %66 = zext i32 %62 to i64
  %67 = getelementptr inbounds %"class.dealii::Point", ptr %42, i64 %66
  store double %65, ptr %67, align 8, !tbaa !33
  %68 = load double, ptr %58, align 8, !tbaa !33
  %69 = getelementptr inbounds [1 x double], ptr %67, i64 0, i64 1
  store double %68, ptr %69, align 8, !tbaa !33
  %70 = getelementptr inbounds double, ptr %33, i64 %61
  %71 = load double, ptr %70, align 8, !tbaa !33
  %72 = load double, ptr %59, align 8, !tbaa !33
  %73 = fmul double %71, %72
  %74 = add i32 %62, 1
  %75 = getelementptr inbounds double, ptr %46, i64 %66
  store double %73, ptr %75, align 8, !tbaa !33
  %76 = or i64 %61, 1
  %77 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !33
  %79 = zext i32 %74 to i64
  %80 = getelementptr inbounds %"class.dealii::Point", ptr %42, i64 %79
  store double %78, ptr %80, align 8, !tbaa !33
  %81 = load double, ptr %58, align 8, !tbaa !33
  %82 = getelementptr inbounds [1 x double], ptr %80, i64 0, i64 1
  store double %81, ptr %82, align 8, !tbaa !33
  %83 = getelementptr inbounds double, ptr %33, i64 %76
  %84 = load double, ptr %83, align 8, !tbaa !33
  %85 = load double, ptr %59, align 8, !tbaa !33
  %86 = fmul double %84, %85
  %87 = add i32 %62, 2
  %88 = getelementptr inbounds double, ptr %46, i64 %79
  store double %86, ptr %88, align 8, !tbaa !33
  %89 = add nuw nsw i64 %61, 2
  %90 = add i64 %63, 2
  %91 = icmp eq i64 %90, %53
  br i1 %91, label %92, label %60

92:                                               ; preds = %60, %55
  %93 = phi i32 [ undef, %55 ], [ %87, %60 ]
  %94 = phi i64 [ 0, %55 ], [ %89, %60 ]
  %95 = phi i32 [ %57, %55 ], [ %87, %60 ]
  br i1 %54, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %94
  %98 = load double, ptr %97, align 8, !tbaa !33
  %99 = zext i32 %95 to i64
  %100 = getelementptr inbounds %"class.dealii::Point", ptr %42, i64 %99
  store double %98, ptr %100, align 8, !tbaa !33
  %101 = load double, ptr %58, align 8, !tbaa !33
  %102 = getelementptr inbounds [1 x double], ptr %100, i64 0, i64 1
  store double %101, ptr %102, align 8, !tbaa !33
  %103 = getelementptr inbounds double, ptr %33, i64 %94
  %104 = load double, ptr %103, align 8, !tbaa !33
  %105 = load double, ptr %59, align 8, !tbaa !33
  %106 = fmul double %104, %105
  %107 = add i32 %95, 1
  %108 = getelementptr inbounds double, ptr %46, i64 %99
  store double %106, ptr %108, align 8, !tbaa !33
  br label %109

109:                                              ; preds = %92, %96
  %110 = phi i32 [ %93, %92 ], [ %107, %96 ]
  %111 = add nuw nsw i64 %56, 1
  %112 = icmp eq i64 %111, %49
  br i1 %112, label %113, label %55

113:                                              ; preds = %109, %31, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi1EEC2ERKNS_10QuadratureILi1EEES5_S5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi1EEC5ERKNS_10QuadratureILi1EEES5_S5_) align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = load ptr, ptr %14, align 8, !tbaa !36
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = mul i32 %22, %13
  %24 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %25 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !38
  %27 = load ptr, ptr %24, align 8, !tbaa !36
  %28 = ptrtoint ptr %26 to i64
  %29 = ptrtoint ptr %27 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 3
  %32 = trunc i64 %31 to i32
  %33 = mul i32 %23, %32
  tail call void @_ZN6dealii10QuadratureILi1EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %33)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %34 = load ptr, ptr %25, align 8, !tbaa !38
  %35 = load ptr, ptr %24, align 8, !tbaa !36
  %36 = ptrtoint ptr %34 to i64
  %37 = ptrtoint ptr %35 to i64
  %38 = sub i64 %36, %37
  %39 = lshr exact i64 %38, 3
  %40 = and i64 %38, 34359738360
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %4
  %43 = load ptr, ptr %15, align 8, !tbaa !38
  %44 = load ptr, ptr %14, align 8, !tbaa !36
  %45 = ptrtoint ptr %43 to i64
  %46 = ptrtoint ptr %44 to i64
  %47 = sub i64 %45, %46
  %48 = and i64 %47, 34359738360
  %49 = icmp eq i64 %48, 0
  %50 = load ptr, ptr %6, align 8
  %51 = load ptr, ptr %5, align 8
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %56 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %59 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %60 = and i64 %54, 34359738360
  %61 = icmp eq i64 %60, 0
  %62 = select i1 %49, i1 true, i1 %61
  br i1 %62, label %111, label %63

63:                                               ; preds = %42
  %64 = lshr exact i64 %54, 3
  %65 = lshr exact i64 %47, 3
  %66 = and i64 %39, 4294967295
  %67 = and i64 %65, 4294967295
  %68 = and i64 %64, 4294967295
  br label %69

69:                                               ; preds = %63, %108
  %70 = phi i64 [ 0, %63 ], [ %109, %108 ]
  %71 = phi i32 [ 0, %63 ], [ %101, %108 ]
  %72 = load ptr, ptr %55, align 8
  %73 = load ptr, ptr %56, align 8
  %74 = load ptr, ptr %57, align 8
  %75 = load ptr, ptr %58, align 8
  %76 = getelementptr inbounds %"class.dealii::Point", ptr %75, i64 %70
  %77 = getelementptr inbounds double, ptr %35, i64 %70
  %78 = load ptr, ptr %59, align 8
  br label %79

79:                                               ; preds = %105, %69
  %80 = phi i64 [ %106, %105 ], [ 0, %69 ]
  %81 = phi i32 [ %101, %105 ], [ %71, %69 ]
  %82 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %80
  %83 = getelementptr inbounds double, ptr %44, i64 %80
  br label %84

84:                                               ; preds = %84, %79
  %85 = phi i64 [ %103, %84 ], [ 0, %79 ]
  %86 = phi i32 [ %101, %84 ], [ %81, %79 ]
  %87 = getelementptr inbounds %"class.dealii::Point", ptr %72, i64 %85
  %88 = load double, ptr %87, align 8, !tbaa !33
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"class.dealii::Point", ptr %73, i64 %89
  store double %88, ptr %90, align 8, !tbaa !33
  %91 = load double, ptr %82, align 8, !tbaa !33
  %92 = getelementptr inbounds [1 x double], ptr %90, i64 0, i64 1
  store double %91, ptr %92, align 8, !tbaa !33
  %93 = load double, ptr %76, align 8, !tbaa !33
  %94 = getelementptr inbounds [1 x double], ptr %90, i64 0, i64 2
  store double %93, ptr %94, align 8, !tbaa !33
  %95 = getelementptr inbounds double, ptr %51, i64 %85
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = load double, ptr %83, align 8, !tbaa !33
  %98 = load double, ptr %77, align 8, !tbaa !33
  %99 = fmul double %96, %97
  %100 = fmul double %99, %98
  %101 = add i32 %86, 1
  %102 = getelementptr inbounds double, ptr %78, i64 %89
  store double %100, ptr %102, align 8, !tbaa !33
  %103 = add nuw nsw i64 %85, 1
  %104 = icmp eq i64 %103, %68
  br i1 %104, label %105, label %84

105:                                              ; preds = %84
  %106 = add nuw nsw i64 %80, 1
  %107 = icmp eq i64 %106, %67
  br i1 %107, label %108, label %79

108:                                              ; preds = %105
  %109 = add nuw nsw i64 %70, 1
  %110 = icmp eq i64 %109, %66
  br i1 %110, label %111, label %69

111:                                              ; preds = %108, %42, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  tail call void @_ZN6dealii10QuadratureILi2EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %11)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %12 = load ptr, ptr %4, align 8, !tbaa !38
  %13 = load ptr, ptr %3, align 8, !tbaa !36
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 34359738360
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %2
  %20 = lshr exact i64 %16, 3
  %21 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !31
  %23 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !64
  %25 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !36
  %27 = and i64 %20, 4294967295
  %28 = icmp ult i64 %27, 36
  br i1 %28, label %97, label %29

29:                                               ; preds = %19
  %30 = shl nuw nsw i64 %27, 4
  %31 = add nsw i64 %30, -8
  %32 = getelementptr i8, ptr %24, i64 %31
  %33 = getelementptr i8, ptr %26, i64 %17
  %34 = getelementptr i8, ptr %22, i64 %17
  %35 = getelementptr i8, ptr %13, i64 %17
  %36 = icmp ult ptr %24, %33
  %37 = icmp ult ptr %26, %32
  %38 = and i1 %36, %37
  %39 = icmp ult ptr %24, %34
  %40 = icmp ult ptr %22, %32
  %41 = and i1 %39, %40
  %42 = or i1 %38, %41
  %43 = icmp ult ptr %24, %35
  %44 = icmp ult ptr %13, %32
  %45 = and i1 %43, %44
  %46 = or i1 %42, %45
  %47 = icmp ult ptr %26, %34
  %48 = icmp ult ptr %22, %33
  %49 = and i1 %47, %48
  %50 = or i1 %46, %49
  %51 = icmp ult ptr %26, %35
  %52 = icmp ult ptr %13, %33
  %53 = and i1 %51, %52
  %54 = or i1 %50, %53
  br i1 %54, label %97, label %55

55:                                               ; preds = %29
  %56 = and i64 %20, 7
  %57 = sub nsw i64 %27, %56
  br label %58

58:                                               ; preds = %58, %55
  %59 = phi i64 [ 0, %55 ], [ %93, %58 ]
  %60 = or i64 %59, 1
  %61 = or i64 %59, 2
  %62 = or i64 %59, 3
  %63 = or i64 %59, 4
  %64 = or i64 %59, 5
  %65 = or i64 %59, 6
  %66 = or i64 %59, 7
  %67 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %59
  %68 = load <4 x double>, ptr %67, align 8, !tbaa !33, !alias.scope !148
  %69 = getelementptr inbounds double, ptr %67, i64 4
  %70 = load <4 x double>, ptr %69, align 8, !tbaa !33, !alias.scope !148
  %71 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %59
  %72 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %60
  %73 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %61
  %74 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %62
  %75 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %63
  %76 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %64
  %77 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %65
  %78 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %66
  %79 = extractelement <4 x double> %68, i64 0
  store double %79, ptr %71, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %80 = extractelement <4 x double> %68, i64 1
  store double %80, ptr %72, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %81 = extractelement <4 x double> %68, i64 2
  store double %81, ptr %73, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %82 = extractelement <4 x double> %68, i64 3
  store double %82, ptr %74, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %83 = extractelement <4 x double> %70, i64 0
  store double %83, ptr %75, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %84 = extractelement <4 x double> %70, i64 1
  store double %84, ptr %76, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %85 = extractelement <4 x double> %70, i64 2
  store double %85, ptr %77, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %86 = extractelement <4 x double> %70, i64 3
  store double %86, ptr %78, align 8, !tbaa !33, !alias.scope !151, !noalias !153
  %87 = getelementptr inbounds double, ptr %13, i64 %59
  %88 = load <4 x double>, ptr %87, align 8, !tbaa !33, !alias.scope !156
  %89 = getelementptr inbounds double, ptr %87, i64 4
  %90 = load <4 x double>, ptr %89, align 8, !tbaa !33, !alias.scope !156
  %91 = getelementptr inbounds double, ptr %26, i64 %59
  store <4 x double> %88, ptr %91, align 8, !tbaa !33, !alias.scope !157, !noalias !158
  %92 = getelementptr inbounds double, ptr %91, i64 4
  store <4 x double> %90, ptr %92, align 8, !tbaa !33, !alias.scope !157, !noalias !158
  %93 = add nuw i64 %59, 8
  %94 = icmp eq i64 %93, %57
  br i1 %94, label %95, label %58, !llvm.loop !159

95:                                               ; preds = %58
  %96 = icmp eq i64 %56, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %29, %19, %95
  %98 = phi i64 [ 0, %29 ], [ 0, %19 ], [ %57, %95 ]
  %99 = sub nsw i64 %20, %98
  %100 = add nsw i64 %98, 1
  %101 = and i64 %99, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %98
  %105 = load double, ptr %104, align 8, !tbaa !33
  %106 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %98
  store double %105, ptr %106, align 8, !tbaa !33
  %107 = getelementptr inbounds double, ptr %13, i64 %98
  %108 = load double, ptr %107, align 8, !tbaa !33
  %109 = add nuw nsw i64 %98, 1
  %110 = getelementptr inbounds double, ptr %26, i64 %98
  store double %108, ptr %110, align 8, !tbaa !33
  br label %111

111:                                              ; preds = %103, %97
  %112 = phi i64 [ %98, %97 ], [ %109, %103 ]
  %113 = icmp eq i64 %27, %100
  br i1 %113, label %114, label %115

114:                                              ; preds = %111, %115, %95, %2
  ret void

115:                                              ; preds = %111, %115
  %116 = phi i64 [ %129, %115 ], [ %112, %111 ]
  %117 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %116
  %118 = load double, ptr %117, align 8, !tbaa !33
  %119 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %116
  store double %118, ptr %119, align 8, !tbaa !33
  %120 = getelementptr inbounds double, ptr %13, i64 %116
  %121 = load double, ptr %120, align 8, !tbaa !33
  %122 = add nuw nsw i64 %116, 1
  %123 = getelementptr inbounds double, ptr %26, i64 %116
  store double %121, ptr %123, align 8, !tbaa !33
  %124 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %122
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %122
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = getelementptr inbounds double, ptr %13, i64 %122
  %128 = load double, ptr %127, align 8, !tbaa !33
  %129 = add nuw nsw i64 %116, 2
  %130 = getelementptr inbounds double, ptr %26, i64 %122
  store double %128, ptr %130, align 8, !tbaa !33
  %131 = icmp eq i64 %129, %27
  br i1 %131, label %114, label %115, !llvm.loop !160
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEES5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEES5_) align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = load ptr, ptr %13, align 8, !tbaa !36
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = mul i32 %21, %12
  tail call void @_ZN6dealii10QuadratureILi2EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %22)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %23 = load ptr, ptr %14, align 8, !tbaa !38
  %24 = load ptr, ptr %13, align 8, !tbaa !36
  %25 = ptrtoint ptr %23 to i64
  %26 = ptrtoint ptr %24 to i64
  %27 = sub i64 %25, %26
  %28 = lshr exact i64 %27, 3
  %29 = and i64 %27, 34359738360
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %219, label %31

31:                                               ; preds = %3
  %32 = load ptr, ptr %5, align 8, !tbaa !38
  %33 = load ptr, ptr %4, align 8, !tbaa !36
  %34 = ptrtoint ptr %32 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  %37 = and i64 %36, 34359738360
  %38 = icmp eq i64 %37, 0
  %39 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8
  br i1 %38, label %219, label %47

47:                                               ; preds = %31
  %48 = lshr exact i64 %36, 3
  %49 = and i64 %28, 4294967295
  %50 = and i64 %48, 4294967295
  %51 = add nsw i64 %50, -1
  %52 = getelementptr i8, ptr %42, i64 8
  %53 = getelementptr i8, ptr %40, i64 %37
  %54 = shl nuw nsw i64 %50, 4
  %55 = getelementptr i8, ptr %42, i64 %54
  %56 = getelementptr i8, ptr %46, i64 %37
  %57 = getelementptr i8, ptr %33, i64 %37
  %58 = icmp ult i64 %50, 48
  %59 = trunc i64 %51 to i32
  %60 = icmp ugt i64 %51, 4294967295
  %61 = shl nsw i64 %51, 4
  %62 = shl nsw i64 %51, 4
  %63 = and i64 %48, 3
  %64 = sub nsw i64 %50, %63
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i64 %63, 0
  br label %67

67:                                               ; preds = %47, %215
  %68 = phi i64 [ 0, %47 ], [ %217, %215 ]
  %69 = phi i32 [ 0, %47 ], [ %216, %215 ]
  %70 = shl i64 %68, 3
  %71 = getelementptr i8, ptr %44, i64 %70
  %72 = add i64 %70, 8
  %73 = getelementptr i8, ptr %44, i64 %72
  %74 = getelementptr i8, ptr %24, i64 %70
  %75 = getelementptr i8, ptr %24, i64 %72
  %76 = getelementptr inbounds %"class.dealii::Point", ptr %44, i64 %68
  %77 = getelementptr inbounds double, ptr %24, i64 %68
  br i1 %58, label %159, label %78

78:                                               ; preds = %67
  %79 = xor i32 %69, -1
  %80 = icmp ult i32 %79, %59
  %81 = or i1 %80, %60
  %82 = zext i32 %69 to i64
  %83 = shl nuw nsw i64 %82, 4
  %84 = getelementptr i8, ptr %42, i64 %83
  %85 = getelementptr i8, ptr %84, i64 %61
  %86 = icmp ult ptr %85, %84
  %87 = getelementptr i8, ptr %52, i64 %83
  %88 = getelementptr i8, ptr %87, i64 %62
  %89 = icmp ult ptr %88, %87
  %90 = or i1 %86, %81
  %91 = or i1 %89, %90
  br i1 %91, label %159, label %92

92:                                               ; preds = %78
  %93 = zext i32 %69 to i64
  %94 = shl nuw nsw i64 %93, 4
  %95 = getelementptr i8, ptr %42, i64 %94
  %96 = getelementptr i8, ptr %55, i64 %94
  %97 = shl nuw nsw i64 %93, 3
  %98 = getelementptr i8, ptr %46, i64 %97
  %99 = getelementptr i8, ptr %56, i64 %97
  %100 = icmp ult ptr %40, %96
  %101 = icmp ult ptr %95, %53
  %102 = and i1 %100, %101
  %103 = icmp ult ptr %40, %99
  %104 = icmp ult ptr %98, %53
  %105 = and i1 %103, %104
  %106 = or i1 %102, %105
  %107 = icmp ult ptr %71, %96
  %108 = icmp ult ptr %95, %73
  %109 = and i1 %107, %108
  %110 = or i1 %106, %109
  %111 = icmp ult ptr %71, %99
  %112 = icmp ult ptr %98, %73
  %113 = and i1 %111, %112
  %114 = or i1 %110, %113
  %115 = icmp ult ptr %33, %96
  %116 = icmp ult ptr %95, %57
  %117 = and i1 %115, %116
  %118 = or i1 %114, %117
  %119 = icmp ult ptr %33, %99
  %120 = icmp ult ptr %98, %57
  %121 = and i1 %119, %120
  %122 = or i1 %118, %121
  %123 = icmp ult ptr %74, %96
  %124 = icmp ult ptr %95, %75
  %125 = and i1 %123, %124
  %126 = or i1 %122, %125
  %127 = icmp ult ptr %74, %99
  %128 = icmp ult ptr %98, %75
  %129 = and i1 %127, %128
  %130 = or i1 %126, %129
  %131 = icmp ult ptr %95, %99
  %132 = icmp ult ptr %98, %96
  %133 = and i1 %131, %132
  %134 = or i1 %130, %133
  br i1 %134, label %159, label %135

135:                                              ; preds = %92
  %136 = add i32 %69, %65
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %156, %137 ]
  %139 = trunc i64 %138 to i32
  %140 = add i32 %69, %139
  %141 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %138
  %142 = load <4 x double>, ptr %141, align 8, !tbaa !33, !alias.scope !161, !noalias !164
  %143 = zext i32 %140 to i64
  %144 = load double, ptr %76, align 8, !tbaa !33, !alias.scope !167, !noalias !164
  %145 = insertelement <4 x double> poison, double %144, i64 0
  %146 = shufflevector <4 x double> %145, <4 x double> poison, <4 x i32> zeroinitializer
  %147 = getelementptr inbounds %"class.dealii::Point.14", ptr %42, i64 %143
  %148 = shufflevector <4 x double> %142, <4 x double> %146, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %148, ptr %147, align 8, !tbaa !33
  %149 = getelementptr inbounds double, ptr %33, i64 %138
  %150 = load <4 x double>, ptr %149, align 8, !tbaa !33, !alias.scope !169, !noalias !164
  %151 = load double, ptr %77, align 8, !tbaa !33, !alias.scope !171, !noalias !164
  %152 = insertelement <4 x double> poison, double %151, i64 0
  %153 = shufflevector <4 x double> %152, <4 x double> poison, <4 x i32> zeroinitializer
  %154 = fmul <4 x double> %150, %153
  %155 = getelementptr inbounds double, ptr %46, i64 %143
  store <4 x double> %154, ptr %155, align 8, !tbaa !33, !alias.scope !173
  %156 = add nuw i64 %138, 4
  %157 = icmp eq i64 %156, %64
  br i1 %157, label %158, label %137, !llvm.loop !174

158:                                              ; preds = %137
  br i1 %66, label %215, label %159

159:                                              ; preds = %92, %78, %67, %158
  %160 = phi i64 [ 0, %92 ], [ 0, %78 ], [ 0, %67 ], [ %64, %158 ]
  %161 = phi i32 [ %69, %92 ], [ %69, %78 ], [ %69, %67 ], [ %136, %158 ]
  %162 = sub nsw i64 %48, %160
  %163 = add nsw i64 %160, 1
  %164 = and i64 %162, 1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %180, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %160
  %168 = load double, ptr %167, align 8, !tbaa !33
  %169 = zext i32 %161 to i64
  %170 = getelementptr inbounds %"class.dealii::Point.14", ptr %42, i64 %169
  store double %168, ptr %170, align 8, !tbaa !33
  %171 = load double, ptr %76, align 8, !tbaa !33
  %172 = getelementptr inbounds [2 x double], ptr %170, i64 0, i64 1
  store double %171, ptr %172, align 8, !tbaa !33
  %173 = getelementptr inbounds double, ptr %33, i64 %160
  %174 = load double, ptr %173, align 8, !tbaa !33
  %175 = load double, ptr %77, align 8, !tbaa !33
  %176 = fmul double %174, %175
  %177 = add i32 %161, 1
  %178 = getelementptr inbounds double, ptr %46, i64 %169
  store double %176, ptr %178, align 8, !tbaa !33
  %179 = add nuw nsw i64 %160, 1
  br label %180

180:                                              ; preds = %166, %159
  %181 = phi i32 [ undef, %159 ], [ %177, %166 ]
  %182 = phi i64 [ %160, %159 ], [ %179, %166 ]
  %183 = phi i32 [ %161, %159 ], [ %177, %166 ]
  %184 = icmp eq i64 %50, %163
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %185
  %186 = phi i64 [ %213, %185 ], [ %182, %180 ]
  %187 = phi i32 [ %211, %185 ], [ %183, %180 ]
  %188 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %186
  %189 = load double, ptr %188, align 8, !tbaa !33
  %190 = zext i32 %187 to i64
  %191 = getelementptr inbounds %"class.dealii::Point.14", ptr %42, i64 %190
  store double %189, ptr %191, align 8, !tbaa !33
  %192 = load double, ptr %76, align 8, !tbaa !33
  %193 = getelementptr inbounds [2 x double], ptr %191, i64 0, i64 1
  store double %192, ptr %193, align 8, !tbaa !33
  %194 = getelementptr inbounds double, ptr %33, i64 %186
  %195 = load double, ptr %194, align 8, !tbaa !33
  %196 = load double, ptr %77, align 8, !tbaa !33
  %197 = fmul double %195, %196
  %198 = add i32 %187, 1
  %199 = getelementptr inbounds double, ptr %46, i64 %190
  store double %197, ptr %199, align 8, !tbaa !33
  %200 = add nuw nsw i64 %186, 1
  %201 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %200
  %202 = load double, ptr %201, align 8, !tbaa !33
  %203 = zext i32 %198 to i64
  %204 = getelementptr inbounds %"class.dealii::Point.14", ptr %42, i64 %203
  store double %202, ptr %204, align 8, !tbaa !33
  %205 = load double, ptr %76, align 8, !tbaa !33
  %206 = getelementptr inbounds [2 x double], ptr %204, i64 0, i64 1
  store double %205, ptr %206, align 8, !tbaa !33
  %207 = getelementptr inbounds double, ptr %33, i64 %200
  %208 = load double, ptr %207, align 8, !tbaa !33
  %209 = load double, ptr %77, align 8, !tbaa !33
  %210 = fmul double %208, %209
  %211 = add i32 %187, 2
  %212 = getelementptr inbounds double, ptr %46, i64 %203
  store double %210, ptr %212, align 8, !tbaa !33
  %213 = add nuw nsw i64 %186, 2
  %214 = icmp eq i64 %213, %50
  br i1 %214, label %215, label %185, !llvm.loop !175

215:                                              ; preds = %180, %185, %158
  %216 = phi i32 [ %136, %158 ], [ %181, %180 ], [ %211, %185 ]
  %217 = add nuw nsw i64 %68, 1
  %218 = icmp eq i64 %217, %49
  br i1 %218, label %219, label %67

219:                                              ; preds = %215, %31, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi2EEC2ERKNS_10QuadratureILi1EEES5_S5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi2EEC5ERKNS_10QuadratureILi1EEES5_S5_) align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = load ptr, ptr %14, align 8, !tbaa !36
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = mul i32 %22, %13
  %24 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %25 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !38
  %27 = load ptr, ptr %24, align 8, !tbaa !36
  %28 = ptrtoint ptr %26 to i64
  %29 = ptrtoint ptr %27 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 3
  %32 = trunc i64 %31 to i32
  %33 = mul i32 %23, %32
  tail call void @_ZN6dealii10QuadratureILi2EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %33)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %34 = load ptr, ptr %25, align 8, !tbaa !38
  %35 = load ptr, ptr %24, align 8, !tbaa !36
  %36 = ptrtoint ptr %34 to i64
  %37 = ptrtoint ptr %35 to i64
  %38 = sub i64 %36, %37
  %39 = lshr exact i64 %38, 3
  %40 = and i64 %38, 34359738360
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %4
  %43 = load ptr, ptr %15, align 8, !tbaa !38
  %44 = load ptr, ptr %14, align 8, !tbaa !36
  %45 = ptrtoint ptr %43 to i64
  %46 = ptrtoint ptr %44 to i64
  %47 = sub i64 %45, %46
  %48 = and i64 %47, 34359738360
  %49 = icmp eq i64 %48, 0
  %50 = load ptr, ptr %6, align 8
  %51 = load ptr, ptr %5, align 8
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %56 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %59 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %60 = and i64 %54, 34359738360
  %61 = icmp eq i64 %60, 0
  %62 = select i1 %49, i1 true, i1 %61
  br i1 %62, label %111, label %63

63:                                               ; preds = %42
  %64 = lshr exact i64 %54, 3
  %65 = lshr exact i64 %47, 3
  %66 = and i64 %39, 4294967295
  %67 = and i64 %65, 4294967295
  %68 = and i64 %64, 4294967295
  br label %69

69:                                               ; preds = %63, %108
  %70 = phi i64 [ 0, %63 ], [ %109, %108 ]
  %71 = phi i32 [ 0, %63 ], [ %101, %108 ]
  %72 = load ptr, ptr %55, align 8
  %73 = load ptr, ptr %56, align 8
  %74 = load ptr, ptr %57, align 8
  %75 = load ptr, ptr %58, align 8
  %76 = getelementptr inbounds %"class.dealii::Point", ptr %75, i64 %70
  %77 = getelementptr inbounds double, ptr %35, i64 %70
  %78 = load ptr, ptr %59, align 8
  br label %79

79:                                               ; preds = %105, %69
  %80 = phi i64 [ %106, %105 ], [ 0, %69 ]
  %81 = phi i32 [ %101, %105 ], [ %71, %69 ]
  %82 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %80
  %83 = getelementptr inbounds double, ptr %44, i64 %80
  br label %84

84:                                               ; preds = %84, %79
  %85 = phi i64 [ %103, %84 ], [ 0, %79 ]
  %86 = phi i32 [ %101, %84 ], [ %81, %79 ]
  %87 = getelementptr inbounds %"class.dealii::Point", ptr %72, i64 %85
  %88 = load double, ptr %87, align 8, !tbaa !33
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"class.dealii::Point.14", ptr %73, i64 %89
  store double %88, ptr %90, align 8, !tbaa !33
  %91 = load double, ptr %82, align 8, !tbaa !33
  %92 = getelementptr inbounds [2 x double], ptr %90, i64 0, i64 1
  store double %91, ptr %92, align 8, !tbaa !33
  %93 = load double, ptr %76, align 8, !tbaa !33
  %94 = getelementptr inbounds [2 x double], ptr %90, i64 0, i64 2
  store double %93, ptr %94, align 8, !tbaa !33
  %95 = getelementptr inbounds double, ptr %51, i64 %85
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = load double, ptr %83, align 8, !tbaa !33
  %98 = load double, ptr %77, align 8, !tbaa !33
  %99 = fmul double %96, %97
  %100 = fmul double %99, %98
  %101 = add i32 %86, 1
  %102 = getelementptr inbounds double, ptr %78, i64 %89
  store double %100, ptr %102, align 8, !tbaa !33
  %103 = add nuw nsw i64 %85, 1
  %104 = icmp eq i64 %103, %68
  br i1 %104, label %105, label %84

105:                                              ; preds = %84
  %106 = add nuw nsw i64 %80, 1
  %107 = icmp eq i64 %106, %67
  br i1 %107, label %108, label %79

108:                                              ; preds = %105
  %109 = add nuw nsw i64 %70, 1
  %110 = icmp eq i64 %109, %66
  br i1 %110, label %111, label %69

111:                                              ; preds = %108, %42, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEE) align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr %3, align 8, !tbaa !36
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  tail call void @_ZN6dealii10QuadratureILi3EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %11)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %12 = load ptr, ptr %4, align 8, !tbaa !38
  %13 = load ptr, ptr %3, align 8, !tbaa !36
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 34359738360
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %2
  %20 = lshr exact i64 %16, 3
  %21 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !31
  %23 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !109
  %25 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !36
  %27 = and i64 %20, 4294967295
  %28 = icmp ult i64 %27, 40
  br i1 %28, label %97, label %29

29:                                               ; preds = %19
  %30 = mul nuw nsw i64 %27, 24
  %31 = add nsw i64 %30, -16
  %32 = getelementptr i8, ptr %24, i64 %31
  %33 = getelementptr i8, ptr %26, i64 %17
  %34 = getelementptr i8, ptr %22, i64 %17
  %35 = getelementptr i8, ptr %13, i64 %17
  %36 = icmp ult ptr %24, %33
  %37 = icmp ult ptr %26, %32
  %38 = and i1 %36, %37
  %39 = icmp ult ptr %24, %34
  %40 = icmp ult ptr %22, %32
  %41 = and i1 %39, %40
  %42 = or i1 %38, %41
  %43 = icmp ult ptr %24, %35
  %44 = icmp ult ptr %13, %32
  %45 = and i1 %43, %44
  %46 = or i1 %42, %45
  %47 = icmp ult ptr %26, %34
  %48 = icmp ult ptr %22, %33
  %49 = and i1 %47, %48
  %50 = or i1 %46, %49
  %51 = icmp ult ptr %26, %35
  %52 = icmp ult ptr %13, %33
  %53 = and i1 %51, %52
  %54 = or i1 %50, %53
  br i1 %54, label %97, label %55

55:                                               ; preds = %29
  %56 = and i64 %20, 7
  %57 = sub nsw i64 %27, %56
  br label %58

58:                                               ; preds = %58, %55
  %59 = phi i64 [ 0, %55 ], [ %93, %58 ]
  %60 = or i64 %59, 1
  %61 = or i64 %59, 2
  %62 = or i64 %59, 3
  %63 = or i64 %59, 4
  %64 = or i64 %59, 5
  %65 = or i64 %59, 6
  %66 = or i64 %59, 7
  %67 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %59
  %68 = load <4 x double>, ptr %67, align 8, !tbaa !33, !alias.scope !176
  %69 = getelementptr inbounds double, ptr %67, i64 4
  %70 = load <4 x double>, ptr %69, align 8, !tbaa !33, !alias.scope !176
  %71 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %59
  %72 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %60
  %73 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %61
  %74 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %62
  %75 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %63
  %76 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %64
  %77 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %65
  %78 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %66
  %79 = extractelement <4 x double> %68, i64 0
  store double %79, ptr %71, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %80 = extractelement <4 x double> %68, i64 1
  store double %80, ptr %72, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %81 = extractelement <4 x double> %68, i64 2
  store double %81, ptr %73, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %82 = extractelement <4 x double> %68, i64 3
  store double %82, ptr %74, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %83 = extractelement <4 x double> %70, i64 0
  store double %83, ptr %75, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %84 = extractelement <4 x double> %70, i64 1
  store double %84, ptr %76, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %85 = extractelement <4 x double> %70, i64 2
  store double %85, ptr %77, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %86 = extractelement <4 x double> %70, i64 3
  store double %86, ptr %78, align 8, !tbaa !33, !alias.scope !179, !noalias !181
  %87 = getelementptr inbounds double, ptr %13, i64 %59
  %88 = load <4 x double>, ptr %87, align 8, !tbaa !33, !alias.scope !184
  %89 = getelementptr inbounds double, ptr %87, i64 4
  %90 = load <4 x double>, ptr %89, align 8, !tbaa !33, !alias.scope !184
  %91 = getelementptr inbounds double, ptr %26, i64 %59
  store <4 x double> %88, ptr %91, align 8, !tbaa !33, !alias.scope !185, !noalias !186
  %92 = getelementptr inbounds double, ptr %91, i64 4
  store <4 x double> %90, ptr %92, align 8, !tbaa !33, !alias.scope !185, !noalias !186
  %93 = add nuw i64 %59, 8
  %94 = icmp eq i64 %93, %57
  br i1 %94, label %95, label %58, !llvm.loop !187

95:                                               ; preds = %58
  %96 = icmp eq i64 %56, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %29, %19, %95
  %98 = phi i64 [ 0, %29 ], [ 0, %19 ], [ %57, %95 ]
  %99 = sub nsw i64 %20, %98
  %100 = add nsw i64 %98, 1
  %101 = and i64 %99, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %98
  %105 = load double, ptr %104, align 8, !tbaa !33
  %106 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %98
  store double %105, ptr %106, align 8, !tbaa !33
  %107 = getelementptr inbounds double, ptr %13, i64 %98
  %108 = load double, ptr %107, align 8, !tbaa !33
  %109 = add nuw nsw i64 %98, 1
  %110 = getelementptr inbounds double, ptr %26, i64 %98
  store double %108, ptr %110, align 8, !tbaa !33
  br label %111

111:                                              ; preds = %103, %97
  %112 = phi i64 [ %98, %97 ], [ %109, %103 ]
  %113 = icmp eq i64 %27, %100
  br i1 %113, label %114, label %115

114:                                              ; preds = %111, %115, %95, %2
  ret void

115:                                              ; preds = %111, %115
  %116 = phi i64 [ %129, %115 ], [ %112, %111 ]
  %117 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %116
  %118 = load double, ptr %117, align 8, !tbaa !33
  %119 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %116
  store double %118, ptr %119, align 8, !tbaa !33
  %120 = getelementptr inbounds double, ptr %13, i64 %116
  %121 = load double, ptr %120, align 8, !tbaa !33
  %122 = add nuw nsw i64 %116, 1
  %123 = getelementptr inbounds double, ptr %26, i64 %116
  store double %121, ptr %123, align 8, !tbaa !33
  %124 = getelementptr inbounds %"class.dealii::Point", ptr %22, i64 %122
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %122
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = getelementptr inbounds double, ptr %13, i64 %122
  %128 = load double, ptr %127, align 8, !tbaa !33
  %129 = add nuw nsw i64 %116, 2
  %130 = getelementptr inbounds double, ptr %26, i64 %122
  store double %128, ptr %130, align 8, !tbaa !33
  %131 = icmp eq i64 %129, %27
  br i1 %131, label %114, label %115, !llvm.loop !188
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEES5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEES5_) align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = load ptr, ptr %13, align 8, !tbaa !36
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = mul i32 %21, %12
  tail call void @_ZN6dealii10QuadratureILi3EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %22)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %23 = load ptr, ptr %14, align 8, !tbaa !38
  %24 = load ptr, ptr %13, align 8, !tbaa !36
  %25 = ptrtoint ptr %23 to i64
  %26 = ptrtoint ptr %24 to i64
  %27 = sub i64 %25, %26
  %28 = lshr exact i64 %27, 3
  %29 = and i64 %27, 34359738360
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %113, label %31

31:                                               ; preds = %3
  %32 = load ptr, ptr %5, align 8, !tbaa !38
  %33 = load ptr, ptr %4, align 8, !tbaa !36
  %34 = ptrtoint ptr %32 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  %37 = and i64 %36, 34359738360
  %38 = icmp eq i64 %37, 0
  %39 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8
  br i1 %38, label %113, label %47

47:                                               ; preds = %31
  %48 = lshr exact i64 %36, 3
  %49 = and i64 %28, 4294967295
  %50 = and i64 %48, 4294967295
  %51 = and i64 %48, 1
  %52 = icmp eq i64 %50, 1
  %53 = sub nsw i64 %50, %51
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %47, %109
  %56 = phi i64 [ 0, %47 ], [ %111, %109 ]
  %57 = phi i32 [ 0, %47 ], [ %110, %109 ]
  %58 = getelementptr inbounds %"class.dealii::Point", ptr %44, i64 %56
  %59 = getelementptr inbounds double, ptr %24, i64 %56
  br i1 %52, label %92, label %60

60:                                               ; preds = %55, %60
  %61 = phi i64 [ %89, %60 ], [ 0, %55 ]
  %62 = phi i32 [ %87, %60 ], [ %57, %55 ]
  %63 = phi i64 [ %90, %60 ], [ 0, %55 ]
  %64 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %61
  %65 = load double, ptr %64, align 8, !tbaa !33
  %66 = zext i32 %62 to i64
  %67 = getelementptr inbounds %"class.dealii::Point.22", ptr %42, i64 %66
  store double %65, ptr %67, align 8, !tbaa !33
  %68 = load double, ptr %58, align 8, !tbaa !33
  %69 = getelementptr inbounds [3 x double], ptr %67, i64 0, i64 1
  store double %68, ptr %69, align 8, !tbaa !33
  %70 = getelementptr inbounds double, ptr %33, i64 %61
  %71 = load double, ptr %70, align 8, !tbaa !33
  %72 = load double, ptr %59, align 8, !tbaa !33
  %73 = fmul double %71, %72
  %74 = add i32 %62, 1
  %75 = getelementptr inbounds double, ptr %46, i64 %66
  store double %73, ptr %75, align 8, !tbaa !33
  %76 = or i64 %61, 1
  %77 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !33
  %79 = zext i32 %74 to i64
  %80 = getelementptr inbounds %"class.dealii::Point.22", ptr %42, i64 %79
  store double %78, ptr %80, align 8, !tbaa !33
  %81 = load double, ptr %58, align 8, !tbaa !33
  %82 = getelementptr inbounds [3 x double], ptr %80, i64 0, i64 1
  store double %81, ptr %82, align 8, !tbaa !33
  %83 = getelementptr inbounds double, ptr %33, i64 %76
  %84 = load double, ptr %83, align 8, !tbaa !33
  %85 = load double, ptr %59, align 8, !tbaa !33
  %86 = fmul double %84, %85
  %87 = add i32 %62, 2
  %88 = getelementptr inbounds double, ptr %46, i64 %79
  store double %86, ptr %88, align 8, !tbaa !33
  %89 = add nuw nsw i64 %61, 2
  %90 = add i64 %63, 2
  %91 = icmp eq i64 %90, %53
  br i1 %91, label %92, label %60

92:                                               ; preds = %60, %55
  %93 = phi i32 [ undef, %55 ], [ %87, %60 ]
  %94 = phi i64 [ 0, %55 ], [ %89, %60 ]
  %95 = phi i32 [ %57, %55 ], [ %87, %60 ]
  br i1 %54, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %40, i64 %94
  %98 = load double, ptr %97, align 8, !tbaa !33
  %99 = zext i32 %95 to i64
  %100 = getelementptr inbounds %"class.dealii::Point.22", ptr %42, i64 %99
  store double %98, ptr %100, align 8, !tbaa !33
  %101 = load double, ptr %58, align 8, !tbaa !33
  %102 = getelementptr inbounds [3 x double], ptr %100, i64 0, i64 1
  store double %101, ptr %102, align 8, !tbaa !33
  %103 = getelementptr inbounds double, ptr %33, i64 %94
  %104 = load double, ptr %103, align 8, !tbaa !33
  %105 = load double, ptr %59, align 8, !tbaa !33
  %106 = fmul double %104, %105
  %107 = add i32 %95, 1
  %108 = getelementptr inbounds double, ptr %46, i64 %99
  store double %106, ptr %108, align 8, !tbaa !33
  br label %109

109:                                              ; preds = %92, %96
  %110 = phi i32 [ %93, %92 ], [ %107, %96 ]
  %111 = add nuw nsw i64 %56, 1
  %112 = icmp eq i64 %111, %49
  br i1 %112, label %113, label %55

113:                                              ; preds = %109, %31, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12QAnisotropicILi3EEC2ERKNS_10QuadratureILi1EEES5_S5_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat($_ZN6dealii12QAnisotropicILi3EEC5ERKNS_10QuadratureILi1EEES5_S5_) align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = load ptr, ptr %14, align 8, !tbaa !36
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = mul i32 %22, %13
  %24 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %25 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !38
  %27 = load ptr, ptr %24, align 8, !tbaa !36
  %28 = ptrtoint ptr %26 to i64
  %29 = ptrtoint ptr %27 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 3
  %32 = trunc i64 %31 to i32
  %33 = mul i32 %23, %32
  tail call void @_ZN6dealii10QuadratureILi3EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %33)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii12QAnisotropicILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %34 = load ptr, ptr %25, align 8, !tbaa !38
  %35 = load ptr, ptr %24, align 8, !tbaa !36
  %36 = ptrtoint ptr %34 to i64
  %37 = ptrtoint ptr %35 to i64
  %38 = sub i64 %36, %37
  %39 = lshr exact i64 %38, 3
  %40 = and i64 %38, 34359738360
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %262, label %42

42:                                               ; preds = %4
  %43 = load ptr, ptr %15, align 8, !tbaa !38
  %44 = load ptr, ptr %14, align 8, !tbaa !36
  %45 = ptrtoint ptr %43 to i64
  %46 = ptrtoint ptr %44 to i64
  %47 = sub i64 %45, %46
  %48 = and i64 %47, 34359738360
  %49 = icmp eq i64 %48, 0
  %50 = load ptr, ptr %6, align 8
  %51 = load ptr, ptr %5, align 8
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %56 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.dealii::Quadrature", ptr %2, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %59 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %60 = and i64 %54, 34359738360
  %61 = icmp eq i64 %60, 0
  %62 = select i1 %49, i1 true, i1 %61
  br i1 %62, label %262, label %63

63:                                               ; preds = %42
  %64 = lshr exact i64 %54, 3
  %65 = lshr exact i64 %47, 3
  %66 = and i64 %39, 4294967295
  %67 = and i64 %65, 4294967295
  %68 = and i64 %64, 4294967295
  %69 = add nsw i64 %68, -1
  %70 = mul nuw nsw i64 %68, 24
  %71 = getelementptr i8, ptr %51, i64 %60
  %72 = icmp ult i64 %68, 48
  %73 = trunc i64 %69 to i32
  %74 = icmp ugt i64 %69, 4294967295
  %75 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %69, i64 24)
  %76 = extractvalue { i64, i1 } %75, 0
  %77 = extractvalue { i64, i1 } %75, 1
  %78 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %69, i64 24)
  %79 = extractvalue { i64, i1 } %78, 0
  %80 = extractvalue { i64, i1 } %78, 1
  %81 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %69, i64 24)
  %82 = extractvalue { i64, i1 } %81, 0
  %83 = extractvalue { i64, i1 } %81, 1
  %84 = and i64 %64, 3
  %85 = sub nsw i64 %68, %84
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i64 %84, 0
  br label %88

88:                                               ; preds = %63, %259
  %89 = phi i64 [ 0, %63 ], [ %260, %259 ]
  %90 = phi i32 [ 0, %63 ], [ %256, %259 ]
  %91 = shl i64 %89, 3
  %92 = add i64 %91, 8
  %93 = getelementptr i8, ptr %35, i64 %91
  %94 = getelementptr i8, ptr %35, i64 %92
  %95 = load ptr, ptr %55, align 8
  %96 = load ptr, ptr %56, align 8
  %97 = load ptr, ptr %57, align 8
  %98 = load ptr, ptr %58, align 8
  %99 = getelementptr %"class.dealii::Point", ptr %98, i64 %89
  %100 = getelementptr inbounds double, ptr %35, i64 %89
  %101 = load ptr, ptr %59, align 8
  %102 = getelementptr i8, ptr %96, i64 8
  %103 = getelementptr i8, ptr %96, i64 16
  %104 = getelementptr i8, ptr %95, i64 %60
  %105 = getelementptr i8, ptr %96, i64 %70
  %106 = getelementptr i8, ptr %101, i64 %60
  %107 = getelementptr i8, ptr %98, i64 %92
  br label %108

108:                                              ; preds = %255, %88
  %109 = phi i64 [ %257, %255 ], [ 0, %88 ]
  %110 = phi i32 [ %256, %255 ], [ %90, %88 ]
  %111 = shl i64 %109, 3
  %112 = getelementptr i8, ptr %97, i64 %111
  %113 = add i64 %111, 8
  %114 = getelementptr i8, ptr %97, i64 %113
  %115 = getelementptr i8, ptr %44, i64 %111
  %116 = getelementptr i8, ptr %44, i64 %113
  %117 = getelementptr inbounds %"class.dealii::Point", ptr %97, i64 %109
  %118 = getelementptr inbounds double, ptr %44, i64 %109
  br i1 %72, label %231, label %119

119:                                              ; preds = %108
  %120 = xor i32 %110, -1
  %121 = icmp ult i32 %120, %73
  %122 = or i1 %121, %74
  %123 = zext i32 %110 to i64
  %124 = mul nuw nsw i64 %123, 24
  %125 = getelementptr i8, ptr %102, i64 %124
  %126 = getelementptr i8, ptr %125, i64 %76
  %127 = icmp ult ptr %126, %125
  %128 = or i1 %127, %77
  %129 = getelementptr i8, ptr %103, i64 %124
  %130 = getelementptr i8, ptr %129, i64 %79
  %131 = icmp ult ptr %130, %129
  %132 = or i1 %131, %80
  %133 = getelementptr i8, ptr %96, i64 %124
  %134 = getelementptr i8, ptr %133, i64 %82
  %135 = icmp ult ptr %134, %133
  %136 = or i1 %135, %83
  %137 = or i1 %122, %128
  %138 = or i1 %137, %132
  %139 = or i1 %138, %136
  br i1 %139, label %231, label %140

140:                                              ; preds = %119
  %141 = zext i32 %110 to i64
  %142 = mul nuw nsw i64 %141, 24
  %143 = getelementptr i8, ptr %96, i64 %142
  %144 = getelementptr i8, ptr %105, i64 %142
  %145 = shl nuw nsw i64 %141, 3
  %146 = getelementptr i8, ptr %101, i64 %145
  %147 = getelementptr i8, ptr %106, i64 %145
  %148 = icmp ult ptr %95, %144
  %149 = icmp ult ptr %143, %104
  %150 = and i1 %148, %149
  %151 = icmp ult ptr %95, %147
  %152 = icmp ult ptr %146, %104
  %153 = and i1 %151, %152
  %154 = or i1 %150, %153
  %155 = icmp ult ptr %112, %144
  %156 = icmp ult ptr %143, %114
  %157 = and i1 %155, %156
  %158 = or i1 %154, %157
  %159 = icmp ult ptr %112, %147
  %160 = icmp ult ptr %146, %114
  %161 = and i1 %159, %160
  %162 = or i1 %158, %161
  %163 = icmp ult ptr %99, %144
  %164 = icmp ult ptr %143, %107
  %165 = and i1 %163, %164
  %166 = or i1 %162, %165
  %167 = icmp ult ptr %99, %147
  %168 = icmp ult ptr %146, %107
  %169 = and i1 %167, %168
  %170 = or i1 %166, %169
  %171 = icmp ult ptr %51, %144
  %172 = icmp ult ptr %143, %71
  %173 = and i1 %171, %172
  %174 = or i1 %170, %173
  %175 = icmp ult ptr %51, %147
  %176 = icmp ult ptr %146, %71
  %177 = and i1 %175, %176
  %178 = or i1 %174, %177
  %179 = icmp ult ptr %115, %144
  %180 = icmp ult ptr %143, %116
  %181 = and i1 %179, %180
  %182 = or i1 %178, %181
  %183 = icmp ult ptr %115, %147
  %184 = icmp ult ptr %146, %116
  %185 = and i1 %183, %184
  %186 = or i1 %182, %185
  %187 = icmp ult ptr %93, %144
  %188 = icmp ult ptr %143, %94
  %189 = and i1 %187, %188
  %190 = or i1 %186, %189
  %191 = icmp ult ptr %93, %147
  %192 = icmp ult ptr %146, %94
  %193 = and i1 %191, %192
  %194 = or i1 %190, %193
  %195 = icmp ult ptr %143, %147
  %196 = icmp ult ptr %146, %144
  %197 = and i1 %195, %196
  %198 = or i1 %194, %197
  br i1 %198, label %231, label %199

199:                                              ; preds = %140
  %200 = add i32 %110, %86
  br label %201

201:                                              ; preds = %201, %199
  %202 = phi i64 [ 0, %199 ], [ %228, %201 ]
  %203 = trunc i64 %202 to i32
  %204 = add i32 %110, %203
  %205 = getelementptr inbounds %"class.dealii::Point", ptr %95, i64 %202
  %206 = load <4 x double>, ptr %205, align 8, !tbaa !33, !alias.scope !189, !noalias !192
  %207 = zext i32 %204 to i64
  %208 = load double, ptr %117, align 8, !tbaa !33, !alias.scope !195, !noalias !192
  %209 = insertelement <4 x double> poison, double %208, i64 0
  %210 = shufflevector <4 x double> %209, <4 x double> poison, <4 x i32> zeroinitializer
  %211 = load double, ptr %99, align 8, !tbaa !33, !alias.scope !197, !noalias !192
  %212 = insertelement <4 x double> poison, double %211, i64 0
  %213 = getelementptr inbounds %"class.dealii::Point.22", ptr %96, i64 %207
  %214 = shufflevector <4 x double> %206, <4 x double> %210, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %215 = shufflevector <4 x double> %212, <4 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison, i32 poison, i32 poison>
  %216 = shufflevector <8 x double> %214, <8 x double> %215, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  store <12 x double> %216, ptr %213, align 8, !tbaa !33
  %217 = getelementptr inbounds double, ptr %51, i64 %202
  %218 = load <4 x double>, ptr %217, align 8, !tbaa !33, !alias.scope !199, !noalias !192
  %219 = load double, ptr %118, align 8, !tbaa !33, !alias.scope !201, !noalias !192
  %220 = insertelement <4 x double> poison, double %219, i64 0
  %221 = shufflevector <4 x double> %220, <4 x double> poison, <4 x i32> zeroinitializer
  %222 = load double, ptr %100, align 8, !tbaa !33, !alias.scope !203, !noalias !192
  %223 = insertelement <4 x double> poison, double %222, i64 0
  %224 = shufflevector <4 x double> %223, <4 x double> poison, <4 x i32> zeroinitializer
  %225 = fmul <4 x double> %218, %221
  %226 = fmul <4 x double> %225, %224
  %227 = getelementptr inbounds double, ptr %101, i64 %207
  store <4 x double> %226, ptr %227, align 8, !tbaa !33, !alias.scope !205
  %228 = add nuw i64 %202, 4
  %229 = icmp eq i64 %228, %85
  br i1 %229, label %230, label %201, !llvm.loop !206

230:                                              ; preds = %201
  br i1 %87, label %255, label %231

231:                                              ; preds = %140, %119, %108, %230
  %232 = phi i64 [ 0, %140 ], [ 0, %119 ], [ 0, %108 ], [ %85, %230 ]
  %233 = phi i32 [ %110, %140 ], [ %110, %119 ], [ %110, %108 ], [ %200, %230 ]
  br label %234

234:                                              ; preds = %231, %234
  %235 = phi i64 [ %253, %234 ], [ %232, %231 ]
  %236 = phi i32 [ %251, %234 ], [ %233, %231 ]
  %237 = getelementptr inbounds %"class.dealii::Point", ptr %95, i64 %235
  %238 = load double, ptr %237, align 8, !tbaa !33
  %239 = zext i32 %236 to i64
  %240 = getelementptr inbounds %"class.dealii::Point.22", ptr %96, i64 %239
  store double %238, ptr %240, align 8, !tbaa !33
  %241 = load double, ptr %117, align 8, !tbaa !33
  %242 = getelementptr inbounds [3 x double], ptr %240, i64 0, i64 1
  store double %241, ptr %242, align 8, !tbaa !33
  %243 = load double, ptr %99, align 8, !tbaa !33
  %244 = getelementptr inbounds [3 x double], ptr %240, i64 0, i64 2
  store double %243, ptr %244, align 8, !tbaa !33
  %245 = getelementptr inbounds double, ptr %51, i64 %235
  %246 = load double, ptr %245, align 8, !tbaa !33
  %247 = load double, ptr %118, align 8, !tbaa !33
  %248 = load double, ptr %100, align 8, !tbaa !33
  %249 = fmul double %246, %247
  %250 = fmul double %249, %248
  %251 = add i32 %236, 1
  %252 = getelementptr inbounds double, ptr %101, i64 %239
  store double %250, ptr %252, align 8, !tbaa !33
  %253 = add nuw nsw i64 %235, 1
  %254 = icmp eq i64 %253, %68
  br i1 %254, label %255, label %234, !llvm.loop !207

255:                                              ; preds = %234, %230
  %256 = phi i32 [ %200, %230 ], [ %251, %234 ]
  %257 = add nuw nsw i64 %109, 1
  %258 = icmp eq i64 %257, %67
  br i1 %258, label %259, label %108

259:                                              ; preds = %255
  %260 = add nuw nsw i64 %89, 1
  %261 = icmp eq i64 %260, %66
  br i1 %261, label %262, label %88

262:                                              ; preds = %259, %42, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii9QIteratedILi2EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii9QIteratedILi2EEC5ERKNS_10QuadratureILi1EEEj) align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::QIterated.26", align 8
  %5 = alloca %"class.dealii::QIterated.26", align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %4) #25
  call void @_ZN6dealii9QIteratedILi1EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2)
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %5) #25
  invoke void @_ZN6dealii9QIteratedILi1EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %5, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2)
          to label %6 unwind label %29

6:                                                ; preds = %3
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKNS0_ILi1EEES4_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %7 unwind label %31

7:                                                ; preds = %6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdlPv(ptr noundef nonnull %9) #23
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %5, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !31
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %17

17:                                               ; preds = %16, %12
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
          to label %18 unwind label %29

18:                                               ; preds = %17
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !5
  %19 = getelementptr inbounds %"class.dealii::Quadrature", ptr %4, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !36
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  call void @_ZdlPv(ptr noundef nonnull %20) #23
  br label %23

23:                                               ; preds = %22, %18
  %24 = getelementptr inbounds %"class.dealii::Quadrature", ptr %4, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !31
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  call void @_ZdlPv(ptr noundef nonnull %25) #23
  br label %28

28:                                               ; preds = %23, %27
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %4) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9QIteratedILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  ret void

29:                                               ; preds = %17, %3
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %33

31:                                               ; preds = %6
  %32 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii10QuadratureILi1EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %33 unwind label %36

33:                                               ; preds = %31, %29
  %34 = phi { ptr, i32 } [ %30, %29 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #25
  invoke void @_ZN6dealii10QuadratureILi1EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %4)
          to label %35 unwind label %36

35:                                               ; preds = %33
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %4) #25
  resume { ptr, i32 } %34

36:                                               ; preds = %33, %31
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  call void @__clang_call_terminate(ptr %38) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii9QIteratedILi3EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii9QIteratedILi3EEC5ERKNS_10QuadratureILi1EEEj) align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::QIterated", align 8
  %5 = alloca %"class.dealii::QIterated.26", align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %4) #25
  call void @_ZN6dealii9QIteratedILi2EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2)
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %5) #25
  invoke void @_ZN6dealii9QIteratedILi1EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %5, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2)
          to label %6 unwind label %29

6:                                                ; preds = %3
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKNS0_ILi2EEERKNS0_ILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %7 unwind label %31

7:                                                ; preds = %6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdlPv(ptr noundef nonnull %9) #23
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %5, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !31
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %17

17:                                               ; preds = %16, %12
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
          to label %18 unwind label %29

18:                                               ; preds = %17
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !5
  %19 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !36
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  call void @_ZdlPv(ptr noundef nonnull %20) #23
  br label %23

23:                                               ; preds = %22, %18
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !64
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  call void @_ZdlPv(ptr noundef nonnull %25) #23
  br label %28

28:                                               ; preds = %23, %27
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %4) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9QIteratedILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  ret void

29:                                               ; preds = %17, %3
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %33

31:                                               ; preds = %6
  %32 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii10QuadratureILi1EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %33 unwind label %36

33:                                               ; preds = %31, %29
  %34 = phi { ptr, i32 } [ %30, %29 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #25
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %4)
          to label %35 unwind label %36

35:                                               ; preds = %33
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %4) #25
  resume { ptr, i32 } %34

36:                                               ; preds = %33, %31
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  call void @__clang_call_terminate(ptr %38) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE15project_to_faceERKNS_10QuadratureILi0EEEj(ptr noalias sret(%"class.dealii::Quadrature") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %22

16:                                               ; preds = %3
  %17 = shl nuw nsw i64 %13, 3
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %4, align 8, !tbaa !31
  %19 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !32
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  br label %22

22:                                               ; preds = %16, %15
  %23 = phi ptr [ null, %15 ], [ %21, %16 ]
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !35
  invoke void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %25 unwind label %30

25:                                               ; preds = %22
  %26 = load ptr, ptr %4, align 8, !tbaa !31
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @_ZdlPv(ptr noundef nonnull %26) #23
  br label %29

29:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

30:                                               ; preds = %22
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = load ptr, ptr %4, align 8, !tbaa !31
  %33 = icmp eq ptr %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  call void @_ZdlPv(ptr noundef nonnull %32) #23
  br label %35

35:                                               ; preds = %34, %30
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %31
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi1EE15project_to_faceERKNS_10QuadratureILi0EEEjRSt6vectorINS_5PointILi1EEESaIS8_EE(ptr nocapture noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1, ptr nocapture noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi0EE11get_weightsEv(ptr noundef nonnull readnone align 8 dereferenceable(128) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 3
  ret ptr %2
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE18project_to_subfaceERKNS_10QuadratureILi0EEEjjRKNS_14RefinementCaseILi0EEE(ptr noalias sret(%"class.dealii::Quadrature") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 1 %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::vector", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %7 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %24

18:                                               ; preds = %5
  %19 = shl nuw nsw i64 %15, 3
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %6, align 8, !tbaa !31
  %21 = getelementptr inbounds %"class.dealii::Point", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !32
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi ptr [ null, %17 ], [ %23, %18 ]
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !35
  invoke void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %27 unwind label %32

27:                                               ; preds = %24
  %28 = load ptr, ptr %6, align 8, !tbaa !31
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef nonnull %28) #23
  br label %31

31:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  ret void

32:                                               ; preds = %24
  %33 = landingpad { ptr, i32 }
          cleanup
  %34 = load ptr, ptr %6, align 8, !tbaa !31
  %35 = icmp eq ptr %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  call void @_ZdlPv(ptr noundef nonnull %34) #23
  br label %37

37:                                               ; preds = %36, %32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  resume { ptr, i32 } %33
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi1EE18project_to_subfaceERKNS_10QuadratureILi0EEEjjRSt6vectorINS_5PointILi1EEESaIS8_EERKNS_14RefinementCaseILi0EEE(ptr nocapture noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef nonnull align 8 dereferenceable(24) %3, ptr nocapture noundef nonnull align 1 %4) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE16project_to_childERKNS_10QuadratureILi1EEEj(ptr noalias sret(%"class.dealii::Quadrature") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector", align 8
  %5 = alloca %"class.std::vector.3", align 8
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !40
  %9 = load ptr, ptr %6, align 8, !tbaa !40
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %23

17:                                               ; preds = %3
  %18 = shl nuw nsw i64 %14, 3
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !31
  %20 = getelementptr inbounds %"class.dealii::Point", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !32
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  br label %23

23:                                               ; preds = %17, %16
  %24 = phi ptr [ null, %16 ], [ %19, %17 ]
  %25 = phi ptr [ null, %16 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !35
  %27 = and i64 %12, 34359738360
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %98, label %29

29:                                               ; preds = %23
  %30 = ptrtoint ptr %24 to i64
  %31 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !31
  %33 = uitofp i32 %2 to double
  %34 = and i64 %13, 4294967295
  %35 = icmp ult i64 %34, 16
  %36 = ptrtoint ptr %32 to i64
  %37 = sub i64 %30, %36
  %38 = icmp ult i64 %37, 128
  %39 = select i1 %35, i1 true, i1 %38
  br i1 %39, label %77, label %40

40:                                               ; preds = %29
  %41 = and i64 %13, 15
  %42 = sub nsw i64 %34, %41
  %43 = insertelement <4 x double> poison, double %33, i64 0
  %44 = shufflevector <4 x double> %43, <4 x double> poison, <4 x i32> zeroinitializer
  %45 = insertelement <4 x double> poison, double %33, i64 0
  %46 = shufflevector <4 x double> %45, <4 x double> poison, <4 x i32> zeroinitializer
  %47 = insertelement <4 x double> poison, double %33, i64 0
  %48 = shufflevector <4 x double> %47, <4 x double> poison, <4 x i32> zeroinitializer
  %49 = insertelement <4 x double> poison, double %33, i64 0
  %50 = shufflevector <4 x double> %49, <4 x double> poison, <4 x i32> zeroinitializer
  br label %51

51:                                               ; preds = %51, %40
  %52 = phi i64 [ 0, %40 ], [ %73, %51 ]
  %53 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %52
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !33, !noalias !208
  %55 = getelementptr inbounds double, ptr %53, i64 4
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !33, !noalias !208
  %57 = getelementptr inbounds double, ptr %53, i64 8
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !33, !noalias !208
  %59 = getelementptr inbounds double, ptr %53, i64 12
  %60 = load <4 x double>, ptr %59, align 8, !tbaa !33, !noalias !208
  %61 = fadd <4 x double> %54, %44
  %62 = fadd <4 x double> %56, %46
  %63 = fadd <4 x double> %58, %48
  %64 = fadd <4 x double> %60, %50
  %65 = fmul <4 x double> %61, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %66 = fmul <4 x double> %62, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %67 = fmul <4 x double> %63, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %68 = fmul <4 x double> %64, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %69 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %52
  store <4 x double> %65, ptr %69, align 8, !tbaa !33
  %70 = getelementptr inbounds double, ptr %69, i64 4
  store <4 x double> %66, ptr %70, align 8, !tbaa !33
  %71 = getelementptr inbounds double, ptr %69, i64 8
  store <4 x double> %67, ptr %71, align 8, !tbaa !33
  %72 = getelementptr inbounds double, ptr %69, i64 12
  store <4 x double> %68, ptr %72, align 8, !tbaa !33
  %73 = add nuw i64 %52, 16
  %74 = icmp eq i64 %73, %42
  br i1 %74, label %75, label %51, !llvm.loop !213

75:                                               ; preds = %51
  %76 = icmp eq i64 %41, 0
  br i1 %76, label %98, label %77

77:                                               ; preds = %29, %75
  %78 = phi i64 [ 0, %29 ], [ %42, %75 ]
  %79 = sub nsw i64 %13, %78
  %80 = xor i64 %78, -1
  %81 = add nsw i64 %34, %80
  %82 = and i64 %79, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %77, %84
  %85 = phi i64 [ %92, %84 ], [ %78, %77 ]
  %86 = phi i64 [ %93, %84 ], [ 0, %77 ]
  %87 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %85
  %88 = load double, ptr %87, align 8, !tbaa !33, !noalias !208
  %89 = fadd double %88, %33
  %90 = fmul double %89, 5.000000e-01
  %91 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %85
  store double %90, ptr %91, align 8, !tbaa !33
  %92 = add nuw nsw i64 %85, 1
  %93 = add i64 %86, 1
  %94 = icmp eq i64 %93, %82
  br i1 %94, label %95, label %84, !llvm.loop !214

95:                                               ; preds = %84, %77
  %96 = phi i64 [ %78, %77 ], [ %92, %84 ]
  %97 = icmp ult i64 %81, 3
  br i1 %97, label %98, label %146

98:                                               ; preds = %95, %146, %75, %23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %99 = ashr exact i64 %12, 3
  %100 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %100, align 8
  %101 = icmp eq ptr %8, %9
  br i1 %101, label %108, label %102

102:                                              ; preds = %98
  %103 = icmp ugt i64 %12, 9223372036854775800
  br i1 %103, label %104, label %106, !prof !39

104:                                              ; preds = %102
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %105 unwind label %174

105:                                              ; preds = %104
  unreachable

106:                                              ; preds = %102
  %107 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #22
          to label %108 unwind label %174

108:                                              ; preds = %106, %98
  %109 = phi ptr [ null, %98 ], [ %107, %106 ]
  store ptr %109, ptr %5, align 8, !tbaa !36
  %110 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %111 = getelementptr inbounds double, ptr %109, i64 %99
  %112 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %111, ptr %112, align 8, !tbaa !37
  %113 = icmp sgt i64 %12, 8
  br i1 %113, label %114, label %115, !prof !45

114:                                              ; preds = %108
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %109, ptr align 8 %9, i64 %12, i1 false)
  br label %119

115:                                              ; preds = %108
  %116 = icmp eq i64 %12, 8
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = load double, ptr %9, align 8, !tbaa !33
  store double %118, ptr %109, align 8, !tbaa !33
  store ptr %111, ptr %110, align 8, !tbaa !38
  br label %120

119:                                              ; preds = %114, %115
  store ptr %111, ptr %110, align 8, !tbaa !38
  br i1 %28, label %173, label %120

120:                                              ; preds = %117, %119
  %121 = and i64 %13, 4294967295
  %122 = icmp ult i64 %121, 16
  br i1 %122, label %144, label %123

123:                                              ; preds = %120
  %124 = and i64 %13, 15
  %125 = sub nsw i64 %121, %124
  br label %126

126:                                              ; preds = %126, %123
  %127 = phi i64 [ 0, %123 ], [ %140, %126 ]
  %128 = getelementptr inbounds double, ptr %109, i64 %127
  %129 = load <4 x double>, ptr %128, align 8, !tbaa !33
  %130 = getelementptr inbounds double, ptr %128, i64 4
  %131 = load <4 x double>, ptr %130, align 8, !tbaa !33
  %132 = getelementptr inbounds double, ptr %128, i64 8
  %133 = load <4 x double>, ptr %132, align 8, !tbaa !33
  %134 = getelementptr inbounds double, ptr %128, i64 12
  %135 = load <4 x double>, ptr %134, align 8, !tbaa !33
  %136 = fmul <4 x double> %129, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %137 = fmul <4 x double> %131, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %138 = fmul <4 x double> %133, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %139 = fmul <4 x double> %135, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  store <4 x double> %136, ptr %128, align 8, !tbaa !33
  store <4 x double> %137, ptr %130, align 8, !tbaa !33
  store <4 x double> %138, ptr %132, align 8, !tbaa !33
  store <4 x double> %139, ptr %134, align 8, !tbaa !33
  %140 = add nuw i64 %127, 16
  %141 = icmp eq i64 %140, %125
  br i1 %141, label %142, label %126, !llvm.loop !216

142:                                              ; preds = %126
  %143 = icmp eq i64 %124, 0
  br i1 %143, label %173, label %144

144:                                              ; preds = %120, %142
  %145 = phi i64 [ 0, %120 ], [ %125, %142 ]
  br label %176

146:                                              ; preds = %95, %146
  %147 = phi i64 [ %171, %146 ], [ %96, %95 ]
  %148 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %147
  %149 = load double, ptr %148, align 8, !tbaa !33, !noalias !208
  %150 = fadd double %149, %33
  %151 = fmul double %150, 5.000000e-01
  %152 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %147
  store double %151, ptr %152, align 8, !tbaa !33
  %153 = add nuw nsw i64 %147, 1
  %154 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %153
  %155 = load double, ptr %154, align 8, !tbaa !33, !noalias !208
  %156 = fadd double %155, %33
  %157 = fmul double %156, 5.000000e-01
  %158 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %153
  store double %157, ptr %158, align 8, !tbaa !33
  %159 = add nuw nsw i64 %147, 2
  %160 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %159
  %161 = load double, ptr %160, align 8, !tbaa !33, !noalias !208
  %162 = fadd double %161, %33
  %163 = fmul double %162, 5.000000e-01
  %164 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %159
  store double %163, ptr %164, align 8, !tbaa !33
  %165 = add nuw nsw i64 %147, 3
  %166 = getelementptr inbounds %"class.dealii::Point", ptr %32, i64 %165
  %167 = load double, ptr %166, align 8, !tbaa !33, !noalias !208
  %168 = fadd double %167, %33
  %169 = fmul double %168, 5.000000e-01
  %170 = getelementptr inbounds %"class.dealii::Point", ptr %24, i64 %165
  store double %169, ptr %170, align 8, !tbaa !33
  %171 = add nuw nsw i64 %147, 4
  %172 = icmp eq i64 %171, %34
  br i1 %172, label %98, label %146, !llvm.loop !217

173:                                              ; preds = %176, %142, %119
  invoke void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %183 unwind label %187

174:                                              ; preds = %106, %104
  %175 = landingpad { ptr, i32 }
          cleanup
  br label %197

176:                                              ; preds = %144, %176
  %177 = phi i64 [ %181, %176 ], [ %145, %144 ]
  %178 = getelementptr inbounds double, ptr %109, i64 %177
  %179 = load double, ptr %178, align 8, !tbaa !33
  %180 = fmul double %179, 5.000000e-01
  store double %180, ptr %178, align 8, !tbaa !33
  %181 = add nuw nsw i64 %177, 1
  %182 = icmp eq i64 %181, %121
  br i1 %182, label %173, label %176, !llvm.loop !218

183:                                              ; preds = %173
  %184 = load ptr, ptr %5, align 8, !tbaa !36
  %185 = icmp eq ptr %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %183
  call void @_ZdlPv(ptr noundef nonnull %184) #23
  br label %192

187:                                              ; preds = %173
  %188 = landingpad { ptr, i32 }
          cleanup
  %189 = load ptr, ptr %5, align 8, !tbaa !36
  %190 = icmp eq ptr %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187
  call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %197

192:                                              ; preds = %186, %183
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %193 = load ptr, ptr %4, align 8, !tbaa !31
  %194 = icmp eq ptr %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %192
  call void @_ZdlPv(ptr noundef nonnull %193) #23
  br label %196

196:                                              ; preds = %192, %195
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

197:                                              ; preds = %191, %187, %174
  %198 = phi { ptr, i32 } [ %175, %174 ], [ %188, %187 ], [ %188, %191 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %199 = load ptr, ptr %4, align 8, !tbaa !31
  %200 = icmp eq ptr %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  call void @_ZdlPv(ptr noundef nonnull %199) #23
  br label %202

202:                                              ; preds = %201, %197
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %198
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi1EEES9_(ptr noalias sret(%"class.dealii::Quadrature") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(8) %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::vector.3", align 8
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %29

18:                                               ; preds = %4
  %19 = shl nuw nsw i64 %15, 3
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %5, align 8, !tbaa !31
  %21 = getelementptr inbounds %"class.dealii::Point", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !32
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<1>, std::allocator<dealii::Point<1> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !35
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %25 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
          to label %26 unwind label %113

26:                                               ; preds = %18
  store ptr %25, ptr %6, align 8, !tbaa !36
  %27 = getelementptr inbounds double, ptr %25, i64 %15
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %25, i8 0, i64 %19, i1 false), !tbaa !33
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi ptr [ null, %17 ], [ %25, %26 ]
  %31 = phi ptr [ null, %17 ], [ %20, %26 ]
  %32 = phi ptr [ null, %17 ], [ %27, %26 ]
  %33 = ptrtoint ptr %30 to i64
  %34 = ptrtoint ptr %31 to i64
  %35 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %32, ptr %35, align 8, !tbaa !38
  %36 = load double, ptr %2, align 8, !tbaa !33
  %37 = load double, ptr %3, align 8, !tbaa !33
  %38 = fsub double %36, %37
  %39 = tail call double @llvm.fmuladd.f64(double %38, double %38, double 0.000000e+00)
  %40 = tail call double @llvm.sqrt.f64(double %39)
  %41 = and i64 %13, 34359738360
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %112, label %43

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !31
  %46 = and i64 %14, 4294967295
  %47 = icmp ult i64 %46, 12
  br i1 %47, label %90, label %48

48:                                               ; preds = %43
  %49 = ptrtoint ptr %45 to i64
  %50 = sub i64 %33, %34
  %51 = icmp ult i64 %50, 32
  %52 = sub i64 %34, %49
  %53 = icmp ult i64 %52, 32
  %54 = or i1 %51, %53
  %55 = sub i64 %12, %34
  %56 = icmp ult i64 %55, 32
  %57 = or i1 %54, %56
  %58 = sub i64 %33, %49
  %59 = icmp ult i64 %58, 32
  %60 = or i1 %57, %59
  %61 = sub i64 %33, %12
  %62 = icmp ult i64 %61, 32
  %63 = or i1 %60, %62
  br i1 %63, label %90, label %64

64:                                               ; preds = %48
  %65 = and i64 %14, 3
  %66 = sub nsw i64 %46, %65
  %67 = insertelement <4 x double> poison, double %37, i64 0
  %68 = shufflevector <4 x double> %67, <4 x double> poison, <4 x i32> zeroinitializer
  %69 = insertelement <4 x double> poison, double %36, i64 0
  %70 = shufflevector <4 x double> %69, <4 x double> poison, <4 x i32> zeroinitializer
  %71 = insertelement <4 x double> poison, double %40, i64 0
  %72 = shufflevector <4 x double> %71, <4 x double> poison, <4 x i32> zeroinitializer
  br label %73

73:                                               ; preds = %73, %64
  %74 = phi i64 [ 0, %64 ], [ %86, %73 ]
  %75 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %74
  %76 = load <4 x double>, ptr %75, align 8, !tbaa !33
  %77 = fmul <4 x double> %76, %68
  %78 = getelementptr inbounds %"class.dealii::Point", ptr %31, i64 %74
  %79 = fsub <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %76
  %80 = fmul <4 x double> %79, %70
  %81 = fadd <4 x double> %77, %80
  store <4 x double> %81, ptr %78, align 8, !tbaa !33
  %82 = getelementptr inbounds double, ptr %10, i64 %74
  %83 = load <4 x double>, ptr %82, align 8, !tbaa !33
  %84 = fmul <4 x double> %72, %83
  %85 = getelementptr inbounds double, ptr %30, i64 %74
  store <4 x double> %84, ptr %85, align 8, !tbaa !33
  %86 = add nuw i64 %74, 4
  %87 = icmp eq i64 %86, %66
  br i1 %87, label %88, label %73, !llvm.loop !219

88:                                               ; preds = %73
  %89 = icmp eq i64 %65, 0
  br i1 %89, label %112, label %90

90:                                               ; preds = %48, %43, %88
  %91 = phi i64 [ 0, %48 ], [ 0, %43 ], [ %66, %88 ]
  %92 = sub nsw i64 %14, %91
  %93 = add nsw i64 %91, 1
  %94 = and i64 %92, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %91
  %98 = load double, ptr %97, align 8, !tbaa !33
  %99 = fmul double %98, %37
  %100 = getelementptr inbounds %"class.dealii::Point", ptr %31, i64 %91
  %101 = fsub double 1.000000e+00, %98
  %102 = fmul double %101, %36
  %103 = fadd double %99, %102
  store double %103, ptr %100, align 8, !tbaa !33
  %104 = getelementptr inbounds double, ptr %10, i64 %91
  %105 = load double, ptr %104, align 8, !tbaa !33
  %106 = fmul double %40, %105
  %107 = getelementptr inbounds double, ptr %30, i64 %91
  store double %106, ptr %107, align 8, !tbaa !33
  %108 = add nuw nsw i64 %91, 1
  br label %109

109:                                              ; preds = %96, %90
  %110 = phi i64 [ %91, %90 ], [ %108, %96 ]
  %111 = icmp eq i64 %15, %93
  br i1 %111, label %112, label %119

112:                                              ; preds = %109, %119, %88, %29
  invoke void @_ZN6dealii10QuadratureILi1EEC2ERKSt6vectorINS_5PointILi1EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %146 unwind label %115

113:                                              ; preds = %18
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %156

115:                                              ; preds = %112
  %116 = landingpad { ptr, i32 }
          cleanup
  %117 = load ptr, ptr %6, align 8, !tbaa !36
  %118 = icmp eq ptr %117, null
  br i1 %118, label %156, label %150

119:                                              ; preds = %109, %119
  %120 = phi i64 [ %144, %119 ], [ %110, %109 ]
  %121 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !33
  %123 = fmul double %122, %37
  %124 = getelementptr inbounds %"class.dealii::Point", ptr %31, i64 %120
  %125 = fsub double 1.000000e+00, %122
  %126 = fmul double %125, %36
  %127 = fadd double %123, %126
  store double %127, ptr %124, align 8, !tbaa !33
  %128 = getelementptr inbounds double, ptr %10, i64 %120
  %129 = load double, ptr %128, align 8, !tbaa !33
  %130 = fmul double %40, %129
  %131 = getelementptr inbounds double, ptr %30, i64 %120
  store double %130, ptr %131, align 8, !tbaa !33
  %132 = add nuw nsw i64 %120, 1
  %133 = getelementptr inbounds %"class.dealii::Point", ptr %45, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !33
  %135 = fmul double %134, %37
  %136 = getelementptr inbounds %"class.dealii::Point", ptr %31, i64 %132
  %137 = fsub double 1.000000e+00, %134
  %138 = fmul double %137, %36
  %139 = fadd double %135, %138
  store double %139, ptr %136, align 8, !tbaa !33
  %140 = getelementptr inbounds double, ptr %10, i64 %132
  %141 = load double, ptr %140, align 8, !tbaa !33
  %142 = fmul double %40, %141
  %143 = getelementptr inbounds double, ptr %30, i64 %132
  store double %142, ptr %143, align 8, !tbaa !33
  %144 = add nuw nsw i64 %120, 2
  %145 = icmp eq i64 %144, %46
  br i1 %145, label %112, label %119, !llvm.loop !220

146:                                              ; preds = %112
  %147 = load ptr, ptr %6, align 8, !tbaa !36
  %148 = icmp eq ptr %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  call void @_ZdlPv(ptr noundef nonnull %147) #23
  br label %151

150:                                              ; preds = %115
  call void @_ZdlPv(ptr noundef nonnull %117) #23
  br label %156

151:                                              ; preds = %149, %146
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %152 = load ptr, ptr %5, align 8, !tbaa !31
  %153 = icmp eq ptr %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @_ZdlPv(ptr noundef nonnull %152) #23
  br label %155

155:                                              ; preds = %151, %154
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  ret void

156:                                              ; preds = %150, %115, %113
  %157 = phi { ptr, i32 } [ %114, %113 ], [ %116, %115 ], [ %116, %150 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %158 = load ptr, ptr %5, align 8, !tbaa !31
  %159 = icmp eq ptr %158, null
  br i1 %159, label %161, label %160

160:                                              ; preds = %156
  call void @_ZdlPv(ptr noundef nonnull %158) #23
  br label %161

161:                                              ; preds = %160, %156
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  resume { ptr, i32 } %157
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC2Ev(ptr noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC5Ev) align 2 {
  store i32 -1, ptr %0, align 4, !tbaa !221
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi1EE17DataSetDescriptor4cellEv() local_unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi1EE17DataSetDescriptor4faceEjbbbj(i32 noundef %0, i1 noundef zeroext %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i32 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = mul i32 %4, %0
  ret i32 %6
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QProjectorILi1EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 4, !tbaa !221
  ret i32 %2
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC2Ej(ptr noundef nonnull align 4 dereferenceable(4) %0, i32 noundef %1) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi1EE17DataSetDescriptorC5Ej) align 2 {
  store i32 %1, ptr %0, align 4, !tbaa !221
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE7reflectERKNS_10QuadratureILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.9", align 8
  %4 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %28

16:                                               ; preds = %2
  %17 = shl nuw nsw i64 %13, 4
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %3, align 8, !tbaa !64
  %19 = getelementptr inbounds %"class.dealii::Point.14", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %23 = shl nuw nsw i64 %13, 3
  %24 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %23) #22
          to label %25 unwind label %104

25:                                               ; preds = %16
  store ptr %24, ptr %4, align 8, !tbaa !36
  %26 = getelementptr inbounds double, ptr %24, i64 %13
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %24, i8 0, i64 %23, i1 false), !tbaa !33
  br label %28

28:                                               ; preds = %25, %15
  %29 = phi ptr [ null, %15 ], [ %24, %25 ]
  %30 = phi ptr [ null, %15 ], [ %18, %25 ]
  %31 = phi ptr [ null, %15 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %31, ptr %32, align 8, !tbaa !38
  %33 = and i64 %11, 34359738360
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %103, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !64
  %38 = and i64 %12, 4294967295
  %39 = icmp ult i64 %38, 26
  br i1 %39, label %83, label %40

40:                                               ; preds = %35
  %41 = shl nuw nsw i64 %38, 4
  %42 = getelementptr i8, ptr %30, i64 %41
  %43 = getelementptr i8, ptr %29, i64 %33
  %44 = getelementptr i8, ptr %37, i64 %41
  %45 = getelementptr i8, ptr %8, i64 %33
  %46 = icmp ult ptr %30, %43
  %47 = icmp ult ptr %29, %42
  %48 = and i1 %46, %47
  %49 = icmp ult ptr %30, %44
  %50 = icmp ult ptr %37, %42
  %51 = and i1 %49, %50
  %52 = or i1 %48, %51
  %53 = icmp ult ptr %30, %45
  %54 = icmp ult ptr %8, %42
  %55 = and i1 %53, %54
  %56 = or i1 %52, %55
  %57 = icmp ult ptr %29, %44
  %58 = icmp ult ptr %37, %43
  %59 = and i1 %57, %58
  %60 = or i1 %56, %59
  %61 = icmp ult ptr %29, %45
  %62 = icmp ult ptr %8, %43
  %63 = and i1 %61, %62
  %64 = or i1 %60, %63
  br i1 %64, label %83, label %65

65:                                               ; preds = %40
  %66 = and i64 %12, 1
  %67 = sub nsw i64 %38, %66
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %79, %68 ]
  %70 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %69
  %71 = load <4 x double>, ptr %70, align 8, !tbaa !33
  %72 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %73 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %74 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %69
  %75 = shufflevector <2 x double> %73, <2 x double> %72, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %75, ptr %74, align 8, !tbaa !33
  %76 = getelementptr inbounds double, ptr %8, i64 %69
  %77 = load <2 x double>, ptr %76, align 8, !tbaa !33, !alias.scope !223
  %78 = getelementptr inbounds double, ptr %29, i64 %69
  store <2 x double> %77, ptr %78, align 8, !tbaa !33, !alias.scope !226, !noalias !228
  %79 = add nuw i64 %69, 2
  %80 = icmp eq i64 %79, %67
  br i1 %80, label %81, label %68, !llvm.loop !230

81:                                               ; preds = %68
  %82 = icmp eq i64 %66, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %40, %35, %81
  %84 = phi i64 [ 0, %40 ], [ 0, %35 ], [ %67, %81 ]
  %85 = sub nsw i64 %12, %84
  %86 = add nsw i64 %84, 1
  %87 = and i64 %85, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %84
  %91 = getelementptr inbounds [2 x double], ptr %90, i64 0, i64 1
  %92 = load double, ptr %91, align 8, !tbaa !33
  %93 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %84
  store double %92, ptr %93, align 8, !tbaa !33
  %94 = load double, ptr %90, align 8, !tbaa !33
  %95 = getelementptr inbounds [2 x double], ptr %93, i64 0, i64 1
  store double %94, ptr %95, align 8, !tbaa !33
  %96 = getelementptr inbounds double, ptr %8, i64 %84
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = getelementptr inbounds double, ptr %29, i64 %84
  store double %97, ptr %98, align 8, !tbaa !33
  %99 = add nuw nsw i64 %84, 1
  br label %100

100:                                              ; preds = %89, %83
  %101 = phi i64 [ %84, %83 ], [ %99, %89 ]
  %102 = icmp eq i64 %13, %86
  br i1 %102, label %103, label %106

103:                                              ; preds = %100, %106, %81, %28
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %129 unwind label %133

104:                                              ; preds = %16
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %143

106:                                              ; preds = %100, %106
  %107 = phi i64 [ %127, %106 ], [ %101, %100 ]
  %108 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %107
  %109 = getelementptr inbounds [2 x double], ptr %108, i64 0, i64 1
  %110 = load double, ptr %109, align 8, !tbaa !33
  %111 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %107
  store double %110, ptr %111, align 8, !tbaa !33
  %112 = load double, ptr %108, align 8, !tbaa !33
  %113 = getelementptr inbounds [2 x double], ptr %111, i64 0, i64 1
  store double %112, ptr %113, align 8, !tbaa !33
  %114 = getelementptr inbounds double, ptr %8, i64 %107
  %115 = load double, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds double, ptr %29, i64 %107
  store double %115, ptr %116, align 8, !tbaa !33
  %117 = add nuw nsw i64 %107, 1
  %118 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %117
  %119 = getelementptr inbounds [2 x double], ptr %118, i64 0, i64 1
  %120 = load double, ptr %119, align 8, !tbaa !33
  %121 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %117
  store double %120, ptr %121, align 8, !tbaa !33
  %122 = load double, ptr %118, align 8, !tbaa !33
  %123 = getelementptr inbounds [2 x double], ptr %121, i64 0, i64 1
  store double %122, ptr %123, align 8, !tbaa !33
  %124 = getelementptr inbounds double, ptr %8, i64 %117
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds double, ptr %29, i64 %117
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = add nuw nsw i64 %107, 2
  %128 = icmp eq i64 %127, %38
  br i1 %128, label %103, label %106, !llvm.loop !231

129:                                              ; preds = %103
  %130 = load ptr, ptr %4, align 8, !tbaa !36
  %131 = icmp eq ptr %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef nonnull %130) #23
  br label %137

133:                                              ; preds = %103
  %134 = landingpad { ptr, i32 }
          cleanup
  %135 = load ptr, ptr %4, align 8, !tbaa !36
  %136 = icmp eq ptr %135, null
  br i1 %136, label %143, label %142

137:                                              ; preds = %132, %129
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %138 = load ptr, ptr %3, align 8, !tbaa !64
  %139 = icmp eq ptr %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZdlPv(ptr noundef nonnull %138) #23
  br label %141

141:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  ret void

142:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef nonnull %135) #23
  br label %143

143:                                              ; preds = %142, %133, %104
  %144 = phi { ptr, i32 } [ %105, %104 ], [ %134, %133 ], [ %134, %142 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %145 = load ptr, ptr %3, align 8, !tbaa !64
  %146 = icmp eq ptr %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @_ZdlPv(ptr noundef nonnull %145) #23
  br label %148

148:                                              ; preds = %147, %143
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  resume { ptr, i32 } %144
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi1EE6rotateERKNS_10QuadratureILi2EEEj(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.9", align 8
  %5 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !38
  %9 = load ptr, ptr %6, align 8, !tbaa !36
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  br label %29

17:                                               ; preds = %3
  %18 = shl nuw nsw i64 %14, 4
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !64
  %20 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  %23 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %24 = shl nuw nsw i64 %14, 3
  %25 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %24) #22
          to label %26 unwind label %411

26:                                               ; preds = %17
  store ptr %25, ptr %5, align 8, !tbaa !36
  %27 = getelementptr inbounds double, ptr %25, i64 %14
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %25, i8 0, i64 %24, i1 false), !tbaa !33
  br label %29

29:                                               ; preds = %26, %16
  %30 = phi ptr [ null, %16 ], [ %25, %26 ]
  %31 = phi ptr [ null, %16 ], [ %19, %26 ]
  %32 = phi ptr [ null, %16 ], [ %27, %26 ]
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !38
  %34 = and i64 %12, 34359738360
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %410, label %36

36:                                               ; preds = %29
  %37 = and i32 %2, 3
  %38 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8
  switch i32 %37, label %409 [
    i32 0, label %246
    i32 1, label %178
    i32 2, label %108
    i32 3, label %40
  ]

40:                                               ; preds = %36
  %41 = and i64 %13, 4294967295
  %42 = icmp ult i64 %41, 24
  br i1 %42, label %87, label %43

43:                                               ; preds = %40
  %44 = shl nuw nsw i64 %41, 4
  %45 = getelementptr i8, ptr %31, i64 %44
  %46 = getelementptr i8, ptr %30, i64 %34
  %47 = getelementptr i8, ptr %39, i64 %44
  %48 = getelementptr i8, ptr %9, i64 %34
  %49 = icmp ult ptr %31, %46
  %50 = icmp ult ptr %30, %45
  %51 = and i1 %49, %50
  %52 = icmp ult ptr %31, %47
  %53 = icmp ult ptr %39, %45
  %54 = and i1 %52, %53
  %55 = or i1 %51, %54
  %56 = icmp ult ptr %31, %48
  %57 = icmp ult ptr %9, %45
  %58 = and i1 %56, %57
  %59 = or i1 %55, %58
  %60 = icmp ult ptr %30, %47
  %61 = icmp ult ptr %39, %46
  %62 = and i1 %60, %61
  %63 = or i1 %59, %62
  %64 = icmp ult ptr %30, %48
  %65 = icmp ult ptr %9, %46
  %66 = and i1 %64, %65
  %67 = or i1 %63, %66
  br i1 %67, label %87, label %68

68:                                               ; preds = %43
  %69 = and i64 %13, 1
  %70 = sub nsw i64 %41, %69
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi i64 [ 0, %68 ], [ %83, %71 ]
  %73 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %72
  %74 = load <4 x double>, ptr %73, align 8, !tbaa !33
  %75 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %76 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %77 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %75
  %78 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %72
  %79 = shufflevector <2 x double> %76, <2 x double> %77, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %79, ptr %78, align 8, !tbaa !33
  %80 = getelementptr inbounds double, ptr %9, i64 %72
  %81 = load <2 x double>, ptr %80, align 8, !tbaa !33, !alias.scope !232
  %82 = getelementptr inbounds double, ptr %30, i64 %72
  store <2 x double> %81, ptr %82, align 8, !tbaa !33, !alias.scope !235, !noalias !237
  %83 = add nuw i64 %72, 2
  %84 = icmp eq i64 %83, %70
  br i1 %84, label %85, label %71, !llvm.loop !239

85:                                               ; preds = %71
  %86 = icmp eq i64 %69, 0
  br i1 %86, label %410, label %87

87:                                               ; preds = %43, %40, %85
  %88 = phi i64 [ 0, %43 ], [ 0, %40 ], [ %70, %85 ]
  %89 = sub nsw i64 %13, %88
  %90 = add nsw i64 %88, 1
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %105, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %88
  %95 = getelementptr inbounds [2 x double], ptr %94, i64 0, i64 1
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %88
  store double %96, ptr %97, align 8, !tbaa !33
  %98 = load double, ptr %94, align 8, !tbaa !33
  %99 = fsub double 1.000000e+00, %98
  %100 = getelementptr inbounds [2 x double], ptr %97, i64 0, i64 1
  store double %99, ptr %100, align 8, !tbaa !33
  %101 = getelementptr inbounds double, ptr %9, i64 %88
  %102 = load double, ptr %101, align 8, !tbaa !33
  %103 = getelementptr inbounds double, ptr %30, i64 %88
  store double %102, ptr %103, align 8, !tbaa !33
  %104 = add nuw nsw i64 %88, 1
  br label %105

105:                                              ; preds = %93, %87
  %106 = phi i64 [ %88, %87 ], [ %104, %93 ]
  %107 = icmp eq i64 %14, %90
  br i1 %107, label %410, label %384

108:                                              ; preds = %36
  %109 = and i64 %13, 4294967295
  %110 = icmp ult i64 %109, 20
  br i1 %110, label %156, label %111

111:                                              ; preds = %108
  %112 = shl nuw nsw i64 %109, 4
  %113 = getelementptr i8, ptr %31, i64 %112
  %114 = getelementptr i8, ptr %30, i64 %34
  %115 = getelementptr i8, ptr %39, i64 %112
  %116 = getelementptr i8, ptr %9, i64 %34
  %117 = icmp ult ptr %31, %114
  %118 = icmp ult ptr %30, %113
  %119 = and i1 %117, %118
  %120 = icmp ult ptr %31, %115
  %121 = icmp ult ptr %39, %113
  %122 = and i1 %120, %121
  %123 = or i1 %119, %122
  %124 = icmp ult ptr %31, %116
  %125 = icmp ult ptr %9, %113
  %126 = and i1 %124, %125
  %127 = or i1 %123, %126
  %128 = icmp ult ptr %30, %115
  %129 = icmp ult ptr %39, %114
  %130 = and i1 %128, %129
  %131 = or i1 %127, %130
  %132 = icmp ult ptr %30, %116
  %133 = icmp ult ptr %9, %114
  %134 = and i1 %132, %133
  %135 = or i1 %131, %134
  br i1 %135, label %156, label %136

136:                                              ; preds = %111
  %137 = and i64 %13, 1
  %138 = sub nsw i64 %109, %137
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i64 [ 0, %136 ], [ %152, %139 ]
  %141 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %140
  %142 = load <4 x double>, ptr %141, align 8, !tbaa !33
  %143 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %144 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %145 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %143
  %146 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %144
  %147 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %140
  %148 = shufflevector <2 x double> %145, <2 x double> %146, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %148, ptr %147, align 8, !tbaa !33
  %149 = getelementptr inbounds double, ptr %9, i64 %140
  %150 = load <2 x double>, ptr %149, align 8, !tbaa !33, !alias.scope !240
  %151 = getelementptr inbounds double, ptr %30, i64 %140
  store <2 x double> %150, ptr %151, align 8, !tbaa !33, !alias.scope !243, !noalias !245
  %152 = add nuw i64 %140, 2
  %153 = icmp eq i64 %152, %138
  br i1 %153, label %154, label %139, !llvm.loop !247

154:                                              ; preds = %139
  %155 = icmp eq i64 %137, 0
  br i1 %155, label %410, label %156

156:                                              ; preds = %111, %108, %154
  %157 = phi i64 [ 0, %111 ], [ 0, %108 ], [ %138, %154 ]
  %158 = sub nsw i64 %13, %157
  %159 = add nsw i64 %157, 1
  %160 = and i64 %158, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %175, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %157
  %164 = load double, ptr %163, align 8, !tbaa !33
  %165 = fsub double 1.000000e+00, %164
  %166 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %157
  store double %165, ptr %166, align 8, !tbaa !33
  %167 = getelementptr inbounds [2 x double], ptr %163, i64 0, i64 1
  %168 = load double, ptr %167, align 8, !tbaa !33
  %169 = fsub double 1.000000e+00, %168
  %170 = getelementptr inbounds [2 x double], ptr %166, i64 0, i64 1
  store double %169, ptr %170, align 8, !tbaa !33
  %171 = getelementptr inbounds double, ptr %9, i64 %157
  %172 = load double, ptr %171, align 8, !tbaa !33
  %173 = getelementptr inbounds double, ptr %30, i64 %157
  store double %172, ptr %173, align 8, !tbaa !33
  %174 = add nuw nsw i64 %157, 1
  br label %175

175:                                              ; preds = %162, %156
  %176 = phi i64 [ %157, %156 ], [ %174, %162 ]
  %177 = icmp eq i64 %14, %159
  br i1 %177, label %410, label %357

178:                                              ; preds = %36
  %179 = and i64 %13, 4294967295
  %180 = icmp ult i64 %179, 24
  br i1 %180, label %225, label %181

181:                                              ; preds = %178
  %182 = shl nuw nsw i64 %179, 4
  %183 = getelementptr i8, ptr %31, i64 %182
  %184 = getelementptr i8, ptr %30, i64 %34
  %185 = getelementptr i8, ptr %39, i64 %182
  %186 = getelementptr i8, ptr %9, i64 %34
  %187 = icmp ult ptr %31, %184
  %188 = icmp ult ptr %30, %183
  %189 = and i1 %187, %188
  %190 = icmp ult ptr %31, %185
  %191 = icmp ult ptr %39, %183
  %192 = and i1 %190, %191
  %193 = or i1 %189, %192
  %194 = icmp ult ptr %31, %186
  %195 = icmp ult ptr %9, %183
  %196 = and i1 %194, %195
  %197 = or i1 %193, %196
  %198 = icmp ult ptr %30, %185
  %199 = icmp ult ptr %39, %184
  %200 = and i1 %198, %199
  %201 = or i1 %197, %200
  %202 = icmp ult ptr %30, %186
  %203 = icmp ult ptr %9, %184
  %204 = and i1 %202, %203
  %205 = or i1 %201, %204
  br i1 %205, label %225, label %206

206:                                              ; preds = %181
  %207 = and i64 %13, 1
  %208 = sub nsw i64 %179, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %221, %209 ]
  %211 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %210
  %212 = load <4 x double>, ptr %211, align 8, !tbaa !33
  %213 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %214 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %215 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %214
  %216 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %210
  %217 = shufflevector <2 x double> %215, <2 x double> %213, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %217, ptr %216, align 8, !tbaa !33
  %218 = getelementptr inbounds double, ptr %9, i64 %210
  %219 = load <2 x double>, ptr %218, align 8, !tbaa !33, !alias.scope !248
  %220 = getelementptr inbounds double, ptr %30, i64 %210
  store <2 x double> %219, ptr %220, align 8, !tbaa !33, !alias.scope !251, !noalias !253
  %221 = add nuw i64 %210, 2
  %222 = icmp eq i64 %221, %208
  br i1 %222, label %223, label %209, !llvm.loop !255

223:                                              ; preds = %209
  %224 = icmp eq i64 %207, 0
  br i1 %224, label %410, label %225

225:                                              ; preds = %181, %178, %223
  %226 = phi i64 [ 0, %181 ], [ 0, %178 ], [ %208, %223 ]
  %227 = sub nsw i64 %13, %226
  %228 = add nsw i64 %226, 1
  %229 = and i64 %227, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %226
  %233 = getelementptr inbounds [2 x double], ptr %232, i64 0, i64 1
  %234 = load double, ptr %233, align 8, !tbaa !33
  %235 = fsub double 1.000000e+00, %234
  %236 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %226
  store double %235, ptr %236, align 8, !tbaa !33
  %237 = load double, ptr %232, align 8, !tbaa !33
  %238 = getelementptr inbounds [2 x double], ptr %236, i64 0, i64 1
  store double %237, ptr %238, align 8, !tbaa !33
  %239 = getelementptr inbounds double, ptr %9, i64 %226
  %240 = load double, ptr %239, align 8, !tbaa !33
  %241 = getelementptr inbounds double, ptr %30, i64 %226
  store double %240, ptr %241, align 8, !tbaa !33
  %242 = add nuw nsw i64 %226, 1
  br label %243

243:                                              ; preds = %231, %225
  %244 = phi i64 [ %226, %225 ], [ %242, %231 ]
  %245 = icmp eq i64 %14, %228
  br i1 %245, label %410, label %332

246:                                              ; preds = %36
  %247 = and i64 %13, 4294967295
  %248 = icmp ult i64 %247, 26
  br i1 %248, label %289, label %249

249:                                              ; preds = %246
  %250 = shl nuw nsw i64 %247, 4
  %251 = getelementptr i8, ptr %31, i64 %250
  %252 = getelementptr i8, ptr %30, i64 %34
  %253 = getelementptr i8, ptr %39, i64 %250
  %254 = getelementptr i8, ptr %9, i64 %34
  %255 = icmp ult ptr %31, %252
  %256 = icmp ult ptr %30, %251
  %257 = and i1 %255, %256
  %258 = icmp ult ptr %31, %253
  %259 = icmp ult ptr %39, %251
  %260 = and i1 %258, %259
  %261 = or i1 %257, %260
  %262 = icmp ult ptr %31, %254
  %263 = icmp ult ptr %9, %251
  %264 = and i1 %262, %263
  %265 = or i1 %261, %264
  %266 = icmp ult ptr %30, %253
  %267 = icmp ult ptr %39, %252
  %268 = and i1 %266, %267
  %269 = or i1 %265, %268
  %270 = icmp ult ptr %30, %254
  %271 = icmp ult ptr %9, %252
  %272 = and i1 %270, %271
  %273 = or i1 %269, %272
  br i1 %273, label %289, label %274

274:                                              ; preds = %249
  %275 = and i64 %13, 1
  %276 = sub nsw i64 %247, %275
  br label %277

277:                                              ; preds = %277, %274
  %278 = phi i64 [ 0, %274 ], [ %285, %277 ]
  %279 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %278
  %280 = load <4 x double>, ptr %279, align 8, !tbaa !33
  %281 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %278
  store <4 x double> %280, ptr %281, align 8, !tbaa !33
  %282 = getelementptr inbounds double, ptr %9, i64 %278
  %283 = load <2 x double>, ptr %282, align 8, !tbaa !33, !alias.scope !256
  %284 = getelementptr inbounds double, ptr %30, i64 %278
  store <2 x double> %283, ptr %284, align 8, !tbaa !33, !alias.scope !259, !noalias !261
  %285 = add nuw i64 %278, 2
  %286 = icmp eq i64 %285, %276
  br i1 %286, label %287, label %277, !llvm.loop !263

287:                                              ; preds = %277
  %288 = icmp eq i64 %275, 0
  br i1 %288, label %410, label %289

289:                                              ; preds = %249, %246, %287
  %290 = phi i64 [ 0, %249 ], [ 0, %246 ], [ %276, %287 ]
  %291 = sub nsw i64 %13, %290
  %292 = add nsw i64 %290, 1
  %293 = and i64 %291, 1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %290
  %297 = load double, ptr %296, align 8, !tbaa !33
  %298 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %290
  store double %297, ptr %298, align 8, !tbaa !33
  %299 = getelementptr inbounds [2 x double], ptr %296, i64 0, i64 1
  %300 = load double, ptr %299, align 8, !tbaa !33
  %301 = getelementptr inbounds [2 x double], ptr %298, i64 0, i64 1
  store double %300, ptr %301, align 8, !tbaa !33
  %302 = getelementptr inbounds double, ptr %9, i64 %290
  %303 = load double, ptr %302, align 8, !tbaa !33
  %304 = getelementptr inbounds double, ptr %30, i64 %290
  store double %303, ptr %304, align 8, !tbaa !33
  %305 = add nuw nsw i64 %290, 1
  br label %306

306:                                              ; preds = %295, %289
  %307 = phi i64 [ %290, %289 ], [ %305, %295 ]
  %308 = icmp eq i64 %14, %292
  br i1 %308, label %410, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %330, %309 ], [ %307, %306 ]
  %311 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %310
  %312 = load double, ptr %311, align 8, !tbaa !33
  %313 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %310
  store double %312, ptr %313, align 8, !tbaa !33
  %314 = getelementptr inbounds [2 x double], ptr %311, i64 0, i64 1
  %315 = load double, ptr %314, align 8, !tbaa !33
  %316 = getelementptr inbounds [2 x double], ptr %313, i64 0, i64 1
  store double %315, ptr %316, align 8, !tbaa !33
  %317 = getelementptr inbounds double, ptr %9, i64 %310
  %318 = load double, ptr %317, align 8, !tbaa !33
  %319 = getelementptr inbounds double, ptr %30, i64 %310
  store double %318, ptr %319, align 8, !tbaa !33
  %320 = add nuw nsw i64 %310, 1
  %321 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %320
  %322 = load double, ptr %321, align 8, !tbaa !33
  %323 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %320
  store double %322, ptr %323, align 8, !tbaa !33
  %324 = getelementptr inbounds [2 x double], ptr %321, i64 0, i64 1
  %325 = load double, ptr %324, align 8, !tbaa !33
  %326 = getelementptr inbounds [2 x double], ptr %323, i64 0, i64 1
  store double %325, ptr %326, align 8, !tbaa !33
  %327 = getelementptr inbounds double, ptr %9, i64 %320
  %328 = load double, ptr %327, align 8, !tbaa !33
  %329 = getelementptr inbounds double, ptr %30, i64 %320
  store double %328, ptr %329, align 8, !tbaa !33
  %330 = add nuw nsw i64 %310, 2
  %331 = icmp eq i64 %330, %247
  br i1 %331, label %410, label %309, !llvm.loop !264

332:                                              ; preds = %243, %332
  %333 = phi i64 [ %355, %332 ], [ %244, %243 ]
  %334 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %333
  %335 = getelementptr inbounds [2 x double], ptr %334, i64 0, i64 1
  %336 = load double, ptr %335, align 8, !tbaa !33
  %337 = fsub double 1.000000e+00, %336
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %333
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = load double, ptr %334, align 8, !tbaa !33
  %340 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !33
  %341 = getelementptr inbounds double, ptr %9, i64 %333
  %342 = load double, ptr %341, align 8, !tbaa !33
  %343 = getelementptr inbounds double, ptr %30, i64 %333
  store double %342, ptr %343, align 8, !tbaa !33
  %344 = add nuw nsw i64 %333, 1
  %345 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %344
  %346 = getelementptr inbounds [2 x double], ptr %345, i64 0, i64 1
  %347 = load double, ptr %346, align 8, !tbaa !33
  %348 = fsub double 1.000000e+00, %347
  %349 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %344
  store double %348, ptr %349, align 8, !tbaa !33
  %350 = load double, ptr %345, align 8, !tbaa !33
  %351 = getelementptr inbounds [2 x double], ptr %349, i64 0, i64 1
  store double %350, ptr %351, align 8, !tbaa !33
  %352 = getelementptr inbounds double, ptr %9, i64 %344
  %353 = load double, ptr %352, align 8, !tbaa !33
  %354 = getelementptr inbounds double, ptr %30, i64 %344
  store double %353, ptr %354, align 8, !tbaa !33
  %355 = add nuw nsw i64 %333, 2
  %356 = icmp eq i64 %355, %179
  br i1 %356, label %410, label %332, !llvm.loop !265

357:                                              ; preds = %175, %357
  %358 = phi i64 [ %382, %357 ], [ %176, %175 ]
  %359 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %358
  %360 = load double, ptr %359, align 8, !tbaa !33
  %361 = fsub double 1.000000e+00, %360
  %362 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %358
  store double %361, ptr %362, align 8, !tbaa !33
  %363 = getelementptr inbounds [2 x double], ptr %359, i64 0, i64 1
  %364 = load double, ptr %363, align 8, !tbaa !33
  %365 = fsub double 1.000000e+00, %364
  %366 = getelementptr inbounds [2 x double], ptr %362, i64 0, i64 1
  store double %365, ptr %366, align 8, !tbaa !33
  %367 = getelementptr inbounds double, ptr %9, i64 %358
  %368 = load double, ptr %367, align 8, !tbaa !33
  %369 = getelementptr inbounds double, ptr %30, i64 %358
  store double %368, ptr %369, align 8, !tbaa !33
  %370 = add nuw nsw i64 %358, 1
  %371 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %370
  %372 = load double, ptr %371, align 8, !tbaa !33
  %373 = fsub double 1.000000e+00, %372
  %374 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %370
  store double %373, ptr %374, align 8, !tbaa !33
  %375 = getelementptr inbounds [2 x double], ptr %371, i64 0, i64 1
  %376 = load double, ptr %375, align 8, !tbaa !33
  %377 = fsub double 1.000000e+00, %376
  %378 = getelementptr inbounds [2 x double], ptr %374, i64 0, i64 1
  store double %377, ptr %378, align 8, !tbaa !33
  %379 = getelementptr inbounds double, ptr %9, i64 %370
  %380 = load double, ptr %379, align 8, !tbaa !33
  %381 = getelementptr inbounds double, ptr %30, i64 %370
  store double %380, ptr %381, align 8, !tbaa !33
  %382 = add nuw nsw i64 %358, 2
  %383 = icmp eq i64 %382, %109
  br i1 %383, label %410, label %357, !llvm.loop !266

384:                                              ; preds = %105, %384
  %385 = phi i64 [ %407, %384 ], [ %106, %105 ]
  %386 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %385
  %387 = getelementptr inbounds [2 x double], ptr %386, i64 0, i64 1
  %388 = load double, ptr %387, align 8, !tbaa !33
  %389 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %385
  store double %388, ptr %389, align 8, !tbaa !33
  %390 = load double, ptr %386, align 8, !tbaa !33
  %391 = fsub double 1.000000e+00, %390
  %392 = getelementptr inbounds [2 x double], ptr %389, i64 0, i64 1
  store double %391, ptr %392, align 8, !tbaa !33
  %393 = getelementptr inbounds double, ptr %9, i64 %385
  %394 = load double, ptr %393, align 8, !tbaa !33
  %395 = getelementptr inbounds double, ptr %30, i64 %385
  store double %394, ptr %395, align 8, !tbaa !33
  %396 = add nuw nsw i64 %385, 1
  %397 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %396
  %398 = getelementptr inbounds [2 x double], ptr %397, i64 0, i64 1
  %399 = load double, ptr %398, align 8, !tbaa !33
  %400 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %396
  store double %399, ptr %400, align 8, !tbaa !33
  %401 = load double, ptr %397, align 8, !tbaa !33
  %402 = fsub double 1.000000e+00, %401
  %403 = getelementptr inbounds [2 x double], ptr %400, i64 0, i64 1
  store double %402, ptr %403, align 8, !tbaa !33
  %404 = getelementptr inbounds double, ptr %9, i64 %396
  %405 = load double, ptr %404, align 8, !tbaa !33
  %406 = getelementptr inbounds double, ptr %30, i64 %396
  store double %405, ptr %406, align 8, !tbaa !33
  %407 = add nuw nsw i64 %385, 2
  %408 = icmp eq i64 %407, %41
  br i1 %408, label %410, label %384, !llvm.loop !267

409:                                              ; preds = %36
  unreachable

410:                                              ; preds = %105, %384, %175, %357, %243, %332, %306, %309, %85, %154, %223, %287, %29
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %413 unwind label %417

411:                                              ; preds = %17
  %412 = landingpad { ptr, i32 }
          cleanup
  br label %427

413:                                              ; preds = %410
  %414 = load ptr, ptr %5, align 8, !tbaa !36
  %415 = icmp eq ptr %414, null
  br i1 %415, label %421, label %416

416:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef nonnull %414) #23
  br label %421

417:                                              ; preds = %410
  %418 = landingpad { ptr, i32 }
          cleanup
  %419 = load ptr, ptr %5, align 8, !tbaa !36
  %420 = icmp eq ptr %419, null
  br i1 %420, label %427, label %426

421:                                              ; preds = %416, %413
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %422 = load ptr, ptr %4, align 8, !tbaa !64
  %423 = icmp eq ptr %422, null
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  call void @_ZdlPv(ptr noundef nonnull %422) #23
  br label %425

425:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

426:                                              ; preds = %417
  call void @_ZdlPv(ptr noundef nonnull %419) #23
  br label %427

427:                                              ; preds = %426, %417, %411
  %428 = phi { ptr, i32 } [ %412, %411 ], [ %418, %417 ], [ %418, %426 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %429 = load ptr, ptr %4, align 8, !tbaa !64
  %430 = icmp eq ptr %429, null
  br i1 %430, label %432, label %431

431:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %429) #23
  br label %432

432:                                              ; preds = %431, %427
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %428
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE15project_to_faceERKNS_10QuadratureILi1EEEj(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.9", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %22

16:                                               ; preds = %3
  %17 = shl nuw nsw i64 %13, 4
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %4, align 8, !tbaa !64
  %19 = getelementptr inbounds %"class.dealii::Point.14", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  br label %22

22:                                               ; preds = %16, %15
  %23 = phi ptr [ null, %15 ], [ %18, %16 ]
  %24 = phi ptr [ null, %15 ], [ %21, %16 ]
  %25 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !66
  %26 = and i64 %11, 34359738360
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %351, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8
  switch i32 %2, label %351 [
    i32 0, label %202
    i32 1, label %145
    i32 2, label %88
    i32 3, label %31
  ]

31:                                               ; preds = %28
  %32 = icmp ult i64 %13, 16
  br i1 %32, label %68, label %33

33:                                               ; preds = %31
  %34 = shl nuw nsw i64 %13, 4
  %35 = getelementptr i8, ptr %23, i64 %34
  %36 = getelementptr i8, ptr %30, i64 %26
  %37 = icmp ult ptr %23, %36
  %38 = icmp ult ptr %30, %35
  %39 = and i1 %37, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %33
  %41 = and i64 %12, 15
  %42 = sub nsw i64 %13, %41
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %64, %43 ]
  %45 = or i64 %44, 4
  %46 = or i64 %44, 8
  %47 = or i64 %44, 12
  %48 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %44
  %49 = load <4 x double>, ptr %48, align 8, !tbaa !33, !alias.scope !268
  %50 = getelementptr inbounds double, ptr %48, i64 4
  %51 = load <4 x double>, ptr %50, align 8, !tbaa !33, !alias.scope !268
  %52 = getelementptr inbounds double, ptr %48, i64 8
  %53 = load <4 x double>, ptr %52, align 8, !tbaa !33, !alias.scope !268
  %54 = getelementptr inbounds double, ptr %48, i64 12
  %55 = load <4 x double>, ptr %54, align 8, !tbaa !33, !alias.scope !268
  %56 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %44
  %57 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %45
  %58 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %46
  %59 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %47
  %60 = shufflevector <4 x double> %49, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %60, ptr %56, align 8, !tbaa !33
  %61 = shufflevector <4 x double> %51, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %61, ptr %57, align 8, !tbaa !33
  %62 = shufflevector <4 x double> %53, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %62, ptr %58, align 8, !tbaa !33
  %63 = shufflevector <4 x double> %55, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %63, ptr %59, align 8, !tbaa !33
  %64 = add nuw i64 %44, 16
  %65 = icmp eq i64 %64, %42
  br i1 %65, label %66, label %43, !llvm.loop !271

66:                                               ; preds = %43
  %67 = icmp eq i64 %41, 0
  br i1 %67, label %351, label %68

68:                                               ; preds = %33, %31, %66
  %69 = phi i64 [ 0, %33 ], [ 0, %31 ], [ %42, %66 ]
  %70 = sub nsw i64 %12, %69
  %71 = xor i64 %69, -1
  %72 = add nsw i64 %13, %71
  %73 = and i64 %70, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %68, %75
  %76 = phi i64 [ %82, %75 ], [ %69, %68 ]
  %77 = phi i64 [ %83, %75 ], [ 0, %68 ]
  %78 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %76
  %79 = load double, ptr %78, align 8, !tbaa !33
  %80 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %76
  store double %79, ptr %80, align 8, !tbaa !33
  %81 = getelementptr inbounds [2 x double], ptr %80, i64 0, i64 1
  store double 1.000000e+00, ptr %81, align 8, !tbaa !33
  %82 = add nuw nsw i64 %76, 1
  %83 = add i64 %77, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !272

85:                                               ; preds = %75, %68
  %86 = phi i64 [ %69, %68 ], [ %82, %75 ]
  %87 = icmp ult i64 %72, 3
  br i1 %87, label %351, label %328

88:                                               ; preds = %28
  %89 = icmp ult i64 %13, 16
  br i1 %89, label %125, label %90

90:                                               ; preds = %88
  %91 = shl nuw nsw i64 %13, 4
  %92 = getelementptr i8, ptr %23, i64 %91
  %93 = getelementptr i8, ptr %30, i64 %26
  %94 = icmp ult ptr %23, %93
  %95 = icmp ult ptr %30, %92
  %96 = and i1 %94, %95
  br i1 %96, label %125, label %97

97:                                               ; preds = %90
  %98 = and i64 %12, 15
  %99 = sub nsw i64 %13, %98
  br label %100

100:                                              ; preds = %100, %97
  %101 = phi i64 [ 0, %97 ], [ %121, %100 ]
  %102 = or i64 %101, 4
  %103 = or i64 %101, 8
  %104 = or i64 %101, 12
  %105 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %101
  %106 = load <4 x double>, ptr %105, align 8, !tbaa !33, !alias.scope !273
  %107 = getelementptr inbounds double, ptr %105, i64 4
  %108 = load <4 x double>, ptr %107, align 8, !tbaa !33, !alias.scope !273
  %109 = getelementptr inbounds double, ptr %105, i64 8
  %110 = load <4 x double>, ptr %109, align 8, !tbaa !33, !alias.scope !273
  %111 = getelementptr inbounds double, ptr %105, i64 12
  %112 = load <4 x double>, ptr %111, align 8, !tbaa !33, !alias.scope !273
  %113 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %101
  %114 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %102
  %115 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %103
  %116 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %104
  %117 = shufflevector <4 x double> %106, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %117, ptr %113, align 8, !tbaa !33
  %118 = shufflevector <4 x double> %108, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %118, ptr %114, align 8, !tbaa !33
  %119 = shufflevector <4 x double> %110, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %119, ptr %115, align 8, !tbaa !33
  %120 = shufflevector <4 x double> %112, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %120, ptr %116, align 8, !tbaa !33
  %121 = add nuw i64 %101, 16
  %122 = icmp eq i64 %121, %99
  br i1 %122, label %123, label %100, !llvm.loop !276

123:                                              ; preds = %100
  %124 = icmp eq i64 %98, 0
  br i1 %124, label %351, label %125

125:                                              ; preds = %90, %88, %123
  %126 = phi i64 [ 0, %90 ], [ 0, %88 ], [ %99, %123 ]
  %127 = sub nsw i64 %12, %126
  %128 = xor i64 %126, -1
  %129 = add nsw i64 %13, %128
  %130 = and i64 %127, 3
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %125, %132
  %133 = phi i64 [ %139, %132 ], [ %126, %125 ]
  %134 = phi i64 [ %140, %132 ], [ 0, %125 ]
  %135 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %133
  %136 = load double, ptr %135, align 8, !tbaa !33
  %137 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %133
  store double %136, ptr %137, align 8, !tbaa !33
  %138 = getelementptr inbounds [2 x double], ptr %137, i64 0, i64 1
  store double 0.000000e+00, ptr %138, align 8, !tbaa !33
  %139 = add nuw nsw i64 %133, 1
  %140 = add i64 %134, 1
  %141 = icmp eq i64 %140, %130
  br i1 %141, label %142, label %132, !llvm.loop !277

142:                                              ; preds = %132, %125
  %143 = phi i64 [ %126, %125 ], [ %139, %132 ]
  %144 = icmp ult i64 %129, 3
  br i1 %144, label %351, label %305

145:                                              ; preds = %28
  %146 = icmp ult i64 %13, 16
  br i1 %146, label %182, label %147

147:                                              ; preds = %145
  %148 = shl nuw nsw i64 %13, 4
  %149 = getelementptr i8, ptr %23, i64 %148
  %150 = getelementptr i8, ptr %30, i64 %26
  %151 = icmp ult ptr %23, %150
  %152 = icmp ult ptr %30, %149
  %153 = and i1 %151, %152
  br i1 %153, label %182, label %154

154:                                              ; preds = %147
  %155 = and i64 %12, 15
  %156 = sub nsw i64 %13, %155
  br label %157

157:                                              ; preds = %157, %154
  %158 = phi i64 [ 0, %154 ], [ %178, %157 ]
  %159 = or i64 %158, 4
  %160 = or i64 %158, 8
  %161 = or i64 %158, 12
  %162 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %158
  %163 = load <4 x double>, ptr %162, align 8, !tbaa !33, !alias.scope !278
  %164 = getelementptr inbounds double, ptr %162, i64 4
  %165 = load <4 x double>, ptr %164, align 8, !tbaa !33, !alias.scope !278
  %166 = getelementptr inbounds double, ptr %162, i64 8
  %167 = load <4 x double>, ptr %166, align 8, !tbaa !33, !alias.scope !278
  %168 = getelementptr inbounds double, ptr %162, i64 12
  %169 = load <4 x double>, ptr %168, align 8, !tbaa !33, !alias.scope !278
  %170 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %158
  %171 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %159
  %172 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %160
  %173 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %161
  %174 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %163, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %174, ptr %170, align 8, !tbaa !33
  %175 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %165, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %175, ptr %171, align 8, !tbaa !33
  %176 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %167, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %176, ptr %172, align 8, !tbaa !33
  %177 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %169, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %177, ptr %173, align 8, !tbaa !33
  %178 = add nuw i64 %158, 16
  %179 = icmp eq i64 %178, %156
  br i1 %179, label %180, label %157, !llvm.loop !281

180:                                              ; preds = %157
  %181 = icmp eq i64 %155, 0
  br i1 %181, label %351, label %182

182:                                              ; preds = %147, %145, %180
  %183 = phi i64 [ 0, %147 ], [ 0, %145 ], [ %156, %180 ]
  %184 = sub nsw i64 %12, %183
  %185 = xor i64 %183, -1
  %186 = add nsw i64 %13, %185
  %187 = and i64 %184, 3
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %199, label %189

189:                                              ; preds = %182, %189
  %190 = phi i64 [ %196, %189 ], [ %183, %182 ]
  %191 = phi i64 [ %197, %189 ], [ 0, %182 ]
  %192 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %190
  %193 = load double, ptr %192, align 8, !tbaa !33
  %194 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %190
  store double 1.000000e+00, ptr %194, align 8, !tbaa !33
  %195 = getelementptr inbounds [2 x double], ptr %194, i64 0, i64 1
  store double %193, ptr %195, align 8, !tbaa !33
  %196 = add nuw nsw i64 %190, 1
  %197 = add i64 %191, 1
  %198 = icmp eq i64 %197, %187
  br i1 %198, label %199, label %189, !llvm.loop !282

199:                                              ; preds = %189, %182
  %200 = phi i64 [ %183, %182 ], [ %196, %189 ]
  %201 = icmp ult i64 %186, 3
  br i1 %201, label %351, label %282

202:                                              ; preds = %28
  %203 = icmp ult i64 %13, 16
  br i1 %203, label %239, label %204

204:                                              ; preds = %202
  %205 = shl nuw nsw i64 %13, 4
  %206 = getelementptr i8, ptr %23, i64 %205
  %207 = getelementptr i8, ptr %30, i64 %26
  %208 = icmp ult ptr %23, %207
  %209 = icmp ult ptr %30, %206
  %210 = and i1 %208, %209
  br i1 %210, label %239, label %211

211:                                              ; preds = %204
  %212 = and i64 %12, 15
  %213 = sub nsw i64 %13, %212
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi i64 [ 0, %211 ], [ %235, %214 ]
  %216 = or i64 %215, 4
  %217 = or i64 %215, 8
  %218 = or i64 %215, 12
  %219 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %215
  %220 = load <4 x double>, ptr %219, align 8, !tbaa !33, !alias.scope !283
  %221 = getelementptr inbounds double, ptr %219, i64 4
  %222 = load <4 x double>, ptr %221, align 8, !tbaa !33, !alias.scope !283
  %223 = getelementptr inbounds double, ptr %219, i64 8
  %224 = load <4 x double>, ptr %223, align 8, !tbaa !33, !alias.scope !283
  %225 = getelementptr inbounds double, ptr %219, i64 12
  %226 = load <4 x double>, ptr %225, align 8, !tbaa !33, !alias.scope !283
  %227 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %215
  %228 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %216
  %229 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %217
  %230 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %218
  %231 = shufflevector <4 x double> zeroinitializer, <4 x double> %220, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %231, ptr %227, align 8, !tbaa !33
  %232 = shufflevector <4 x double> zeroinitializer, <4 x double> %222, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %232, ptr %228, align 8, !tbaa !33
  %233 = shufflevector <4 x double> zeroinitializer, <4 x double> %224, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %233, ptr %229, align 8, !tbaa !33
  %234 = shufflevector <4 x double> zeroinitializer, <4 x double> %226, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %234, ptr %230, align 8, !tbaa !33
  %235 = add nuw i64 %215, 16
  %236 = icmp eq i64 %235, %213
  br i1 %236, label %237, label %214, !llvm.loop !286

237:                                              ; preds = %214
  %238 = icmp eq i64 %212, 0
  br i1 %238, label %351, label %239

239:                                              ; preds = %204, %202, %237
  %240 = phi i64 [ 0, %204 ], [ 0, %202 ], [ %213, %237 ]
  %241 = sub nsw i64 %12, %240
  %242 = xor i64 %240, -1
  %243 = add nsw i64 %13, %242
  %244 = and i64 %241, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %256, label %246

246:                                              ; preds = %239, %246
  %247 = phi i64 [ %253, %246 ], [ %240, %239 ]
  %248 = phi i64 [ %254, %246 ], [ 0, %239 ]
  %249 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %247
  %250 = load double, ptr %249, align 8, !tbaa !33
  %251 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %247
  store double 0.000000e+00, ptr %251, align 8, !tbaa !33
  %252 = getelementptr inbounds [2 x double], ptr %251, i64 0, i64 1
  store double %250, ptr %252, align 8, !tbaa !33
  %253 = add nuw nsw i64 %247, 1
  %254 = add i64 %248, 1
  %255 = icmp eq i64 %254, %244
  br i1 %255, label %256, label %246, !llvm.loop !287

256:                                              ; preds = %246, %239
  %257 = phi i64 [ %240, %239 ], [ %253, %246 ]
  %258 = icmp ult i64 %243, 3
  br i1 %258, label %351, label %259

259:                                              ; preds = %256, %259
  %260 = phi i64 [ %280, %259 ], [ %257, %256 ]
  %261 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %260
  %262 = load double, ptr %261, align 8, !tbaa !33
  %263 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %260
  store double 0.000000e+00, ptr %263, align 8, !tbaa !33
  %264 = getelementptr inbounds [2 x double], ptr %263, i64 0, i64 1
  store double %262, ptr %264, align 8, !tbaa !33
  %265 = add nuw nsw i64 %260, 1
  %266 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %265
  %267 = load double, ptr %266, align 8, !tbaa !33
  %268 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %265
  store double 0.000000e+00, ptr %268, align 8, !tbaa !33
  %269 = getelementptr inbounds [2 x double], ptr %268, i64 0, i64 1
  store double %267, ptr %269, align 8, !tbaa !33
  %270 = add nuw nsw i64 %260, 2
  %271 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %270
  %272 = load double, ptr %271, align 8, !tbaa !33
  %273 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %270
  store double 0.000000e+00, ptr %273, align 8, !tbaa !33
  %274 = getelementptr inbounds [2 x double], ptr %273, i64 0, i64 1
  store double %272, ptr %274, align 8, !tbaa !33
  %275 = add nuw nsw i64 %260, 3
  %276 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !33
  %278 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %275
  store double 0.000000e+00, ptr %278, align 8, !tbaa !33
  %279 = getelementptr inbounds [2 x double], ptr %278, i64 0, i64 1
  store double %277, ptr %279, align 8, !tbaa !33
  %280 = add nuw nsw i64 %260, 4
  %281 = icmp eq i64 %280, %13
  br i1 %281, label %351, label %259, !llvm.loop !288

282:                                              ; preds = %199, %282
  %283 = phi i64 [ %303, %282 ], [ %200, %199 ]
  %284 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %283
  %285 = load double, ptr %284, align 8, !tbaa !33
  %286 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %283
  store double 1.000000e+00, ptr %286, align 8, !tbaa !33
  %287 = getelementptr inbounds [2 x double], ptr %286, i64 0, i64 1
  store double %285, ptr %287, align 8, !tbaa !33
  %288 = add nuw nsw i64 %283, 1
  %289 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %288
  %290 = load double, ptr %289, align 8, !tbaa !33
  %291 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %288
  store double 1.000000e+00, ptr %291, align 8, !tbaa !33
  %292 = getelementptr inbounds [2 x double], ptr %291, i64 0, i64 1
  store double %290, ptr %292, align 8, !tbaa !33
  %293 = add nuw nsw i64 %283, 2
  %294 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %293
  %295 = load double, ptr %294, align 8, !tbaa !33
  %296 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %293
  store double 1.000000e+00, ptr %296, align 8, !tbaa !33
  %297 = getelementptr inbounds [2 x double], ptr %296, i64 0, i64 1
  store double %295, ptr %297, align 8, !tbaa !33
  %298 = add nuw nsw i64 %283, 3
  %299 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %298
  %300 = load double, ptr %299, align 8, !tbaa !33
  %301 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %298
  store double 1.000000e+00, ptr %301, align 8, !tbaa !33
  %302 = getelementptr inbounds [2 x double], ptr %301, i64 0, i64 1
  store double %300, ptr %302, align 8, !tbaa !33
  %303 = add nuw nsw i64 %283, 4
  %304 = icmp eq i64 %303, %13
  br i1 %304, label %351, label %282, !llvm.loop !289

305:                                              ; preds = %142, %305
  %306 = phi i64 [ %326, %305 ], [ %143, %142 ]
  %307 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %306
  %308 = load double, ptr %307, align 8, !tbaa !33
  %309 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %306
  store double %308, ptr %309, align 8, !tbaa !33
  %310 = getelementptr inbounds [2 x double], ptr %309, i64 0, i64 1
  store double 0.000000e+00, ptr %310, align 8, !tbaa !33
  %311 = add nuw nsw i64 %306, 1
  %312 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %311
  %313 = load double, ptr %312, align 8, !tbaa !33
  %314 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %311
  store double %313, ptr %314, align 8, !tbaa !33
  %315 = getelementptr inbounds [2 x double], ptr %314, i64 0, i64 1
  store double 0.000000e+00, ptr %315, align 8, !tbaa !33
  %316 = add nuw nsw i64 %306, 2
  %317 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %316
  %318 = load double, ptr %317, align 8, !tbaa !33
  %319 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %316
  store double %318, ptr %319, align 8, !tbaa !33
  %320 = getelementptr inbounds [2 x double], ptr %319, i64 0, i64 1
  store double 0.000000e+00, ptr %320, align 8, !tbaa !33
  %321 = add nuw nsw i64 %306, 3
  %322 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %321
  %323 = load double, ptr %322, align 8, !tbaa !33
  %324 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %321
  store double %323, ptr %324, align 8, !tbaa !33
  %325 = getelementptr inbounds [2 x double], ptr %324, i64 0, i64 1
  store double 0.000000e+00, ptr %325, align 8, !tbaa !33
  %326 = add nuw nsw i64 %306, 4
  %327 = icmp eq i64 %326, %13
  br i1 %327, label %351, label %305, !llvm.loop !290

328:                                              ; preds = %85, %328
  %329 = phi i64 [ %349, %328 ], [ %86, %85 ]
  %330 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %329
  %331 = load double, ptr %330, align 8, !tbaa !33
  %332 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %329
  store double %331, ptr %332, align 8, !tbaa !33
  %333 = getelementptr inbounds [2 x double], ptr %332, i64 0, i64 1
  store double 1.000000e+00, ptr %333, align 8, !tbaa !33
  %334 = add nuw nsw i64 %329, 1
  %335 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %334
  %336 = load double, ptr %335, align 8, !tbaa !33
  %337 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %334
  store double %336, ptr %337, align 8, !tbaa !33
  %338 = getelementptr inbounds [2 x double], ptr %337, i64 0, i64 1
  store double 1.000000e+00, ptr %338, align 8, !tbaa !33
  %339 = add nuw nsw i64 %329, 2
  %340 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %339
  %341 = load double, ptr %340, align 8, !tbaa !33
  %342 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %339
  store double %341, ptr %342, align 8, !tbaa !33
  %343 = getelementptr inbounds [2 x double], ptr %342, i64 0, i64 1
  store double 1.000000e+00, ptr %343, align 8, !tbaa !33
  %344 = add nuw nsw i64 %329, 3
  %345 = getelementptr inbounds %"class.dealii::Point", ptr %30, i64 %344
  %346 = load double, ptr %345, align 8, !tbaa !33
  %347 = getelementptr inbounds %"class.dealii::Point.14", ptr %23, i64 %344
  store double %346, ptr %347, align 8, !tbaa !33
  %348 = getelementptr inbounds [2 x double], ptr %347, i64 0, i64 1
  store double 1.000000e+00, ptr %348, align 8, !tbaa !33
  %349 = add nuw nsw i64 %329, 4
  %350 = icmp eq i64 %349, %13
  br i1 %350, label %351, label %328, !llvm.loop !291

351:                                              ; preds = %85, %328, %142, %305, %199, %282, %256, %259, %66, %123, %180, %237, %28, %22
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %352 unwind label %357

352:                                              ; preds = %351
  %353 = load ptr, ptr %4, align 8, !tbaa !64
  %354 = icmp eq ptr %353, null
  br i1 %354, label %356, label %355

355:                                              ; preds = %352
  call void @_ZdlPv(ptr noundef nonnull %353) #23
  br label %356

356:                                              ; preds = %352, %355
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

357:                                              ; preds = %351
  %358 = landingpad { ptr, i32 }
          cleanup
  %359 = load ptr, ptr %4, align 8, !tbaa !64
  %360 = icmp eq ptr %359, null
  br i1 %360, label %362, label %361

361:                                              ; preds = %357
  call void @_ZdlPv(ptr noundef nonnull %359) #23
  br label %362

362:                                              ; preds = %361, %357
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %358
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi2EE15project_to_faceERKNS_10QuadratureILi1EEEjRSt6vectorINS_5PointILi2EEESaIS8_EE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %0, i32 noundef %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = and i64 %10, 34359738360
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %342, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %2, align 8
  switch i32 %1, label %342 [
    i32 0, label %192
    i32 1, label %134
    i32 2, label %76
    i32 3, label %18
  ]

18:                                               ; preds = %14
  %19 = and i64 %11, 4294967295
  %20 = icmp ult i64 %19, 16
  br i1 %20, label %56, label %21

21:                                               ; preds = %18
  %22 = shl nuw nsw i64 %19, 4
  %23 = getelementptr i8, ptr %17, i64 %22
  %24 = getelementptr i8, ptr %16, i64 %12
  %25 = icmp ult ptr %17, %24
  %26 = icmp ult ptr %16, %23
  %27 = and i1 %25, %26
  br i1 %27, label %56, label %28

28:                                               ; preds = %21
  %29 = and i64 %11, 15
  %30 = sub nsw i64 %19, %29
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %52, %31 ]
  %33 = or i64 %32, 4
  %34 = or i64 %32, 8
  %35 = or i64 %32, 12
  %36 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %32
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !33, !alias.scope !292
  %38 = getelementptr inbounds double, ptr %36, i64 4
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !33, !alias.scope !292
  %40 = getelementptr inbounds double, ptr %36, i64 8
  %41 = load <4 x double>, ptr %40, align 8, !tbaa !33, !alias.scope !292
  %42 = getelementptr inbounds double, ptr %36, i64 12
  %43 = load <4 x double>, ptr %42, align 8, !tbaa !33, !alias.scope !292
  %44 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %32
  %45 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %33
  %46 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %34
  %47 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %35
  %48 = shufflevector <4 x double> %37, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %48, ptr %44, align 8, !tbaa !33
  %49 = shufflevector <4 x double> %39, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %49, ptr %45, align 8, !tbaa !33
  %50 = shufflevector <4 x double> %41, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %50, ptr %46, align 8, !tbaa !33
  %51 = shufflevector <4 x double> %43, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %51, ptr %47, align 8, !tbaa !33
  %52 = add nuw i64 %32, 16
  %53 = icmp eq i64 %52, %30
  br i1 %53, label %54, label %31, !llvm.loop !295

54:                                               ; preds = %31
  %55 = icmp eq i64 %29, 0
  br i1 %55, label %342, label %56

56:                                               ; preds = %21, %18, %54
  %57 = phi i64 [ 0, %21 ], [ 0, %18 ], [ %30, %54 ]
  %58 = sub nsw i64 %11, %57
  %59 = xor i64 %57, -1
  %60 = add nsw i64 %19, %59
  %61 = and i64 %58, 3
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %56, %63
  %64 = phi i64 [ %70, %63 ], [ %57, %56 ]
  %65 = phi i64 [ %71, %63 ], [ 0, %56 ]
  %66 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %64
  %67 = load double, ptr %66, align 8, !tbaa !33
  %68 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %64
  store double %67, ptr %68, align 8, !tbaa !33
  %69 = getelementptr inbounds [2 x double], ptr %68, i64 0, i64 1
  store double 1.000000e+00, ptr %69, align 8, !tbaa !33
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, 1
  %72 = icmp eq i64 %71, %61
  br i1 %72, label %73, label %63, !llvm.loop !296

73:                                               ; preds = %63, %56
  %74 = phi i64 [ %57, %56 ], [ %70, %63 ]
  %75 = icmp ult i64 %60, 3
  br i1 %75, label %342, label %319

76:                                               ; preds = %14
  %77 = and i64 %11, 4294967295
  %78 = icmp ult i64 %77, 16
  br i1 %78, label %114, label %79

79:                                               ; preds = %76
  %80 = shl nuw nsw i64 %77, 4
  %81 = getelementptr i8, ptr %17, i64 %80
  %82 = getelementptr i8, ptr %16, i64 %12
  %83 = icmp ult ptr %17, %82
  %84 = icmp ult ptr %16, %81
  %85 = and i1 %83, %84
  br i1 %85, label %114, label %86

86:                                               ; preds = %79
  %87 = and i64 %11, 15
  %88 = sub nsw i64 %77, %87
  br label %89

89:                                               ; preds = %89, %86
  %90 = phi i64 [ 0, %86 ], [ %110, %89 ]
  %91 = or i64 %90, 4
  %92 = or i64 %90, 8
  %93 = or i64 %90, 12
  %94 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %90
  %95 = load <4 x double>, ptr %94, align 8, !tbaa !33, !alias.scope !297
  %96 = getelementptr inbounds double, ptr %94, i64 4
  %97 = load <4 x double>, ptr %96, align 8, !tbaa !33, !alias.scope !297
  %98 = getelementptr inbounds double, ptr %94, i64 8
  %99 = load <4 x double>, ptr %98, align 8, !tbaa !33, !alias.scope !297
  %100 = getelementptr inbounds double, ptr %94, i64 12
  %101 = load <4 x double>, ptr %100, align 8, !tbaa !33, !alias.scope !297
  %102 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %90
  %103 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %91
  %104 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %92
  %105 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %93
  %106 = shufflevector <4 x double> %95, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %106, ptr %102, align 8, !tbaa !33
  %107 = shufflevector <4 x double> %97, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %107, ptr %103, align 8, !tbaa !33
  %108 = shufflevector <4 x double> %99, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %108, ptr %104, align 8, !tbaa !33
  %109 = shufflevector <4 x double> %101, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %109, ptr %105, align 8, !tbaa !33
  %110 = add nuw i64 %90, 16
  %111 = icmp eq i64 %110, %88
  br i1 %111, label %112, label %89, !llvm.loop !300

112:                                              ; preds = %89
  %113 = icmp eq i64 %87, 0
  br i1 %113, label %342, label %114

114:                                              ; preds = %79, %76, %112
  %115 = phi i64 [ 0, %79 ], [ 0, %76 ], [ %88, %112 ]
  %116 = sub nsw i64 %11, %115
  %117 = xor i64 %115, -1
  %118 = add nsw i64 %77, %117
  %119 = and i64 %116, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %114, %121
  %122 = phi i64 [ %128, %121 ], [ %115, %114 ]
  %123 = phi i64 [ %129, %121 ], [ 0, %114 ]
  %124 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %122
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %122
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = getelementptr inbounds [2 x double], ptr %126, i64 0, i64 1
  store double 0.000000e+00, ptr %127, align 8, !tbaa !33
  %128 = add nuw nsw i64 %122, 1
  %129 = add i64 %123, 1
  %130 = icmp eq i64 %129, %119
  br i1 %130, label %131, label %121, !llvm.loop !301

131:                                              ; preds = %121, %114
  %132 = phi i64 [ %115, %114 ], [ %128, %121 ]
  %133 = icmp ult i64 %118, 3
  br i1 %133, label %342, label %296

134:                                              ; preds = %14
  %135 = and i64 %11, 4294967295
  %136 = icmp ult i64 %135, 16
  br i1 %136, label %172, label %137

137:                                              ; preds = %134
  %138 = shl nuw nsw i64 %135, 4
  %139 = getelementptr i8, ptr %17, i64 %138
  %140 = getelementptr i8, ptr %16, i64 %12
  %141 = icmp ult ptr %17, %140
  %142 = icmp ult ptr %16, %139
  %143 = and i1 %141, %142
  br i1 %143, label %172, label %144

144:                                              ; preds = %137
  %145 = and i64 %11, 15
  %146 = sub nsw i64 %135, %145
  br label %147

147:                                              ; preds = %147, %144
  %148 = phi i64 [ 0, %144 ], [ %168, %147 ]
  %149 = or i64 %148, 4
  %150 = or i64 %148, 8
  %151 = or i64 %148, 12
  %152 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %148
  %153 = load <4 x double>, ptr %152, align 8, !tbaa !33, !alias.scope !302
  %154 = getelementptr inbounds double, ptr %152, i64 4
  %155 = load <4 x double>, ptr %154, align 8, !tbaa !33, !alias.scope !302
  %156 = getelementptr inbounds double, ptr %152, i64 8
  %157 = load <4 x double>, ptr %156, align 8, !tbaa !33, !alias.scope !302
  %158 = getelementptr inbounds double, ptr %152, i64 12
  %159 = load <4 x double>, ptr %158, align 8, !tbaa !33, !alias.scope !302
  %160 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %148
  %161 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %149
  %162 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %150
  %163 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %151
  %164 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %153, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %164, ptr %160, align 8, !tbaa !33
  %165 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %155, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %165, ptr %161, align 8, !tbaa !33
  %166 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %157, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %166, ptr %162, align 8, !tbaa !33
  %167 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %159, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %167, ptr %163, align 8, !tbaa !33
  %168 = add nuw i64 %148, 16
  %169 = icmp eq i64 %168, %146
  br i1 %169, label %170, label %147, !llvm.loop !305

170:                                              ; preds = %147
  %171 = icmp eq i64 %145, 0
  br i1 %171, label %342, label %172

172:                                              ; preds = %137, %134, %170
  %173 = phi i64 [ 0, %137 ], [ 0, %134 ], [ %146, %170 ]
  %174 = sub nsw i64 %11, %173
  %175 = xor i64 %173, -1
  %176 = add nsw i64 %135, %175
  %177 = and i64 %174, 3
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %189, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %186, %179 ], [ %173, %172 ]
  %181 = phi i64 [ %187, %179 ], [ 0, %172 ]
  %182 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %180
  %183 = load double, ptr %182, align 8, !tbaa !33
  %184 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %180
  store double 1.000000e+00, ptr %184, align 8, !tbaa !33
  %185 = getelementptr inbounds [2 x double], ptr %184, i64 0, i64 1
  store double %183, ptr %185, align 8, !tbaa !33
  %186 = add nuw nsw i64 %180, 1
  %187 = add i64 %181, 1
  %188 = icmp eq i64 %187, %177
  br i1 %188, label %189, label %179, !llvm.loop !306

189:                                              ; preds = %179, %172
  %190 = phi i64 [ %173, %172 ], [ %186, %179 ]
  %191 = icmp ult i64 %176, 3
  br i1 %191, label %342, label %273

192:                                              ; preds = %14
  %193 = and i64 %11, 4294967295
  %194 = icmp ult i64 %193, 16
  br i1 %194, label %230, label %195

195:                                              ; preds = %192
  %196 = shl nuw nsw i64 %193, 4
  %197 = getelementptr i8, ptr %17, i64 %196
  %198 = getelementptr i8, ptr %16, i64 %12
  %199 = icmp ult ptr %17, %198
  %200 = icmp ult ptr %16, %197
  %201 = and i1 %199, %200
  br i1 %201, label %230, label %202

202:                                              ; preds = %195
  %203 = and i64 %11, 15
  %204 = sub nsw i64 %193, %203
  br label %205

205:                                              ; preds = %205, %202
  %206 = phi i64 [ 0, %202 ], [ %226, %205 ]
  %207 = or i64 %206, 4
  %208 = or i64 %206, 8
  %209 = or i64 %206, 12
  %210 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %206
  %211 = load <4 x double>, ptr %210, align 8, !tbaa !33, !alias.scope !307
  %212 = getelementptr inbounds double, ptr %210, i64 4
  %213 = load <4 x double>, ptr %212, align 8, !tbaa !33, !alias.scope !307
  %214 = getelementptr inbounds double, ptr %210, i64 8
  %215 = load <4 x double>, ptr %214, align 8, !tbaa !33, !alias.scope !307
  %216 = getelementptr inbounds double, ptr %210, i64 12
  %217 = load <4 x double>, ptr %216, align 8, !tbaa !33, !alias.scope !307
  %218 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %206
  %219 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %207
  %220 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %208
  %221 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %209
  %222 = shufflevector <4 x double> zeroinitializer, <4 x double> %211, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %222, ptr %218, align 8, !tbaa !33
  %223 = shufflevector <4 x double> zeroinitializer, <4 x double> %213, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %223, ptr %219, align 8, !tbaa !33
  %224 = shufflevector <4 x double> zeroinitializer, <4 x double> %215, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %224, ptr %220, align 8, !tbaa !33
  %225 = shufflevector <4 x double> zeroinitializer, <4 x double> %217, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %225, ptr %221, align 8, !tbaa !33
  %226 = add nuw i64 %206, 16
  %227 = icmp eq i64 %226, %204
  br i1 %227, label %228, label %205, !llvm.loop !310

228:                                              ; preds = %205
  %229 = icmp eq i64 %203, 0
  br i1 %229, label %342, label %230

230:                                              ; preds = %195, %192, %228
  %231 = phi i64 [ 0, %195 ], [ 0, %192 ], [ %204, %228 ]
  %232 = sub nsw i64 %11, %231
  %233 = xor i64 %231, -1
  %234 = add nsw i64 %193, %233
  %235 = and i64 %232, 3
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %230, %237
  %238 = phi i64 [ %244, %237 ], [ %231, %230 ]
  %239 = phi i64 [ %245, %237 ], [ 0, %230 ]
  %240 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %238
  %241 = load double, ptr %240, align 8, !tbaa !33
  %242 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %238
  store double 0.000000e+00, ptr %242, align 8, !tbaa !33
  %243 = getelementptr inbounds [2 x double], ptr %242, i64 0, i64 1
  store double %241, ptr %243, align 8, !tbaa !33
  %244 = add nuw nsw i64 %238, 1
  %245 = add i64 %239, 1
  %246 = icmp eq i64 %245, %235
  br i1 %246, label %247, label %237, !llvm.loop !311

247:                                              ; preds = %237, %230
  %248 = phi i64 [ %231, %230 ], [ %244, %237 ]
  %249 = icmp ult i64 %234, 3
  br i1 %249, label %342, label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %271, %250 ], [ %248, %247 ]
  %252 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %251
  %253 = load double, ptr %252, align 8, !tbaa !33
  %254 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %251
  store double 0.000000e+00, ptr %254, align 8, !tbaa !33
  %255 = getelementptr inbounds [2 x double], ptr %254, i64 0, i64 1
  store double %253, ptr %255, align 8, !tbaa !33
  %256 = add nuw nsw i64 %251, 1
  %257 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %256
  %258 = load double, ptr %257, align 8, !tbaa !33
  %259 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %256
  store double 0.000000e+00, ptr %259, align 8, !tbaa !33
  %260 = getelementptr inbounds [2 x double], ptr %259, i64 0, i64 1
  store double %258, ptr %260, align 8, !tbaa !33
  %261 = add nuw nsw i64 %251, 2
  %262 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %261
  %263 = load double, ptr %262, align 8, !tbaa !33
  %264 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %261
  store double 0.000000e+00, ptr %264, align 8, !tbaa !33
  %265 = getelementptr inbounds [2 x double], ptr %264, i64 0, i64 1
  store double %263, ptr %265, align 8, !tbaa !33
  %266 = add nuw nsw i64 %251, 3
  %267 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %266
  %268 = load double, ptr %267, align 8, !tbaa !33
  %269 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %266
  store double 0.000000e+00, ptr %269, align 8, !tbaa !33
  %270 = getelementptr inbounds [2 x double], ptr %269, i64 0, i64 1
  store double %268, ptr %270, align 8, !tbaa !33
  %271 = add nuw nsw i64 %251, 4
  %272 = icmp eq i64 %271, %193
  br i1 %272, label %342, label %250, !llvm.loop !312

273:                                              ; preds = %189, %273
  %274 = phi i64 [ %294, %273 ], [ %190, %189 ]
  %275 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %274
  %276 = load double, ptr %275, align 8, !tbaa !33
  %277 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %274
  store double 1.000000e+00, ptr %277, align 8, !tbaa !33
  %278 = getelementptr inbounds [2 x double], ptr %277, i64 0, i64 1
  store double %276, ptr %278, align 8, !tbaa !33
  %279 = add nuw nsw i64 %274, 1
  %280 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %279
  %281 = load double, ptr %280, align 8, !tbaa !33
  %282 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %279
  store double 1.000000e+00, ptr %282, align 8, !tbaa !33
  %283 = getelementptr inbounds [2 x double], ptr %282, i64 0, i64 1
  store double %281, ptr %283, align 8, !tbaa !33
  %284 = add nuw nsw i64 %274, 2
  %285 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %284
  %286 = load double, ptr %285, align 8, !tbaa !33
  %287 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %284
  store double 1.000000e+00, ptr %287, align 8, !tbaa !33
  %288 = getelementptr inbounds [2 x double], ptr %287, i64 0, i64 1
  store double %286, ptr %288, align 8, !tbaa !33
  %289 = add nuw nsw i64 %274, 3
  %290 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %289
  %291 = load double, ptr %290, align 8, !tbaa !33
  %292 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %289
  store double 1.000000e+00, ptr %292, align 8, !tbaa !33
  %293 = getelementptr inbounds [2 x double], ptr %292, i64 0, i64 1
  store double %291, ptr %293, align 8, !tbaa !33
  %294 = add nuw nsw i64 %274, 4
  %295 = icmp eq i64 %294, %135
  br i1 %295, label %342, label %273, !llvm.loop !313

296:                                              ; preds = %131, %296
  %297 = phi i64 [ %317, %296 ], [ %132, %131 ]
  %298 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %297
  %299 = load double, ptr %298, align 8, !tbaa !33
  %300 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %297
  store double %299, ptr %300, align 8, !tbaa !33
  %301 = getelementptr inbounds [2 x double], ptr %300, i64 0, i64 1
  store double 0.000000e+00, ptr %301, align 8, !tbaa !33
  %302 = add nuw nsw i64 %297, 1
  %303 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %302
  %304 = load double, ptr %303, align 8, !tbaa !33
  %305 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %302
  store double %304, ptr %305, align 8, !tbaa !33
  %306 = getelementptr inbounds [2 x double], ptr %305, i64 0, i64 1
  store double 0.000000e+00, ptr %306, align 8, !tbaa !33
  %307 = add nuw nsw i64 %297, 2
  %308 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %307
  %309 = load double, ptr %308, align 8, !tbaa !33
  %310 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %307
  store double %309, ptr %310, align 8, !tbaa !33
  %311 = getelementptr inbounds [2 x double], ptr %310, i64 0, i64 1
  store double 0.000000e+00, ptr %311, align 8, !tbaa !33
  %312 = add nuw nsw i64 %297, 3
  %313 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %312
  %314 = load double, ptr %313, align 8, !tbaa !33
  %315 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %312
  store double %314, ptr %315, align 8, !tbaa !33
  %316 = getelementptr inbounds [2 x double], ptr %315, i64 0, i64 1
  store double 0.000000e+00, ptr %316, align 8, !tbaa !33
  %317 = add nuw nsw i64 %297, 4
  %318 = icmp eq i64 %317, %77
  br i1 %318, label %342, label %296, !llvm.loop !314

319:                                              ; preds = %73, %319
  %320 = phi i64 [ %340, %319 ], [ %74, %73 ]
  %321 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %320
  %322 = load double, ptr %321, align 8, !tbaa !33
  %323 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %320
  store double %322, ptr %323, align 8, !tbaa !33
  %324 = getelementptr inbounds [2 x double], ptr %323, i64 0, i64 1
  store double 1.000000e+00, ptr %324, align 8, !tbaa !33
  %325 = add nuw nsw i64 %320, 1
  %326 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %325
  %327 = load double, ptr %326, align 8, !tbaa !33
  %328 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %325
  store double %327, ptr %328, align 8, !tbaa !33
  %329 = getelementptr inbounds [2 x double], ptr %328, i64 0, i64 1
  store double 1.000000e+00, ptr %329, align 8, !tbaa !33
  %330 = add nuw nsw i64 %320, 2
  %331 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %330
  %332 = load double, ptr %331, align 8, !tbaa !33
  %333 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %330
  store double %332, ptr %333, align 8, !tbaa !33
  %334 = getelementptr inbounds [2 x double], ptr %333, i64 0, i64 1
  store double 1.000000e+00, ptr %334, align 8, !tbaa !33
  %335 = add nuw nsw i64 %320, 3
  %336 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %335
  %337 = load double, ptr %336, align 8, !tbaa !33
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %17, i64 %335
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double 1.000000e+00, ptr %339, align 8, !tbaa !33
  %340 = add nuw nsw i64 %320, 4
  %341 = icmp eq i64 %340, %19
  br i1 %341, label %342, label %319, !llvm.loop !315

342:                                              ; preds = %73, %319, %131, %296, %189, %273, %247, %250, %54, %112, %170, %228, %14, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE18project_to_subfaceERKNS_10QuadratureILi1EEEjjRKNS_14RefinementCaseILi1EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::vector.9", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %24

18:                                               ; preds = %5
  %19 = shl nuw nsw i64 %15, 4
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %6, align 8, !tbaa !64
  %21 = getelementptr inbounds %"class.dealii::Point.14", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi ptr [ null, %17 ], [ %23, %18 ]
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !66
  call void @_ZN6dealii10QProjectorILi2EE18project_to_subfaceERKNS_10QuadratureILi1EEEjjRSt6vectorINS_5PointILi2EEESaIS8_EERKNS_14RefinementCaseILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr nonnull align 1 poison)
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %27 unwind label %32

27:                                               ; preds = %24
  %28 = load ptr, ptr %6, align 8, !tbaa !64
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef nonnull %28) #23
  br label %31

31:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  ret void

32:                                               ; preds = %24
  %33 = landingpad { ptr, i32 }
          cleanup
  %34 = load ptr, ptr %6, align 8, !tbaa !64
  %35 = icmp eq ptr %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  call void @_ZdlPv(ptr noundef nonnull %34) #23
  br label %37

37:                                               ; preds = %36, %32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  resume { ptr, i32 } %33
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi2EE18project_to_subfaceERKNS_10QuadratureILi1EEEjjRSt6vectorINS_5PointILi2EEESaIS8_EERKNS_14RefinementCaseILi1EEE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %3, ptr nocapture nonnull readnone align 1 %4) local_unnamed_addr #8 align 2 {
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !38
  %9 = load ptr, ptr %6, align 8, !tbaa !36
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  %14 = and i64 %12, 34359738360
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %480, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  switch i32 %1, label %480 [
    i32 0, label %20
    i32 1, label %135
    i32 2, label %250
    i32 3, label %365
  ]

20:                                               ; preds = %16
  switch i32 %2, label %480 [
    i32 0, label %63
    i32 1, label %21
  ]

21:                                               ; preds = %20
  %22 = and i64 %13, 4294967295
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = shl nuw nsw i64 %22, 4
  %26 = getelementptr i8, ptr %19, i64 %25
  %27 = getelementptr i8, ptr %18, i64 %14
  %28 = icmp ult ptr %19, %27
  %29 = icmp ult ptr %18, %26
  %30 = and i1 %28, %29
  br i1 %30, label %46, label %31

31:                                               ; preds = %24
  %32 = and i64 %13, 3
  %33 = sub nsw i64 %22, %32
  br label %34

34:                                               ; preds = %34, %31
  %35 = phi i64 [ 0, %31 ], [ %42, %34 ]
  %36 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %35
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !33, !alias.scope !316
  %38 = fmul <4 x double> %37, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %39 = fadd <4 x double> %38, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %40 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %35
  %41 = shufflevector <4 x double> zeroinitializer, <4 x double> %39, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %41, ptr %40, align 8, !tbaa !33
  %42 = add nuw i64 %35, 4
  %43 = icmp eq i64 %42, %33
  br i1 %43, label %44, label %34, !llvm.loop !319

44:                                               ; preds = %34
  %45 = icmp eq i64 %32, 0
  br i1 %45, label %480, label %46

46:                                               ; preds = %24, %21, %44
  %47 = phi i64 [ 0, %24 ], [ 0, %21 ], [ %33, %44 ]
  %48 = sub nsw i64 %13, %47
  %49 = add nsw i64 %47, 1
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %47
  %54 = load double, ptr %53, align 8, !tbaa !33
  %55 = fmul double %54, 5.000000e-01
  %56 = fadd double %55, 5.000000e-01
  %57 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %47
  store double 0.000000e+00, ptr %57, align 8, !tbaa !33
  %58 = getelementptr inbounds [2 x double], ptr %57, i64 0, i64 1
  store double %56, ptr %58, align 8, !tbaa !33
  %59 = add nuw nsw i64 %47, 1
  br label %60

60:                                               ; preds = %52, %46
  %61 = phi i64 [ %47, %46 ], [ %59, %52 ]
  %62 = icmp eq i64 %22, %49
  br i1 %62, label %480, label %118

63:                                               ; preds = %20
  %64 = and i64 %13, 4294967295
  %65 = icmp ult i64 %64, 8
  br i1 %65, label %87, label %66

66:                                               ; preds = %63
  %67 = shl nuw nsw i64 %64, 4
  %68 = getelementptr i8, ptr %19, i64 %67
  %69 = getelementptr i8, ptr %18, i64 %14
  %70 = icmp ult ptr %19, %69
  %71 = icmp ult ptr %18, %68
  %72 = and i1 %70, %71
  br i1 %72, label %87, label %73

73:                                               ; preds = %66
  %74 = and i64 %13, 3
  %75 = sub nsw i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %83, %76 ]
  %78 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %77
  %79 = load <4 x double>, ptr %78, align 8, !tbaa !33, !alias.scope !320
  %80 = fmul <4 x double> %79, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %81 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %77
  %82 = shufflevector <4 x double> zeroinitializer, <4 x double> %80, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %82, ptr %81, align 8, !tbaa !33
  %83 = add nuw i64 %77, 4
  %84 = icmp eq i64 %83, %75
  br i1 %84, label %85, label %76, !llvm.loop !323

85:                                               ; preds = %76
  %86 = icmp eq i64 %74, 0
  br i1 %86, label %480, label %87

87:                                               ; preds = %66, %63, %85
  %88 = phi i64 [ 0, %66 ], [ 0, %63 ], [ %75, %85 ]
  %89 = sub nsw i64 %13, %88
  %90 = add nsw i64 %88, 1
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %88
  %95 = load double, ptr %94, align 8, !tbaa !33
  %96 = fmul double %95, 5.000000e-01
  %97 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %88
  store double 0.000000e+00, ptr %97, align 8, !tbaa !33
  %98 = getelementptr inbounds [2 x double], ptr %97, i64 0, i64 1
  store double %96, ptr %98, align 8, !tbaa !33
  %99 = add nuw nsw i64 %88, 1
  br label %100

100:                                              ; preds = %93, %87
  %101 = phi i64 [ %88, %87 ], [ %99, %93 ]
  %102 = icmp eq i64 %64, %90
  br i1 %102, label %480, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %116, %103 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %104
  %106 = load double, ptr %105, align 8, !tbaa !33
  %107 = fmul double %106, 5.000000e-01
  %108 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %104
  store double 0.000000e+00, ptr %108, align 8, !tbaa !33
  %109 = getelementptr inbounds [2 x double], ptr %108, i64 0, i64 1
  store double %107, ptr %109, align 8, !tbaa !33
  %110 = add nuw nsw i64 %104, 1
  %111 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %110
  %112 = load double, ptr %111, align 8, !tbaa !33
  %113 = fmul double %112, 5.000000e-01
  %114 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %110
  store double 0.000000e+00, ptr %114, align 8, !tbaa !33
  %115 = getelementptr inbounds [2 x double], ptr %114, i64 0, i64 1
  store double %113, ptr %115, align 8, !tbaa !33
  %116 = add nuw nsw i64 %104, 2
  %117 = icmp eq i64 %116, %64
  br i1 %117, label %480, label %103, !llvm.loop !324

118:                                              ; preds = %60, %118
  %119 = phi i64 [ %133, %118 ], [ %61, %60 ]
  %120 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %119
  %121 = load double, ptr %120, align 8, !tbaa !33
  %122 = fmul double %121, 5.000000e-01
  %123 = fadd double %122, 5.000000e-01
  %124 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %119
  store double 0.000000e+00, ptr %124, align 8, !tbaa !33
  %125 = getelementptr inbounds [2 x double], ptr %124, i64 0, i64 1
  store double %123, ptr %125, align 8, !tbaa !33
  %126 = add nuw nsw i64 %119, 1
  %127 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %126
  %128 = load double, ptr %127, align 8, !tbaa !33
  %129 = fmul double %128, 5.000000e-01
  %130 = fadd double %129, 5.000000e-01
  %131 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %126
  store double 0.000000e+00, ptr %131, align 8, !tbaa !33
  %132 = getelementptr inbounds [2 x double], ptr %131, i64 0, i64 1
  store double %130, ptr %132, align 8, !tbaa !33
  %133 = add nuw nsw i64 %119, 2
  %134 = icmp eq i64 %133, %22
  br i1 %134, label %480, label %118, !llvm.loop !325

135:                                              ; preds = %16
  switch i32 %2, label %480 [
    i32 0, label %178
    i32 1, label %136
  ]

136:                                              ; preds = %135
  %137 = and i64 %13, 4294967295
  %138 = icmp ult i64 %137, 8
  br i1 %138, label %161, label %139

139:                                              ; preds = %136
  %140 = shl nuw nsw i64 %137, 4
  %141 = getelementptr i8, ptr %19, i64 %140
  %142 = getelementptr i8, ptr %18, i64 %14
  %143 = icmp ult ptr %19, %142
  %144 = icmp ult ptr %18, %141
  %145 = and i1 %143, %144
  br i1 %145, label %161, label %146

146:                                              ; preds = %139
  %147 = and i64 %13, 3
  %148 = sub nsw i64 %137, %147
  br label %149

149:                                              ; preds = %149, %146
  %150 = phi i64 [ 0, %146 ], [ %157, %149 ]
  %151 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %150
  %152 = load <4 x double>, ptr %151, align 8, !tbaa !33, !alias.scope !326
  %153 = fmul <4 x double> %152, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %154 = fadd <4 x double> %153, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %155 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %150
  %156 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %154, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %156, ptr %155, align 8, !tbaa !33
  %157 = add nuw i64 %150, 4
  %158 = icmp eq i64 %157, %148
  br i1 %158, label %159, label %149, !llvm.loop !329

159:                                              ; preds = %149
  %160 = icmp eq i64 %147, 0
  br i1 %160, label %480, label %161

161:                                              ; preds = %139, %136, %159
  %162 = phi i64 [ 0, %139 ], [ 0, %136 ], [ %148, %159 ]
  %163 = sub nsw i64 %13, %162
  %164 = add nsw i64 %162, 1
  %165 = and i64 %163, 1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %162
  %169 = load double, ptr %168, align 8, !tbaa !33
  %170 = fmul double %169, 5.000000e-01
  %171 = fadd double %170, 5.000000e-01
  %172 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %162
  store double 1.000000e+00, ptr %172, align 8, !tbaa !33
  %173 = getelementptr inbounds [2 x double], ptr %172, i64 0, i64 1
  store double %171, ptr %173, align 8, !tbaa !33
  %174 = add nuw nsw i64 %162, 1
  br label %175

175:                                              ; preds = %167, %161
  %176 = phi i64 [ %162, %161 ], [ %174, %167 ]
  %177 = icmp eq i64 %137, %164
  br i1 %177, label %480, label %233

178:                                              ; preds = %135
  %179 = and i64 %13, 4294967295
  %180 = icmp ult i64 %179, 8
  br i1 %180, label %202, label %181

181:                                              ; preds = %178
  %182 = shl nuw nsw i64 %179, 4
  %183 = getelementptr i8, ptr %19, i64 %182
  %184 = getelementptr i8, ptr %18, i64 %14
  %185 = icmp ult ptr %19, %184
  %186 = icmp ult ptr %18, %183
  %187 = and i1 %185, %186
  br i1 %187, label %202, label %188

188:                                              ; preds = %181
  %189 = and i64 %13, 3
  %190 = sub nsw i64 %179, %189
  br label %191

191:                                              ; preds = %191, %188
  %192 = phi i64 [ 0, %188 ], [ %198, %191 ]
  %193 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %192
  %194 = load <4 x double>, ptr %193, align 8, !tbaa !33, !alias.scope !330
  %195 = fmul <4 x double> %194, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %196 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %192
  %197 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %195, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %197, ptr %196, align 8, !tbaa !33
  %198 = add nuw i64 %192, 4
  %199 = icmp eq i64 %198, %190
  br i1 %199, label %200, label %191, !llvm.loop !333

200:                                              ; preds = %191
  %201 = icmp eq i64 %189, 0
  br i1 %201, label %480, label %202

202:                                              ; preds = %181, %178, %200
  %203 = phi i64 [ 0, %181 ], [ 0, %178 ], [ %190, %200 ]
  %204 = sub nsw i64 %13, %203
  %205 = add nsw i64 %203, 1
  %206 = and i64 %204, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %215, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %203
  %210 = load double, ptr %209, align 8, !tbaa !33
  %211 = fmul double %210, 5.000000e-01
  %212 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %203
  store double 1.000000e+00, ptr %212, align 8, !tbaa !33
  %213 = getelementptr inbounds [2 x double], ptr %212, i64 0, i64 1
  store double %211, ptr %213, align 8, !tbaa !33
  %214 = add nuw nsw i64 %203, 1
  br label %215

215:                                              ; preds = %208, %202
  %216 = phi i64 [ %203, %202 ], [ %214, %208 ]
  %217 = icmp eq i64 %179, %205
  br i1 %217, label %480, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %231, %218 ], [ %216, %215 ]
  %220 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %219
  %221 = load double, ptr %220, align 8, !tbaa !33
  %222 = fmul double %221, 5.000000e-01
  %223 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %219
  store double 1.000000e+00, ptr %223, align 8, !tbaa !33
  %224 = getelementptr inbounds [2 x double], ptr %223, i64 0, i64 1
  store double %222, ptr %224, align 8, !tbaa !33
  %225 = add nuw nsw i64 %219, 1
  %226 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %225
  %227 = load double, ptr %226, align 8, !tbaa !33
  %228 = fmul double %227, 5.000000e-01
  %229 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %225
  store double 1.000000e+00, ptr %229, align 8, !tbaa !33
  %230 = getelementptr inbounds [2 x double], ptr %229, i64 0, i64 1
  store double %228, ptr %230, align 8, !tbaa !33
  %231 = add nuw nsw i64 %219, 2
  %232 = icmp eq i64 %231, %179
  br i1 %232, label %480, label %218, !llvm.loop !334

233:                                              ; preds = %175, %233
  %234 = phi i64 [ %248, %233 ], [ %176, %175 ]
  %235 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %234
  %236 = load double, ptr %235, align 8, !tbaa !33
  %237 = fmul double %236, 5.000000e-01
  %238 = fadd double %237, 5.000000e-01
  %239 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %234
  store double 1.000000e+00, ptr %239, align 8, !tbaa !33
  %240 = getelementptr inbounds [2 x double], ptr %239, i64 0, i64 1
  store double %238, ptr %240, align 8, !tbaa !33
  %241 = add nuw nsw i64 %234, 1
  %242 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %241
  %243 = load double, ptr %242, align 8, !tbaa !33
  %244 = fmul double %243, 5.000000e-01
  %245 = fadd double %244, 5.000000e-01
  %246 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %241
  store double 1.000000e+00, ptr %246, align 8, !tbaa !33
  %247 = getelementptr inbounds [2 x double], ptr %246, i64 0, i64 1
  store double %245, ptr %247, align 8, !tbaa !33
  %248 = add nuw nsw i64 %234, 2
  %249 = icmp eq i64 %248, %137
  br i1 %249, label %480, label %233, !llvm.loop !335

250:                                              ; preds = %16
  switch i32 %2, label %480 [
    i32 0, label %293
    i32 1, label %251
  ]

251:                                              ; preds = %250
  %252 = and i64 %13, 4294967295
  %253 = icmp ult i64 %252, 8
  br i1 %253, label %276, label %254

254:                                              ; preds = %251
  %255 = shl nuw nsw i64 %252, 4
  %256 = getelementptr i8, ptr %19, i64 %255
  %257 = getelementptr i8, ptr %18, i64 %14
  %258 = icmp ult ptr %19, %257
  %259 = icmp ult ptr %18, %256
  %260 = and i1 %258, %259
  br i1 %260, label %276, label %261

261:                                              ; preds = %254
  %262 = and i64 %13, 3
  %263 = sub nsw i64 %252, %262
  br label %264

264:                                              ; preds = %264, %261
  %265 = phi i64 [ 0, %261 ], [ %272, %264 ]
  %266 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %265
  %267 = load <4 x double>, ptr %266, align 8, !tbaa !33, !alias.scope !336
  %268 = fmul <4 x double> %267, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %269 = fadd <4 x double> %268, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %270 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %265
  %271 = shufflevector <4 x double> %269, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %271, ptr %270, align 8, !tbaa !33
  %272 = add nuw i64 %265, 4
  %273 = icmp eq i64 %272, %263
  br i1 %273, label %274, label %264, !llvm.loop !339

274:                                              ; preds = %264
  %275 = icmp eq i64 %262, 0
  br i1 %275, label %480, label %276

276:                                              ; preds = %254, %251, %274
  %277 = phi i64 [ 0, %254 ], [ 0, %251 ], [ %263, %274 ]
  %278 = sub nsw i64 %13, %277
  %279 = add nsw i64 %277, 1
  %280 = and i64 %278, 1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %290, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %277
  %284 = load double, ptr %283, align 8, !tbaa !33
  %285 = fmul double %284, 5.000000e-01
  %286 = fadd double %285, 5.000000e-01
  %287 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %277
  store double %286, ptr %287, align 8, !tbaa !33
  %288 = getelementptr inbounds [2 x double], ptr %287, i64 0, i64 1
  store double 0.000000e+00, ptr %288, align 8, !tbaa !33
  %289 = add nuw nsw i64 %277, 1
  br label %290

290:                                              ; preds = %282, %276
  %291 = phi i64 [ %277, %276 ], [ %289, %282 ]
  %292 = icmp eq i64 %252, %279
  br i1 %292, label %480, label %348

293:                                              ; preds = %250
  %294 = and i64 %13, 4294967295
  %295 = icmp ult i64 %294, 8
  br i1 %295, label %317, label %296

296:                                              ; preds = %293
  %297 = shl nuw nsw i64 %294, 4
  %298 = getelementptr i8, ptr %19, i64 %297
  %299 = getelementptr i8, ptr %18, i64 %14
  %300 = icmp ult ptr %19, %299
  %301 = icmp ult ptr %18, %298
  %302 = and i1 %300, %301
  br i1 %302, label %317, label %303

303:                                              ; preds = %296
  %304 = and i64 %13, 3
  %305 = sub nsw i64 %294, %304
  br label %306

306:                                              ; preds = %306, %303
  %307 = phi i64 [ 0, %303 ], [ %313, %306 ]
  %308 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %307
  %309 = load <4 x double>, ptr %308, align 8, !tbaa !33, !alias.scope !340
  %310 = fmul <4 x double> %309, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %311 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %307
  %312 = shufflevector <4 x double> %310, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %312, ptr %311, align 8, !tbaa !33
  %313 = add nuw i64 %307, 4
  %314 = icmp eq i64 %313, %305
  br i1 %314, label %315, label %306, !llvm.loop !343

315:                                              ; preds = %306
  %316 = icmp eq i64 %304, 0
  br i1 %316, label %480, label %317

317:                                              ; preds = %296, %293, %315
  %318 = phi i64 [ 0, %296 ], [ 0, %293 ], [ %305, %315 ]
  %319 = sub nsw i64 %13, %318
  %320 = add nsw i64 %318, 1
  %321 = and i64 %319, 1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %330, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %318
  %325 = load double, ptr %324, align 8, !tbaa !33
  %326 = fmul double %325, 5.000000e-01
  %327 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %318
  store double %326, ptr %327, align 8, !tbaa !33
  %328 = getelementptr inbounds [2 x double], ptr %327, i64 0, i64 1
  store double 0.000000e+00, ptr %328, align 8, !tbaa !33
  %329 = add nuw nsw i64 %318, 1
  br label %330

330:                                              ; preds = %323, %317
  %331 = phi i64 [ %318, %317 ], [ %329, %323 ]
  %332 = icmp eq i64 %294, %320
  br i1 %332, label %480, label %333

333:                                              ; preds = %330, %333
  %334 = phi i64 [ %346, %333 ], [ %331, %330 ]
  %335 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %334
  %336 = load double, ptr %335, align 8, !tbaa !33
  %337 = fmul double %336, 5.000000e-01
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %334
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double 0.000000e+00, ptr %339, align 8, !tbaa !33
  %340 = add nuw nsw i64 %334, 1
  %341 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %340
  %342 = load double, ptr %341, align 8, !tbaa !33
  %343 = fmul double %342, 5.000000e-01
  %344 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %340
  store double %343, ptr %344, align 8, !tbaa !33
  %345 = getelementptr inbounds [2 x double], ptr %344, i64 0, i64 1
  store double 0.000000e+00, ptr %345, align 8, !tbaa !33
  %346 = add nuw nsw i64 %334, 2
  %347 = icmp eq i64 %346, %294
  br i1 %347, label %480, label %333, !llvm.loop !344

348:                                              ; preds = %290, %348
  %349 = phi i64 [ %363, %348 ], [ %291, %290 ]
  %350 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %349
  %351 = load double, ptr %350, align 8, !tbaa !33
  %352 = fmul double %351, 5.000000e-01
  %353 = fadd double %352, 5.000000e-01
  %354 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %349
  store double %353, ptr %354, align 8, !tbaa !33
  %355 = getelementptr inbounds [2 x double], ptr %354, i64 0, i64 1
  store double 0.000000e+00, ptr %355, align 8, !tbaa !33
  %356 = add nuw nsw i64 %349, 1
  %357 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %356
  %358 = load double, ptr %357, align 8, !tbaa !33
  %359 = fmul double %358, 5.000000e-01
  %360 = fadd double %359, 5.000000e-01
  %361 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %356
  store double %360, ptr %361, align 8, !tbaa !33
  %362 = getelementptr inbounds [2 x double], ptr %361, i64 0, i64 1
  store double 0.000000e+00, ptr %362, align 8, !tbaa !33
  %363 = add nuw nsw i64 %349, 2
  %364 = icmp eq i64 %363, %252
  br i1 %364, label %480, label %348, !llvm.loop !345

365:                                              ; preds = %16
  switch i32 %2, label %480 [
    i32 0, label %408
    i32 1, label %366
  ]

366:                                              ; preds = %365
  %367 = and i64 %13, 4294967295
  %368 = icmp ult i64 %367, 8
  br i1 %368, label %391, label %369

369:                                              ; preds = %366
  %370 = shl nuw nsw i64 %367, 4
  %371 = getelementptr i8, ptr %19, i64 %370
  %372 = getelementptr i8, ptr %18, i64 %14
  %373 = icmp ult ptr %19, %372
  %374 = icmp ult ptr %18, %371
  %375 = and i1 %373, %374
  br i1 %375, label %391, label %376

376:                                              ; preds = %369
  %377 = and i64 %13, 3
  %378 = sub nsw i64 %367, %377
  br label %379

379:                                              ; preds = %379, %376
  %380 = phi i64 [ 0, %376 ], [ %387, %379 ]
  %381 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %380
  %382 = load <4 x double>, ptr %381, align 8, !tbaa !33, !alias.scope !346
  %383 = fmul <4 x double> %382, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %384 = fadd <4 x double> %383, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %385 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %380
  %386 = shufflevector <4 x double> %384, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %386, ptr %385, align 8, !tbaa !33
  %387 = add nuw i64 %380, 4
  %388 = icmp eq i64 %387, %378
  br i1 %388, label %389, label %379, !llvm.loop !349

389:                                              ; preds = %379
  %390 = icmp eq i64 %377, 0
  br i1 %390, label %480, label %391

391:                                              ; preds = %369, %366, %389
  %392 = phi i64 [ 0, %369 ], [ 0, %366 ], [ %378, %389 ]
  %393 = sub nsw i64 %13, %392
  %394 = add nsw i64 %392, 1
  %395 = and i64 %393, 1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %405, label %397

397:                                              ; preds = %391
  %398 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %392
  %399 = load double, ptr %398, align 8, !tbaa !33
  %400 = fmul double %399, 5.000000e-01
  %401 = fadd double %400, 5.000000e-01
  %402 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %392
  store double %401, ptr %402, align 8, !tbaa !33
  %403 = getelementptr inbounds [2 x double], ptr %402, i64 0, i64 1
  store double 1.000000e+00, ptr %403, align 8, !tbaa !33
  %404 = add nuw nsw i64 %392, 1
  br label %405

405:                                              ; preds = %397, %391
  %406 = phi i64 [ %392, %391 ], [ %404, %397 ]
  %407 = icmp eq i64 %367, %394
  br i1 %407, label %480, label %463

408:                                              ; preds = %365
  %409 = and i64 %13, 4294967295
  %410 = icmp ult i64 %409, 8
  br i1 %410, label %432, label %411

411:                                              ; preds = %408
  %412 = shl nuw nsw i64 %409, 4
  %413 = getelementptr i8, ptr %19, i64 %412
  %414 = getelementptr i8, ptr %18, i64 %14
  %415 = icmp ult ptr %19, %414
  %416 = icmp ult ptr %18, %413
  %417 = and i1 %415, %416
  br i1 %417, label %432, label %418

418:                                              ; preds = %411
  %419 = and i64 %13, 3
  %420 = sub nsw i64 %409, %419
  br label %421

421:                                              ; preds = %421, %418
  %422 = phi i64 [ 0, %418 ], [ %428, %421 ]
  %423 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %422
  %424 = load <4 x double>, ptr %423, align 8, !tbaa !33, !alias.scope !350
  %425 = fmul <4 x double> %424, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %426 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %422
  %427 = shufflevector <4 x double> %425, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %427, ptr %426, align 8, !tbaa !33
  %428 = add nuw i64 %422, 4
  %429 = icmp eq i64 %428, %420
  br i1 %429, label %430, label %421, !llvm.loop !353

430:                                              ; preds = %421
  %431 = icmp eq i64 %419, 0
  br i1 %431, label %480, label %432

432:                                              ; preds = %411, %408, %430
  %433 = phi i64 [ 0, %411 ], [ 0, %408 ], [ %420, %430 ]
  %434 = sub nsw i64 %13, %433
  %435 = add nsw i64 %433, 1
  %436 = and i64 %434, 1
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %445, label %438

438:                                              ; preds = %432
  %439 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %433
  %440 = load double, ptr %439, align 8, !tbaa !33
  %441 = fmul double %440, 5.000000e-01
  %442 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %433
  store double %441, ptr %442, align 8, !tbaa !33
  %443 = getelementptr inbounds [2 x double], ptr %442, i64 0, i64 1
  store double 1.000000e+00, ptr %443, align 8, !tbaa !33
  %444 = add nuw nsw i64 %433, 1
  br label %445

445:                                              ; preds = %438, %432
  %446 = phi i64 [ %433, %432 ], [ %444, %438 ]
  %447 = icmp eq i64 %409, %435
  br i1 %447, label %480, label %448

448:                                              ; preds = %445, %448
  %449 = phi i64 [ %461, %448 ], [ %446, %445 ]
  %450 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %449
  %451 = load double, ptr %450, align 8, !tbaa !33
  %452 = fmul double %451, 5.000000e-01
  %453 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %449
  store double %452, ptr %453, align 8, !tbaa !33
  %454 = getelementptr inbounds [2 x double], ptr %453, i64 0, i64 1
  store double 1.000000e+00, ptr %454, align 8, !tbaa !33
  %455 = add nuw nsw i64 %449, 1
  %456 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %455
  %457 = load double, ptr %456, align 8, !tbaa !33
  %458 = fmul double %457, 5.000000e-01
  %459 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %455
  store double %458, ptr %459, align 8, !tbaa !33
  %460 = getelementptr inbounds [2 x double], ptr %459, i64 0, i64 1
  store double 1.000000e+00, ptr %460, align 8, !tbaa !33
  %461 = add nuw nsw i64 %449, 2
  %462 = icmp eq i64 %461, %409
  br i1 %462, label %480, label %448, !llvm.loop !354

463:                                              ; preds = %405, %463
  %464 = phi i64 [ %478, %463 ], [ %406, %405 ]
  %465 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %464
  %466 = load double, ptr %465, align 8, !tbaa !33
  %467 = fmul double %466, 5.000000e-01
  %468 = fadd double %467, 5.000000e-01
  %469 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %464
  store double %468, ptr %469, align 8, !tbaa !33
  %470 = getelementptr inbounds [2 x double], ptr %469, i64 0, i64 1
  store double 1.000000e+00, ptr %470, align 8, !tbaa !33
  %471 = add nuw nsw i64 %464, 1
  %472 = getelementptr inbounds %"class.dealii::Point", ptr %18, i64 %471
  %473 = load double, ptr %472, align 8, !tbaa !33
  %474 = fmul double %473, 5.000000e-01
  %475 = fadd double %474, 5.000000e-01
  %476 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %471
  store double %475, ptr %476, align 8, !tbaa !33
  %477 = getelementptr inbounds [2 x double], ptr %476, i64 0, i64 1
  store double 1.000000e+00, ptr %477, align 8, !tbaa !33
  %478 = add nuw nsw i64 %464, 2
  %479 = icmp eq i64 %478, %367
  br i1 %479, label %480, label %463, !llvm.loop !355

480:                                              ; preds = %405, %463, %445, %448, %290, %348, %330, %333, %175, %233, %215, %218, %60, %118, %100, %103, %389, %430, %274, %315, %159, %200, %44, %85, %365, %250, %135, %20, %16, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE16project_to_childERKNS_10QuadratureILi2EEEj(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.9", align 8
  %5 = alloca %"class.std::vector.3", align 8
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !40
  %9 = load ptr, ptr %6, align 8, !tbaa !40
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %23

17:                                               ; preds = %3
  %18 = shl nuw nsw i64 %14, 4
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !64
  %20 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  br label %23

23:                                               ; preds = %17, %16
  %24 = phi ptr [ null, %16 ], [ %19, %17 ]
  %25 = phi ptr [ null, %16 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !66
  %27 = and i64 %12, 34359738360
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %94, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !64
  %32 = and i32 %2, 1
  %33 = lshr i32 %2, 1
  %34 = insertelement <2 x i32> poison, i32 %32, i64 0
  %35 = insertelement <2 x i32> %34, i32 %33, i64 1
  %36 = uitofp <2 x i32> %35 to <2 x double>
  %37 = and i64 %13, 4294967295
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %78, label %39

39:                                               ; preds = %29
  %40 = shl nuw nsw i64 %37, 4
  %41 = getelementptr i8, ptr %24, i64 %40
  %42 = getelementptr i8, ptr %31, i64 %40
  %43 = icmp ult ptr %24, %42
  %44 = icmp ult ptr %31, %41
  %45 = and i1 %43, %44
  br i1 %45, label %78, label %46

46:                                               ; preds = %39
  %47 = and i64 %13, 3
  %48 = sub nsw i64 %37, %47
  %49 = shufflevector <2 x double> %36, <2 x double> poison, <2 x i32> zeroinitializer
  %50 = shufflevector <2 x double> %36, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  br label %51

51:                                               ; preds = %51, %46
  %52 = phi i64 [ 0, %46 ], [ %74, %51 ]
  %53 = or i64 %52, 2
  %54 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %52
  %55 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %53
  %56 = load <4 x double>, ptr %54, align 8, !tbaa !33, !noalias !356
  %57 = load <4 x double>, ptr %55, align 8, !tbaa !33, !noalias !356
  %58 = shufflevector <4 x double> %56, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %59 = shufflevector <4 x double> %57, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %60 = shufflevector <4 x double> %56, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %61 = shufflevector <4 x double> %57, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %62 = fadd <2 x double> %58, %49
  %63 = fadd <2 x double> %59, %49
  %64 = fadd <2 x double> %60, %50
  %65 = fadd <2 x double> %61, %50
  %66 = fmul <2 x double> %62, <double 5.000000e-01, double 5.000000e-01>
  %67 = fmul <2 x double> %63, <double 5.000000e-01, double 5.000000e-01>
  %68 = fmul <2 x double> %64, <double 5.000000e-01, double 5.000000e-01>
  %69 = fmul <2 x double> %65, <double 5.000000e-01, double 5.000000e-01>
  %70 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %52
  %71 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %53
  %72 = shufflevector <2 x double> %66, <2 x double> %68, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %72, ptr %70, align 8, !tbaa !33
  %73 = shufflevector <2 x double> %67, <2 x double> %69, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %73, ptr %71, align 8, !tbaa !33
  %74 = add nuw i64 %52, 4
  %75 = icmp eq i64 %74, %48
  br i1 %75, label %76, label %51, !llvm.loop !359

76:                                               ; preds = %51
  %77 = icmp eq i64 %47, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %39, %29, %76
  %79 = phi i64 [ 0, %39 ], [ 0, %29 ], [ %48, %76 ]
  %80 = sub nsw i64 %13, %79
  %81 = add nsw i64 %79, 1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %79
  %86 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %79
  %87 = load <2 x double>, ptr %85, align 8, !tbaa !33, !noalias !356
  %88 = fadd <2 x double> %87, %36
  %89 = fmul <2 x double> %88, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %89, ptr %86, align 8, !tbaa !33
  %90 = add nuw nsw i64 %79, 1
  br label %91

91:                                               ; preds = %84, %78
  %92 = phi i64 [ %79, %78 ], [ %90, %84 ]
  %93 = icmp eq i64 %37, %81
  br i1 %93, label %94, label %142

94:                                               ; preds = %91, %142, %76, %23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %95 = ashr exact i64 %12, 3
  %96 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %96, align 8
  %97 = icmp eq ptr %8, %9
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = icmp ugt i64 %12, 9223372036854775800
  br i1 %99, label %100, label %102, !prof !39

100:                                              ; preds = %98
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %101 unwind label %158

101:                                              ; preds = %100
  unreachable

102:                                              ; preds = %98
  %103 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #22
          to label %104 unwind label %158

104:                                              ; preds = %102, %94
  %105 = phi ptr [ null, %94 ], [ %103, %102 ]
  store ptr %105, ptr %5, align 8, !tbaa !36
  %106 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %107 = getelementptr inbounds double, ptr %105, i64 %95
  %108 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %107, ptr %108, align 8, !tbaa !37
  %109 = icmp sgt i64 %12, 8
  br i1 %109, label %110, label %111, !prof !45

110:                                              ; preds = %104
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %105, ptr align 8 %9, i64 %12, i1 false)
  br label %115

111:                                              ; preds = %104
  %112 = icmp eq i64 %12, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = load double, ptr %9, align 8, !tbaa !33
  store double %114, ptr %105, align 8, !tbaa !33
  store ptr %107, ptr %106, align 8, !tbaa !38
  br label %116

115:                                              ; preds = %110, %111
  store ptr %107, ptr %106, align 8, !tbaa !38
  br i1 %28, label %157, label %116

116:                                              ; preds = %113, %115
  %117 = and i64 %13, 4294967295
  %118 = icmp ult i64 %117, 16
  br i1 %118, label %140, label %119

119:                                              ; preds = %116
  %120 = and i64 %13, 15
  %121 = sub nsw i64 %117, %120
  br label %122

122:                                              ; preds = %122, %119
  %123 = phi i64 [ 0, %119 ], [ %136, %122 ]
  %124 = getelementptr inbounds double, ptr %105, i64 %123
  %125 = load <4 x double>, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds double, ptr %124, i64 4
  %127 = load <4 x double>, ptr %126, align 8, !tbaa !33
  %128 = getelementptr inbounds double, ptr %124, i64 8
  %129 = load <4 x double>, ptr %128, align 8, !tbaa !33
  %130 = getelementptr inbounds double, ptr %124, i64 12
  %131 = load <4 x double>, ptr %130, align 8, !tbaa !33
  %132 = fmul <4 x double> %125, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  %133 = fmul <4 x double> %127, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  %134 = fmul <4 x double> %129, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  %135 = fmul <4 x double> %131, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  store <4 x double> %132, ptr %124, align 8, !tbaa !33
  store <4 x double> %133, ptr %126, align 8, !tbaa !33
  store <4 x double> %134, ptr %128, align 8, !tbaa !33
  store <4 x double> %135, ptr %130, align 8, !tbaa !33
  %136 = add nuw i64 %123, 16
  %137 = icmp eq i64 %136, %121
  br i1 %137, label %138, label %122, !llvm.loop !360

138:                                              ; preds = %122
  %139 = icmp eq i64 %120, 0
  br i1 %139, label %157, label %140

140:                                              ; preds = %116, %138
  %141 = phi i64 [ 0, %116 ], [ %121, %138 ]
  br label %160

142:                                              ; preds = %91, %142
  %143 = phi i64 [ %155, %142 ], [ %92, %91 ]
  %144 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %143
  %145 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %143
  %146 = load <2 x double>, ptr %144, align 8, !tbaa !33, !noalias !356
  %147 = fadd <2 x double> %146, %36
  %148 = fmul <2 x double> %147, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %148, ptr %145, align 8, !tbaa !33
  %149 = add nuw nsw i64 %143, 1
  %150 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %149
  %151 = getelementptr inbounds %"class.dealii::Point.14", ptr %24, i64 %149
  %152 = load <2 x double>, ptr %150, align 8, !tbaa !33, !noalias !356
  %153 = fadd <2 x double> %152, %36
  %154 = fmul <2 x double> %153, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %154, ptr %151, align 8, !tbaa !33
  %155 = add nuw nsw i64 %143, 2
  %156 = icmp eq i64 %155, %37
  br i1 %156, label %94, label %142, !llvm.loop !361

157:                                              ; preds = %160, %138, %115
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %167 unwind label %171

158:                                              ; preds = %102, %100
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %181

160:                                              ; preds = %140, %160
  %161 = phi i64 [ %165, %160 ], [ %141, %140 ]
  %162 = getelementptr inbounds double, ptr %105, i64 %161
  %163 = load double, ptr %162, align 8, !tbaa !33
  %164 = fmul double %163, 2.500000e-01
  store double %164, ptr %162, align 8, !tbaa !33
  %165 = add nuw nsw i64 %161, 1
  %166 = icmp eq i64 %165, %117
  br i1 %166, label %157, label %160, !llvm.loop !362

167:                                              ; preds = %157
  %168 = load ptr, ptr %5, align 8, !tbaa !36
  %169 = icmp eq ptr %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %167
  call void @_ZdlPv(ptr noundef nonnull %168) #23
  br label %176

171:                                              ; preds = %157
  %172 = landingpad { ptr, i32 }
          cleanup
  %173 = load ptr, ptr %5, align 8, !tbaa !36
  %174 = icmp eq ptr %173, null
  br i1 %174, label %181, label %175

175:                                              ; preds = %171
  call void @_ZdlPv(ptr noundef nonnull %173) #23
  br label %181

176:                                              ; preds = %170, %167
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %177 = load ptr, ptr %4, align 8, !tbaa !64
  %178 = icmp eq ptr %177, null
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZdlPv(ptr noundef nonnull %177) #23
  br label %180

180:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

181:                                              ; preds = %175, %171, %158
  %182 = phi { ptr, i32 } [ %159, %158 ], [ %172, %171 ], [ %172, %175 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %183 = load ptr, ptr %4, align 8, !tbaa !64
  %184 = icmp eq ptr %183, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %181
  call void @_ZdlPv(ptr noundef nonnull %183) #23
  br label %186

186:                                              ; preds = %185, %181
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %182
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi2EEES9_(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.9", align 8
  %6 = alloca %"class.std::vector.3", align 8
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %30

18:                                               ; preds = %4
  %19 = shl nuw nsw i64 %15, 4
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %5, align 8, !tbaa !64
  %21 = getelementptr inbounds %"class.dealii::Point.14", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %25 = shl nuw nsw i64 %15, 3
  %26 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #22
          to label %27 unwind label %109

27:                                               ; preds = %18
  store ptr %26, ptr %6, align 8, !tbaa !36
  %28 = getelementptr inbounds double, ptr %26, i64 %15
  %29 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %26, i8 0, i64 %25, i1 false), !tbaa !33
  br label %30

30:                                               ; preds = %27, %17
  %31 = phi ptr [ null, %17 ], [ %26, %27 ]
  %32 = phi ptr [ null, %17 ], [ %20, %27 ]
  %33 = phi ptr [ null, %17 ], [ %28, %27 ]
  %34 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %33, ptr %34, align 8, !tbaa !38
  %35 = load <2 x double>, ptr %2, align 8, !tbaa !33
  %36 = load <2 x double>, ptr %3, align 8, !tbaa !33
  %37 = fsub <2 x double> %35, %36
  %38 = extractelement <2 x double> %37, i64 0
  %39 = tail call double @llvm.fmuladd.f64(double %38, double %38, double 0.000000e+00)
  %40 = fsub <2 x double> %35, %36
  %41 = extractelement <2 x double> %40, i64 1
  %42 = tail call double @llvm.fmuladd.f64(double %41, double %41, double %39)
  %43 = tail call double @llvm.sqrt.f64(double %42)
  %44 = and i64 %13, 34359738360
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %108, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !31
  %49 = and i64 %14, 4294967295
  %50 = icmp ult i64 %49, 12
  br i1 %50, label %106, label %51

51:                                               ; preds = %46
  %52 = shl nuw nsw i64 %49, 4
  %53 = getelementptr i8, ptr %32, i64 %52
  %54 = getelementptr i8, ptr %31, i64 %44
  %55 = getelementptr i8, ptr %48, i64 %44
  %56 = getelementptr i8, ptr %10, i64 %44
  %57 = icmp ult ptr %32, %54
  %58 = icmp ult ptr %31, %53
  %59 = and i1 %57, %58
  %60 = icmp ult ptr %32, %55
  %61 = icmp ult ptr %48, %53
  %62 = and i1 %60, %61
  %63 = or i1 %59, %62
  %64 = icmp ult ptr %32, %56
  %65 = icmp ult ptr %10, %53
  %66 = and i1 %64, %65
  %67 = or i1 %63, %66
  %68 = icmp ult ptr %31, %55
  %69 = icmp ult ptr %48, %54
  %70 = and i1 %68, %69
  %71 = or i1 %67, %70
  %72 = icmp ult ptr %31, %56
  %73 = icmp ult ptr %10, %54
  %74 = and i1 %72, %73
  %75 = or i1 %71, %74
  br i1 %75, label %106, label %76

76:                                               ; preds = %51
  %77 = and i64 %14, 3
  %78 = sub nsw i64 %49, %77
  %79 = shufflevector <2 x double> %36, <2 x double> poison, <4 x i32> zeroinitializer
  %80 = shufflevector <2 x double> %36, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %81 = shufflevector <2 x double> %35, <2 x double> poison, <4 x i32> zeroinitializer
  %82 = shufflevector <2 x double> %35, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %83 = insertelement <4 x double> poison, double %43, i64 0
  %84 = shufflevector <4 x double> %83, <4 x double> poison, <4 x i32> zeroinitializer
  br label %85

85:                                               ; preds = %85, %76
  %86 = phi i64 [ 0, %76 ], [ %102, %85 ]
  %87 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %86
  %88 = load <4 x double>, ptr %87, align 8, !tbaa !33, !alias.scope !363
  %89 = fmul <4 x double> %88, %79
  %90 = fmul <4 x double> %88, %80
  %91 = fsub <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %88
  %92 = fmul <4 x double> %91, %81
  %93 = fmul <4 x double> %91, %82
  %94 = fadd <4 x double> %89, %92
  %95 = fadd <4 x double> %90, %93
  %96 = getelementptr inbounds %"class.dealii::Point.14", ptr %32, i64 %86
  %97 = shufflevector <4 x double> %94, <4 x double> %95, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %97, ptr %96, align 8, !tbaa !33
  %98 = getelementptr inbounds double, ptr %10, i64 %86
  %99 = load <4 x double>, ptr %98, align 8, !tbaa !33, !alias.scope !366
  %100 = fmul <4 x double> %84, %99
  %101 = getelementptr inbounds double, ptr %31, i64 %86
  store <4 x double> %100, ptr %101, align 8, !tbaa !33, !alias.scope !368, !noalias !370
  %102 = add nuw i64 %86, 4
  %103 = icmp eq i64 %102, %78
  br i1 %103, label %104, label %85, !llvm.loop !371

104:                                              ; preds = %85
  %105 = icmp eq i64 %77, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %51, %46, %104
  %107 = phi i64 [ 0, %51 ], [ 0, %46 ], [ %78, %104 ]
  br label %115

108:                                              ; preds = %115, %104, %30
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %134 unwind label %111

109:                                              ; preds = %18
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %144

111:                                              ; preds = %108
  %112 = landingpad { ptr, i32 }
          cleanup
  %113 = load ptr, ptr %6, align 8, !tbaa !36
  %114 = icmp eq ptr %113, null
  br i1 %114, label %144, label %138

115:                                              ; preds = %106, %115
  %116 = phi i64 [ %132, %115 ], [ %107, %106 ]
  %117 = getelementptr inbounds %"class.dealii::Point", ptr %48, i64 %116
  %118 = load double, ptr %117, align 8, !tbaa !33
  %119 = getelementptr inbounds %"class.dealii::Point.14", ptr %32, i64 %116
  %120 = fsub double 1.000000e+00, %118
  %121 = insertelement <2 x double> poison, double %118, i64 0
  %122 = shufflevector <2 x double> %121, <2 x double> poison, <2 x i32> zeroinitializer
  %123 = fmul <2 x double> %122, %36
  %124 = insertelement <2 x double> poison, double %120, i64 0
  %125 = shufflevector <2 x double> %124, <2 x double> poison, <2 x i32> zeroinitializer
  %126 = fmul <2 x double> %125, %35
  %127 = fadd <2 x double> %123, %126
  store <2 x double> %127, ptr %119, align 8, !tbaa !33
  %128 = getelementptr inbounds double, ptr %10, i64 %116
  %129 = load double, ptr %128, align 8, !tbaa !33
  %130 = fmul double %43, %129
  %131 = getelementptr inbounds double, ptr %31, i64 %116
  store double %130, ptr %131, align 8, !tbaa !33
  %132 = add nuw nsw i64 %116, 1
  %133 = icmp eq i64 %132, %49
  br i1 %133, label %108, label %115, !llvm.loop !372

134:                                              ; preds = %108
  %135 = load ptr, ptr %6, align 8, !tbaa !36
  %136 = icmp eq ptr %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  call void @_ZdlPv(ptr noundef nonnull %135) #23
  br label %139

138:                                              ; preds = %111
  call void @_ZdlPv(ptr noundef nonnull %113) #23
  br label %144

139:                                              ; preds = %137, %134
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %140 = load ptr, ptr %5, align 8, !tbaa !64
  %141 = icmp eq ptr %140, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @_ZdlPv(ptr noundef nonnull %140) #23
  br label %143

143:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  ret void

144:                                              ; preds = %138, %111, %109
  %145 = phi { ptr, i32 } [ %110, %109 ], [ %112, %111 ], [ %112, %138 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %146 = load ptr, ptr %5, align 8, !tbaa !64
  %147 = icmp eq ptr %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @_ZdlPv(ptr noundef nonnull %146) #23
  br label %149

149:                                              ; preds = %148, %144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  resume { ptr, i32 } %145
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC2Ev(ptr noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC5Ev) align 2 {
  store i32 -1, ptr %0, align 4, !tbaa !373
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi2EE17DataSetDescriptor4cellEv() local_unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi2EE17DataSetDescriptor4faceEjbbbj(i32 noundef %0, i1 noundef zeroext %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i32 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = mul i32 %4, %0
  ret i32 %6
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QProjectorILi2EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 4, !tbaa !373
  ret i32 %2
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC2Ej(ptr noundef nonnull align 4 dereferenceable(4) %0, i32 noundef %1) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi2EE17DataSetDescriptorC5Ej) align 2 {
  store i32 %1, ptr %0, align 4, !tbaa !373
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE7reflectERKNS_10QuadratureILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.9", align 8
  %4 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %28

16:                                               ; preds = %2
  %17 = shl nuw nsw i64 %13, 4
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %3, align 8, !tbaa !64
  %19 = getelementptr inbounds %"class.dealii::Point.14", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %23 = shl nuw nsw i64 %13, 3
  %24 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %23) #22
          to label %25 unwind label %104

25:                                               ; preds = %16
  store ptr %24, ptr %4, align 8, !tbaa !36
  %26 = getelementptr inbounds double, ptr %24, i64 %13
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %24, i8 0, i64 %23, i1 false), !tbaa !33
  br label %28

28:                                               ; preds = %25, %15
  %29 = phi ptr [ null, %15 ], [ %24, %25 ]
  %30 = phi ptr [ null, %15 ], [ %18, %25 ]
  %31 = phi ptr [ null, %15 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %31, ptr %32, align 8, !tbaa !38
  %33 = and i64 %11, 34359738360
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %103, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !64
  %38 = and i64 %12, 4294967295
  %39 = icmp ult i64 %38, 26
  br i1 %39, label %83, label %40

40:                                               ; preds = %35
  %41 = shl nuw nsw i64 %38, 4
  %42 = getelementptr i8, ptr %30, i64 %41
  %43 = getelementptr i8, ptr %29, i64 %33
  %44 = getelementptr i8, ptr %37, i64 %41
  %45 = getelementptr i8, ptr %8, i64 %33
  %46 = icmp ult ptr %30, %43
  %47 = icmp ult ptr %29, %42
  %48 = and i1 %46, %47
  %49 = icmp ult ptr %30, %44
  %50 = icmp ult ptr %37, %42
  %51 = and i1 %49, %50
  %52 = or i1 %48, %51
  %53 = icmp ult ptr %30, %45
  %54 = icmp ult ptr %8, %42
  %55 = and i1 %53, %54
  %56 = or i1 %52, %55
  %57 = icmp ult ptr %29, %44
  %58 = icmp ult ptr %37, %43
  %59 = and i1 %57, %58
  %60 = or i1 %56, %59
  %61 = icmp ult ptr %29, %45
  %62 = icmp ult ptr %8, %43
  %63 = and i1 %61, %62
  %64 = or i1 %60, %63
  br i1 %64, label %83, label %65

65:                                               ; preds = %40
  %66 = and i64 %12, 1
  %67 = sub nsw i64 %38, %66
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %79, %68 ]
  %70 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %69
  %71 = load <4 x double>, ptr %70, align 8, !tbaa !33
  %72 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %73 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %74 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %69
  %75 = shufflevector <2 x double> %73, <2 x double> %72, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %75, ptr %74, align 8, !tbaa !33
  %76 = getelementptr inbounds double, ptr %8, i64 %69
  %77 = load <2 x double>, ptr %76, align 8, !tbaa !33, !alias.scope !375
  %78 = getelementptr inbounds double, ptr %29, i64 %69
  store <2 x double> %77, ptr %78, align 8, !tbaa !33, !alias.scope !378, !noalias !380
  %79 = add nuw i64 %69, 2
  %80 = icmp eq i64 %79, %67
  br i1 %80, label %81, label %68, !llvm.loop !382

81:                                               ; preds = %68
  %82 = icmp eq i64 %66, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %40, %35, %81
  %84 = phi i64 [ 0, %40 ], [ 0, %35 ], [ %67, %81 ]
  %85 = sub nsw i64 %12, %84
  %86 = add nsw i64 %84, 1
  %87 = and i64 %85, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %84
  %91 = getelementptr inbounds [2 x double], ptr %90, i64 0, i64 1
  %92 = load double, ptr %91, align 8, !tbaa !33
  %93 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %84
  store double %92, ptr %93, align 8, !tbaa !33
  %94 = load double, ptr %90, align 8, !tbaa !33
  %95 = getelementptr inbounds [2 x double], ptr %93, i64 0, i64 1
  store double %94, ptr %95, align 8, !tbaa !33
  %96 = getelementptr inbounds double, ptr %8, i64 %84
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = getelementptr inbounds double, ptr %29, i64 %84
  store double %97, ptr %98, align 8, !tbaa !33
  %99 = add nuw nsw i64 %84, 1
  br label %100

100:                                              ; preds = %89, %83
  %101 = phi i64 [ %84, %83 ], [ %99, %89 ]
  %102 = icmp eq i64 %13, %86
  br i1 %102, label %103, label %106

103:                                              ; preds = %100, %106, %81, %28
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %129 unwind label %133

104:                                              ; preds = %16
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %143

106:                                              ; preds = %100, %106
  %107 = phi i64 [ %127, %106 ], [ %101, %100 ]
  %108 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %107
  %109 = getelementptr inbounds [2 x double], ptr %108, i64 0, i64 1
  %110 = load double, ptr %109, align 8, !tbaa !33
  %111 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %107
  store double %110, ptr %111, align 8, !tbaa !33
  %112 = load double, ptr %108, align 8, !tbaa !33
  %113 = getelementptr inbounds [2 x double], ptr %111, i64 0, i64 1
  store double %112, ptr %113, align 8, !tbaa !33
  %114 = getelementptr inbounds double, ptr %8, i64 %107
  %115 = load double, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds double, ptr %29, i64 %107
  store double %115, ptr %116, align 8, !tbaa !33
  %117 = add nuw nsw i64 %107, 1
  %118 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %117
  %119 = getelementptr inbounds [2 x double], ptr %118, i64 0, i64 1
  %120 = load double, ptr %119, align 8, !tbaa !33
  %121 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %117
  store double %120, ptr %121, align 8, !tbaa !33
  %122 = load double, ptr %118, align 8, !tbaa !33
  %123 = getelementptr inbounds [2 x double], ptr %121, i64 0, i64 1
  store double %122, ptr %123, align 8, !tbaa !33
  %124 = getelementptr inbounds double, ptr %8, i64 %117
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds double, ptr %29, i64 %117
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = add nuw nsw i64 %107, 2
  %128 = icmp eq i64 %127, %38
  br i1 %128, label %103, label %106, !llvm.loop !383

129:                                              ; preds = %103
  %130 = load ptr, ptr %4, align 8, !tbaa !36
  %131 = icmp eq ptr %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef nonnull %130) #23
  br label %137

133:                                              ; preds = %103
  %134 = landingpad { ptr, i32 }
          cleanup
  %135 = load ptr, ptr %4, align 8, !tbaa !36
  %136 = icmp eq ptr %135, null
  br i1 %136, label %143, label %142

137:                                              ; preds = %132, %129
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %138 = load ptr, ptr %3, align 8, !tbaa !64
  %139 = icmp eq ptr %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZdlPv(ptr noundef nonnull %138) #23
  br label %141

141:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  ret void

142:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef nonnull %135) #23
  br label %143

143:                                              ; preds = %142, %133, %104
  %144 = phi { ptr, i32 } [ %105, %104 ], [ %134, %133 ], [ %134, %142 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %145 = load ptr, ptr %3, align 8, !tbaa !64
  %146 = icmp eq ptr %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @_ZdlPv(ptr noundef nonnull %145) #23
  br label %148

148:                                              ; preds = %147, %143
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  resume { ptr, i32 } %144
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi2EE6rotateERKNS_10QuadratureILi2EEEj(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.9", align 8
  %5 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !38
  %9 = load ptr, ptr %6, align 8, !tbaa !36
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  br label %29

17:                                               ; preds = %3
  %18 = shl nuw nsw i64 %14, 4
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !64
  %20 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  %23 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %24 = shl nuw nsw i64 %14, 3
  %25 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %24) #22
          to label %26 unwind label %411

26:                                               ; preds = %17
  store ptr %25, ptr %5, align 8, !tbaa !36
  %27 = getelementptr inbounds double, ptr %25, i64 %14
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %25, i8 0, i64 %24, i1 false), !tbaa !33
  br label %29

29:                                               ; preds = %26, %16
  %30 = phi ptr [ null, %16 ], [ %25, %26 ]
  %31 = phi ptr [ null, %16 ], [ %19, %26 ]
  %32 = phi ptr [ null, %16 ], [ %27, %26 ]
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !38
  %34 = and i64 %12, 34359738360
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %410, label %36

36:                                               ; preds = %29
  %37 = and i32 %2, 3
  %38 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8
  switch i32 %37, label %409 [
    i32 0, label %246
    i32 1, label %178
    i32 2, label %108
    i32 3, label %40
  ]

40:                                               ; preds = %36
  %41 = and i64 %13, 4294967295
  %42 = icmp ult i64 %41, 24
  br i1 %42, label %87, label %43

43:                                               ; preds = %40
  %44 = shl nuw nsw i64 %41, 4
  %45 = getelementptr i8, ptr %31, i64 %44
  %46 = getelementptr i8, ptr %30, i64 %34
  %47 = getelementptr i8, ptr %39, i64 %44
  %48 = getelementptr i8, ptr %9, i64 %34
  %49 = icmp ult ptr %31, %46
  %50 = icmp ult ptr %30, %45
  %51 = and i1 %49, %50
  %52 = icmp ult ptr %31, %47
  %53 = icmp ult ptr %39, %45
  %54 = and i1 %52, %53
  %55 = or i1 %51, %54
  %56 = icmp ult ptr %31, %48
  %57 = icmp ult ptr %9, %45
  %58 = and i1 %56, %57
  %59 = or i1 %55, %58
  %60 = icmp ult ptr %30, %47
  %61 = icmp ult ptr %39, %46
  %62 = and i1 %60, %61
  %63 = or i1 %59, %62
  %64 = icmp ult ptr %30, %48
  %65 = icmp ult ptr %9, %46
  %66 = and i1 %64, %65
  %67 = or i1 %63, %66
  br i1 %67, label %87, label %68

68:                                               ; preds = %43
  %69 = and i64 %13, 1
  %70 = sub nsw i64 %41, %69
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi i64 [ 0, %68 ], [ %83, %71 ]
  %73 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %72
  %74 = load <4 x double>, ptr %73, align 8, !tbaa !33
  %75 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %76 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %77 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %75
  %78 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %72
  %79 = shufflevector <2 x double> %76, <2 x double> %77, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %79, ptr %78, align 8, !tbaa !33
  %80 = getelementptr inbounds double, ptr %9, i64 %72
  %81 = load <2 x double>, ptr %80, align 8, !tbaa !33, !alias.scope !384
  %82 = getelementptr inbounds double, ptr %30, i64 %72
  store <2 x double> %81, ptr %82, align 8, !tbaa !33, !alias.scope !387, !noalias !389
  %83 = add nuw i64 %72, 2
  %84 = icmp eq i64 %83, %70
  br i1 %84, label %85, label %71, !llvm.loop !391

85:                                               ; preds = %71
  %86 = icmp eq i64 %69, 0
  br i1 %86, label %410, label %87

87:                                               ; preds = %43, %40, %85
  %88 = phi i64 [ 0, %43 ], [ 0, %40 ], [ %70, %85 ]
  %89 = sub nsw i64 %13, %88
  %90 = add nsw i64 %88, 1
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %105, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %88
  %95 = getelementptr inbounds [2 x double], ptr %94, i64 0, i64 1
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %88
  store double %96, ptr %97, align 8, !tbaa !33
  %98 = load double, ptr %94, align 8, !tbaa !33
  %99 = fsub double 1.000000e+00, %98
  %100 = getelementptr inbounds [2 x double], ptr %97, i64 0, i64 1
  store double %99, ptr %100, align 8, !tbaa !33
  %101 = getelementptr inbounds double, ptr %9, i64 %88
  %102 = load double, ptr %101, align 8, !tbaa !33
  %103 = getelementptr inbounds double, ptr %30, i64 %88
  store double %102, ptr %103, align 8, !tbaa !33
  %104 = add nuw nsw i64 %88, 1
  br label %105

105:                                              ; preds = %93, %87
  %106 = phi i64 [ %88, %87 ], [ %104, %93 ]
  %107 = icmp eq i64 %14, %90
  br i1 %107, label %410, label %384

108:                                              ; preds = %36
  %109 = and i64 %13, 4294967295
  %110 = icmp ult i64 %109, 20
  br i1 %110, label %156, label %111

111:                                              ; preds = %108
  %112 = shl nuw nsw i64 %109, 4
  %113 = getelementptr i8, ptr %31, i64 %112
  %114 = getelementptr i8, ptr %30, i64 %34
  %115 = getelementptr i8, ptr %39, i64 %112
  %116 = getelementptr i8, ptr %9, i64 %34
  %117 = icmp ult ptr %31, %114
  %118 = icmp ult ptr %30, %113
  %119 = and i1 %117, %118
  %120 = icmp ult ptr %31, %115
  %121 = icmp ult ptr %39, %113
  %122 = and i1 %120, %121
  %123 = or i1 %119, %122
  %124 = icmp ult ptr %31, %116
  %125 = icmp ult ptr %9, %113
  %126 = and i1 %124, %125
  %127 = or i1 %123, %126
  %128 = icmp ult ptr %30, %115
  %129 = icmp ult ptr %39, %114
  %130 = and i1 %128, %129
  %131 = or i1 %127, %130
  %132 = icmp ult ptr %30, %116
  %133 = icmp ult ptr %9, %114
  %134 = and i1 %132, %133
  %135 = or i1 %131, %134
  br i1 %135, label %156, label %136

136:                                              ; preds = %111
  %137 = and i64 %13, 1
  %138 = sub nsw i64 %109, %137
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i64 [ 0, %136 ], [ %152, %139 ]
  %141 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %140
  %142 = load <4 x double>, ptr %141, align 8, !tbaa !33
  %143 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %144 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %145 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %143
  %146 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %144
  %147 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %140
  %148 = shufflevector <2 x double> %145, <2 x double> %146, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %148, ptr %147, align 8, !tbaa !33
  %149 = getelementptr inbounds double, ptr %9, i64 %140
  %150 = load <2 x double>, ptr %149, align 8, !tbaa !33, !alias.scope !392
  %151 = getelementptr inbounds double, ptr %30, i64 %140
  store <2 x double> %150, ptr %151, align 8, !tbaa !33, !alias.scope !395, !noalias !397
  %152 = add nuw i64 %140, 2
  %153 = icmp eq i64 %152, %138
  br i1 %153, label %154, label %139, !llvm.loop !399

154:                                              ; preds = %139
  %155 = icmp eq i64 %137, 0
  br i1 %155, label %410, label %156

156:                                              ; preds = %111, %108, %154
  %157 = phi i64 [ 0, %111 ], [ 0, %108 ], [ %138, %154 ]
  %158 = sub nsw i64 %13, %157
  %159 = add nsw i64 %157, 1
  %160 = and i64 %158, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %175, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %157
  %164 = load double, ptr %163, align 8, !tbaa !33
  %165 = fsub double 1.000000e+00, %164
  %166 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %157
  store double %165, ptr %166, align 8, !tbaa !33
  %167 = getelementptr inbounds [2 x double], ptr %163, i64 0, i64 1
  %168 = load double, ptr %167, align 8, !tbaa !33
  %169 = fsub double 1.000000e+00, %168
  %170 = getelementptr inbounds [2 x double], ptr %166, i64 0, i64 1
  store double %169, ptr %170, align 8, !tbaa !33
  %171 = getelementptr inbounds double, ptr %9, i64 %157
  %172 = load double, ptr %171, align 8, !tbaa !33
  %173 = getelementptr inbounds double, ptr %30, i64 %157
  store double %172, ptr %173, align 8, !tbaa !33
  %174 = add nuw nsw i64 %157, 1
  br label %175

175:                                              ; preds = %162, %156
  %176 = phi i64 [ %157, %156 ], [ %174, %162 ]
  %177 = icmp eq i64 %14, %159
  br i1 %177, label %410, label %357

178:                                              ; preds = %36
  %179 = and i64 %13, 4294967295
  %180 = icmp ult i64 %179, 24
  br i1 %180, label %225, label %181

181:                                              ; preds = %178
  %182 = shl nuw nsw i64 %179, 4
  %183 = getelementptr i8, ptr %31, i64 %182
  %184 = getelementptr i8, ptr %30, i64 %34
  %185 = getelementptr i8, ptr %39, i64 %182
  %186 = getelementptr i8, ptr %9, i64 %34
  %187 = icmp ult ptr %31, %184
  %188 = icmp ult ptr %30, %183
  %189 = and i1 %187, %188
  %190 = icmp ult ptr %31, %185
  %191 = icmp ult ptr %39, %183
  %192 = and i1 %190, %191
  %193 = or i1 %189, %192
  %194 = icmp ult ptr %31, %186
  %195 = icmp ult ptr %9, %183
  %196 = and i1 %194, %195
  %197 = or i1 %193, %196
  %198 = icmp ult ptr %30, %185
  %199 = icmp ult ptr %39, %184
  %200 = and i1 %198, %199
  %201 = or i1 %197, %200
  %202 = icmp ult ptr %30, %186
  %203 = icmp ult ptr %9, %184
  %204 = and i1 %202, %203
  %205 = or i1 %201, %204
  br i1 %205, label %225, label %206

206:                                              ; preds = %181
  %207 = and i64 %13, 1
  %208 = sub nsw i64 %179, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %221, %209 ]
  %211 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %210
  %212 = load <4 x double>, ptr %211, align 8, !tbaa !33
  %213 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %214 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %215 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %214
  %216 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %210
  %217 = shufflevector <2 x double> %215, <2 x double> %213, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %217, ptr %216, align 8, !tbaa !33
  %218 = getelementptr inbounds double, ptr %9, i64 %210
  %219 = load <2 x double>, ptr %218, align 8, !tbaa !33, !alias.scope !400
  %220 = getelementptr inbounds double, ptr %30, i64 %210
  store <2 x double> %219, ptr %220, align 8, !tbaa !33, !alias.scope !403, !noalias !405
  %221 = add nuw i64 %210, 2
  %222 = icmp eq i64 %221, %208
  br i1 %222, label %223, label %209, !llvm.loop !407

223:                                              ; preds = %209
  %224 = icmp eq i64 %207, 0
  br i1 %224, label %410, label %225

225:                                              ; preds = %181, %178, %223
  %226 = phi i64 [ 0, %181 ], [ 0, %178 ], [ %208, %223 ]
  %227 = sub nsw i64 %13, %226
  %228 = add nsw i64 %226, 1
  %229 = and i64 %227, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %226
  %233 = getelementptr inbounds [2 x double], ptr %232, i64 0, i64 1
  %234 = load double, ptr %233, align 8, !tbaa !33
  %235 = fsub double 1.000000e+00, %234
  %236 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %226
  store double %235, ptr %236, align 8, !tbaa !33
  %237 = load double, ptr %232, align 8, !tbaa !33
  %238 = getelementptr inbounds [2 x double], ptr %236, i64 0, i64 1
  store double %237, ptr %238, align 8, !tbaa !33
  %239 = getelementptr inbounds double, ptr %9, i64 %226
  %240 = load double, ptr %239, align 8, !tbaa !33
  %241 = getelementptr inbounds double, ptr %30, i64 %226
  store double %240, ptr %241, align 8, !tbaa !33
  %242 = add nuw nsw i64 %226, 1
  br label %243

243:                                              ; preds = %231, %225
  %244 = phi i64 [ %226, %225 ], [ %242, %231 ]
  %245 = icmp eq i64 %14, %228
  br i1 %245, label %410, label %332

246:                                              ; preds = %36
  %247 = and i64 %13, 4294967295
  %248 = icmp ult i64 %247, 26
  br i1 %248, label %289, label %249

249:                                              ; preds = %246
  %250 = shl nuw nsw i64 %247, 4
  %251 = getelementptr i8, ptr %31, i64 %250
  %252 = getelementptr i8, ptr %30, i64 %34
  %253 = getelementptr i8, ptr %39, i64 %250
  %254 = getelementptr i8, ptr %9, i64 %34
  %255 = icmp ult ptr %31, %252
  %256 = icmp ult ptr %30, %251
  %257 = and i1 %255, %256
  %258 = icmp ult ptr %31, %253
  %259 = icmp ult ptr %39, %251
  %260 = and i1 %258, %259
  %261 = or i1 %257, %260
  %262 = icmp ult ptr %31, %254
  %263 = icmp ult ptr %9, %251
  %264 = and i1 %262, %263
  %265 = or i1 %261, %264
  %266 = icmp ult ptr %30, %253
  %267 = icmp ult ptr %39, %252
  %268 = and i1 %266, %267
  %269 = or i1 %265, %268
  %270 = icmp ult ptr %30, %254
  %271 = icmp ult ptr %9, %252
  %272 = and i1 %270, %271
  %273 = or i1 %269, %272
  br i1 %273, label %289, label %274

274:                                              ; preds = %249
  %275 = and i64 %13, 1
  %276 = sub nsw i64 %247, %275
  br label %277

277:                                              ; preds = %277, %274
  %278 = phi i64 [ 0, %274 ], [ %285, %277 ]
  %279 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %278
  %280 = load <4 x double>, ptr %279, align 8, !tbaa !33
  %281 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %278
  store <4 x double> %280, ptr %281, align 8, !tbaa !33
  %282 = getelementptr inbounds double, ptr %9, i64 %278
  %283 = load <2 x double>, ptr %282, align 8, !tbaa !33, !alias.scope !408
  %284 = getelementptr inbounds double, ptr %30, i64 %278
  store <2 x double> %283, ptr %284, align 8, !tbaa !33, !alias.scope !411, !noalias !413
  %285 = add nuw i64 %278, 2
  %286 = icmp eq i64 %285, %276
  br i1 %286, label %287, label %277, !llvm.loop !415

287:                                              ; preds = %277
  %288 = icmp eq i64 %275, 0
  br i1 %288, label %410, label %289

289:                                              ; preds = %249, %246, %287
  %290 = phi i64 [ 0, %249 ], [ 0, %246 ], [ %276, %287 ]
  %291 = sub nsw i64 %13, %290
  %292 = add nsw i64 %290, 1
  %293 = and i64 %291, 1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %290
  %297 = load double, ptr %296, align 8, !tbaa !33
  %298 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %290
  store double %297, ptr %298, align 8, !tbaa !33
  %299 = getelementptr inbounds [2 x double], ptr %296, i64 0, i64 1
  %300 = load double, ptr %299, align 8, !tbaa !33
  %301 = getelementptr inbounds [2 x double], ptr %298, i64 0, i64 1
  store double %300, ptr %301, align 8, !tbaa !33
  %302 = getelementptr inbounds double, ptr %9, i64 %290
  %303 = load double, ptr %302, align 8, !tbaa !33
  %304 = getelementptr inbounds double, ptr %30, i64 %290
  store double %303, ptr %304, align 8, !tbaa !33
  %305 = add nuw nsw i64 %290, 1
  br label %306

306:                                              ; preds = %295, %289
  %307 = phi i64 [ %290, %289 ], [ %305, %295 ]
  %308 = icmp eq i64 %14, %292
  br i1 %308, label %410, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %330, %309 ], [ %307, %306 ]
  %311 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %310
  %312 = load double, ptr %311, align 8, !tbaa !33
  %313 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %310
  store double %312, ptr %313, align 8, !tbaa !33
  %314 = getelementptr inbounds [2 x double], ptr %311, i64 0, i64 1
  %315 = load double, ptr %314, align 8, !tbaa !33
  %316 = getelementptr inbounds [2 x double], ptr %313, i64 0, i64 1
  store double %315, ptr %316, align 8, !tbaa !33
  %317 = getelementptr inbounds double, ptr %9, i64 %310
  %318 = load double, ptr %317, align 8, !tbaa !33
  %319 = getelementptr inbounds double, ptr %30, i64 %310
  store double %318, ptr %319, align 8, !tbaa !33
  %320 = add nuw nsw i64 %310, 1
  %321 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %320
  %322 = load double, ptr %321, align 8, !tbaa !33
  %323 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %320
  store double %322, ptr %323, align 8, !tbaa !33
  %324 = getelementptr inbounds [2 x double], ptr %321, i64 0, i64 1
  %325 = load double, ptr %324, align 8, !tbaa !33
  %326 = getelementptr inbounds [2 x double], ptr %323, i64 0, i64 1
  store double %325, ptr %326, align 8, !tbaa !33
  %327 = getelementptr inbounds double, ptr %9, i64 %320
  %328 = load double, ptr %327, align 8, !tbaa !33
  %329 = getelementptr inbounds double, ptr %30, i64 %320
  store double %328, ptr %329, align 8, !tbaa !33
  %330 = add nuw nsw i64 %310, 2
  %331 = icmp eq i64 %330, %247
  br i1 %331, label %410, label %309, !llvm.loop !416

332:                                              ; preds = %243, %332
  %333 = phi i64 [ %355, %332 ], [ %244, %243 ]
  %334 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %333
  %335 = getelementptr inbounds [2 x double], ptr %334, i64 0, i64 1
  %336 = load double, ptr %335, align 8, !tbaa !33
  %337 = fsub double 1.000000e+00, %336
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %333
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = load double, ptr %334, align 8, !tbaa !33
  %340 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !33
  %341 = getelementptr inbounds double, ptr %9, i64 %333
  %342 = load double, ptr %341, align 8, !tbaa !33
  %343 = getelementptr inbounds double, ptr %30, i64 %333
  store double %342, ptr %343, align 8, !tbaa !33
  %344 = add nuw nsw i64 %333, 1
  %345 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %344
  %346 = getelementptr inbounds [2 x double], ptr %345, i64 0, i64 1
  %347 = load double, ptr %346, align 8, !tbaa !33
  %348 = fsub double 1.000000e+00, %347
  %349 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %344
  store double %348, ptr %349, align 8, !tbaa !33
  %350 = load double, ptr %345, align 8, !tbaa !33
  %351 = getelementptr inbounds [2 x double], ptr %349, i64 0, i64 1
  store double %350, ptr %351, align 8, !tbaa !33
  %352 = getelementptr inbounds double, ptr %9, i64 %344
  %353 = load double, ptr %352, align 8, !tbaa !33
  %354 = getelementptr inbounds double, ptr %30, i64 %344
  store double %353, ptr %354, align 8, !tbaa !33
  %355 = add nuw nsw i64 %333, 2
  %356 = icmp eq i64 %355, %179
  br i1 %356, label %410, label %332, !llvm.loop !417

357:                                              ; preds = %175, %357
  %358 = phi i64 [ %382, %357 ], [ %176, %175 ]
  %359 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %358
  %360 = load double, ptr %359, align 8, !tbaa !33
  %361 = fsub double 1.000000e+00, %360
  %362 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %358
  store double %361, ptr %362, align 8, !tbaa !33
  %363 = getelementptr inbounds [2 x double], ptr %359, i64 0, i64 1
  %364 = load double, ptr %363, align 8, !tbaa !33
  %365 = fsub double 1.000000e+00, %364
  %366 = getelementptr inbounds [2 x double], ptr %362, i64 0, i64 1
  store double %365, ptr %366, align 8, !tbaa !33
  %367 = getelementptr inbounds double, ptr %9, i64 %358
  %368 = load double, ptr %367, align 8, !tbaa !33
  %369 = getelementptr inbounds double, ptr %30, i64 %358
  store double %368, ptr %369, align 8, !tbaa !33
  %370 = add nuw nsw i64 %358, 1
  %371 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %370
  %372 = load double, ptr %371, align 8, !tbaa !33
  %373 = fsub double 1.000000e+00, %372
  %374 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %370
  store double %373, ptr %374, align 8, !tbaa !33
  %375 = getelementptr inbounds [2 x double], ptr %371, i64 0, i64 1
  %376 = load double, ptr %375, align 8, !tbaa !33
  %377 = fsub double 1.000000e+00, %376
  %378 = getelementptr inbounds [2 x double], ptr %374, i64 0, i64 1
  store double %377, ptr %378, align 8, !tbaa !33
  %379 = getelementptr inbounds double, ptr %9, i64 %370
  %380 = load double, ptr %379, align 8, !tbaa !33
  %381 = getelementptr inbounds double, ptr %30, i64 %370
  store double %380, ptr %381, align 8, !tbaa !33
  %382 = add nuw nsw i64 %358, 2
  %383 = icmp eq i64 %382, %109
  br i1 %383, label %410, label %357, !llvm.loop !418

384:                                              ; preds = %105, %384
  %385 = phi i64 [ %407, %384 ], [ %106, %105 ]
  %386 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %385
  %387 = getelementptr inbounds [2 x double], ptr %386, i64 0, i64 1
  %388 = load double, ptr %387, align 8, !tbaa !33
  %389 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %385
  store double %388, ptr %389, align 8, !tbaa !33
  %390 = load double, ptr %386, align 8, !tbaa !33
  %391 = fsub double 1.000000e+00, %390
  %392 = getelementptr inbounds [2 x double], ptr %389, i64 0, i64 1
  store double %391, ptr %392, align 8, !tbaa !33
  %393 = getelementptr inbounds double, ptr %9, i64 %385
  %394 = load double, ptr %393, align 8, !tbaa !33
  %395 = getelementptr inbounds double, ptr %30, i64 %385
  store double %394, ptr %395, align 8, !tbaa !33
  %396 = add nuw nsw i64 %385, 1
  %397 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %396
  %398 = getelementptr inbounds [2 x double], ptr %397, i64 0, i64 1
  %399 = load double, ptr %398, align 8, !tbaa !33
  %400 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %396
  store double %399, ptr %400, align 8, !tbaa !33
  %401 = load double, ptr %397, align 8, !tbaa !33
  %402 = fsub double 1.000000e+00, %401
  %403 = getelementptr inbounds [2 x double], ptr %400, i64 0, i64 1
  store double %402, ptr %403, align 8, !tbaa !33
  %404 = getelementptr inbounds double, ptr %9, i64 %396
  %405 = load double, ptr %404, align 8, !tbaa !33
  %406 = getelementptr inbounds double, ptr %30, i64 %396
  store double %405, ptr %406, align 8, !tbaa !33
  %407 = add nuw nsw i64 %385, 2
  %408 = icmp eq i64 %407, %41
  br i1 %408, label %410, label %384, !llvm.loop !419

409:                                              ; preds = %36
  unreachable

410:                                              ; preds = %105, %384, %175, %357, %243, %332, %306, %309, %85, %154, %223, %287, %29
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %413 unwind label %417

411:                                              ; preds = %17
  %412 = landingpad { ptr, i32 }
          cleanup
  br label %427

413:                                              ; preds = %410
  %414 = load ptr, ptr %5, align 8, !tbaa !36
  %415 = icmp eq ptr %414, null
  br i1 %415, label %421, label %416

416:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef nonnull %414) #23
  br label %421

417:                                              ; preds = %410
  %418 = landingpad { ptr, i32 }
          cleanup
  %419 = load ptr, ptr %5, align 8, !tbaa !36
  %420 = icmp eq ptr %419, null
  br i1 %420, label %427, label %426

421:                                              ; preds = %416, %413
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %422 = load ptr, ptr %4, align 8, !tbaa !64
  %423 = icmp eq ptr %422, null
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  call void @_ZdlPv(ptr noundef nonnull %422) #23
  br label %425

425:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

426:                                              ; preds = %417
  call void @_ZdlPv(ptr noundef nonnull %419) #23
  br label %427

427:                                              ; preds = %426, %417, %411
  %428 = phi { ptr, i32 } [ %412, %411 ], [ %418, %417 ], [ %418, %426 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %429 = load ptr, ptr %4, align 8, !tbaa !64
  %430 = icmp eq ptr %429, null
  br i1 %430, label %432, label %431

431:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %429) #23
  br label %432

432:                                              ; preds = %431, %427
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %428
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE15project_to_faceERKNS_10QuadratureILi2EEEj(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.17", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %22

16:                                               ; preds = %3
  %17 = mul nuw nsw i64 %13, 24
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %4, align 8, !tbaa !109
  %19 = getelementptr inbounds %"class.dealii::Point.22", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  br label %22

22:                                               ; preds = %16, %15
  %23 = phi ptr [ null, %15 ], [ %21, %16 ]
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !111
  call void @_ZN6dealii10QProjectorILi3EE15project_to_faceERKNS_10QuadratureILi2EEEjRSt6vectorINS_5PointILi3EEESaIS8_EE(ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %4)
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %25 unwind label %30

25:                                               ; preds = %22
  %26 = load ptr, ptr %4, align 8, !tbaa !109
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @_ZdlPv(ptr noundef nonnull %26) #23
  br label %29

29:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

30:                                               ; preds = %22
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = load ptr, ptr %4, align 8, !tbaa !109
  %33 = icmp eq ptr %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  call void @_ZdlPv(ptr noundef nonnull %32) #23
  br label %35

35:                                               ; preds = %34, %30
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %31
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi3EE15project_to_faceERKNS_10QuadratureILi2EEEjRSt6vectorINS_5PointILi3EEESaIS8_EE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %0, i32 noundef %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = and i64 %10, 34359738360
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %210, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %2, align 8
  switch i32 %1, label %210 [
    i32 0, label %48
    i32 1, label %42
    i32 2, label %36
    i32 3, label %30
    i32 4, label %24
    i32 5, label %18
  ]

18:                                               ; preds = %14
  %19 = and i64 %11, 4294967295
  %20 = and i64 %11, 1
  %21 = icmp eq i64 %19, 1
  br i1 %21, label %202, label %22

22:                                               ; preds = %18
  %23 = sub nsw i64 %19, %20
  br label %141

24:                                               ; preds = %14
  %25 = and i64 %11, 4294967295
  %26 = and i64 %11, 1
  %27 = icmp eq i64 %25, 1
  br i1 %27, label %194, label %28

28:                                               ; preds = %24
  %29 = sub nsw i64 %25, %26
  br label %126

30:                                               ; preds = %14
  %31 = and i64 %11, 4294967295
  %32 = and i64 %11, 1
  %33 = icmp eq i64 %31, 1
  br i1 %33, label %183, label %34

34:                                               ; preds = %30
  %35 = sub nsw i64 %31, %32
  br label %105

36:                                               ; preds = %14
  %37 = and i64 %11, 4294967295
  %38 = and i64 %11, 1
  %39 = icmp eq i64 %37, 1
  br i1 %39, label %172, label %40

40:                                               ; preds = %36
  %41 = sub nsw i64 %37, %38
  br label %84

42:                                               ; preds = %14
  %43 = and i64 %11, 4294967295
  %44 = and i64 %11, 1
  %45 = icmp eq i64 %43, 1
  br i1 %45, label %164, label %46

46:                                               ; preds = %42
  %47 = sub nsw i64 %43, %44
  br label %69

48:                                               ; preds = %14
  %49 = and i64 %11, 4294967295
  %50 = and i64 %11, 1
  %51 = icmp eq i64 %49, 1
  br i1 %51, label %156, label %52

52:                                               ; preds = %48
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %54 ]
  %56 = phi i64 [ 0, %52 ], [ %67, %54 ]
  %57 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %55
  %58 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %55
  %59 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
  %60 = load <2 x double>, ptr %57, align 8, !tbaa !33
  store double 0.000000e+00, ptr %58, align 8, !tbaa !33
  store <2 x double> %60, ptr %59, align 8, !tbaa !33
  %61 = or i64 %55, 1
  %62 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %61
  %63 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %61
  %64 = getelementptr inbounds [3 x double], ptr %63, i64 0, i64 1
  %65 = load <2 x double>, ptr %62, align 8, !tbaa !33
  store double 0.000000e+00, ptr %63, align 8, !tbaa !33
  store <2 x double> %65, ptr %64, align 8, !tbaa !33
  %66 = add nuw nsw i64 %55, 2
  %67 = add i64 %56, 2
  %68 = icmp eq i64 %67, %53
  br i1 %68, label %156, label %54

69:                                               ; preds = %69, %46
  %70 = phi i64 [ 0, %46 ], [ %81, %69 ]
  %71 = phi i64 [ 0, %46 ], [ %82, %69 ]
  %72 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %70
  %73 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %70
  %74 = getelementptr inbounds [3 x double], ptr %73, i64 0, i64 1
  %75 = load <2 x double>, ptr %72, align 8, !tbaa !33
  store double 1.000000e+00, ptr %73, align 8, !tbaa !33
  store <2 x double> %75, ptr %74, align 8, !tbaa !33
  %76 = or i64 %70, 1
  %77 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %76
  %78 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %76
  %79 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
  %80 = load <2 x double>, ptr %77, align 8, !tbaa !33
  store double 1.000000e+00, ptr %78, align 8, !tbaa !33
  store <2 x double> %80, ptr %79, align 8, !tbaa !33
  %81 = add nuw nsw i64 %70, 2
  %82 = add i64 %71, 2
  %83 = icmp eq i64 %82, %47
  br i1 %83, label %164, label %69

84:                                               ; preds = %84, %40
  %85 = phi i64 [ 0, %40 ], [ %102, %84 ]
  %86 = phi i64 [ 0, %40 ], [ %103, %84 ]
  %87 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %85
  %88 = getelementptr inbounds [2 x double], ptr %87, i64 0, i64 1
  %89 = load double, ptr %88, align 8, !tbaa !33
  %90 = load double, ptr %87, align 8, !tbaa !33
  %91 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %85
  store double %89, ptr %91, align 8, !tbaa !33
  %92 = getelementptr inbounds [3 x double], ptr %91, i64 0, i64 1
  store double 0.000000e+00, ptr %92, align 8, !tbaa !33
  %93 = getelementptr inbounds [3 x double], ptr %91, i64 0, i64 2
  store double %90, ptr %93, align 8, !tbaa !33
  %94 = or i64 %85, 1
  %95 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %94
  %96 = getelementptr inbounds [2 x double], ptr %95, i64 0, i64 1
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = load double, ptr %95, align 8, !tbaa !33
  %99 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %94
  store double %97, ptr %99, align 8, !tbaa !33
  %100 = getelementptr inbounds [3 x double], ptr %99, i64 0, i64 1
  store double 0.000000e+00, ptr %100, align 8, !tbaa !33
  %101 = getelementptr inbounds [3 x double], ptr %99, i64 0, i64 2
  store double %98, ptr %101, align 8, !tbaa !33
  %102 = add nuw nsw i64 %85, 2
  %103 = add i64 %86, 2
  %104 = icmp eq i64 %103, %41
  br i1 %104, label %172, label %84

105:                                              ; preds = %105, %34
  %106 = phi i64 [ 0, %34 ], [ %123, %105 ]
  %107 = phi i64 [ 0, %34 ], [ %124, %105 ]
  %108 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %106
  %109 = getelementptr inbounds [2 x double], ptr %108, i64 0, i64 1
  %110 = load double, ptr %109, align 8, !tbaa !33
  %111 = load double, ptr %108, align 8, !tbaa !33
  %112 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %106
  store double %110, ptr %112, align 8, !tbaa !33
  %113 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 1
  store double 1.000000e+00, ptr %113, align 8, !tbaa !33
  %114 = getelementptr inbounds [3 x double], ptr %112, i64 0, i64 2
  store double %111, ptr %114, align 8, !tbaa !33
  %115 = or i64 %106, 1
  %116 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %115
  %117 = getelementptr inbounds [2 x double], ptr %116, i64 0, i64 1
  %118 = load double, ptr %117, align 8, !tbaa !33
  %119 = load double, ptr %116, align 8, !tbaa !33
  %120 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %115
  store double %118, ptr %120, align 8, !tbaa !33
  %121 = getelementptr inbounds [3 x double], ptr %120, i64 0, i64 1
  store double 1.000000e+00, ptr %121, align 8, !tbaa !33
  %122 = getelementptr inbounds [3 x double], ptr %120, i64 0, i64 2
  store double %119, ptr %122, align 8, !tbaa !33
  %123 = add nuw nsw i64 %106, 2
  %124 = add i64 %107, 2
  %125 = icmp eq i64 %124, %35
  br i1 %125, label %183, label %105

126:                                              ; preds = %126, %28
  %127 = phi i64 [ 0, %28 ], [ %138, %126 ]
  %128 = phi i64 [ 0, %28 ], [ %139, %126 ]
  %129 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %127
  %130 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %127
  %131 = load <2 x double>, ptr %129, align 8, !tbaa !33
  store <2 x double> %131, ptr %130, align 8, !tbaa !33
  %132 = getelementptr inbounds [3 x double], ptr %130, i64 0, i64 2
  store double 0.000000e+00, ptr %132, align 8, !tbaa !33
  %133 = or i64 %127, 1
  %134 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %133
  %135 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %133
  %136 = load <2 x double>, ptr %134, align 8, !tbaa !33
  store <2 x double> %136, ptr %135, align 8, !tbaa !33
  %137 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 2
  store double 0.000000e+00, ptr %137, align 8, !tbaa !33
  %138 = add nuw nsw i64 %127, 2
  %139 = add i64 %128, 2
  %140 = icmp eq i64 %139, %29
  br i1 %140, label %194, label %126

141:                                              ; preds = %141, %22
  %142 = phi i64 [ 0, %22 ], [ %153, %141 ]
  %143 = phi i64 [ 0, %22 ], [ %154, %141 ]
  %144 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %142
  %145 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %142
  %146 = load <2 x double>, ptr %144, align 8, !tbaa !33
  store <2 x double> %146, ptr %145, align 8, !tbaa !33
  %147 = getelementptr inbounds [3 x double], ptr %145, i64 0, i64 2
  store double 1.000000e+00, ptr %147, align 8, !tbaa !33
  %148 = or i64 %142, 1
  %149 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %148
  %150 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %148
  %151 = load <2 x double>, ptr %149, align 8, !tbaa !33
  store <2 x double> %151, ptr %150, align 8, !tbaa !33
  %152 = getelementptr inbounds [3 x double], ptr %150, i64 0, i64 2
  store double 1.000000e+00, ptr %152, align 8, !tbaa !33
  %153 = add nuw nsw i64 %142, 2
  %154 = add i64 %143, 2
  %155 = icmp eq i64 %154, %23
  br i1 %155, label %202, label %141

156:                                              ; preds = %54, %48
  %157 = phi i64 [ 0, %48 ], [ %66, %54 ]
  %158 = icmp eq i64 %50, 0
  br i1 %158, label %210, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %157
  %161 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %157
  %162 = getelementptr inbounds [3 x double], ptr %161, i64 0, i64 1
  %163 = load <2 x double>, ptr %160, align 8, !tbaa !33
  store double 0.000000e+00, ptr %161, align 8, !tbaa !33
  store <2 x double> %163, ptr %162, align 8, !tbaa !33
  br label %210

164:                                              ; preds = %69, %42
  %165 = phi i64 [ 0, %42 ], [ %81, %69 ]
  %166 = icmp eq i64 %44, 0
  br i1 %166, label %210, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %165
  %169 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %165
  %170 = getelementptr inbounds [3 x double], ptr %169, i64 0, i64 1
  %171 = load <2 x double>, ptr %168, align 8, !tbaa !33
  store double 1.000000e+00, ptr %169, align 8, !tbaa !33
  store <2 x double> %171, ptr %170, align 8, !tbaa !33
  br label %210

172:                                              ; preds = %84, %36
  %173 = phi i64 [ 0, %36 ], [ %102, %84 ]
  %174 = icmp eq i64 %38, 0
  br i1 %174, label %210, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %173
  %177 = getelementptr inbounds [2 x double], ptr %176, i64 0, i64 1
  %178 = load double, ptr %177, align 8, !tbaa !33
  %179 = load double, ptr %176, align 8, !tbaa !33
  %180 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %173
  store double %178, ptr %180, align 8, !tbaa !33
  %181 = getelementptr inbounds [3 x double], ptr %180, i64 0, i64 1
  store double 0.000000e+00, ptr %181, align 8, !tbaa !33
  %182 = getelementptr inbounds [3 x double], ptr %180, i64 0, i64 2
  store double %179, ptr %182, align 8, !tbaa !33
  br label %210

183:                                              ; preds = %105, %30
  %184 = phi i64 [ 0, %30 ], [ %123, %105 ]
  %185 = icmp eq i64 %32, 0
  br i1 %185, label %210, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %184
  %188 = getelementptr inbounds [2 x double], ptr %187, i64 0, i64 1
  %189 = load double, ptr %188, align 8, !tbaa !33
  %190 = load double, ptr %187, align 8, !tbaa !33
  %191 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %184
  store double %189, ptr %191, align 8, !tbaa !33
  %192 = getelementptr inbounds [3 x double], ptr %191, i64 0, i64 1
  store double 1.000000e+00, ptr %192, align 8, !tbaa !33
  %193 = getelementptr inbounds [3 x double], ptr %191, i64 0, i64 2
  store double %190, ptr %193, align 8, !tbaa !33
  br label %210

194:                                              ; preds = %126, %24
  %195 = phi i64 [ 0, %24 ], [ %138, %126 ]
  %196 = icmp eq i64 %26, 0
  br i1 %196, label %210, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %195
  %199 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %195
  %200 = load <2 x double>, ptr %198, align 8, !tbaa !33
  store <2 x double> %200, ptr %199, align 8, !tbaa !33
  %201 = getelementptr inbounds [3 x double], ptr %199, i64 0, i64 2
  store double 0.000000e+00, ptr %201, align 8, !tbaa !33
  br label %210

202:                                              ; preds = %141, %18
  %203 = phi i64 [ 0, %18 ], [ %153, %141 ]
  %204 = icmp eq i64 %20, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.dealii::Point.14", ptr %16, i64 %203
  %207 = getelementptr inbounds %"class.dealii::Point.22", ptr %17, i64 %203
  %208 = load <2 x double>, ptr %206, align 8, !tbaa !33
  store <2 x double> %208, ptr %207, align 8, !tbaa !33
  %209 = getelementptr inbounds [3 x double], ptr %207, i64 0, i64 2
  store double 1.000000e+00, ptr %209, align 8, !tbaa !33
  br label %210

210:                                              ; preds = %205, %202, %197, %194, %186, %183, %175, %172, %167, %164, %159, %156, %14, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE18project_to_subfaceERKNS_10QuadratureILi2EEEjjRKNS_14RefinementCaseILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::vector.17", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %24

18:                                               ; preds = %5
  %19 = mul nuw nsw i64 %15, 24
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %6, align 8, !tbaa !109
  %21 = getelementptr inbounds %"class.dealii::Point.22", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  br label %24

24:                                               ; preds = %18, %17
  %25 = phi ptr [ null, %17 ], [ %20, %18 ]
  %26 = phi ptr [ null, %17 ], [ %23, %18 ]
  %27 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !111
  %28 = and i32 %2, 1
  %29 = uitofp i32 %28 to double
  %30 = lshr i32 %2, 1
  %31 = icmp ult i32 %2, 6
  br i1 %31, label %32, label %39

32:                                               ; preds = %24
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE, i64 0, i64 %33
  %35 = load i64, ptr %34, align 8
  %36 = zext i32 %30 to i64
  %37 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE.6, i64 0, i64 %36
  %38 = load i64, ptr %37, align 8
  br label %39

39:                                               ; preds = %32, %24
  %40 = phi i64 [ 4294967295, %24 ], [ %35, %32 ]
  %41 = phi i64 [ 4294967295, %24 ], [ %38, %32 ]
  %42 = load i8, ptr %4, align 1
  %43 = and i8 %42, 3
  switch i8 %43, label %59 [
    i8 1, label %44
    i8 2, label %48
    i8 3, label %52
  ]

44:                                               ; preds = %39
  %45 = and i32 %3, 1
  %46 = uitofp i32 %45 to double
  %47 = fmul double %46, 5.000000e-01
  br label %59

48:                                               ; preds = %39
  %49 = and i32 %3, 1
  %50 = uitofp i32 %49 to double
  %51 = fmul double %50, 5.000000e-01
  br label %59

52:                                               ; preds = %39
  %53 = and i32 %3, 1
  %54 = uitofp i32 %53 to double
  %55 = fmul double %54, 5.000000e-01
  %56 = lshr i32 %3, 1
  %57 = uitofp i32 %56 to double
  %58 = fmul double %57, 5.000000e-01
  br label %59

59:                                               ; preds = %52, %48, %44, %39
  %60 = phi double [ 1.000000e+00, %39 ], [ 5.000000e-01, %52 ], [ 1.000000e+00, %48 ], [ 5.000000e-01, %44 ]
  %61 = phi double [ 1.000000e+00, %39 ], [ 5.000000e-01, %52 ], [ 5.000000e-01, %48 ], [ 1.000000e+00, %44 ]
  %62 = phi double [ 0.000000e+00, %39 ], [ %55, %52 ], [ 0.000000e+00, %48 ], [ %47, %44 ]
  %63 = phi double [ 0.000000e+00, %39 ], [ %58, %52 ], [ %51, %48 ], [ 0.000000e+00, %44 ]
  %64 = and i64 %13, 34359738360
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %180, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !64
  %69 = zext i32 %30 to i64
  %70 = icmp ult i64 %15, 96
  br i1 %70, label %164, label %71

71:                                               ; preds = %66
  %72 = shl nuw nsw i64 %41, 3
  %73 = getelementptr i8, ptr %25, i64 %72
  %74 = mul nuw nsw i64 %15, 24
  %75 = add nuw nsw i64 %74, %72
  %76 = add nsw i64 %75, -16
  %77 = getelementptr i8, ptr %25, i64 %76
  %78 = shl nuw nsw i64 %40, 3
  %79 = getelementptr i8, ptr %25, i64 %78
  %80 = add nuw nsw i64 %74, %78
  %81 = add nsw i64 %80, -16
  %82 = getelementptr i8, ptr %25, i64 %81
  %83 = shl nuw nsw i64 %69, 3
  %84 = getelementptr i8, ptr %25, i64 %83
  %85 = add nuw nsw i64 %74, %83
  %86 = add nsw i64 %85, -16
  %87 = getelementptr i8, ptr %25, i64 %86
  %88 = shl nuw nsw i64 %15, 4
  %89 = add nsw i64 %88, -8
  %90 = getelementptr i8, ptr %68, i64 %89
  %91 = getelementptr i8, ptr %68, i64 8
  %92 = getelementptr i8, ptr %68, i64 %88
  %93 = icmp ult ptr %73, %82
  %94 = icmp ult ptr %79, %77
  %95 = and i1 %93, %94
  %96 = icmp ult ptr %73, %87
  %97 = icmp ult ptr %84, %77
  %98 = and i1 %96, %97
  %99 = or i1 %95, %98
  %100 = icmp ult ptr %73, %90
  %101 = icmp ult ptr %68, %77
  %102 = and i1 %100, %101
  %103 = or i1 %99, %102
  %104 = icmp ult ptr %73, %92
  %105 = icmp ult ptr %91, %77
  %106 = and i1 %104, %105
  %107 = or i1 %103, %106
  %108 = icmp ult ptr %79, %87
  %109 = icmp ult ptr %84, %82
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  %112 = icmp ult ptr %79, %90
  %113 = icmp ult ptr %68, %82
  %114 = and i1 %112, %113
  %115 = or i1 %111, %114
  %116 = icmp ult ptr %79, %92
  %117 = icmp ult ptr %91, %82
  %118 = and i1 %116, %117
  %119 = or i1 %115, %118
  %120 = icmp ult ptr %84, %90
  %121 = icmp ult ptr %68, %87
  %122 = and i1 %120, %121
  %123 = or i1 %119, %122
  %124 = icmp ult ptr %84, %92
  %125 = icmp ult ptr %91, %87
  %126 = and i1 %124, %125
  %127 = or i1 %123, %126
  br i1 %127, label %164, label %128

128:                                              ; preds = %71
  %129 = and i64 %14, 1
  %130 = sub nsw i64 %15, %129
  %131 = insertelement <2 x double> poison, double %60, i64 0
  %132 = shufflevector <2 x double> %131, <2 x double> poison, <2 x i32> zeroinitializer
  %133 = insertelement <2 x double> poison, double %62, i64 0
  %134 = shufflevector <2 x double> %133, <2 x double> poison, <2 x i32> zeroinitializer
  %135 = insertelement <2 x double> poison, double %61, i64 0
  %136 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> zeroinitializer
  %137 = insertelement <2 x double> poison, double %63, i64 0
  %138 = shufflevector <2 x double> %137, <2 x double> poison, <2 x i32> zeroinitializer
  br label %139

139:                                              ; preds = %139, %128
  %140 = phi i64 [ 0, %128 ], [ %160, %139 ]
  %141 = or i64 %140, 1
  %142 = getelementptr inbounds %"class.dealii::Point.14", ptr %68, i64 %140
  %143 = load <4 x double>, ptr %142, align 8, !tbaa !33
  %144 = shufflevector <4 x double> %143, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %145 = shufflevector <4 x double> %143, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %146 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %132, <2 x double> %144, <2 x double> %134)
  %147 = getelementptr inbounds %"class.dealii::Point.22", ptr %25, i64 %140
  %148 = getelementptr inbounds %"class.dealii::Point.22", ptr %25, i64 %141
  %149 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 %41
  %150 = getelementptr inbounds [3 x double], ptr %148, i64 0, i64 %41
  %151 = extractelement <2 x double> %146, i64 0
  store double %151, ptr %149, align 8, !tbaa !33, !alias.scope !420, !noalias !423
  %152 = extractelement <2 x double> %146, i64 1
  store double %152, ptr %150, align 8, !tbaa !33, !alias.scope !420, !noalias !423
  %153 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %136, <2 x double> %145, <2 x double> %138)
  %154 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 %40
  %155 = getelementptr inbounds [3 x double], ptr %148, i64 0, i64 %40
  %156 = extractelement <2 x double> %153, i64 0
  store double %156, ptr %154, align 8, !tbaa !33, !alias.scope !428, !noalias !429
  %157 = extractelement <2 x double> %153, i64 1
  store double %157, ptr %155, align 8, !tbaa !33, !alias.scope !428, !noalias !429
  %158 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 %69
  %159 = getelementptr inbounds [3 x double], ptr %148, i64 0, i64 %69
  store double %29, ptr %158, align 8, !tbaa !33, !alias.scope !430, !noalias !431
  store double %29, ptr %159, align 8, !tbaa !33, !alias.scope !430, !noalias !431
  %160 = add nuw i64 %140, 2
  %161 = icmp eq i64 %160, %130
  br i1 %161, label %162, label %139, !llvm.loop !432

162:                                              ; preds = %139
  %163 = icmp eq i64 %129, 0
  br i1 %163, label %180, label %164

164:                                              ; preds = %71, %66, %162
  %165 = phi i64 [ 0, %71 ], [ 0, %66 ], [ %130, %162 ]
  br label %166

166:                                              ; preds = %164, %166
  %167 = phi i64 [ %178, %166 ], [ %165, %164 ]
  %168 = getelementptr inbounds %"class.dealii::Point.14", ptr %68, i64 %167
  %169 = load double, ptr %168, align 8, !tbaa !33
  %170 = tail call double @llvm.fmuladd.f64(double %60, double %169, double %62)
  %171 = getelementptr inbounds %"class.dealii::Point.22", ptr %25, i64 %167
  %172 = getelementptr inbounds [3 x double], ptr %171, i64 0, i64 %41
  store double %170, ptr %172, align 8, !tbaa !33
  %173 = getelementptr inbounds [2 x double], ptr %168, i64 0, i64 1
  %174 = load double, ptr %173, align 8, !tbaa !33
  %175 = tail call double @llvm.fmuladd.f64(double %61, double %174, double %63)
  %176 = getelementptr inbounds [3 x double], ptr %171, i64 0, i64 %40
  store double %175, ptr %176, align 8, !tbaa !33
  %177 = getelementptr inbounds [3 x double], ptr %171, i64 0, i64 %69
  store double %29, ptr %177, align 8, !tbaa !33
  %178 = add nuw nsw i64 %167, 1
  %179 = icmp eq i64 %178, %15
  br i1 %179, label %180, label %166, !llvm.loop !433

180:                                              ; preds = %166, %162, %59
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %181 unwind label %186

181:                                              ; preds = %180
  %182 = load ptr, ptr %6, align 8, !tbaa !109
  %183 = icmp eq ptr %182, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %181
  call void @_ZdlPv(ptr noundef nonnull %182) #23
  br label %185

185:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  ret void

186:                                              ; preds = %180
  %187 = landingpad { ptr, i32 }
          cleanup
  %188 = load ptr, ptr %6, align 8, !tbaa !109
  %189 = icmp eq ptr %188, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(ptr noundef nonnull %188) #23
  br label %191

191:                                              ; preds = %190, %186
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  resume { ptr, i32 } %187
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN6dealii10QProjectorILi3EE18project_to_subfaceERKNS_10QuadratureILi2EEEjjRSt6vectorINS_5PointILi3EEESaIS8_EERKNS_14RefinementCaseILi2EEE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %3, ptr nocapture noundef nonnull readonly align 1 dereferenceable(1) %4) local_unnamed_addr #9 align 2 {
  %6 = and i32 %1, 1
  %7 = uitofp i32 %6 to double
  %8 = lshr i32 %1, 1
  %9 = icmp ult i32 %1, 6
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE, i64 0, i64 %11
  %13 = load i64, ptr %12, align 8
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE.6, i64 0, i64 %14
  %16 = load i64, ptr %15, align 8
  br label %17

17:                                               ; preds = %10, %5
  %18 = phi i64 [ 4294967295, %5 ], [ %13, %10 ]
  %19 = phi i64 [ 4294967295, %5 ], [ %16, %10 ]
  %20 = load i8, ptr %4, align 1
  %21 = and i8 %20, 3
  switch i8 %21, label %37 [
    i8 1, label %22
    i8 2, label %26
    i8 3, label %30
  ]

22:                                               ; preds = %17
  %23 = and i32 %2, 1
  %24 = uitofp i32 %23 to double
  %25 = fmul double %24, 5.000000e-01
  br label %37

26:                                               ; preds = %17
  %27 = and i32 %2, 1
  %28 = uitofp i32 %27 to double
  %29 = fmul double %28, 5.000000e-01
  br label %37

30:                                               ; preds = %17
  %31 = and i32 %2, 1
  %32 = uitofp i32 %31 to double
  %33 = fmul double %32, 5.000000e-01
  %34 = lshr i32 %2, 1
  %35 = uitofp i32 %34 to double
  %36 = fmul double %35, 5.000000e-01
  br label %37

37:                                               ; preds = %17, %30, %26, %22
  %38 = phi double [ 1.000000e+00, %17 ], [ 5.000000e-01, %30 ], [ 1.000000e+00, %26 ], [ 5.000000e-01, %22 ]
  %39 = phi double [ 1.000000e+00, %17 ], [ 5.000000e-01, %30 ], [ 5.000000e-01, %26 ], [ 1.000000e+00, %22 ]
  %40 = phi double [ 0.000000e+00, %17 ], [ %33, %30 ], [ 0.000000e+00, %26 ], [ %25, %22 ]
  %41 = phi double [ 0.000000e+00, %17 ], [ %36, %30 ], [ %29, %26 ], [ 0.000000e+00, %22 ]
  %42 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !38
  %45 = load ptr, ptr %42, align 8, !tbaa !36
  %46 = ptrtoint ptr %44 to i64
  %47 = ptrtoint ptr %45 to i64
  %48 = sub i64 %46, %47
  %49 = and i64 %48, 34359738360
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %154, label %51

51:                                               ; preds = %37
  %52 = lshr exact i64 %48, 3
  %53 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !64
  %55 = load ptr, ptr %3, align 8, !tbaa !109
  %56 = zext i32 %8 to i64
  %57 = and i64 %52, 4294967295
  %58 = icmp ult i64 %57, 96
  br i1 %58, label %152, label %59

59:                                               ; preds = %51
  %60 = shl nuw nsw i64 %19, 3
  %61 = getelementptr i8, ptr %55, i64 %60
  %62 = mul nuw nsw i64 %57, 24
  %63 = add nuw nsw i64 %62, %60
  %64 = add nsw i64 %63, -16
  %65 = getelementptr i8, ptr %55, i64 %64
  %66 = shl nuw nsw i64 %18, 3
  %67 = getelementptr i8, ptr %55, i64 %66
  %68 = add nuw nsw i64 %62, %66
  %69 = add nsw i64 %68, -16
  %70 = getelementptr i8, ptr %55, i64 %69
  %71 = shl nuw nsw i64 %56, 3
  %72 = getelementptr i8, ptr %55, i64 %71
  %73 = add nuw nsw i64 %62, %71
  %74 = add nsw i64 %73, -16
  %75 = getelementptr i8, ptr %55, i64 %74
  %76 = shl nuw nsw i64 %57, 4
  %77 = add nsw i64 %76, -8
  %78 = getelementptr i8, ptr %54, i64 %77
  %79 = getelementptr i8, ptr %54, i64 8
  %80 = getelementptr i8, ptr %54, i64 %76
  %81 = icmp ult ptr %61, %70
  %82 = icmp ult ptr %67, %65
  %83 = and i1 %81, %82
  %84 = icmp ult ptr %61, %75
  %85 = icmp ult ptr %72, %65
  %86 = and i1 %84, %85
  %87 = or i1 %83, %86
  %88 = icmp ult ptr %61, %78
  %89 = icmp ult ptr %54, %65
  %90 = and i1 %88, %89
  %91 = or i1 %87, %90
  %92 = icmp ult ptr %61, %80
  %93 = icmp ult ptr %79, %65
  %94 = and i1 %92, %93
  %95 = or i1 %91, %94
  %96 = icmp ult ptr %67, %75
  %97 = icmp ult ptr %72, %70
  %98 = and i1 %96, %97
  %99 = or i1 %95, %98
  %100 = icmp ult ptr %67, %78
  %101 = icmp ult ptr %54, %70
  %102 = and i1 %100, %101
  %103 = or i1 %99, %102
  %104 = icmp ult ptr %67, %80
  %105 = icmp ult ptr %79, %70
  %106 = and i1 %104, %105
  %107 = or i1 %103, %106
  %108 = icmp ult ptr %72, %78
  %109 = icmp ult ptr %54, %75
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  %112 = icmp ult ptr %72, %80
  %113 = icmp ult ptr %79, %75
  %114 = and i1 %112, %113
  %115 = or i1 %111, %114
  br i1 %115, label %152, label %116

116:                                              ; preds = %59
  %117 = and i64 %52, 1
  %118 = sub nsw i64 %57, %117
  %119 = insertelement <2 x double> poison, double %38, i64 0
  %120 = shufflevector <2 x double> %119, <2 x double> poison, <2 x i32> zeroinitializer
  %121 = insertelement <2 x double> poison, double %40, i64 0
  %122 = shufflevector <2 x double> %121, <2 x double> poison, <2 x i32> zeroinitializer
  %123 = insertelement <2 x double> poison, double %39, i64 0
  %124 = shufflevector <2 x double> %123, <2 x double> poison, <2 x i32> zeroinitializer
  %125 = insertelement <2 x double> poison, double %41, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  br label %127

127:                                              ; preds = %127, %116
  %128 = phi i64 [ 0, %116 ], [ %148, %127 ]
  %129 = or i64 %128, 1
  %130 = getelementptr inbounds %"class.dealii::Point.14", ptr %54, i64 %128
  %131 = load <4 x double>, ptr %130, align 8, !tbaa !33
  %132 = shufflevector <4 x double> %131, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %133 = shufflevector <4 x double> %131, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %134 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %120, <2 x double> %132, <2 x double> %122)
  %135 = getelementptr inbounds %"class.dealii::Point.22", ptr %55, i64 %128
  %136 = getelementptr inbounds %"class.dealii::Point.22", ptr %55, i64 %129
  %137 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 %19
  %138 = getelementptr inbounds [3 x double], ptr %136, i64 0, i64 %19
  %139 = extractelement <2 x double> %134, i64 0
  store double %139, ptr %137, align 8, !tbaa !33, !alias.scope !434, !noalias !437
  %140 = extractelement <2 x double> %134, i64 1
  store double %140, ptr %138, align 8, !tbaa !33, !alias.scope !434, !noalias !437
  %141 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %124, <2 x double> %133, <2 x double> %126)
  %142 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 %18
  %143 = getelementptr inbounds [3 x double], ptr %136, i64 0, i64 %18
  %144 = extractelement <2 x double> %141, i64 0
  store double %144, ptr %142, align 8, !tbaa !33, !alias.scope !442, !noalias !443
  %145 = extractelement <2 x double> %141, i64 1
  store double %145, ptr %143, align 8, !tbaa !33, !alias.scope !442, !noalias !443
  %146 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 %56
  %147 = getelementptr inbounds [3 x double], ptr %136, i64 0, i64 %56
  store double %7, ptr %146, align 8, !tbaa !33, !alias.scope !444, !noalias !445
  store double %7, ptr %147, align 8, !tbaa !33, !alias.scope !444, !noalias !445
  %148 = add nuw i64 %128, 2
  %149 = icmp eq i64 %148, %118
  br i1 %149, label %150, label %127, !llvm.loop !446

150:                                              ; preds = %127
  %151 = icmp eq i64 %117, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %59, %51, %150
  %153 = phi i64 [ 0, %59 ], [ 0, %51 ], [ %118, %150 ]
  br label %155

154:                                              ; preds = %155, %150, %37
  ret void

155:                                              ; preds = %152, %155
  %156 = phi i64 [ %167, %155 ], [ %153, %152 ]
  %157 = getelementptr inbounds %"class.dealii::Point.14", ptr %54, i64 %156
  %158 = load double, ptr %157, align 8, !tbaa !33
  %159 = tail call double @llvm.fmuladd.f64(double %38, double %158, double %40)
  %160 = getelementptr inbounds %"class.dealii::Point.22", ptr %55, i64 %156
  %161 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 %19
  store double %159, ptr %161, align 8, !tbaa !33
  %162 = getelementptr inbounds [2 x double], ptr %157, i64 0, i64 1
  %163 = load double, ptr %162, align 8, !tbaa !33
  %164 = tail call double @llvm.fmuladd.f64(double %39, double %163, double %41)
  %165 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 %18
  store double %164, ptr %165, align 8, !tbaa !33
  %166 = getelementptr inbounds [3 x double], ptr %160, i64 0, i64 %56
  store double %7, ptr %166, align 8, !tbaa !33
  %167 = add nuw nsw i64 %156, 1
  %168 = icmp eq i64 %167, %57
  br i1 %168, label %154, label %155, !llvm.loop !447
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE16project_to_childERKNS_10QuadratureILi3EEEj(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.17", align 8
  %5 = alloca %"class.std::vector.3", align 8
  %6 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !40
  %9 = load ptr, ptr %6, align 8, !tbaa !40
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %23

17:                                               ; preds = %3
  %18 = mul nuw nsw i64 %14, 24
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !109
  %20 = getelementptr inbounds %"class.dealii::Point.22", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  br label %23

23:                                               ; preds = %17, %16
  %24 = phi ptr [ null, %16 ], [ %19, %17 ]
  %25 = phi ptr [ null, %16 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !111
  %27 = and i64 %12, 34359738360
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %111, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %1, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !109
  %32 = lshr i32 %2, 1
  %33 = insertelement <2 x i32> poison, i32 %2, i64 0
  %34 = insertelement <2 x i32> %33, i32 %32, i64 1
  %35 = and <2 x i32> %34, <i32 1, i32 1>
  %36 = uitofp <2 x i32> %35 to <2 x double>
  %37 = lshr i32 %2, 2
  %38 = uitofp i32 %37 to double
  %39 = and i64 %13, 4294967295
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %90, label %41

41:                                               ; preds = %29
  %42 = mul nuw nsw i64 %39, 24
  %43 = getelementptr i8, ptr %24, i64 %42
  %44 = getelementptr i8, ptr %31, i64 %42
  %45 = icmp ult ptr %24, %44
  %46 = icmp ult ptr %31, %43
  %47 = and i1 %45, %46
  br i1 %47, label %90, label %48

48:                                               ; preds = %41
  %49 = and i64 %13, 1
  %50 = sub nsw i64 %39, %49
  %51 = shufflevector <2 x double> %36, <2 x double> poison, <2 x i32> zeroinitializer
  %52 = shufflevector <2 x double> %36, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %53 = insertelement <2 x double> poison, double %38, i64 0
  %54 = shufflevector <2 x double> %53, <2 x double> poison, <2 x i32> zeroinitializer
  br label %55

55:                                               ; preds = %55, %48
  %56 = phi i64 [ 0, %48 ], [ %86, %55 ]
  %57 = or i64 %56, 1
  %58 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 %56
  %59 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 %57
  %60 = load double, ptr %58, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %61 = load double, ptr %59, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %62 = insertelement <2 x double> poison, double %60, i64 0
  %63 = insertelement <2 x double> %62, double %61, i64 1
  %64 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
  %65 = getelementptr inbounds [3 x double], ptr %59, i64 0, i64 1
  %66 = load double, ptr %64, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %67 = load double, ptr %65, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %68 = insertelement <2 x double> poison, double %66, i64 0
  %69 = insertelement <2 x double> %68, double %67, i64 1
  %70 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
  %71 = getelementptr inbounds [3 x double], ptr %59, i64 0, i64 2
  %72 = load double, ptr %70, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %73 = load double, ptr %71, align 8, !tbaa !33, !alias.scope !448, !noalias !451
  %74 = insertelement <2 x double> poison, double %72, i64 0
  %75 = insertelement <2 x double> %74, double %73, i64 1
  %76 = fadd <2 x double> %63, %51
  %77 = fadd <2 x double> %69, %52
  %78 = fadd <2 x double> %75, %54
  %79 = fmul <2 x double> %76, <double 5.000000e-01, double 5.000000e-01>
  %80 = fmul <2 x double> %77, <double 5.000000e-01, double 5.000000e-01>
  %81 = fmul <2 x double> %78, <double 5.000000e-01, double 5.000000e-01>
  %82 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %56
  %83 = shufflevector <2 x double> %79, <2 x double> %80, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %84 = shufflevector <2 x double> %81, <2 x double> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %85 = shufflevector <4 x double> %83, <4 x double> %84, <6 x i32> <i32 0, i32 2, i32 4, i32 1, i32 3, i32 5>
  store <6 x double> %85, ptr %82, align 8, !tbaa !33
  %86 = add nuw i64 %56, 2
  %87 = icmp eq i64 %86, %50
  br i1 %87, label %88, label %55, !llvm.loop !454

88:                                               ; preds = %55
  %89 = icmp eq i64 %49, 0
  br i1 %89, label %111, label %90

90:                                               ; preds = %41, %29, %88
  %91 = phi i64 [ 0, %41 ], [ 0, %29 ], [ %50, %88 ]
  %92 = sub nsw i64 %13, %91
  %93 = add nsw i64 %91, 1
  %94 = and i64 %92, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %108, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 %91
  %98 = getelementptr inbounds [3 x double], ptr %97, i64 0, i64 2
  %99 = load double, ptr %98, align 8, !tbaa !33, !noalias !451
  %100 = fadd double %99, %38
  %101 = fmul double %100, 5.000000e-01
  %102 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %91
  %103 = load <2 x double>, ptr %97, align 8, !tbaa !33, !noalias !451
  %104 = fadd <2 x double> %103, %36
  %105 = fmul <2 x double> %104, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %105, ptr %102, align 8, !tbaa !33
  %106 = getelementptr inbounds [3 x double], ptr %102, i64 0, i64 2
  store double %101, ptr %106, align 8, !tbaa !33
  %107 = add nuw nsw i64 %91, 1
  br label %108

108:                                              ; preds = %96, %90
  %109 = phi i64 [ %91, %90 ], [ %107, %96 ]
  %110 = icmp eq i64 %39, %93
  br i1 %110, label %111, label %159

111:                                              ; preds = %108, %159, %88, %23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %112 = ashr exact i64 %12, 3
  %113 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %113, align 8
  %114 = icmp eq ptr %8, %9
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = icmp ugt i64 %12, 9223372036854775800
  br i1 %116, label %117, label %119, !prof !39

117:                                              ; preds = %115
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #26
          to label %118 unwind label %185

118:                                              ; preds = %117
  unreachable

119:                                              ; preds = %115
  %120 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #22
          to label %121 unwind label %185

121:                                              ; preds = %119, %111
  %122 = phi ptr [ null, %111 ], [ %120, %119 ]
  store ptr %122, ptr %5, align 8, !tbaa !36
  %123 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %124 = getelementptr inbounds double, ptr %122, i64 %112
  %125 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %124, ptr %125, align 8, !tbaa !37
  %126 = icmp sgt i64 %12, 8
  br i1 %126, label %127, label %128, !prof !45

127:                                              ; preds = %121
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %122, ptr align 8 %9, i64 %12, i1 false)
  br label %132

128:                                              ; preds = %121
  %129 = icmp eq i64 %12, 8
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = load double, ptr %9, align 8, !tbaa !33
  store double %131, ptr %122, align 8, !tbaa !33
  store ptr %124, ptr %123, align 8, !tbaa !38
  br label %133

132:                                              ; preds = %127, %128
  store ptr %124, ptr %123, align 8, !tbaa !38
  br i1 %28, label %184, label %133

133:                                              ; preds = %130, %132
  %134 = and i64 %13, 4294967295
  %135 = icmp ult i64 %134, 16
  br i1 %135, label %157, label %136

136:                                              ; preds = %133
  %137 = and i64 %13, 15
  %138 = sub nsw i64 %134, %137
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i64 [ 0, %136 ], [ %153, %139 ]
  %141 = getelementptr inbounds double, ptr %122, i64 %140
  %142 = load <4 x double>, ptr %141, align 8, !tbaa !33
  %143 = getelementptr inbounds double, ptr %141, i64 4
  %144 = load <4 x double>, ptr %143, align 8, !tbaa !33
  %145 = getelementptr inbounds double, ptr %141, i64 8
  %146 = load <4 x double>, ptr %145, align 8, !tbaa !33
  %147 = getelementptr inbounds double, ptr %141, i64 12
  %148 = load <4 x double>, ptr %147, align 8, !tbaa !33
  %149 = fmul <4 x double> %142, <double 1.250000e-01, double 1.250000e-01, double 1.250000e-01, double 1.250000e-01>
  %150 = fmul <4 x double> %144, <double 1.250000e-01, double 1.250000e-01, double 1.250000e-01, double 1.250000e-01>
  %151 = fmul <4 x double> %146, <double 1.250000e-01, double 1.250000e-01, double 1.250000e-01, double 1.250000e-01>
  %152 = fmul <4 x double> %148, <double 1.250000e-01, double 1.250000e-01, double 1.250000e-01, double 1.250000e-01>
  store <4 x double> %149, ptr %141, align 8, !tbaa !33
  store <4 x double> %150, ptr %143, align 8, !tbaa !33
  store <4 x double> %151, ptr %145, align 8, !tbaa !33
  store <4 x double> %152, ptr %147, align 8, !tbaa !33
  %153 = add nuw i64 %140, 16
  %154 = icmp eq i64 %153, %138
  br i1 %154, label %155, label %139, !llvm.loop !455

155:                                              ; preds = %139
  %156 = icmp eq i64 %137, 0
  br i1 %156, label %184, label %157

157:                                              ; preds = %133, %155
  %158 = phi i64 [ 0, %133 ], [ %138, %155 ]
  br label %187

159:                                              ; preds = %108, %159
  %160 = phi i64 [ %182, %159 ], [ %109, %108 ]
  %161 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 %160
  %162 = getelementptr inbounds [3 x double], ptr %161, i64 0, i64 2
  %163 = load double, ptr %162, align 8, !tbaa !33, !noalias !451
  %164 = fadd double %163, %38
  %165 = fmul double %164, 5.000000e-01
  %166 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %160
  %167 = load <2 x double>, ptr %161, align 8, !tbaa !33, !noalias !451
  %168 = fadd <2 x double> %167, %36
  %169 = fmul <2 x double> %168, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %169, ptr %166, align 8, !tbaa !33
  %170 = getelementptr inbounds [3 x double], ptr %166, i64 0, i64 2
  store double %165, ptr %170, align 8, !tbaa !33
  %171 = add nuw nsw i64 %160, 1
  %172 = getelementptr inbounds %"class.dealii::Point.22", ptr %31, i64 %171
  %173 = getelementptr inbounds [3 x double], ptr %172, i64 0, i64 2
  %174 = load double, ptr %173, align 8, !tbaa !33, !noalias !451
  %175 = fadd double %174, %38
  %176 = fmul double %175, 5.000000e-01
  %177 = getelementptr inbounds %"class.dealii::Point.22", ptr %24, i64 %171
  %178 = load <2 x double>, ptr %172, align 8, !tbaa !33, !noalias !451
  %179 = fadd <2 x double> %178, %36
  %180 = fmul <2 x double> %179, <double 5.000000e-01, double 5.000000e-01>
  store <2 x double> %180, ptr %177, align 8, !tbaa !33
  %181 = getelementptr inbounds [3 x double], ptr %177, i64 0, i64 2
  store double %176, ptr %181, align 8, !tbaa !33
  %182 = add nuw nsw i64 %160, 2
  %183 = icmp eq i64 %182, %39
  br i1 %183, label %111, label %159, !llvm.loop !456

184:                                              ; preds = %187, %155, %132
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %194 unwind label %198

185:                                              ; preds = %119, %117
  %186 = landingpad { ptr, i32 }
          cleanup
  br label %208

187:                                              ; preds = %157, %187
  %188 = phi i64 [ %192, %187 ], [ %158, %157 ]
  %189 = getelementptr inbounds double, ptr %122, i64 %188
  %190 = load double, ptr %189, align 8, !tbaa !33
  %191 = fmul double %190, 1.250000e-01
  store double %191, ptr %189, align 8, !tbaa !33
  %192 = add nuw nsw i64 %188, 1
  %193 = icmp eq i64 %192, %134
  br i1 %193, label %184, label %187, !llvm.loop !457

194:                                              ; preds = %184
  %195 = load ptr, ptr %5, align 8, !tbaa !36
  %196 = icmp eq ptr %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  call void @_ZdlPv(ptr noundef nonnull %195) #23
  br label %203

198:                                              ; preds = %184
  %199 = landingpad { ptr, i32 }
          cleanup
  %200 = load ptr, ptr %5, align 8, !tbaa !36
  %201 = icmp eq ptr %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %198
  call void @_ZdlPv(ptr noundef nonnull %200) #23
  br label %208

203:                                              ; preds = %197, %194
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %204 = load ptr, ptr %4, align 8, !tbaa !109
  %205 = icmp eq ptr %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  call void @_ZdlPv(ptr noundef nonnull %204) #23
  br label %207

207:                                              ; preds = %203, %206
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

208:                                              ; preds = %202, %198, %185
  %209 = phi { ptr, i32 } [ %186, %185 ], [ %199, %198 ], [ %199, %202 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %210 = load ptr, ptr %4, align 8, !tbaa !109
  %211 = icmp eq ptr %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  call void @_ZdlPv(ptr noundef nonnull %210) #23
  br label %213

213:                                              ; preds = %212, %208
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %209
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE15project_to_lineERKNS_10QuadratureILi1EEERKNS_5PointILi3EEES9_(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.17", align 8
  %6 = alloca %"class.std::vector.3", align 8
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = load ptr, ptr %7, align 8, !tbaa !36
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %15 = and i64 %14, 4294967295
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  br label %30

18:                                               ; preds = %4
  %19 = mul nuw nsw i64 %15, 24
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #22
  store ptr %20, ptr %5, align 8, !tbaa !109
  %21 = getelementptr inbounds %"class.dealii::Point.22", ptr %20, i64 %15
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !110
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %20, i8 0, i64 %19, i1 false), !tbaa !33
  %23 = getelementptr i8, ptr %20, i64 %19
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !111
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  %25 = shl nuw nsw i64 %15, 3
  %26 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #22
          to label %27 unwind label %124

27:                                               ; preds = %18
  store ptr %26, ptr %6, align 8, !tbaa !36
  %28 = getelementptr inbounds double, ptr %26, i64 %15
  %29 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %26, i8 0, i64 %25, i1 false), !tbaa !33
  br label %30

30:                                               ; preds = %27, %17
  %31 = phi ptr [ null, %17 ], [ %26, %27 ]
  %32 = phi ptr [ null, %17 ], [ %20, %27 ]
  %33 = phi ptr [ null, %17 ], [ %28, %27 ]
  %34 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %33, ptr %34, align 8, !tbaa !38
  %35 = load <2 x double>, ptr %2, align 8, !tbaa !33
  %36 = load <2 x double>, ptr %3, align 8, !tbaa !33
  %37 = fsub <2 x double> %35, %36
  %38 = extractelement <2 x double> %37, i64 0
  %39 = tail call double @llvm.fmuladd.f64(double %38, double %38, double 0.000000e+00)
  %40 = fsub <2 x double> %35, %36
  %41 = extractelement <2 x double> %40, i64 1
  %42 = tail call double @llvm.fmuladd.f64(double %41, double %41, double %39)
  %43 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %44 = load double, ptr %43, align 8, !tbaa !33
  %45 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %46 = load double, ptr %45, align 8, !tbaa !33
  %47 = fsub double %44, %46
  %48 = tail call double @llvm.fmuladd.f64(double %47, double %47, double %42)
  %49 = tail call double @llvm.sqrt.f64(double %48)
  %50 = and i64 %13, 34359738360
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %123, label %52

52:                                               ; preds = %30
  %53 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !31
  %55 = and i64 %14, 4294967295
  %56 = icmp ult i64 %55, 12
  br i1 %56, label %121, label %57

57:                                               ; preds = %52
  %58 = mul nuw nsw i64 %55, 24
  %59 = getelementptr i8, ptr %32, i64 %58
  %60 = getelementptr i8, ptr %31, i64 %50
  %61 = getelementptr i8, ptr %54, i64 %50
  %62 = getelementptr i8, ptr %10, i64 %50
  %63 = icmp ult ptr %32, %60
  %64 = icmp ult ptr %31, %59
  %65 = and i1 %63, %64
  %66 = icmp ult ptr %32, %61
  %67 = icmp ult ptr %54, %59
  %68 = and i1 %66, %67
  %69 = or i1 %65, %68
  %70 = icmp ult ptr %32, %62
  %71 = icmp ult ptr %10, %59
  %72 = and i1 %70, %71
  %73 = or i1 %69, %72
  %74 = icmp ult ptr %31, %61
  %75 = icmp ult ptr %54, %60
  %76 = and i1 %74, %75
  %77 = or i1 %73, %76
  %78 = icmp ult ptr %31, %62
  %79 = icmp ult ptr %10, %60
  %80 = and i1 %78, %79
  %81 = or i1 %77, %80
  br i1 %81, label %121, label %82

82:                                               ; preds = %57
  %83 = and i64 %14, 3
  %84 = sub nsw i64 %55, %83
  %85 = shufflevector <2 x double> %36, <2 x double> poison, <4 x i32> zeroinitializer
  %86 = shufflevector <2 x double> %36, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %87 = insertelement <4 x double> poison, double %46, i64 0
  %88 = shufflevector <4 x double> %87, <4 x double> poison, <4 x i32> zeroinitializer
  %89 = shufflevector <2 x double> %35, <2 x double> poison, <4 x i32> zeroinitializer
  %90 = shufflevector <2 x double> %35, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %91 = insertelement <4 x double> poison, double %44, i64 0
  %92 = shufflevector <4 x double> %91, <4 x double> poison, <4 x i32> zeroinitializer
  %93 = insertelement <4 x double> poison, double %49, i64 0
  %94 = shufflevector <4 x double> %93, <4 x double> poison, <4 x i32> zeroinitializer
  br label %95

95:                                               ; preds = %95, %82
  %96 = phi i64 [ 0, %82 ], [ %117, %95 ]
  %97 = getelementptr inbounds %"class.dealii::Point", ptr %54, i64 %96
  %98 = load <4 x double>, ptr %97, align 8, !tbaa !33, !alias.scope !458
  %99 = fmul <4 x double> %98, %85
  %100 = fmul <4 x double> %98, %86
  %101 = fmul <4 x double> %98, %88
  %102 = fsub <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %98
  %103 = fmul <4 x double> %102, %89
  %104 = fmul <4 x double> %102, %90
  %105 = fmul <4 x double> %102, %92
  %106 = fadd <4 x double> %99, %103
  %107 = fadd <4 x double> %100, %104
  %108 = fadd <4 x double> %101, %105
  %109 = getelementptr inbounds %"class.dealii::Point.22", ptr %32, i64 %96
  %110 = shufflevector <4 x double> %106, <4 x double> %107, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %111 = shufflevector <4 x double> %108, <4 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %112 = shufflevector <8 x double> %110, <8 x double> %111, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  store <12 x double> %112, ptr %109, align 8, !tbaa !33
  %113 = getelementptr inbounds double, ptr %10, i64 %96
  %114 = load <4 x double>, ptr %113, align 8, !tbaa !33, !alias.scope !461
  %115 = fmul <4 x double> %94, %114
  %116 = getelementptr inbounds double, ptr %31, i64 %96
  store <4 x double> %115, ptr %116, align 8, !tbaa !33, !alias.scope !463, !noalias !465
  %117 = add nuw i64 %96, 4
  %118 = icmp eq i64 %117, %84
  br i1 %118, label %119, label %95, !llvm.loop !466

119:                                              ; preds = %95
  %120 = icmp eq i64 %83, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %57, %52, %119
  %122 = phi i64 [ 0, %57 ], [ 0, %52 ], [ %84, %119 ]
  br label %130

123:                                              ; preds = %130, %119, %30
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %153 unwind label %126

124:                                              ; preds = %18
  %125 = landingpad { ptr, i32 }
          cleanup
  br label %163

126:                                              ; preds = %123
  %127 = landingpad { ptr, i32 }
          cleanup
  %128 = load ptr, ptr %6, align 8, !tbaa !36
  %129 = icmp eq ptr %128, null
  br i1 %129, label %163, label %157

130:                                              ; preds = %121, %130
  %131 = phi i64 [ %151, %130 ], [ %122, %121 ]
  %132 = getelementptr inbounds %"class.dealii::Point", ptr %54, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !33
  %134 = fmul double %133, %46
  %135 = getelementptr inbounds %"class.dealii::Point.22", ptr %32, i64 %131
  %136 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 2
  %137 = fsub double 1.000000e+00, %133
  %138 = fmul double %137, %44
  %139 = insertelement <2 x double> poison, double %133, i64 0
  %140 = shufflevector <2 x double> %139, <2 x double> poison, <2 x i32> zeroinitializer
  %141 = fmul <2 x double> %140, %36
  %142 = insertelement <2 x double> poison, double %137, i64 0
  %143 = shufflevector <2 x double> %142, <2 x double> poison, <2 x i32> zeroinitializer
  %144 = fmul <2 x double> %143, %35
  %145 = fadd <2 x double> %141, %144
  store <2 x double> %145, ptr %135, align 8, !tbaa !33
  %146 = fadd double %134, %138
  store double %146, ptr %136, align 8, !tbaa !33
  %147 = getelementptr inbounds double, ptr %10, i64 %131
  %148 = load double, ptr %147, align 8, !tbaa !33
  %149 = fmul double %49, %148
  %150 = getelementptr inbounds double, ptr %31, i64 %131
  store double %149, ptr %150, align 8, !tbaa !33
  %151 = add nuw nsw i64 %131, 1
  %152 = icmp eq i64 %151, %55
  br i1 %152, label %123, label %130, !llvm.loop !467

153:                                              ; preds = %123
  %154 = load ptr, ptr %6, align 8, !tbaa !36
  %155 = icmp eq ptr %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  call void @_ZdlPv(ptr noundef nonnull %154) #23
  br label %158

157:                                              ; preds = %126
  call void @_ZdlPv(ptr noundef nonnull %128) #23
  br label %163

158:                                              ; preds = %156, %153
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %159 = load ptr, ptr %5, align 8, !tbaa !109
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %158
  call void @_ZdlPv(ptr noundef nonnull %159) #23
  br label %162

162:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  ret void

163:                                              ; preds = %157, %126, %124
  %164 = phi { ptr, i32 } [ %125, %124 ], [ %127, %126 ], [ %127, %157 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %165 = load ptr, ptr %5, align 8, !tbaa !109
  %166 = icmp eq ptr %165, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %163
  call void @_ZdlPv(ptr noundef nonnull %165) #23
  br label %168

168:                                              ; preds = %167, %163
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  resume { ptr, i32 } %164
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC2Ev(ptr noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC5Ev) align 2 {
  store i32 -1, ptr %0, align 4, !tbaa !468
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv() local_unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj(i32 noundef %0, i1 noundef zeroext %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i32 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = zext i1 %1 to i64
  %7 = zext i1 %2 to i64
  %8 = zext i1 %3 to i64
  %9 = getelementptr inbounds [2 x [2 x [2 x i32]]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbjE6offset, i64 0, i64 %6, i64 %7, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !470
  %11 = add i32 %10, %0
  %12 = mul i32 %11, %4
  ret i32 %12
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 4, !tbaa !468
  ret i32 %2
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC2Ej(ptr noundef nonnull align 4 dereferenceable(4) %0, i32 noundef %1) unnamed_addr #6 comdat($_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC5Ej) align 2 {
  store i32 %1, ptr %0, align 4, !tbaa !468
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE7reflectERKNS_10QuadratureILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.9", align 8
  %4 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #25
  %5 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = and i64 %12, 4294967295
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  br label %28

16:                                               ; preds = %2
  %17 = shl nuw nsw i64 %13, 4
  %18 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
  store ptr %18, ptr %3, align 8, !tbaa !64
  %19 = getelementptr inbounds %"class.dealii::Point.14", ptr %18, i64 %13
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %18, i8 0, i64 %17, i1 false), !tbaa !33
  %21 = getelementptr i8, ptr %18, i64 %17
  %22 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %23 = shl nuw nsw i64 %13, 3
  %24 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %23) #22
          to label %25 unwind label %104

25:                                               ; preds = %16
  store ptr %24, ptr %4, align 8, !tbaa !36
  %26 = getelementptr inbounds double, ptr %24, i64 %13
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %24, i8 0, i64 %23, i1 false), !tbaa !33
  br label %28

28:                                               ; preds = %25, %15
  %29 = phi ptr [ null, %15 ], [ %24, %25 ]
  %30 = phi ptr [ null, %15 ], [ %18, %25 ]
  %31 = phi ptr [ null, %15 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %31, ptr %32, align 8, !tbaa !38
  %33 = and i64 %11, 34359738360
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %103, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !64
  %38 = and i64 %12, 4294967295
  %39 = icmp ult i64 %38, 26
  br i1 %39, label %83, label %40

40:                                               ; preds = %35
  %41 = shl nuw nsw i64 %38, 4
  %42 = getelementptr i8, ptr %30, i64 %41
  %43 = getelementptr i8, ptr %29, i64 %33
  %44 = getelementptr i8, ptr %37, i64 %41
  %45 = getelementptr i8, ptr %8, i64 %33
  %46 = icmp ult ptr %30, %43
  %47 = icmp ult ptr %29, %42
  %48 = and i1 %46, %47
  %49 = icmp ult ptr %30, %44
  %50 = icmp ult ptr %37, %42
  %51 = and i1 %49, %50
  %52 = or i1 %48, %51
  %53 = icmp ult ptr %30, %45
  %54 = icmp ult ptr %8, %42
  %55 = and i1 %53, %54
  %56 = or i1 %52, %55
  %57 = icmp ult ptr %29, %44
  %58 = icmp ult ptr %37, %43
  %59 = and i1 %57, %58
  %60 = or i1 %56, %59
  %61 = icmp ult ptr %29, %45
  %62 = icmp ult ptr %8, %43
  %63 = and i1 %61, %62
  %64 = or i1 %60, %63
  br i1 %64, label %83, label %65

65:                                               ; preds = %40
  %66 = and i64 %12, 1
  %67 = sub nsw i64 %38, %66
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %79, %68 ]
  %70 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %69
  %71 = load <4 x double>, ptr %70, align 8, !tbaa !33
  %72 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %73 = shufflevector <4 x double> %71, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %74 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %69
  %75 = shufflevector <2 x double> %73, <2 x double> %72, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %75, ptr %74, align 8, !tbaa !33
  %76 = getelementptr inbounds double, ptr %8, i64 %69
  %77 = load <2 x double>, ptr %76, align 8, !tbaa !33, !alias.scope !471
  %78 = getelementptr inbounds double, ptr %29, i64 %69
  store <2 x double> %77, ptr %78, align 8, !tbaa !33, !alias.scope !474, !noalias !476
  %79 = add nuw i64 %69, 2
  %80 = icmp eq i64 %79, %67
  br i1 %80, label %81, label %68, !llvm.loop !478

81:                                               ; preds = %68
  %82 = icmp eq i64 %66, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %40, %35, %81
  %84 = phi i64 [ 0, %40 ], [ 0, %35 ], [ %67, %81 ]
  %85 = sub nsw i64 %12, %84
  %86 = add nsw i64 %84, 1
  %87 = and i64 %85, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %84
  %91 = getelementptr inbounds [2 x double], ptr %90, i64 0, i64 1
  %92 = load double, ptr %91, align 8, !tbaa !33
  %93 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %84
  store double %92, ptr %93, align 8, !tbaa !33
  %94 = load double, ptr %90, align 8, !tbaa !33
  %95 = getelementptr inbounds [2 x double], ptr %93, i64 0, i64 1
  store double %94, ptr %95, align 8, !tbaa !33
  %96 = getelementptr inbounds double, ptr %8, i64 %84
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = getelementptr inbounds double, ptr %29, i64 %84
  store double %97, ptr %98, align 8, !tbaa !33
  %99 = add nuw nsw i64 %84, 1
  br label %100

100:                                              ; preds = %89, %83
  %101 = phi i64 [ %84, %83 ], [ %99, %89 ]
  %102 = icmp eq i64 %13, %86
  br i1 %102, label %103, label %106

103:                                              ; preds = %100, %106, %81, %28
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %129 unwind label %133

104:                                              ; preds = %16
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %143

106:                                              ; preds = %100, %106
  %107 = phi i64 [ %127, %106 ], [ %101, %100 ]
  %108 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %107
  %109 = getelementptr inbounds [2 x double], ptr %108, i64 0, i64 1
  %110 = load double, ptr %109, align 8, !tbaa !33
  %111 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %107
  store double %110, ptr %111, align 8, !tbaa !33
  %112 = load double, ptr %108, align 8, !tbaa !33
  %113 = getelementptr inbounds [2 x double], ptr %111, i64 0, i64 1
  store double %112, ptr %113, align 8, !tbaa !33
  %114 = getelementptr inbounds double, ptr %8, i64 %107
  %115 = load double, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds double, ptr %29, i64 %107
  store double %115, ptr %116, align 8, !tbaa !33
  %117 = add nuw nsw i64 %107, 1
  %118 = getelementptr inbounds %"class.dealii::Point.14", ptr %37, i64 %117
  %119 = getelementptr inbounds [2 x double], ptr %118, i64 0, i64 1
  %120 = load double, ptr %119, align 8, !tbaa !33
  %121 = getelementptr inbounds %"class.dealii::Point.14", ptr %30, i64 %117
  store double %120, ptr %121, align 8, !tbaa !33
  %122 = load double, ptr %118, align 8, !tbaa !33
  %123 = getelementptr inbounds [2 x double], ptr %121, i64 0, i64 1
  store double %122, ptr %123, align 8, !tbaa !33
  %124 = getelementptr inbounds double, ptr %8, i64 %117
  %125 = load double, ptr %124, align 8, !tbaa !33
  %126 = getelementptr inbounds double, ptr %29, i64 %117
  store double %125, ptr %126, align 8, !tbaa !33
  %127 = add nuw nsw i64 %107, 2
  %128 = icmp eq i64 %127, %38
  br i1 %128, label %103, label %106, !llvm.loop !479

129:                                              ; preds = %103
  %130 = load ptr, ptr %4, align 8, !tbaa !36
  %131 = icmp eq ptr %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef nonnull %130) #23
  br label %137

133:                                              ; preds = %103
  %134 = landingpad { ptr, i32 }
          cleanup
  %135 = load ptr, ptr %4, align 8, !tbaa !36
  %136 = icmp eq ptr %135, null
  br i1 %136, label %143, label %142

137:                                              ; preds = %132, %129
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %138 = load ptr, ptr %3, align 8, !tbaa !64
  %139 = icmp eq ptr %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @_ZdlPv(ptr noundef nonnull %138) #23
  br label %141

141:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  ret void

142:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef nonnull %135) #23
  br label %143

143:                                              ; preds = %142, %133, %104
  %144 = phi { ptr, i32 } [ %105, %104 ], [ %134, %133 ], [ %134, %142 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %145 = load ptr, ptr %3, align 8, !tbaa !64
  %146 = icmp eq ptr %145, null
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @_ZdlPv(ptr noundef nonnull %145) #23
  br label %148

148:                                              ; preds = %147, %143
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  resume { ptr, i32 } %144
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.9", align 8
  %5 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  %6 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !38
  %9 = load ptr, ptr %6, align 8, !tbaa !36
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 3
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  br label %29

17:                                               ; preds = %3
  %18 = shl nuw nsw i64 %14, 4
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
  store ptr %19, ptr %4, align 8, !tbaa !64
  %20 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %14
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !65
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %19, i8 0, i64 %18, i1 false), !tbaa !33
  %22 = getelementptr i8, ptr %19, i64 %18
  %23 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  %24 = shl nuw nsw i64 %14, 3
  %25 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %24) #22
          to label %26 unwind label %411

26:                                               ; preds = %17
  store ptr %25, ptr %5, align 8, !tbaa !36
  %27 = getelementptr inbounds double, ptr %25, i64 %14
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !37
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %25, i8 0, i64 %24, i1 false), !tbaa !33
  br label %29

29:                                               ; preds = %26, %16
  %30 = phi ptr [ null, %16 ], [ %25, %26 ]
  %31 = phi ptr [ null, %16 ], [ %19, %26 ]
  %32 = phi ptr [ null, %16 ], [ %27, %26 ]
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !38
  %34 = and i64 %12, 34359738360
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %410, label %36

36:                                               ; preds = %29
  %37 = and i32 %2, 3
  %38 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8
  switch i32 %37, label %409 [
    i32 0, label %246
    i32 1, label %178
    i32 2, label %108
    i32 3, label %40
  ]

40:                                               ; preds = %36
  %41 = and i64 %13, 4294967295
  %42 = icmp ult i64 %41, 24
  br i1 %42, label %87, label %43

43:                                               ; preds = %40
  %44 = shl nuw nsw i64 %41, 4
  %45 = getelementptr i8, ptr %31, i64 %44
  %46 = getelementptr i8, ptr %30, i64 %34
  %47 = getelementptr i8, ptr %39, i64 %44
  %48 = getelementptr i8, ptr %9, i64 %34
  %49 = icmp ult ptr %31, %46
  %50 = icmp ult ptr %30, %45
  %51 = and i1 %49, %50
  %52 = icmp ult ptr %31, %47
  %53 = icmp ult ptr %39, %45
  %54 = and i1 %52, %53
  %55 = or i1 %51, %54
  %56 = icmp ult ptr %31, %48
  %57 = icmp ult ptr %9, %45
  %58 = and i1 %56, %57
  %59 = or i1 %55, %58
  %60 = icmp ult ptr %30, %47
  %61 = icmp ult ptr %39, %46
  %62 = and i1 %60, %61
  %63 = or i1 %59, %62
  %64 = icmp ult ptr %30, %48
  %65 = icmp ult ptr %9, %46
  %66 = and i1 %64, %65
  %67 = or i1 %63, %66
  br i1 %67, label %87, label %68

68:                                               ; preds = %43
  %69 = and i64 %13, 1
  %70 = sub nsw i64 %41, %69
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi i64 [ 0, %68 ], [ %83, %71 ]
  %73 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %72
  %74 = load <4 x double>, ptr %73, align 8, !tbaa !33
  %75 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %76 = shufflevector <4 x double> %74, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %77 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %75
  %78 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %72
  %79 = shufflevector <2 x double> %76, <2 x double> %77, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %79, ptr %78, align 8, !tbaa !33
  %80 = getelementptr inbounds double, ptr %9, i64 %72
  %81 = load <2 x double>, ptr %80, align 8, !tbaa !33, !alias.scope !480
  %82 = getelementptr inbounds double, ptr %30, i64 %72
  store <2 x double> %81, ptr %82, align 8, !tbaa !33, !alias.scope !483, !noalias !485
  %83 = add nuw i64 %72, 2
  %84 = icmp eq i64 %83, %70
  br i1 %84, label %85, label %71, !llvm.loop !487

85:                                               ; preds = %71
  %86 = icmp eq i64 %69, 0
  br i1 %86, label %410, label %87

87:                                               ; preds = %43, %40, %85
  %88 = phi i64 [ 0, %43 ], [ 0, %40 ], [ %70, %85 ]
  %89 = sub nsw i64 %13, %88
  %90 = add nsw i64 %88, 1
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %105, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %88
  %95 = getelementptr inbounds [2 x double], ptr %94, i64 0, i64 1
  %96 = load double, ptr %95, align 8, !tbaa !33
  %97 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %88
  store double %96, ptr %97, align 8, !tbaa !33
  %98 = load double, ptr %94, align 8, !tbaa !33
  %99 = fsub double 1.000000e+00, %98
  %100 = getelementptr inbounds [2 x double], ptr %97, i64 0, i64 1
  store double %99, ptr %100, align 8, !tbaa !33
  %101 = getelementptr inbounds double, ptr %9, i64 %88
  %102 = load double, ptr %101, align 8, !tbaa !33
  %103 = getelementptr inbounds double, ptr %30, i64 %88
  store double %102, ptr %103, align 8, !tbaa !33
  %104 = add nuw nsw i64 %88, 1
  br label %105

105:                                              ; preds = %93, %87
  %106 = phi i64 [ %88, %87 ], [ %104, %93 ]
  %107 = icmp eq i64 %14, %90
  br i1 %107, label %410, label %384

108:                                              ; preds = %36
  %109 = and i64 %13, 4294967295
  %110 = icmp ult i64 %109, 20
  br i1 %110, label %156, label %111

111:                                              ; preds = %108
  %112 = shl nuw nsw i64 %109, 4
  %113 = getelementptr i8, ptr %31, i64 %112
  %114 = getelementptr i8, ptr %30, i64 %34
  %115 = getelementptr i8, ptr %39, i64 %112
  %116 = getelementptr i8, ptr %9, i64 %34
  %117 = icmp ult ptr %31, %114
  %118 = icmp ult ptr %30, %113
  %119 = and i1 %117, %118
  %120 = icmp ult ptr %31, %115
  %121 = icmp ult ptr %39, %113
  %122 = and i1 %120, %121
  %123 = or i1 %119, %122
  %124 = icmp ult ptr %31, %116
  %125 = icmp ult ptr %9, %113
  %126 = and i1 %124, %125
  %127 = or i1 %123, %126
  %128 = icmp ult ptr %30, %115
  %129 = icmp ult ptr %39, %114
  %130 = and i1 %128, %129
  %131 = or i1 %127, %130
  %132 = icmp ult ptr %30, %116
  %133 = icmp ult ptr %9, %114
  %134 = and i1 %132, %133
  %135 = or i1 %131, %134
  br i1 %135, label %156, label %136

136:                                              ; preds = %111
  %137 = and i64 %13, 1
  %138 = sub nsw i64 %109, %137
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i64 [ 0, %136 ], [ %152, %139 ]
  %141 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %140
  %142 = load <4 x double>, ptr %141, align 8, !tbaa !33
  %143 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %144 = shufflevector <4 x double> %142, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %145 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %143
  %146 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %144
  %147 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %140
  %148 = shufflevector <2 x double> %145, <2 x double> %146, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %148, ptr %147, align 8, !tbaa !33
  %149 = getelementptr inbounds double, ptr %9, i64 %140
  %150 = load <2 x double>, ptr %149, align 8, !tbaa !33, !alias.scope !488
  %151 = getelementptr inbounds double, ptr %30, i64 %140
  store <2 x double> %150, ptr %151, align 8, !tbaa !33, !alias.scope !491, !noalias !493
  %152 = add nuw i64 %140, 2
  %153 = icmp eq i64 %152, %138
  br i1 %153, label %154, label %139, !llvm.loop !495

154:                                              ; preds = %139
  %155 = icmp eq i64 %137, 0
  br i1 %155, label %410, label %156

156:                                              ; preds = %111, %108, %154
  %157 = phi i64 [ 0, %111 ], [ 0, %108 ], [ %138, %154 ]
  %158 = sub nsw i64 %13, %157
  %159 = add nsw i64 %157, 1
  %160 = and i64 %158, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %175, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %157
  %164 = load double, ptr %163, align 8, !tbaa !33
  %165 = fsub double 1.000000e+00, %164
  %166 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %157
  store double %165, ptr %166, align 8, !tbaa !33
  %167 = getelementptr inbounds [2 x double], ptr %163, i64 0, i64 1
  %168 = load double, ptr %167, align 8, !tbaa !33
  %169 = fsub double 1.000000e+00, %168
  %170 = getelementptr inbounds [2 x double], ptr %166, i64 0, i64 1
  store double %169, ptr %170, align 8, !tbaa !33
  %171 = getelementptr inbounds double, ptr %9, i64 %157
  %172 = load double, ptr %171, align 8, !tbaa !33
  %173 = getelementptr inbounds double, ptr %30, i64 %157
  store double %172, ptr %173, align 8, !tbaa !33
  %174 = add nuw nsw i64 %157, 1
  br label %175

175:                                              ; preds = %162, %156
  %176 = phi i64 [ %157, %156 ], [ %174, %162 ]
  %177 = icmp eq i64 %14, %159
  br i1 %177, label %410, label %357

178:                                              ; preds = %36
  %179 = and i64 %13, 4294967295
  %180 = icmp ult i64 %179, 24
  br i1 %180, label %225, label %181

181:                                              ; preds = %178
  %182 = shl nuw nsw i64 %179, 4
  %183 = getelementptr i8, ptr %31, i64 %182
  %184 = getelementptr i8, ptr %30, i64 %34
  %185 = getelementptr i8, ptr %39, i64 %182
  %186 = getelementptr i8, ptr %9, i64 %34
  %187 = icmp ult ptr %31, %184
  %188 = icmp ult ptr %30, %183
  %189 = and i1 %187, %188
  %190 = icmp ult ptr %31, %185
  %191 = icmp ult ptr %39, %183
  %192 = and i1 %190, %191
  %193 = or i1 %189, %192
  %194 = icmp ult ptr %31, %186
  %195 = icmp ult ptr %9, %183
  %196 = and i1 %194, %195
  %197 = or i1 %193, %196
  %198 = icmp ult ptr %30, %185
  %199 = icmp ult ptr %39, %184
  %200 = and i1 %198, %199
  %201 = or i1 %197, %200
  %202 = icmp ult ptr %30, %186
  %203 = icmp ult ptr %9, %184
  %204 = and i1 %202, %203
  %205 = or i1 %201, %204
  br i1 %205, label %225, label %206

206:                                              ; preds = %181
  %207 = and i64 %13, 1
  %208 = sub nsw i64 %179, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %221, %209 ]
  %211 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %210
  %212 = load <4 x double>, ptr %211, align 8, !tbaa !33
  %213 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %214 = shufflevector <4 x double> %212, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %215 = fsub <2 x double> <double 1.000000e+00, double 1.000000e+00>, %214
  %216 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %210
  %217 = shufflevector <2 x double> %215, <2 x double> %213, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x double> %217, ptr %216, align 8, !tbaa !33
  %218 = getelementptr inbounds double, ptr %9, i64 %210
  %219 = load <2 x double>, ptr %218, align 8, !tbaa !33, !alias.scope !496
  %220 = getelementptr inbounds double, ptr %30, i64 %210
  store <2 x double> %219, ptr %220, align 8, !tbaa !33, !alias.scope !499, !noalias !501
  %221 = add nuw i64 %210, 2
  %222 = icmp eq i64 %221, %208
  br i1 %222, label %223, label %209, !llvm.loop !503

223:                                              ; preds = %209
  %224 = icmp eq i64 %207, 0
  br i1 %224, label %410, label %225

225:                                              ; preds = %181, %178, %223
  %226 = phi i64 [ 0, %181 ], [ 0, %178 ], [ %208, %223 ]
  %227 = sub nsw i64 %13, %226
  %228 = add nsw i64 %226, 1
  %229 = and i64 %227, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %226
  %233 = getelementptr inbounds [2 x double], ptr %232, i64 0, i64 1
  %234 = load double, ptr %233, align 8, !tbaa !33
  %235 = fsub double 1.000000e+00, %234
  %236 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %226
  store double %235, ptr %236, align 8, !tbaa !33
  %237 = load double, ptr %232, align 8, !tbaa !33
  %238 = getelementptr inbounds [2 x double], ptr %236, i64 0, i64 1
  store double %237, ptr %238, align 8, !tbaa !33
  %239 = getelementptr inbounds double, ptr %9, i64 %226
  %240 = load double, ptr %239, align 8, !tbaa !33
  %241 = getelementptr inbounds double, ptr %30, i64 %226
  store double %240, ptr %241, align 8, !tbaa !33
  %242 = add nuw nsw i64 %226, 1
  br label %243

243:                                              ; preds = %231, %225
  %244 = phi i64 [ %226, %225 ], [ %242, %231 ]
  %245 = icmp eq i64 %14, %228
  br i1 %245, label %410, label %332

246:                                              ; preds = %36
  %247 = and i64 %13, 4294967295
  %248 = icmp ult i64 %247, 26
  br i1 %248, label %289, label %249

249:                                              ; preds = %246
  %250 = shl nuw nsw i64 %247, 4
  %251 = getelementptr i8, ptr %31, i64 %250
  %252 = getelementptr i8, ptr %30, i64 %34
  %253 = getelementptr i8, ptr %39, i64 %250
  %254 = getelementptr i8, ptr %9, i64 %34
  %255 = icmp ult ptr %31, %252
  %256 = icmp ult ptr %30, %251
  %257 = and i1 %255, %256
  %258 = icmp ult ptr %31, %253
  %259 = icmp ult ptr %39, %251
  %260 = and i1 %258, %259
  %261 = or i1 %257, %260
  %262 = icmp ult ptr %31, %254
  %263 = icmp ult ptr %9, %251
  %264 = and i1 %262, %263
  %265 = or i1 %261, %264
  %266 = icmp ult ptr %30, %253
  %267 = icmp ult ptr %39, %252
  %268 = and i1 %266, %267
  %269 = or i1 %265, %268
  %270 = icmp ult ptr %30, %254
  %271 = icmp ult ptr %9, %252
  %272 = and i1 %270, %271
  %273 = or i1 %269, %272
  br i1 %273, label %289, label %274

274:                                              ; preds = %249
  %275 = and i64 %13, 1
  %276 = sub nsw i64 %247, %275
  br label %277

277:                                              ; preds = %277, %274
  %278 = phi i64 [ 0, %274 ], [ %285, %277 ]
  %279 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %278
  %280 = load <4 x double>, ptr %279, align 8, !tbaa !33
  %281 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %278
  store <4 x double> %280, ptr %281, align 8, !tbaa !33
  %282 = getelementptr inbounds double, ptr %9, i64 %278
  %283 = load <2 x double>, ptr %282, align 8, !tbaa !33, !alias.scope !504
  %284 = getelementptr inbounds double, ptr %30, i64 %278
  store <2 x double> %283, ptr %284, align 8, !tbaa !33, !alias.scope !507, !noalias !509
  %285 = add nuw i64 %278, 2
  %286 = icmp eq i64 %285, %276
  br i1 %286, label %287, label %277, !llvm.loop !511

287:                                              ; preds = %277
  %288 = icmp eq i64 %275, 0
  br i1 %288, label %410, label %289

289:                                              ; preds = %249, %246, %287
  %290 = phi i64 [ 0, %249 ], [ 0, %246 ], [ %276, %287 ]
  %291 = sub nsw i64 %13, %290
  %292 = add nsw i64 %290, 1
  %293 = and i64 %291, 1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %290
  %297 = load double, ptr %296, align 8, !tbaa !33
  %298 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %290
  store double %297, ptr %298, align 8, !tbaa !33
  %299 = getelementptr inbounds [2 x double], ptr %296, i64 0, i64 1
  %300 = load double, ptr %299, align 8, !tbaa !33
  %301 = getelementptr inbounds [2 x double], ptr %298, i64 0, i64 1
  store double %300, ptr %301, align 8, !tbaa !33
  %302 = getelementptr inbounds double, ptr %9, i64 %290
  %303 = load double, ptr %302, align 8, !tbaa !33
  %304 = getelementptr inbounds double, ptr %30, i64 %290
  store double %303, ptr %304, align 8, !tbaa !33
  %305 = add nuw nsw i64 %290, 1
  br label %306

306:                                              ; preds = %295, %289
  %307 = phi i64 [ %290, %289 ], [ %305, %295 ]
  %308 = icmp eq i64 %14, %292
  br i1 %308, label %410, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %330, %309 ], [ %307, %306 ]
  %311 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %310
  %312 = load double, ptr %311, align 8, !tbaa !33
  %313 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %310
  store double %312, ptr %313, align 8, !tbaa !33
  %314 = getelementptr inbounds [2 x double], ptr %311, i64 0, i64 1
  %315 = load double, ptr %314, align 8, !tbaa !33
  %316 = getelementptr inbounds [2 x double], ptr %313, i64 0, i64 1
  store double %315, ptr %316, align 8, !tbaa !33
  %317 = getelementptr inbounds double, ptr %9, i64 %310
  %318 = load double, ptr %317, align 8, !tbaa !33
  %319 = getelementptr inbounds double, ptr %30, i64 %310
  store double %318, ptr %319, align 8, !tbaa !33
  %320 = add nuw nsw i64 %310, 1
  %321 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %320
  %322 = load double, ptr %321, align 8, !tbaa !33
  %323 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %320
  store double %322, ptr %323, align 8, !tbaa !33
  %324 = getelementptr inbounds [2 x double], ptr %321, i64 0, i64 1
  %325 = load double, ptr %324, align 8, !tbaa !33
  %326 = getelementptr inbounds [2 x double], ptr %323, i64 0, i64 1
  store double %325, ptr %326, align 8, !tbaa !33
  %327 = getelementptr inbounds double, ptr %9, i64 %320
  %328 = load double, ptr %327, align 8, !tbaa !33
  %329 = getelementptr inbounds double, ptr %30, i64 %320
  store double %328, ptr %329, align 8, !tbaa !33
  %330 = add nuw nsw i64 %310, 2
  %331 = icmp eq i64 %330, %247
  br i1 %331, label %410, label %309, !llvm.loop !512

332:                                              ; preds = %243, %332
  %333 = phi i64 [ %355, %332 ], [ %244, %243 ]
  %334 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %333
  %335 = getelementptr inbounds [2 x double], ptr %334, i64 0, i64 1
  %336 = load double, ptr %335, align 8, !tbaa !33
  %337 = fsub double 1.000000e+00, %336
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %333
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = load double, ptr %334, align 8, !tbaa !33
  %340 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !33
  %341 = getelementptr inbounds double, ptr %9, i64 %333
  %342 = load double, ptr %341, align 8, !tbaa !33
  %343 = getelementptr inbounds double, ptr %30, i64 %333
  store double %342, ptr %343, align 8, !tbaa !33
  %344 = add nuw nsw i64 %333, 1
  %345 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %344
  %346 = getelementptr inbounds [2 x double], ptr %345, i64 0, i64 1
  %347 = load double, ptr %346, align 8, !tbaa !33
  %348 = fsub double 1.000000e+00, %347
  %349 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %344
  store double %348, ptr %349, align 8, !tbaa !33
  %350 = load double, ptr %345, align 8, !tbaa !33
  %351 = getelementptr inbounds [2 x double], ptr %349, i64 0, i64 1
  store double %350, ptr %351, align 8, !tbaa !33
  %352 = getelementptr inbounds double, ptr %9, i64 %344
  %353 = load double, ptr %352, align 8, !tbaa !33
  %354 = getelementptr inbounds double, ptr %30, i64 %344
  store double %353, ptr %354, align 8, !tbaa !33
  %355 = add nuw nsw i64 %333, 2
  %356 = icmp eq i64 %355, %179
  br i1 %356, label %410, label %332, !llvm.loop !513

357:                                              ; preds = %175, %357
  %358 = phi i64 [ %382, %357 ], [ %176, %175 ]
  %359 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %358
  %360 = load double, ptr %359, align 8, !tbaa !33
  %361 = fsub double 1.000000e+00, %360
  %362 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %358
  store double %361, ptr %362, align 8, !tbaa !33
  %363 = getelementptr inbounds [2 x double], ptr %359, i64 0, i64 1
  %364 = load double, ptr %363, align 8, !tbaa !33
  %365 = fsub double 1.000000e+00, %364
  %366 = getelementptr inbounds [2 x double], ptr %362, i64 0, i64 1
  store double %365, ptr %366, align 8, !tbaa !33
  %367 = getelementptr inbounds double, ptr %9, i64 %358
  %368 = load double, ptr %367, align 8, !tbaa !33
  %369 = getelementptr inbounds double, ptr %30, i64 %358
  store double %368, ptr %369, align 8, !tbaa !33
  %370 = add nuw nsw i64 %358, 1
  %371 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %370
  %372 = load double, ptr %371, align 8, !tbaa !33
  %373 = fsub double 1.000000e+00, %372
  %374 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %370
  store double %373, ptr %374, align 8, !tbaa !33
  %375 = getelementptr inbounds [2 x double], ptr %371, i64 0, i64 1
  %376 = load double, ptr %375, align 8, !tbaa !33
  %377 = fsub double 1.000000e+00, %376
  %378 = getelementptr inbounds [2 x double], ptr %374, i64 0, i64 1
  store double %377, ptr %378, align 8, !tbaa !33
  %379 = getelementptr inbounds double, ptr %9, i64 %370
  %380 = load double, ptr %379, align 8, !tbaa !33
  %381 = getelementptr inbounds double, ptr %30, i64 %370
  store double %380, ptr %381, align 8, !tbaa !33
  %382 = add nuw nsw i64 %358, 2
  %383 = icmp eq i64 %382, %109
  br i1 %383, label %410, label %357, !llvm.loop !514

384:                                              ; preds = %105, %384
  %385 = phi i64 [ %407, %384 ], [ %106, %105 ]
  %386 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %385
  %387 = getelementptr inbounds [2 x double], ptr %386, i64 0, i64 1
  %388 = load double, ptr %387, align 8, !tbaa !33
  %389 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %385
  store double %388, ptr %389, align 8, !tbaa !33
  %390 = load double, ptr %386, align 8, !tbaa !33
  %391 = fsub double 1.000000e+00, %390
  %392 = getelementptr inbounds [2 x double], ptr %389, i64 0, i64 1
  store double %391, ptr %392, align 8, !tbaa !33
  %393 = getelementptr inbounds double, ptr %9, i64 %385
  %394 = load double, ptr %393, align 8, !tbaa !33
  %395 = getelementptr inbounds double, ptr %30, i64 %385
  store double %394, ptr %395, align 8, !tbaa !33
  %396 = add nuw nsw i64 %385, 1
  %397 = getelementptr inbounds %"class.dealii::Point.14", ptr %39, i64 %396
  %398 = getelementptr inbounds [2 x double], ptr %397, i64 0, i64 1
  %399 = load double, ptr %398, align 8, !tbaa !33
  %400 = getelementptr inbounds %"class.dealii::Point.14", ptr %31, i64 %396
  store double %399, ptr %400, align 8, !tbaa !33
  %401 = load double, ptr %397, align 8, !tbaa !33
  %402 = fsub double 1.000000e+00, %401
  %403 = getelementptr inbounds [2 x double], ptr %400, i64 0, i64 1
  store double %402, ptr %403, align 8, !tbaa !33
  %404 = getelementptr inbounds double, ptr %9, i64 %396
  %405 = load double, ptr %404, align 8, !tbaa !33
  %406 = getelementptr inbounds double, ptr %30, i64 %396
  store double %405, ptr %406, align 8, !tbaa !33
  %407 = add nuw nsw i64 %385, 2
  %408 = icmp eq i64 %407, %41
  br i1 %408, label %410, label %384, !llvm.loop !515

409:                                              ; preds = %36
  unreachable

410:                                              ; preds = %105, %384, %175, %357, %243, %332, %306, %309, %85, %154, %223, %287, %29
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %413 unwind label %417

411:                                              ; preds = %17
  %412 = landingpad { ptr, i32 }
          cleanup
  br label %427

413:                                              ; preds = %410
  %414 = load ptr, ptr %5, align 8, !tbaa !36
  %415 = icmp eq ptr %414, null
  br i1 %415, label %421, label %416

416:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef nonnull %414) #23
  br label %421

417:                                              ; preds = %410
  %418 = landingpad { ptr, i32 }
          cleanup
  %419 = load ptr, ptr %5, align 8, !tbaa !36
  %420 = icmp eq ptr %419, null
  br i1 %420, label %427, label %426

421:                                              ; preds = %416, %413
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %422 = load ptr, ptr %4, align 8, !tbaa !64
  %423 = icmp eq ptr %422, null
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  call void @_ZdlPv(ptr noundef nonnull %422) #23
  br label %425

425:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  ret void

426:                                              ; preds = %417
  call void @_ZdlPv(ptr noundef nonnull %419) #23
  br label %427

427:                                              ; preds = %426, %417, %411
  %428 = phi { ptr, i32 } [ %412, %411 ], [ %418, %417 ], [ %418, %426 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %429 = load ptr, ptr %4, align 8, !tbaa !64
  %430 = icmp eq ptr %429, null
  br i1 %430, label %432, label %431

431:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %429) #23
  br label %432

432:                                              ; preds = %431, %427
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  resume { ptr, i32 } %428
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi0EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi0EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 8, !tbaa !516
  %4 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi0EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr nocapture nonnull readnone align 8 %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi0EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 8, !tbaa !516
  %4 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi0EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !522
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi0EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi0EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !522
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi0EEC2ERKNS0_ILin1EEERKNS0_ILi1EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr nocapture nonnull readnone align 1 %1, ptr nocapture nonnull readnone align 8 %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi0EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 1
  store i32 0, ptr %4, align 8, !tbaa !516
  %5 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %5, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKNS0_ILi0EEERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr nocapture nonnull readnone align 8 %1, ptr nocapture nonnull readnone align 8 %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 0, ptr %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %5, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QuadratureILi1EEC2ERKNS0_ILi0EEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr nocapture nonnull readnone align 8 %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 -1, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNK6dealii10QuadratureILi0EE10get_pointsEv(ptr noundef nonnull readnone align 8 dereferenceable(128) %0) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature.28", ptr %0, i64 0, i32 2
  ret ptr %2
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #10

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi1EE20project_to_all_facesERKNS_10QuadratureILi0EEE(ptr noalias nonnull sret(%"class.dealii::Quadrature") align 8 %0, ptr nocapture noundef nonnull readnone align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi2EE20project_to_all_facesERKNS_10QuadratureILi1EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.9", align 8
  %4 = alloca %"class.std::vector.3", align 8
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  %13 = lshr exact i64 %11, 1
  %14 = and i64 %13, 4294967295
  %15 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 2
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  %18 = shl nuw nsw i64 %14, 4
  %19 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %18) #22
          to label %20 unwind label %45

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  store ptr %19, ptr %3, align 8, !tbaa !64
  store ptr %19, ptr %21, align 8, !tbaa !66
  %22 = getelementptr inbounds %"class.dealii::Point.14", ptr %19, i64 %14
  store ptr %22, ptr %15, align 8, !tbaa !65
  br label %23

23:                                               ; preds = %20, %2
  %24 = phi ptr [ %19, %20 ], [ null, %2 ]
  %25 = phi ptr [ %22, %20 ], [ null, %2 ]
  %26 = and i64 %12, 4294967295
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = shl nuw nsw i64 %26, 4
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #22
          to label %31 unwind label %47

31:                                               ; preds = %28
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %30, i8 0, i64 %29, i1 false), !tbaa !33
  %32 = getelementptr i8, ptr %30, i64 %29
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi ptr [ null, %23 ], [ %30, %31 ]
  %35 = phi ptr [ null, %23 ], [ %32, %31 ]
  %36 = ptrtoint ptr %35 to i64
  %37 = ptrtoint ptr %34 to i64
  %38 = sub i64 %36, %37
  %39 = icmp sgt i64 %38, 0
  %40 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %41 = lshr exact i64 %38, 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !66
  %44 = load ptr, ptr %3, align 8, !tbaa !64
  br label %49

45:                                               ; preds = %17
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %792

47:                                               ; preds = %28
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %792

49:                                               ; preds = %33, %454
  %50 = phi ptr [ %44, %33 ], [ %455, %454 ]
  %51 = phi ptr [ %43, %33 ], [ %456, %454 ]
  %52 = phi ptr [ %24, %33 ], [ %457, %454 ]
  %53 = phi ptr [ %24, %33 ], [ %458, %454 ]
  %54 = phi i32 [ 0, %33 ], [ %460, %454 ]
  %55 = phi ptr [ %25, %33 ], [ %459, %454 ]
  %56 = load ptr, ptr %6, align 8, !tbaa !38
  %57 = load ptr, ptr %5, align 8, !tbaa !36
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = lshr exact i64 %60, 3
  %62 = and i64 %60, 34359738360
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %390, label %64

64:                                               ; preds = %49
  %65 = load ptr, ptr %40, align 8
  switch i32 %54, label %390 [
    i32 0, label %240
    i32 1, label %182
    i32 2, label %124
    i32 3, label %66
  ]

66:                                               ; preds = %64
  %67 = and i64 %61, 4294967295
  %68 = icmp ult i64 %67, 16
  br i1 %68, label %104, label %69

69:                                               ; preds = %66
  %70 = shl nuw nsw i64 %67, 4
  %71 = getelementptr i8, ptr %34, i64 %70
  %72 = getelementptr i8, ptr %65, i64 %62
  %73 = icmp ult ptr %34, %72
  %74 = icmp ult ptr %65, %71
  %75 = and i1 %73, %74
  br i1 %75, label %104, label %76

76:                                               ; preds = %69
  %77 = and i64 %61, 15
  %78 = sub nsw i64 %67, %77
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi i64 [ 0, %76 ], [ %100, %79 ]
  %81 = or i64 %80, 4
  %82 = or i64 %80, 8
  %83 = or i64 %80, 12
  %84 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %80
  %85 = load <4 x double>, ptr %84, align 8, !tbaa !33, !alias.scope !523
  %86 = getelementptr inbounds double, ptr %84, i64 4
  %87 = load <4 x double>, ptr %86, align 8, !tbaa !33, !alias.scope !523
  %88 = getelementptr inbounds double, ptr %84, i64 8
  %89 = load <4 x double>, ptr %88, align 8, !tbaa !33, !alias.scope !523
  %90 = getelementptr inbounds double, ptr %84, i64 12
  %91 = load <4 x double>, ptr %90, align 8, !tbaa !33, !alias.scope !523
  %92 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %80
  %93 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %81
  %94 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %82
  %95 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %83
  %96 = shufflevector <4 x double> %85, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %96, ptr %92, align 8, !tbaa !33
  %97 = shufflevector <4 x double> %87, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %97, ptr %93, align 8, !tbaa !33
  %98 = shufflevector <4 x double> %89, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %98, ptr %94, align 8, !tbaa !33
  %99 = shufflevector <4 x double> %91, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %99, ptr %95, align 8, !tbaa !33
  %100 = add nuw i64 %80, 16
  %101 = icmp eq i64 %100, %78
  br i1 %101, label %102, label %79, !llvm.loop !526

102:                                              ; preds = %79
  %103 = icmp eq i64 %77, 0
  br i1 %103, label %390, label %104

104:                                              ; preds = %69, %66, %102
  %105 = phi i64 [ 0, %69 ], [ 0, %66 ], [ %78, %102 ]
  %106 = sub nsw i64 %61, %105
  %107 = xor i64 %105, -1
  %108 = add nsw i64 %67, %107
  %109 = and i64 %106, 3
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %104, %111
  %112 = phi i64 [ %118, %111 ], [ %105, %104 ]
  %113 = phi i64 [ %119, %111 ], [ 0, %104 ]
  %114 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %112
  %115 = load double, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %112
  store double %115, ptr %116, align 8, !tbaa !33
  %117 = getelementptr inbounds [2 x double], ptr %116, i64 0, i64 1
  store double 1.000000e+00, ptr %117, align 8, !tbaa !33
  %118 = add nuw nsw i64 %112, 1
  %119 = add i64 %113, 1
  %120 = icmp eq i64 %119, %109
  br i1 %120, label %121, label %111, !llvm.loop !527

121:                                              ; preds = %111, %104
  %122 = phi i64 [ %105, %104 ], [ %118, %111 ]
  %123 = icmp ult i64 %108, 3
  br i1 %123, label %390, label %367

124:                                              ; preds = %64
  %125 = and i64 %61, 4294967295
  %126 = icmp ult i64 %125, 16
  br i1 %126, label %162, label %127

127:                                              ; preds = %124
  %128 = shl nuw nsw i64 %125, 4
  %129 = getelementptr i8, ptr %34, i64 %128
  %130 = getelementptr i8, ptr %65, i64 %62
  %131 = icmp ult ptr %34, %130
  %132 = icmp ult ptr %65, %129
  %133 = and i1 %131, %132
  br i1 %133, label %162, label %134

134:                                              ; preds = %127
  %135 = and i64 %61, 15
  %136 = sub nsw i64 %125, %135
  br label %137

137:                                              ; preds = %137, %134
  %138 = phi i64 [ 0, %134 ], [ %158, %137 ]
  %139 = or i64 %138, 4
  %140 = or i64 %138, 8
  %141 = or i64 %138, 12
  %142 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %138
  %143 = load <4 x double>, ptr %142, align 8, !tbaa !33, !alias.scope !528
  %144 = getelementptr inbounds double, ptr %142, i64 4
  %145 = load <4 x double>, ptr %144, align 8, !tbaa !33, !alias.scope !528
  %146 = getelementptr inbounds double, ptr %142, i64 8
  %147 = load <4 x double>, ptr %146, align 8, !tbaa !33, !alias.scope !528
  %148 = getelementptr inbounds double, ptr %142, i64 12
  %149 = load <4 x double>, ptr %148, align 8, !tbaa !33, !alias.scope !528
  %150 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %138
  %151 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %139
  %152 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %140
  %153 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %141
  %154 = shufflevector <4 x double> %143, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %154, ptr %150, align 8, !tbaa !33
  %155 = shufflevector <4 x double> %145, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %155, ptr %151, align 8, !tbaa !33
  %156 = shufflevector <4 x double> %147, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %156, ptr %152, align 8, !tbaa !33
  %157 = shufflevector <4 x double> %149, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %157, ptr %153, align 8, !tbaa !33
  %158 = add nuw i64 %138, 16
  %159 = icmp eq i64 %158, %136
  br i1 %159, label %160, label %137, !llvm.loop !531

160:                                              ; preds = %137
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %390, label %162

162:                                              ; preds = %127, %124, %160
  %163 = phi i64 [ 0, %127 ], [ 0, %124 ], [ %136, %160 ]
  %164 = sub nsw i64 %61, %163
  %165 = xor i64 %163, -1
  %166 = add nsw i64 %125, %165
  %167 = and i64 %164, 3
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %179, label %169

169:                                              ; preds = %162, %169
  %170 = phi i64 [ %176, %169 ], [ %163, %162 ]
  %171 = phi i64 [ %177, %169 ], [ 0, %162 ]
  %172 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %170
  %173 = load double, ptr %172, align 8, !tbaa !33
  %174 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %170
  store double %173, ptr %174, align 8, !tbaa !33
  %175 = getelementptr inbounds [2 x double], ptr %174, i64 0, i64 1
  store double 0.000000e+00, ptr %175, align 8, !tbaa !33
  %176 = add nuw nsw i64 %170, 1
  %177 = add i64 %171, 1
  %178 = icmp eq i64 %177, %167
  br i1 %178, label %179, label %169, !llvm.loop !532

179:                                              ; preds = %169, %162
  %180 = phi i64 [ %163, %162 ], [ %176, %169 ]
  %181 = icmp ult i64 %166, 3
  br i1 %181, label %390, label %344

182:                                              ; preds = %64
  %183 = and i64 %61, 4294967295
  %184 = icmp ult i64 %183, 16
  br i1 %184, label %220, label %185

185:                                              ; preds = %182
  %186 = shl nuw nsw i64 %183, 4
  %187 = getelementptr i8, ptr %34, i64 %186
  %188 = getelementptr i8, ptr %65, i64 %62
  %189 = icmp ult ptr %34, %188
  %190 = icmp ult ptr %65, %187
  %191 = and i1 %189, %190
  br i1 %191, label %220, label %192

192:                                              ; preds = %185
  %193 = and i64 %61, 15
  %194 = sub nsw i64 %183, %193
  br label %195

195:                                              ; preds = %195, %192
  %196 = phi i64 [ 0, %192 ], [ %216, %195 ]
  %197 = or i64 %196, 4
  %198 = or i64 %196, 8
  %199 = or i64 %196, 12
  %200 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %196
  %201 = load <4 x double>, ptr %200, align 8, !tbaa !33, !alias.scope !533
  %202 = getelementptr inbounds double, ptr %200, i64 4
  %203 = load <4 x double>, ptr %202, align 8, !tbaa !33, !alias.scope !533
  %204 = getelementptr inbounds double, ptr %200, i64 8
  %205 = load <4 x double>, ptr %204, align 8, !tbaa !33, !alias.scope !533
  %206 = getelementptr inbounds double, ptr %200, i64 12
  %207 = load <4 x double>, ptr %206, align 8, !tbaa !33, !alias.scope !533
  %208 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %196
  %209 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %197
  %210 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %198
  %211 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %199
  %212 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %201, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %212, ptr %208, align 8, !tbaa !33
  %213 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %203, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %213, ptr %209, align 8, !tbaa !33
  %214 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %205, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %214, ptr %210, align 8, !tbaa !33
  %215 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %207, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %215, ptr %211, align 8, !tbaa !33
  %216 = add nuw i64 %196, 16
  %217 = icmp eq i64 %216, %194
  br i1 %217, label %218, label %195, !llvm.loop !536

218:                                              ; preds = %195
  %219 = icmp eq i64 %193, 0
  br i1 %219, label %390, label %220

220:                                              ; preds = %185, %182, %218
  %221 = phi i64 [ 0, %185 ], [ 0, %182 ], [ %194, %218 ]
  %222 = sub nsw i64 %61, %221
  %223 = xor i64 %221, -1
  %224 = add nsw i64 %183, %223
  %225 = and i64 %222, 3
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %237, label %227

227:                                              ; preds = %220, %227
  %228 = phi i64 [ %234, %227 ], [ %221, %220 ]
  %229 = phi i64 [ %235, %227 ], [ 0, %220 ]
  %230 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %228
  %231 = load double, ptr %230, align 8, !tbaa !33
  %232 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %228
  store double 1.000000e+00, ptr %232, align 8, !tbaa !33
  %233 = getelementptr inbounds [2 x double], ptr %232, i64 0, i64 1
  store double %231, ptr %233, align 8, !tbaa !33
  %234 = add nuw nsw i64 %228, 1
  %235 = add i64 %229, 1
  %236 = icmp eq i64 %235, %225
  br i1 %236, label %237, label %227, !llvm.loop !537

237:                                              ; preds = %227, %220
  %238 = phi i64 [ %221, %220 ], [ %234, %227 ]
  %239 = icmp ult i64 %224, 3
  br i1 %239, label %390, label %321

240:                                              ; preds = %64
  %241 = and i64 %61, 4294967295
  %242 = icmp ult i64 %241, 16
  br i1 %242, label %278, label %243

243:                                              ; preds = %240
  %244 = shl nuw nsw i64 %241, 4
  %245 = getelementptr i8, ptr %34, i64 %244
  %246 = getelementptr i8, ptr %65, i64 %62
  %247 = icmp ult ptr %34, %246
  %248 = icmp ult ptr %65, %245
  %249 = and i1 %247, %248
  br i1 %249, label %278, label %250

250:                                              ; preds = %243
  %251 = and i64 %61, 15
  %252 = sub nsw i64 %241, %251
  br label %253

253:                                              ; preds = %253, %250
  %254 = phi i64 [ 0, %250 ], [ %274, %253 ]
  %255 = or i64 %254, 4
  %256 = or i64 %254, 8
  %257 = or i64 %254, 12
  %258 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %254
  %259 = load <4 x double>, ptr %258, align 8, !tbaa !33, !alias.scope !538
  %260 = getelementptr inbounds double, ptr %258, i64 4
  %261 = load <4 x double>, ptr %260, align 8, !tbaa !33, !alias.scope !538
  %262 = getelementptr inbounds double, ptr %258, i64 8
  %263 = load <4 x double>, ptr %262, align 8, !tbaa !33, !alias.scope !538
  %264 = getelementptr inbounds double, ptr %258, i64 12
  %265 = load <4 x double>, ptr %264, align 8, !tbaa !33, !alias.scope !538
  %266 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %254
  %267 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %255
  %268 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %256
  %269 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %257
  %270 = shufflevector <4 x double> zeroinitializer, <4 x double> %259, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %270, ptr %266, align 8, !tbaa !33
  %271 = shufflevector <4 x double> zeroinitializer, <4 x double> %261, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %271, ptr %267, align 8, !tbaa !33
  %272 = shufflevector <4 x double> zeroinitializer, <4 x double> %263, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %272, ptr %268, align 8, !tbaa !33
  %273 = shufflevector <4 x double> zeroinitializer, <4 x double> %265, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %273, ptr %269, align 8, !tbaa !33
  %274 = add nuw i64 %254, 16
  %275 = icmp eq i64 %274, %252
  br i1 %275, label %276, label %253, !llvm.loop !541

276:                                              ; preds = %253
  %277 = icmp eq i64 %251, 0
  br i1 %277, label %390, label %278

278:                                              ; preds = %243, %240, %276
  %279 = phi i64 [ 0, %243 ], [ 0, %240 ], [ %252, %276 ]
  %280 = sub nsw i64 %61, %279
  %281 = xor i64 %279, -1
  %282 = add nsw i64 %241, %281
  %283 = and i64 %280, 3
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %295, label %285

285:                                              ; preds = %278, %285
  %286 = phi i64 [ %292, %285 ], [ %279, %278 ]
  %287 = phi i64 [ %293, %285 ], [ 0, %278 ]
  %288 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %286
  %289 = load double, ptr %288, align 8, !tbaa !33
  %290 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %286
  store double 0.000000e+00, ptr %290, align 8, !tbaa !33
  %291 = getelementptr inbounds [2 x double], ptr %290, i64 0, i64 1
  store double %289, ptr %291, align 8, !tbaa !33
  %292 = add nuw nsw i64 %286, 1
  %293 = add i64 %287, 1
  %294 = icmp eq i64 %293, %283
  br i1 %294, label %295, label %285, !llvm.loop !542

295:                                              ; preds = %285, %278
  %296 = phi i64 [ %279, %278 ], [ %292, %285 ]
  %297 = icmp ult i64 %282, 3
  br i1 %297, label %390, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %319, %298 ], [ %296, %295 ]
  %300 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %299
  %301 = load double, ptr %300, align 8, !tbaa !33
  %302 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %299
  store double 0.000000e+00, ptr %302, align 8, !tbaa !33
  %303 = getelementptr inbounds [2 x double], ptr %302, i64 0, i64 1
  store double %301, ptr %303, align 8, !tbaa !33
  %304 = add nuw nsw i64 %299, 1
  %305 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %304
  %306 = load double, ptr %305, align 8, !tbaa !33
  %307 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %304
  store double 0.000000e+00, ptr %307, align 8, !tbaa !33
  %308 = getelementptr inbounds [2 x double], ptr %307, i64 0, i64 1
  store double %306, ptr %308, align 8, !tbaa !33
  %309 = add nuw nsw i64 %299, 2
  %310 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %309
  %311 = load double, ptr %310, align 8, !tbaa !33
  %312 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %309
  store double 0.000000e+00, ptr %312, align 8, !tbaa !33
  %313 = getelementptr inbounds [2 x double], ptr %312, i64 0, i64 1
  store double %311, ptr %313, align 8, !tbaa !33
  %314 = add nuw nsw i64 %299, 3
  %315 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %314
  %316 = load double, ptr %315, align 8, !tbaa !33
  %317 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %314
  store double 0.000000e+00, ptr %317, align 8, !tbaa !33
  %318 = getelementptr inbounds [2 x double], ptr %317, i64 0, i64 1
  store double %316, ptr %318, align 8, !tbaa !33
  %319 = add nuw nsw i64 %299, 4
  %320 = icmp eq i64 %319, %241
  br i1 %320, label %390, label %298, !llvm.loop !543

321:                                              ; preds = %237, %321
  %322 = phi i64 [ %342, %321 ], [ %238, %237 ]
  %323 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %322
  %324 = load double, ptr %323, align 8, !tbaa !33
  %325 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %322
  store double 1.000000e+00, ptr %325, align 8, !tbaa !33
  %326 = getelementptr inbounds [2 x double], ptr %325, i64 0, i64 1
  store double %324, ptr %326, align 8, !tbaa !33
  %327 = add nuw nsw i64 %322, 1
  %328 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %327
  %329 = load double, ptr %328, align 8, !tbaa !33
  %330 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %327
  store double 1.000000e+00, ptr %330, align 8, !tbaa !33
  %331 = getelementptr inbounds [2 x double], ptr %330, i64 0, i64 1
  store double %329, ptr %331, align 8, !tbaa !33
  %332 = add nuw nsw i64 %322, 2
  %333 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %332
  %334 = load double, ptr %333, align 8, !tbaa !33
  %335 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %332
  store double 1.000000e+00, ptr %335, align 8, !tbaa !33
  %336 = getelementptr inbounds [2 x double], ptr %335, i64 0, i64 1
  store double %334, ptr %336, align 8, !tbaa !33
  %337 = add nuw nsw i64 %322, 3
  %338 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %337
  %339 = load double, ptr %338, align 8, !tbaa !33
  %340 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %337
  store double 1.000000e+00, ptr %340, align 8, !tbaa !33
  %341 = getelementptr inbounds [2 x double], ptr %340, i64 0, i64 1
  store double %339, ptr %341, align 8, !tbaa !33
  %342 = add nuw nsw i64 %322, 4
  %343 = icmp eq i64 %342, %183
  br i1 %343, label %390, label %321, !llvm.loop !544

344:                                              ; preds = %179, %344
  %345 = phi i64 [ %365, %344 ], [ %180, %179 ]
  %346 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %345
  %347 = load double, ptr %346, align 8, !tbaa !33
  %348 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %345
  store double %347, ptr %348, align 8, !tbaa !33
  %349 = getelementptr inbounds [2 x double], ptr %348, i64 0, i64 1
  store double 0.000000e+00, ptr %349, align 8, !tbaa !33
  %350 = add nuw nsw i64 %345, 1
  %351 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %350
  %352 = load double, ptr %351, align 8, !tbaa !33
  %353 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %350
  store double %352, ptr %353, align 8, !tbaa !33
  %354 = getelementptr inbounds [2 x double], ptr %353, i64 0, i64 1
  store double 0.000000e+00, ptr %354, align 8, !tbaa !33
  %355 = add nuw nsw i64 %345, 2
  %356 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %355
  %357 = load double, ptr %356, align 8, !tbaa !33
  %358 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %355
  store double %357, ptr %358, align 8, !tbaa !33
  %359 = getelementptr inbounds [2 x double], ptr %358, i64 0, i64 1
  store double 0.000000e+00, ptr %359, align 8, !tbaa !33
  %360 = add nuw nsw i64 %345, 3
  %361 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %360
  %362 = load double, ptr %361, align 8, !tbaa !33
  %363 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %360
  store double %362, ptr %363, align 8, !tbaa !33
  %364 = getelementptr inbounds [2 x double], ptr %363, i64 0, i64 1
  store double 0.000000e+00, ptr %364, align 8, !tbaa !33
  %365 = add nuw nsw i64 %345, 4
  %366 = icmp eq i64 %365, %125
  br i1 %366, label %390, label %344, !llvm.loop !545

367:                                              ; preds = %121, %367
  %368 = phi i64 [ %388, %367 ], [ %122, %121 ]
  %369 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %368
  %370 = load double, ptr %369, align 8, !tbaa !33
  %371 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %368
  store double %370, ptr %371, align 8, !tbaa !33
  %372 = getelementptr inbounds [2 x double], ptr %371, i64 0, i64 1
  store double 1.000000e+00, ptr %372, align 8, !tbaa !33
  %373 = add nuw nsw i64 %368, 1
  %374 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %373
  %375 = load double, ptr %374, align 8, !tbaa !33
  %376 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %373
  store double %375, ptr %376, align 8, !tbaa !33
  %377 = getelementptr inbounds [2 x double], ptr %376, i64 0, i64 1
  store double 1.000000e+00, ptr %377, align 8, !tbaa !33
  %378 = add nuw nsw i64 %368, 2
  %379 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %378
  %380 = load double, ptr %379, align 8, !tbaa !33
  %381 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %378
  store double %380, ptr %381, align 8, !tbaa !33
  %382 = getelementptr inbounds [2 x double], ptr %381, i64 0, i64 1
  store double 1.000000e+00, ptr %382, align 8, !tbaa !33
  %383 = add nuw nsw i64 %368, 3
  %384 = getelementptr inbounds %"class.dealii::Point", ptr %65, i64 %383
  %385 = load double, ptr %384, align 8, !tbaa !33
  %386 = getelementptr inbounds %"class.dealii::Point.14", ptr %34, i64 %383
  store double %385, ptr %386, align 8, !tbaa !33
  %387 = getelementptr inbounds [2 x double], ptr %386, i64 0, i64 1
  store double 1.000000e+00, ptr %387, align 8, !tbaa !33
  %388 = add nuw nsw i64 %368, 4
  %389 = icmp eq i64 %388, %67
  br i1 %389, label %390, label %367, !llvm.loop !546

390:                                              ; preds = %121, %367, %179, %344, %237, %321, %295, %298, %102, %160, %218, %276, %49, %64
  br i1 %39, label %391, label %454

391:                                              ; preds = %390, %445
  %392 = phi ptr [ %446, %445 ], [ %50, %390 ]
  %393 = phi ptr [ %450, %445 ], [ %51, %390 ]
  %394 = phi ptr [ %447, %445 ], [ %52, %390 ]
  %395 = phi ptr [ %450, %445 ], [ %53, %390 ]
  %396 = phi ptr [ %449, %445 ], [ %55, %390 ]
  %397 = phi i64 [ %452, %445 ], [ %41, %390 ]
  %398 = phi ptr [ %451, %445 ], [ %34, %390 ]
  %399 = icmp eq ptr %395, %396
  br i1 %399, label %405, label %400

400:                                              ; preds = %391
  %401 = load double, ptr %398, align 8, !tbaa !33
  store double %401, ptr %395, align 8, !tbaa !33
  %402 = getelementptr inbounds [2 x double], ptr %398, i64 0, i64 1
  %403 = load double, ptr %402, align 8, !tbaa !33
  %404 = getelementptr inbounds [2 x double], ptr %395, i64 0, i64 1
  store double %403, ptr %404, align 8, !tbaa !33
  br label %445

405:                                              ; preds = %391
  %406 = ptrtoint ptr %395 to i64
  %407 = ptrtoint ptr %394 to i64
  %408 = sub i64 %406, %407
  %409 = icmp eq i64 %408, 9223372036854775792
  br i1 %409, label %410, label %412

410:                                              ; preds = %405
  store ptr %51, ptr %42, align 8, !tbaa !66
  store ptr %50, ptr %3, align 8, !tbaa !64
  store ptr %393, ptr %42, align 8, !tbaa !66
  store ptr %392, ptr %3, align 8, !tbaa !64
  store ptr %395, ptr %15, align 8, !tbaa !65
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %411 unwind label %464

411:                                              ; preds = %410
  unreachable

412:                                              ; preds = %405
  %413 = ashr exact i64 %408, 4
  %414 = tail call i64 @llvm.umax.i64(i64 %413, i64 1)
  %415 = add i64 %414, %413
  %416 = icmp ult i64 %415, %413
  %417 = icmp ugt i64 %415, 576460752303423487
  %418 = or i1 %416, %417
  %419 = select i1 %418, i64 576460752303423487, i64 %415
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %424, label %421

421:                                              ; preds = %412
  %422 = shl nuw nsw i64 %419, 4
  %423 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %422) #22
          to label %424 unwind label %462

424:                                              ; preds = %421, %412
  %425 = phi ptr [ null, %412 ], [ %423, %421 ]
  %426 = getelementptr inbounds %"class.dealii::Point.14", ptr %425, i64 %413
  %427 = load <2 x double>, ptr %398, align 8, !tbaa !33
  store <2 x double> %427, ptr %426, align 8, !tbaa !33
  %428 = icmp eq ptr %394, %395
  br i1 %428, label %439, label %429

429:                                              ; preds = %424, %429
  %430 = phi ptr [ %437, %429 ], [ %425, %424 ]
  %431 = phi ptr [ %436, %429 ], [ %394, %424 ]
  %432 = load double, ptr %431, align 8, !tbaa !33
  store double %432, ptr %430, align 8, !tbaa !33
  %433 = getelementptr inbounds [2 x double], ptr %431, i64 0, i64 1
  %434 = load double, ptr %433, align 8, !tbaa !33
  %435 = getelementptr inbounds [2 x double], ptr %430, i64 0, i64 1
  store double %434, ptr %435, align 8, !tbaa !33
  %436 = getelementptr inbounds %"class.dealii::Point.14", ptr %431, i64 1
  %437 = getelementptr inbounds %"class.dealii::Point.14", ptr %430, i64 1
  %438 = icmp eq ptr %436, %395
  br i1 %438, label %439, label %429

439:                                              ; preds = %429, %424
  %440 = phi ptr [ %425, %424 ], [ %437, %429 ]
  %441 = icmp eq ptr %394, null
  br i1 %441, label %443, label %442

442:                                              ; preds = %439
  tail call void @_ZdlPv(ptr noundef nonnull %394) #23
  br label %443

443:                                              ; preds = %442, %439
  %444 = getelementptr inbounds %"class.dealii::Point.14", ptr %425, i64 %419
  br label %445

445:                                              ; preds = %443, %400
  %446 = phi ptr [ %425, %443 ], [ %392, %400 ]
  %447 = phi ptr [ %425, %443 ], [ %394, %400 ]
  %448 = phi ptr [ %440, %443 ], [ %395, %400 ]
  %449 = phi ptr [ %444, %443 ], [ %396, %400 ]
  %450 = getelementptr inbounds %"class.dealii::Point.14", ptr %448, i64 1
  %451 = getelementptr inbounds %"class.dealii::Point.14", ptr %398, i64 1
  %452 = add nsw i64 %397, -1
  %453 = icmp sgt i64 %397, 1
  br i1 %453, label %391, label %454

454:                                              ; preds = %445, %390
  %455 = phi ptr [ %50, %390 ], [ %446, %445 ]
  %456 = phi ptr [ %51, %390 ], [ %450, %445 ]
  %457 = phi ptr [ %52, %390 ], [ %447, %445 ]
  %458 = phi ptr [ %53, %390 ], [ %450, %445 ]
  %459 = phi ptr [ %55, %390 ], [ %449, %445 ]
  %460 = add nuw nsw i32 %54, 1
  %461 = icmp eq i32 %460, 4
  br i1 %461, label %466, label %49

462:                                              ; preds = %421
  %463 = landingpad { ptr, i32 }
          cleanup
  store ptr %51, ptr %42, align 8, !tbaa !66
  store ptr %50, ptr %3, align 8, !tbaa !64
  store ptr %393, ptr %42, align 8, !tbaa !66
  store ptr %392, ptr %3, align 8, !tbaa !64
  store ptr %395, ptr %15, align 8, !tbaa !65
  br label %788

464:                                              ; preds = %410
  %465 = landingpad { ptr, i32 }
          cleanup
  br label %788

466:                                              ; preds = %454
  store ptr %456, ptr %42, align 8, !tbaa !66
  store ptr %455, ptr %3, align 8, !tbaa !64
  store ptr %459, ptr %15, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %467 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 2
  br i1 %16, label %474, label %468

468:                                              ; preds = %466
  %469 = shl nuw nsw i64 %14, 3
  %470 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %469) #22
          to label %471 unwind label %484

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %470, ptr %4, align 8, !tbaa !36
  store ptr %470, ptr %472, align 8, !tbaa !38
  %473 = getelementptr inbounds double, ptr %470, i64 %14
  br label %474

474:                                              ; preds = %466, %471
  %475 = phi ptr [ null, %466 ], [ %470, %471 ]
  %476 = phi ptr [ null, %466 ], [ %473, %471 ]
  %477 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %478 = load ptr, ptr %5, align 8, !tbaa !40
  %479 = load ptr, ptr %6, align 8, !tbaa !40
  %480 = ptrtoint ptr %479 to i64
  %481 = ptrtoint ptr %478 to i64
  %482 = sub i64 %480, %481
  %483 = icmp sgt i64 %482, 0
  br i1 %483, label %486, label %755

484:                                              ; preds = %468, %755
  %485 = landingpad { ptr, i32 }
          cleanup
  br label %777

486:                                              ; preds = %474
  %487 = lshr exact i64 %482, 3
  %488 = load ptr, ptr %477, align 8, !tbaa !38
  %489 = load ptr, ptr %4, align 8, !tbaa !36
  br label %490

490:                                              ; preds = %545, %486
  %491 = phi ptr [ %489, %486 ], [ %546, %545 ]
  %492 = phi ptr [ %488, %486 ], [ %548, %545 ]
  %493 = phi ptr [ %475, %486 ], [ %547, %545 ]
  %494 = phi ptr [ %475, %486 ], [ %548, %545 ]
  %495 = phi ptr [ %476, %486 ], [ %549, %545 ]
  %496 = phi i64 [ %487, %486 ], [ %551, %545 ]
  %497 = phi ptr [ %478, %486 ], [ %550, %545 ]
  %498 = icmp eq ptr %494, %495
  br i1 %498, label %502, label %499

499:                                              ; preds = %490
  %500 = load double, ptr %497, align 8, !tbaa !33
  store double %500, ptr %494, align 8, !tbaa !33
  %501 = getelementptr inbounds double, ptr %494, i64 1
  br label %545

502:                                              ; preds = %490
  %503 = ptrtoint ptr %494 to i64
  %504 = ptrtoint ptr %493 to i64
  %505 = sub i64 %503, %504
  %506 = icmp eq i64 %505, 9223372036854775800
  br i1 %506, label %510, label %514

507:                                              ; preds = %710
  store ptr %700, ptr %477, align 8, !tbaa !38
  store ptr %699, ptr %4, align 8, !tbaa !36
  br label %511

508:                                              ; preds = %643
  store ptr %633, ptr %477, align 8, !tbaa !38
  store ptr %632, ptr %4, align 8, !tbaa !36
  br label %511

509:                                              ; preds = %576
  store ptr %566, ptr %477, align 8, !tbaa !38
  store ptr %565, ptr %4, align 8, !tbaa !36
  br label %511

510:                                              ; preds = %502
  store ptr %492, ptr %477, align 8, !tbaa !38
  store ptr %491, ptr %4, align 8, !tbaa !36
  br label %511

511:                                              ; preds = %510, %509, %508, %507
  %512 = phi ptr [ %702, %507 ], [ %635, %508 ], [ %568, %509 ], [ %494, %510 ]
  store ptr %512, ptr %467, align 8, !tbaa !37
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %513 unwind label %768

513:                                              ; preds = %511
  unreachable

514:                                              ; preds = %502
  %515 = ashr exact i64 %505, 3
  %516 = tail call i64 @llvm.umax.i64(i64 %515, i64 1)
  %517 = add i64 %516, %515
  %518 = icmp ult i64 %517, %515
  %519 = icmp ugt i64 %517, 1152921504606846975
  %520 = or i1 %518, %519
  %521 = select i1 %520, i64 1152921504606846975, i64 %517
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %526, label %523

523:                                              ; preds = %514
  %524 = shl nuw nsw i64 %521, 3
  %525 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %524) #22
          to label %526 unwind label %757

526:                                              ; preds = %523, %514
  %527 = phi ptr [ null, %514 ], [ %525, %523 ]
  %528 = getelementptr inbounds double, ptr %527, i64 %515
  %529 = load double, ptr %497, align 8, !tbaa !33
  store double %529, ptr %528, align 8, !tbaa !33
  %530 = icmp sgt i64 %505, 8
  br i1 %530, label %531, label %532, !prof !45

531:                                              ; preds = %526
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %527, ptr align 8 %493, i64 %505, i1 false)
  br label %537

532:                                              ; preds = %526
  %533 = icmp eq i64 %505, 8
  br i1 %533, label %534, label %537

534:                                              ; preds = %532
  %535 = load double, ptr %493, align 8, !tbaa !33
  store double %535, ptr %527, align 8, !tbaa !33
  %536 = getelementptr inbounds double, ptr %528, i64 1
  br label %540

537:                                              ; preds = %532, %531
  %538 = getelementptr inbounds double, ptr %528, i64 1
  %539 = icmp eq ptr %493, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %534, %537
  %541 = phi ptr [ %536, %534 ], [ %538, %537 ]
  tail call void @_ZdlPv(ptr noundef nonnull %493) #23
  br label %542

542:                                              ; preds = %540, %537
  %543 = phi ptr [ %538, %537 ], [ %541, %540 ]
  %544 = getelementptr inbounds double, ptr %527, i64 %521
  br label %545

545:                                              ; preds = %542, %499
  %546 = phi ptr [ %527, %542 ], [ %491, %499 ]
  %547 = phi ptr [ %527, %542 ], [ %493, %499 ]
  %548 = phi ptr [ %543, %542 ], [ %501, %499 ]
  %549 = phi ptr [ %544, %542 ], [ %495, %499 ]
  %550 = getelementptr inbounds double, ptr %497, i64 1
  %551 = add nsw i64 %496, -1
  %552 = icmp sgt i64 %496, 1
  br i1 %552, label %490, label %553

553:                                              ; preds = %545
  store ptr %548, ptr %477, align 8, !tbaa !38
  store ptr %546, ptr %4, align 8, !tbaa !36
  %554 = load ptr, ptr %5, align 8, !tbaa !40
  %555 = load ptr, ptr %6, align 8, !tbaa !40
  %556 = ptrtoint ptr %555 to i64
  %557 = ptrtoint ptr %554 to i64
  %558 = sub i64 %556, %557
  %559 = icmp sgt i64 %558, 0
  br i1 %559, label %560, label %755

560:                                              ; preds = %553
  %561 = lshr exact i64 %558, 3
  %562 = load ptr, ptr %477, align 8, !tbaa !38
  %563 = load ptr, ptr %4, align 8, !tbaa !36
  br label %564

564:                                              ; preds = %612, %560
  %565 = phi ptr [ %563, %560 ], [ %613, %612 ]
  %566 = phi ptr [ %562, %560 ], [ %615, %612 ]
  %567 = phi ptr [ %547, %560 ], [ %614, %612 ]
  %568 = phi ptr [ %548, %560 ], [ %615, %612 ]
  %569 = phi ptr [ %549, %560 ], [ %616, %612 ]
  %570 = phi i64 [ %561, %560 ], [ %618, %612 ]
  %571 = phi ptr [ %554, %560 ], [ %617, %612 ]
  %572 = icmp eq ptr %568, %569
  br i1 %572, label %576, label %573

573:                                              ; preds = %564
  %574 = load double, ptr %571, align 8, !tbaa !33
  store double %574, ptr %568, align 8, !tbaa !33
  %575 = getelementptr inbounds double, ptr %568, i64 1
  br label %612

576:                                              ; preds = %564
  %577 = ptrtoint ptr %568 to i64
  %578 = ptrtoint ptr %567 to i64
  %579 = sub i64 %577, %578
  %580 = icmp eq i64 %579, 9223372036854775800
  br i1 %580, label %509, label %581

581:                                              ; preds = %576
  %582 = ashr exact i64 %579, 3
  %583 = tail call i64 @llvm.umax.i64(i64 %582, i64 1)
  %584 = add i64 %583, %582
  %585 = icmp ult i64 %584, %582
  %586 = icmp ugt i64 %584, 1152921504606846975
  %587 = or i1 %585, %586
  %588 = select i1 %587, i64 1152921504606846975, i64 %584
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %593, label %590

590:                                              ; preds = %581
  %591 = shl nuw nsw i64 %588, 3
  %592 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %591) #22
          to label %593 unwind label %759

593:                                              ; preds = %590, %581
  %594 = phi ptr [ null, %581 ], [ %592, %590 ]
  %595 = getelementptr inbounds double, ptr %594, i64 %582
  %596 = load double, ptr %571, align 8, !tbaa !33
  store double %596, ptr %595, align 8, !tbaa !33
  %597 = icmp sgt i64 %579, 8
  br i1 %597, label %603, label %598, !prof !45

598:                                              ; preds = %593
  %599 = icmp eq i64 %579, 8
  br i1 %599, label %600, label %604

600:                                              ; preds = %598
  %601 = load double, ptr %567, align 8, !tbaa !33
  store double %601, ptr %594, align 8, !tbaa !33
  %602 = getelementptr inbounds double, ptr %595, i64 1
  br label %607

603:                                              ; preds = %593
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %594, ptr align 8 %567, i64 %579, i1 false)
  br label %604

604:                                              ; preds = %603, %598
  %605 = getelementptr inbounds double, ptr %595, i64 1
  %606 = icmp eq ptr %567, null
  br i1 %606, label %609, label %607

607:                                              ; preds = %604, %600
  %608 = phi ptr [ %602, %600 ], [ %605, %604 ]
  tail call void @_ZdlPv(ptr noundef nonnull %567) #23
  br label %609

609:                                              ; preds = %607, %604
  %610 = phi ptr [ %605, %604 ], [ %608, %607 ]
  %611 = getelementptr inbounds double, ptr %594, i64 %588
  br label %612

612:                                              ; preds = %609, %573
  %613 = phi ptr [ %594, %609 ], [ %565, %573 ]
  %614 = phi ptr [ %594, %609 ], [ %567, %573 ]
  %615 = phi ptr [ %610, %609 ], [ %575, %573 ]
  %616 = phi ptr [ %611, %609 ], [ %569, %573 ]
  %617 = getelementptr inbounds double, ptr %571, i64 1
  %618 = add nsw i64 %570, -1
  %619 = icmp sgt i64 %570, 1
  br i1 %619, label %564, label %620

620:                                              ; preds = %612
  store ptr %615, ptr %477, align 8, !tbaa !38
  store ptr %613, ptr %4, align 8, !tbaa !36
  %621 = load ptr, ptr %5, align 8, !tbaa !40
  %622 = load ptr, ptr %6, align 8, !tbaa !40
  %623 = ptrtoint ptr %622 to i64
  %624 = ptrtoint ptr %621 to i64
  %625 = sub i64 %623, %624
  %626 = icmp sgt i64 %625, 0
  br i1 %626, label %627, label %755

627:                                              ; preds = %620
  %628 = lshr exact i64 %625, 3
  %629 = load ptr, ptr %477, align 8, !tbaa !38
  %630 = load ptr, ptr %4, align 8, !tbaa !36
  br label %631

631:                                              ; preds = %679, %627
  %632 = phi ptr [ %630, %627 ], [ %680, %679 ]
  %633 = phi ptr [ %629, %627 ], [ %682, %679 ]
  %634 = phi ptr [ %614, %627 ], [ %681, %679 ]
  %635 = phi ptr [ %615, %627 ], [ %682, %679 ]
  %636 = phi ptr [ %616, %627 ], [ %683, %679 ]
  %637 = phi i64 [ %628, %627 ], [ %685, %679 ]
  %638 = phi ptr [ %621, %627 ], [ %684, %679 ]
  %639 = icmp eq ptr %635, %636
  br i1 %639, label %643, label %640

640:                                              ; preds = %631
  %641 = load double, ptr %638, align 8, !tbaa !33
  store double %641, ptr %635, align 8, !tbaa !33
  %642 = getelementptr inbounds double, ptr %635, i64 1
  br label %679

643:                                              ; preds = %631
  %644 = ptrtoint ptr %635 to i64
  %645 = ptrtoint ptr %634 to i64
  %646 = sub i64 %644, %645
  %647 = icmp eq i64 %646, 9223372036854775800
  br i1 %647, label %508, label %648

648:                                              ; preds = %643
  %649 = ashr exact i64 %646, 3
  %650 = tail call i64 @llvm.umax.i64(i64 %649, i64 1)
  %651 = add i64 %650, %649
  %652 = icmp ult i64 %651, %649
  %653 = icmp ugt i64 %651, 1152921504606846975
  %654 = or i1 %652, %653
  %655 = select i1 %654, i64 1152921504606846975, i64 %651
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %660, label %657

657:                                              ; preds = %648
  %658 = shl nuw nsw i64 %655, 3
  %659 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %658) #22
          to label %660 unwind label %761

660:                                              ; preds = %657, %648
  %661 = phi ptr [ null, %648 ], [ %659, %657 ]
  %662 = getelementptr inbounds double, ptr %661, i64 %649
  %663 = load double, ptr %638, align 8, !tbaa !33
  store double %663, ptr %662, align 8, !tbaa !33
  %664 = icmp sgt i64 %646, 8
  br i1 %664, label %670, label %665, !prof !45

665:                                              ; preds = %660
  %666 = icmp eq i64 %646, 8
  br i1 %666, label %667, label %671

667:                                              ; preds = %665
  %668 = load double, ptr %634, align 8, !tbaa !33
  store double %668, ptr %661, align 8, !tbaa !33
  %669 = getelementptr inbounds double, ptr %662, i64 1
  br label %674

670:                                              ; preds = %660
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %661, ptr align 8 %634, i64 %646, i1 false)
  br label %671

671:                                              ; preds = %670, %665
  %672 = getelementptr inbounds double, ptr %662, i64 1
  %673 = icmp eq ptr %634, null
  br i1 %673, label %676, label %674

674:                                              ; preds = %671, %667
  %675 = phi ptr [ %669, %667 ], [ %672, %671 ]
  tail call void @_ZdlPv(ptr noundef nonnull %634) #23
  br label %676

676:                                              ; preds = %674, %671
  %677 = phi ptr [ %672, %671 ], [ %675, %674 ]
  %678 = getelementptr inbounds double, ptr %661, i64 %655
  br label %679

679:                                              ; preds = %676, %640
  %680 = phi ptr [ %661, %676 ], [ %632, %640 ]
  %681 = phi ptr [ %661, %676 ], [ %634, %640 ]
  %682 = phi ptr [ %677, %676 ], [ %642, %640 ]
  %683 = phi ptr [ %678, %676 ], [ %636, %640 ]
  %684 = getelementptr inbounds double, ptr %638, i64 1
  %685 = add nsw i64 %637, -1
  %686 = icmp sgt i64 %637, 1
  br i1 %686, label %631, label %687

687:                                              ; preds = %679
  store ptr %682, ptr %477, align 8, !tbaa !38
  store ptr %680, ptr %4, align 8, !tbaa !36
  %688 = load ptr, ptr %5, align 8, !tbaa !40
  %689 = load ptr, ptr %6, align 8, !tbaa !40
  %690 = ptrtoint ptr %689 to i64
  %691 = ptrtoint ptr %688 to i64
  %692 = sub i64 %690, %691
  %693 = icmp sgt i64 %692, 0
  br i1 %693, label %694, label %755

694:                                              ; preds = %687
  %695 = lshr exact i64 %692, 3
  %696 = load ptr, ptr %477, align 8, !tbaa !38
  %697 = load ptr, ptr %4, align 8, !tbaa !36
  br label %698

698:                                              ; preds = %746, %694
  %699 = phi ptr [ %697, %694 ], [ %747, %746 ]
  %700 = phi ptr [ %696, %694 ], [ %749, %746 ]
  %701 = phi ptr [ %681, %694 ], [ %748, %746 ]
  %702 = phi ptr [ %682, %694 ], [ %749, %746 ]
  %703 = phi ptr [ %683, %694 ], [ %750, %746 ]
  %704 = phi i64 [ %695, %694 ], [ %752, %746 ]
  %705 = phi ptr [ %688, %694 ], [ %751, %746 ]
  %706 = icmp eq ptr %702, %703
  br i1 %706, label %710, label %707

707:                                              ; preds = %698
  %708 = load double, ptr %705, align 8, !tbaa !33
  store double %708, ptr %702, align 8, !tbaa !33
  %709 = getelementptr inbounds double, ptr %702, i64 1
  br label %746

710:                                              ; preds = %698
  %711 = ptrtoint ptr %702 to i64
  %712 = ptrtoint ptr %701 to i64
  %713 = sub i64 %711, %712
  %714 = icmp eq i64 %713, 9223372036854775800
  br i1 %714, label %507, label %715

715:                                              ; preds = %710
  %716 = ashr exact i64 %713, 3
  %717 = tail call i64 @llvm.umax.i64(i64 %716, i64 1)
  %718 = add i64 %717, %716
  %719 = icmp ult i64 %718, %716
  %720 = icmp ugt i64 %718, 1152921504606846975
  %721 = or i1 %719, %720
  %722 = select i1 %721, i64 1152921504606846975, i64 %718
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %727, label %724

724:                                              ; preds = %715
  %725 = shl nuw nsw i64 %722, 3
  %726 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %725) #22
          to label %727 unwind label %763

727:                                              ; preds = %724, %715
  %728 = phi ptr [ null, %715 ], [ %726, %724 ]
  %729 = getelementptr inbounds double, ptr %728, i64 %716
  %730 = load double, ptr %705, align 8, !tbaa !33
  store double %730, ptr %729, align 8, !tbaa !33
  %731 = icmp sgt i64 %713, 8
  br i1 %731, label %737, label %732, !prof !45

732:                                              ; preds = %727
  %733 = icmp eq i64 %713, 8
  br i1 %733, label %734, label %738

734:                                              ; preds = %732
  %735 = load double, ptr %701, align 8, !tbaa !33
  store double %735, ptr %728, align 8, !tbaa !33
  %736 = getelementptr inbounds double, ptr %729, i64 1
  br label %741

737:                                              ; preds = %727
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %728, ptr align 8 %701, i64 %713, i1 false)
  br label %738

738:                                              ; preds = %737, %732
  %739 = getelementptr inbounds double, ptr %729, i64 1
  %740 = icmp eq ptr %701, null
  br i1 %740, label %743, label %741

741:                                              ; preds = %738, %734
  %742 = phi ptr [ %736, %734 ], [ %739, %738 ]
  tail call void @_ZdlPv(ptr noundef nonnull %701) #23
  br label %743

743:                                              ; preds = %741, %738
  %744 = phi ptr [ %739, %738 ], [ %742, %741 ]
  %745 = getelementptr inbounds double, ptr %728, i64 %722
  br label %746

746:                                              ; preds = %743, %707
  %747 = phi ptr [ %728, %743 ], [ %699, %707 ]
  %748 = phi ptr [ %728, %743 ], [ %701, %707 ]
  %749 = phi ptr [ %744, %743 ], [ %709, %707 ]
  %750 = phi ptr [ %745, %743 ], [ %703, %707 ]
  %751 = getelementptr inbounds double, ptr %705, i64 1
  %752 = add nsw i64 %704, -1
  %753 = icmp sgt i64 %704, 1
  br i1 %753, label %698, label %754

754:                                              ; preds = %746
  store ptr %749, ptr %477, align 8, !tbaa !38
  store ptr %747, ptr %4, align 8, !tbaa !36
  br label %755

755:                                              ; preds = %754, %474, %553, %620, %687
  %756 = phi ptr [ %683, %687 ], [ %616, %620 ], [ %549, %553 ], [ %476, %474 ], [ %750, %754 ]
  store ptr %756, ptr %467, align 8, !tbaa !37
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %770 unwind label %484

757:                                              ; preds = %523
  %758 = landingpad { ptr, i32 }
          cleanup
  store ptr %492, ptr %477, align 8, !tbaa !38
  store ptr %491, ptr %4, align 8, !tbaa !36
  br label %765

759:                                              ; preds = %590
  %760 = landingpad { ptr, i32 }
          cleanup
  store ptr %566, ptr %477, align 8, !tbaa !38
  store ptr %565, ptr %4, align 8, !tbaa !36
  br label %765

761:                                              ; preds = %657
  %762 = landingpad { ptr, i32 }
          cleanup
  store ptr %633, ptr %477, align 8, !tbaa !38
  store ptr %632, ptr %4, align 8, !tbaa !36
  br label %765

763:                                              ; preds = %724
  %764 = landingpad { ptr, i32 }
          cleanup
  store ptr %700, ptr %477, align 8, !tbaa !38
  store ptr %699, ptr %4, align 8, !tbaa !36
  br label %765

765:                                              ; preds = %759, %763, %761, %757
  %766 = phi ptr [ %494, %757 ], [ %568, %759 ], [ %635, %761 ], [ %702, %763 ]
  %767 = phi { ptr, i32 } [ %758, %757 ], [ %760, %759 ], [ %762, %761 ], [ %764, %763 ]
  store ptr %766, ptr %467, align 8, !tbaa !37
  br label %777

768:                                              ; preds = %511
  %769 = landingpad { ptr, i32 }
          cleanup
  br label %777

770:                                              ; preds = %755
  %771 = load ptr, ptr %4, align 8, !tbaa !36
  %772 = icmp eq ptr %771, null
  br i1 %772, label %774, label %773

773:                                              ; preds = %770
  call void @_ZdlPv(ptr noundef nonnull %771) #23
  br label %774

774:                                              ; preds = %773, %770
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %775 = icmp eq ptr %34, null
  br i1 %775, label %783, label %776

776:                                              ; preds = %774
  call void @_ZdlPv(ptr noundef nonnull %34) #23
  br label %783

777:                                              ; preds = %765, %768, %484
  %778 = phi { ptr, i32 } [ %485, %484 ], [ %767, %765 ], [ %769, %768 ]
  %779 = load ptr, ptr %4, align 8, !tbaa !36
  %780 = icmp eq ptr %779, null
  br i1 %780, label %782, label %781

781:                                              ; preds = %777
  call void @_ZdlPv(ptr noundef nonnull %779) #23
  br label %782

782:                                              ; preds = %781, %777
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  br label %788

783:                                              ; preds = %776, %774
  %784 = load ptr, ptr %3, align 8, !tbaa !64
  %785 = icmp eq ptr %784, null
  br i1 %785, label %787, label %786

786:                                              ; preds = %783
  call void @_ZdlPv(ptr noundef nonnull %784) #23
  br label %787

787:                                              ; preds = %783, %786
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  ret void

788:                                              ; preds = %462, %464, %782
  %789 = phi { ptr, i32 } [ %778, %782 ], [ %463, %462 ], [ %465, %464 ]
  %790 = icmp eq ptr %34, null
  br i1 %790, label %792, label %791

791:                                              ; preds = %788
  call void @_ZdlPv(ptr noundef nonnull %34) #23
  br label %792

792:                                              ; preds = %47, %788, %791, %45
  %793 = phi { ptr, i32 } [ %46, %45 ], [ %48, %47 ], [ %789, %788 ], [ %789, %791 ]
  %794 = load ptr, ptr %3, align 8, !tbaa !64
  %795 = icmp eq ptr %794, null
  br i1 %795, label %797, label %796

796:                                              ; preds = %792
  call void @_ZdlPv(ptr noundef nonnull %794) #23
  br label %797

797:                                              ; preds = %796, %792
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  resume { ptr, i32 } %793
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi3EE20project_to_all_facesERKNS_10QuadratureILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::Quadrature.8", align 8
  %4 = alloca [8 x %"class.dealii::Quadrature.8"], align 16
  %5 = alloca %"class.std::vector.17", align 8
  %6 = alloca %"class.std::vector.3", align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #25
  call void @_ZN6dealii10QProjectorILi3EE7reflectERKNS_10QuadratureILi2EEE(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %3, ptr noundef nonnull align 8 dereferenceable(128) %1)
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %4) #25
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %1)
          to label %9 unwind label %7

7:                                                ; preds = %2
  %8 = landingpad { ptr, i32 }
          cleanup
  br label %685

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %10, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 1)
          to label %11 unwind label %74

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %12, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 2)
          to label %13 unwind label %74

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %14, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 3)
          to label %15 unwind label %74

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %16, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %17 unwind label %74

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %18, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 3)
          to label %19 unwind label %74

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %20, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 2)
          to label %21 unwind label %74

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %22, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 1)
          to label %23 unwind label %74

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %25 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !38
  %27 = load ptr, ptr %24, align 8, !tbaa !36
  %28 = ptrtoint ptr %26 to i64
  %29 = ptrtoint ptr %27 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %32 = mul i64 %31, 48
  %33 = and i64 %32, 4294967280
  %34 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %23
  %37 = mul nuw nsw i64 %33, 24
  %38 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %37) #22
          to label %39 unwind label %82

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %38, ptr %5, align 8, !tbaa !109
  store ptr %38, ptr %40, align 8, !tbaa !111
  %41 = getelementptr inbounds %"class.dealii::Point.22", ptr %38, i64 %33
  store ptr %41, ptr %34, align 8, !tbaa !110
  br label %42

42:                                               ; preds = %39, %23
  %43 = and i64 %31, 4294967295
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = mul nuw nsw i64 %43, 24
  %47 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %46) #22
          to label %48 unwind label %84

48:                                               ; preds = %45
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %47, i8 0, i64 %46, i1 false), !tbaa !33
  %49 = getelementptr i8, ptr %47, i64 %46
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi ptr [ null, %42 ], [ %47, %48 ]
  %52 = phi ptr [ null, %42 ], [ %49, %48 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 2
  br i1 %35, label %60, label %54

54:                                               ; preds = %50
  %55 = shl nuw nsw i64 %33, 3
  %56 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %55) #22
          to label %57 unwind label %86

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %56, ptr %6, align 8, !tbaa !36
  store ptr %56, ptr %58, align 8, !tbaa !38
  %59 = getelementptr inbounds double, ptr %56, i64 %33
  store ptr %59, ptr %53, align 8, !tbaa !37
  br label %60

60:                                               ; preds = %50, %57
  %61 = ptrtoint ptr %52 to i64
  %62 = ptrtoint ptr %51 to i64
  %63 = sub i64 %61, %62
  %64 = icmp sgt i64 %63, 0
  %65 = udiv exact i64 %63, 24
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  br label %68

68:                                               ; preds = %60, %374
  %69 = phi i64 [ 0, %60 ], [ %375, %374 ]
  %70 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %69, i32 3
  %71 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %69, i32 3, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %69, i32 2
  br label %90

73:                                               ; preds = %374
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %450 unwind label %86

74:                                               ; preds = %21, %19, %17, %15, %13, %11, %9
  %75 = phi ptr [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ]
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %77

77:                                               ; preds = %74, %80
  %78 = phi ptr [ %75, %74 ], [ %79, %80 ]
  %79 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %78, i64 -1
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %79)
          to label %80 unwind label %692

80:                                               ; preds = %77
  %81 = icmp eq ptr %79, %4
  br i1 %81, label %685, label %77

82:                                               ; preds = %36
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %474

84:                                               ; preds = %45
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %474

86:                                               ; preds = %54, %73
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %457

88:                                               ; preds = %367
  %89 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %70, i64 0, i32 1
  br label %377

90:                                               ; preds = %68, %367
  %91 = phi i32 [ 0, %68 ], [ %368, %367 ]
  %92 = load ptr, ptr %71, align 16, !tbaa !38
  %93 = load ptr, ptr %70, align 8, !tbaa !36
  %94 = ptrtoint ptr %92 to i64
  %95 = ptrtoint ptr %93 to i64
  %96 = sub i64 %94, %95
  %97 = lshr exact i64 %96, 3
  %98 = and i64 %96, 34359738360
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %294, label %100

100:                                              ; preds = %90
  %101 = load ptr, ptr %72, align 16
  switch i32 %91, label %294 [
    i32 0, label %132
    i32 1, label %126
    i32 2, label %120
    i32 3, label %114
    i32 4, label %108
    i32 5, label %102
  ]

102:                                              ; preds = %100
  %103 = and i64 %97, 4294967295
  %104 = and i64 %97, 1
  %105 = icmp eq i64 %103, 1
  br i1 %105, label %286, label %106

106:                                              ; preds = %102
  %107 = sub nsw i64 %103, %104
  br label %225

108:                                              ; preds = %100
  %109 = and i64 %97, 4294967295
  %110 = and i64 %97, 1
  %111 = icmp eq i64 %109, 1
  br i1 %111, label %278, label %112

112:                                              ; preds = %108
  %113 = sub nsw i64 %109, %110
  br label %210

114:                                              ; preds = %100
  %115 = and i64 %97, 4294967295
  %116 = and i64 %97, 1
  %117 = icmp eq i64 %115, 1
  br i1 %117, label %267, label %118

118:                                              ; preds = %114
  %119 = sub nsw i64 %115, %116
  br label %189

120:                                              ; preds = %100
  %121 = and i64 %97, 4294967295
  %122 = and i64 %97, 1
  %123 = icmp eq i64 %121, 1
  br i1 %123, label %256, label %124

124:                                              ; preds = %120
  %125 = sub nsw i64 %121, %122
  br label %168

126:                                              ; preds = %100
  %127 = and i64 %97, 4294967295
  %128 = and i64 %97, 1
  %129 = icmp eq i64 %127, 1
  br i1 %129, label %248, label %130

130:                                              ; preds = %126
  %131 = sub nsw i64 %127, %128
  br label %153

132:                                              ; preds = %100
  %133 = and i64 %97, 4294967295
  %134 = and i64 %97, 1
  %135 = icmp eq i64 %133, 1
  br i1 %135, label %240, label %136

136:                                              ; preds = %132
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %150, %138 ]
  %140 = phi i64 [ 0, %136 ], [ %151, %138 ]
  %141 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %139
  %142 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %139
  %143 = getelementptr inbounds [3 x double], ptr %142, i64 0, i64 1
  %144 = load <2 x double>, ptr %141, align 8, !tbaa !33
  store double 0.000000e+00, ptr %142, align 8, !tbaa !33
  store <2 x double> %144, ptr %143, align 8, !tbaa !33
  %145 = or i64 %139, 1
  %146 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %145
  %147 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %145
  %148 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 1
  %149 = load <2 x double>, ptr %146, align 8, !tbaa !33
  store double 0.000000e+00, ptr %147, align 8, !tbaa !33
  store <2 x double> %149, ptr %148, align 8, !tbaa !33
  %150 = add nuw nsw i64 %139, 2
  %151 = add i64 %140, 2
  %152 = icmp eq i64 %151, %137
  br i1 %152, label %240, label %138

153:                                              ; preds = %153, %130
  %154 = phi i64 [ 0, %130 ], [ %165, %153 ]
  %155 = phi i64 [ 0, %130 ], [ %166, %153 ]
  %156 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %154
  %157 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %154
  %158 = getelementptr inbounds [3 x double], ptr %157, i64 0, i64 1
  %159 = load <2 x double>, ptr %156, align 8, !tbaa !33
  store double 1.000000e+00, ptr %157, align 8, !tbaa !33
  store <2 x double> %159, ptr %158, align 8, !tbaa !33
  %160 = or i64 %154, 1
  %161 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %160
  %162 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %160
  %163 = getelementptr inbounds [3 x double], ptr %162, i64 0, i64 1
  %164 = load <2 x double>, ptr %161, align 8, !tbaa !33
  store double 1.000000e+00, ptr %162, align 8, !tbaa !33
  store <2 x double> %164, ptr %163, align 8, !tbaa !33
  %165 = add nuw nsw i64 %154, 2
  %166 = add i64 %155, 2
  %167 = icmp eq i64 %166, %131
  br i1 %167, label %248, label %153

168:                                              ; preds = %168, %124
  %169 = phi i64 [ 0, %124 ], [ %186, %168 ]
  %170 = phi i64 [ 0, %124 ], [ %187, %168 ]
  %171 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %169
  %172 = getelementptr inbounds [2 x double], ptr %171, i64 0, i64 1
  %173 = load double, ptr %172, align 8, !tbaa !33
  %174 = load double, ptr %171, align 8, !tbaa !33
  %175 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %169
  store double %173, ptr %175, align 8, !tbaa !33
  %176 = getelementptr inbounds [3 x double], ptr %175, i64 0, i64 1
  store double 0.000000e+00, ptr %176, align 8, !tbaa !33
  %177 = getelementptr inbounds [3 x double], ptr %175, i64 0, i64 2
  store double %174, ptr %177, align 8, !tbaa !33
  %178 = or i64 %169, 1
  %179 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %178
  %180 = getelementptr inbounds [2 x double], ptr %179, i64 0, i64 1
  %181 = load double, ptr %180, align 8, !tbaa !33
  %182 = load double, ptr %179, align 8, !tbaa !33
  %183 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %178
  store double %181, ptr %183, align 8, !tbaa !33
  %184 = getelementptr inbounds [3 x double], ptr %183, i64 0, i64 1
  store double 0.000000e+00, ptr %184, align 8, !tbaa !33
  %185 = getelementptr inbounds [3 x double], ptr %183, i64 0, i64 2
  store double %182, ptr %185, align 8, !tbaa !33
  %186 = add nuw nsw i64 %169, 2
  %187 = add i64 %170, 2
  %188 = icmp eq i64 %187, %125
  br i1 %188, label %256, label %168

189:                                              ; preds = %189, %118
  %190 = phi i64 [ 0, %118 ], [ %207, %189 ]
  %191 = phi i64 [ 0, %118 ], [ %208, %189 ]
  %192 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %190
  %193 = getelementptr inbounds [2 x double], ptr %192, i64 0, i64 1
  %194 = load double, ptr %193, align 8, !tbaa !33
  %195 = load double, ptr %192, align 8, !tbaa !33
  %196 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %190
  store double %194, ptr %196, align 8, !tbaa !33
  %197 = getelementptr inbounds [3 x double], ptr %196, i64 0, i64 1
  store double 1.000000e+00, ptr %197, align 8, !tbaa !33
  %198 = getelementptr inbounds [3 x double], ptr %196, i64 0, i64 2
  store double %195, ptr %198, align 8, !tbaa !33
  %199 = or i64 %190, 1
  %200 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %199
  %201 = getelementptr inbounds [2 x double], ptr %200, i64 0, i64 1
  %202 = load double, ptr %201, align 8, !tbaa !33
  %203 = load double, ptr %200, align 8, !tbaa !33
  %204 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %199
  store double %202, ptr %204, align 8, !tbaa !33
  %205 = getelementptr inbounds [3 x double], ptr %204, i64 0, i64 1
  store double 1.000000e+00, ptr %205, align 8, !tbaa !33
  %206 = getelementptr inbounds [3 x double], ptr %204, i64 0, i64 2
  store double %203, ptr %206, align 8, !tbaa !33
  %207 = add nuw nsw i64 %190, 2
  %208 = add i64 %191, 2
  %209 = icmp eq i64 %208, %119
  br i1 %209, label %267, label %189

210:                                              ; preds = %210, %112
  %211 = phi i64 [ 0, %112 ], [ %222, %210 ]
  %212 = phi i64 [ 0, %112 ], [ %223, %210 ]
  %213 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %211
  %214 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %211
  %215 = load <2 x double>, ptr %213, align 8, !tbaa !33
  store <2 x double> %215, ptr %214, align 8, !tbaa !33
  %216 = getelementptr inbounds [3 x double], ptr %214, i64 0, i64 2
  store double 0.000000e+00, ptr %216, align 8, !tbaa !33
  %217 = or i64 %211, 1
  %218 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %217
  %219 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %217
  %220 = load <2 x double>, ptr %218, align 8, !tbaa !33
  store <2 x double> %220, ptr %219, align 8, !tbaa !33
  %221 = getelementptr inbounds [3 x double], ptr %219, i64 0, i64 2
  store double 0.000000e+00, ptr %221, align 8, !tbaa !33
  %222 = add nuw nsw i64 %211, 2
  %223 = add i64 %212, 2
  %224 = icmp eq i64 %223, %113
  br i1 %224, label %278, label %210

225:                                              ; preds = %225, %106
  %226 = phi i64 [ 0, %106 ], [ %237, %225 ]
  %227 = phi i64 [ 0, %106 ], [ %238, %225 ]
  %228 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %226
  %229 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %226
  %230 = load <2 x double>, ptr %228, align 8, !tbaa !33
  store <2 x double> %230, ptr %229, align 8, !tbaa !33
  %231 = getelementptr inbounds [3 x double], ptr %229, i64 0, i64 2
  store double 1.000000e+00, ptr %231, align 8, !tbaa !33
  %232 = or i64 %226, 1
  %233 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %232
  %234 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %232
  %235 = load <2 x double>, ptr %233, align 8, !tbaa !33
  store <2 x double> %235, ptr %234, align 8, !tbaa !33
  %236 = getelementptr inbounds [3 x double], ptr %234, i64 0, i64 2
  store double 1.000000e+00, ptr %236, align 8, !tbaa !33
  %237 = add nuw nsw i64 %226, 2
  %238 = add i64 %227, 2
  %239 = icmp eq i64 %238, %107
  br i1 %239, label %286, label %225

240:                                              ; preds = %138, %132
  %241 = phi i64 [ 0, %132 ], [ %150, %138 ]
  %242 = icmp eq i64 %134, 0
  br i1 %242, label %294, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %241
  %245 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %241
  %246 = getelementptr inbounds [3 x double], ptr %245, i64 0, i64 1
  %247 = load <2 x double>, ptr %244, align 8, !tbaa !33
  store double 0.000000e+00, ptr %245, align 8, !tbaa !33
  store <2 x double> %247, ptr %246, align 8, !tbaa !33
  br label %294

248:                                              ; preds = %153, %126
  %249 = phi i64 [ 0, %126 ], [ %165, %153 ]
  %250 = icmp eq i64 %128, 0
  br i1 %250, label %294, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %249
  %253 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %249
  %254 = getelementptr inbounds [3 x double], ptr %253, i64 0, i64 1
  %255 = load <2 x double>, ptr %252, align 8, !tbaa !33
  store double 1.000000e+00, ptr %253, align 8, !tbaa !33
  store <2 x double> %255, ptr %254, align 8, !tbaa !33
  br label %294

256:                                              ; preds = %168, %120
  %257 = phi i64 [ 0, %120 ], [ %186, %168 ]
  %258 = icmp eq i64 %122, 0
  br i1 %258, label %294, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %257
  %261 = getelementptr inbounds [2 x double], ptr %260, i64 0, i64 1
  %262 = load double, ptr %261, align 8, !tbaa !33
  %263 = load double, ptr %260, align 8, !tbaa !33
  %264 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %257
  store double %262, ptr %264, align 8, !tbaa !33
  %265 = getelementptr inbounds [3 x double], ptr %264, i64 0, i64 1
  store double 0.000000e+00, ptr %265, align 8, !tbaa !33
  %266 = getelementptr inbounds [3 x double], ptr %264, i64 0, i64 2
  store double %263, ptr %266, align 8, !tbaa !33
  br label %294

267:                                              ; preds = %189, %114
  %268 = phi i64 [ 0, %114 ], [ %207, %189 ]
  %269 = icmp eq i64 %116, 0
  br i1 %269, label %294, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %268
  %272 = getelementptr inbounds [2 x double], ptr %271, i64 0, i64 1
  %273 = load double, ptr %272, align 8, !tbaa !33
  %274 = load double, ptr %271, align 8, !tbaa !33
  %275 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %268
  store double %273, ptr %275, align 8, !tbaa !33
  %276 = getelementptr inbounds [3 x double], ptr %275, i64 0, i64 1
  store double 1.000000e+00, ptr %276, align 8, !tbaa !33
  %277 = getelementptr inbounds [3 x double], ptr %275, i64 0, i64 2
  store double %274, ptr %277, align 8, !tbaa !33
  br label %294

278:                                              ; preds = %210, %108
  %279 = phi i64 [ 0, %108 ], [ %222, %210 ]
  %280 = icmp eq i64 %110, 0
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %279
  %283 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %279
  %284 = load <2 x double>, ptr %282, align 8, !tbaa !33
  store <2 x double> %284, ptr %283, align 8, !tbaa !33
  %285 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 2
  store double 0.000000e+00, ptr %285, align 8, !tbaa !33
  br label %294

286:                                              ; preds = %225, %102
  %287 = phi i64 [ 0, %102 ], [ %237, %225 ]
  %288 = icmp eq i64 %104, 0
  br i1 %288, label %294, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"class.dealii::Point.14", ptr %101, i64 %287
  %291 = getelementptr inbounds %"class.dealii::Point.22", ptr %51, i64 %287
  %292 = load <2 x double>, ptr %290, align 8, !tbaa !33
  store <2 x double> %292, ptr %291, align 8, !tbaa !33
  %293 = getelementptr inbounds [3 x double], ptr %291, i64 0, i64 2
  store double 1.000000e+00, ptr %293, align 8, !tbaa !33
  br label %294

294:                                              ; preds = %289, %286, %281, %278, %270, %267, %259, %256, %251, %248, %243, %240, %90, %100
  br i1 %64, label %295, label %367

295:                                              ; preds = %294
  %296 = load ptr, ptr %66, align 8, !tbaa !40
  %297 = load ptr, ptr %34, align 8, !tbaa !110
  br label %298

298:                                              ; preds = %295, %361
  %299 = phi ptr [ %362, %361 ], [ %297, %295 ]
  %300 = phi ptr [ %363, %361 ], [ %296, %295 ]
  %301 = phi i64 [ %365, %361 ], [ %65, %295 ]
  %302 = phi ptr [ %364, %361 ], [ %51, %295 ]
  %303 = icmp eq ptr %300, %299
  br i1 %303, label %313, label %304

304:                                              ; preds = %298
  %305 = load double, ptr %302, align 8, !tbaa !33
  store double %305, ptr %300, align 8, !tbaa !33
  %306 = getelementptr inbounds [3 x double], ptr %302, i64 0, i64 1
  %307 = load double, ptr %306, align 8, !tbaa !33
  %308 = getelementptr inbounds [3 x double], ptr %300, i64 0, i64 1
  store double %307, ptr %308, align 8, !tbaa !33
  %309 = getelementptr inbounds [3 x double], ptr %302, i64 0, i64 2
  %310 = load double, ptr %309, align 8, !tbaa !33
  %311 = getelementptr inbounds [3 x double], ptr %300, i64 0, i64 2
  store double %310, ptr %311, align 8, !tbaa !33
  %312 = getelementptr inbounds %"class.dealii::Point.22", ptr %300, i64 1
  store ptr %312, ptr %66, align 8, !tbaa !111
  br label %361

313:                                              ; preds = %298
  %314 = load ptr, ptr %5, align 8, !tbaa !40
  %315 = ptrtoint ptr %299 to i64
  %316 = ptrtoint ptr %314 to i64
  %317 = sub i64 %315, %316
  %318 = icmp eq i64 %317, 9223372036854775800
  br i1 %318, label %319, label %321

319:                                              ; preds = %313
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %320 unwind label %372

320:                                              ; preds = %319
  unreachable

321:                                              ; preds = %313
  %322 = sdiv exact i64 %317, 24
  %323 = call i64 @llvm.umax.i64(i64 %322, i64 1)
  %324 = add i64 %323, %322
  %325 = icmp ult i64 %324, %322
  %326 = icmp ugt i64 %324, 384307168202282325
  %327 = or i1 %325, %326
  %328 = select i1 %327, i64 384307168202282325, i64 %324
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %321
  %331 = mul nuw nsw i64 %328, 24
  %332 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %331) #22
          to label %333 unwind label %370

333:                                              ; preds = %330, %321
  %334 = phi ptr [ null, %321 ], [ %332, %330 ]
  %335 = getelementptr inbounds %"class.dealii::Point.22", ptr %334, i64 %322
  %336 = load <2 x double>, ptr %302, align 8, !tbaa !33
  store <2 x double> %336, ptr %335, align 8, !tbaa !33
  %337 = getelementptr inbounds [3 x double], ptr %302, i64 0, i64 2
  %338 = load double, ptr %337, align 8, !tbaa !33
  %339 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 2
  store double %338, ptr %339, align 8, !tbaa !33
  %340 = icmp eq ptr %314, %299
  br i1 %340, label %354, label %341

341:                                              ; preds = %333, %341
  %342 = phi ptr [ %352, %341 ], [ %334, %333 ]
  %343 = phi ptr [ %351, %341 ], [ %314, %333 ]
  %344 = load double, ptr %343, align 8, !tbaa !33
  store double %344, ptr %342, align 8, !tbaa !33
  %345 = getelementptr inbounds [3 x double], ptr %343, i64 0, i64 1
  %346 = load double, ptr %345, align 8, !tbaa !33
  %347 = getelementptr inbounds [3 x double], ptr %342, i64 0, i64 1
  store double %346, ptr %347, align 8, !tbaa !33
  %348 = getelementptr inbounds [3 x double], ptr %343, i64 0, i64 2
  %349 = load double, ptr %348, align 8, !tbaa !33
  %350 = getelementptr inbounds [3 x double], ptr %342, i64 0, i64 2
  store double %349, ptr %350, align 8, !tbaa !33
  %351 = getelementptr inbounds %"class.dealii::Point.22", ptr %343, i64 1
  %352 = getelementptr inbounds %"class.dealii::Point.22", ptr %342, i64 1
  %353 = icmp eq ptr %351, %299
  br i1 %353, label %354, label %341

354:                                              ; preds = %341, %333
  %355 = phi ptr [ %334, %333 ], [ %352, %341 ]
  %356 = getelementptr inbounds %"class.dealii::Point.22", ptr %355, i64 1
  %357 = icmp eq ptr %314, null
  br i1 %357, label %359, label %358

358:                                              ; preds = %354
  call void @_ZdlPv(ptr noundef nonnull %314) #23
  br label %359

359:                                              ; preds = %358, %354
  store ptr %334, ptr %5, align 8, !tbaa !109
  store ptr %356, ptr %66, align 8, !tbaa !111
  %360 = getelementptr inbounds %"class.dealii::Point.22", ptr %334, i64 %328
  store ptr %360, ptr %34, align 8, !tbaa !110
  br label %361

361:                                              ; preds = %359, %304
  %362 = phi ptr [ %360, %359 ], [ %299, %304 ]
  %363 = phi ptr [ %356, %359 ], [ %312, %304 ]
  %364 = getelementptr inbounds %"class.dealii::Point.22", ptr %302, i64 1
  %365 = add nsw i64 %301, -1
  %366 = icmp sgt i64 %301, 1
  br i1 %366, label %298, label %367

367:                                              ; preds = %361, %294
  %368 = add nuw nsw i32 %91, 1
  %369 = icmp eq i32 %368, 6
  br i1 %369, label %88, label %90

370:                                              ; preds = %330
  %371 = landingpad { ptr, i32 }
          cleanup
  br label %457

372:                                              ; preds = %319
  %373 = landingpad { ptr, i32 }
          cleanup
  br label %457

374:                                              ; preds = %443
  %375 = add nuw nsw i64 %69, 1
  %376 = icmp eq i64 %375, 8
  br i1 %376, label %73, label %68

377:                                              ; preds = %88, %443
  %378 = phi i32 [ 0, %88 ], [ %444, %443 ]
  %379 = load ptr, ptr %70, align 8, !tbaa !40
  %380 = load ptr, ptr %89, align 16, !tbaa !40
  %381 = ptrtoint ptr %380 to i64
  %382 = ptrtoint ptr %379 to i64
  %383 = sub i64 %381, %382
  %384 = icmp sgt i64 %383, 0
  br i1 %384, label %385, label %443

385:                                              ; preds = %377
  %386 = lshr exact i64 %383, 3
  %387 = load ptr, ptr %67, align 8, !tbaa !40
  %388 = load ptr, ptr %53, align 8, !tbaa !37
  br label %389

389:                                              ; preds = %437, %385
  %390 = phi ptr [ %388, %385 ], [ %438, %437 ]
  %391 = phi ptr [ %387, %385 ], [ %439, %437 ]
  %392 = phi i64 [ %386, %385 ], [ %441, %437 ]
  %393 = phi ptr [ %379, %385 ], [ %440, %437 ]
  %394 = icmp eq ptr %391, %390
  br i1 %394, label %398, label %395

395:                                              ; preds = %389
  %396 = load double, ptr %393, align 8, !tbaa !33
  store double %396, ptr %391, align 8, !tbaa !33
  %397 = getelementptr inbounds double, ptr %391, i64 1
  store ptr %397, ptr %67, align 8, !tbaa !38
  br label %437

398:                                              ; preds = %389
  %399 = load ptr, ptr %6, align 8, !tbaa !40
  %400 = ptrtoint ptr %390 to i64
  %401 = ptrtoint ptr %399 to i64
  %402 = sub i64 %400, %401
  %403 = icmp eq i64 %402, 9223372036854775800
  br i1 %403, label %404, label %406

404:                                              ; preds = %398
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %405 unwind label %448

405:                                              ; preds = %404
  unreachable

406:                                              ; preds = %398
  %407 = ashr exact i64 %402, 3
  %408 = call i64 @llvm.umax.i64(i64 %407, i64 1)
  %409 = add i64 %408, %407
  %410 = icmp ult i64 %409, %407
  %411 = icmp ugt i64 %409, 1152921504606846975
  %412 = or i1 %410, %411
  %413 = select i1 %412, i64 1152921504606846975, i64 %409
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %418, label %415

415:                                              ; preds = %406
  %416 = shl nuw nsw i64 %413, 3
  %417 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %416) #22
          to label %418 unwind label %446

418:                                              ; preds = %415, %406
  %419 = phi ptr [ null, %406 ], [ %417, %415 ]
  %420 = getelementptr inbounds double, ptr %419, i64 %407
  %421 = load double, ptr %393, align 8, !tbaa !33
  store double %421, ptr %420, align 8, !tbaa !33
  %422 = icmp sgt i64 %402, 8
  br i1 %422, label %423, label %424, !prof !45

423:                                              ; preds = %418
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %419, ptr align 8 %399, i64 %402, i1 false)
  br label %429

424:                                              ; preds = %418
  %425 = icmp eq i64 %402, 8
  br i1 %425, label %426, label %429

426:                                              ; preds = %424
  %427 = load double, ptr %399, align 8, !tbaa !33
  store double %427, ptr %419, align 8, !tbaa !33
  %428 = getelementptr inbounds double, ptr %420, i64 1
  br label %432

429:                                              ; preds = %424, %423
  %430 = getelementptr inbounds double, ptr %420, i64 1
  %431 = icmp eq ptr %399, null
  br i1 %431, label %434, label %432

432:                                              ; preds = %426, %429
  %433 = phi ptr [ %428, %426 ], [ %430, %429 ]
  call void @_ZdlPv(ptr noundef nonnull %399) #23
  br label %434

434:                                              ; preds = %432, %429
  %435 = phi ptr [ %430, %429 ], [ %433, %432 ]
  store ptr %419, ptr %6, align 8, !tbaa !36
  store ptr %435, ptr %67, align 8, !tbaa !38
  %436 = getelementptr inbounds double, ptr %419, i64 %413
  store ptr %436, ptr %53, align 8, !tbaa !37
  br label %437

437:                                              ; preds = %434, %395
  %438 = phi ptr [ %436, %434 ], [ %390, %395 ]
  %439 = phi ptr [ %435, %434 ], [ %397, %395 ]
  %440 = getelementptr inbounds double, ptr %393, i64 1
  %441 = add nsw i64 %392, -1
  %442 = icmp sgt i64 %392, 1
  br i1 %442, label %389, label %443

443:                                              ; preds = %437, %377
  %444 = add nuw nsw i32 %378, 1
  %445 = icmp eq i32 %444, 6
  br i1 %445, label %374, label %377

446:                                              ; preds = %415
  %447 = landingpad { ptr, i32 }
          cleanup
  br label %457

448:                                              ; preds = %404
  %449 = landingpad { ptr, i32 }
          cleanup
  br label %457

450:                                              ; preds = %73
  %451 = load ptr, ptr %6, align 8, !tbaa !36
  %452 = icmp eq ptr %451, null
  br i1 %452, label %454, label %453

453:                                              ; preds = %450
  call void @_ZdlPv(ptr noundef nonnull %451) #23
  br label %454

454:                                              ; preds = %453, %450
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %455 = icmp eq ptr %51, null
  br i1 %455, label %465, label %456

456:                                              ; preds = %454
  call void @_ZdlPv(ptr noundef nonnull %51) #23
  br label %465

457:                                              ; preds = %446, %448, %370, %372, %86
  %458 = phi { ptr, i32 } [ %87, %86 ], [ %371, %370 ], [ %373, %372 ], [ %447, %446 ], [ %449, %448 ]
  %459 = load ptr, ptr %6, align 8, !tbaa !36
  %460 = icmp eq ptr %459, null
  br i1 %460, label %462, label %461

461:                                              ; preds = %457
  call void @_ZdlPv(ptr noundef nonnull %459) #23
  br label %462

462:                                              ; preds = %461, %457
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %463 = icmp eq ptr %51, null
  br i1 %463, label %474, label %464

464:                                              ; preds = %462
  call void @_ZdlPv(ptr noundef nonnull %51) #23
  br label %474

465:                                              ; preds = %456, %454
  %466 = load ptr, ptr %5, align 8, !tbaa !109
  %467 = icmp eq ptr %466, null
  br i1 %467, label %469, label %468

468:                                              ; preds = %465
  call void @_ZdlPv(ptr noundef nonnull %466) #23
  br label %469

469:                                              ; preds = %468, %465
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %470 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %470, align 16, !tbaa !5
  %471 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 3
  %472 = load ptr, ptr %471, align 8, !tbaa !36
  %473 = icmp eq ptr %472, null
  br i1 %473, label %485, label %484

474:                                              ; preds = %84, %462, %464, %82
  %475 = phi { ptr, i32 } [ %83, %82 ], [ %85, %84 ], [ %458, %462 ], [ %458, %464 ]
  %476 = load ptr, ptr %5, align 8, !tbaa !109
  %477 = icmp eq ptr %476, null
  br i1 %477, label %479, label %478

478:                                              ; preds = %474
  call void @_ZdlPv(ptr noundef nonnull %476) #23
  br label %479

479:                                              ; preds = %478, %474
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %480 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %480, align 16, !tbaa !5
  %481 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 3
  %482 = load ptr, ptr %481, align 8, !tbaa !36
  %483 = icmp eq ptr %482, null
  br i1 %483, label %596, label %595

484:                                              ; preds = %469
  call void @_ZdlPv(ptr noundef nonnull %472) #23
  br label %485

485:                                              ; preds = %484, %469
  %486 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 2
  %487 = load ptr, ptr %486, align 16, !tbaa !64
  %488 = icmp eq ptr %487, null
  br i1 %488, label %490, label %489

489:                                              ; preds = %485
  call void @_ZdlPv(ptr noundef nonnull %487) #23
  br label %490

490:                                              ; preds = %489, %485
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %470)
          to label %491 unwind label %585

491:                                              ; preds = %490
  %492 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %492, align 16, !tbaa !5
  %493 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 3
  %494 = load ptr, ptr %493, align 8, !tbaa !36
  %495 = icmp eq ptr %494, null
  br i1 %495, label %497, label %496

496:                                              ; preds = %491
  call void @_ZdlPv(ptr noundef nonnull %494) #23
  br label %497

497:                                              ; preds = %496, %491
  %498 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 2
  %499 = load ptr, ptr %498, align 16, !tbaa !64
  %500 = icmp eq ptr %499, null
  br i1 %500, label %502, label %501

501:                                              ; preds = %497
  call void @_ZdlPv(ptr noundef nonnull %499) #23
  br label %502

502:                                              ; preds = %501, %497
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %492)
          to label %503 unwind label %585

503:                                              ; preds = %502
  %504 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %504, align 16, !tbaa !5
  %505 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 3
  %506 = load ptr, ptr %505, align 8, !tbaa !36
  %507 = icmp eq ptr %506, null
  br i1 %507, label %509, label %508

508:                                              ; preds = %503
  call void @_ZdlPv(ptr noundef nonnull %506) #23
  br label %509

509:                                              ; preds = %508, %503
  %510 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 2
  %511 = load ptr, ptr %510, align 16, !tbaa !64
  %512 = icmp eq ptr %511, null
  br i1 %512, label %514, label %513

513:                                              ; preds = %509
  call void @_ZdlPv(ptr noundef nonnull %511) #23
  br label %514

514:                                              ; preds = %513, %509
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %504)
          to label %515 unwind label %585

515:                                              ; preds = %514
  %516 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %516, align 16, !tbaa !5
  %517 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 3
  %518 = load ptr, ptr %517, align 8, !tbaa !36
  %519 = icmp eq ptr %518, null
  br i1 %519, label %521, label %520

520:                                              ; preds = %515
  call void @_ZdlPv(ptr noundef nonnull %518) #23
  br label %521

521:                                              ; preds = %520, %515
  %522 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 2
  %523 = load ptr, ptr %522, align 16, !tbaa !64
  %524 = icmp eq ptr %523, null
  br i1 %524, label %526, label %525

525:                                              ; preds = %521
  call void @_ZdlPv(ptr noundef nonnull %523) #23
  br label %526

526:                                              ; preds = %525, %521
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %516)
          to label %527 unwind label %585

527:                                              ; preds = %526
  %528 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %528, align 16, !tbaa !5
  %529 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 3
  %530 = load ptr, ptr %529, align 8, !tbaa !36
  %531 = icmp eq ptr %530, null
  br i1 %531, label %533, label %532

532:                                              ; preds = %527
  call void @_ZdlPv(ptr noundef nonnull %530) #23
  br label %533

533:                                              ; preds = %532, %527
  %534 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 2
  %535 = load ptr, ptr %534, align 16, !tbaa !64
  %536 = icmp eq ptr %535, null
  br i1 %536, label %538, label %537

537:                                              ; preds = %533
  call void @_ZdlPv(ptr noundef nonnull %535) #23
  br label %538

538:                                              ; preds = %537, %533
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %528)
          to label %539 unwind label %585

539:                                              ; preds = %538
  %540 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %540, align 16, !tbaa !5
  %541 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 3
  %542 = load ptr, ptr %541, align 8, !tbaa !36
  %543 = icmp eq ptr %542, null
  br i1 %543, label %545, label %544

544:                                              ; preds = %539
  call void @_ZdlPv(ptr noundef nonnull %542) #23
  br label %545

545:                                              ; preds = %544, %539
  %546 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 2
  %547 = load ptr, ptr %546, align 16, !tbaa !64
  %548 = icmp eq ptr %547, null
  br i1 %548, label %550, label %549

549:                                              ; preds = %545
  call void @_ZdlPv(ptr noundef nonnull %547) #23
  br label %550

550:                                              ; preds = %549, %545
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %540)
          to label %551 unwind label %585

551:                                              ; preds = %550
  %552 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %552, align 16, !tbaa !5
  %553 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 3
  %554 = load ptr, ptr %553, align 8, !tbaa !36
  %555 = icmp eq ptr %554, null
  br i1 %555, label %557, label %556

556:                                              ; preds = %551
  call void @_ZdlPv(ptr noundef nonnull %554) #23
  br label %557

557:                                              ; preds = %556, %551
  %558 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 2
  %559 = load ptr, ptr %558, align 16, !tbaa !64
  %560 = icmp eq ptr %559, null
  br i1 %560, label %562, label %561

561:                                              ; preds = %557
  call void @_ZdlPv(ptr noundef nonnull %559) #23
  br label %562

562:                                              ; preds = %561, %557
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %552)
          to label %563 unwind label %585

563:                                              ; preds = %562
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 16, !tbaa !5
  %564 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 3
  %565 = load ptr, ptr %564, align 8, !tbaa !36
  %566 = icmp eq ptr %565, null
  br i1 %566, label %568, label %567

567:                                              ; preds = %563
  call void @_ZdlPv(ptr noundef nonnull %565) #23
  br label %568

568:                                              ; preds = %567, %563
  %569 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 2
  %570 = load ptr, ptr %569, align 16, !tbaa !64
  %571 = icmp eq ptr %570, null
  br i1 %571, label %573, label %572

572:                                              ; preds = %568
  call void @_ZdlPv(ptr noundef nonnull %570) #23
  br label %573

573:                                              ; preds = %572, %568
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %574 unwind label %588

574:                                              ; preds = %573
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %4) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  %575 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 3
  %576 = load ptr, ptr %575, align 8, !tbaa !36
  %577 = icmp eq ptr %576, null
  br i1 %577, label %579, label %578

578:                                              ; preds = %574
  call void @_ZdlPv(ptr noundef nonnull %576) #23
  br label %579

579:                                              ; preds = %578, %574
  %580 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 2
  %581 = load ptr, ptr %580, align 8, !tbaa !64
  %582 = icmp eq ptr %581, null
  br i1 %582, label %584, label %583

583:                                              ; preds = %579
  call void @_ZdlPv(ptr noundef nonnull %581) #23
  br label %584

584:                                              ; preds = %579, %583
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #25
  ret void

585:                                              ; preds = %490, %502, %514, %526, %538, %550, %562
  %586 = phi ptr [ %552, %562 ], [ %540, %550 ], [ %528, %538 ], [ %516, %526 ], [ %504, %514 ], [ %492, %502 ], [ %470, %490 ]
  %587 = landingpad { ptr, i32 }
          cleanup
  br label %590

588:                                              ; preds = %573
  %589 = landingpad { ptr, i32 }
          cleanup
  br label %685

590:                                              ; preds = %585, %593
  %591 = phi ptr [ %592, %593 ], [ %586, %585 ]
  %592 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %591, i64 -1
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %592)
          to label %593 unwind label %690

593:                                              ; preds = %590
  %594 = icmp eq ptr %592, %4
  br i1 %594, label %685, label %590

595:                                              ; preds = %479
  call void @_ZdlPv(ptr noundef nonnull %482) #23
  br label %596

596:                                              ; preds = %595, %479
  %597 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 2
  %598 = load ptr, ptr %597, align 16, !tbaa !64
  %599 = icmp eq ptr %598, null
  br i1 %599, label %601, label %600

600:                                              ; preds = %596
  call void @_ZdlPv(ptr noundef nonnull %598) #23
  br label %601

601:                                              ; preds = %600, %596
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %480)
          to label %602 unwind label %688

602:                                              ; preds = %601
  %603 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %603, align 16, !tbaa !5
  %604 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 3
  %605 = load ptr, ptr %604, align 8, !tbaa !36
  %606 = icmp eq ptr %605, null
  br i1 %606, label %608, label %607

607:                                              ; preds = %602
  call void @_ZdlPv(ptr noundef nonnull %605) #23
  br label %608

608:                                              ; preds = %607, %602
  %609 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 2
  %610 = load ptr, ptr %609, align 16, !tbaa !64
  %611 = icmp eq ptr %610, null
  br i1 %611, label %613, label %612

612:                                              ; preds = %608
  call void @_ZdlPv(ptr noundef nonnull %610) #23
  br label %613

613:                                              ; preds = %612, %608
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %603)
          to label %614 unwind label %688

614:                                              ; preds = %613
  %615 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %615, align 16, !tbaa !5
  %616 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 3
  %617 = load ptr, ptr %616, align 8, !tbaa !36
  %618 = icmp eq ptr %617, null
  br i1 %618, label %620, label %619

619:                                              ; preds = %614
  call void @_ZdlPv(ptr noundef nonnull %617) #23
  br label %620

620:                                              ; preds = %619, %614
  %621 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 2
  %622 = load ptr, ptr %621, align 16, !tbaa !64
  %623 = icmp eq ptr %622, null
  br i1 %623, label %625, label %624

624:                                              ; preds = %620
  call void @_ZdlPv(ptr noundef nonnull %622) #23
  br label %625

625:                                              ; preds = %624, %620
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %615)
          to label %626 unwind label %688

626:                                              ; preds = %625
  %627 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %627, align 16, !tbaa !5
  %628 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 3
  %629 = load ptr, ptr %628, align 8, !tbaa !36
  %630 = icmp eq ptr %629, null
  br i1 %630, label %632, label %631

631:                                              ; preds = %626
  call void @_ZdlPv(ptr noundef nonnull %629) #23
  br label %632

632:                                              ; preds = %631, %626
  %633 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 2
  %634 = load ptr, ptr %633, align 16, !tbaa !64
  %635 = icmp eq ptr %634, null
  br i1 %635, label %637, label %636

636:                                              ; preds = %632
  call void @_ZdlPv(ptr noundef nonnull %634) #23
  br label %637

637:                                              ; preds = %636, %632
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %627)
          to label %638 unwind label %688

638:                                              ; preds = %637
  %639 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %639, align 16, !tbaa !5
  %640 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 3
  %641 = load ptr, ptr %640, align 8, !tbaa !36
  %642 = icmp eq ptr %641, null
  br i1 %642, label %644, label %643

643:                                              ; preds = %638
  call void @_ZdlPv(ptr noundef nonnull %641) #23
  br label %644

644:                                              ; preds = %643, %638
  %645 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 2
  %646 = load ptr, ptr %645, align 16, !tbaa !64
  %647 = icmp eq ptr %646, null
  br i1 %647, label %649, label %648

648:                                              ; preds = %644
  call void @_ZdlPv(ptr noundef nonnull %646) #23
  br label %649

649:                                              ; preds = %648, %644
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %639)
          to label %650 unwind label %688

650:                                              ; preds = %649
  %651 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %651, align 16, !tbaa !5
  %652 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 3
  %653 = load ptr, ptr %652, align 8, !tbaa !36
  %654 = icmp eq ptr %653, null
  br i1 %654, label %656, label %655

655:                                              ; preds = %650
  call void @_ZdlPv(ptr noundef nonnull %653) #23
  br label %656

656:                                              ; preds = %655, %650
  %657 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 2
  %658 = load ptr, ptr %657, align 16, !tbaa !64
  %659 = icmp eq ptr %658, null
  br i1 %659, label %661, label %660

660:                                              ; preds = %656
  call void @_ZdlPv(ptr noundef nonnull %658) #23
  br label %661

661:                                              ; preds = %660, %656
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %651)
          to label %662 unwind label %688

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %663, align 16, !tbaa !5
  %664 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 3
  %665 = load ptr, ptr %664, align 8, !tbaa !36
  %666 = icmp eq ptr %665, null
  br i1 %666, label %668, label %667

667:                                              ; preds = %662
  call void @_ZdlPv(ptr noundef nonnull %665) #23
  br label %668

668:                                              ; preds = %667, %662
  %669 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 2
  %670 = load ptr, ptr %669, align 16, !tbaa !64
  %671 = icmp eq ptr %670, null
  br i1 %671, label %673, label %672

672:                                              ; preds = %668
  call void @_ZdlPv(ptr noundef nonnull %670) #23
  br label %673

673:                                              ; preds = %672, %668
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %663)
          to label %674 unwind label %688

674:                                              ; preds = %673
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 16, !tbaa !5
  %675 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 3
  %676 = load ptr, ptr %675, align 8, !tbaa !36
  %677 = icmp eq ptr %676, null
  br i1 %677, label %679, label %678

678:                                              ; preds = %674
  call void @_ZdlPv(ptr noundef nonnull %676) #23
  br label %679

679:                                              ; preds = %678, %674
  %680 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 2
  %681 = load ptr, ptr %680, align 16, !tbaa !64
  %682 = icmp eq ptr %681, null
  br i1 %682, label %684, label %683

683:                                              ; preds = %679
  call void @_ZdlPv(ptr noundef nonnull %681) #23
  br label %684

684:                                              ; preds = %683, %679
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %685 unwind label %688

685:                                              ; preds = %80, %593, %588, %684, %7
  %686 = phi { ptr, i32 } [ %589, %588 ], [ %8, %7 ], [ %475, %684 ], [ %587, %593 ], [ %76, %80 ]
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %4) #25
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %687 unwind label %694

687:                                              ; preds = %685
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #25
  resume { ptr, i32 } %686

688:                                              ; preds = %684, %673, %661, %649, %637, %625, %613, %601
  %689 = landingpad { ptr, i32 }
          catch ptr null
  br label %696

690:                                              ; preds = %590
  %691 = landingpad { ptr, i32 }
          catch ptr null
  br label %696

692:                                              ; preds = %77
  %693 = landingpad { ptr, i32 }
          catch ptr null
  br label %696

694:                                              ; preds = %685
  %695 = landingpad { ptr, i32 }
          catch ptr null
  br label %696

696:                                              ; preds = %690, %694, %692, %688
  %697 = phi { ptr, i32 } [ %689, %688 ], [ %691, %690 ], [ %693, %692 ], [ %695, %694 ]
  %698 = extractvalue { ptr, i32 } %697, 0
  call void @__clang_call_terminate(ptr %698) #24
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi1EE23project_to_all_subfacesERKNS_10QuadratureILi0EEE(ptr noalias nonnull sret(%"class.dealii::Quadrature") align 8 %0, ptr nocapture noundef nonnull readnone align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi2EE23project_to_all_subfacesERKNS_10QuadratureILi1EEE(ptr noalias sret(%"class.dealii::Quadrature.8") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.9", align 8
  %4 = alloca %"class.std::vector.3", align 8
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = load ptr, ptr %5, align 8, !tbaa !36
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  %13 = and i64 %11, 4294967295
  %14 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = shl nuw nsw i64 %13, 4
  %18 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %17) #22
          to label %19 unwind label %51

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  store ptr %18, ptr %3, align 8, !tbaa !64
  store ptr %18, ptr %20, align 8, !tbaa !66
  %21 = getelementptr inbounds %"class.dealii::Point.14", ptr %18, i64 %13
  store ptr %21, ptr %14, align 8, !tbaa !65
  br label %22

22:                                               ; preds = %19, %2
  %23 = phi ptr [ %18, %19 ], [ null, %2 ]
  %24 = phi ptr [ %21, %19 ], [ null, %2 ]
  %25 = and i64 %12, 4294967295
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = shl nuw nsw i64 %25, 4
  %29 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %28) #22
          to label %30 unwind label %53

30:                                               ; preds = %27
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %29, i8 0, i64 %28, i1 false), !tbaa !33
  %31 = getelementptr i8, ptr %29, i64 %28
  br label %32

32:                                               ; preds = %30, %22
  %33 = phi ptr [ null, %22 ], [ %29, %30 ]
  %34 = phi ptr [ null, %22 ], [ %31, %30 ]
  %35 = ptrtoint ptr %34 to i64
  %36 = ptrtoint ptr %33 to i64
  %37 = sub i64 %35, %36
  %38 = icmp sgt i64 %37, 0
  %39 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %40 = lshr exact i64 %37, 4
  %41 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !66
  %43 = load ptr, ptr %3, align 8, !tbaa !64
  br label %44

44:                                               ; preds = %32, %55
  %45 = phi ptr [ %43, %32 ], [ %592, %55 ]
  %46 = phi ptr [ %42, %32 ], [ %593, %55 ]
  %47 = phi ptr [ %23, %32 ], [ %594, %55 ]
  %48 = phi ptr [ %23, %32 ], [ %595, %55 ]
  %49 = phi i32 [ 0, %32 ], [ %56, %55 ]
  %50 = phi ptr [ %24, %32 ], [ %596, %55 ]
  br label %58

51:                                               ; preds = %16
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %803

53:                                               ; preds = %27
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %803

55:                                               ; preds = %591
  %56 = add nuw nsw i32 %49, 1
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %601, label %44

58:                                               ; preds = %44, %591
  %59 = phi ptr [ %45, %44 ], [ %592, %591 ]
  %60 = phi ptr [ %46, %44 ], [ %593, %591 ]
  %61 = phi ptr [ %47, %44 ], [ %594, %591 ]
  %62 = phi ptr [ %48, %44 ], [ %595, %591 ]
  %63 = phi i1 [ true, %44 ], [ false, %591 ]
  %64 = phi ptr [ %50, %44 ], [ %596, %591 ]
  %65 = load ptr, ptr %6, align 8, !tbaa !38
  %66 = load ptr, ptr %5, align 8, !tbaa !36
  %67 = ptrtoint ptr %65 to i64
  %68 = ptrtoint ptr %66 to i64
  %69 = sub i64 %67, %68
  %70 = lshr exact i64 %69, 3
  %71 = and i64 %69, 34359738360
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %527, label %73

73:                                               ; preds = %58
  %74 = load ptr, ptr %39, align 8
  switch i32 %49, label %527 [
    i32 0, label %75
    i32 1, label %188
    i32 2, label %301
    i32 3, label %414
  ]

75:                                               ; preds = %73
  %76 = and i64 %70, 4294967295
  %77 = icmp ult i64 %76, 8
  br i1 %63, label %118, label %78

78:                                               ; preds = %75
  br i1 %77, label %101, label %79

79:                                               ; preds = %78
  %80 = shl nuw nsw i64 %76, 4
  %81 = getelementptr i8, ptr %33, i64 %80
  %82 = getelementptr i8, ptr %74, i64 %71
  %83 = icmp ult ptr %33, %82
  %84 = icmp ult ptr %74, %81
  %85 = and i1 %83, %84
  br i1 %85, label %101, label %86

86:                                               ; preds = %79
  %87 = and i64 %70, 3
  %88 = sub nsw i64 %76, %87
  br label %89

89:                                               ; preds = %89, %86
  %90 = phi i64 [ 0, %86 ], [ %97, %89 ]
  %91 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %90
  %92 = load <4 x double>, ptr %91, align 8, !tbaa !33, !alias.scope !547
  %93 = fmul <4 x double> %92, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %94 = fadd <4 x double> %93, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %95 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %90
  %96 = shufflevector <4 x double> zeroinitializer, <4 x double> %94, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %96, ptr %95, align 8, !tbaa !33
  %97 = add nuw i64 %90, 4
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %99, label %89, !llvm.loop !550

99:                                               ; preds = %89
  %100 = icmp eq i64 %87, 0
  br i1 %100, label %527, label %101

101:                                              ; preds = %79, %78, %99
  %102 = phi i64 [ 0, %79 ], [ 0, %78 ], [ %88, %99 ]
  %103 = sub nsw i64 %70, %102
  %104 = add nsw i64 %102, 1
  %105 = and i64 %103, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %102
  %109 = load double, ptr %108, align 8, !tbaa !33
  %110 = fmul double %109, 5.000000e-01
  %111 = fadd double %110, 5.000000e-01
  %112 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %102
  store double 0.000000e+00, ptr %112, align 8, !tbaa !33
  %113 = getelementptr inbounds [2 x double], ptr %112, i64 0, i64 1
  store double %111, ptr %113, align 8, !tbaa !33
  %114 = add nuw nsw i64 %102, 1
  br label %115

115:                                              ; preds = %107, %101
  %116 = phi i64 [ %102, %101 ], [ %114, %107 ]
  %117 = icmp eq i64 %76, %104
  br i1 %117, label %527, label %171

118:                                              ; preds = %75
  br i1 %77, label %140, label %119

119:                                              ; preds = %118
  %120 = shl nuw nsw i64 %76, 4
  %121 = getelementptr i8, ptr %33, i64 %120
  %122 = getelementptr i8, ptr %74, i64 %71
  %123 = icmp ult ptr %33, %122
  %124 = icmp ult ptr %74, %121
  %125 = and i1 %123, %124
  br i1 %125, label %140, label %126

126:                                              ; preds = %119
  %127 = and i64 %70, 3
  %128 = sub nsw i64 %76, %127
  br label %129

129:                                              ; preds = %129, %126
  %130 = phi i64 [ 0, %126 ], [ %136, %129 ]
  %131 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %130
  %132 = load <4 x double>, ptr %131, align 8, !tbaa !33, !alias.scope !551
  %133 = fmul <4 x double> %132, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %134 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %130
  %135 = shufflevector <4 x double> zeroinitializer, <4 x double> %133, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %135, ptr %134, align 8, !tbaa !33
  %136 = add nuw i64 %130, 4
  %137 = icmp eq i64 %136, %128
  br i1 %137, label %138, label %129, !llvm.loop !554

138:                                              ; preds = %129
  %139 = icmp eq i64 %127, 0
  br i1 %139, label %527, label %140

140:                                              ; preds = %119, %118, %138
  %141 = phi i64 [ 0, %119 ], [ 0, %118 ], [ %128, %138 ]
  %142 = sub nsw i64 %70, %141
  %143 = add nsw i64 %141, 1
  %144 = and i64 %142, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %141
  %148 = load double, ptr %147, align 8, !tbaa !33
  %149 = fmul double %148, 5.000000e-01
  %150 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %141
  store double 0.000000e+00, ptr %150, align 8, !tbaa !33
  %151 = getelementptr inbounds [2 x double], ptr %150, i64 0, i64 1
  store double %149, ptr %151, align 8, !tbaa !33
  %152 = add nuw nsw i64 %141, 1
  br label %153

153:                                              ; preds = %146, %140
  %154 = phi i64 [ %141, %140 ], [ %152, %146 ]
  %155 = icmp eq i64 %76, %143
  br i1 %155, label %527, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %157
  %159 = load double, ptr %158, align 8, !tbaa !33
  %160 = fmul double %159, 5.000000e-01
  %161 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %157
  store double 0.000000e+00, ptr %161, align 8, !tbaa !33
  %162 = getelementptr inbounds [2 x double], ptr %161, i64 0, i64 1
  store double %160, ptr %162, align 8, !tbaa !33
  %163 = add nuw nsw i64 %157, 1
  %164 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %163
  %165 = load double, ptr %164, align 8, !tbaa !33
  %166 = fmul double %165, 5.000000e-01
  %167 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %163
  store double 0.000000e+00, ptr %167, align 8, !tbaa !33
  %168 = getelementptr inbounds [2 x double], ptr %167, i64 0, i64 1
  store double %166, ptr %168, align 8, !tbaa !33
  %169 = add nuw nsw i64 %157, 2
  %170 = icmp eq i64 %169, %76
  br i1 %170, label %527, label %156, !llvm.loop !555

171:                                              ; preds = %115, %171
  %172 = phi i64 [ %186, %171 ], [ %116, %115 ]
  %173 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %172
  %174 = load double, ptr %173, align 8, !tbaa !33
  %175 = fmul double %174, 5.000000e-01
  %176 = fadd double %175, 5.000000e-01
  %177 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %172
  store double 0.000000e+00, ptr %177, align 8, !tbaa !33
  %178 = getelementptr inbounds [2 x double], ptr %177, i64 0, i64 1
  store double %176, ptr %178, align 8, !tbaa !33
  %179 = add nuw nsw i64 %172, 1
  %180 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %179
  %181 = load double, ptr %180, align 8, !tbaa !33
  %182 = fmul double %181, 5.000000e-01
  %183 = fadd double %182, 5.000000e-01
  %184 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %179
  store double 0.000000e+00, ptr %184, align 8, !tbaa !33
  %185 = getelementptr inbounds [2 x double], ptr %184, i64 0, i64 1
  store double %183, ptr %185, align 8, !tbaa !33
  %186 = add nuw nsw i64 %172, 2
  %187 = icmp eq i64 %186, %76
  br i1 %187, label %527, label %171, !llvm.loop !556

188:                                              ; preds = %73
  %189 = and i64 %70, 4294967295
  %190 = icmp ult i64 %189, 8
  br i1 %63, label %231, label %191

191:                                              ; preds = %188
  br i1 %190, label %214, label %192

192:                                              ; preds = %191
  %193 = shl nuw nsw i64 %189, 4
  %194 = getelementptr i8, ptr %33, i64 %193
  %195 = getelementptr i8, ptr %74, i64 %71
  %196 = icmp ult ptr %33, %195
  %197 = icmp ult ptr %74, %194
  %198 = and i1 %196, %197
  br i1 %198, label %214, label %199

199:                                              ; preds = %192
  %200 = and i64 %70, 3
  %201 = sub nsw i64 %189, %200
  br label %202

202:                                              ; preds = %202, %199
  %203 = phi i64 [ 0, %199 ], [ %210, %202 ]
  %204 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %203
  %205 = load <4 x double>, ptr %204, align 8, !tbaa !33, !alias.scope !557
  %206 = fmul <4 x double> %205, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %207 = fadd <4 x double> %206, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %208 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %203
  %209 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %207, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %209, ptr %208, align 8, !tbaa !33
  %210 = add nuw i64 %203, 4
  %211 = icmp eq i64 %210, %201
  br i1 %211, label %212, label %202, !llvm.loop !560

212:                                              ; preds = %202
  %213 = icmp eq i64 %200, 0
  br i1 %213, label %527, label %214

214:                                              ; preds = %192, %191, %212
  %215 = phi i64 [ 0, %192 ], [ 0, %191 ], [ %201, %212 ]
  %216 = sub nsw i64 %70, %215
  %217 = add nsw i64 %215, 1
  %218 = and i64 %216, 1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %228, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %215
  %222 = load double, ptr %221, align 8, !tbaa !33
  %223 = fmul double %222, 5.000000e-01
  %224 = fadd double %223, 5.000000e-01
  %225 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %215
  store double 1.000000e+00, ptr %225, align 8, !tbaa !33
  %226 = getelementptr inbounds [2 x double], ptr %225, i64 0, i64 1
  store double %224, ptr %226, align 8, !tbaa !33
  %227 = add nuw nsw i64 %215, 1
  br label %228

228:                                              ; preds = %220, %214
  %229 = phi i64 [ %215, %214 ], [ %227, %220 ]
  %230 = icmp eq i64 %189, %217
  br i1 %230, label %527, label %284

231:                                              ; preds = %188
  br i1 %190, label %253, label %232

232:                                              ; preds = %231
  %233 = shl nuw nsw i64 %189, 4
  %234 = getelementptr i8, ptr %33, i64 %233
  %235 = getelementptr i8, ptr %74, i64 %71
  %236 = icmp ult ptr %33, %235
  %237 = icmp ult ptr %74, %234
  %238 = and i1 %236, %237
  br i1 %238, label %253, label %239

239:                                              ; preds = %232
  %240 = and i64 %70, 3
  %241 = sub nsw i64 %189, %240
  br label %242

242:                                              ; preds = %242, %239
  %243 = phi i64 [ 0, %239 ], [ %249, %242 ]
  %244 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %243
  %245 = load <4 x double>, ptr %244, align 8, !tbaa !33, !alias.scope !561
  %246 = fmul <4 x double> %245, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %247 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %243
  %248 = shufflevector <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <4 x double> %246, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %248, ptr %247, align 8, !tbaa !33
  %249 = add nuw i64 %243, 4
  %250 = icmp eq i64 %249, %241
  br i1 %250, label %251, label %242, !llvm.loop !564

251:                                              ; preds = %242
  %252 = icmp eq i64 %240, 0
  br i1 %252, label %527, label %253

253:                                              ; preds = %232, %231, %251
  %254 = phi i64 [ 0, %232 ], [ 0, %231 ], [ %241, %251 ]
  %255 = sub nsw i64 %70, %254
  %256 = add nsw i64 %254, 1
  %257 = and i64 %255, 1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %266, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %254
  %261 = load double, ptr %260, align 8, !tbaa !33
  %262 = fmul double %261, 5.000000e-01
  %263 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %254
  store double 1.000000e+00, ptr %263, align 8, !tbaa !33
  %264 = getelementptr inbounds [2 x double], ptr %263, i64 0, i64 1
  store double %262, ptr %264, align 8, !tbaa !33
  %265 = add nuw nsw i64 %254, 1
  br label %266

266:                                              ; preds = %259, %253
  %267 = phi i64 [ %254, %253 ], [ %265, %259 ]
  %268 = icmp eq i64 %189, %256
  br i1 %268, label %527, label %269

269:                                              ; preds = %266, %269
  %270 = phi i64 [ %282, %269 ], [ %267, %266 ]
  %271 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %270
  %272 = load double, ptr %271, align 8, !tbaa !33
  %273 = fmul double %272, 5.000000e-01
  %274 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %270
  store double 1.000000e+00, ptr %274, align 8, !tbaa !33
  %275 = getelementptr inbounds [2 x double], ptr %274, i64 0, i64 1
  store double %273, ptr %275, align 8, !tbaa !33
  %276 = add nuw nsw i64 %270, 1
  %277 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %276
  %278 = load double, ptr %277, align 8, !tbaa !33
  %279 = fmul double %278, 5.000000e-01
  %280 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %276
  store double 1.000000e+00, ptr %280, align 8, !tbaa !33
  %281 = getelementptr inbounds [2 x double], ptr %280, i64 0, i64 1
  store double %279, ptr %281, align 8, !tbaa !33
  %282 = add nuw nsw i64 %270, 2
  %283 = icmp eq i64 %282, %189
  br i1 %283, label %527, label %269, !llvm.loop !565

284:                                              ; preds = %228, %284
  %285 = phi i64 [ %299, %284 ], [ %229, %228 ]
  %286 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %285
  %287 = load double, ptr %286, align 8, !tbaa !33
  %288 = fmul double %287, 5.000000e-01
  %289 = fadd double %288, 5.000000e-01
  %290 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %285
  store double 1.000000e+00, ptr %290, align 8, !tbaa !33
  %291 = getelementptr inbounds [2 x double], ptr %290, i64 0, i64 1
  store double %289, ptr %291, align 8, !tbaa !33
  %292 = add nuw nsw i64 %285, 1
  %293 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %292
  %294 = load double, ptr %293, align 8, !tbaa !33
  %295 = fmul double %294, 5.000000e-01
  %296 = fadd double %295, 5.000000e-01
  %297 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %292
  store double 1.000000e+00, ptr %297, align 8, !tbaa !33
  %298 = getelementptr inbounds [2 x double], ptr %297, i64 0, i64 1
  store double %296, ptr %298, align 8, !tbaa !33
  %299 = add nuw nsw i64 %285, 2
  %300 = icmp eq i64 %299, %189
  br i1 %300, label %527, label %284, !llvm.loop !566

301:                                              ; preds = %73
  %302 = and i64 %70, 4294967295
  %303 = icmp ult i64 %302, 8
  br i1 %63, label %344, label %304

304:                                              ; preds = %301
  br i1 %303, label %327, label %305

305:                                              ; preds = %304
  %306 = shl nuw nsw i64 %302, 4
  %307 = getelementptr i8, ptr %33, i64 %306
  %308 = getelementptr i8, ptr %74, i64 %71
  %309 = icmp ult ptr %33, %308
  %310 = icmp ult ptr %74, %307
  %311 = and i1 %309, %310
  br i1 %311, label %327, label %312

312:                                              ; preds = %305
  %313 = and i64 %70, 3
  %314 = sub nsw i64 %302, %313
  br label %315

315:                                              ; preds = %315, %312
  %316 = phi i64 [ 0, %312 ], [ %323, %315 ]
  %317 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %316
  %318 = load <4 x double>, ptr %317, align 8, !tbaa !33, !alias.scope !567
  %319 = fmul <4 x double> %318, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %320 = fadd <4 x double> %319, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %321 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %316
  %322 = shufflevector <4 x double> %320, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %322, ptr %321, align 8, !tbaa !33
  %323 = add nuw i64 %316, 4
  %324 = icmp eq i64 %323, %314
  br i1 %324, label %325, label %315, !llvm.loop !570

325:                                              ; preds = %315
  %326 = icmp eq i64 %313, 0
  br i1 %326, label %527, label %327

327:                                              ; preds = %305, %304, %325
  %328 = phi i64 [ 0, %305 ], [ 0, %304 ], [ %314, %325 ]
  %329 = sub nsw i64 %70, %328
  %330 = add nsw i64 %328, 1
  %331 = and i64 %329, 1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %341, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %328
  %335 = load double, ptr %334, align 8, !tbaa !33
  %336 = fmul double %335, 5.000000e-01
  %337 = fadd double %336, 5.000000e-01
  %338 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %328
  store double %337, ptr %338, align 8, !tbaa !33
  %339 = getelementptr inbounds [2 x double], ptr %338, i64 0, i64 1
  store double 0.000000e+00, ptr %339, align 8, !tbaa !33
  %340 = add nuw nsw i64 %328, 1
  br label %341

341:                                              ; preds = %333, %327
  %342 = phi i64 [ %328, %327 ], [ %340, %333 ]
  %343 = icmp eq i64 %302, %330
  br i1 %343, label %527, label %397

344:                                              ; preds = %301
  br i1 %303, label %366, label %345

345:                                              ; preds = %344
  %346 = shl nuw nsw i64 %302, 4
  %347 = getelementptr i8, ptr %33, i64 %346
  %348 = getelementptr i8, ptr %74, i64 %71
  %349 = icmp ult ptr %33, %348
  %350 = icmp ult ptr %74, %347
  %351 = and i1 %349, %350
  br i1 %351, label %366, label %352

352:                                              ; preds = %345
  %353 = and i64 %70, 3
  %354 = sub nsw i64 %302, %353
  br label %355

355:                                              ; preds = %355, %352
  %356 = phi i64 [ 0, %352 ], [ %362, %355 ]
  %357 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %356
  %358 = load <4 x double>, ptr %357, align 8, !tbaa !33, !alias.scope !571
  %359 = fmul <4 x double> %358, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %360 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %356
  %361 = shufflevector <4 x double> %359, <4 x double> zeroinitializer, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %361, ptr %360, align 8, !tbaa !33
  %362 = add nuw i64 %356, 4
  %363 = icmp eq i64 %362, %354
  br i1 %363, label %364, label %355, !llvm.loop !574

364:                                              ; preds = %355
  %365 = icmp eq i64 %353, 0
  br i1 %365, label %527, label %366

366:                                              ; preds = %345, %344, %364
  %367 = phi i64 [ 0, %345 ], [ 0, %344 ], [ %354, %364 ]
  %368 = sub nsw i64 %70, %367
  %369 = add nsw i64 %367, 1
  %370 = and i64 %368, 1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %379, label %372

372:                                              ; preds = %366
  %373 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %367
  %374 = load double, ptr %373, align 8, !tbaa !33
  %375 = fmul double %374, 5.000000e-01
  %376 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %367
  store double %375, ptr %376, align 8, !tbaa !33
  %377 = getelementptr inbounds [2 x double], ptr %376, i64 0, i64 1
  store double 0.000000e+00, ptr %377, align 8, !tbaa !33
  %378 = add nuw nsw i64 %367, 1
  br label %379

379:                                              ; preds = %372, %366
  %380 = phi i64 [ %367, %366 ], [ %378, %372 ]
  %381 = icmp eq i64 %302, %369
  br i1 %381, label %527, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %395, %382 ], [ %380, %379 ]
  %384 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %383
  %385 = load double, ptr %384, align 8, !tbaa !33
  %386 = fmul double %385, 5.000000e-01
  %387 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %383
  store double %386, ptr %387, align 8, !tbaa !33
  %388 = getelementptr inbounds [2 x double], ptr %387, i64 0, i64 1
  store double 0.000000e+00, ptr %388, align 8, !tbaa !33
  %389 = add nuw nsw i64 %383, 1
  %390 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %389
  %391 = load double, ptr %390, align 8, !tbaa !33
  %392 = fmul double %391, 5.000000e-01
  %393 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %389
  store double %392, ptr %393, align 8, !tbaa !33
  %394 = getelementptr inbounds [2 x double], ptr %393, i64 0, i64 1
  store double 0.000000e+00, ptr %394, align 8, !tbaa !33
  %395 = add nuw nsw i64 %383, 2
  %396 = icmp eq i64 %395, %302
  br i1 %396, label %527, label %382, !llvm.loop !575

397:                                              ; preds = %341, %397
  %398 = phi i64 [ %412, %397 ], [ %342, %341 ]
  %399 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %398
  %400 = load double, ptr %399, align 8, !tbaa !33
  %401 = fmul double %400, 5.000000e-01
  %402 = fadd double %401, 5.000000e-01
  %403 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %398
  store double %402, ptr %403, align 8, !tbaa !33
  %404 = getelementptr inbounds [2 x double], ptr %403, i64 0, i64 1
  store double 0.000000e+00, ptr %404, align 8, !tbaa !33
  %405 = add nuw nsw i64 %398, 1
  %406 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %405
  %407 = load double, ptr %406, align 8, !tbaa !33
  %408 = fmul double %407, 5.000000e-01
  %409 = fadd double %408, 5.000000e-01
  %410 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %405
  store double %409, ptr %410, align 8, !tbaa !33
  %411 = getelementptr inbounds [2 x double], ptr %410, i64 0, i64 1
  store double 0.000000e+00, ptr %411, align 8, !tbaa !33
  %412 = add nuw nsw i64 %398, 2
  %413 = icmp eq i64 %412, %302
  br i1 %413, label %527, label %397, !llvm.loop !576

414:                                              ; preds = %73
  %415 = and i64 %70, 4294967295
  %416 = icmp ult i64 %415, 8
  br i1 %63, label %457, label %417

417:                                              ; preds = %414
  br i1 %416, label %440, label %418

418:                                              ; preds = %417
  %419 = shl nuw nsw i64 %415, 4
  %420 = getelementptr i8, ptr %33, i64 %419
  %421 = getelementptr i8, ptr %74, i64 %71
  %422 = icmp ult ptr %33, %421
  %423 = icmp ult ptr %74, %420
  %424 = and i1 %422, %423
  br i1 %424, label %440, label %425

425:                                              ; preds = %418
  %426 = and i64 %70, 3
  %427 = sub nsw i64 %415, %426
  br label %428

428:                                              ; preds = %428, %425
  %429 = phi i64 [ 0, %425 ], [ %436, %428 ]
  %430 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %429
  %431 = load <4 x double>, ptr %430, align 8, !tbaa !33, !alias.scope !577
  %432 = fmul <4 x double> %431, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %433 = fadd <4 x double> %432, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %434 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %429
  %435 = shufflevector <4 x double> %433, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %435, ptr %434, align 8, !tbaa !33
  %436 = add nuw i64 %429, 4
  %437 = icmp eq i64 %436, %427
  br i1 %437, label %438, label %428, !llvm.loop !580

438:                                              ; preds = %428
  %439 = icmp eq i64 %426, 0
  br i1 %439, label %527, label %440

440:                                              ; preds = %418, %417, %438
  %441 = phi i64 [ 0, %418 ], [ 0, %417 ], [ %427, %438 ]
  %442 = sub nsw i64 %70, %441
  %443 = add nsw i64 %441, 1
  %444 = and i64 %442, 1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %454, label %446

446:                                              ; preds = %440
  %447 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %441
  %448 = load double, ptr %447, align 8, !tbaa !33
  %449 = fmul double %448, 5.000000e-01
  %450 = fadd double %449, 5.000000e-01
  %451 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %441
  store double %450, ptr %451, align 8, !tbaa !33
  %452 = getelementptr inbounds [2 x double], ptr %451, i64 0, i64 1
  store double 1.000000e+00, ptr %452, align 8, !tbaa !33
  %453 = add nuw nsw i64 %441, 1
  br label %454

454:                                              ; preds = %446, %440
  %455 = phi i64 [ %441, %440 ], [ %453, %446 ]
  %456 = icmp eq i64 %415, %443
  br i1 %456, label %527, label %510

457:                                              ; preds = %414
  br i1 %416, label %479, label %458

458:                                              ; preds = %457
  %459 = shl nuw nsw i64 %415, 4
  %460 = getelementptr i8, ptr %33, i64 %459
  %461 = getelementptr i8, ptr %74, i64 %71
  %462 = icmp ult ptr %33, %461
  %463 = icmp ult ptr %74, %460
  %464 = and i1 %462, %463
  br i1 %464, label %479, label %465

465:                                              ; preds = %458
  %466 = and i64 %70, 3
  %467 = sub nsw i64 %415, %466
  br label %468

468:                                              ; preds = %468, %465
  %469 = phi i64 [ 0, %465 ], [ %475, %468 ]
  %470 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %469
  %471 = load <4 x double>, ptr %470, align 8, !tbaa !33, !alias.scope !581
  %472 = fmul <4 x double> %471, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %473 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %469
  %474 = shufflevector <4 x double> %472, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %474, ptr %473, align 8, !tbaa !33
  %475 = add nuw i64 %469, 4
  %476 = icmp eq i64 %475, %467
  br i1 %476, label %477, label %468, !llvm.loop !584

477:                                              ; preds = %468
  %478 = icmp eq i64 %466, 0
  br i1 %478, label %527, label %479

479:                                              ; preds = %458, %457, %477
  %480 = phi i64 [ 0, %458 ], [ 0, %457 ], [ %467, %477 ]
  %481 = sub nsw i64 %70, %480
  %482 = add nsw i64 %480, 1
  %483 = and i64 %481, 1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %492, label %485

485:                                              ; preds = %479
  %486 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %480
  %487 = load double, ptr %486, align 8, !tbaa !33
  %488 = fmul double %487, 5.000000e-01
  %489 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %480
  store double %488, ptr %489, align 8, !tbaa !33
  %490 = getelementptr inbounds [2 x double], ptr %489, i64 0, i64 1
  store double 1.000000e+00, ptr %490, align 8, !tbaa !33
  %491 = add nuw nsw i64 %480, 1
  br label %492

492:                                              ; preds = %485, %479
  %493 = phi i64 [ %480, %479 ], [ %491, %485 ]
  %494 = icmp eq i64 %415, %482
  br i1 %494, label %527, label %495

495:                                              ; preds = %492, %495
  %496 = phi i64 [ %508, %495 ], [ %493, %492 ]
  %497 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %496
  %498 = load double, ptr %497, align 8, !tbaa !33
  %499 = fmul double %498, 5.000000e-01
  %500 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %496
  store double %499, ptr %500, align 8, !tbaa !33
  %501 = getelementptr inbounds [2 x double], ptr %500, i64 0, i64 1
  store double 1.000000e+00, ptr %501, align 8, !tbaa !33
  %502 = add nuw nsw i64 %496, 1
  %503 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %502
  %504 = load double, ptr %503, align 8, !tbaa !33
  %505 = fmul double %504, 5.000000e-01
  %506 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %502
  store double %505, ptr %506, align 8, !tbaa !33
  %507 = getelementptr inbounds [2 x double], ptr %506, i64 0, i64 1
  store double 1.000000e+00, ptr %507, align 8, !tbaa !33
  %508 = add nuw nsw i64 %496, 2
  %509 = icmp eq i64 %508, %415
  br i1 %509, label %527, label %495, !llvm.loop !585

510:                                              ; preds = %454, %510
  %511 = phi i64 [ %525, %510 ], [ %455, %454 ]
  %512 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %511
  %513 = load double, ptr %512, align 8, !tbaa !33
  %514 = fmul double %513, 5.000000e-01
  %515 = fadd double %514, 5.000000e-01
  %516 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %511
  store double %515, ptr %516, align 8, !tbaa !33
  %517 = getelementptr inbounds [2 x double], ptr %516, i64 0, i64 1
  store double 1.000000e+00, ptr %517, align 8, !tbaa !33
  %518 = add nuw nsw i64 %511, 1
  %519 = getelementptr inbounds %"class.dealii::Point", ptr %74, i64 %518
  %520 = load double, ptr %519, align 8, !tbaa !33
  %521 = fmul double %520, 5.000000e-01
  %522 = fadd double %521, 5.000000e-01
  %523 = getelementptr inbounds %"class.dealii::Point.14", ptr %33, i64 %518
  store double %522, ptr %523, align 8, !tbaa !33
  %524 = getelementptr inbounds [2 x double], ptr %523, i64 0, i64 1
  store double 1.000000e+00, ptr %524, align 8, !tbaa !33
  %525 = add nuw nsw i64 %511, 2
  %526 = icmp eq i64 %525, %415
  br i1 %526, label %527, label %510, !llvm.loop !586

527:                                              ; preds = %454, %510, %492, %495, %341, %397, %379, %382, %228, %284, %266, %269, %115, %171, %153, %156, %438, %477, %325, %364, %212, %251, %99, %138, %58, %73
  br i1 %38, label %528, label %591

528:                                              ; preds = %527, %582
  %529 = phi ptr [ %583, %582 ], [ %59, %527 ]
  %530 = phi ptr [ %587, %582 ], [ %60, %527 ]
  %531 = phi ptr [ %584, %582 ], [ %61, %527 ]
  %532 = phi ptr [ %587, %582 ], [ %62, %527 ]
  %533 = phi ptr [ %586, %582 ], [ %64, %527 ]
  %534 = phi i64 [ %589, %582 ], [ %40, %527 ]
  %535 = phi ptr [ %588, %582 ], [ %33, %527 ]
  %536 = icmp eq ptr %532, %533
  br i1 %536, label %542, label %537

537:                                              ; preds = %528
  %538 = load double, ptr %535, align 8, !tbaa !33
  store double %538, ptr %532, align 8, !tbaa !33
  %539 = getelementptr inbounds [2 x double], ptr %535, i64 0, i64 1
  %540 = load double, ptr %539, align 8, !tbaa !33
  %541 = getelementptr inbounds [2 x double], ptr %532, i64 0, i64 1
  store double %540, ptr %541, align 8, !tbaa !33
  br label %582

542:                                              ; preds = %528
  %543 = ptrtoint ptr %532 to i64
  %544 = ptrtoint ptr %531 to i64
  %545 = sub i64 %543, %544
  %546 = icmp eq i64 %545, 9223372036854775792
  br i1 %546, label %547, label %549

547:                                              ; preds = %542
  store ptr %46, ptr %41, align 8, !tbaa !66
  store ptr %45, ptr %3, align 8, !tbaa !64
  store ptr %60, ptr %41, align 8, !tbaa !66
  store ptr %59, ptr %3, align 8, !tbaa !64
  store ptr %530, ptr %41, align 8, !tbaa !66
  store ptr %529, ptr %3, align 8, !tbaa !64
  store ptr %532, ptr %14, align 8, !tbaa !65
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %548 unwind label %599

548:                                              ; preds = %547
  unreachable

549:                                              ; preds = %542
  %550 = ashr exact i64 %545, 4
  %551 = tail call i64 @llvm.umax.i64(i64 %550, i64 1)
  %552 = add i64 %551, %550
  %553 = icmp ult i64 %552, %550
  %554 = icmp ugt i64 %552, 576460752303423487
  %555 = or i1 %553, %554
  %556 = select i1 %555, i64 576460752303423487, i64 %552
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %561, label %558

558:                                              ; preds = %549
  %559 = shl nuw nsw i64 %556, 4
  %560 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %559) #22
          to label %561 unwind label %597

561:                                              ; preds = %558, %549
  %562 = phi ptr [ null, %549 ], [ %560, %558 ]
  %563 = getelementptr inbounds %"class.dealii::Point.14", ptr %562, i64 %550
  %564 = load <2 x double>, ptr %535, align 8, !tbaa !33
  store <2 x double> %564, ptr %563, align 8, !tbaa !33
  %565 = icmp eq ptr %531, %532
  br i1 %565, label %576, label %566

566:                                              ; preds = %561, %566
  %567 = phi ptr [ %574, %566 ], [ %562, %561 ]
  %568 = phi ptr [ %573, %566 ], [ %531, %561 ]
  %569 = load double, ptr %568, align 8, !tbaa !33
  store double %569, ptr %567, align 8, !tbaa !33
  %570 = getelementptr inbounds [2 x double], ptr %568, i64 0, i64 1
  %571 = load double, ptr %570, align 8, !tbaa !33
  %572 = getelementptr inbounds [2 x double], ptr %567, i64 0, i64 1
  store double %571, ptr %572, align 8, !tbaa !33
  %573 = getelementptr inbounds %"class.dealii::Point.14", ptr %568, i64 1
  %574 = getelementptr inbounds %"class.dealii::Point.14", ptr %567, i64 1
  %575 = icmp eq ptr %573, %532
  br i1 %575, label %576, label %566

576:                                              ; preds = %566, %561
  %577 = phi ptr [ %562, %561 ], [ %574, %566 ]
  %578 = icmp eq ptr %531, null
  br i1 %578, label %580, label %579

579:                                              ; preds = %576
  tail call void @_ZdlPv(ptr noundef nonnull %531) #23
  br label %580

580:                                              ; preds = %579, %576
  %581 = getelementptr inbounds %"class.dealii::Point.14", ptr %562, i64 %556
  br label %582

582:                                              ; preds = %580, %537
  %583 = phi ptr [ %562, %580 ], [ %529, %537 ]
  %584 = phi ptr [ %562, %580 ], [ %531, %537 ]
  %585 = phi ptr [ %577, %580 ], [ %532, %537 ]
  %586 = phi ptr [ %581, %580 ], [ %533, %537 ]
  %587 = getelementptr inbounds %"class.dealii::Point.14", ptr %585, i64 1
  %588 = getelementptr inbounds %"class.dealii::Point.14", ptr %535, i64 1
  %589 = add nsw i64 %534, -1
  %590 = icmp sgt i64 %534, 1
  br i1 %590, label %528, label %591

591:                                              ; preds = %582, %527
  %592 = phi ptr [ %59, %527 ], [ %583, %582 ]
  %593 = phi ptr [ %60, %527 ], [ %587, %582 ]
  %594 = phi ptr [ %61, %527 ], [ %584, %582 ]
  %595 = phi ptr [ %62, %527 ], [ %587, %582 ]
  %596 = phi ptr [ %64, %527 ], [ %586, %582 ]
  br i1 %63, label %58, label %55

597:                                              ; preds = %558
  %598 = landingpad { ptr, i32 }
          cleanup
  store ptr %46, ptr %41, align 8, !tbaa !66
  store ptr %45, ptr %3, align 8, !tbaa !64
  store ptr %60, ptr %41, align 8, !tbaa !66
  store ptr %59, ptr %3, align 8, !tbaa !64
  store ptr %530, ptr %41, align 8, !tbaa !66
  store ptr %529, ptr %3, align 8, !tbaa !64
  store ptr %532, ptr %14, align 8, !tbaa !65
  br label %799

599:                                              ; preds = %547
  %600 = landingpad { ptr, i32 }
          cleanup
  br label %799

601:                                              ; preds = %55
  store ptr %593, ptr %41, align 8, !tbaa !66
  store ptr %592, ptr %3, align 8, !tbaa !64
  store ptr %596, ptr %14, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %602 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 2
  br i1 %15, label %609, label %603

603:                                              ; preds = %601
  %604 = shl nuw nsw i64 %13, 3
  %605 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %604) #22
          to label %606 unwind label %629

606:                                              ; preds = %603
  %607 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %605, ptr %4, align 8, !tbaa !36
  store ptr %605, ptr %607, align 8, !tbaa !38
  %608 = getelementptr inbounds double, ptr %605, i64 %13
  br label %609

609:                                              ; preds = %601, %606
  %610 = phi ptr [ null, %601 ], [ %605, %606 ]
  %611 = phi ptr [ null, %601 ], [ %608, %606 ]
  %612 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %613 = load ptr, ptr %612, align 8, !tbaa !38
  %614 = load ptr, ptr %4, align 8, !tbaa !36
  br label %615

615:                                              ; preds = %609, %760
  %616 = phi ptr [ %614, %609 ], [ %761, %760 ]
  %617 = phi ptr [ %613, %609 ], [ %762, %760 ]
  %618 = phi ptr [ %610, %609 ], [ %763, %760 ]
  %619 = phi ptr [ %610, %609 ], [ %764, %760 ]
  %620 = phi i32 [ 0, %609 ], [ %766, %760 ]
  %621 = phi ptr [ %611, %609 ], [ %765, %760 ]
  %622 = load ptr, ptr %5, align 8, !tbaa !40
  %623 = load ptr, ptr %6, align 8, !tbaa !40
  %624 = ptrtoint ptr %623 to i64
  %625 = ptrtoint ptr %622 to i64
  %626 = sub i64 %624, %625
  %627 = icmp sgt i64 %626, 0
  br i1 %627, label %631, label %760

628:                                              ; preds = %760
  store ptr %762, ptr %612, align 8, !tbaa !38
  store ptr %761, ptr %4, align 8, !tbaa !36
  store ptr %765, ptr %602, align 8, !tbaa !37
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKSt6vectorINS_5PointILi2EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %781 unwind label %629

629:                                              ; preds = %603, %628
  %630 = landingpad { ptr, i32 }
          cleanup
  br label %788

631:                                              ; preds = %615
  %632 = lshr exact i64 %626, 3
  br label %633

633:                                              ; preds = %688, %631
  %634 = phi ptr [ %616, %631 ], [ %689, %688 ]
  %635 = phi ptr [ %617, %631 ], [ %691, %688 ]
  %636 = phi ptr [ %618, %631 ], [ %690, %688 ]
  %637 = phi ptr [ %619, %631 ], [ %691, %688 ]
  %638 = phi ptr [ %621, %631 ], [ %692, %688 ]
  %639 = phi i64 [ %632, %631 ], [ %694, %688 ]
  %640 = phi ptr [ %622, %631 ], [ %693, %688 ]
  %641 = icmp eq ptr %637, %638
  br i1 %641, label %645, label %642

642:                                              ; preds = %633
  %643 = load double, ptr %640, align 8, !tbaa !33
  store double %643, ptr %637, align 8, !tbaa !33
  %644 = getelementptr inbounds double, ptr %637, i64 1
  br label %688

645:                                              ; preds = %633
  %646 = ptrtoint ptr %637 to i64
  %647 = ptrtoint ptr %636 to i64
  %648 = sub i64 %646, %647
  %649 = icmp eq i64 %648, 9223372036854775800
  br i1 %649, label %650, label %657

650:                                              ; preds = %645, %716
  %651 = phi ptr [ %691, %716 ], [ %617, %645 ]
  %652 = phi ptr [ %689, %716 ], [ %616, %645 ]
  %653 = phi ptr [ %707, %716 ], [ %635, %645 ]
  %654 = phi ptr [ %706, %716 ], [ %634, %645 ]
  %655 = phi ptr [ %707, %716 ], [ %637, %645 ]
  store ptr %651, ptr %612, align 8, !tbaa !38
  store ptr %652, ptr %4, align 8, !tbaa !36
  store ptr %653, ptr %612, align 8, !tbaa !38
  store ptr %654, ptr %4, align 8, !tbaa !36
  store ptr %655, ptr %602, align 8, !tbaa !37
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %656 unwind label %779

656:                                              ; preds = %650
  unreachable

657:                                              ; preds = %645
  %658 = ashr exact i64 %648, 3
  %659 = tail call i64 @llvm.umax.i64(i64 %658, i64 1)
  %660 = add i64 %659, %658
  %661 = icmp ult i64 %660, %658
  %662 = icmp ugt i64 %660, 1152921504606846975
  %663 = or i1 %661, %662
  %664 = select i1 %663, i64 1152921504606846975, i64 %660
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %669, label %666

666:                                              ; preds = %657
  %667 = shl nuw nsw i64 %664, 3
  %668 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %667) #22
          to label %669 unwind label %768

669:                                              ; preds = %666, %657
  %670 = phi ptr [ null, %657 ], [ %668, %666 ]
  %671 = getelementptr inbounds double, ptr %670, i64 %658
  %672 = load double, ptr %640, align 8, !tbaa !33
  store double %672, ptr %671, align 8, !tbaa !33
  %673 = icmp sgt i64 %648, 8
  br i1 %673, label %674, label %675, !prof !45

674:                                              ; preds = %669
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %670, ptr align 8 %636, i64 %648, i1 false)
  br label %680

675:                                              ; preds = %669
  %676 = icmp eq i64 %648, 8
  br i1 %676, label %677, label %680

677:                                              ; preds = %675
  %678 = load double, ptr %636, align 8, !tbaa !33
  store double %678, ptr %670, align 8, !tbaa !33
  %679 = getelementptr inbounds double, ptr %671, i64 1
  br label %683

680:                                              ; preds = %675, %674
  %681 = getelementptr inbounds double, ptr %671, i64 1
  %682 = icmp eq ptr %636, null
  br i1 %682, label %685, label %683

683:                                              ; preds = %677, %680
  %684 = phi ptr [ %679, %677 ], [ %681, %680 ]
  tail call void @_ZdlPv(ptr noundef nonnull %636) #23
  br label %685

685:                                              ; preds = %683, %680
  %686 = phi ptr [ %681, %680 ], [ %684, %683 ]
  %687 = getelementptr inbounds double, ptr %670, i64 %664
  br label %688

688:                                              ; preds = %685, %642
  %689 = phi ptr [ %670, %685 ], [ %634, %642 ]
  %690 = phi ptr [ %670, %685 ], [ %636, %642 ]
  %691 = phi ptr [ %686, %685 ], [ %644, %642 ]
  %692 = phi ptr [ %687, %685 ], [ %638, %642 ]
  %693 = getelementptr inbounds double, ptr %640, i64 1
  %694 = add nsw i64 %639, -1
  %695 = icmp sgt i64 %639, 1
  br i1 %695, label %633, label %696

696:                                              ; preds = %688
  %697 = load ptr, ptr %5, align 8, !tbaa !40
  %698 = load ptr, ptr %6, align 8, !tbaa !40
  %699 = ptrtoint ptr %698 to i64
  %700 = ptrtoint ptr %697 to i64
  %701 = sub i64 %699, %700
  %702 = icmp sgt i64 %701, 0
  br i1 %702, label %703, label %760

703:                                              ; preds = %696
  %704 = lshr exact i64 %701, 3
  br label %705

705:                                              ; preds = %752, %703
  %706 = phi ptr [ %689, %703 ], [ %753, %752 ]
  %707 = phi ptr [ %691, %703 ], [ %755, %752 ]
  %708 = phi ptr [ %690, %703 ], [ %754, %752 ]
  %709 = phi ptr [ %692, %703 ], [ %756, %752 ]
  %710 = phi i64 [ %704, %703 ], [ %758, %752 ]
  %711 = phi ptr [ %697, %703 ], [ %757, %752 ]
  %712 = icmp eq ptr %707, %709
  br i1 %712, label %716, label %713

713:                                              ; preds = %705
  %714 = load double, ptr %711, align 8, !tbaa !33
  store double %714, ptr %707, align 8, !tbaa !33
  %715 = getelementptr inbounds double, ptr %707, i64 1
  br label %752

716:                                              ; preds = %705
  %717 = ptrtoint ptr %707 to i64
  %718 = ptrtoint ptr %708 to i64
  %719 = sub i64 %717, %718
  %720 = icmp eq i64 %719, 9223372036854775800
  br i1 %720, label %650, label %721

721:                                              ; preds = %716
  %722 = ashr exact i64 %719, 3
  %723 = tail call i64 @llvm.umax.i64(i64 %722, i64 1)
  %724 = add i64 %723, %722
  %725 = icmp ult i64 %724, %722
  %726 = icmp ugt i64 %724, 1152921504606846975
  %727 = or i1 %725, %726
  %728 = select i1 %727, i64 1152921504606846975, i64 %724
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %733, label %730

730:                                              ; preds = %721
  %731 = shl nuw nsw i64 %728, 3
  %732 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %731) #22
          to label %733 unwind label %770

733:                                              ; preds = %730, %721
  %734 = phi ptr [ null, %721 ], [ %732, %730 ]
  %735 = getelementptr inbounds double, ptr %734, i64 %722
  %736 = load double, ptr %711, align 8, !tbaa !33
  store double %736, ptr %735, align 8, !tbaa !33
  %737 = icmp sgt i64 %719, 8
  br i1 %737, label %743, label %738, !prof !45

738:                                              ; preds = %733
  %739 = icmp eq i64 %719, 8
  br i1 %739, label %740, label %744

740:                                              ; preds = %738
  %741 = load double, ptr %708, align 8, !tbaa !33
  store double %741, ptr %734, align 8, !tbaa !33
  %742 = getelementptr inbounds double, ptr %735, i64 1
  br label %747

743:                                              ; preds = %733
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %734, ptr align 8 %708, i64 %719, i1 false)
  br label %744

744:                                              ; preds = %743, %738
  %745 = getelementptr inbounds double, ptr %735, i64 1
  %746 = icmp eq ptr %708, null
  br i1 %746, label %749, label %747

747:                                              ; preds = %744, %740
  %748 = phi ptr [ %742, %740 ], [ %745, %744 ]
  tail call void @_ZdlPv(ptr noundef nonnull %708) #23
  br label %749

749:                                              ; preds = %747, %744
  %750 = phi ptr [ %745, %744 ], [ %748, %747 ]
  %751 = getelementptr inbounds double, ptr %734, i64 %728
  br label %752

752:                                              ; preds = %749, %713
  %753 = phi ptr [ %734, %749 ], [ %706, %713 ]
  %754 = phi ptr [ %734, %749 ], [ %708, %713 ]
  %755 = phi ptr [ %750, %749 ], [ %715, %713 ]
  %756 = phi ptr [ %751, %749 ], [ %709, %713 ]
  %757 = getelementptr inbounds double, ptr %711, i64 1
  %758 = add nsw i64 %710, -1
  %759 = icmp sgt i64 %710, 1
  br i1 %759, label %705, label %760

760:                                              ; preds = %752, %615, %696
  %761 = phi ptr [ %689, %696 ], [ %616, %615 ], [ %753, %752 ]
  %762 = phi ptr [ %691, %696 ], [ %617, %615 ], [ %755, %752 ]
  %763 = phi ptr [ %690, %696 ], [ %618, %615 ], [ %754, %752 ]
  %764 = phi ptr [ %691, %696 ], [ %619, %615 ], [ %755, %752 ]
  %765 = phi ptr [ %692, %696 ], [ %621, %615 ], [ %756, %752 ]
  %766 = add nuw nsw i32 %620, 1
  %767 = icmp eq i32 %766, 4
  br i1 %767, label %628, label %615

768:                                              ; preds = %666
  %769 = landingpad { ptr, i32 }
          cleanup
  br label %772

770:                                              ; preds = %730
  %771 = landingpad { ptr, i32 }
          cleanup
  br label %772

772:                                              ; preds = %770, %768
  %773 = phi ptr [ %617, %768 ], [ %691, %770 ]
  %774 = phi ptr [ %616, %768 ], [ %689, %770 ]
  %775 = phi ptr [ %635, %768 ], [ %707, %770 ]
  %776 = phi ptr [ %634, %768 ], [ %706, %770 ]
  %777 = phi ptr [ %637, %768 ], [ %707, %770 ]
  %778 = phi { ptr, i32 } [ %769, %768 ], [ %771, %770 ]
  store ptr %773, ptr %612, align 8, !tbaa !38
  store ptr %774, ptr %4, align 8, !tbaa !36
  store ptr %775, ptr %612, align 8, !tbaa !38
  store ptr %776, ptr %4, align 8, !tbaa !36
  store ptr %777, ptr %602, align 8, !tbaa !37
  br label %788

779:                                              ; preds = %650
  %780 = landingpad { ptr, i32 }
          cleanup
  br label %788

781:                                              ; preds = %628
  %782 = load ptr, ptr %4, align 8, !tbaa !36
  %783 = icmp eq ptr %782, null
  br i1 %783, label %785, label %784

784:                                              ; preds = %781
  call void @_ZdlPv(ptr noundef nonnull %782) #23
  br label %785

785:                                              ; preds = %784, %781
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  %786 = icmp eq ptr %33, null
  br i1 %786, label %794, label %787

787:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef nonnull %33) #23
  br label %794

788:                                              ; preds = %772, %779, %629
  %789 = phi { ptr, i32 } [ %630, %629 ], [ %778, %772 ], [ %780, %779 ]
  %790 = load ptr, ptr %4, align 8, !tbaa !36
  %791 = icmp eq ptr %790, null
  br i1 %791, label %793, label %792

792:                                              ; preds = %788
  call void @_ZdlPv(ptr noundef nonnull %790) #23
  br label %793

793:                                              ; preds = %792, %788
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #25
  br label %799

794:                                              ; preds = %787, %785
  %795 = load ptr, ptr %3, align 8, !tbaa !64
  %796 = icmp eq ptr %795, null
  br i1 %796, label %798, label %797

797:                                              ; preds = %794
  call void @_ZdlPv(ptr noundef nonnull %795) #23
  br label %798

798:                                              ; preds = %794, %797
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  ret void

799:                                              ; preds = %597, %599, %793
  %800 = phi { ptr, i32 } [ %789, %793 ], [ %598, %597 ], [ %600, %599 ]
  %801 = icmp eq ptr %33, null
  br i1 %801, label %803, label %802

802:                                              ; preds = %799
  call void @_ZdlPv(ptr noundef nonnull %33) #23
  br label %803

803:                                              ; preds = %53, %799, %802, %51
  %804 = phi { ptr, i32 } [ %52, %51 ], [ %54, %53 ], [ %800, %799 ], [ %800, %802 ]
  %805 = load ptr, ptr %3, align 8, !tbaa !64
  %806 = icmp eq ptr %805, null
  br i1 %806, label %808, label %807

807:                                              ; preds = %803
  call void @_ZdlPv(ptr noundef nonnull %805) #23
  br label %808

808:                                              ; preds = %807, %803
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #25
  resume { ptr, i32 } %804
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE(ptr noalias sret(%"class.dealii::Quadrature.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::Quadrature.8", align 8
  %4 = alloca [8 x %"class.dealii::Quadrature.8"], align 16
  %5 = alloca %"class.std::vector.17", align 8
  %6 = alloca %"class.std::vector.3", align 8
  %7 = alloca %"class.dealii::RefinementCase.35", align 1
  %8 = alloca %"class.dealii::RefinementCase.35", align 1
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #25
  call void @_ZN6dealii10QProjectorILi3EE7reflectERKNS_10QuadratureILi2EEE(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %3, ptr noundef nonnull align 8 dereferenceable(128) %1)
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %4) #25
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(128) %1)
          to label %11 unwind label %9

9:                                                ; preds = %2
  %10 = landingpad { ptr, i32 }
          cleanup
  br label %821

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %12, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 1)
          to label %13 unwind label %79

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %14, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 2)
          to label %15 unwind label %79

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %16, ptr noundef nonnull align 8 dereferenceable(128) %1, i32 noundef 3)
          to label %17 unwind label %79

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  invoke void @_ZN6dealii10QuadratureILi2EEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(128) %18, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %19 unwind label %79

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %20, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 3)
          to label %21 unwind label %79

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %22, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 2)
          to label %23 unwind label %79

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  invoke void @_ZN6dealii10QProjectorILi3EE6rotateERKNS_10QuadratureILi2EEEj(ptr nonnull sret(%"class.dealii::Quadrature.8") align 8 %24, ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 1)
          to label %25 unwind label %79

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3
  %27 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !38
  %29 = load ptr, ptr %26, align 8, !tbaa !36
  %30 = ptrtoint ptr %28 to i64
  %31 = ptrtoint ptr %29 to i64
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %34 = mul i64 %33, 384
  %35 = and i64 %34, 4294967168
  %36 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %25
  %39 = mul nuw nsw i64 %35, 24
  %40 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %39) #22
          to label %41 unwind label %87

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %40, ptr %5, align 8, !tbaa !109
  store ptr %40, ptr %42, align 8, !tbaa !111
  %43 = getelementptr inbounds %"class.dealii::Point.22", ptr %40, i64 %35
  store ptr %43, ptr %36, align 8, !tbaa !110
  br label %44

44:                                               ; preds = %41, %25
  %45 = and i64 %33, 4294967295
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = mul nuw nsw i64 %45, 24
  %49 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %48) #22
          to label %50 unwind label %89

50:                                               ; preds = %47
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %49, i8 0, i64 %48, i1 false), !tbaa !33
  %51 = getelementptr i8, ptr %49, i64 %48
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi ptr [ null, %44 ], [ %49, %50 ]
  %54 = phi ptr [ null, %44 ], [ %51, %50 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %55 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 2
  br i1 %37, label %62, label %56

56:                                               ; preds = %52
  %57 = shl nuw nsw i64 %35, 3
  %58 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %57) #22
          to label %59 unwind label %91

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %58, ptr %6, align 8, !tbaa !36
  store ptr %58, ptr %60, align 8, !tbaa !38
  %61 = getelementptr inbounds double, ptr %58, i64 %35
  store ptr %61, ptr %55, align 8, !tbaa !37
  br label %62

62:                                               ; preds = %52, %59
  %63 = ptrtoint ptr %54 to i64
  %64 = ptrtoint ptr %53 to i64
  %65 = sub i64 %63, %64
  %66 = icmp sgt i64 %65, 0
  %67 = udiv exact i64 %65, 24
  %68 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  %70 = getelementptr i8, ptr %53, i64 -16
  %71 = getelementptr i8, ptr %53, i64 -16
  %72 = getelementptr i8, ptr %53, i64 -16
  br label %73

73:                                               ; preds = %62, %352
  %74 = phi i64 [ 0, %62 ], [ %353, %352 ]
  %75 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %74, i32 3
  %76 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %74, i32 3, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds [8 x %"class.dealii::Quadrature.8"], ptr %4, i64 0, i64 %74, i32 2
  br label %95

78:                                               ; preds = %352
  invoke void @_ZN6dealii10QuadratureILi3EEC2ERKSt6vectorINS_5PointILi3EEESaIS4_EERKS2_IdSaIdEE(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %586 unwind label %91

79:                                               ; preds = %23, %21, %19, %17, %15, %13, %11
  %80 = phi ptr [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ]
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %82

82:                                               ; preds = %79, %85
  %83 = phi ptr [ %80, %79 ], [ %84, %85 ]
  %84 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %83, i64 -1
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %84)
          to label %85 unwind label %838

85:                                               ; preds = %82
  %86 = icmp eq ptr %84, %4
  br i1 %86, label %821, label %82

87:                                               ; preds = %38
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %610

89:                                               ; preds = %47
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %610

91:                                               ; preds = %56, %78
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %593

93:                                               ; preds = %115
  %94 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %75, i64 0, i32 1
  br label %350

95:                                               ; preds = %73, %115
  %96 = phi i64 [ 0, %73 ], [ %118, %115 ]
  %97 = phi i32 [ 0, %73 ], [ %116, %115 ]
  %98 = shl nuw nsw i64 %96, 2
  %99 = and i64 %98, 9223372036854775800
  %100 = getelementptr i8, ptr %53, i64 %99
  %101 = and i32 %97, 1
  %102 = uitofp i32 %101 to double
  %103 = lshr i32 %97, 1
  %104 = zext i32 %103 to i64
  %105 = getelementptr i8, ptr %72, i64 %99
  %106 = icmp ult i32 %97, 6
  %107 = zext i32 %103 to i64
  %108 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE, i64 0, i64 %107
  %109 = zext i32 %103 to i64
  %110 = getelementptr inbounds [3 x i64], ptr @switch.table._ZN6dealii10QProjectorILi3EE23project_to_all_subfacesERKNS_10QuadratureILi2EEE.6, i64 0, i64 %109
  br label %111

111:                                              ; preds = %95, %124
  %112 = phi i32 [ 3, %95 ], [ %125, %124 ]
  %113 = trunc i32 %112 to i8
  %114 = and i8 %113, 3
  br label %119

115:                                              ; preds = %124
  %116 = add nuw nsw i32 %97, 1
  %117 = icmp eq i32 %116, 6
  %118 = add i64 %96, 1
  br i1 %117, label %93, label %95

119:                                              ; preds = %111, %344
  %120 = phi i32 [ %345, %344 ], [ 0, %111 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #25
  store i8 %114, ptr %7, align 1
  %121 = invoke noundef i32 @_ZN6dealii12GeometryInfoILi2EE10n_childrenERKNS_14RefinementCaseILi2EEE(ptr noundef nonnull align 1 dereferenceable(1) %7)
          to label %122 unwind label %127

122:                                              ; preds = %119
  %123 = icmp ult i32 %120, %121
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #25
  br i1 %123, label %129, label %124

124:                                              ; preds = %122
  %125 = add nsw i32 %112, -1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %115, label %111

127:                                              ; preds = %119
  %128 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #25
  br label %593

129:                                              ; preds = %122
  br i1 %106, label %130, label %133

130:                                              ; preds = %129
  %131 = load i64, ptr %108, align 8
  %132 = load i64, ptr %110, align 8
  br label %133

133:                                              ; preds = %130, %129
  %134 = phi i64 [ 4294967295, %129 ], [ %131, %130 ]
  %135 = phi i64 [ 4294967295, %129 ], [ %132, %130 ]
  switch i8 %114, label %151 [
    i8 1, label %136
    i8 2, label %140
    i8 3, label %144
  ]

136:                                              ; preds = %133
  %137 = and i32 %120, 1
  %138 = uitofp i32 %137 to double
  %139 = fmul double %138, 5.000000e-01
  br label %151

140:                                              ; preds = %133
  %141 = and i32 %120, 1
  %142 = uitofp i32 %141 to double
  %143 = fmul double %142, 5.000000e-01
  br label %151

144:                                              ; preds = %133
  %145 = and i32 %120, 1
  %146 = uitofp i32 %145 to double
  %147 = fmul double %146, 5.000000e-01
  %148 = lshr i32 %120, 1
  %149 = uitofp i32 %148 to double
  %150 = fmul double %149, 5.000000e-01
  br label %151

151:                                              ; preds = %144, %140, %136, %133
  %152 = phi double [ 1.000000e+00, %133 ], [ 5.000000e-01, %144 ], [ 1.000000e+00, %140 ], [ 5.000000e-01, %136 ]
  %153 = phi double [ 1.000000e+00, %133 ], [ 5.000000e-01, %144 ], [ 5.000000e-01, %140 ], [ 1.000000e+00, %136 ]
  %154 = phi double [ 0.000000e+00, %133 ], [ %147, %144 ], [ 0.000000e+00, %140 ], [ %139, %136 ]
  %155 = phi double [ 0.000000e+00, %133 ], [ %150, %144 ], [ %143, %140 ], [ 0.000000e+00, %136 ]
  %156 = load ptr, ptr %76, align 16, !tbaa !38
  %157 = load ptr, ptr %75, align 8, !tbaa !36
  %158 = ptrtoint ptr %156 to i64
  %159 = ptrtoint ptr %157 to i64
  %160 = sub i64 %158, %159
  %161 = and i64 %160, 34359738360
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %271, label %163

163:                                              ; preds = %151
  %164 = lshr exact i64 %160, 3
  %165 = load ptr, ptr %77, align 16, !tbaa !64
  %166 = and i64 %164, 4294967295
  %167 = icmp ult i64 %166, 84
  br i1 %167, label %255, label %168

168:                                              ; preds = %163
  %169 = shl nuw nsw i64 %135, 3
  %170 = getelementptr i8, ptr %53, i64 %169
  %171 = mul nuw nsw i64 %166, 24
  %172 = add nuw nsw i64 %171, %169
  %173 = getelementptr i8, ptr %70, i64 %172
  %174 = shl nuw nsw i64 %134, 3
  %175 = getelementptr i8, ptr %53, i64 %174
  %176 = add nuw nsw i64 %171, %174
  %177 = getelementptr i8, ptr %71, i64 %176
  %178 = getelementptr i8, ptr %105, i64 %171
  %179 = getelementptr i8, ptr %165, i64 -8
  %180 = shl nuw nsw i64 %166, 4
  %181 = getelementptr i8, ptr %179, i64 %180
  %182 = getelementptr i8, ptr %165, i64 8
  %183 = getelementptr i8, ptr %165, i64 %180
  %184 = icmp ult ptr %170, %177
  %185 = icmp ult ptr %175, %173
  %186 = and i1 %184, %185
  %187 = icmp ult ptr %170, %178
  %188 = icmp ult ptr %100, %173
  %189 = and i1 %187, %188
  %190 = or i1 %186, %189
  %191 = icmp ult ptr %170, %181
  %192 = icmp ult ptr %165, %173
  %193 = and i1 %191, %192
  %194 = or i1 %190, %193
  %195 = icmp ult ptr %170, %183
  %196 = icmp ult ptr %182, %173
  %197 = and i1 %195, %196
  %198 = or i1 %194, %197
  %199 = icmp ult ptr %175, %178
  %200 = icmp ult ptr %100, %177
  %201 = and i1 %199, %200
  %202 = or i1 %198, %201
  %203 = icmp ult ptr %175, %181
  %204 = icmp ult ptr %165, %177
  %205 = and i1 %203, %204
  %206 = or i1 %202, %205
  %207 = icmp ult ptr %175, %183
  %208 = icmp ult ptr %182, %177
  %209 = and i1 %207, %208
  %210 = or i1 %206, %209
  %211 = icmp ult ptr %100, %181
  %212 = icmp ult ptr %165, %178
  %213 = and i1 %211, %212
  %214 = or i1 %210, %213
  %215 = icmp ult ptr %100, %183
  %216 = icmp ult ptr %182, %178
  %217 = and i1 %215, %216
  %218 = or i1 %214, %217
  br i1 %218, label %255, label %219

219:                                              ; preds = %168
  %220 = and i64 %164, 1
  %221 = sub nsw i64 %166, %220
  %222 = insertelement <2 x double> poison, double %152, i64 0
  %223 = shufflevector <2 x double> %222, <2 x double> poison, <2 x i32> zeroinitializer
  %224 = insertelement <2 x double> poison, double %154, i64 0
  %225 = shufflevector <2 x double> %224, <2 x double> poison, <2 x i32> zeroinitializer
  %226 = insertelement <2 x double> poison, double %153, i64 0
  %227 = shufflevector <2 x double> %226, <2 x double> poison, <2 x i32> zeroinitializer
  %228 = insertelement <2 x double> poison, double %155, i64 0
  %229 = shufflevector <2 x double> %228, <2 x double> poison, <2 x i32> zeroinitializer
  br label %230

230:                                              ; preds = %230, %219
  %231 = phi i64 [ 0, %219 ], [ %251, %230 ]
  %232 = or i64 %231, 1
  %233 = getelementptr inbounds %"class.dealii::Point.14", ptr %165, i64 %231
  %234 = load <4 x double>, ptr %233, align 8, !tbaa !33
  %235 = shufflevector <4 x double> %234, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %236 = shufflevector <4 x double> %234, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %237 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %223, <2 x double> %235, <2 x double> %225)
  %238 = getelementptr inbounds %"class.dealii::Point.22", ptr %53, i64 %231
  %239 = getelementptr inbounds %"class.dealii::Point.22", ptr %53, i64 %232
  %240 = getelementptr inbounds [3 x double], ptr %238, i64 0, i64 %135
  %241 = getelementptr inbounds [3 x double], ptr %239, i64 0, i64 %135
  %242 = extractelement <2 x double> %237, i64 0
  store double %242, ptr %240, align 8, !tbaa !33, !alias.scope !587, !noalias !590
  %243 = extractelement <2 x double> %237, i64 1
  store double %243, ptr %241, align 8, !tbaa !33, !alias.scope !587, !noalias !590
  %244 = call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %227, <2 x double> %236, <2 x double> %229)
  %245 = getelementptr inbounds [3 x double], ptr %238, i64 0, i64 %134
  %246 = getelementptr inbounds [3 x double], ptr %239, i64 0, i64 %134
  %247 = extractelement <2 x double> %244, i64 0
  store double %247, ptr %245, align 8, !tbaa !33, !alias.scope !595, !noalias !596
  %248 = extractelement <2 x double> %244, i64 1
  store double %248, ptr %246, align 8, !tbaa !33, !alias.scope !595, !noalias !596
  %249 = getelementptr inbounds [3 x double], ptr %238, i64 0, i64 %104
  %250 = getelementptr inbounds [3 x double], ptr %239, i64 0, i64 %104
  store double %102, ptr %249, align 8, !tbaa !33, !alias.scope !597, !noalias !598
  store double %102, ptr %250, align 8, !tbaa !33, !alias.scope !597, !noalias !598
  %251 = add nuw i64 %231, 2
  %252 = icmp eq i64 %251, %221
  br i1 %252, label %253, label %230, !llvm.loop !599

253:                                              ; preds = %230
  %254 = icmp eq i64 %220, 0
  br i1 %254, label %271, label %255

255:                                              ; preds = %168, %163, %253
  %256 = phi i64 [ 0, %168 ], [ 0, %163 ], [ %221, %253 ]
  br label %257

257:                                              ; preds = %255, %257
  %258 = phi i64 [ %269, %257 ], [ %256, %255 ]
  %259 = getelementptr inbounds %"class.dealii::Point.14", ptr %165, i64 %258
  %260 = load double, ptr %259, align 8, !tbaa !33
  %261 = call double @llvm.fmuladd.f64(double %152, double %260, double %154)
  %262 = getelementptr inbounds %"class.dealii::Point.22", ptr %53, i64 %258
  %263 = getelementptr inbounds [3 x double], ptr %262, i64 0, i64 %135
  store double %261, ptr %263, align 8, !tbaa !33
  %264 = getelementptr inbounds [2 x double], ptr %259, i64 0, i64 1
  %265 = load double, ptr %264, align 8, !tbaa !33
  %266 = call double @llvm.fmuladd.f64(double %153, double %265, double %155)
  %267 = getelementptr inbounds [3 x double], ptr %262, i64 0, i64 %134
  store double %266, ptr %267, align 8, !tbaa !33
  %268 = getelementptr inbounds [3 x double], ptr %262, i64 0, i64 %104
  store double %102, ptr %268, align 8, !tbaa !33
  %269 = add nuw nsw i64 %258, 1
  %270 = icmp eq i64 %269, %166
  br i1 %270, label %271, label %257, !llvm.loop !600

271:                                              ; preds = %257, %253, %151
  br i1 %66, label %272, label %344

272:                                              ; preds = %271
  %273 = load ptr, ptr %68, align 8, !tbaa !40
  %274 = load ptr, ptr %36, align 8, !tbaa !110
  br label %275

275:                                              ; preds = %272, %338
  %276 = phi ptr [ %339, %338 ], [ %274, %272 ]
  %277 = phi ptr [ %340, %338 ], [ %273, %272 ]
  %278 = phi i64 [ %342, %338 ], [ %67, %272 ]
  %279 = phi ptr [ %341, %338 ], [ %53, %272 ]
  %280 = icmp eq ptr %277, %276
  br i1 %280, label %290, label %281

281:                                              ; preds = %275
  %282 = load double, ptr %279, align 8, !tbaa !33
  store double %282, ptr %277, align 8, !tbaa !33
  %283 = getelementptr inbounds [3 x double], ptr %279, i64 0, i64 1
  %284 = load double, ptr %283, align 8, !tbaa !33
  %285 = getelementptr inbounds [3 x double], ptr %277, i64 0, i64 1
  store double %284, ptr %285, align 8, !tbaa !33
  %286 = getelementptr inbounds [3 x double], ptr %279, i64 0, i64 2
  %287 = load double, ptr %286, align 8, !tbaa !33
  %288 = getelementptr inbounds [3 x double], ptr %277, i64 0, i64 2
  store double %287, ptr %288, align 8, !tbaa !33
  %289 = getelementptr inbounds %"class.dealii::Point.22", ptr %277, i64 1
  store ptr %289, ptr %68, align 8, !tbaa !111
  br label %338

290:                                              ; preds = %275
  %291 = load ptr, ptr %5, align 8, !tbaa !40
  %292 = ptrtoint ptr %276 to i64
  %293 = ptrtoint ptr %291 to i64
  %294 = sub i64 %292, %293
  %295 = icmp eq i64 %294, 9223372036854775800
  br i1 %295, label %296, label %298

296:                                              ; preds = %290
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %297 unwind label %348

297:                                              ; preds = %296
  unreachable

298:                                              ; preds = %290
  %299 = sdiv exact i64 %294, 24
  %300 = call i64 @llvm.umax.i64(i64 %299, i64 1)
  %301 = add i64 %300, %299
  %302 = icmp ult i64 %301, %299
  %303 = icmp ugt i64 %301, 384307168202282325
  %304 = or i1 %302, %303
  %305 = select i1 %304, i64 384307168202282325, i64 %301
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %298
  %308 = mul nuw nsw i64 %305, 24
  %309 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %308) #22
          to label %310 unwind label %346

310:                                              ; preds = %307, %298
  %311 = phi ptr [ null, %298 ], [ %309, %307 ]
  %312 = getelementptr inbounds %"class.dealii::Point.22", ptr %311, i64 %299
  %313 = load <2 x double>, ptr %279, align 8, !tbaa !33
  store <2 x double> %313, ptr %312, align 8, !tbaa !33
  %314 = getelementptr inbounds [3 x double], ptr %279, i64 0, i64 2
  %315 = load double, ptr %314, align 8, !tbaa !33
  %316 = getelementptr inbounds [3 x double], ptr %312, i64 0, i64 2
  store double %315, ptr %316, align 8, !tbaa !33
  %317 = icmp eq ptr %291, %276
  br i1 %317, label %331, label %318

318:                                              ; preds = %310, %318
  %319 = phi ptr [ %329, %318 ], [ %311, %310 ]
  %320 = phi ptr [ %328, %318 ], [ %291, %310 ]
  %321 = load double, ptr %320, align 8, !tbaa !33
  store double %321, ptr %319, align 8, !tbaa !33
  %322 = getelementptr inbounds [3 x double], ptr %320, i64 0, i64 1
  %323 = load double, ptr %322, align 8, !tbaa !33
  %324 = getelementptr inbounds [3 x double], ptr %319, i64 0, i64 1
  store double %323, ptr %324, align 8, !tbaa !33
  %325 = getelementptr inbounds [3 x double], ptr %320, i64 0, i64 2
  %326 = load double, ptr %325, align 8, !tbaa !33
  %327 = getelementptr inbounds [3 x double], ptr %319, i64 0, i64 2
  store double %326, ptr %327, align 8, !tbaa !33
  %328 = getelementptr inbounds %"class.dealii::Point.22", ptr %320, i64 1
  %329 = getelementptr inbounds %"class.dealii::Point.22", ptr %319, i64 1
  %330 = icmp eq ptr %328, %276
  br i1 %330, label %331, label %318

331:                                              ; preds = %318, %310
  %332 = phi ptr [ %311, %310 ], [ %329, %318 ]
  %333 = getelementptr inbounds %"class.dealii::Point.22", ptr %332, i64 1
  %334 = icmp eq ptr %291, null
  br i1 %334, label %336, label %335

335:                                              ; preds = %331
  call void @_ZdlPv(ptr noundef nonnull %291) #23
  br label %336

336:                                              ; preds = %335, %331
  store ptr %311, ptr %5, align 8, !tbaa !109
  store ptr %333, ptr %68, align 8, !tbaa !111
  %337 = getelementptr inbounds %"class.dealii::Point.22", ptr %311, i64 %305
  store ptr %337, ptr %36, align 8, !tbaa !110
  br label %338

338:                                              ; preds = %336, %281
  %339 = phi ptr [ %337, %336 ], [ %276, %281 ]
  %340 = phi ptr [ %333, %336 ], [ %289, %281 ]
  %341 = getelementptr inbounds %"class.dealii::Point.22", ptr %279, i64 1
  %342 = add nsw i64 %278, -1
  %343 = icmp sgt i64 %278, 1
  br i1 %343, label %275, label %344

344:                                              ; preds = %338, %271
  %345 = add i32 %120, 1
  br label %119

346:                                              ; preds = %307
  %347 = landingpad { ptr, i32 }
          cleanup
  br label %593

348:                                              ; preds = %296
  %349 = landingpad { ptr, i32 }
          cleanup
  br label %593

350:                                              ; preds = %93, %435
  %351 = phi i32 [ 0, %93 ], [ %436, %435 ]
  br label %355

352:                                              ; preds = %435
  %353 = add nuw nsw i64 %74, 1
  %354 = icmp eq i64 %353, 8
  br i1 %354, label %78, label %73

355:                                              ; preds = %350, %576
  %356 = phi i32 [ %577, %576 ], [ 0, %350 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #25
  store i8 3, ptr %8, align 1
  %357 = invoke noundef i32 @_ZN6dealii12GeometryInfoILi2EE10n_childrenERKNS_14RefinementCaseILi2EEE(ptr noundef nonnull align 1 dereferenceable(1) %8)
          to label %358 unwind label %503

358:                                              ; preds = %355
  %359 = icmp ult i32 %356, %357
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #25
  br i1 %359, label %511, label %360

360:                                              ; preds = %358, %428
  %361 = phi i32 [ %429, %428 ], [ 0, %358 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #25
  store i8 2, ptr %8, align 1
  %362 = invoke noundef i32 @_ZN6dealii12GeometryInfoILi2EE10n_childrenERKNS_14RefinementCaseILi2EEE(ptr noundef nonnull align 1 dereferenceable(1) %8)
          to label %363 unwind label %505

363:                                              ; preds = %360
  %364 = icmp ult i32 %361, %362
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #25
  br i1 %364, label %365, label %430

365:                                              ; preds = %363
  %366 = load ptr, ptr %75, align 8, !tbaa !40
  %367 = load ptr, ptr %94, align 16, !tbaa !40
  %368 = ptrtoint ptr %367 to i64
  %369 = ptrtoint ptr %366 to i64
  %370 = sub i64 %368, %369
  %371 = icmp sgt i64 %370, 0
  br i1 %371, label %372, label %428

372:                                              ; preds = %365
  %373 = lshr exact i64 %370, 3
  %374 = load ptr, ptr %69, align 8, !tbaa !40
  %375 = load ptr, ptr %55, align 8, !tbaa !37
  br label %376

376:                                              ; preds = %422, %372
  %377 = phi ptr [ %375, %372 ], [ %423, %422 ]
  %378 = phi ptr [ %374, %372 ], [ %424, %422 ]
  %379 = phi i64 [ %373, %372 ], [ %426, %422 ]
  %380 = phi ptr [ %366, %372 ], [ %425, %422 ]
  %381 = icmp eq ptr %378, %377
  br i1 %381, label %385, label %382

382:                                              ; preds = %376
  %383 = load double, ptr %380, align 8, !tbaa !33
  store double %383, ptr %378, align 8, !tbaa !33
  %384 = getelementptr inbounds double, ptr %378, i64 1
  store ptr %384, ptr %69, align 8, !tbaa !38
  br label %422

385:                                              ; preds = %376
  %386 = load ptr, ptr %6, align 8, !tbaa !40
  %387 = ptrtoint ptr %377 to i64
  %388 = ptrtoint ptr %386 to i64
  %389 = sub i64 %387, %388
  %390 = icmp eq i64 %389, 9223372036854775800
  br i1 %390, label %537, label %391

391:                                              ; preds = %385
  %392 = ashr exact i64 %389, 3
  %393 = call i64 @llvm.umax.i64(i64 %392, i64 1)
  %394 = add i64 %393, %392
  %395 = icmp ult i64 %394, %392
  %396 = icmp ugt i64 %394, 1152921504606846975
  %397 = or i1 %395, %396
  %398 = select i1 %397, i64 1152921504606846975, i64 %394
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %391
  %401 = shl nuw nsw i64 %398, 3
  %402 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %401) #22
          to label %403 unwind label %580

403:                                              ; preds = %400, %391
  %404 = phi ptr [ null, %391 ], [ %402, %400 ]
  %405 = getelementptr inbounds double, ptr %404, i64 %392
  %406 = load double, ptr %380, align 8, !tbaa !33
  store double %406, ptr %405, align 8, !tbaa !33
  %407 = icmp sgt i64 %389, 8
  br i1 %407, label %413, label %408, !prof !45

408:                                              ; preds = %403
  %409 = icmp eq i64 %389, 8
  br i1 %409, label %410, label %414

410:                                              ; preds = %408
  %411 = load double, ptr %386, align 8, !tbaa !33
  store double %411, ptr %404, align 8, !tbaa !33
  %412 = getelementptr inbounds double, ptr %405, i64 1
  br label %417

413:                                              ; preds = %403
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %404, ptr align 8 %386, i64 %389, i1 false)
  br label %414

414:                                              ; preds = %413, %408
  %415 = getelementptr inbounds double, ptr %405, i64 1
  %416 = icmp eq ptr %386, null
  br i1 %416, label %419, label %417

417:                                              ; preds = %414, %410
  %418 = phi ptr [ %412, %410 ], [ %415, %414 ]
  call void @_ZdlPv(ptr noundef nonnull %386) #23
  br label %419

419:                                              ; preds = %417, %414
  %420 = phi ptr [ %415, %414 ], [ %418, %417 ]
  store ptr %404, ptr %6, align 8, !tbaa !36
  store ptr %420, ptr %69, align 8, !tbaa !38
  %421 = getelementptr inbounds double, ptr %404, i64 %398
  store ptr %421, ptr %55, align 8, !tbaa !37
  br label %422

422:                                              ; preds = %419, %382
  %423 = phi ptr [ %421, %419 ], [ %377, %382 ]
  %424 = phi ptr [ %420, %419 ], [ %384, %382 ]
  %425 = getelementptr inbounds double, ptr %380, i64 1
  %426 = add nsw i64 %379, -1
  %427 = icmp sgt i64 %379, 1
  br i1 %427, label %376, label %428

428:                                              ; preds = %422, %365
  %429 = add i32 %361, 1
  br label %360

430:                                              ; preds = %363, %501
  %431 = phi i32 [ %502, %501 ], [ 0, %363 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #25
  store i8 1, ptr %8, align 1
  %432 = invoke noundef i32 @_ZN6dealii12GeometryInfoILi2EE10n_childrenERKNS_14RefinementCaseILi2EEE(ptr noundef nonnull align 1 dereferenceable(1) %8)
          to label %433 unwind label %507

433:                                              ; preds = %430
  %434 = icmp ult i32 %431, %432
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #25
  br i1 %434, label %438, label %435

435:                                              ; preds = %433
  %436 = add nuw nsw i32 %351, 1
  %437 = icmp eq i32 %436, 6
  br i1 %437, label %352, label %350

438:                                              ; preds = %433
  %439 = load ptr, ptr %75, align 8, !tbaa !40
  %440 = load ptr, ptr %94, align 16, !tbaa !40
  %441 = ptrtoint ptr %440 to i64
  %442 = ptrtoint ptr %439 to i64
  %443 = sub i64 %441, %442
  %444 = icmp sgt i64 %443, 0
  br i1 %444, label %445, label %501

445:                                              ; preds = %438
  %446 = lshr exact i64 %443, 3
  %447 = load ptr, ptr %69, align 8, !tbaa !40
  %448 = load ptr, ptr %55, align 8, !tbaa !37
  br label %449

449:                                              ; preds = %495, %445
  %450 = phi ptr [ %448, %445 ], [ %496, %495 ]
  %451 = phi ptr [ %447, %445 ], [ %497, %495 ]
  %452 = phi i64 [ %446, %445 ], [ %499, %495 ]
  %453 = phi ptr [ %439, %445 ], [ %498, %495 ]
  %454 = icmp eq ptr %451, %450
  br i1 %454, label %458, label %455

455:                                              ; preds = %449
  %456 = load double, ptr %453, align 8, !tbaa !33
  store double %456, ptr %451, align 8, !tbaa !33
  %457 = getelementptr inbounds double, ptr %451, i64 1
  store ptr %457, ptr %69, align 8, !tbaa !38
  br label %495

458:                                              ; preds = %449
  %459 = load ptr, ptr %6, align 8, !tbaa !40
  %460 = ptrtoint ptr %450 to i64
  %461 = ptrtoint ptr %459 to i64
  %462 = sub i64 %460, %461
  %463 = icmp eq i64 %462, 9223372036854775800
  br i1 %463, label %537, label %464

464:                                              ; preds = %458
  %465 = ashr exact i64 %462, 3
  %466 = call i64 @llvm.umax.i64(i64 %465, i64 1)
  %467 = add i64 %466, %465
  %468 = icmp ult i64 %467, %465
  %469 = icmp ugt i64 %467, 1152921504606846975
  %470 = or i1 %468, %469
  %471 = select i1 %470, i64 1152921504606846975, i64 %467
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %476, label %473

473:                                              ; preds = %464
  %474 = shl nuw nsw i64 %471, 3
  %475 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %474) #22
          to label %476 unwind label %582

476:                                              ; preds = %473, %464
  %477 = phi ptr [ null, %464 ], [ %475, %473 ]
  %478 = getelementptr inbounds double, ptr %477, i64 %465
  %479 = load double, ptr %453, align 8, !tbaa !33
  store double %479, ptr %478, align 8, !tbaa !33
  %480 = icmp sgt i64 %462, 8
  br i1 %480, label %486, label %481, !prof !45

481:                                              ; preds = %476
  %482 = icmp eq i64 %462, 8
  br i1 %482, label %483, label %487

483:                                              ; preds = %481
  %484 = load double, ptr %459, align 8, !tbaa !33
  store double %484, ptr %477, align 8, !tbaa !33
  %485 = getelementptr inbounds double, ptr %478, i64 1
  br label %490

486:                                              ; preds = %476
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %477, ptr align 8 %459, i64 %462, i1 false)
  br label %487

487:                                              ; preds = %486, %481
  %488 = getelementptr inbounds double, ptr %478, i64 1
  %489 = icmp eq ptr %459, null
  br i1 %489, label %492, label %490

490:                                              ; preds = %487, %483
  %491 = phi ptr [ %485, %483 ], [ %488, %487 ]
  call void @_ZdlPv(ptr noundef nonnull %459) #23
  br label %492

492:                                              ; preds = %490, %487
  %493 = phi ptr [ %488, %487 ], [ %491, %490 ]
  store ptr %477, ptr %6, align 8, !tbaa !36
  store ptr %493, ptr %69, align 8, !tbaa !38
  %494 = getelementptr inbounds double, ptr %477, i64 %471
  store ptr %494, ptr %55, align 8, !tbaa !37
  br label %495

495:                                              ; preds = %492, %455
  %496 = phi ptr [ %494, %492 ], [ %450, %455 ]
  %497 = phi ptr [ %493, %492 ], [ %457, %455 ]
  %498 = getelementptr inbounds double, ptr %453, i64 1
  %499 = add nsw i64 %452, -1
  %500 = icmp sgt i64 %452, 1
  br i1 %500, label %449, label %501

501:                                              ; preds = %495, %438
  %502 = add i32 %431, 1
  br label %430

503:                                              ; preds = %355
  %504 = landingpad { ptr, i32 }
          cleanup
  br label %509

505:                                              ; preds = %360
  %506 = landingpad { ptr, i32 }
          cleanup
  br label %509

507:                                              ; preds = %430
  %508 = landingpad { ptr, i32 }
          cleanup
  br label %509

509:                                              ; preds = %505, %507, %503
  %510 = phi { ptr, i32 } [ %504, %503 ], [ %506, %505 ], [ %508, %507 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #25
  br label %593

511:                                              ; preds = %358
  %512 = load ptr, ptr %75, align 8, !tbaa !40
  %513 = load ptr, ptr %94, align 16, !tbaa !40
  %514 = ptrtoint ptr %513 to i64
  %515 = ptrtoint ptr %512 to i64
  %516 = sub i64 %514, %515
  %517 = icmp sgt i64 %516, 0
  br i1 %517, label %518, label %576

518:                                              ; preds = %511
  %519 = lshr exact i64 %516, 3
  %520 = load ptr, ptr %69, align 8, !tbaa !40
  %521 = load ptr, ptr %55, align 8, !tbaa !37
  br label %522

522:                                              ; preds = %570, %518
  %523 = phi ptr [ %521, %518 ], [ %571, %570 ]
  %524 = phi ptr [ %520, %518 ], [ %572, %570 ]
  %525 = phi i64 [ %519, %518 ], [ %574, %570 ]
  %526 = phi ptr [ %512, %518 ], [ %573, %570 ]
  %527 = icmp eq ptr %524, %523
  br i1 %527, label %531, label %528

528:                                              ; preds = %522
  %529 = load double, ptr %526, align 8, !tbaa !33
  store double %529, ptr %524, align 8, !tbaa !33
  %530 = getelementptr inbounds double, ptr %524, i64 1
  store ptr %530, ptr %69, align 8, !tbaa !38
  br label %570

531:                                              ; preds = %522
  %532 = load ptr, ptr %6, align 8, !tbaa !40
  %533 = ptrtoint ptr %523 to i64
  %534 = ptrtoint ptr %532 to i64
  %535 = sub i64 %533, %534
  %536 = icmp eq i64 %535, 9223372036854775800
  br i1 %536, label %537, label %539

537:                                              ; preds = %531, %385, %458
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.3) #26
          to label %538 unwind label %584

538:                                              ; preds = %537
  unreachable

539:                                              ; preds = %531
  %540 = ashr exact i64 %535, 3
  %541 = call i64 @llvm.umax.i64(i64 %540, i64 1)
  %542 = add i64 %541, %540
  %543 = icmp ult i64 %542, %540
  %544 = icmp ugt i64 %542, 1152921504606846975
  %545 = or i1 %543, %544
  %546 = select i1 %545, i64 1152921504606846975, i64 %542
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %551, label %548

548:                                              ; preds = %539
  %549 = shl nuw nsw i64 %546, 3
  %550 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %549) #22
          to label %551 unwind label %578

551:                                              ; preds = %548, %539
  %552 = phi ptr [ null, %539 ], [ %550, %548 ]
  %553 = getelementptr inbounds double, ptr %552, i64 %540
  %554 = load double, ptr %526, align 8, !tbaa !33
  store double %554, ptr %553, align 8, !tbaa !33
  %555 = icmp sgt i64 %535, 8
  br i1 %555, label %556, label %557, !prof !45

556:                                              ; preds = %551
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %552, ptr align 8 %532, i64 %535, i1 false)
  br label %562

557:                                              ; preds = %551
  %558 = icmp eq i64 %535, 8
  br i1 %558, label %559, label %562

559:                                              ; preds = %557
  %560 = load double, ptr %532, align 8, !tbaa !33
  store double %560, ptr %552, align 8, !tbaa !33
  %561 = getelementptr inbounds double, ptr %553, i64 1
  br label %565

562:                                              ; preds = %557, %556
  %563 = getelementptr inbounds double, ptr %553, i64 1
  %564 = icmp eq ptr %532, null
  br i1 %564, label %567, label %565

565:                                              ; preds = %559, %562
  %566 = phi ptr [ %561, %559 ], [ %563, %562 ]
  call void @_ZdlPv(ptr noundef nonnull %532) #23
  br label %567

567:                                              ; preds = %565, %562
  %568 = phi ptr [ %563, %562 ], [ %566, %565 ]
  store ptr %552, ptr %6, align 8, !tbaa !36
  store ptr %568, ptr %69, align 8, !tbaa !38
  %569 = getelementptr inbounds double, ptr %552, i64 %546
  store ptr %569, ptr %55, align 8, !tbaa !37
  br label %570

570:                                              ; preds = %567, %528
  %571 = phi ptr [ %569, %567 ], [ %523, %528 ]
  %572 = phi ptr [ %568, %567 ], [ %530, %528 ]
  %573 = getelementptr inbounds double, ptr %526, i64 1
  %574 = add nsw i64 %525, -1
  %575 = icmp sgt i64 %525, 1
  br i1 %575, label %522, label %576

576:                                              ; preds = %570, %511
  %577 = add i32 %356, 1
  br label %355

578:                                              ; preds = %548
  %579 = landingpad { ptr, i32 }
          cleanup
  br label %593

580:                                              ; preds = %400
  %581 = landingpad { ptr, i32 }
          cleanup
  br label %593

582:                                              ; preds = %473
  %583 = landingpad { ptr, i32 }
          cleanup
  br label %593

584:                                              ; preds = %537
  %585 = landingpad { ptr, i32 }
          cleanup
  br label %593

586:                                              ; preds = %78
  %587 = load ptr, ptr %6, align 8, !tbaa !36
  %588 = icmp eq ptr %587, null
  br i1 %588, label %590, label %589

589:                                              ; preds = %586
  call void @_ZdlPv(ptr noundef nonnull %587) #23
  br label %590

590:                                              ; preds = %589, %586
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %591 = icmp eq ptr %53, null
  br i1 %591, label %601, label %592

592:                                              ; preds = %590
  call void @_ZdlPv(ptr noundef nonnull %53) #23
  br label %601

593:                                              ; preds = %578, %582, %580, %584, %346, %348, %127, %509, %91
  %594 = phi { ptr, i32 } [ %92, %91 ], [ %128, %127 ], [ %510, %509 ], [ %347, %346 ], [ %349, %348 ], [ %585, %584 ], [ %579, %578 ], [ %581, %580 ], [ %583, %582 ]
  %595 = load ptr, ptr %6, align 8, !tbaa !36
  %596 = icmp eq ptr %595, null
  br i1 %596, label %598, label %597

597:                                              ; preds = %593
  call void @_ZdlPv(ptr noundef nonnull %595) #23
  br label %598

598:                                              ; preds = %597, %593
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #25
  %599 = icmp eq ptr %53, null
  br i1 %599, label %610, label %600

600:                                              ; preds = %598
  call void @_ZdlPv(ptr noundef nonnull %53) #23
  br label %610

601:                                              ; preds = %592, %590
  %602 = load ptr, ptr %5, align 8, !tbaa !109
  %603 = icmp eq ptr %602, null
  br i1 %603, label %605, label %604

604:                                              ; preds = %601
  call void @_ZdlPv(ptr noundef nonnull %602) #23
  br label %605

605:                                              ; preds = %604, %601
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %606 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %606, align 16, !tbaa !5
  %607 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 3
  %608 = load ptr, ptr %607, align 8, !tbaa !36
  %609 = icmp eq ptr %608, null
  br i1 %609, label %621, label %620

610:                                              ; preds = %89, %598, %600, %87
  %611 = phi { ptr, i32 } [ %88, %87 ], [ %90, %89 ], [ %594, %598 ], [ %594, %600 ]
  %612 = load ptr, ptr %5, align 8, !tbaa !109
  %613 = icmp eq ptr %612, null
  br i1 %613, label %615, label %614

614:                                              ; preds = %610
  call void @_ZdlPv(ptr noundef nonnull %612) #23
  br label %615

615:                                              ; preds = %614, %610
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #25
  %616 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %616, align 16, !tbaa !5
  %617 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 3
  %618 = load ptr, ptr %617, align 8, !tbaa !36
  %619 = icmp eq ptr %618, null
  br i1 %619, label %732, label %731

620:                                              ; preds = %605
  call void @_ZdlPv(ptr noundef nonnull %608) #23
  br label %621

621:                                              ; preds = %620, %605
  %622 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 2
  %623 = load ptr, ptr %622, align 16, !tbaa !64
  %624 = icmp eq ptr %623, null
  br i1 %624, label %626, label %625

625:                                              ; preds = %621
  call void @_ZdlPv(ptr noundef nonnull %623) #23
  br label %626

626:                                              ; preds = %625, %621
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %606)
          to label %627 unwind label %721

627:                                              ; preds = %626
  %628 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %628, align 16, !tbaa !5
  %629 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 3
  %630 = load ptr, ptr %629, align 8, !tbaa !36
  %631 = icmp eq ptr %630, null
  br i1 %631, label %633, label %632

632:                                              ; preds = %627
  call void @_ZdlPv(ptr noundef nonnull %630) #23
  br label %633

633:                                              ; preds = %632, %627
  %634 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 2
  %635 = load ptr, ptr %634, align 16, !tbaa !64
  %636 = icmp eq ptr %635, null
  br i1 %636, label %638, label %637

637:                                              ; preds = %633
  call void @_ZdlPv(ptr noundef nonnull %635) #23
  br label %638

638:                                              ; preds = %637, %633
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %628)
          to label %639 unwind label %721

639:                                              ; preds = %638
  %640 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %640, align 16, !tbaa !5
  %641 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 3
  %642 = load ptr, ptr %641, align 8, !tbaa !36
  %643 = icmp eq ptr %642, null
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  call void @_ZdlPv(ptr noundef nonnull %642) #23
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 2
  %647 = load ptr, ptr %646, align 16, !tbaa !64
  %648 = icmp eq ptr %647, null
  br i1 %648, label %650, label %649

649:                                              ; preds = %645
  call void @_ZdlPv(ptr noundef nonnull %647) #23
  br label %650

650:                                              ; preds = %649, %645
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %640)
          to label %651 unwind label %721

651:                                              ; preds = %650
  %652 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %652, align 16, !tbaa !5
  %653 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 3
  %654 = load ptr, ptr %653, align 8, !tbaa !36
  %655 = icmp eq ptr %654, null
  br i1 %655, label %657, label %656

656:                                              ; preds = %651
  call void @_ZdlPv(ptr noundef nonnull %654) #23
  br label %657

657:                                              ; preds = %656, %651
  %658 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 2
  %659 = load ptr, ptr %658, align 16, !tbaa !64
  %660 = icmp eq ptr %659, null
  br i1 %660, label %662, label %661

661:                                              ; preds = %657
  call void @_ZdlPv(ptr noundef nonnull %659) #23
  br label %662

662:                                              ; preds = %661, %657
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %652)
          to label %663 unwind label %721

663:                                              ; preds = %662
  %664 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %664, align 16, !tbaa !5
  %665 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 3
  %666 = load ptr, ptr %665, align 8, !tbaa !36
  %667 = icmp eq ptr %666, null
  br i1 %667, label %669, label %668

668:                                              ; preds = %663
  call void @_ZdlPv(ptr noundef nonnull %666) #23
  br label %669

669:                                              ; preds = %668, %663
  %670 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 2
  %671 = load ptr, ptr %670, align 16, !tbaa !64
  %672 = icmp eq ptr %671, null
  br i1 %672, label %674, label %673

673:                                              ; preds = %669
  call void @_ZdlPv(ptr noundef nonnull %671) #23
  br label %674

674:                                              ; preds = %673, %669
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %664)
          to label %675 unwind label %721

675:                                              ; preds = %674
  %676 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %676, align 16, !tbaa !5
  %677 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 3
  %678 = load ptr, ptr %677, align 8, !tbaa !36
  %679 = icmp eq ptr %678, null
  br i1 %679, label %681, label %680

680:                                              ; preds = %675
  call void @_ZdlPv(ptr noundef nonnull %678) #23
  br label %681

681:                                              ; preds = %680, %675
  %682 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 2
  %683 = load ptr, ptr %682, align 16, !tbaa !64
  %684 = icmp eq ptr %683, null
  br i1 %684, label %686, label %685

685:                                              ; preds = %681
  call void @_ZdlPv(ptr noundef nonnull %683) #23
  br label %686

686:                                              ; preds = %685, %681
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %676)
          to label %687 unwind label %721

687:                                              ; preds = %686
  %688 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %688, align 16, !tbaa !5
  %689 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 3
  %690 = load ptr, ptr %689, align 8, !tbaa !36
  %691 = icmp eq ptr %690, null
  br i1 %691, label %693, label %692

692:                                              ; preds = %687
  call void @_ZdlPv(ptr noundef nonnull %690) #23
  br label %693

693:                                              ; preds = %692, %687
  %694 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 2
  %695 = load ptr, ptr %694, align 16, !tbaa !64
  %696 = icmp eq ptr %695, null
  br i1 %696, label %698, label %697

697:                                              ; preds = %693
  call void @_ZdlPv(ptr noundef nonnull %695) #23
  br label %698

698:                                              ; preds = %697, %693
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %688)
          to label %699 unwind label %721

699:                                              ; preds = %698
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 16, !tbaa !5
  %700 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 3
  %701 = load ptr, ptr %700, align 8, !tbaa !36
  %702 = icmp eq ptr %701, null
  br i1 %702, label %704, label %703

703:                                              ; preds = %699
  call void @_ZdlPv(ptr noundef nonnull %701) #23
  br label %704

704:                                              ; preds = %703, %699
  %705 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 2
  %706 = load ptr, ptr %705, align 16, !tbaa !64
  %707 = icmp eq ptr %706, null
  br i1 %707, label %709, label %708

708:                                              ; preds = %704
  call void @_ZdlPv(ptr noundef nonnull %706) #23
  br label %709

709:                                              ; preds = %708, %704
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %710 unwind label %724

710:                                              ; preds = %709
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %4) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  %711 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 3
  %712 = load ptr, ptr %711, align 8, !tbaa !36
  %713 = icmp eq ptr %712, null
  br i1 %713, label %715, label %714

714:                                              ; preds = %710
  call void @_ZdlPv(ptr noundef nonnull %712) #23
  br label %715

715:                                              ; preds = %714, %710
  %716 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 2
  %717 = load ptr, ptr %716, align 8, !tbaa !64
  %718 = icmp eq ptr %717, null
  br i1 %718, label %720, label %719

719:                                              ; preds = %715
  call void @_ZdlPv(ptr noundef nonnull %717) #23
  br label %720

720:                                              ; preds = %715, %719
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #25
  ret void

721:                                              ; preds = %626, %638, %650, %662, %674, %686, %698
  %722 = phi ptr [ %688, %698 ], [ %676, %686 ], [ %664, %674 ], [ %652, %662 ], [ %640, %650 ], [ %628, %638 ], [ %606, %626 ]
  %723 = landingpad { ptr, i32 }
          cleanup
  br label %726

724:                                              ; preds = %709
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %821

726:                                              ; preds = %721, %729
  %727 = phi ptr [ %728, %729 ], [ %722, %721 ]
  %728 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %727, i64 -1
  invoke void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %728)
          to label %729 unwind label %836

729:                                              ; preds = %726
  %730 = icmp eq ptr %728, %4
  br i1 %730, label %821, label %726

731:                                              ; preds = %615
  call void @_ZdlPv(ptr noundef nonnull %618) #23
  br label %732

732:                                              ; preds = %731, %615
  %733 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 7, i32 2
  %734 = load ptr, ptr %733, align 16, !tbaa !64
  %735 = icmp eq ptr %734, null
  br i1 %735, label %737, label %736

736:                                              ; preds = %732
  call void @_ZdlPv(ptr noundef nonnull %734) #23
  br label %737

737:                                              ; preds = %736, %732
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %616)
          to label %738 unwind label %834

738:                                              ; preds = %737
  %739 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %739, align 16, !tbaa !5
  %740 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 3
  %741 = load ptr, ptr %740, align 8, !tbaa !36
  %742 = icmp eq ptr %741, null
  br i1 %742, label %744, label %743

743:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef nonnull %741) #23
  br label %744

744:                                              ; preds = %743, %738
  %745 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 6, i32 2
  %746 = load ptr, ptr %745, align 16, !tbaa !64
  %747 = icmp eq ptr %746, null
  br i1 %747, label %749, label %748

748:                                              ; preds = %744
  call void @_ZdlPv(ptr noundef nonnull %746) #23
  br label %749

749:                                              ; preds = %748, %744
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %739)
          to label %750 unwind label %834

750:                                              ; preds = %749
  %751 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %751, align 16, !tbaa !5
  %752 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 3
  %753 = load ptr, ptr %752, align 8, !tbaa !36
  %754 = icmp eq ptr %753, null
  br i1 %754, label %756, label %755

755:                                              ; preds = %750
  call void @_ZdlPv(ptr noundef nonnull %753) #23
  br label %756

756:                                              ; preds = %755, %750
  %757 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 5, i32 2
  %758 = load ptr, ptr %757, align 16, !tbaa !64
  %759 = icmp eq ptr %758, null
  br i1 %759, label %761, label %760

760:                                              ; preds = %756
  call void @_ZdlPv(ptr noundef nonnull %758) #23
  br label %761

761:                                              ; preds = %760, %756
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %751)
          to label %762 unwind label %834

762:                                              ; preds = %761
  %763 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %763, align 16, !tbaa !5
  %764 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 3
  %765 = load ptr, ptr %764, align 8, !tbaa !36
  %766 = icmp eq ptr %765, null
  br i1 %766, label %768, label %767

767:                                              ; preds = %762
  call void @_ZdlPv(ptr noundef nonnull %765) #23
  br label %768

768:                                              ; preds = %767, %762
  %769 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 4, i32 2
  %770 = load ptr, ptr %769, align 16, !tbaa !64
  %771 = icmp eq ptr %770, null
  br i1 %771, label %773, label %772

772:                                              ; preds = %768
  call void @_ZdlPv(ptr noundef nonnull %770) #23
  br label %773

773:                                              ; preds = %772, %768
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %763)
          to label %774 unwind label %834

774:                                              ; preds = %773
  %775 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %775, align 16, !tbaa !5
  %776 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 3
  %777 = load ptr, ptr %776, align 8, !tbaa !36
  %778 = icmp eq ptr %777, null
  br i1 %778, label %780, label %779

779:                                              ; preds = %774
  call void @_ZdlPv(ptr noundef nonnull %777) #23
  br label %780

780:                                              ; preds = %779, %774
  %781 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 3, i32 2
  %782 = load ptr, ptr %781, align 16, !tbaa !64
  %783 = icmp eq ptr %782, null
  br i1 %783, label %785, label %784

784:                                              ; preds = %780
  call void @_ZdlPv(ptr noundef nonnull %782) #23
  br label %785

785:                                              ; preds = %784, %780
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %775)
          to label %786 unwind label %834

786:                                              ; preds = %785
  %787 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %787, align 16, !tbaa !5
  %788 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 3
  %789 = load ptr, ptr %788, align 8, !tbaa !36
  %790 = icmp eq ptr %789, null
  br i1 %790, label %792, label %791

791:                                              ; preds = %786
  call void @_ZdlPv(ptr noundef nonnull %789) #23
  br label %792

792:                                              ; preds = %791, %786
  %793 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 2, i32 2
  %794 = load ptr, ptr %793, align 16, !tbaa !64
  %795 = icmp eq ptr %794, null
  br i1 %795, label %797, label %796

796:                                              ; preds = %792
  call void @_ZdlPv(ptr noundef nonnull %794) #23
  br label %797

797:                                              ; preds = %796, %792
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %787)
          to label %798 unwind label %834

798:                                              ; preds = %797
  %799 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %799, align 16, !tbaa !5
  %800 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 3
  %801 = load ptr, ptr %800, align 8, !tbaa !36
  %802 = icmp eq ptr %801, null
  br i1 %802, label %804, label %803

803:                                              ; preds = %798
  call void @_ZdlPv(ptr noundef nonnull %801) #23
  br label %804

804:                                              ; preds = %803, %798
  %805 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 1, i32 2
  %806 = load ptr, ptr %805, align 16, !tbaa !64
  %807 = icmp eq ptr %806, null
  br i1 %807, label %809, label %808

808:                                              ; preds = %804
  call void @_ZdlPv(ptr noundef nonnull %806) #23
  br label %809

809:                                              ; preds = %808, %804
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %799)
          to label %810 unwind label %834

810:                                              ; preds = %809
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %4, align 16, !tbaa !5
  %811 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 3
  %812 = load ptr, ptr %811, align 8, !tbaa !36
  %813 = icmp eq ptr %812, null
  br i1 %813, label %815, label %814

814:                                              ; preds = %810
  call void @_ZdlPv(ptr noundef nonnull %812) #23
  br label %815

815:                                              ; preds = %814, %810
  %816 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %4, i64 0, i32 2
  %817 = load ptr, ptr %816, align 16, !tbaa !64
  %818 = icmp eq ptr %817, null
  br i1 %818, label %820, label %819

819:                                              ; preds = %815
  call void @_ZdlPv(ptr noundef nonnull %817) #23
  br label %820

820:                                              ; preds = %819, %815
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %821 unwind label %834

821:                                              ; preds = %85, %729, %724, %820, %9
  %822 = phi { ptr, i32 } [ %725, %724 ], [ %10, %9 ], [ %611, %820 ], [ %723, %729 ], [ %81, %85 ]
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %4) #25
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  %823 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 3
  %824 = load ptr, ptr %823, align 8, !tbaa !36
  %825 = icmp eq ptr %824, null
  br i1 %825, label %827, label %826

826:                                              ; preds = %821
  call void @_ZdlPv(ptr noundef nonnull %824) #23
  br label %827

827:                                              ; preds = %826, %821
  %828 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %3, i64 0, i32 2
  %829 = load ptr, ptr %828, align 8, !tbaa !64
  %830 = icmp eq ptr %829, null
  br i1 %830, label %832, label %831

831:                                              ; preds = %827
  call void @_ZdlPv(ptr noundef nonnull %829) #23
  br label %832

832:                                              ; preds = %831, %827
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
          to label %833 unwind label %840

833:                                              ; preds = %832
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #25
  resume { ptr, i32 } %822

834:                                              ; preds = %820, %809, %797, %785, %773, %761, %749, %737
  %835 = landingpad { ptr, i32 }
          catch ptr null
  br label %842

836:                                              ; preds = %726
  %837 = landingpad { ptr, i32 }
          catch ptr null
  br label %842

838:                                              ; preds = %82
  %839 = landingpad { ptr, i32 }
          catch ptr null
  br label %842

840:                                              ; preds = %832
  %841 = landingpad { ptr, i32 }
          catch ptr null
  br label %842

842:                                              ; preds = %836, %840, %838, %834
  %843 = phi { ptr, i32 } [ %835, %834 ], [ %837, %836 ], [ %839, %838 ], [ %841, %840 ]
  %844 = extractvalue { ptr, i32 } %843, 0
  call void @__clang_call_terminate(ptr %844) #24
  unreachable
}

declare noundef i32 @_ZN6dealii12GeometryInfoILi2EE10n_childrenERKNS_14RefinementCaseILi2EEE(ptr noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @_ZN6dealii10QProjectorILi1EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi1EEE(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i32 noundef %5, i8 %6) local_unnamed_addr #7 align 2 {
  ret i32 -1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @_ZN6dealii10QProjectorILi2EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi2EEE(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i32 noundef %5, i8 %6) local_unnamed_addr #7 align 2 {
  %8 = shl i32 %0, 1
  %9 = add i32 %8, %1
  %10 = mul i32 %9, %5
  ret i32 %10
}

; Function Attrs: sspstrong uwtable
define dso_local i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEE(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i32 noundef %5, i8 %6) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::RefinementCase.35", align 1
  %9 = alloca %"class.dealii::RefinementCase.37", align 1
  %10 = load atomic i8, ptr @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %82, !prof !601

12:                                               ; preds = %7
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case) #25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %82, label %15

15:                                               ; preds = %12
  %16 = load <32 x i8>, ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, align 32
  %17 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 1), align 4
  %18 = and i8 %17, -4
  %19 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 1, i64 1), align 1
  %20 = and i8 %19, -4
  %21 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 1, i64 2), align 2
  %22 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 1, i64 3), align 1
  %23 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 2), align 8
  %24 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 2, i64 1), align 1
  %25 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 2, i64 2), align 2
  %26 = and i8 %25, -4
  %27 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 2, i64 3), align 1
  %28 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 3), align 4
  %29 = and i8 %28, -4
  %30 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 3, i64 1), align 1
  %31 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 3, i64 2), align 2
  %32 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 3, i64 3), align 1
  %33 = load <4 x i8>, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 4), align 16
  %34 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 5), align 4
  %35 = and i8 %34, -4
  %36 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 5, i64 1), align 1
  %37 = and i8 %36, -4
  %38 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 5, i64 2), align 2
  %39 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 5, i64 3), align 1
  %40 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 6), align 8
  %41 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 6, i64 1), align 1
  %42 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 6, i64 2), align 2
  %43 = and i8 %42, -4
  %44 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 6, i64 3), align 1
  %45 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 7), align 4
  %46 = and i8 %45, -4
  %47 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 7, i64 1), align 1
  %48 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 7, i64 2), align 2
  %49 = load i8, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 7, i64 3), align 1
  %50 = insertelement <32 x i8> %16, i8 %18, i64 4
  %51 = insertelement <32 x i8> %50, i8 %20, i64 5
  %52 = insertelement <32 x i8> %51, i8 %21, i64 6
  %53 = insertelement <32 x i8> %52, i8 %22, i64 7
  %54 = insertelement <32 x i8> %53, i8 %23, i64 8
  %55 = insertelement <32 x i8> %54, i8 %24, i64 9
  %56 = insertelement <32 x i8> %55, i8 %26, i64 10
  %57 = insertelement <32 x i8> %56, i8 %27, i64 11
  %58 = insertelement <32 x i8> %57, i8 %29, i64 12
  %59 = insertelement <32 x i8> %58, i8 %30, i64 13
  %60 = insertelement <32 x i8> %59, i8 %31, i64 14
  %61 = insertelement <32 x i8> %60, i8 %32, i64 15
  %62 = shufflevector <4 x i8> %33, <4 x i8> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %63 = shufflevector <32 x i8> %61, <32 x i8> %62, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %64 = insertelement <32 x i8> %63, i8 %35, i64 20
  %65 = insertelement <32 x i8> %64, i8 %37, i64 21
  %66 = insertelement <32 x i8> %65, i8 %38, i64 22
  %67 = insertelement <32 x i8> %66, i8 %39, i64 23
  %68 = insertelement <32 x i8> %67, i8 %40, i64 24
  %69 = insertelement <32 x i8> %68, i8 %41, i64 25
  %70 = insertelement <32 x i8> %69, i8 %43, i64 26
  %71 = insertelement <32 x i8> %70, i8 %44, i64 27
  %72 = insertelement <32 x i8> %71, i8 %46, i64 28
  %73 = insertelement <32 x i8> %72, i8 %47, i64 29
  %74 = insertelement <32 x i8> %73, i8 %48, i64 30
  %75 = insertelement <32 x i8> %74, i8 %49, i64 31
  %76 = or <32 x i8> %75, <i8 3, i8 3, i8 3, i8 3, i8 1, i8 1, i8 poison, i8 poison, i8 3, i8 3, i8 1, i8 poison, i8 1, i8 3, i8 3, i8 poison, i8 3, i8 3, i8 3, i8 3, i8 2, i8 2, i8 poison, i8 poison, i8 3, i8 3, i8 2, i8 poison, i8 2, i8 3, i8 3, i8 poison>
  %77 = and <32 x i8> %75, <i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 -4, i8 -4, i8 poison, i8 poison, i8 poison, i8 -4, i8 poison, i8 poison, i8 poison, i8 -4, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 -4, i8 -4, i8 poison, i8 poison, i8 poison, i8 -4, i8 poison, i8 poison, i8 poison, i8 -4>
  %78 = shufflevector <32 x i8> %76, <32 x i8> %77, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 38, i32 39, i32 8, i32 9, i32 10, i32 43, i32 12, i32 13, i32 14, i32 47, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 54, i32 55, i32 24, i32 25, i32 26, i32 59, i32 28, i32 29, i32 30, i32 63>
  store <32 x i8> %78, ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, align 32
  %79 = load <8 x i8>, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 8), align 32
  %80 = or <8 x i8> %79, <i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3>
  store <8 x i8> %80, ptr getelementptr inbounds ([10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 8), align 32
  %81 = tail call ptr @llvm.invariant.start.p0(i64 40, ptr nonnull @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case) #25
  br label %82

82:                                               ; preds = %15, %12, %7
  %83 = load atomic i8, ptr @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %100, !prof !601

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation) #25
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %85
  %89 = load i8, ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, align 1
  %90 = and i8 %89, -4
  store i8 %90, ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, align 1
  %91 = load i8, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 1), align 1
  %92 = and i8 %91, -4
  %93 = or i8 %92, 2
  store i8 %93, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 1), align 1
  %94 = load i8, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 2), align 1
  %95 = and i8 %94, -4
  %96 = or i8 %95, 1
  store i8 %96, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 2), align 1
  %97 = load i8, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 3), align 1
  %98 = or i8 %97, 3
  store i8 %98, ptr getelementptr inbounds ([4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 3), align 1
  %99 = tail call ptr @llvm.invariant.start.p0(i64 4, ptr nonnull @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation) #25
  br label %100

100:                                              ; preds = %88, %85, %82
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #25
  %101 = and i8 %6, 15
  %102 = zext i8 %101 to i64
  %103 = zext i32 %1 to i64
  %104 = getelementptr inbounds [10 x [4 x %"class.dealii::RefinementCase.35"]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE22equivalent_refine_case, i64 0, i64 %102, i64 %103
  %105 = load i8, ptr %104, align 1
  store i8 %105, ptr %8, align 1
  %106 = getelementptr inbounds [10 x [4 x i32]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE25equivalent_subface_number, i64 0, i64 %102, i64 %103
  %107 = load i32, ptr %106, align 4, !tbaa !470
  %108 = xor i1 %2, %4
  %109 = and i8 %105, 3
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds [4 x %"class.dealii::RefinementCase.35"], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE20ref_case_permutation, i64 0, i64 %110
  %112 = select i1 %108, ptr %8, ptr %111
  %113 = load i8, ptr %112, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #25
  %114 = and i8 %113, 3
  store i8 %114, ptr %9, align 1
  %115 = call noundef i32 @_ZN6dealii12GeometryInfoILi3EE18child_cell_on_faceERKNS_14RefinementCaseILi3EEEjjbbbRKNS2_ILi2EEE(ptr noundef nonnull align 1 dereferenceable(1) %9, i32 noundef 4, i32 noundef %107, i1 noundef zeroext %2, i1 noundef zeroext %3, i1 noundef zeroext %4, ptr noundef nonnull align 1 dereferenceable(1) %8)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #25
  %116 = shl i32 %0, 3
  %117 = zext i8 %114 to i64
  %118 = add nsw i64 %117, -1
  %119 = getelementptr inbounds [3 x i32], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE15ref_case_offset, i64 0, i64 %118
  %120 = load i32, ptr %119, align 4, !tbaa !470
  %121 = zext i1 %2 to i64
  %122 = zext i1 %3 to i64
  %123 = zext i1 %4 to i64
  %124 = getelementptr inbounds [2 x [2 x [2 x i32]]], ptr @_ZZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEEE18orientation_offset, i64 0, i64 %121, i64 %122, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !470
  %126 = add i32 %115, %116
  %127 = add i32 %126, %120
  %128 = add i32 %127, %125
  %129 = mul i32 %128, %5
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #25
  ret i32 %129
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #11

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare ptr @llvm.invariant.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #11

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #12

declare noundef i32 @_ZN6dealii12GeometryInfoILi3EE18child_cell_on_faceERKNS_14RefinementCaseILi3EEEjjbbbRKNS2_ILi2EEE(ptr noundef nonnull align 1 dereferenceable(1), i32 noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext, ptr noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZN6dealii9QIteratedILi1EE19uses_both_endpointsERKNS_10QuadratureILi1EEE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %0) local_unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !38
  %5 = load ptr, ptr %2, align 8, !tbaa !36
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = and i64 %8, 34359738360
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %90, label %11

11:                                               ; preds = %1
  %12 = lshr exact i64 %8, 3
  %13 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !31
  %15 = and i64 %12, 4294967295
  %16 = icmp ult i64 %15, 16
  br i1 %16, label %78, label %17

17:                                               ; preds = %11
  %18 = and i64 %12, 15
  %19 = sub nsw i64 %15, %18
  br label %20

20:                                               ; preds = %20, %17
  %21 = phi i64 [ 0, %17 ], [ %54, %20 ]
  %22 = phi <4 x i8> [ zeroinitializer, %17 ], [ %50, %20 ]
  %23 = phi <4 x i8> [ zeroinitializer, %17 ], [ %51, %20 ]
  %24 = phi <4 x i8> [ zeroinitializer, %17 ], [ %52, %20 ]
  %25 = phi <4 x i8> [ zeroinitializer, %17 ], [ %53, %20 ]
  %26 = phi <4 x i8> [ zeroinitializer, %17 ], [ %42, %20 ]
  %27 = phi <4 x i8> [ zeroinitializer, %17 ], [ %43, %20 ]
  %28 = phi <4 x i8> [ zeroinitializer, %17 ], [ %44, %20 ]
  %29 = phi <4 x i8> [ zeroinitializer, %17 ], [ %45, %20 ]
  %30 = getelementptr inbounds %"class.dealii::Point", ptr %14, i64 %21
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds double, ptr %30, i64 4
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !33
  %34 = getelementptr inbounds double, ptr %30, i64 8
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !33
  %36 = getelementptr inbounds double, ptr %30, i64 12
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !33
  %38 = fcmp oeq <4 x double> %31, zeroinitializer
  %39 = fcmp oeq <4 x double> %33, zeroinitializer
  %40 = fcmp oeq <4 x double> %35, zeroinitializer
  %41 = fcmp oeq <4 x double> %37, zeroinitializer
  %42 = select <4 x i1> %38, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %26
  %43 = select <4 x i1> %39, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %27
  %44 = select <4 x i1> %40, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %28
  %45 = select <4 x i1> %41, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %29
  %46 = fcmp oeq <4 x double> %31, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %47 = fcmp oeq <4 x double> %33, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %48 = fcmp oeq <4 x double> %35, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %49 = fcmp oeq <4 x double> %37, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %50 = select <4 x i1> %46, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %22
  %51 = select <4 x i1> %47, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %23
  %52 = select <4 x i1> %48, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %24
  %53 = select <4 x i1> %49, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %25
  %54 = add nuw i64 %21, 16
  %55 = icmp eq i64 %54, %19
  br i1 %55, label %56, label %20, !llvm.loop !602

56:                                               ; preds = %20
  %57 = icmp ne <4 x i8> %42, zeroinitializer
  %58 = icmp ne <4 x i8> %43, zeroinitializer
  %59 = select <4 x i1> %57, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %58
  %60 = icmp ne <4 x i8> %44, zeroinitializer
  %61 = select <4 x i1> %59, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %60
  %62 = icmp ne <4 x i8> %45, zeroinitializer
  %63 = select <4 x i1> %61, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %62
  %64 = bitcast <4 x i1> %63 to i4
  %65 = icmp ne i4 %64, 0
  %66 = zext i1 %65 to i8
  %67 = icmp ne <4 x i8> %50, zeroinitializer
  %68 = icmp ne <4 x i8> %51, zeroinitializer
  %69 = select <4 x i1> %67, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %68
  %70 = icmp ne <4 x i8> %52, zeroinitializer
  %71 = select <4 x i1> %69, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %70
  %72 = icmp ne <4 x i8> %53, zeroinitializer
  %73 = select <4 x i1> %71, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %72
  %74 = bitcast <4 x i1> %73 to i4
  %75 = icmp ne i4 %74, 0
  %76 = zext i1 %75 to i8
  %77 = icmp eq i64 %18, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %11, %56
  %79 = phi i64 [ 0, %11 ], [ %19, %56 ]
  %80 = phi i8 [ 0, %11 ], [ %76, %56 ]
  %81 = phi i8 [ 0, %11 ], [ %66, %56 ]
  br label %92

82:                                               ; preds = %92, %56
  %83 = phi i8 [ %66, %56 ], [ %99, %92 ]
  %84 = phi i8 [ %76, %56 ], [ %101, %92 ]
  %85 = and i8 %83, 1
  %86 = icmp ne i8 %85, 0
  %87 = and i8 %84, 1
  %88 = icmp ne i8 %87, 0
  %89 = select i1 %86, i1 %88, i1 false
  br label %90

90:                                               ; preds = %82, %1
  %91 = phi i1 [ false, %1 ], [ %89, %82 ]
  ret i1 %91

92:                                               ; preds = %78, %92
  %93 = phi i64 [ %102, %92 ], [ %79, %78 ]
  %94 = phi i8 [ %101, %92 ], [ %80, %78 ]
  %95 = phi i8 [ %99, %92 ], [ %81, %78 ]
  %96 = getelementptr inbounds %"class.dealii::Point", ptr %14, i64 %93
  %97 = load double, ptr %96, align 8, !tbaa !33
  %98 = fcmp oeq double %97, 0.000000e+00
  %99 = select i1 %98, i8 1, i8 %95
  %100 = fcmp oeq double %97, 1.000000e+00
  %101 = select i1 %100, i8 1, i8 %94
  %102 = add nuw nsw i64 %93, 1
  %103 = icmp eq i64 %102, %15
  br i1 %103, label %82, label %92, !llvm.loop !603
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii9QIteratedILi1EEC2ERKNS_10QuadratureILi1EEEj(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(128) %1, i32 noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = load ptr, ptr %4, align 8, !tbaa !36
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = and i64 %10, 34359738360
  %12 = icmp eq i64 %11, 0
  %13 = lshr exact i64 %10, 3
  br i1 %12, label %109, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !31
  %17 = and i64 %13, 4294967295
  %18 = icmp ult i64 %17, 16
  br i1 %18, label %80, label %19

19:                                               ; preds = %14
  %20 = and i64 %13, 15
  %21 = sub nsw i64 %17, %20
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi i64 [ 0, %19 ], [ %56, %22 ]
  %24 = phi <4 x i8> [ zeroinitializer, %19 ], [ %52, %22 ]
  %25 = phi <4 x i8> [ zeroinitializer, %19 ], [ %53, %22 ]
  %26 = phi <4 x i8> [ zeroinitializer, %19 ], [ %54, %22 ]
  %27 = phi <4 x i8> [ zeroinitializer, %19 ], [ %55, %22 ]
  %28 = phi <4 x i8> [ zeroinitializer, %19 ], [ %44, %22 ]
  %29 = phi <4 x i8> [ zeroinitializer, %19 ], [ %45, %22 ]
  %30 = phi <4 x i8> [ zeroinitializer, %19 ], [ %46, %22 ]
  %31 = phi <4 x i8> [ zeroinitializer, %19 ], [ %47, %22 ]
  %32 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %23
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !33
  %34 = getelementptr inbounds double, ptr %32, i64 4
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !33
  %36 = getelementptr inbounds double, ptr %32, i64 8
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !33
  %38 = getelementptr inbounds double, ptr %32, i64 12
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !33
  %40 = fcmp oeq <4 x double> %33, zeroinitializer
  %41 = fcmp oeq <4 x double> %35, zeroinitializer
  %42 = fcmp oeq <4 x double> %37, zeroinitializer
  %43 = fcmp oeq <4 x double> %39, zeroinitializer
  %44 = select <4 x i1> %40, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %28
  %45 = select <4 x i1> %41, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %29
  %46 = select <4 x i1> %42, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %30
  %47 = select <4 x i1> %43, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %31
  %48 = fcmp oeq <4 x double> %33, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %49 = fcmp oeq <4 x double> %35, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %50 = fcmp oeq <4 x double> %37, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %51 = fcmp oeq <4 x double> %39, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %52 = select <4 x i1> %48, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %24
  %53 = select <4 x i1> %49, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %25
  %54 = select <4 x i1> %50, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %26
  %55 = select <4 x i1> %51, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %27
  %56 = add nuw i64 %23, 16
  %57 = icmp eq i64 %56, %21
  br i1 %57, label %58, label %22, !llvm.loop !604

58:                                               ; preds = %22
  %59 = icmp ne <4 x i8> %44, zeroinitializer
  %60 = icmp ne <4 x i8> %45, zeroinitializer
  %61 = select <4 x i1> %59, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %60
  %62 = icmp ne <4 x i8> %46, zeroinitializer
  %63 = select <4 x i1> %61, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %62
  %64 = icmp ne <4 x i8> %47, zeroinitializer
  %65 = select <4 x i1> %63, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %64
  %66 = bitcast <4 x i1> %65 to i4
  %67 = icmp ne i4 %66, 0
  %68 = zext i1 %67 to i8
  %69 = icmp ne <4 x i8> %52, zeroinitializer
  %70 = icmp ne <4 x i8> %53, zeroinitializer
  %71 = select <4 x i1> %69, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %70
  %72 = icmp ne <4 x i8> %54, zeroinitializer
  %73 = select <4 x i1> %71, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %72
  %74 = icmp ne <4 x i8> %55, zeroinitializer
  %75 = select <4 x i1> %73, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %74
  %76 = bitcast <4 x i1> %75 to i4
  %77 = icmp ne i4 %76, 0
  %78 = zext i1 %77 to i8
  %79 = icmp eq i64 %20, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %14, %58
  %81 = phi i64 [ 0, %14 ], [ %21, %58 ]
  %82 = phi i8 [ 0, %14 ], [ %78, %58 ]
  %83 = phi i8 [ 0, %14 ], [ %68, %58 ]
  br label %84

84:                                               ; preds = %80, %84
  %85 = phi i64 [ %94, %84 ], [ %81, %80 ]
  %86 = phi i8 [ %93, %84 ], [ %82, %80 ]
  %87 = phi i8 [ %91, %84 ], [ %83, %80 ]
  %88 = getelementptr inbounds %"class.dealii::Point", ptr %16, i64 %85
  %89 = load double, ptr %88, align 8, !tbaa !33
  %90 = fcmp oeq double %89, 0.000000e+00
  %91 = select i1 %90, i8 1, i8 %87
  %92 = fcmp oeq double %89, 1.000000e+00
  %93 = select i1 %92, i8 1, i8 %86
  %94 = add nuw nsw i64 %85, 1
  %95 = icmp eq i64 %94, %17
  br i1 %95, label %96, label %84, !llvm.loop !605

96:                                               ; preds = %84, %58
  %97 = phi i8 [ %68, %58 ], [ %91, %84 ]
  %98 = phi i8 [ %78, %58 ], [ %93, %84 ]
  %99 = and i8 %97, 1
  %100 = icmp ne i8 %99, 0
  %101 = and i8 %98, 1
  %102 = icmp ne i8 %101, 0
  %103 = select i1 %100, i1 %102, i1 false
  br i1 %103, label %104, label %109

104:                                              ; preds = %96
  %105 = trunc i64 %13 to i32
  %106 = add i32 %105, -1
  %107 = mul i32 %106, %2
  %108 = add i32 %107, 1
  br label %112

109:                                              ; preds = %3, %96
  %110 = trunc i64 %13 to i32
  %111 = mul i32 %110, %2
  br label %112

112:                                              ; preds = %109, %104
  %113 = phi i32 [ %108, %104 ], [ %111, %109 ]
  tail call void @_ZN6dealii10QuadratureILi1EEC2Ej(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %113)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9QIteratedILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %114 = load ptr, ptr %5, align 8, !tbaa !38
  %115 = load ptr, ptr %4, align 8, !tbaa !36
  %116 = ptrtoint ptr %114 to i64
  %117 = ptrtoint ptr %115 to i64
  %118 = sub i64 %116, %117
  %119 = and i64 %118, 34359738360
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %255

121:                                              ; preds = %326, %112
  %122 = icmp eq i32 %2, 0
  br i1 %122, label %679, label %123

123:                                              ; preds = %121
  %124 = and i64 %118, 34359738360
  %125 = icmp eq i64 %124, 0
  %126 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8
  %128 = ptrtoint ptr %127 to i64
  %129 = uitofp i32 %2 to double
  %130 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %131 = load ptr, ptr %130, align 8
  %132 = ptrtoint ptr %131 to i64
  %133 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8
  %135 = ptrtoint ptr %134 to i64
  br i1 %125, label %679, label %136

136:                                              ; preds = %123
  %137 = lshr exact i64 %118, 3
  %138 = and i64 %137, 4294967295
  %139 = add nsw i64 %138, -1
  %140 = icmp ult i64 %138, 8
  %141 = trunc i64 %139 to i32
  %142 = icmp ugt i64 %139, 4294967295
  %143 = and i64 %137, 3
  %144 = sub nsw i64 %138, %143
  %145 = trunc i64 %144 to i32
  %146 = insertelement <4 x double> poison, double %129, i64 0
  %147 = shufflevector <4 x double> %146, <4 x double> poison, <4 x i32> zeroinitializer
  %148 = icmp eq i64 %143, 0
  br label %149

149:                                              ; preds = %136, %251
  %150 = phi i32 [ %253, %251 ], [ 0, %136 ]
  %151 = phi i32 [ %252, %251 ], [ 0, %136 ]
  %152 = uitofp i32 %150 to double
  %153 = fdiv double %152, %129
  br i1 %140, label %198, label %154

154:                                              ; preds = %149
  %155 = xor i32 %151, -1
  %156 = icmp ult i32 %155, %141
  %157 = or i1 %156, %142
  br i1 %157, label %198, label %158

158:                                              ; preds = %154
  %159 = zext i32 %151 to i64
  %160 = shl nuw nsw i64 %159, 3
  %161 = add i64 %160, %132
  %162 = sub i64 %161, %128
  %163 = icmp ult i64 %162, 32
  %164 = add i64 %160, %135
  %165 = sub i64 %164, %128
  %166 = icmp ult i64 %165, 32
  %167 = or i1 %163, %166
  %168 = sub i64 %117, %161
  %169 = icmp ult i64 %168, 32
  %170 = or i1 %167, %169
  %171 = sub i64 %164, %117
  %172 = icmp ult i64 %171, 32
  %173 = or i1 %170, %172
  %174 = sub i64 %164, %161
  %175 = icmp ult i64 %174, 32
  %176 = or i1 %173, %175
  br i1 %176, label %198, label %177

177:                                              ; preds = %158
  %178 = add i32 %151, %145
  %179 = insertelement <4 x double> poison, double %153, i64 0
  %180 = shufflevector <4 x double> %179, <4 x double> poison, <4 x i32> zeroinitializer
  br label %181

181:                                              ; preds = %181, %177
  %182 = phi i64 [ 0, %177 ], [ %195, %181 ]
  %183 = trunc i64 %182 to i32
  %184 = add i32 %151, %183
  %185 = getelementptr inbounds %"class.dealii::Point", ptr %127, i64 %182
  %186 = load <4 x double>, ptr %185, align 8, !tbaa !33
  %187 = fdiv <4 x double> %186, %147
  %188 = fadd <4 x double> %180, %187
  %189 = zext i32 %184 to i64
  %190 = getelementptr inbounds %"class.dealii::Point", ptr %131, i64 %189
  store <4 x double> %188, ptr %190, align 8, !tbaa !33
  %191 = getelementptr inbounds double, ptr %115, i64 %182
  %192 = load <4 x double>, ptr %191, align 8, !tbaa !33
  %193 = fdiv <4 x double> %192, %147
  %194 = getelementptr inbounds double, ptr %134, i64 %189
  store <4 x double> %193, ptr %194, align 8, !tbaa !33
  %195 = add nuw i64 %182, 4
  %196 = icmp eq i64 %195, %144
  br i1 %196, label %197, label %181, !llvm.loop !606

197:                                              ; preds = %181
  br i1 %148, label %251, label %198

198:                                              ; preds = %158, %154, %149, %197
  %199 = phi i64 [ 0, %158 ], [ 0, %154 ], [ 0, %149 ], [ %144, %197 ]
  %200 = phi i32 [ %151, %158 ], [ %151, %154 ], [ %151, %149 ], [ %178, %197 ]
  %201 = sub nsw i64 %137, %199
  %202 = add nsw i64 %199, 1
  %203 = and i64 %201, 1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %218, label %205

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.dealii::Point", ptr %127, i64 %199
  %207 = load double, ptr %206, align 8, !tbaa !33
  %208 = fdiv double %207, %129
  %209 = fadd double %153, %208
  %210 = zext i32 %200 to i64
  %211 = getelementptr inbounds %"class.dealii::Point", ptr %131, i64 %210
  store double %209, ptr %211, align 8, !tbaa !33
  %212 = getelementptr inbounds double, ptr %115, i64 %199
  %213 = load double, ptr %212, align 8, !tbaa !33
  %214 = fdiv double %213, %129
  %215 = getelementptr inbounds double, ptr %134, i64 %210
  store double %214, ptr %215, align 8, !tbaa !33
  %216 = add i32 %200, 1
  %217 = add nuw nsw i64 %199, 1
  br label %218

218:                                              ; preds = %205, %198
  %219 = phi i32 [ undef, %198 ], [ %216, %205 ]
  %220 = phi i64 [ %199, %198 ], [ %217, %205 ]
  %221 = phi i32 [ %200, %198 ], [ %216, %205 ]
  %222 = icmp eq i64 %138, %202
  br i1 %222, label %251, label %223

223:                                              ; preds = %218, %223
  %224 = phi i64 [ %249, %223 ], [ %220, %218 ]
  %225 = phi i32 [ %248, %223 ], [ %221, %218 ]
  %226 = getelementptr inbounds %"class.dealii::Point", ptr %127, i64 %224
  %227 = load double, ptr %226, align 8, !tbaa !33
  %228 = fdiv double %227, %129
  %229 = fadd double %153, %228
  %230 = zext i32 %225 to i64
  %231 = getelementptr inbounds %"class.dealii::Point", ptr %131, i64 %230
  store double %229, ptr %231, align 8, !tbaa !33
  %232 = getelementptr inbounds double, ptr %115, i64 %224
  %233 = load double, ptr %232, align 8, !tbaa !33
  %234 = fdiv double %233, %129
  %235 = getelementptr inbounds double, ptr %134, i64 %230
  store double %234, ptr %235, align 8, !tbaa !33
  %236 = add i32 %225, 1
  %237 = add nuw nsw i64 %224, 1
  %238 = getelementptr inbounds %"class.dealii::Point", ptr %127, i64 %237
  %239 = load double, ptr %238, align 8, !tbaa !33
  %240 = fdiv double %239, %129
  %241 = fadd double %153, %240
  %242 = zext i32 %236 to i64
  %243 = getelementptr inbounds %"class.dealii::Point", ptr %131, i64 %242
  store double %241, ptr %243, align 8, !tbaa !33
  %244 = getelementptr inbounds double, ptr %115, i64 %237
  %245 = load double, ptr %244, align 8, !tbaa !33
  %246 = fdiv double %245, %129
  %247 = getelementptr inbounds double, ptr %134, i64 %242
  store double %246, ptr %247, align 8, !tbaa !33
  %248 = add i32 %225, 2
  %249 = add nuw nsw i64 %224, 2
  %250 = icmp eq i64 %249, %138
  br i1 %250, label %251, label %223, !llvm.loop !607

251:                                              ; preds = %218, %223, %197
  %252 = phi i32 [ %178, %197 ], [ %219, %218 ], [ %248, %223 ]
  %253 = add nuw i32 %150, 1
  %254 = icmp eq i32 %253, %2
  br i1 %254, label %679, label %149

255:                                              ; preds = %112
  %256 = lshr exact i64 %118, 3
  %257 = getelementptr inbounds %"class.dealii::Quadrature", ptr %1, i64 0, i32 2
  %258 = load ptr, ptr %257, align 8, !tbaa !31
  %259 = and i64 %256, 4294967295
  %260 = icmp ult i64 %259, 16
  br i1 %260, label %322, label %261

261:                                              ; preds = %255
  %262 = and i64 %256, 15
  %263 = sub nsw i64 %259, %262
  br label %264

264:                                              ; preds = %264, %261
  %265 = phi i64 [ 0, %261 ], [ %298, %264 ]
  %266 = phi <4 x i8> [ zeroinitializer, %261 ], [ %294, %264 ]
  %267 = phi <4 x i8> [ zeroinitializer, %261 ], [ %295, %264 ]
  %268 = phi <4 x i8> [ zeroinitializer, %261 ], [ %296, %264 ]
  %269 = phi <4 x i8> [ zeroinitializer, %261 ], [ %297, %264 ]
  %270 = phi <4 x i8> [ zeroinitializer, %261 ], [ %286, %264 ]
  %271 = phi <4 x i8> [ zeroinitializer, %261 ], [ %287, %264 ]
  %272 = phi <4 x i8> [ zeroinitializer, %261 ], [ %288, %264 ]
  %273 = phi <4 x i8> [ zeroinitializer, %261 ], [ %289, %264 ]
  %274 = getelementptr inbounds %"class.dealii::Point", ptr %258, i64 %265
  %275 = load <4 x double>, ptr %274, align 8, !tbaa !33
  %276 = getelementptr inbounds double, ptr %274, i64 4
  %277 = load <4 x double>, ptr %276, align 8, !tbaa !33
  %278 = getelementptr inbounds double, ptr %274, i64 8
  %279 = load <4 x double>, ptr %278, align 8, !tbaa !33
  %280 = getelementptr inbounds double, ptr %274, i64 12
  %281 = load <4 x double>, ptr %280, align 8, !tbaa !33
  %282 = fcmp oeq <4 x double> %275, zeroinitializer
  %283 = fcmp oeq <4 x double> %277, zeroinitializer
  %284 = fcmp oeq <4 x double> %279, zeroinitializer
  %285 = fcmp oeq <4 x double> %281, zeroinitializer
  %286 = select <4 x i1> %282, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %270
  %287 = select <4 x i1> %283, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %271
  %288 = select <4 x i1> %284, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %272
  %289 = select <4 x i1> %285, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %273
  %290 = fcmp oeq <4 x double> %275, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %291 = fcmp oeq <4 x double> %277, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %292 = fcmp oeq <4 x double> %279, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %293 = fcmp oeq <4 x double> %281, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %294 = select <4 x i1> %290, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %266
  %295 = select <4 x i1> %291, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %267
  %296 = select <4 x i1> %292, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %268
  %297 = select <4 x i1> %293, <4 x i8> <i8 1, i8 1, i8 1, i8 1>, <4 x i8> %269
  %298 = add nuw i64 %265, 16
  %299 = icmp eq i64 %298, %263
  br i1 %299, label %300, label %264, !llvm.loop !608

300:                                              ; preds = %264
  %301 = icmp ne <4 x i8> %286, zeroinitializer
  %302 = icmp ne <4 x i8> %287, zeroinitializer
  %303 = select <4 x i1> %301, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %302
  %304 = icmp ne <4 x i8> %288, zeroinitializer
  %305 = select <4 x i1> %303, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %304
  %306 = icmp ne <4 x i8> %289, zeroinitializer
  %307 = select <4 x i1> %305, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %306
  %308 = bitcast <4 x i1> %307 to i4
  %309 = icmp ne i4 %308, 0
  %310 = zext i1 %309 to i8
  %311 = icmp ne <4 x i8> %294, zeroinitializer
  %312 = icmp ne <4 x i8> %295, zeroinitializer
  %313 = select <4 x i1> %311, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %312
  %314 = icmp ne <4 x i8> %296, zeroinitializer
  %315 = select <4 x i1> %313, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %314
  %316 = icmp ne <4 x i8> %297, zeroinitializer
  %317 = select <4 x i1> %315, <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1> %316
  %318 = bitcast <4 x i1> %317 to i4
  %319 = icmp ne i4 %318, 0
  %320 = zext i1 %319 to i8
  %321 = icmp eq i64 %262, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %255, %300
  %323 = phi i64 [ 0, %255 ], [ %263, %300 ]
  %324 = phi i8 [ 0, %255 ], [ %320, %300 ]
  %325 = phi i8 [ 0, %255 ], [ %310, %300 ]
  br label %342

326:                                              ; preds = %342, %300
  %327 = phi i8 [ %310, %300 ], [ %349, %342 ]
  %328 = phi i8 [ %320, %300 ], [ %351, %342 ]
  %329 = and i8 %327, 1
  %330 = icmp ne i8 %329, 0
  %331 = and i8 %328, 1
  %332 = icmp ne i8 %331, 0
  %333 = select i1 %330, i1 %332, i1 false
  br i1 %333, label %334, label %121

334:                                              ; preds = %326
  %335 = and i64 %118, 34359738360
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %679, label %337

337:                                              ; preds = %334
  %338 = and i64 %256, 1
  %339 = icmp eq i64 %259, 1
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 %259, %338
  br label %649

342:                                              ; preds = %322, %342
  %343 = phi i64 [ %352, %342 ], [ %323, %322 ]
  %344 = phi i8 [ %351, %342 ], [ %324, %322 ]
  %345 = phi i8 [ %349, %342 ], [ %325, %322 ]
  %346 = getelementptr inbounds %"class.dealii::Point", ptr %258, i64 %343
  %347 = load double, ptr %346, align 8, !tbaa !33
  %348 = fcmp oeq double %347, 0.000000e+00
  %349 = select i1 %348, i8 1, i8 %345
  %350 = fcmp oeq double %347, 1.000000e+00
  %351 = select i1 %350, i8 1, i8 %344
  %352 = add nuw nsw i64 %343, 1
  %353 = icmp eq i64 %352, %259
  br i1 %353, label %326, label %342, !llvm.loop !609

354:                                              ; preds = %674, %337
  %355 = phi double [ undef, %337 ], [ %675, %674 ]
  %356 = phi i64 [ 0, %337 ], [ %676, %674 ]
  %357 = phi double [ 0.000000e+00, %337 ], [ %675, %674 ]
  %358 = icmp eq i64 %338, 0
  br i1 %358, label %369, label %359

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.dealii::Point", ptr %258, i64 %356
  %361 = load double, ptr %360, align 8, !tbaa !33
  %362 = fcmp oeq double %361, 0.000000e+00
  %363 = fcmp oeq double %361, 1.000000e+00
  %364 = or i1 %362, %363
  br i1 %364, label %365, label %369

365:                                              ; preds = %359
  %366 = getelementptr inbounds double, ptr %115, i64 %356
  %367 = load double, ptr %366, align 8, !tbaa !33
  %368 = fadd double %357, %367
  br label %369

369:                                              ; preds = %359, %365, %354
  %370 = phi double [ %355, %354 ], [ %368, %365 ], [ %357, %359 ]
  %371 = uitofp i32 %2 to double
  %372 = fdiv double %370, %371
  %373 = icmp eq i32 %2, 0
  br i1 %373, label %679, label %374

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %376 = add i32 %2, -1
  %377 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  br i1 %336, label %679, label %378

378:                                              ; preds = %374
  %379 = and i64 %256, 4294967295
  %380 = and i64 %256, 4294967295
  %381 = and i64 %256, 4294967295
  %382 = and i64 %256, 4294967295
  %383 = add nsw i64 %259, -1
  %384 = add nsw i64 %259, -1
  %385 = getelementptr i8, ptr %115, i64 %119
  %386 = icmp ult i64 %259, 8
  %387 = trunc i64 %384 to i32
  %388 = icmp ugt i64 %384, 4294967295
  %389 = and i64 %256, 3
  %390 = sub nsw i64 %259, %389
  %391 = trunc i64 %390 to i32
  %392 = insertelement <4 x double> poison, double %371, i64 0
  %393 = shufflevector <4 x double> %392, <4 x double> poison, <4 x i32> zeroinitializer
  %394 = insertelement <4 x double> poison, double %372, i64 0
  %395 = shufflevector <4 x double> %394, <4 x double> poison, <4 x i32> zeroinitializer
  %396 = icmp eq i64 %389, 0
  %397 = icmp ult i64 %259, 8
  %398 = trunc i64 %383 to i32
  %399 = icmp ugt i64 %383, 4294967295
  %400 = and i64 %256, 3
  %401 = sub nsw i64 %259, %400
  %402 = trunc i64 %401 to i32
  %403 = insertelement <4 x double> poison, double %371, i64 0
  %404 = shufflevector <4 x double> %403, <4 x double> poison, <4 x i32> zeroinitializer
  %405 = icmp eq i64 %400, 0
  br label %406

406:                                              ; preds = %378, %505
  %407 = phi i32 [ %507, %505 ], [ 0, %378 ]
  %408 = phi i32 [ %506, %505 ], [ 0, %378 ]
  %409 = icmp eq i32 %407, 0
  %410 = load ptr, ptr %257, align 8
  %411 = ptrtoint ptr %410 to i64
  %412 = uitofp i32 %407 to double
  %413 = fdiv double %412, %371
  %414 = load ptr, ptr %375, align 8
  %415 = ptrtoint ptr %414 to i64
  %416 = icmp eq i32 %407, %376
  %417 = load ptr, ptr %377, align 8
  %418 = ptrtoint ptr %417 to i64
  br i1 %416, label %509, label %444

419:                                              ; preds = %444, %440
  %420 = phi i64 [ %442, %440 ], [ 0, %444 ]
  %421 = phi i32 [ %441, %440 ], [ %408, %444 ]
  %422 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %420
  %423 = load double, ptr %422, align 8, !tbaa !33
  %424 = fcmp oeq double %423, 0.000000e+00
  br i1 %424, label %440, label %425

425:                                              ; preds = %419
  %426 = fdiv double %423, %371
  %427 = fadd double %413, %426
  %428 = zext i32 %421 to i64
  %429 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %428
  store double %427, ptr %429, align 8, !tbaa !33
  %430 = load double, ptr %422, align 8, !tbaa !33
  %431 = fcmp oeq double %430, 1.000000e+00
  br i1 %431, label %436, label %432

432:                                              ; preds = %425
  %433 = getelementptr inbounds double, ptr %115, i64 %420
  %434 = load double, ptr %433, align 8, !tbaa !33
  %435 = fdiv double %434, %371
  br label %436

436:                                              ; preds = %425, %432
  %437 = phi double [ %435, %432 ], [ %372, %425 ]
  %438 = getelementptr inbounds double, ptr %417, i64 %428
  store double %437, ptr %438, align 8
  %439 = add i32 %421, 1
  br label %440

440:                                              ; preds = %436, %419
  %441 = phi i32 [ %421, %419 ], [ %439, %436 ]
  %442 = add nuw nsw i64 %420, 1
  %443 = icmp eq i64 %442, %379
  br i1 %443, label %505, label %419

444:                                              ; preds = %406
  br i1 %409, label %445, label %419

445:                                              ; preds = %444
  br i1 %386, label %502, label %446

446:                                              ; preds = %445
  %447 = xor i32 %408, -1
  %448 = icmp ult i32 %447, %387
  %449 = or i1 %448, %388
  br i1 %449, label %502, label %450

450:                                              ; preds = %446
  %451 = getelementptr i8, ptr %410, i64 %119
  %452 = zext i32 %408 to i64
  %453 = shl nuw nsw i64 %452, 3
  %454 = getelementptr i8, ptr %414, i64 %453
  %455 = getelementptr i8, ptr %414, i64 %119
  %456 = getelementptr i8, ptr %455, i64 %453
  %457 = getelementptr i8, ptr %417, i64 %453
  %458 = getelementptr i8, ptr %417, i64 %119
  %459 = getelementptr i8, ptr %458, i64 %453
  %460 = icmp ult ptr %410, %456
  %461 = icmp ult ptr %454, %451
  %462 = and i1 %460, %461
  %463 = icmp ult ptr %410, %459
  %464 = icmp ult ptr %457, %451
  %465 = and i1 %463, %464
  %466 = or i1 %462, %465
  %467 = icmp ult ptr %115, %456
  %468 = icmp ult ptr %454, %385
  %469 = and i1 %467, %468
  %470 = or i1 %466, %469
  %471 = icmp ult ptr %115, %459
  %472 = icmp ult ptr %457, %385
  %473 = and i1 %471, %472
  %474 = or i1 %470, %473
  %475 = icmp ult ptr %414, %458
  %476 = icmp ult ptr %417, %455
  %477 = and i1 %475, %476
  %478 = or i1 %474, %477
  br i1 %478, label %502, label %479

479:                                              ; preds = %450
  %480 = add i32 %408, %391
  %481 = insertelement <4 x double> poison, double %413, i64 0
  %482 = shufflevector <4 x double> %481, <4 x double> poison, <4 x i32> zeroinitializer
  br label %483

483:                                              ; preds = %483, %479
  %484 = phi i64 [ 0, %479 ], [ %499, %483 ]
  %485 = trunc i64 %484 to i32
  %486 = add i32 %408, %485
  %487 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %484
  %488 = load <4 x double>, ptr %487, align 8, !tbaa !33, !alias.scope !610, !noalias !613
  %489 = fdiv <4 x double> %488, %393
  %490 = fadd <4 x double> %482, %489
  %491 = zext i32 %486 to i64
  %492 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %491
  store <4 x double> %490, ptr %492, align 8, !tbaa !33, !alias.scope !616, !noalias !617
  %493 = fcmp une <4 x double> %488, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %494 = getelementptr double, ptr %115, i64 %484
  %495 = tail call <4 x double> @llvm.masked.load.v4f64.p0(ptr %494, i32 8, <4 x i1> %493, <4 x double> poison), !tbaa !33, !alias.scope !618, !noalias !613
  %496 = fdiv <4 x double> %495, %393
  %497 = select <4 x i1> %493, <4 x double> %496, <4 x double> %395
  %498 = getelementptr inbounds double, ptr %417, i64 %491
  store <4 x double> %497, ptr %498, align 8, !alias.scope !617
  %499 = add nuw i64 %484, 4
  %500 = icmp eq i64 %499, %390
  br i1 %500, label %501, label %483, !llvm.loop !620

501:                                              ; preds = %483
  br i1 %396, label %505, label %502

502:                                              ; preds = %450, %446, %445, %501
  %503 = phi i64 [ 0, %450 ], [ 0, %446 ], [ 0, %445 ], [ %390, %501 ]
  %504 = phi i32 [ %408, %450 ], [ %408, %446 ], [ %408, %445 ], [ %480, %501 ]
  br label %600

505:                                              ; preds = %440, %615, %596, %575, %621, %501, %554
  %506 = phi i32 [ %535, %554 ], [ %480, %501 ], [ %576, %575 ], [ %646, %621 ], [ %597, %596 ], [ %618, %615 ], [ %441, %440 ]
  %507 = add nuw i32 %407, 1
  %508 = icmp eq i32 %507, %2
  br i1 %508, label %679, label %406

509:                                              ; preds = %406
  br i1 %409, label %510, label %580

510:                                              ; preds = %509
  br i1 %397, label %555, label %511

511:                                              ; preds = %510
  %512 = xor i32 %408, -1
  %513 = icmp ult i32 %512, %398
  %514 = or i1 %513, %399
  br i1 %514, label %555, label %515

515:                                              ; preds = %511
  %516 = zext i32 %408 to i64
  %517 = shl nuw nsw i64 %516, 3
  %518 = add i64 %517, %415
  %519 = sub i64 %518, %411
  %520 = icmp ult i64 %519, 32
  %521 = add i64 %517, %418
  %522 = sub i64 %521, %411
  %523 = icmp ult i64 %522, 32
  %524 = or i1 %520, %523
  %525 = sub i64 %117, %518
  %526 = icmp ult i64 %525, 32
  %527 = or i1 %524, %526
  %528 = sub i64 %521, %117
  %529 = icmp ult i64 %528, 32
  %530 = or i1 %527, %529
  %531 = sub i64 %521, %518
  %532 = icmp ult i64 %531, 32
  %533 = or i1 %530, %532
  br i1 %533, label %555, label %534

534:                                              ; preds = %515
  %535 = add i32 %408, %402
  %536 = insertelement <4 x double> poison, double %413, i64 0
  %537 = shufflevector <4 x double> %536, <4 x double> poison, <4 x i32> zeroinitializer
  br label %538

538:                                              ; preds = %538, %534
  %539 = phi i64 [ 0, %534 ], [ %552, %538 ]
  %540 = trunc i64 %539 to i32
  %541 = add i32 %408, %540
  %542 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %539
  %543 = load <4 x double>, ptr %542, align 8, !tbaa !33
  %544 = fdiv <4 x double> %543, %404
  %545 = fadd <4 x double> %537, %544
  %546 = zext i32 %541 to i64
  %547 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %546
  store <4 x double> %545, ptr %547, align 8, !tbaa !33
  %548 = getelementptr inbounds double, ptr %115, i64 %539
  %549 = load <4 x double>, ptr %548, align 8, !tbaa !33
  %550 = fdiv <4 x double> %549, %404
  %551 = getelementptr inbounds double, ptr %417, i64 %546
  store <4 x double> %550, ptr %551, align 8, !tbaa !33
  %552 = add nuw i64 %539, 4
  %553 = icmp eq i64 %552, %401
  br i1 %553, label %554, label %538, !llvm.loop !621

554:                                              ; preds = %538
  br i1 %405, label %505, label %555

555:                                              ; preds = %515, %511, %510, %554
  %556 = phi i64 [ 0, %515 ], [ 0, %511 ], [ 0, %510 ], [ %401, %554 ]
  %557 = phi i32 [ %408, %515 ], [ %408, %511 ], [ %408, %510 ], [ %535, %554 ]
  %558 = sub nsw i64 %256, %556
  %559 = add nsw i64 %556, 1
  %560 = and i64 %558, 1
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %575, label %562

562:                                              ; preds = %555
  %563 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %556
  %564 = load double, ptr %563, align 8, !tbaa !33
  %565 = fdiv double %564, %371
  %566 = fadd double %413, %565
  %567 = zext i32 %557 to i64
  %568 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %567
  store double %566, ptr %568, align 8, !tbaa !33
  %569 = getelementptr inbounds double, ptr %115, i64 %556
  %570 = load double, ptr %569, align 8, !tbaa !33
  %571 = fdiv double %570, %371
  %572 = getelementptr inbounds double, ptr %417, i64 %567
  store double %571, ptr %572, align 8, !tbaa !33
  %573 = add i32 %557, 1
  %574 = add nuw nsw i64 %556, 1
  br label %575

575:                                              ; preds = %562, %555
  %576 = phi i32 [ undef, %555 ], [ %573, %562 ]
  %577 = phi i64 [ %556, %555 ], [ %574, %562 ]
  %578 = phi i32 [ %557, %555 ], [ %573, %562 ]
  %579 = icmp eq i64 %259, %559
  br i1 %579, label %505, label %621

580:                                              ; preds = %509, %596
  %581 = phi i64 [ %598, %596 ], [ 0, %509 ]
  %582 = phi i32 [ %597, %596 ], [ %408, %509 ]
  %583 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %581
  %584 = load double, ptr %583, align 8, !tbaa !33
  %585 = fcmp oeq double %584, 0.000000e+00
  br i1 %585, label %596, label %586

586:                                              ; preds = %580
  %587 = fdiv double %584, %371
  %588 = fadd double %413, %587
  %589 = zext i32 %582 to i64
  %590 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %589
  store double %588, ptr %590, align 8, !tbaa !33
  %591 = getelementptr inbounds double, ptr %115, i64 %581
  %592 = load double, ptr %591, align 8, !tbaa !33
  %593 = fdiv double %592, %371
  %594 = getelementptr inbounds double, ptr %417, i64 %589
  store double %593, ptr %594, align 8, !tbaa !33
  %595 = add i32 %582, 1
  br label %596

596:                                              ; preds = %586, %580
  %597 = phi i32 [ %582, %580 ], [ %595, %586 ]
  %598 = add nuw nsw i64 %581, 1
  %599 = icmp eq i64 %598, %381
  br i1 %599, label %505, label %580

600:                                              ; preds = %502, %615
  %601 = phi i64 [ %619, %615 ], [ %503, %502 ]
  %602 = phi i32 [ %618, %615 ], [ %504, %502 ]
  %603 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %601
  %604 = load double, ptr %603, align 8, !tbaa !33
  %605 = fdiv double %604, %371
  %606 = fadd double %413, %605
  %607 = zext i32 %602 to i64
  %608 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %607
  store double %606, ptr %608, align 8, !tbaa !33
  %609 = load double, ptr %603, align 8, !tbaa !33
  %610 = fcmp oeq double %609, 1.000000e+00
  br i1 %610, label %615, label %611

611:                                              ; preds = %600
  %612 = getelementptr inbounds double, ptr %115, i64 %601
  %613 = load double, ptr %612, align 8, !tbaa !33
  %614 = fdiv double %613, %371
  br label %615

615:                                              ; preds = %600, %611
  %616 = phi double [ %614, %611 ], [ %372, %600 ]
  %617 = getelementptr inbounds double, ptr %417, i64 %607
  store double %616, ptr %617, align 8
  %618 = add i32 %602, 1
  %619 = add nuw nsw i64 %601, 1
  %620 = icmp eq i64 %619, %380
  br i1 %620, label %505, label %600, !llvm.loop !622

621:                                              ; preds = %575, %621
  %622 = phi i64 [ %647, %621 ], [ %577, %575 ]
  %623 = phi i32 [ %646, %621 ], [ %578, %575 ]
  %624 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %622
  %625 = load double, ptr %624, align 8, !tbaa !33
  %626 = fdiv double %625, %371
  %627 = fadd double %413, %626
  %628 = zext i32 %623 to i64
  %629 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %628
  store double %627, ptr %629, align 8, !tbaa !33
  %630 = getelementptr inbounds double, ptr %115, i64 %622
  %631 = load double, ptr %630, align 8, !tbaa !33
  %632 = fdiv double %631, %371
  %633 = getelementptr inbounds double, ptr %417, i64 %628
  store double %632, ptr %633, align 8, !tbaa !33
  %634 = add i32 %623, 1
  %635 = add nuw nsw i64 %622, 1
  %636 = getelementptr inbounds %"class.dealii::Point", ptr %410, i64 %635
  %637 = load double, ptr %636, align 8, !tbaa !33
  %638 = fdiv double %637, %371
  %639 = fadd double %413, %638
  %640 = zext i32 %634 to i64
  %641 = getelementptr inbounds %"class.dealii::Point", ptr %414, i64 %640
  store double %639, ptr %641, align 8, !tbaa !33
  %642 = getelementptr inbounds double, ptr %115, i64 %635
  %643 = load double, ptr %642, align 8, !tbaa !33
  %644 = fdiv double %643, %371
  %645 = getelementptr inbounds double, ptr %417, i64 %640
  store double %644, ptr %645, align 8, !tbaa !33
  %646 = add i32 %623, 2
  %647 = add nuw nsw i64 %622, 2
  %648 = icmp eq i64 %647, %382
  br i1 %648, label %505, label %621, !llvm.loop !623

649:                                              ; preds = %674, %340
  %650 = phi i64 [ 0, %340 ], [ %676, %674 ]
  %651 = phi double [ 0.000000e+00, %340 ], [ %675, %674 ]
  %652 = phi i64 [ 0, %340 ], [ %677, %674 ]
  %653 = getelementptr inbounds %"class.dealii::Point", ptr %258, i64 %650
  %654 = load double, ptr %653, align 8, !tbaa !33
  %655 = fcmp oeq double %654, 0.000000e+00
  %656 = fcmp oeq double %654, 1.000000e+00
  %657 = or i1 %655, %656
  br i1 %657, label %658, label %662

658:                                              ; preds = %649
  %659 = getelementptr inbounds double, ptr %115, i64 %650
  %660 = load double, ptr %659, align 8, !tbaa !33
  %661 = fadd double %651, %660
  br label %662

662:                                              ; preds = %649, %658
  %663 = phi double [ %661, %658 ], [ %651, %649 ]
  %664 = or i64 %650, 1
  %665 = getelementptr inbounds %"class.dealii::Point", ptr %258, i64 %664
  %666 = load double, ptr %665, align 8, !tbaa !33
  %667 = fcmp oeq double %666, 0.000000e+00
  %668 = fcmp oeq double %666, 1.000000e+00
  %669 = or i1 %667, %668
  br i1 %669, label %670, label %674

670:                                              ; preds = %662
  %671 = getelementptr inbounds double, ptr %115, i64 %664
  %672 = load double, ptr %671, align 8, !tbaa !33
  %673 = fadd double %663, %672
  br label %674

674:                                              ; preds = %670, %662
  %675 = phi double [ %673, %670 ], [ %663, %662 ]
  %676 = add nuw nsw i64 %650, 2
  %677 = add i64 %652, 2
  %678 = icmp eq i64 %677, %341
  br i1 %678, label %354, label %649

679:                                              ; preds = %505, %251, %334, %374, %123, %369, %121
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi1EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi1EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi1EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12QAnisotropicILi1EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi1EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi2EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !64
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12QAnisotropicILi2EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !64
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12QAnisotropicILi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !109
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi1EE27ExcInvalidQuadratureFormulaD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #14 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #25
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: nounwind
declare noundef ptr @_ZNK6dealii13ExceptionBase4whatEv(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #15

declare void @_ZNK6dealii13ExceptionBase10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi2EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.8", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !64
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi2EE27ExcInvalidQuadratureFormulaD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #14 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #25
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii10QuadratureILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #0 comdat($_ZN6dealii10QuadratureILi3EED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !109
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii10QuadratureILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::Quadrature.16", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !109
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #23
  br label %11

11:                                               ; preds = %10, %6
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %12 unwind label %13

12:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

13:                                               ; preds = %11
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %14
}

; Function Attrs: nounwind
declare void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #15

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9QIteratedILi3EE27ExcInvalidQuadratureFormulaD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #14 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #25
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #16

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #17

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #17

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #12

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #19

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sqrt.f64(double) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #20

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x double> @llvm.masked.load.v4f64.p0(ptr nocapture, i32 immarg, <4 x i1>, <4 x double>) #21

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #4 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #8 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #9 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nofree nounwind }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #13 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #14 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #15 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #17 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #18 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #19 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #20 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #22 = { builtin allocsize(0) }
attributes #23 = { builtin nounwind }
attributes #24 = { noreturn nounwind }
attributes #25 = { nounwind }
attributes #26 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !11, i64 72}
!9 = !{!"_ZTSN6dealii10QuadratureILi1EEE", !10, i64 0, !11, i64 72, !23, i64 80, !27, i64 104}
!10 = !{!"_ZTSN6dealii11SubscriptorE", !11, i64 8, !13, i64 16, !21, i64 64}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !7, i64 0}
!13 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !14, i64 0}
!14 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !15, i64 0}
!15 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !16, i64 0, !18, i64 8}
!16 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !17, i64 0}
!17 = !{!"_ZTSSt4lessIPKcE"}
!18 = !{!"_ZTSSt15_Rb_tree_header", !19, i64 0, !22, i64 32}
!19 = !{!"_ZTSSt18_Rb_tree_node_base", !20, i64 0, !21, i64 8, !21, i64 16, !21, i64 24}
!20 = !{!"_ZTSSt14_Rb_tree_color", !12, i64 0}
!21 = !{!"any pointer", !12, i64 0}
!22 = !{!"long", !12, i64 0}
!23 = !{!"_ZTSSt6vectorIN6dealii5PointILi1EEESaIS2_EE", !24, i64 0}
!24 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi1EEESaIS2_EE", !25, i64 0}
!25 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi1EEESaIS2_EE12_Vector_implE", !26, i64 0}
!26 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi1EEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!27 = !{!"_ZTSSt6vectorIdSaIdEE", !28, i64 0}
!28 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !29, i64 0}
!29 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !30, i64 0}
!30 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!31 = !{!26, !21, i64 0}
!32 = !{!26, !21, i64 16}
!33 = !{!34, !34, i64 0}
!34 = !{!"double", !12, i64 0}
!35 = !{!26, !21, i64 8}
!36 = !{!30, !21, i64 0}
!37 = !{!30, !21, i64 16}
!38 = !{!30, !21, i64 8}
!39 = !{!"branch_weights", i32 1, i32 2000}
!40 = !{!21, !21, i64 0}
!41 = distinct !{!41, !42, !43}
!42 = !{!"llvm.loop.isvectorized", i32 1}
!43 = !{!"llvm.loop.unroll.runtime.disable"}
!44 = distinct !{!44, !42}
!45 = !{!"branch_weights", i32 2000, i32 1}
!46 = distinct !{!46, !42, !43}
!47 = distinct !{!47, !42}
!48 = distinct !{!48, !42, !43}
!49 = distinct !{!49, !42}
!50 = distinct !{!50, !42, !43}
!51 = distinct !{!51, !43, !42}
!52 = distinct !{!52, !42, !43}
!53 = distinct !{!53, !42}
!54 = distinct !{!54, !42, !43}
!55 = distinct !{!55, !42}
!56 = distinct !{!56, !42, !43}
!57 = distinct !{!57, !42}
!58 = !{!59, !11, i64 72}
!59 = !{!"_ZTSN6dealii10QuadratureILi2EEE", !10, i64 0, !11, i64 72, !60, i64 80, !27, i64 104}
!60 = !{!"_ZTSSt6vectorIN6dealii5PointILi2EEESaIS2_EE", !61, i64 0}
!61 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE", !62, i64 0}
!62 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE12_Vector_implE", !63, i64 0}
!63 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!64 = !{!63, !21, i64 0}
!65 = !{!63, !21, i64 16}
!66 = !{!63, !21, i64 8}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71, !72}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !69}
!73 = !{!74}
!74 = distinct !{!74, !69}
!75 = !{!76}
!76 = distinct !{!76, !69}
!77 = !{!78}
!78 = distinct !{!78, !69}
!79 = !{!72}
!80 = distinct !{!80, !42, !43}
!81 = distinct !{!81, !42}
!82 = distinct !{!82, !42}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87, !88}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !85}
!89 = !{!90}
!90 = distinct !{!90, !85}
!91 = !{!92}
!92 = distinct !{!92, !85}
!93 = !{!88}
!94 = !{!95}
!95 = distinct !{!95, !85}
!96 = distinct !{!96, !42, !43}
!97 = distinct !{!97, !42, !43}
!98 = distinct !{!98, !43, !42}
!99 = distinct !{!99, !42, !43}
!100 = distinct !{!100, !42}
!101 = distinct !{!101, !42, !43}
!102 = distinct !{!102, !42}
!103 = !{!104, !11, i64 72}
!104 = !{!"_ZTSN6dealii10QuadratureILi3EEE", !10, i64 0, !11, i64 72, !105, i64 80, !27, i64 104}
!105 = !{!"_ZTSSt6vectorIN6dealii5PointILi3EEESaIS2_EE", !106, i64 0}
!106 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE", !107, i64 0}
!107 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE12_Vector_implE", !108, i64 0}
!108 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!109 = !{!108, !21, i64 0}
!110 = !{!108, !21, i64 16}
!111 = !{!108, !21, i64 8}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116, !117}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !114}
!118 = !{!119}
!119 = distinct !{!119, !114}
!120 = !{!121}
!121 = distinct !{!121, !114}
!122 = !{!117}
!123 = distinct !{!123, !42, !43}
!124 = distinct !{!124, !42}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129, !130}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !127}
!131 = !{!132}
!132 = distinct !{!132, !127}
!133 = !{!134}
!134 = distinct !{!134, !127}
!135 = !{!136}
!136 = distinct !{!136, !127}
!137 = !{!130}
!138 = !{!139}
!139 = distinct !{!139, !127}
!140 = !{!141}
!141 = distinct !{!141, !127}
!142 = distinct !{!142, !42, !43}
!143 = distinct !{!143, !42}
!144 = distinct !{!144, !42, !43}
!145 = distinct !{!145, !43, !42}
!146 = distinct !{!146, !42, !43}
!147 = distinct !{!147, !42}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = !{!154, !149, !155}
!154 = distinct !{!154, !150}
!155 = distinct !{!155, !150}
!156 = !{!155}
!157 = !{!154}
!158 = !{!149, !155}
!159 = distinct !{!159, !42, !43}
!160 = distinct !{!160, !42}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165, !166}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !163}
!167 = !{!168}
!168 = distinct !{!168, !163}
!169 = !{!170}
!170 = distinct !{!170, !163}
!171 = !{!172}
!172 = distinct !{!172, !163}
!173 = !{!166}
!174 = distinct !{!174, !42, !43}
!175 = distinct !{!175, !42}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = !{!182, !177, !183}
!182 = distinct !{!182, !178}
!183 = distinct !{!183, !178}
!184 = !{!183}
!185 = !{!182}
!186 = !{!177, !183}
!187 = distinct !{!187, !42, !43}
!188 = distinct !{!188, !42}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193, !194}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !191}
!195 = !{!196}
!196 = distinct !{!196, !191}
!197 = !{!198}
!198 = distinct !{!198, !191}
!199 = !{!200}
!200 = distinct !{!200, !191}
!201 = !{!202}
!202 = distinct !{!202, !191}
!203 = !{!204}
!204 = distinct !{!204, !191}
!205 = !{!194}
!206 = distinct !{!206, !42, !43}
!207 = distinct !{!207, !42}
!208 = !{!209, !211}
!209 = distinct !{!209, !210, !"_ZNK6dealii5PointILi1EEplERKNS_6TensorILi1ELi1EEE: argument 0"}
!210 = distinct !{!210, !"_ZNK6dealii5PointILi1EEplERKNS_6TensorILi1ELi1EEE"}
!211 = distinct !{!211, !212, !"_ZN6dealii12GeometryInfoILi1EE25child_to_cell_coordinatesERKNS_5PointILi1EEEjNS_14RefinementCaseILi1EEE: argument 0"}
!212 = distinct !{!212, !"_ZN6dealii12GeometryInfoILi1EE25child_to_cell_coordinatesERKNS_5PointILi1EEEjNS_14RefinementCaseILi1EEE"}
!213 = distinct !{!213, !42, !43}
!214 = distinct !{!214, !215}
!215 = !{!"llvm.loop.unroll.disable"}
!216 = distinct !{!216, !42, !43}
!217 = distinct !{!217, !42}
!218 = distinct !{!218, !43, !42}
!219 = distinct !{!219, !42, !43}
!220 = distinct !{!220, !42}
!221 = !{!222, !11, i64 0}
!222 = !{!"_ZTSN6dealii10QProjectorILi1EE17DataSetDescriptorE", !11, i64 0}
!223 = !{!224}
!224 = distinct !{!224, !225}
!225 = distinct !{!225, !"LVerDomain"}
!226 = !{!227}
!227 = distinct !{!227, !225}
!228 = !{!229, !224}
!229 = distinct !{!229, !225}
!230 = distinct !{!230, !42, !43}
!231 = distinct !{!231, !42}
!232 = !{!233}
!233 = distinct !{!233, !234}
!234 = distinct !{!234, !"LVerDomain"}
!235 = !{!236}
!236 = distinct !{!236, !234}
!237 = !{!238, !233}
!238 = distinct !{!238, !234}
!239 = distinct !{!239, !42, !43}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = !{!246, !241}
!246 = distinct !{!246, !242}
!247 = distinct !{!247, !42, !43}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = !{!254, !249}
!254 = distinct !{!254, !250}
!255 = distinct !{!255, !42, !43}
!256 = !{!257}
!257 = distinct !{!257, !258}
!258 = distinct !{!258, !"LVerDomain"}
!259 = !{!260}
!260 = distinct !{!260, !258}
!261 = !{!262, !257}
!262 = distinct !{!262, !258}
!263 = distinct !{!263, !42, !43}
!264 = distinct !{!264, !42}
!265 = distinct !{!265, !42}
!266 = distinct !{!266, !42}
!267 = distinct !{!267, !42}
!268 = !{!269}
!269 = distinct !{!269, !270}
!270 = distinct !{!270, !"LVerDomain"}
!271 = distinct !{!271, !42, !43}
!272 = distinct !{!272, !215}
!273 = !{!274}
!274 = distinct !{!274, !275}
!275 = distinct !{!275, !"LVerDomain"}
!276 = distinct !{!276, !42, !43}
!277 = distinct !{!277, !215}
!278 = !{!279}
!279 = distinct !{!279, !280}
!280 = distinct !{!280, !"LVerDomain"}
!281 = distinct !{!281, !42, !43}
!282 = distinct !{!282, !215}
!283 = !{!284}
!284 = distinct !{!284, !285}
!285 = distinct !{!285, !"LVerDomain"}
!286 = distinct !{!286, !42, !43}
!287 = distinct !{!287, !215}
!288 = distinct !{!288, !42}
!289 = distinct !{!289, !42}
!290 = distinct !{!290, !42}
!291 = distinct !{!291, !42}
!292 = !{!293}
!293 = distinct !{!293, !294}
!294 = distinct !{!294, !"LVerDomain"}
!295 = distinct !{!295, !42, !43}
!296 = distinct !{!296, !215}
!297 = !{!298}
!298 = distinct !{!298, !299}
!299 = distinct !{!299, !"LVerDomain"}
!300 = distinct !{!300, !42, !43}
!301 = distinct !{!301, !215}
!302 = !{!303}
!303 = distinct !{!303, !304}
!304 = distinct !{!304, !"LVerDomain"}
!305 = distinct !{!305, !42, !43}
!306 = distinct !{!306, !215}
!307 = !{!308}
!308 = distinct !{!308, !309}
!309 = distinct !{!309, !"LVerDomain"}
!310 = distinct !{!310, !42, !43}
!311 = distinct !{!311, !215}
!312 = distinct !{!312, !42}
!313 = distinct !{!313, !42}
!314 = distinct !{!314, !42}
!315 = distinct !{!315, !42}
!316 = !{!317}
!317 = distinct !{!317, !318}
!318 = distinct !{!318, !"LVerDomain"}
!319 = distinct !{!319, !42, !43}
!320 = !{!321}
!321 = distinct !{!321, !322}
!322 = distinct !{!322, !"LVerDomain"}
!323 = distinct !{!323, !42, !43}
!324 = distinct !{!324, !42}
!325 = distinct !{!325, !42}
!326 = !{!327}
!327 = distinct !{!327, !328}
!328 = distinct !{!328, !"LVerDomain"}
!329 = distinct !{!329, !42, !43}
!330 = !{!331}
!331 = distinct !{!331, !332}
!332 = distinct !{!332, !"LVerDomain"}
!333 = distinct !{!333, !42, !43}
!334 = distinct !{!334, !42}
!335 = distinct !{!335, !42}
!336 = !{!337}
!337 = distinct !{!337, !338}
!338 = distinct !{!338, !"LVerDomain"}
!339 = distinct !{!339, !42, !43}
!340 = !{!341}
!341 = distinct !{!341, !342}
!342 = distinct !{!342, !"LVerDomain"}
!343 = distinct !{!343, !42, !43}
!344 = distinct !{!344, !42}
!345 = distinct !{!345, !42}
!346 = !{!347}
!347 = distinct !{!347, !348}
!348 = distinct !{!348, !"LVerDomain"}
!349 = distinct !{!349, !42, !43}
!350 = !{!351}
!351 = distinct !{!351, !352}
!352 = distinct !{!352, !"LVerDomain"}
!353 = distinct !{!353, !42, !43}
!354 = distinct !{!354, !42}
!355 = distinct !{!355, !42}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZN6dealii12GeometryInfoILi2EE25child_to_cell_coordinatesERKNS_5PointILi2EEEjNS_14RefinementCaseILi2EEE: argument 0"}
!358 = distinct !{!358, !"_ZN6dealii12GeometryInfoILi2EE25child_to_cell_coordinatesERKNS_5PointILi2EEEjNS_14RefinementCaseILi2EEE"}
!359 = distinct !{!359, !42, !43}
!360 = distinct !{!360, !42, !43}
!361 = distinct !{!361, !42}
!362 = distinct !{!362, !43, !42}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = !{!369}
!369 = distinct !{!369, !365}
!370 = !{!364, !367}
!371 = distinct !{!371, !42, !43}
!372 = distinct !{!372, !42}
!373 = !{!374, !11, i64 0}
!374 = !{!"_ZTSN6dealii10QProjectorILi2EE17DataSetDescriptorE", !11, i64 0}
!375 = !{!376}
!376 = distinct !{!376, !377}
!377 = distinct !{!377, !"LVerDomain"}
!378 = !{!379}
!379 = distinct !{!379, !377}
!380 = !{!381, !376}
!381 = distinct !{!381, !377}
!382 = distinct !{!382, !42, !43}
!383 = distinct !{!383, !42}
!384 = !{!385}
!385 = distinct !{!385, !386}
!386 = distinct !{!386, !"LVerDomain"}
!387 = !{!388}
!388 = distinct !{!388, !386}
!389 = !{!390, !385}
!390 = distinct !{!390, !386}
!391 = distinct !{!391, !42, !43}
!392 = !{!393}
!393 = distinct !{!393, !394}
!394 = distinct !{!394, !"LVerDomain"}
!395 = !{!396}
!396 = distinct !{!396, !394}
!397 = !{!398, !393}
!398 = distinct !{!398, !394}
!399 = distinct !{!399, !42, !43}
!400 = !{!401}
!401 = distinct !{!401, !402}
!402 = distinct !{!402, !"LVerDomain"}
!403 = !{!404}
!404 = distinct !{!404, !402}
!405 = !{!406, !401}
!406 = distinct !{!406, !402}
!407 = distinct !{!407, !42, !43}
!408 = !{!409}
!409 = distinct !{!409, !410}
!410 = distinct !{!410, !"LVerDomain"}
!411 = !{!412}
!412 = distinct !{!412, !410}
!413 = !{!414, !409}
!414 = distinct !{!414, !410}
!415 = distinct !{!415, !42, !43}
!416 = distinct !{!416, !42}
!417 = distinct !{!417, !42}
!418 = distinct !{!418, !42}
!419 = distinct !{!419, !42}
!420 = !{!421}
!421 = distinct !{!421, !422}
!422 = distinct !{!422, !"LVerDomain"}
!423 = !{!424, !425, !426, !427}
!424 = distinct !{!424, !422}
!425 = distinct !{!425, !422}
!426 = distinct !{!426, !422}
!427 = distinct !{!427, !422}
!428 = !{!424}
!429 = !{!425, !426, !427}
!430 = !{!425}
!431 = !{!426, !427}
!432 = distinct !{!432, !42, !43}
!433 = distinct !{!433, !42}
!434 = !{!435}
!435 = distinct !{!435, !436}
!436 = distinct !{!436, !"LVerDomain"}
!437 = !{!438, !439, !440, !441}
!438 = distinct !{!438, !436}
!439 = distinct !{!439, !436}
!440 = distinct !{!440, !436}
!441 = distinct !{!441, !436}
!442 = !{!438}
!443 = !{!439, !440, !441}
!444 = !{!439}
!445 = !{!440, !441}
!446 = distinct !{!446, !42, !43}
!447 = distinct !{!447, !42}
!448 = !{!449}
!449 = distinct !{!449, !450}
!450 = distinct !{!450, !"LVerDomain"}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZN6dealii12GeometryInfoILi3EE25child_to_cell_coordinatesERKNS_5PointILi3EEEjNS_14RefinementCaseILi3EEE: argument 0"}
!453 = distinct !{!453, !"_ZN6dealii12GeometryInfoILi3EE25child_to_cell_coordinatesERKNS_5PointILi3EEEjNS_14RefinementCaseILi3EEE"}
!454 = distinct !{!454, !42, !43}
!455 = distinct !{!455, !42, !43}
!456 = distinct !{!456, !42}
!457 = distinct !{!457, !43, !42}
!458 = !{!459}
!459 = distinct !{!459, !460}
!460 = distinct !{!460, !"LVerDomain"}
!461 = !{!462}
!462 = distinct !{!462, !460}
!463 = !{!464}
!464 = distinct !{!464, !460}
!465 = !{!459, !462}
!466 = distinct !{!466, !42, !43}
!467 = distinct !{!467, !42}
!468 = !{!469, !11, i64 0}
!469 = !{!"_ZTSN6dealii10QProjectorILi3EE17DataSetDescriptorE", !11, i64 0}
!470 = !{!11, !11, i64 0}
!471 = !{!472}
!472 = distinct !{!472, !473}
!473 = distinct !{!473, !"LVerDomain"}
!474 = !{!475}
!475 = distinct !{!475, !473}
!476 = !{!477, !472}
!477 = distinct !{!477, !473}
!478 = distinct !{!478, !42, !43}
!479 = distinct !{!479, !42}
!480 = !{!481}
!481 = distinct !{!481, !482}
!482 = distinct !{!482, !"LVerDomain"}
!483 = !{!484}
!484 = distinct !{!484, !482}
!485 = !{!486, !481}
!486 = distinct !{!486, !482}
!487 = distinct !{!487, !42, !43}
!488 = !{!489}
!489 = distinct !{!489, !490}
!490 = distinct !{!490, !"LVerDomain"}
!491 = !{!492}
!492 = distinct !{!492, !490}
!493 = !{!494, !489}
!494 = distinct !{!494, !490}
!495 = distinct !{!495, !42, !43}
!496 = !{!497}
!497 = distinct !{!497, !498}
!498 = distinct !{!498, !"LVerDomain"}
!499 = !{!500}
!500 = distinct !{!500, !498}
!501 = !{!502, !497}
!502 = distinct !{!502, !498}
!503 = distinct !{!503, !42, !43}
!504 = !{!505}
!505 = distinct !{!505, !506}
!506 = distinct !{!506, !"LVerDomain"}
!507 = !{!508}
!508 = distinct !{!508, !506}
!509 = !{!510, !505}
!510 = distinct !{!510, !506}
!511 = distinct !{!511, !42, !43}
!512 = distinct !{!512, !42}
!513 = distinct !{!513, !42}
!514 = distinct !{!514, !42}
!515 = distinct !{!515, !42}
!516 = !{!517, !11, i64 72}
!517 = !{!"_ZTSN6dealii10QuadratureILi0EEE", !10, i64 0, !11, i64 72, !518, i64 80, !27, i64 104}
!518 = !{!"_ZTSSt6vectorIN6dealii5PointILi0EEESaIS2_EE", !519, i64 0}
!519 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi0EEESaIS2_EE", !520, i64 0}
!520 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi0EEESaIS2_EE12_Vector_implE", !521, i64 0}
!521 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi0EEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!522 = !{!521, !21, i64 0}
!523 = !{!524}
!524 = distinct !{!524, !525}
!525 = distinct !{!525, !"LVerDomain"}
!526 = distinct !{!526, !42, !43}
!527 = distinct !{!527, !215}
!528 = !{!529}
!529 = distinct !{!529, !530}
!530 = distinct !{!530, !"LVerDomain"}
!531 = distinct !{!531, !42, !43}
!532 = distinct !{!532, !215}
!533 = !{!534}
!534 = distinct !{!534, !535}
!535 = distinct !{!535, !"LVerDomain"}
!536 = distinct !{!536, !42, !43}
!537 = distinct !{!537, !215}
!538 = !{!539}
!539 = distinct !{!539, !540}
!540 = distinct !{!540, !"LVerDomain"}
!541 = distinct !{!541, !42, !43}
!542 = distinct !{!542, !215}
!543 = distinct !{!543, !42}
!544 = distinct !{!544, !42}
!545 = distinct !{!545, !42}
!546 = distinct !{!546, !42}
!547 = !{!548}
!548 = distinct !{!548, !549}
!549 = distinct !{!549, !"LVerDomain"}
!550 = distinct !{!550, !42, !43}
!551 = !{!552}
!552 = distinct !{!552, !553}
!553 = distinct !{!553, !"LVerDomain"}
!554 = distinct !{!554, !42, !43}
!555 = distinct !{!555, !42}
!556 = distinct !{!556, !42}
!557 = !{!558}
!558 = distinct !{!558, !559}
!559 = distinct !{!559, !"LVerDomain"}
!560 = distinct !{!560, !42, !43}
!561 = !{!562}
!562 = distinct !{!562, !563}
!563 = distinct !{!563, !"LVerDomain"}
!564 = distinct !{!564, !42, !43}
!565 = distinct !{!565, !42}
!566 = distinct !{!566, !42}
!567 = !{!568}
!568 = distinct !{!568, !569}
!569 = distinct !{!569, !"LVerDomain"}
!570 = distinct !{!570, !42, !43}
!571 = !{!572}
!572 = distinct !{!572, !573}
!573 = distinct !{!573, !"LVerDomain"}
!574 = distinct !{!574, !42, !43}
!575 = distinct !{!575, !42}
!576 = distinct !{!576, !42}
!577 = !{!578}
!578 = distinct !{!578, !579}
!579 = distinct !{!579, !"LVerDomain"}
!580 = distinct !{!580, !42, !43}
!581 = !{!582}
!582 = distinct !{!582, !583}
!583 = distinct !{!583, !"LVerDomain"}
!584 = distinct !{!584, !42, !43}
!585 = distinct !{!585, !42}
!586 = distinct !{!586, !42}
!587 = !{!588}
!588 = distinct !{!588, !589}
!589 = distinct !{!589, !"LVerDomain"}
!590 = !{!591, !592, !593, !594}
!591 = distinct !{!591, !589}
!592 = distinct !{!592, !589}
!593 = distinct !{!593, !589}
!594 = distinct !{!594, !589}
!595 = !{!591}
!596 = !{!592, !593, !594}
!597 = !{!592}
!598 = !{!593, !594}
!599 = distinct !{!599, !42, !43}
!600 = distinct !{!600, !42}
!601 = !{!"branch_weights", i32 1, i32 1048575}
!602 = distinct !{!602, !42, !43}
!603 = distinct !{!603, !43, !42}
!604 = distinct !{!604, !42, !43}
!605 = distinct !{!605, !43, !42}
!606 = distinct !{!606, !42, !43}
!607 = distinct !{!607, !42}
!608 = distinct !{!608, !42, !43}
!609 = distinct !{!609, !43, !42}
!610 = !{!611}
!611 = distinct !{!611, !612}
!612 = distinct !{!612, !"LVerDomain"}
!613 = !{!614, !615}
!614 = distinct !{!614, !612}
!615 = distinct !{!615, !612}
!616 = !{!614}
!617 = !{!615}
!618 = !{!619}
!619 = distinct !{!619, !612}
!620 = distinct !{!620, !42, !43}
!621 = distinct !{!621, !42, !43}
!622 = distinct !{!622, !42}
!623 = distinct !{!623, !42}
